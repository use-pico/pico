(async ()=>{
    function X$(t, e) {
        for(var n = 0; n < e.length; n++){
            const r = e[n];
            if (typeof r != "string" && !Array.isArray(r)) {
                for(const i in r)if (i !== "default" && !(i in t)) {
                    const s = Object.getOwnPropertyDescriptor(r, i);
                    s && Object.defineProperty(t, i, s.get ? s : {
                        enumerable: !0,
                        get: ()=>r[i]
                    });
                }
            }
        }
        return Object.freeze(Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }));
    }
    (function() {
        const e = document.createElement("link").relList;
        if (e && e.supports && e.supports("modulepreload")) return;
        for (const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);
        new MutationObserver((i)=>{
            for (const s of i)if (s.type === "childList") for (const o of s.addedNodes)o.tagName === "LINK" && o.rel === "modulepreload" && r(o);
        }).observe(document, {
            childList: !0,
            subtree: !0
        });
        function n(i) {
            const s = {};
            return i.integrity && (s.integrity = i.integrity), i.referrerPolicy && (s.referrerPolicy = i.referrerPolicy), i.crossOrigin === "use-credentials" ? s.credentials = "include" : i.crossOrigin === "anonymous" ? s.credentials = "omit" : s.credentials = "same-origin", s;
        }
        function r(i) {
            if (i.ep) return;
            i.ep = !0;
            const s = n(i);
            fetch(i.href, s);
        }
    })();
    var Gp = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
    function Go(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
    }
    function K$(t) {
        if (t.__esModule) return t;
        var e = t.default;
        if (typeof e == "function") {
            var n = function r() {
                return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
            };
            n.prototype = e.prototype;
        } else n = {};
        return Object.defineProperty(n, "__esModule", {
            value: !0
        }), Object.keys(t).forEach(function(r) {
            var i = Object.getOwnPropertyDescriptor(t, r);
            Object.defineProperty(n, r, i.get ? i : {
                enumerable: !0,
                get: function() {
                    return t[r];
                }
            });
        }), n;
    }
    var SC = {
        exports: {}
    }, Vv = {}, EC = {
        exports: {}
    }, Yn = {};
    var aD;
    function Y$() {
        if (aD) return Yn;
        aD = 1;
        var t = Symbol.for("react.element"), e = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), o = Symbol.for("react.context"), a = Symbol.for("react.forward_ref"), l = Symbol.for("react.suspense"), c = Symbol.for("react.memo"), u = Symbol.for("react.lazy"), f = Symbol.iterator;
        function h(H) {
            return H === null || typeof H != "object" ? null : (H = f && H[f] || H["@@iterator"], typeof H == "function" ? H : null);
        }
        var m = {
            isMounted: function() {
                return !1;
            },
            enqueueForceUpdate: function() {},
            enqueueReplaceState: function() {},
            enqueueSetState: function() {}
        }, v = Object.assign, _ = {};
        function w(H, se, le) {
            this.props = H, this.context = se, this.refs = _, this.updater = le || m;
        }
        w.prototype.isReactComponent = {}, w.prototype.setState = function(H, se) {
            if (typeof H != "object" && typeof H != "function" && H != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            this.updater.enqueueSetState(this, H, se, "setState");
        }, w.prototype.forceUpdate = function(H) {
            this.updater.enqueueForceUpdate(this, H, "forceUpdate");
        };
        function b() {}
        b.prototype = w.prototype;
        function M(H, se, le) {
            this.props = H, this.context = se, this.refs = _, this.updater = le || m;
        }
        var E = M.prototype = new b;
        E.constructor = M, v(E, w.prototype), E.isPureReactComponent = !0;
        var T = Array.isArray, P = Object.prototype.hasOwnProperty, A = {
            current: null
        }, O = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function D(H, se, le) {
            var ne, ue = {}, ge = null, ye = null;
            if (se != null) for(ne in se.ref !== void 0 && (ye = se.ref), se.key !== void 0 && (ge = "" + se.key), se)P.call(se, ne) && !O.hasOwnProperty(ne) && (ue[ne] = se[ne]);
            var _e = arguments.length - 2;
            if (_e === 1) ue.children = le;
            else if (1 < _e) {
                for(var Te = Array(_e), Re = 0; Re < _e; Re++)Te[Re] = arguments[Re + 2];
                ue.children = Te;
            }
            if (H && H.defaultProps) for(ne in _e = H.defaultProps, _e)ue[ne] === void 0 && (ue[ne] = _e[ne]);
            return {
                $$typeof: t,
                type: H,
                key: ge,
                ref: ye,
                props: ue,
                _owner: A.current
            };
        }
        function R(H, se) {
            return {
                $$typeof: t,
                type: H.type,
                key: se,
                ref: H.ref,
                props: H.props,
                _owner: H._owner
            };
        }
        function N(H) {
            return typeof H == "object" && H !== null && H.$$typeof === t;
        }
        function k(H) {
            var se = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + H.replace(/[=:]/g, function(le) {
                return se[le];
            });
        }
        var U = /\/+/g;
        function B(H, se) {
            return typeof H == "object" && H !== null && H.key != null ? k("" + H.key) : se.toString(36);
        }
        function j(H, se, le, ne, ue) {
            var ge = typeof H;
            (ge === "undefined" || ge === "boolean") && (H = null);
            var ye = !1;
            if (H === null) ye = !0;
            else switch(ge){
                case "string":
                case "number":
                    ye = !0;
                    break;
                case "object":
                    switch(H.$$typeof){
                        case t:
                        case e:
                            ye = !0;
                    }
            }
            if (ye) return ye = H, ue = ue(ye), H = ne === "" ? "." + B(ye, 0) : ne, T(ue) ? (le = "", H != null && (le = H.replace(U, "$&/") + "/"), j(ue, se, le, "", function(Re) {
                return Re;
            })) : ue != null && (N(ue) && (ue = R(ue, le + (!ue.key || ye && ye.key === ue.key ? "" : ("" + ue.key).replace(U, "$&/") + "/") + H)), se.push(ue)), 1;
            if (ye = 0, ne = ne === "" ? "." : ne + ":", T(H)) for(var _e = 0; _e < H.length; _e++){
                ge = H[_e];
                var Te = ne + B(ge, _e);
                ye += j(ge, se, le, Te, ue);
            }
            else if (Te = h(H), typeof Te == "function") for(H = Te.call(H), _e = 0; !(ge = H.next()).done;)ge = ge.value, Te = ne + B(ge, _e++), ye += j(ge, se, le, Te, ue);
            else if (ge === "object") throw se = String(H), Error("Objects are not valid as a React child (found: " + (se === "[object Object]" ? "object with keys {" + Object.keys(H).join(", ") + "}" : se) + "). If you meant to render a collection of children, use an array instead.");
            return ye;
        }
        function K(H, se, le) {
            if (H == null) return H;
            var ne = [], ue = 0;
            return j(H, ne, "", "", function(ge) {
                return se.call(le, ge, ue++);
            }), ne;
        }
        function q(H) {
            if (H._status === -1) {
                var se = H._result;
                se = se(), se.then(function(le) {
                    (H._status === 0 || H._status === -1) && (H._status = 1, H._result = le);
                }, function(le) {
                    (H._status === 0 || H._status === -1) && (H._status = 2, H._result = le);
                }), H._status === -1 && (H._status = 0, H._result = se);
            }
            if (H._status === 1) return H._result.default;
            throw H._result;
        }
        var ee = {
            current: null
        }, W = {
            transition: null
        }, Z = {
            ReactCurrentDispatcher: ee,
            ReactCurrentBatchConfig: W,
            ReactCurrentOwner: A
        };
        function $() {
            throw Error("act(...) is not supported in production builds of React.");
        }
        return Yn.Children = {
            map: K,
            forEach: function(H, se, le) {
                K(H, function() {
                    se.apply(this, arguments);
                }, le);
            },
            count: function(H) {
                var se = 0;
                return K(H, function() {
                    se++;
                }), se;
            },
            toArray: function(H) {
                return K(H, function(se) {
                    return se;
                }) || [];
            },
            only: function(H) {
                if (!N(H)) throw Error("React.Children.only expected to receive a single React element child.");
                return H;
            }
        }, Yn.Component = w, Yn.Fragment = n, Yn.Profiler = i, Yn.PureComponent = M, Yn.StrictMode = r, Yn.Suspense = l, Yn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Z, Yn.act = $, Yn.cloneElement = function(H, se, le) {
            if (H == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + H + ".");
            var ne = v({}, H.props), ue = H.key, ge = H.ref, ye = H._owner;
            if (se != null) {
                if (se.ref !== void 0 && (ge = se.ref, ye = A.current), se.key !== void 0 && (ue = "" + se.key), H.type && H.type.defaultProps) var _e = H.type.defaultProps;
                for(Te in se)P.call(se, Te) && !O.hasOwnProperty(Te) && (ne[Te] = se[Te] === void 0 && _e !== void 0 ? _e[Te] : se[Te]);
            }
            var Te = arguments.length - 2;
            if (Te === 1) ne.children = le;
            else if (1 < Te) {
                _e = Array(Te);
                for(var Re = 0; Re < Te; Re++)_e[Re] = arguments[Re + 2];
                ne.children = _e;
            }
            return {
                $$typeof: t,
                type: H.type,
                key: ue,
                ref: ge,
                props: ne,
                _owner: ye
            };
        }, Yn.createContext = function(H) {
            return H = {
                $$typeof: o,
                _currentValue: H,
                _currentValue2: H,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null
            }, H.Provider = {
                $$typeof: s,
                _context: H
            }, H.Consumer = H;
        }, Yn.createElement = D, Yn.createFactory = function(H) {
            var se = D.bind(null, H);
            return se.type = H, se;
        }, Yn.createRef = function() {
            return {
                current: null
            };
        }, Yn.forwardRef = function(H) {
            return {
                $$typeof: a,
                render: H
            };
        }, Yn.isValidElement = N, Yn.lazy = function(H) {
            return {
                $$typeof: u,
                _payload: {
                    _status: -1,
                    _result: H
                },
                _init: q
            };
        }, Yn.memo = function(H, se) {
            return {
                $$typeof: c,
                type: H,
                compare: se === void 0 ? null : se
            };
        }, Yn.startTransition = function(H) {
            var se = W.transition;
            W.transition = {};
            try {
                H();
            } finally{
                W.transition = se;
            }
        }, Yn.unstable_act = $, Yn.useCallback = function(H, se) {
            return ee.current.useCallback(H, se);
        }, Yn.useContext = function(H) {
            return ee.current.useContext(H);
        }, Yn.useDebugValue = function() {}, Yn.useDeferredValue = function(H) {
            return ee.current.useDeferredValue(H);
        }, Yn.useEffect = function(H, se) {
            return ee.current.useEffect(H, se);
        }, Yn.useId = function() {
            return ee.current.useId();
        }, Yn.useImperativeHandle = function(H, se, le) {
            return ee.current.useImperativeHandle(H, se, le);
        }, Yn.useInsertionEffect = function(H, se) {
            return ee.current.useInsertionEffect(H, se);
        }, Yn.useLayoutEffect = function(H, se) {
            return ee.current.useLayoutEffect(H, se);
        }, Yn.useMemo = function(H, se) {
            return ee.current.useMemo(H, se);
        }, Yn.useReducer = function(H, se, le) {
            return ee.current.useReducer(H, se, le);
        }, Yn.useRef = function(H) {
            return ee.current.useRef(H);
        }, Yn.useState = function(H) {
            return ee.current.useState(H);
        }, Yn.useSyncExternalStore = function(H, se, le) {
            return ee.current.useSyncExternalStore(H, se, le);
        }, Yn.useTransition = function() {
            return ee.current.useTransition();
        }, Yn.version = "18.3.1", Yn;
    }
    var lD;
    function Ry() {
        return lD || (lD = 1, EC.exports = Y$()), EC.exports;
    }
    var cD;
    function Z$() {
        if (cD) return Vv;
        cD = 1;
        var t = Ry(), e = Symbol.for("react.element"), n = Symbol.for("react.fragment"), r = Object.prototype.hasOwnProperty, i = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, s = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function o(a, l, c) {
            var u, f = {}, h = null, m = null;
            c !== void 0 && (h = "" + c), l.key !== void 0 && (h = "" + l.key), l.ref !== void 0 && (m = l.ref);
            for(u in l)r.call(l, u) && !s.hasOwnProperty(u) && (f[u] = l[u]);
            if (a && a.defaultProps) for(u in l = a.defaultProps, l)f[u] === void 0 && (f[u] = l[u]);
            return {
                $$typeof: e,
                type: a,
                key: h,
                ref: m,
                props: f,
                _owner: i.current
            };
        }
        return Vv.Fragment = n, Vv.jsx = o, Vv.jsxs = o, Vv;
    }
    var uD;
    function J$() {
        return uD || (uD = 1, SC.exports = Z$()), SC.exports;
    }
    var x = J$(), Iy = class {
        constructor(){
            this.listeners = new Set, this.subscribe = this.subscribe.bind(this);
        }
        subscribe(t) {
            return this.listeners.add(t), this.onSubscribe(), ()=>{
                this.listeners.delete(t), this.onUnsubscribe();
            };
        }
        hasListeners() {
            return this.listeners.size > 0;
        }
        onSubscribe() {}
        onUnsubscribe() {}
    }, gm = typeof window > "u" || "Deno" in globalThis;
    function wl() {}
    function Q$(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function xN(t) {
        return typeof t == "number" && t >= 0 && t !== 1 / 0;
    }
    function fB(t, e) {
        return Math.max(t + (e || 0) - Date.now(), 0);
    }
    function z0(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function lc(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function dD(t, e) {
        const { type: n = "all", exact: r, fetchStatus: i, predicate: s, queryKey: o, stale: a } = t;
        if (o) {
            if (r) {
                if (e.queryHash !== sP(o, e.options)) return !1;
            } else if (!ab(e.queryKey, o)) return !1;
        }
        if (n !== "all") {
            const l = e.isActive();
            if (n === "active" && !l || n === "inactive" && l) return !1;
        }
        return !(typeof a == "boolean" && e.isStale() !== a || i && i !== e.state.fetchStatus || s && !s(e));
    }
    function fD(t, e) {
        const { exact: n, status: r, predicate: i, mutationKey: s } = t;
        if (s) {
            if (!e.options.mutationKey) return !1;
            if (n) {
                if (ym(e.options.mutationKey) !== ym(s)) return !1;
            } else if (!ab(e.options.mutationKey, s)) return !1;
        }
        return !(r && e.state.status !== r || i && !i(e));
    }
    function sP(t, e) {
        return (e?.queryKeyHashFn || ym)(t);
    }
    function ym(t) {
        return JSON.stringify(t, (e, n)=>bN(n) ? Object.keys(n).sort().reduce((r, i)=>(r[i] = n[i], r), {}) : n);
    }
    function ab(t, e) {
        return t === e ? !0 : typeof t != typeof e ? !1 : t && e && typeof t == "object" && typeof e == "object" ? !Object.keys(e).some((n)=>!ab(t[n], e[n])) : !1;
    }
    function oP(t, e) {
        if (t === e) return t;
        const n = hD(t) && hD(e);
        if (n || bN(t) && bN(e)) {
            const r = n ? t : Object.keys(t), i = r.length, s = n ? e : Object.keys(e), o = s.length, a = n ? [] : {};
            let l = 0;
            for(let c = 0; c < o; c++){
                const u = n ? c : s[c];
                (!n && r.includes(u) || n) && t[u] === void 0 && e[u] === void 0 ? (a[u] = void 0, l++) : (a[u] = oP(t[u], e[u]), a[u] === t[u] && t[u] !== void 0 && l++);
            }
            return i === o && l === i ? t : a;
        }
        return e;
    }
    function mE(t, e) {
        if (!e || Object.keys(t).length !== Object.keys(e).length) return !1;
        for(const n in t)if (t[n] !== e[n]) return !1;
        return !0;
    }
    function hD(t) {
        return Array.isArray(t) && t.length === Object.keys(t).length;
    }
    function bN(t) {
        if (!pD(t)) return !1;
        const e = t.constructor;
        if (e === void 0) return !0;
        const n = e.prototype;
        return !(!pD(n) || !n.hasOwnProperty("isPrototypeOf") || Object.getPrototypeOf(t) !== Object.prototype);
    }
    function pD(t) {
        return Object.prototype.toString.call(t) === "[object Object]";
    }
    function eG(t) {
        return new Promise((e)=>{
            setTimeout(e, t);
        });
    }
    function wN(t, e, n) {
        return typeof n.structuralSharing == "function" ? n.structuralSharing(t, e) : n.structuralSharing !== !1 ? oP(t, e) : e;
    }
    function tG(t) {
        return t;
    }
    function nG(t, e, n = 0) {
        const r = [
            ...t,
            e
        ];
        return n && r.length > n ? r.slice(1) : r;
    }
    function rG(t, e, n = 0) {
        const r = [
            e,
            ...t
        ];
        return n && r.length > n ? r.slice(0, -1) : r;
    }
    var aP = Symbol();
    function hB(t, e) {
        return !t.queryFn && e?.initialPromise ? ()=>e.initialPromise : !t.queryFn || t.queryFn === aP ? ()=>Promise.reject(new Error(`Missing queryFn: '${t.queryHash}'`)) : t.queryFn;
    }
    var iG = class extends Iy {
        #e;
        #t;
        #n;
        constructor(){
            super(), this.#n = (t)=>{
                if (!gm && window.addEventListener) {
                    const e = ()=>t();
                    return window.addEventListener("visibilitychange", e, !1), ()=>{
                        window.removeEventListener("visibilitychange", e);
                    };
                }
            };
        }
        onSubscribe() {
            this.#t || this.setEventListener(this.#n);
        }
        onUnsubscribe() {
            this.hasListeners() || (this.#t?.(), this.#t = void 0);
        }
        setEventListener(t) {
            this.#n = t, this.#t?.(), this.#t = t((e)=>{
                typeof e == "boolean" ? this.setFocused(e) : this.onFocus();
            });
        }
        setFocused(t) {
            this.#e !== t && (this.#e = t, this.onFocus());
        }
        onFocus() {
            const t = this.isFocused();
            this.listeners.forEach((e)=>{
                e(t);
            });
        }
        isFocused() {
            return typeof this.#e == "boolean" ? this.#e : globalThis.document?.visibilityState !== "hidden";
        }
    }, lP = new iG, sG = class extends Iy {
        #e = !0;
        #t;
        #n;
        constructor(){
            super(), this.#n = (t)=>{
                if (!gm && window.addEventListener) {
                    const e = ()=>t(!0), n = ()=>t(!1);
                    return window.addEventListener("online", e, !1), window.addEventListener("offline", n, !1), ()=>{
                        window.removeEventListener("online", e), window.removeEventListener("offline", n);
                    };
                }
            };
        }
        onSubscribe() {
            this.#t || this.setEventListener(this.#n);
        }
        onUnsubscribe() {
            this.hasListeners() || (this.#t?.(), this.#t = void 0);
        }
        setEventListener(t) {
            this.#n = t, this.#t?.(), this.#t = t(this.setOnline.bind(this));
        }
        setOnline(t) {
            this.#e !== t && (this.#e = t, this.listeners.forEach((n)=>{
                n(t);
            }));
        }
        isOnline() {
            return this.#e;
        }
    }, gE = new sG;
    function _N() {
        let t, e;
        const n = new Promise((i, s)=>{
            t = i, e = s;
        });
        n.status = "pending", n.catch(()=>{});
        function r(i) {
            Object.assign(n, i), delete n.resolve, delete n.reject;
        }
        return n.resolve = (i)=>{
            r({
                status: "fulfilled",
                value: i
            }), t(i);
        }, n.reject = (i)=>{
            r({
                status: "rejected",
                reason: i
            }), e(i);
        }, n;
    }
    function oG(t) {
        return Math.min(1e3 * 2 ** t, 3e4);
    }
    function pB(t) {
        return (t ?? "online") === "online" ? gE.isOnline() : !0;
    }
    var mB = class extends Error {
        constructor(t){
            super("CancelledError"), this.revert = t?.revert, this.silent = t?.silent;
        }
    };
    function MC(t) {
        return t instanceof mB;
    }
    function gB(t) {
        let e = !1, n = 0, r = !1, i;
        const s = _N(), o = (_)=>{
            r || (h(new mB(_)), t.abort?.());
        }, a = ()=>{
            e = !0;
        }, l = ()=>{
            e = !1;
        }, c = ()=>lP.isFocused() && (t.networkMode === "always" || gE.isOnline()) && t.canRun(), u = ()=>pB(t.networkMode) && t.canRun(), f = (_)=>{
            r || (r = !0, t.onSuccess?.(_), i?.(), s.resolve(_));
        }, h = (_)=>{
            r || (r = !0, t.onError?.(_), i?.(), s.reject(_));
        }, m = ()=>new Promise((_)=>{
                i = (w)=>{
                    (r || c()) && _(w);
                }, t.onPause?.();
            }).then(()=>{
                i = void 0, r || t.onContinue?.();
            }), v = ()=>{
            if (r) return;
            let _;
            const w = n === 0 ? t.initialPromise : void 0;
            try {
                _ = w ?? t.fn();
            } catch (b) {
                _ = Promise.reject(b);
            }
            Promise.resolve(_).then(f).catch((b)=>{
                if (r) return;
                const M = t.retry ?? (gm ? 0 : 3), E = t.retryDelay ?? oG, T = typeof E == "function" ? E(n, b) : E, P = M === !0 || typeof M == "number" && n < M || typeof M == "function" && M(n, b);
                if (e || !P) {
                    h(b);
                    return;
                }
                n++, t.onFail?.(n, b), eG(T).then(()=>c() ? void 0 : m()).then(()=>{
                    e ? h(b) : v();
                });
            });
        };
        return {
            promise: s,
            cancel: o,
            continue: ()=>(i?.(), s),
            cancelRetry: a,
            continueRetry: l,
            canStart: u,
            start: ()=>(u() ? v() : m().then(v), s)
        };
    }
    function aG() {
        let t = [], e = 0, n = (a)=>{
            a();
        }, r = (a)=>{
            a();
        }, i = (a)=>setTimeout(a, 0);
        const s = (a)=>{
            e ? t.push(a) : i(()=>{
                n(a);
            });
        }, o = ()=>{
            const a = t;
            t = [], a.length && i(()=>{
                r(()=>{
                    a.forEach((l)=>{
                        n(l);
                    });
                });
            });
        };
        return {
            batch: (a)=>{
                let l;
                e++;
                try {
                    l = a();
                } finally{
                    e--, e || o();
                }
                return l;
            },
            batchCalls: (a)=>(...l)=>{
                    s(()=>{
                        a(...l);
                    });
                },
            schedule: s,
            setNotifyFunction: (a)=>{
                n = a;
            },
            setBatchNotifyFunction: (a)=>{
                r = a;
            },
            setScheduler: (a)=>{
                i = a;
            }
        };
    }
    var Ki = aG(), yB = class {
        #e;
        destroy() {
            this.clearGcTimeout();
        }
        scheduleGc() {
            this.clearGcTimeout(), xN(this.gcTime) && (this.#e = setTimeout(()=>{
                this.optionalRemove();
            }, this.gcTime));
        }
        updateGcTime(t) {
            this.gcTime = Math.max(this.gcTime || 0, t ?? (gm ? 1 / 0 : 5 * 60 * 1e3));
        }
        clearGcTimeout() {
            this.#e && (clearTimeout(this.#e), this.#e = void 0);
        }
    }, lG = class extends yB {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c;
        #o;
        constructor(t){
            super(), this.#o = !1, this.#c = t.defaultOptions, this.setOptions(t.options), this.observers = [], this.#r = t.client, this.#n = this.#r.getQueryCache(), this.queryKey = t.queryKey, this.queryHash = t.queryHash, this.#e = cG(this.options), this.state = t.state ?? this.#e, this.scheduleGc();
        }
        get meta() {
            return this.options.meta;
        }
        get promise() {
            return this.#s?.promise;
        }
        setOptions(t) {
            this.options = {
                ...this.#c,
                ...t
            }, this.updateGcTime(this.options.gcTime);
        }
        optionalRemove() {
            !this.observers.length && this.state.fetchStatus === "idle" && this.#n.remove(this);
        }
        setData(t, e) {
            const n = wN(this.state.data, t, this.options);
            return this.#a({
                data: n,
                type: "success",
                dataUpdatedAt: e?.updatedAt,
                manual: e?.manual
            }), n;
        }
        setState(t, e) {
            this.#a({
                type: "setState",
                state: t,
                setStateOptions: e
            });
        }
        cancel(t) {
            const e = this.#s?.promise;
            return this.#s?.cancel(t), e ? e.then(wl).catch(wl) : Promise.resolve();
        }
        destroy() {
            super.destroy(), this.cancel({
                silent: !0
            });
        }
        reset() {
            this.destroy(), this.setState(this.#e);
        }
        isActive() {
            return this.observers.some((t)=>lc(t.options.enabled, this) !== !1);
        }
        isDisabled() {
            return this.getObserversCount() > 0 ? !this.isActive() : this.options.queryFn === aP || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
        }
        isStale() {
            return this.state.isInvalidated ? !0 : this.getObserversCount() > 0 ? this.observers.some((t)=>t.getCurrentResult().isStale) : this.state.data === void 0;
        }
        isStaleByTime(t = 0) {
            return this.state.isInvalidated || this.state.data === void 0 || !fB(this.state.dataUpdatedAt, t);
        }
        onFocus() {
            this.observers.find((e)=>e.shouldFetchOnWindowFocus())?.refetch({
                cancelRefetch: !1
            }), this.#s?.continue();
        }
        onOnline() {
            this.observers.find((e)=>e.shouldFetchOnReconnect())?.refetch({
                cancelRefetch: !1
            }), this.#s?.continue();
        }
        addObserver(t) {
            this.observers.includes(t) || (this.observers.push(t), this.clearGcTimeout(), this.#n.notify({
                type: "observerAdded",
                query: this,
                observer: t
            }));
        }
        removeObserver(t) {
            this.observers.includes(t) && (this.observers = this.observers.filter((e)=>e !== t), this.observers.length || (this.#s && (this.#o ? this.#s.cancel({
                revert: !0
            }) : this.#s.cancelRetry()), this.scheduleGc()), this.#n.notify({
                type: "observerRemoved",
                query: this,
                observer: t
            }));
        }
        getObserversCount() {
            return this.observers.length;
        }
        invalidate() {
            this.state.isInvalidated || this.#a({
                type: "invalidate"
            });
        }
        fetch(t, e) {
            if (this.state.fetchStatus !== "idle") {
                if (this.state.data !== void 0 && e?.cancelRefetch) this.cancel({
                    silent: !0
                });
                else if (this.#s) return this.#s.continueRetry(), this.#s.promise;
            }
            if (t && this.setOptions(t), !this.options.queryFn) {
                const a = this.observers.find((l)=>l.options.queryFn);
                a && this.setOptions(a.options);
            }
            const n = new AbortController, r = (a)=>{
                Object.defineProperty(a, "signal", {
                    enumerable: !0,
                    get: ()=>(this.#o = !0, n.signal)
                });
            }, i = ()=>{
                const a = hB(this.options, e), l = {
                    client: this.#r,
                    queryKey: this.queryKey,
                    meta: this.meta
                };
                return r(l), this.#o = !1, this.options.persister ? this.options.persister(a, l, this) : a(l);
            }, s = {
                fetchOptions: e,
                options: this.options,
                queryKey: this.queryKey,
                client: this.#r,
                state: this.state,
                fetchFn: i
            };
            r(s), this.options.behavior?.onFetch(s, this), this.#t = this.state, (this.state.fetchStatus === "idle" || this.state.fetchMeta !== s.fetchOptions?.meta) && this.#a({
                type: "fetch",
                meta: s.fetchOptions?.meta
            });
            const o = (a)=>{
                MC(a) && a.silent || this.#a({
                    type: "error",
                    error: a
                }), MC(a) || (this.#n.config.onError?.(a, this), this.#n.config.onSettled?.(this.state.data, a, this)), this.scheduleGc();
            };
            return this.#s = gB({
                initialPromise: e?.initialPromise,
                fn: s.fetchFn,
                abort: n.abort.bind(n),
                onSuccess: (a)=>{
                    if (a === void 0) {
                        o(new Error(`${this.queryHash} data is undefined`));
                        return;
                    }
                    try {
                        this.setData(a);
                    } catch (l) {
                        o(l);
                        return;
                    }
                    this.#n.config.onSuccess?.(a, this), this.#n.config.onSettled?.(a, this.state.error, this), this.scheduleGc();
                },
                onError: o,
                onFail: (a, l)=>{
                    this.#a({
                        type: "failed",
                        failureCount: a,
                        error: l
                    });
                },
                onPause: ()=>{
                    this.#a({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.#a({
                        type: "continue"
                    });
                },
                retry: s.options.retry,
                retryDelay: s.options.retryDelay,
                networkMode: s.options.networkMode,
                canRun: ()=>!0
            }), this.#s.start();
        }
        #a(t) {
            const e = (n)=>{
                switch(t.type){
                    case "failed":
                        return {
                            ...n,
                            fetchFailureCount: t.failureCount,
                            fetchFailureReason: t.error
                        };
                    case "pause":
                        return {
                            ...n,
                            fetchStatus: "paused"
                        };
                    case "continue":
                        return {
                            ...n,
                            fetchStatus: "fetching"
                        };
                    case "fetch":
                        return {
                            ...n,
                            ...vB(n.data, this.options),
                            fetchMeta: t.meta ?? null
                        };
                    case "success":
                        return {
                            ...n,
                            data: t.data,
                            dataUpdateCount: n.dataUpdateCount + 1,
                            dataUpdatedAt: t.dataUpdatedAt ?? Date.now(),
                            error: null,
                            isInvalidated: !1,
                            status: "success",
                            ...!t.manual && {
                                fetchStatus: "idle",
                                fetchFailureCount: 0,
                                fetchFailureReason: null
                            }
                        };
                    case "error":
                        const r = t.error;
                        return MC(r) && r.revert && this.#t ? {
                            ...this.#t,
                            fetchStatus: "idle"
                        } : {
                            ...n,
                            error: r,
                            errorUpdateCount: n.errorUpdateCount + 1,
                            errorUpdatedAt: Date.now(),
                            fetchFailureCount: n.fetchFailureCount + 1,
                            fetchFailureReason: r,
                            fetchStatus: "idle",
                            status: "error"
                        };
                    case "invalidate":
                        return {
                            ...n,
                            isInvalidated: !0
                        };
                    case "setState":
                        return {
                            ...n,
                            ...t.state
                        };
                }
            };
            this.state = e(this.state), Ki.batch(()=>{
                this.observers.forEach((n)=>{
                    n.onQueryUpdate();
                }), this.#n.notify({
                    query: this,
                    type: "updated",
                    action: t
                });
            });
        }
    };
    function vB(t, e) {
        return {
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchStatus: pB(e.networkMode) ? "fetching" : "paused",
            ...t === void 0 && {
                error: null,
                status: "pending"
            }
        };
    }
    function cG(t) {
        const e = typeof t.initialData == "function" ? t.initialData() : t.initialData, n = e !== void 0, r = n ? typeof t.initialDataUpdatedAt == "function" ? t.initialDataUpdatedAt() : t.initialDataUpdatedAt : 0;
        return {
            data: e,
            dataUpdateCount: 0,
            dataUpdatedAt: n ? r ?? Date.now() : 0,
            error: null,
            errorUpdateCount: 0,
            errorUpdatedAt: 0,
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchMeta: null,
            isInvalidated: !1,
            status: n ? "success" : "pending",
            fetchStatus: "idle"
        };
    }
    var uG = class extends Iy {
        constructor(t = {}){
            super(), this.config = t, this.#e = new Map;
        }
        #e;
        build(t, e, n) {
            const r = e.queryKey, i = e.queryHash ?? sP(r, e);
            let s = this.get(i);
            return s || (s = new lG({
                client: t,
                queryKey: r,
                queryHash: i,
                options: t.defaultQueryOptions(e),
                state: n,
                defaultOptions: t.getQueryDefaults(r)
            }), this.add(s)), s;
        }
        add(t) {
            this.#e.has(t.queryHash) || (this.#e.set(t.queryHash, t), this.notify({
                type: "added",
                query: t
            }));
        }
        remove(t) {
            const e = this.#e.get(t.queryHash);
            e && (t.destroy(), e === t && this.#e.delete(t.queryHash), this.notify({
                type: "removed",
                query: t
            }));
        }
        clear() {
            Ki.batch(()=>{
                this.getAll().forEach((t)=>{
                    this.remove(t);
                });
            });
        }
        get(t) {
            return this.#e.get(t);
        }
        getAll() {
            return [
                ...this.#e.values()
            ];
        }
        find(t) {
            const e = {
                exact: !0,
                ...t
            };
            return this.getAll().find((n)=>dD(e, n));
        }
        findAll(t = {}) {
            const e = this.getAll();
            return Object.keys(t).length > 0 ? e.filter((n)=>dD(t, n)) : e;
        }
        notify(t) {
            Ki.batch(()=>{
                this.listeners.forEach((e)=>{
                    e(t);
                });
            });
        }
        onFocus() {
            Ki.batch(()=>{
                this.getAll().forEach((t)=>{
                    t.onFocus();
                });
            });
        }
        onOnline() {
            Ki.batch(()=>{
                this.getAll().forEach((t)=>{
                    t.onOnline();
                });
            });
        }
    }, dG = class extends yB {
        #e;
        #t;
        #n;
        constructor(t){
            super(), this.mutationId = t.mutationId, this.#t = t.mutationCache, this.#e = [], this.state = t.state || xB(), this.setOptions(t.options), this.scheduleGc();
        }
        setOptions(t) {
            this.options = t, this.updateGcTime(this.options.gcTime);
        }
        get meta() {
            return this.options.meta;
        }
        addObserver(t) {
            this.#e.includes(t) || (this.#e.push(t), this.clearGcTimeout(), this.#t.notify({
                type: "observerAdded",
                mutation: this,
                observer: t
            }));
        }
        removeObserver(t) {
            this.#e = this.#e.filter((e)=>e !== t), this.scheduleGc(), this.#t.notify({
                type: "observerRemoved",
                mutation: this,
                observer: t
            });
        }
        optionalRemove() {
            this.#e.length || (this.state.status === "pending" ? this.scheduleGc() : this.#t.remove(this));
        }
        continue() {
            return this.#n?.continue() ?? this.execute(this.state.variables);
        }
        async execute(t) {
            this.#n = gB({
                fn: ()=>this.options.mutationFn ? this.options.mutationFn(t) : Promise.reject(new Error("No mutationFn found")),
                onFail: (r, i)=>{
                    this.#r({
                        type: "failed",
                        failureCount: r,
                        error: i
                    });
                },
                onPause: ()=>{
                    this.#r({
                        type: "pause"
                    });
                },
                onContinue: ()=>{
                    this.#r({
                        type: "continue"
                    });
                },
                retry: this.options.retry ?? 0,
                retryDelay: this.options.retryDelay,
                networkMode: this.options.networkMode,
                canRun: ()=>this.#t.canRun(this)
            });
            const e = this.state.status === "pending", n = !this.#n.canStart();
            try {
                if (!e) {
                    this.#r({
                        type: "pending",
                        variables: t,
                        isPaused: n
                    }), await this.#t.config.onMutate?.(t, this);
                    const i = await this.options.onMutate?.(t);
                    i !== this.state.context && this.#r({
                        type: "pending",
                        context: i,
                        variables: t,
                        isPaused: n
                    });
                }
                const r = await this.#n.start();
                return await this.#t.config.onSuccess?.(r, t, this.state.context, this), await this.options.onSuccess?.(r, t, this.state.context), await this.#t.config.onSettled?.(r, null, this.state.variables, this.state.context, this), await this.options.onSettled?.(r, null, t, this.state.context), this.#r({
                    type: "success",
                    data: r
                }), r;
            } catch (r) {
                try {
                    throw await this.#t.config.onError?.(r, t, this.state.context, this), await this.options.onError?.(r, t, this.state.context), await this.#t.config.onSettled?.(void 0, r, this.state.variables, this.state.context, this), await this.options.onSettled?.(void 0, r, t, this.state.context), r;
                } finally{
                    this.#r({
                        type: "error",
                        error: r
                    });
                }
            } finally{
                this.#t.runNext(this);
            }
        }
        #r(t) {
            const e = (n)=>{
                switch(t.type){
                    case "failed":
                        return {
                            ...n,
                            failureCount: t.failureCount,
                            failureReason: t.error
                        };
                    case "pause":
                        return {
                            ...n,
                            isPaused: !0
                        };
                    case "continue":
                        return {
                            ...n,
                            isPaused: !1
                        };
                    case "pending":
                        return {
                            ...n,
                            context: t.context,
                            data: void 0,
                            failureCount: 0,
                            failureReason: null,
                            error: null,
                            isPaused: t.isPaused,
                            status: "pending",
                            variables: t.variables,
                            submittedAt: Date.now()
                        };
                    case "success":
                        return {
                            ...n,
                            data: t.data,
                            failureCount: 0,
                            failureReason: null,
                            error: null,
                            status: "success",
                            isPaused: !1
                        };
                    case "error":
                        return {
                            ...n,
                            data: void 0,
                            error: t.error,
                            failureCount: n.failureCount + 1,
                            failureReason: t.error,
                            isPaused: !1,
                            status: "error"
                        };
                }
            };
            this.state = e(this.state), Ki.batch(()=>{
                this.#e.forEach((n)=>{
                    n.onMutationUpdate(t);
                }), this.#t.notify({
                    mutation: this,
                    type: "updated",
                    action: t
                });
            });
        }
    };
    function xB() {
        return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            failureReason: null,
            isPaused: !1,
            status: "idle",
            variables: void 0,
            submittedAt: 0
        };
    }
    var fG = class extends Iy {
        constructor(t = {}){
            super(), this.config = t, this.#e = new Set, this.#t = new Map, this.#n = 0;
        }
        #e;
        #t;
        #n;
        build(t, e, n) {
            const r = new dG({
                mutationCache: this,
                mutationId: ++this.#n,
                options: t.defaultMutationOptions(e),
                state: n
            });
            return this.add(r), r;
        }
        add(t) {
            this.#e.add(t);
            const e = Z_(t);
            if (typeof e == "string") {
                const n = this.#t.get(e);
                n ? n.push(t) : this.#t.set(e, [
                    t
                ]);
            }
            this.notify({
                type: "added",
                mutation: t
            });
        }
        remove(t) {
            if (this.#e.delete(t)) {
                const e = Z_(t);
                if (typeof e == "string") {
                    const n = this.#t.get(e);
                    if (n) if (n.length > 1) {
                        const r = n.indexOf(t);
                        r !== -1 && n.splice(r, 1);
                    } else n[0] === t && this.#t.delete(e);
                }
            }
            this.notify({
                type: "removed",
                mutation: t
            });
        }
        canRun(t) {
            const e = Z_(t);
            if (typeof e == "string") {
                const r = this.#t.get(e)?.find((i)=>i.state.status === "pending");
                return !r || r === t;
            } else return !0;
        }
        runNext(t) {
            const e = Z_(t);
            return typeof e == "string" ? this.#t.get(e)?.find((r)=>r !== t && r.state.isPaused)?.continue() ?? Promise.resolve() : Promise.resolve();
        }
        clear() {
            Ki.batch(()=>{
                this.#e.forEach((t)=>{
                    this.notify({
                        type: "removed",
                        mutation: t
                    });
                }), this.#e.clear(), this.#t.clear();
            });
        }
        getAll() {
            return Array.from(this.#e);
        }
        find(t) {
            const e = {
                exact: !0,
                ...t
            };
            return this.getAll().find((n)=>fD(e, n));
        }
        findAll(t = {}) {
            return this.getAll().filter((e)=>fD(t, e));
        }
        notify(t) {
            Ki.batch(()=>{
                this.listeners.forEach((e)=>{
                    e(t);
                });
            });
        }
        resumePausedMutations() {
            const t = this.getAll().filter((e)=>e.state.isPaused);
            return Ki.batch(()=>Promise.all(t.map((e)=>e.continue().catch(wl))));
        }
    };
    function Z_(t) {
        return t.options.scope?.id;
    }
    function mD(t) {
        return {
            onFetch: (e, n)=>{
                const r = e.options, i = e.fetchOptions?.meta?.fetchMore?.direction, s = e.state.data?.pages || [], o = e.state.data?.pageParams || [];
                let a = {
                    pages: [],
                    pageParams: []
                }, l = 0;
                const c = async ()=>{
                    let u = !1;
                    const f = (v)=>{
                        Object.defineProperty(v, "signal", {
                            enumerable: !0,
                            get: ()=>(e.signal.aborted ? u = !0 : e.signal.addEventListener("abort", ()=>{
                                    u = !0;
                                }), e.signal)
                        });
                    }, h = hB(e.options, e.fetchOptions), m = async (v, _, w)=>{
                        if (u) return Promise.reject();
                        if (_ == null && v.pages.length) return Promise.resolve(v);
                        const b = {
                            client: e.client,
                            queryKey: e.queryKey,
                            pageParam: _,
                            direction: w ? "backward" : "forward",
                            meta: e.options.meta
                        };
                        f(b);
                        const M = await h(b), { maxPages: E } = e.options, T = w ? rG : nG;
                        return {
                            pages: T(v.pages, M, E),
                            pageParams: T(v.pageParams, _, E)
                        };
                    };
                    if (i && s.length) {
                        const v = i === "backward", _ = v ? hG : gD, w = {
                            pages: s,
                            pageParams: o
                        }, b = _(r, w);
                        a = await m(w, b, v);
                    } else {
                        const v = t ?? s.length;
                        do {
                            const _ = l === 0 ? o[0] ?? r.initialPageParam : gD(r, a);
                            if (l > 0 && _ == null) break;
                            a = await m(a, _), l++;
                        }while (l < v);
                    }
                    return a;
                };
                e.options.persister ? e.fetchFn = ()=>e.options.persister?.(c, {
                        client: e.client,
                        queryKey: e.queryKey,
                        meta: e.options.meta,
                        signal: e.signal
                    }, n) : e.fetchFn = c;
            }
        };
    }
    function gD(t, { pages: e, pageParams: n }) {
        const r = e.length - 1;
        return e.length > 0 ? t.getNextPageParam(e[r], e, n[r], n) : void 0;
    }
    function hG(t, { pages: e, pageParams: n }) {
        return e.length > 0 ? t.getPreviousPageParam?.(e[0], e, n[0], n) : void 0;
    }
    var pG = class {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c;
        #o;
        #a;
        constructor(t = {}){
            this.#e = t.queryCache || new uG, this.#t = t.mutationCache || new fG, this.#n = t.defaultOptions || {}, this.#r = new Map, this.#s = new Map, this.#c = 0;
        }
        mount() {
            this.#c++, this.#c === 1 && (this.#o = lP.subscribe(async (t)=>{
                t && (await this.resumePausedMutations(), this.#e.onFocus());
            }), this.#a = gE.subscribe(async (t)=>{
                t && (await this.resumePausedMutations(), this.#e.onOnline());
            }));
        }
        unmount() {
            this.#c--, this.#c === 0 && (this.#o?.(), this.#o = void 0, this.#a?.(), this.#a = void 0);
        }
        isFetching(t) {
            return this.#e.findAll({
                ...t,
                fetchStatus: "fetching"
            }).length;
        }
        isMutating(t) {
            return this.#t.findAll({
                ...t,
                status: "pending"
            }).length;
        }
        getQueryData(t) {
            const e = this.defaultQueryOptions({
                queryKey: t
            });
            return this.#e.get(e.queryHash)?.state.data;
        }
        ensureQueryData(t) {
            const e = this.defaultQueryOptions(t), n = this.#e.build(this, e), r = n.state.data;
            return r === void 0 ? this.fetchQuery(t) : (t.revalidateIfStale && n.isStaleByTime(z0(e.staleTime, n)) && this.prefetchQuery(e), Promise.resolve(r));
        }
        getQueriesData(t) {
            return this.#e.findAll(t).map(({ queryKey: e, state: n })=>{
                const r = n.data;
                return [
                    e,
                    r
                ];
            });
        }
        setQueryData(t, e, n) {
            const r = this.defaultQueryOptions({
                queryKey: t
            }), s = this.#e.get(r.queryHash)?.state.data, o = Q$(e, s);
            if (o !== void 0) return this.#e.build(this, r).setData(o, {
                ...n,
                manual: !0
            });
        }
        setQueriesData(t, e, n) {
            return Ki.batch(()=>this.#e.findAll(t).map(({ queryKey: r })=>[
                        r,
                        this.setQueryData(r, e, n)
                    ]));
        }
        getQueryState(t) {
            const e = this.defaultQueryOptions({
                queryKey: t
            });
            return this.#e.get(e.queryHash)?.state;
        }
        removeQueries(t) {
            const e = this.#e;
            Ki.batch(()=>{
                e.findAll(t).forEach((n)=>{
                    e.remove(n);
                });
            });
        }
        resetQueries(t, e) {
            const n = this.#e, r = {
                type: "active",
                ...t
            };
            return Ki.batch(()=>(n.findAll(t).forEach((i)=>{
                    i.reset();
                }), this.refetchQueries(r, e)));
        }
        cancelQueries(t, e = {}) {
            const n = {
                revert: !0,
                ...e
            }, r = Ki.batch(()=>this.#e.findAll(t).map((i)=>i.cancel(n)));
            return Promise.all(r).then(wl).catch(wl);
        }
        invalidateQueries(t, e = {}) {
            return Ki.batch(()=>{
                if (this.#e.findAll(t).forEach((r)=>{
                    r.invalidate();
                }), t?.refetchType === "none") return Promise.resolve();
                const n = {
                    ...t,
                    type: t?.refetchType ?? t?.type ?? "active"
                };
                return this.refetchQueries(n, e);
            });
        }
        refetchQueries(t, e = {}) {
            const n = {
                ...e,
                cancelRefetch: e.cancelRefetch ?? !0
            }, r = Ki.batch(()=>this.#e.findAll(t).filter((i)=>!i.isDisabled()).map((i)=>{
                    let s = i.fetch(void 0, n);
                    return n.throwOnError || (s = s.catch(wl)), i.state.fetchStatus === "paused" ? Promise.resolve() : s;
                }));
            return Promise.all(r).then(wl);
        }
        fetchQuery(t) {
            const e = this.defaultQueryOptions(t);
            e.retry === void 0 && (e.retry = !1);
            const n = this.#e.build(this, e);
            return n.isStaleByTime(z0(e.staleTime, n)) ? n.fetch(e) : Promise.resolve(n.state.data);
        }
        prefetchQuery(t) {
            return this.fetchQuery(t).then(wl).catch(wl);
        }
        fetchInfiniteQuery(t) {
            return t.behavior = mD(t.pages), this.fetchQuery(t);
        }
        prefetchInfiniteQuery(t) {
            return this.fetchInfiniteQuery(t).then(wl).catch(wl);
        }
        ensureInfiniteQueryData(t) {
            return t.behavior = mD(t.pages), this.ensureQueryData(t);
        }
        resumePausedMutations() {
            return gE.isOnline() ? this.#t.resumePausedMutations() : Promise.resolve();
        }
        getQueryCache() {
            return this.#e;
        }
        getMutationCache() {
            return this.#t;
        }
        getDefaultOptions() {
            return this.#n;
        }
        setDefaultOptions(t) {
            this.#n = t;
        }
        setQueryDefaults(t, e) {
            this.#r.set(ym(t), {
                queryKey: t,
                defaultOptions: e
            });
        }
        getQueryDefaults(t) {
            const e = [
                ...this.#r.values()
            ], n = {};
            return e.forEach((r)=>{
                ab(t, r.queryKey) && Object.assign(n, r.defaultOptions);
            }), n;
        }
        setMutationDefaults(t, e) {
            this.#s.set(ym(t), {
                mutationKey: t,
                defaultOptions: e
            });
        }
        getMutationDefaults(t) {
            const e = [
                ...this.#s.values()
            ];
            let n = {};
            return e.forEach((r)=>{
                ab(t, r.mutationKey) && (n = {
                    ...n,
                    ...r.defaultOptions
                });
            }), n;
        }
        defaultQueryOptions(t) {
            if (t._defaulted) return t;
            const e = {
                ...this.#n.queries,
                ...this.getQueryDefaults(t.queryKey),
                ...t,
                _defaulted: !0
            };
            return e.queryHash || (e.queryHash = sP(e.queryKey, e)), e.refetchOnReconnect === void 0 && (e.refetchOnReconnect = e.networkMode !== "always"), e.throwOnError === void 0 && (e.throwOnError = !!e.suspense), !e.networkMode && e.persister && (e.networkMode = "offlineFirst"), e.queryFn === aP && (e.enabled = !1), e;
        }
        defaultMutationOptions(t) {
            return t?._defaulted ? t : {
                ...this.#n.mutations,
                ...t?.mutationKey && this.getMutationDefaults(t.mutationKey),
                ...t,
                _defaulted: !0
            };
        }
        clear() {
            this.#e.clear(), this.#t.clear();
        }
    }, mG = class extends Iy {
        constructor(t, e){
            super(), this.options = e, this.#e = t, this.#a = null, this.#o = _N(), this.options.experimental_prefetchInRender || this.#o.reject(new Error("experimental_prefetchInRender feature flag is not enabled")), this.bindMethods(), this.setOptions(e);
        }
        #e;
        #t = void 0;
        #n = void 0;
        #r = void 0;
        #s;
        #c;
        #o;
        #a;
        #u;
        #l;
        #i;
        #m;
        #g;
        #f;
        #h = new Set;
        bindMethods() {
            this.refetch = this.refetch.bind(this);
        }
        onSubscribe() {
            this.listeners.size === 1 && (this.#t.addObserver(this), yD(this.#t, this.options) ? this.#v() : this.updateResult(), this.#x());
        }
        onUnsubscribe() {
            this.hasListeners() || this.destroy();
        }
        shouldFetchOnReconnect() {
            return SN(this.#t, this.options, this.options.refetchOnReconnect);
        }
        shouldFetchOnWindowFocus() {
            return SN(this.#t, this.options, this.options.refetchOnWindowFocus);
        }
        destroy() {
            this.listeners = new Set, this.#_(), this.#E(), this.#t.removeObserver(this);
        }
        setOptions(t, e) {
            const n = this.options, r = this.#t;
            if (this.options = this.#e.defaultQueryOptions(t), this.options.enabled !== void 0 && typeof this.options.enabled != "boolean" && typeof this.options.enabled != "function" && typeof lc(this.options.enabled, this.#t) != "boolean") throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");
            this.#y(), this.#t.setOptions(this.options), n._defaulted && !mE(this.options, n) && this.#e.getQueryCache().notify({
                type: "observerOptionsUpdated",
                query: this.#t,
                observer: this
            });
            const i = this.hasListeners();
            i && vD(this.#t, r, this.options, n) && this.#v(), this.updateResult(e), i && (this.#t !== r || lc(this.options.enabled, this.#t) !== lc(n.enabled, this.#t) || z0(this.options.staleTime, this.#t) !== z0(n.staleTime, this.#t)) && this.#p();
            const s = this.#b();
            i && (this.#t !== r || lc(this.options.enabled, this.#t) !== lc(n.enabled, this.#t) || s !== this.#f) && this.#w(s);
        }
        getOptimisticResult(t) {
            const e = this.#e.getQueryCache().build(this.#e, t), n = this.createResult(e, t);
            return yG(this, n) && (this.#r = n, this.#c = this.options, this.#s = this.#t.state), n;
        }
        getCurrentResult() {
            return this.#r;
        }
        trackResult(t, e) {
            const n = {};
            return Object.keys(t).forEach((r)=>{
                Object.defineProperty(n, r, {
                    configurable: !1,
                    enumerable: !0,
                    get: ()=>(this.trackProp(r), e?.(r), t[r])
                });
            }), n;
        }
        trackProp(t) {
            this.#h.add(t);
        }
        getCurrentQuery() {
            return this.#t;
        }
        refetch({ ...t } = {}) {
            return this.fetch({
                ...t
            });
        }
        fetchOptimistic(t) {
            const e = this.#e.defaultQueryOptions(t), n = this.#e.getQueryCache().build(this.#e, e);
            return n.fetch().then(()=>this.createResult(n, e));
        }
        fetch(t) {
            return this.#v({
                ...t,
                cancelRefetch: t.cancelRefetch ?? !0
            }).then(()=>(this.updateResult(), this.#r));
        }
        #v(t) {
            this.#y();
            let e = this.#t.fetch(this.options, t);
            return t?.throwOnError || (e = e.catch(wl)), e;
        }
        #p() {
            this.#_();
            const t = z0(this.options.staleTime, this.#t);
            if (gm || this.#r.isStale || !xN(t)) return;
            const n = fB(this.#r.dataUpdatedAt, t) + 1;
            this.#m = setTimeout(()=>{
                this.#r.isStale || this.updateResult();
            }, n);
        }
        #b() {
            return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(this.#t) : this.options.refetchInterval) ?? !1;
        }
        #w(t) {
            this.#E(), this.#f = t, !(gm || lc(this.options.enabled, this.#t) === !1 || !xN(this.#f) || this.#f === 0) && (this.#g = setInterval(()=>{
                (this.options.refetchIntervalInBackground || lP.isFocused()) && this.#v();
            }, this.#f));
        }
        #x() {
            this.#p(), this.#w(this.#b());
        }
        #_() {
            this.#m && (clearTimeout(this.#m), this.#m = void 0);
        }
        #E() {
            this.#g && (clearInterval(this.#g), this.#g = void 0);
        }
        createResult(t, e) {
            const n = this.#t, r = this.options, i = this.#r, s = this.#s, o = this.#c, l = t !== n ? t.state : this.#n, { state: c } = t;
            let u = {
                ...c
            }, f = !1, h;
            if (e._optimisticResults) {
                const O = this.hasListeners(), D = !O && yD(t, e), R = O && vD(t, n, e, r);
                (D || R) && (u = {
                    ...u,
                    ...vB(c.data, t.options)
                }), e._optimisticResults === "isRestoring" && (u.fetchStatus = "idle");
            }
            let { error: m, errorUpdatedAt: v, status: _ } = u;
            if (e.select && u.data !== void 0) if (i && u.data === s?.data && e.select === this.#u) h = this.#l;
            else try {
                this.#u = e.select, h = e.select(u.data), h = wN(i?.data, h, e), this.#l = h, this.#a = null;
            } catch (O) {
                this.#a = O;
            }
            else h = u.data;
            if (e.placeholderData !== void 0 && h === void 0 && _ === "pending") {
                let O;
                if (i?.isPlaceholderData && e.placeholderData === o?.placeholderData) O = i.data;
                else if (O = typeof e.placeholderData == "function" ? e.placeholderData(this.#i?.state.data, this.#i) : e.placeholderData, e.select && O !== void 0) try {
                    O = e.select(O), this.#a = null;
                } catch (D) {
                    this.#a = D;
                }
                O !== void 0 && (_ = "success", h = wN(i?.data, O, e), f = !0);
            }
            this.#a && (m = this.#a, h = this.#l, v = Date.now(), _ = "error");
            const w = u.fetchStatus === "fetching", b = _ === "pending", M = _ === "error", E = b && w, T = h !== void 0, A = {
                status: _,
                fetchStatus: u.fetchStatus,
                isPending: b,
                isSuccess: _ === "success",
                isError: M,
                isInitialLoading: E,
                isLoading: E,
                data: h,
                dataUpdatedAt: u.dataUpdatedAt,
                error: m,
                errorUpdatedAt: v,
                failureCount: u.fetchFailureCount,
                failureReason: u.fetchFailureReason,
                errorUpdateCount: u.errorUpdateCount,
                isFetched: u.dataUpdateCount > 0 || u.errorUpdateCount > 0,
                isFetchedAfterMount: u.dataUpdateCount > l.dataUpdateCount || u.errorUpdateCount > l.errorUpdateCount,
                isFetching: w,
                isRefetching: w && !b,
                isLoadingError: M && !T,
                isPaused: u.fetchStatus === "paused",
                isPlaceholderData: f,
                isRefetchError: M && T,
                isStale: cP(t, e),
                refetch: this.refetch,
                promise: this.#o
            };
            if (this.options.experimental_prefetchInRender) {
                const O = (N)=>{
                    A.status === "error" ? N.reject(A.error) : A.data !== void 0 && N.resolve(A.data);
                }, D = ()=>{
                    const N = this.#o = A.promise = _N();
                    O(N);
                }, R = this.#o;
                switch(R.status){
                    case "pending":
                        t.queryHash === n.queryHash && O(R);
                        break;
                    case "fulfilled":
                        (A.status === "error" || A.data !== R.value) && D();
                        break;
                    case "rejected":
                        (A.status !== "error" || A.error !== R.reason) && D();
                        break;
                }
            }
            return A;
        }
        updateResult(t) {
            const e = this.#r, n = this.createResult(this.#t, this.options);
            if (this.#s = this.#t.state, this.#c = this.options, this.#s.data !== void 0 && (this.#i = this.#t), mE(n, e)) return;
            this.#r = n;
            const r = {}, i = ()=>{
                if (!e) return !0;
                const { notifyOnChangeProps: s } = this.options, o = typeof s == "function" ? s() : s;
                if (o === "all" || !o && !this.#h.size) return !0;
                const a = new Set(o ?? this.#h);
                return this.options.throwOnError && a.add("error"), Object.keys(this.#r).some((l)=>{
                    const c = l;
                    return this.#r[c] !== e[c] && a.has(c);
                });
            };
            t?.listeners !== !1 && i() && (r.listeners = !0), this.#I({
                ...r,
                ...t
            });
        }
        #y() {
            const t = this.#e.getQueryCache().build(this.#e, this.options);
            if (t === this.#t) return;
            const e = this.#t;
            this.#t = t, this.#n = t.state, this.hasListeners() && (e?.removeObserver(this), t.addObserver(this));
        }
        onQueryUpdate() {
            this.updateResult(), this.hasListeners() && this.#x();
        }
        #I(t) {
            Ki.batch(()=>{
                t.listeners && this.listeners.forEach((e)=>{
                    e(this.#r);
                }), this.#e.getQueryCache().notify({
                    query: this.#t,
                    type: "observerResultsUpdated"
                });
            });
        }
    };
    function gG(t, e) {
        return lc(e.enabled, t) !== !1 && t.state.data === void 0 && !(t.state.status === "error" && e.retryOnMount === !1);
    }
    function yD(t, e) {
        return gG(t, e) || t.state.data !== void 0 && SN(t, e, e.refetchOnMount);
    }
    function SN(t, e, n) {
        if (lc(e.enabled, t) !== !1) {
            const r = typeof n == "function" ? n(t) : n;
            return r === "always" || r !== !1 && cP(t, e);
        }
        return !1;
    }
    function vD(t, e, n, r) {
        return (t !== e || lc(r.enabled, t) === !1) && (!n.suspense || t.state.status !== "error") && cP(t, n);
    }
    function cP(t, e) {
        return lc(e.enabled, t) !== !1 && t.isStaleByTime(z0(e.staleTime, t));
    }
    function yG(t, e) {
        return !mE(t.getCurrentResult(), e);
    }
    var vG = class extends Iy {
        #e;
        #t = void 0;
        #n;
        #r;
        constructor(e, n){
            super(), this.#e = e, this.setOptions(n), this.bindMethods(), this.#s();
        }
        bindMethods() {
            this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
        }
        setOptions(e) {
            const n = this.options;
            this.options = this.#e.defaultMutationOptions(e), mE(this.options, n) || this.#e.getMutationCache().notify({
                type: "observerOptionsUpdated",
                mutation: this.#n,
                observer: this
            }), n?.mutationKey && this.options.mutationKey && ym(n.mutationKey) !== ym(this.options.mutationKey) ? this.reset() : this.#n?.state.status === "pending" && this.#n.setOptions(this.options);
        }
        onUnsubscribe() {
            this.hasListeners() || this.#n?.removeObserver(this);
        }
        onMutationUpdate(e) {
            this.#s(), this.#c(e);
        }
        getCurrentResult() {
            return this.#t;
        }
        reset() {
            this.#n?.removeObserver(this), this.#n = void 0, this.#s(), this.#c();
        }
        mutate(e, n) {
            return this.#r = n, this.#n?.removeObserver(this), this.#n = this.#e.getMutationCache().build(this.#e, this.options), this.#n.addObserver(this), this.#n.execute(e);
        }
        #s() {
            const e = this.#n?.state ?? xB();
            this.#t = {
                ...e,
                isPending: e.status === "pending",
                isSuccess: e.status === "success",
                isError: e.status === "error",
                isIdle: e.status === "idle",
                mutate: this.mutate,
                reset: this.reset
            };
        }
        #c(e) {
            Ki.batch(()=>{
                if (this.#r && this.hasListeners()) {
                    const n = this.#t.variables, r = this.#t.context;
                    e?.type === "success" ? (this.#r.onSuccess?.(e.data, n, r), this.#r.onSettled?.(e.data, null, n, r)) : e?.type === "error" && (this.#r.onError?.(e.error, n, r), this.#r.onSettled?.(void 0, e.error, n, r));
                }
                this.listeners.forEach((n)=>{
                    n(this.#t);
                });
            });
        }
    }, J = Ry();
    const lr = Go(J), xG = X$({
        __proto__: null,
        default: lr
    }, [
        J
    ]);
    var bB = J.createContext(void 0), pT = (t)=>{
        const e = J.useContext(bB);
        if (!e) throw new Error("No QueryClient set, use QueryClientProvider to set one");
        return e;
    }, bG = ({ client: t, children: e })=>(J.useEffect(()=>(t.mount(), ()=>{
                t.unmount();
            }), [
            t
        ]), x.jsx(bB.Provider, {
            value: t,
            children: e
        })), wB = J.createContext(!1), wG = ()=>J.useContext(wB);
    wB.Provider;
    function _G() {
        let t = !1;
        return {
            clearReset: ()=>{
                t = !1;
            },
            reset: ()=>{
                t = !0;
            },
            isReset: ()=>t
        };
    }
    var SG = J.createContext(_G()), EG = ()=>J.useContext(SG);
    function _B(t, e) {
        return typeof t == "function" ? t(...e) : !!t;
    }
    function EN() {}
    var MG = (t, e)=>{
        (t.suspense || t.throwOnError || t.experimental_prefetchInRender) && (e.isReset() || (t.retryOnMount = !1));
    }, TG = (t)=>{
        J.useEffect(()=>{
            t.clearReset();
        }, [
            t
        ]);
    }, CG = ({ result: t, errorResetBoundary: e, throwOnError: n, query: r, suspense: i })=>t.isError && !e.isReset() && !t.isFetching && r && (i && t.data === void 0 || _B(n, [
            t.error,
            r
        ])), RG = (t)=>{
        const e = t.staleTime;
        t.suspense && (t.staleTime = typeof e == "function" ? (...n)=>Math.max(e(...n), 1e3) : Math.max(e ?? 1e3, 1e3), typeof t.gcTime == "number" && (t.gcTime = Math.max(t.gcTime, 1e3)));
    }, IG = (t, e)=>t.isLoading && t.isFetching && !e, AG = (t, e)=>t?.suspense && e.isPending, xD = (t, e, n)=>e.fetchOptimistic(t).catch(()=>{
            n.clearReset();
        });
    function NG(t, e, n) {
        const r = pT(), i = wG(), s = EG(), o = r.defaultQueryOptions(t);
        r.getDefaultOptions().queries?._experimental_beforeQuery?.(o), o._optimisticResults = i ? "isRestoring" : "optimistic", RG(o), MG(o, s), TG(s);
        const a = !r.getQueryCache().get(o.queryHash), [l] = J.useState(()=>new e(r, o)), c = l.getOptimisticResult(o), u = !i && t.subscribed !== !1;
        if (J.useSyncExternalStore(J.useCallback((f)=>{
            const h = u ? l.subscribe(Ki.batchCalls(f)) : EN;
            return l.updateResult(), h;
        }, [
            l,
            u
        ]), ()=>l.getCurrentResult(), ()=>l.getCurrentResult()), J.useEffect(()=>{
            l.setOptions(o, {
                listeners: !1
            });
        }, [
            o,
            l
        ]), AG(o, c)) throw xD(o, l, s);
        if (CG({
            result: c,
            errorResetBoundary: s,
            throwOnError: o.throwOnError,
            query: r.getQueryCache().get(o.queryHash),
            suspense: o.suspense
        })) throw c.error;
        return r.getDefaultOptions().queries?._experimental_afterQuery?.(o, c), o.experimental_prefetchInRender && !gm && IG(c, i) && (a ? xD(o, l, s) : r.getQueryCache().get(o.queryHash)?.promise)?.catch(EN).finally(()=>{
            l.updateResult();
        }), o.notifyOnChangeProps ? c : l.trackResult(c);
    }
    function yE(t, e) {
        return NG(t, mG);
    }
    function bD(t, e) {
        return t.findAll(e.filters).map((n)=>e.select ? e.select(n) : n.state);
    }
    function PG(t = {}, e) {
        const n = pT().getMutationCache(), r = J.useRef(t), i = J.useRef(null);
        return i.current || (i.current = bD(n, t)), J.useEffect(()=>{
            r.current = t;
        }), J.useSyncExternalStore(J.useCallback((s)=>n.subscribe(()=>{
                const o = oP(i.current, bD(n, r.current));
                i.current !== o && (i.current = o, Ki.schedule(s));
            }), [
            n
        ]), ()=>i.current, ()=>i.current);
    }
    function dn(t, e) {
        const n = pT(), [r] = J.useState(()=>new vG(n, t));
        J.useEffect(()=>{
            r.setOptions(t);
        }, [
            r,
            t
        ]);
        const i = J.useSyncExternalStore(J.useCallback((o)=>r.subscribe(Ki.batchCalls(o)), [
            r
        ]), ()=>r.getCurrentResult(), ()=>r.getCurrentResult()), s = J.useCallback((o, a)=>{
            r.mutate(o, a).catch(EN);
        }, [
            r
        ]);
        if (i.error && _B(r.options.throwOnError, [
            i.error
        ])) throw i.error;
        return {
            ...i,
            mutate: s,
            mutateAsync: i.mutate
        };
    }
    var kG = "Invariant failed";
    function hc(t, e) {
        if (!t) throw new Error(kG);
    }
    function V0(t) {
        const e = t.resolvedLocation, n = t.location, r = e?.pathname !== n.pathname, i = e?.href !== n.href, s = e?.hash !== n.hash;
        return {
            fromLocation: e,
            toLocation: n,
            pathChanged: r,
            hrefChanged: i,
            hashChanged: s
        };
    }
    const OG = "Error preloading route! ☝️";
    function Dx(t) {
        return t[t.length - 1];
    }
    function DG(t) {
        return typeof t == "function";
    }
    function Xp(t, e) {
        return DG(t) ? t(e) : t;
    }
    function MN(t, e) {
        return e.reduce((n, r)=>(n[r] = t[r], n), {});
    }
    function vl(t, e) {
        if (t === e) return t;
        const n = e, r = _D(t) && _D(n);
        if (r || vE(t) && vE(n)) {
            const i = r ? t : Object.keys(t), s = i.length, o = r ? n : Object.keys(n), a = o.length, l = r ? [] : {};
            let c = 0;
            for(let u = 0; u < a; u++){
                const f = r ? u : o[u];
                (!r && i.includes(f) || r) && t[f] === void 0 && n[f] === void 0 ? (l[f] = void 0, c++) : (l[f] = vl(t[f], n[f]), l[f] === t[f] && t[f] !== void 0 && c++);
            }
            return s === a && c === s ? t : l;
        }
        return n;
    }
    function vE(t) {
        if (!wD(t)) return !1;
        const e = t.constructor;
        if (typeof e > "u") return !0;
        const n = e.prototype;
        return !(!wD(n) || !n.hasOwnProperty("isPrototypeOf"));
    }
    function wD(t) {
        return Object.prototype.toString.call(t) === "[object Object]";
    }
    function _D(t) {
        return Array.isArray(t) && t.length === Object.keys(t).length;
    }
    function SD(t, e) {
        let n = Object.keys(t);
        return e && (n = n.filter((r)=>t[r] !== void 0)), n;
    }
    function W0(t, e, n) {
        if (t === e) return !0;
        if (typeof t != typeof e) return !1;
        if (vE(t) && vE(e)) {
            const r = n?.ignoreUndefined ?? !0, i = SD(t, r), s = SD(e, r);
            return !n?.partial && i.length !== s.length ? !1 : s.every((o)=>W0(t[o], e[o], n));
        }
        return Array.isArray(t) && Array.isArray(e) ? t.length !== e.length ? !1 : !t.some((r, i)=>!W0(r, e[i], n)) : !1;
    }
    function x0(t) {
        let e, n;
        const r = new Promise((i, s)=>{
            e = i, n = s;
        });
        return r.status = "pending", r.resolve = (i)=>{
            r.status = "resolved", r.value = i, e(i), t?.(i);
        }, r.reject = (i)=>{
            r.status = "rejected", n(i);
        }, r;
    }
    function LG(t) {
        return /%[0-9A-Fa-f]{2}/.test(t);
    }
    function Sd(t) {
        return mT(t.filter((e)=>e !== void 0).join("/"));
    }
    function mT(t) {
        return t.replace(/\/{2,}/g, "/");
    }
    function uP(t) {
        return t === "/" ? t : t.replace(/^\/{1,}/, "");
    }
    function Kp(t) {
        return t === "/" ? t : t.replace(/\/{1,}$/, "");
    }
    function FG(t) {
        return Kp(uP(t));
    }
    function xE(t, e) {
        return t?.endsWith("/") && t !== "/" && t !== `${e}/` ? t.slice(0, -1) : t;
    }
    function jG(t, e, n) {
        return xE(t, n) === xE(e, n);
    }
    function BG({ basepath: t, base: e, to: n, trailingSlash: r = "never", caseSensitive: i }) {
        var s, o;
        e = bE(t, e, i), n = bE(t, n, i);
        let a = sy(e);
        const l = sy(n);
        a.length > 1 && ((s = Dx(a)) == null ? void 0 : s.value) === "/" && a.pop(), l.forEach((u, f)=>{
            u.value === "/" ? f ? f === l.length - 1 && a.push(u) : a = [
                u
            ] : u.value === ".." ? a.pop() : u.value === "." || a.push(u);
        }), a.length > 1 && (((o = Dx(a)) == null ? void 0 : o.value) === "/" ? r === "never" && a.pop() : r === "always" && a.push({
            type: "pathname",
            value: "/"
        }));
        const c = Sd([
            t,
            ...a.map((u)=>u.value)
        ]);
        return mT(c);
    }
    function sy(t) {
        if (!t) return [];
        t = mT(t);
        const e = [];
        if (t.slice(0, 1) === "/" && (t = t.substring(1), e.push({
            type: "pathname",
            value: "/"
        })), !t) return e;
        const n = t.split("/").filter(Boolean);
        return e.push(...n.map((r)=>r === "$" || r === "*" ? {
                type: "wildcard",
                value: r
            } : r.charAt(0) === "$" ? {
                type: "param",
                value: r
            } : {
                type: "pathname",
                value: decodeURI(r)
            })), t.slice(-1) === "/" && (t = t.substring(1), e.push({
            type: "pathname",
            value: "/"
        })), e;
    }
    function J_({ path: t, params: e, leaveWildcards: n, leaveParams: r, decodeCharMap: i }) {
        const s = sy(t);
        function o(c) {
            const u = e[c], f = typeof u == "string";
            return [
                "*",
                "_splat"
            ].includes(c) ? f ? encodeURI(u) : u : f ? UG(u, i) : u;
        }
        const a = {}, l = Sd(s.map((c)=>{
            if (c.type === "wildcard") {
                a._splat = e._splat;
                const u = o("_splat");
                return n ? `${c.value}${u ?? ""}` : u;
            }
            if (c.type === "param") {
                const u = c.value.substring(1);
                if (a[u] = e[u], r) {
                    const f = o(c.value);
                    return `${c.value}${f ?? ""}`;
                }
                return o(u) ?? "undefined";
            }
            return c.value;
        }));
        return {
            usedParams: a,
            interpolatedPath: l
        };
    }
    function UG(t, e) {
        let n = encodeURIComponent(t);
        if (e) for (const [r, i] of e)n = n.replaceAll(r, i);
        return n;
    }
    function Q_(t, e, n) {
        const r = zG(t, e, n);
        if (!(n.to && !r)) return r ?? {};
    }
    function bE(t, e, n = !1) {
        const r = n ? t : t.toLowerCase(), i = n ? e : e.toLowerCase();
        switch(!0){
            case r === "/":
                return e;
            case i === r:
                return "";
            case e.length < t.length:
                return e;
            case i[r.length] !== "/":
                return e;
            case i.startsWith(r):
                return e.slice(t.length);
            default:
                return e;
        }
    }
    function zG(t, e, n) {
        if (t !== "/" && !e.startsWith(t)) return;
        e = bE(t, e, n.caseSensitive);
        const r = bE(t, `${n.to ?? "$"}`, n.caseSensitive), i = sy(e), s = sy(r);
        e.startsWith("/") || i.unshift({
            type: "pathname",
            value: "/"
        }), r.startsWith("/") || s.unshift({
            type: "pathname",
            value: "/"
        });
        const o = {};
        return (()=>{
            for(let l = 0; l < Math.max(i.length, s.length); l++){
                const c = i[l], u = s[l], f = l >= i.length - 1, h = l >= s.length - 1;
                if (u) {
                    if (u.type === "wildcard") {
                        const m = decodeURI(Sd(i.slice(l).map((v)=>v.value)));
                        return o["*"] = m, o._splat = m, !0;
                    }
                    if (u.type === "pathname") {
                        if (u.value === "/" && !c?.value) return !0;
                        if (c) {
                            if (n.caseSensitive) {
                                if (u.value !== c.value) return !1;
                            } else if (u.value.toLowerCase() !== c.value.toLowerCase()) return !1;
                        }
                    }
                    if (!c) return !1;
                    if (u.type === "param") {
                        if (c.value === "/") return !1;
                        c.value.charAt(0) !== "$" && (o[u.value.substring(1)] = decodeURIComponent(c.value));
                    }
                }
                if (!f && h) return o["**"] = Sd(i.slice(l + 1).map((m)=>m.value)), !!n.fuzzy && u?.value !== "/";
            }
            return !0;
        })() ? o : void 0;
    }
    function VG(t, e) {
        let n, r, i, s = "";
        for(n in t)if ((i = t[n]) !== void 0) if (Array.isArray(i)) for(r = 0; r < i.length; r++)s && (s += "&"), s += encodeURIComponent(n) + "=" + encodeURIComponent(i[r]);
        else s && (s += "&"), s += encodeURIComponent(n) + "=" + encodeURIComponent(i);
        return "" + s;
    }
    function ED(t) {
        if (!t) return "";
        const e = LG(t) ? decodeURIComponent(t) : decodeURIComponent(encodeURIComponent(t));
        return e === "false" ? !1 : e === "true" ? !0 : +e * 0 === 0 && +e + "" === e ? +e : e;
    }
    function WG(t, e) {
        let n, r;
        const i = {}, s = t.split("&");
        for(; n = s.shift();){
            const o = n.indexOf("=");
            if (o !== -1) {
                r = n.slice(0, o), r = decodeURIComponent(r);
                const a = n.slice(o + 1);
                i[r] !== void 0 ? i[r] = [].concat(i[r], ED(a)) : i[r] = ED(a);
            } else r = n, r = decodeURIComponent(r), i[r] = "";
        }
        return i;
    }
    const pa = "__root__", qG = $G(JSON.parse), HG = GG(JSON.stringify, JSON.parse);
    function $G(t) {
        return (e)=>{
            e.substring(0, 1) === "?" && (e = e.substring(1));
            const n = WG(e);
            for(const r in n){
                const i = n[r];
                if (typeof i == "string") try {
                    n[r] = t(i);
                } catch  {}
            }
            return n;
        };
    }
    function GG(t, e) {
        function n(r) {
            if (typeof r == "object" && r !== null) try {
                return t(r);
            } catch  {}
            else if (typeof r == "string" && typeof e == "function") try {
                return e(r), t(r);
            } catch  {}
            return r;
        }
        return (r)=>{
            r = {
                ...r
            }, Object.keys(r).forEach((s)=>{
                const o = r[s];
                typeof o > "u" || o === void 0 ? delete r[s] : r[s] = n(o);
            });
            const i = VG(r).toString();
            return i ? `?${i}` : "";
        };
    }
    const th = "__TSR_index", MD = "popstate", TD = "beforeunload";
    function SB(t) {
        let e = t.getLocation();
        const n = new Set, r = (o)=>{
            e = t.getLocation(), n.forEach((a)=>a({
                    location: e,
                    action: o
                }));
        }, i = (o)=>{
            t.notifyOnIndexChange ?? !0 ? r(o) : e = t.getLocation();
        }, s = async ({ task: o, navigateOpts: a, ...l })=>{
            var c, u;
            if (a?.ignoreBlocker ?? !1) {
                o();
                return;
            }
            const h = ((c = t.getBlockers) == null ? void 0 : c.call(t)) ?? [], m = l.type === "PUSH" || l.type === "REPLACE";
            if (typeof document < "u" && h.length && m) for (const v of h){
                const _ = lb(l.path, l.state);
                if (await v.blockerFn({
                    currentLocation: e,
                    nextLocation: _,
                    action: l.type
                })) {
                    (u = t.onBlocked) == null || u.call(t);
                    return;
                }
            }
            o();
        };
        return {
            get location () {
                return e;
            },
            get length () {
                return t.getLength();
            },
            subscribers: n,
            subscribe: (o)=>(n.add(o), ()=>{
                    n.delete(o);
                }),
            push: (o, a, l)=>{
                const c = e.state[th];
                a = TN(c + 1, a), s({
                    task: ()=>{
                        t.pushState(o, a), r({
                            type: "PUSH"
                        });
                    },
                    navigateOpts: l,
                    type: "PUSH",
                    path: o,
                    state: a
                });
            },
            replace: (o, a, l)=>{
                const c = e.state[th];
                a = TN(c, a), s({
                    task: ()=>{
                        t.replaceState(o, a), r({
                            type: "REPLACE"
                        });
                    },
                    navigateOpts: l,
                    type: "REPLACE",
                    path: o,
                    state: a
                });
            },
            go: (o, a)=>{
                s({
                    task: ()=>{
                        t.go(o), i({
                            type: "GO",
                            index: o
                        });
                    },
                    navigateOpts: a,
                    type: "GO"
                });
            },
            back: (o)=>{
                s({
                    task: ()=>{
                        t.back(o?.ignoreBlocker ?? !1), i({
                            type: "BACK"
                        });
                    },
                    navigateOpts: o,
                    type: "BACK"
                });
            },
            forward: (o)=>{
                s({
                    task: ()=>{
                        t.forward(o?.ignoreBlocker ?? !1), i({
                            type: "FORWARD"
                        });
                    },
                    navigateOpts: o,
                    type: "FORWARD"
                });
            },
            canGoBack: ()=>e.state[th] !== 0,
            createHref: (o)=>t.createHref(o),
            block: (o)=>{
                var a;
                if (!t.setBlockers) return ()=>{};
                const l = ((a = t.getBlockers) == null ? void 0 : a.call(t)) ?? [];
                return t.setBlockers([
                    ...l,
                    o
                ]), ()=>{
                    var c, u;
                    const f = ((c = t.getBlockers) == null ? void 0 : c.call(t)) ?? [];
                    (u = t.setBlockers) == null || u.call(t, f.filter((h)=>h !== o));
                };
            },
            flush: ()=>{
                var o;
                return (o = t.flush) == null ? void 0 : o.call(t);
            },
            destroy: ()=>{
                var o;
                return (o = t.destroy) == null ? void 0 : o.call(t);
            },
            notify: r
        };
    }
    function TN(t, e) {
        return e || (e = {}), {
            ...e,
            key: dP(),
            [th]: t
        };
    }
    function XG(t) {
        var e;
        const n = typeof document < "u" ? window : void 0, r = n.history.pushState, i = n.history.replaceState;
        let s = [];
        const o = ()=>s, a = (R)=>s = R, l = (R)=>R, c = ()=>lb(`${n.location.pathname}${n.location.search}${n.location.hash}`, n.history.state);
        (e = n.history.state) != null && e.key || n.history.replaceState({
            [th]: 0,
            key: dP()
        }, "");
        let u = c(), f, h = !1, m = !1, v = !1, _ = !1;
        const w = ()=>u;
        let b, M;
        const E = ()=>{
            b && (D._ignoreSubscribers = !0, (b.isPush ? n.history.pushState : n.history.replaceState)(b.state, "", b.href), D._ignoreSubscribers = !1, b = void 0, M = void 0, f = void 0);
        }, T = (R, N, k)=>{
            const U = l(N);
            M || (f = u), u = lb(N, k), b = {
                href: U,
                state: k,
                isPush: b?.isPush || R === "push"
            }, M || (M = Promise.resolve().then(()=>E()));
        }, P = (R)=>{
            u = c(), D.notify({
                type: R
            });
        }, A = async ()=>{
            if (m) {
                m = !1;
                return;
            }
            const R = c(), N = R.state[th] - u.state[th], k = N === 1, U = N === -1, B = !k && !U || h;
            h = !1;
            const j = B ? "GO" : U ? "BACK" : "FORWARD", K = B ? {
                type: "GO",
                index: N
            } : {
                type: U ? "BACK" : "FORWARD"
            };
            if (v) v = !1;
            else {
                const q = o();
                if (typeof document < "u" && q.length) {
                    for (const ee of q)if (await ee.blockerFn({
                        currentLocation: u,
                        nextLocation: R,
                        action: j
                    })) {
                        m = !0, n.history.go(1), D.notify(K);
                        return;
                    }
                }
            }
            u = c(), D.notify(K);
        }, O = (R)=>{
            if (_) {
                _ = !1;
                return;
            }
            let N = !1;
            const k = o();
            if (typeof document < "u" && k.length) for (const U of k){
                const B = U.enableBeforeUnload ?? !0;
                if (B === !0) {
                    N = !0;
                    break;
                }
                if (typeof B == "function" && B() === !0) {
                    N = !0;
                    break;
                }
            }
            if (N) return R.preventDefault(), R.returnValue = "";
        }, D = SB({
            getLocation: w,
            getLength: ()=>n.history.length,
            pushState: (R, N)=>T("push", R, N),
            replaceState: (R, N)=>T("replace", R, N),
            back: (R)=>(R && (v = !0), _ = !0, n.history.back()),
            forward: (R)=>{
                R && (v = !0), _ = !0, n.history.forward();
            },
            go: (R)=>{
                h = !0, n.history.go(R);
            },
            createHref: (R)=>l(R),
            flush: E,
            destroy: ()=>{
                n.history.pushState = r, n.history.replaceState = i, n.removeEventListener(TD, O, {
                    capture: !0
                }), n.removeEventListener(MD, A);
            },
            onBlocked: ()=>{
                f && u !== f && (u = f);
            },
            getBlockers: o,
            setBlockers: a,
            notifyOnIndexChange: !1
        });
        return n.addEventListener(TD, O, {
            capture: !0
        }), n.addEventListener(MD, A), n.history.pushState = function(...R) {
            const N = r.apply(n.history, R);
            return D._ignoreSubscribers || P("PUSH"), N;
        }, n.history.replaceState = function(...R) {
            const N = i.apply(n.history, R);
            return D._ignoreSubscribers || P("REPLACE"), N;
        }, D;
    }
    function KG(t = {
        initialEntries: [
            "/"
        ]
    }) {
        const e = t.initialEntries;
        let n = t.initialIndex ? Math.min(Math.max(t.initialIndex, 0), e.length - 1) : e.length - 1;
        const r = e.map((s, o)=>TN(o, void 0));
        return SB({
            getLocation: ()=>lb(e[n], r[n]),
            getLength: ()=>e.length,
            pushState: (s, o)=>{
                n < e.length - 1 && (e.splice(n + 1), r.splice(n + 1)), r.push(o), e.push(s), n = Math.max(e.length - 1, 0);
            },
            replaceState: (s, o)=>{
                r[n] = o, e[n] = s;
            },
            back: ()=>{
                n = Math.max(n - 1, 0);
            },
            forward: ()=>{
                n = Math.min(n + 1, e.length - 1);
            },
            go: (s)=>{
                n = Math.min(Math.max(n + s, 0), e.length - 1);
            },
            createHref: (s)=>s
        });
    }
    function lb(t, e) {
        const n = t.indexOf("#"), r = t.indexOf("?");
        return {
            href: t,
            pathname: t.substring(0, n > 0 ? r > 0 ? Math.min(n, r) : n : r > 0 ? r : t.length),
            hash: n > -1 ? t.substring(n) : "",
            search: r > -1 ? t.slice(r, n === -1 ? void 0 : n) : "",
            state: e || {
                [th]: 0,
                key: dP()
            }
        };
    }
    function dP() {
        return (Math.random() + 1).toString(36).substring(7);
    }
    function fP(t) {
        const e = t.errorComponent ?? gT;
        return x.jsx(YG, {
            getResetKey: t.getResetKey,
            onCatch: t.onCatch,
            children: ({ error: n, reset: r })=>n ? J.createElement(e, {
                    error: n,
                    reset: r
                }) : t.children
        });
    }
    class YG extends J.Component {
        constructor(){
            super(...arguments), this.state = {
                error: null
            };
        }
        static getDerivedStateFromProps(e) {
            return {
                resetKey: e.getResetKey()
            };
        }
        static getDerivedStateFromError(e) {
            return {
                error: e
            };
        }
        reset() {
            this.setState({
                error: null
            });
        }
        componentDidUpdate(e, n) {
            n.error && n.resetKey !== this.state.resetKey && this.reset();
        }
        componentDidCatch(e, n) {
            this.props.onCatch && this.props.onCatch(e, n);
        }
        render() {
            return this.props.children({
                error: this.state.resetKey !== this.props.getResetKey() ? null : this.state.error,
                reset: ()=>{
                    this.reset();
                }
            });
        }
    }
    function gT({ error: t }) {
        const [e, n] = J.useState(!1);
        return x.jsxs("div", {
            style: {
                padding: ".5rem",
                maxWidth: "100%"
            },
            children: [
                x.jsxs("div", {
                    style: {
                        display: "flex",
                        alignItems: "center",
                        gap: ".5rem"
                    },
                    children: [
                        x.jsx("strong", {
                            style: {
                                fontSize: "1rem"
                            },
                            children: "Something went wrong!"
                        }),
                        x.jsx("button", {
                            style: {
                                appearance: "none",
                                fontSize: ".6em",
                                border: "1px solid currentColor",
                                padding: ".1rem .2rem",
                                fontWeight: "bold",
                                borderRadius: ".25rem"
                            },
                            onClick: ()=>n((r)=>!r),
                            children: e ? "Hide Error" : "Show Error"
                        })
                    ]
                }),
                x.jsx("div", {
                    style: {
                        height: ".25rem"
                    }
                }),
                e ? x.jsx("div", {
                    children: x.jsx("pre", {
                        style: {
                            fontSize: ".7em",
                            border: "1px solid red",
                            borderRadius: ".25rem",
                            padding: ".3rem",
                            color: "red",
                            overflow: "auto"
                        },
                        children: t.message ? x.jsx("code", {
                            children: t.message
                        }) : null
                    })
                }) : null
            ]
        });
    }
    var TC = {
        exports: {}
    }, CC = {}, RC = {
        exports: {}
    }, IC = {};
    var CD;
    function ZG() {
        if (CD) return IC;
        CD = 1;
        var t = Ry();
        function e(f, h) {
            return f === h && (f !== 0 || 1 / f === 1 / h) || f !== f && h !== h;
        }
        var n = typeof Object.is == "function" ? Object.is : e, r = t.useState, i = t.useEffect, s = t.useLayoutEffect, o = t.useDebugValue;
        function a(f, h) {
            var m = h(), v = r({
                inst: {
                    value: m,
                    getSnapshot: h
                }
            }), _ = v[0].inst, w = v[1];
            return s(function() {
                _.value = m, _.getSnapshot = h, l(_) && w({
                    inst: _
                });
            }, [
                f,
                m,
                h
            ]), i(function() {
                return l(_) && w({
                    inst: _
                }), f(function() {
                    l(_) && w({
                        inst: _
                    });
                });
            }, [
                f
            ]), o(m), m;
        }
        function l(f) {
            var h = f.getSnapshot;
            f = f.value;
            try {
                var m = h();
                return !n(f, m);
            } catch  {
                return !0;
            }
        }
        function c(f, h) {
            return h();
        }
        var u = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? c : a;
        return IC.useSyncExternalStore = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : u, IC;
    }
    var RD;
    function JG() {
        return RD || (RD = 1, RC.exports = ZG()), RC.exports;
    }
    var ID;
    function QG() {
        if (ID) return CC;
        ID = 1;
        var t = Ry(), e = JG();
        function n(c, u) {
            return c === u && (c !== 0 || 1 / c === 1 / u) || c !== c && u !== u;
        }
        var r = typeof Object.is == "function" ? Object.is : n, i = e.useSyncExternalStore, s = t.useRef, o = t.useEffect, a = t.useMemo, l = t.useDebugValue;
        return CC.useSyncExternalStoreWithSelector = function(c, u, f, h, m) {
            var v = s(null);
            if (v.current === null) {
                var _ = {
                    hasValue: !1,
                    value: null
                };
                v.current = _;
            } else _ = v.current;
            v = a(function() {
                function b(A) {
                    if (!M) {
                        if (M = !0, E = A, A = h(A), m !== void 0 && _.hasValue) {
                            var O = _.value;
                            if (m(O, A)) return T = O;
                        }
                        return T = A;
                    }
                    if (O = T, r(E, A)) return O;
                    var D = h(A);
                    return m !== void 0 && m(O, D) ? (E = A, O) : (E = A, T = D);
                }
                var M = !1, E, T, P = f === void 0 ? null : f;
                return [
                    function() {
                        return b(u());
                    },
                    P === null ? void 0 : function() {
                        return b(P());
                    }
                ];
            }, [
                u,
                f,
                h,
                m
            ]);
            var w = i(c, v[0], v[1]);
            return o(function() {
                _.hasValue = !0, _.value = w;
            }, [
                w
            ]), l(w), w;
        }, CC;
    }
    var AD;
    function eX() {
        return AD || (AD = 1, TC.exports = QG()), TC.exports;
    }
    var EB = eX();
    const tX = Go(EB), q0 = new WeakMap, _S = new WeakMap, wE = {
        current: []
    };
    let AC = !1, Lx = 0;
    const hx = new Set, e1 = new Map;
    function MB(t) {
        const e = Array.from(t).sort((n, r)=>n instanceof H0 && n.options.deps.includes(r) ? 1 : r instanceof H0 && r.options.deps.includes(n) ? -1 : 0);
        for (const n of e){
            if (wE.current.includes(n)) continue;
            wE.current.push(n), n.recompute();
            const r = _S.get(n);
            if (r) for (const i of r){
                const s = q0.get(i);
                s && MB(s);
            }
        }
    }
    function nX(t) {
        t.listeners.forEach((e)=>e({
                prevVal: t.prevState,
                currentVal: t.state
            }));
    }
    function rX(t) {
        t.listeners.forEach((e)=>e({
                prevVal: t.prevState,
                currentVal: t.state
            }));
    }
    function TB(t) {
        if (Lx > 0 && !e1.has(t) && e1.set(t, t.prevState), hx.add(t), !(Lx > 0) && !AC) try {
            for(AC = !0; hx.size > 0;){
                const e = Array.from(hx);
                hx.clear();
                for (const n of e){
                    const r = e1.get(n) ?? n.prevState;
                    n.prevState = r, nX(n);
                }
                for (const n of e){
                    const r = q0.get(n);
                    r && (wE.current.push(n), MB(r));
                }
                for (const n of e){
                    const r = q0.get(n);
                    if (r) for (const i of r)rX(i);
                }
            }
        } finally{
            AC = !1, wE.current = [], e1.clear();
        }
    }
    function NC(t) {
        Lx++;
        try {
            t();
        } finally{
            if (Lx--, Lx === 0) {
                const e = Array.from(hx)[0];
                e && TB(e);
            }
        }
    }
    class CN {
        constructor(e, n){
            this.listeners = new Set, this.subscribe = (r)=>{
                var i, s;
                this.listeners.add(r);
                const o = (s = (i = this.options) == null ? void 0 : i.onSubscribe) == null ? void 0 : s.call(i, r, this);
                return ()=>{
                    this.listeners.delete(r), o?.();
                };
            }, this.setState = (r)=>{
                var i, s, o;
                this.prevState = this.state, this.state = (i = this.options) != null && i.updateFn ? this.options.updateFn(this.prevState)(r) : r(this.prevState), (o = (s = this.options) == null ? void 0 : s.onUpdate) == null || o.call(s), TB(this);
            }, this.prevState = e, this.state = e, this.options = n;
        }
    }
    class H0 {
        constructor(e){
            this.listeners = new Set, this._subscriptions = [], this.lastSeenDepValues = [], this.getDepVals = ()=>{
                const n = [], r = [];
                for (const i of this.options.deps)n.push(i.prevState), r.push(i.state);
                return this.lastSeenDepValues = r, {
                    prevDepVals: n,
                    currDepVals: r,
                    prevVal: this.prevState ?? void 0
                };
            }, this.recompute = ()=>{
                var n, r;
                this.prevState = this.state;
                const { prevDepVals: i, currDepVals: s, prevVal: o } = this.getDepVals();
                this.state = this.options.fn({
                    prevDepVals: i,
                    currDepVals: s,
                    prevVal: o
                }), (r = (n = this.options).onUpdate) == null || r.call(n);
            }, this.checkIfRecalculationNeededDeeply = ()=>{
                for (const s of this.options.deps)s instanceof H0 && s.checkIfRecalculationNeededDeeply();
                let n = !1;
                const r = this.lastSeenDepValues, { currDepVals: i } = this.getDepVals();
                for(let s = 0; s < i.length; s++)if (i[s] !== r[s]) {
                    n = !0;
                    break;
                }
                n && this.recompute();
            }, this.mount = ()=>(this.registerOnGraph(), this.checkIfRecalculationNeededDeeply(), ()=>{
                    this.unregisterFromGraph();
                    for (const n of this._subscriptions)n();
                }), this.subscribe = (n)=>{
                var r, i;
                this.listeners.add(n);
                const s = (i = (r = this.options).onSubscribe) == null ? void 0 : i.call(r, n, this);
                return ()=>{
                    this.listeners.delete(n), s?.();
                };
            }, this.options = e, this.state = e.fn({
                prevDepVals: void 0,
                prevVal: void 0,
                currDepVals: this.getDepVals().currDepVals
            });
        }
        registerOnGraph(e = this.options.deps) {
            for (const n of e)if (n instanceof H0) n.registerOnGraph(), this.registerOnGraph(n.options.deps);
            else if (n instanceof CN) {
                let r = q0.get(n);
                r || (r = new Set, q0.set(n, r)), r.add(this);
                let i = _S.get(this);
                i || (i = new Set, _S.set(this, i)), i.add(n);
            }
        }
        unregisterFromGraph(e = this.options.deps) {
            for (const n of e)if (n instanceof H0) this.unregisterFromGraph(n.options.deps);
            else if (n instanceof CN) {
                const r = q0.get(n);
                r && r.delete(this);
                const i = _S.get(this);
                i && i.delete(n);
            }
        }
    }
    function iX(t, e = (n)=>n) {
        return EB.useSyncExternalStoreWithSelector(t.subscribe, ()=>t.state, ()=>t.state, e, sX);
    }
    function sX(t, e) {
        if (Object.is(t, e)) return !0;
        if (typeof t != "object" || t === null || typeof e != "object" || e === null) return !1;
        if (t instanceof Map && e instanceof Map) {
            if (t.size !== e.size) return !1;
            for (const [r, i] of t)if (!e.has(r) || !Object.is(i, e.get(r))) return !1;
            return !0;
        }
        if (t instanceof Set && e instanceof Set) {
            if (t.size !== e.size) return !1;
            for (const r of t)if (!e.has(r)) return !1;
            return !0;
        }
        const n = Object.keys(t);
        if (n.length !== Object.keys(e).length) return !1;
        for(let r = 0; r < n.length; r++)if (!Object.prototype.hasOwnProperty.call(e, n[r]) || !Object.is(t[n[r]], e[n[r]])) return !1;
        return !0;
    }
    const PC = J.createContext(null);
    function CB() {
        return typeof document > "u" ? PC : window.__TSR_ROUTER_CONTEXT__ ? window.__TSR_ROUTER_CONTEXT__ : (window.__TSR_ROUTER_CONTEXT__ = PC, PC);
    }
    function Il(t) {
        const e = J.useContext(CB());
        return t?.warn, e;
    }
    function co(t) {
        const e = Il({
            warn: t?.router === void 0
        }), n = t?.router || e, r = J.useRef(void 0);
        return iX(n.__store, (i)=>{
            if (t?.select) {
                if (t.structuralSharing ?? n.options.defaultStructuralSharing) {
                    const s = vl(r.current, t.select(i));
                    return r.current = s, s;
                }
                return t.select(i);
            }
            return i;
        });
    }
    const yT = J.createContext(void 0), oX = J.createContext(void 0);
    function dh(t) {
        const e = J.useContext(t.from ? oX : yT);
        return co({
            select: (r)=>{
                const i = r.matches.find((s)=>t.from ? t.from === s.routeId : s.id === e);
                if (hc(!((t.shouldThrow ?? !0) && !i), `Could not find ${t.from ? `an active match from "${t.from}"` : "a nearest match!"}`), i !== void 0) return t.select ? t.select(i) : i;
            },
            structuralSharing: t.structuralSharing
        });
    }
    function es(t) {
        return dh({
            from: t.from,
            strict: t.strict,
            structuralSharing: t.structuralSharing,
            select: (e)=>t.select ? t.select(e.loaderData) : e.loaderData
        });
    }
    function aX(t) {
        const { select: e, ...n } = t;
        return dh({
            ...n,
            select: (r)=>e ? e(r.loaderDeps) : r.loaderDeps
        });
    }
    function sn(t) {
        return dh({
            from: t.from,
            strict: t.strict,
            shouldThrow: t.shouldThrow,
            structuralSharing: t.structuralSharing,
            select: (e)=>t.select ? t.select(e.params) : e.params
        });
    }
    function lX(t) {
        return dh({
            from: t.from,
            strict: t.strict,
            shouldThrow: t.shouldThrow,
            structuralSharing: t.structuralSharing,
            select: (e)=>t.select ? t.select(e.search) : e.search
        });
    }
    function _l(t) {
        return !!t?.isNotFound;
    }
    function cX(t) {
        const e = co({
            select: (n)=>`not-found-${n.location.pathname}-${n.status}`
        });
        return x.jsx(fP, {
            getResetKey: ()=>e,
            onCatch: (n, r)=>{
                var i;
                if (_l(n)) (i = t.onCatch) == null || i.call(t, n, r);
                else throw n;
            },
            errorComponent: ({ error: n })=>{
                var r;
                if (_l(n)) return (r = t.fallback) == null ? void 0 : r.call(t, n);
                throw n;
            },
            children: t.children
        });
    }
    function uX() {
        return x.jsx("p", {
            children: "Not Found"
        });
    }
    function Om(t) {
        const { navigate: e } = Il();
        return J.useCallback((n)=>e({
                ...n
            }), [
            e
        ]);
    }
    let RB = class {
        constructor(e){
            this.init = (n)=>{
                var r, i;
                this.originalIndex = n.originalIndex;
                const s = this.options, o = !s?.path && !s?.id;
                this.parentRoute = (i = (r = this.options).getParentRoute) == null ? void 0 : i.call(r), o ? this._path = pa : hc(this.parentRoute);
                let a = o ? pa : s.path;
                a && a !== "/" && (a = uP(a));
                const l = s?.id || a;
                let c = o ? pa : Sd([
                    this.parentRoute.id === pa ? "" : this.parentRoute.id,
                    l
                ]);
                a === pa && (a = "/"), c !== pa && (c = Sd([
                    "/",
                    c
                ]));
                const u = c === pa ? "/" : Sd([
                    this.parentRoute.fullPath,
                    a
                ]);
                this._path = a, this._id = c, this._fullPath = u, this._to = u, this._ssr = s?.ssr ?? n.defaultSsr ?? !0;
            }, this.updateLoader = (n)=>(Object.assign(this.options, n), this), this.update = (n)=>(Object.assign(this.options, n), this), this.lazy = (n)=>(this.lazyFn = n, this), this.useMatch = (n)=>dh({
                    select: n?.select,
                    from: this.id,
                    structuralSharing: n?.structuralSharing
                }), this.useRouteContext = (n)=>dh({
                    ...n,
                    from: this.id,
                    select: (r)=>n?.select ? n.select(r.context) : r.context
                }), this.useSearch = (n)=>lX({
                    select: n?.select,
                    structuralSharing: n?.structuralSharing,
                    from: this.id
                }), this.useParams = (n)=>sn({
                    select: n?.select,
                    structuralSharing: n?.structuralSharing,
                    from: this.id
                }), this.useLoaderDeps = (n)=>aX({
                    ...n,
                    from: this.id
                }), this.useLoaderData = (n)=>es({
                    ...n,
                    from: this.id
                }), this.useNavigate = ()=>Om({
                    from: this.id
                }), this.options = e || {}, this.isRoot = !e?.getParentRoute, hc(!(e?.id && e?.path)), this.$$typeof = Symbol.for("react.memo");
        }
        get to() {
            return this._to;
        }
        get id() {
            return this._id;
        }
        get path() {
            return this._path;
        }
        get fullPath() {
            return this._fullPath;
        }
        get ssr() {
            return this._ssr;
        }
        addChildren(e) {
            return this._addFileChildren(e);
        }
        _addFileChildren(e) {
            return Array.isArray(e) && (this.children = e), typeof e == "object" && e !== null && (this.children = Object.values(e)), this;
        }
    };
    function dX(t) {
        return new RB(t);
    }
    function fX() {
        return (t)=>pX(t);
    }
    class hX extends RB {
        constructor(e){
            super(e);
        }
        addChildren(e) {
            return super.addChildren(e), this;
        }
        _addFileChildren(e) {
            return super._addFileChildren(e), this;
        }
        _addFileTypes() {
            return this;
        }
    }
    function pX(t) {
        return new hX(t);
    }
    function Bt(t) {
        return new mX(t, {
            silent: !0
        }).createRoute;
    }
    class mX {
        constructor(e, n){
            this.path = e, this.createRoute = (r)=>{
                this.silent;
                const i = dX(r);
                return i.isRoot = !1, i;
            }, this.silent = n?.silent;
        }
    }
    function dw(t) {
        if (t.isRedirect = !0, t.statusCode = t.statusCode || t.code || 307, t.headers = t.headers || {}, !t.reloadDocument) {
            t.reloadDocument = !1;
            try {
                new URL(`${t.href}`), t.reloadDocument = !0;
            } catch  {}
        }
        if (t.throw) throw t;
        return t;
    }
    function Lp(t) {
        return !!t?.isRedirect;
    }
    function kC(t) {
        return !!t?.isRedirect && t.href;
    }
    function SS(t) {
        return x.jsx(x.Fragment, {
            children: t.children
        });
    }
    function IB(t, e, n) {
        return e.options.notFoundComponent ? x.jsx(e.options.notFoundComponent, {
            data: n
        }) : t.options.defaultNotFoundComponent ? x.jsx(t.options.defaultNotFoundComponent, {
            data: n
        }) : x.jsx(uX, {});
    }
    var OC, ND;
    function gX() {
        if (ND) return OC;
        ND = 1;
        const t = {}, e = t.hasOwnProperty, n = (D, R)=>{
            for(const N in D)e.call(D, N) && R(N, D[N]);
        }, r = (D, R)=>(R && n(R, (N, k)=>{
                D[N] = k;
            }), D), i = (D, R)=>{
            const N = D.length;
            let k = -1;
            for(; ++k < N;)R(D[k]);
        }, s = (D)=>"\\u" + ("0000" + D).slice(-4), o = (D, R)=>{
            let N = D.toString(16);
            return R ? N : N.toUpperCase();
        }, a = t.toString, l = Array.isArray, c = (D)=>typeof Buffer == "function" && Buffer.isBuffer(D), u = (D)=>a.call(D) == "[object Object]", f = (D)=>typeof D == "string" || a.call(D) == "[object String]", h = (D)=>typeof D == "number" || a.call(D) == "[object Number]", m = (D)=>typeof D == "bigint", v = (D)=>typeof D == "function", _ = (D)=>a.call(D) == "[object Map]", w = (D)=>a.call(D) == "[object Set]", b = {
            "\\": "\\\\",
            "\b": "\\b",
            "\f": "\\f",
            "\n": "\\n",
            "\r": "\\r",
            "	": "\\t"
        }, M = /[\\\b\f\n\r\t]/, E = /[0-9]/, T = /[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/, P = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^]/g, A = /([\uD800-\uDBFF][\uDC00-\uDFFF])|([\uD800-\uDFFF])|(['"`])|[^ !#-&\(-\[\]-_a-~]/g, O = (D, R)=>{
            const N = ()=>{
                ee = q, ++R.indentLevel, q = R.indent.repeat(R.indentLevel);
            }, k = {
                escapeEverything: !1,
                minimal: !1,
                isScriptContext: !1,
                quotes: "single",
                wrap: !1,
                es6: !1,
                json: !1,
                compact: !0,
                lowercaseHex: !1,
                numbers: "decimal",
                indent: "	",
                indentLevel: 0,
                __inline1__: !1,
                __inline2__: !1
            }, U = R && R.json;
            U && (k.quotes = "double", k.wrap = !0), R = r(k, R), R.quotes != "single" && R.quotes != "double" && R.quotes != "backtick" && (R.quotes = "single");
            const B = R.quotes == "double" ? '"' : R.quotes == "backtick" ? "`" : "'", j = R.compact, K = R.lowercaseHex;
            let q = R.indent.repeat(R.indentLevel), ee = "";
            const W = R.__inline1__, Z = R.__inline2__, $ = j ? "" : `
`;
            let H, se = !0;
            const le = R.numbers == "binary", ne = R.numbers == "octal", ue = R.numbers == "decimal", ge = R.numbers == "hexadecimal";
            if (U && D && v(D.toJSON) && (D = D.toJSON()), !f(D)) {
                if (_(D)) return D.size == 0 ? "new Map()" : (j || (R.__inline1__ = !0, R.__inline2__ = !1), "new Map(" + O(Array.from(D), R) + ")");
                if (w(D)) return D.size == 0 ? "new Set()" : "new Set(" + O(Array.from(D), R) + ")";
                if (c(D)) return D.length == 0 ? "Buffer.from([])" : "Buffer.from(" + O(Array.from(D), R) + ")";
                if (l(D)) return H = [], R.wrap = !0, W && (R.__inline1__ = !1, R.__inline2__ = !0), Z || N(), i(D, (_e)=>{
                    se = !1, Z && (R.__inline2__ = !1), H.push((j || Z ? "" : q) + O(_e, R));
                }), se ? "[]" : Z ? "[" + H.join(", ") + "]" : "[" + $ + H.join("," + $) + $ + (j ? "" : ee) + "]";
                if (h(D) || m(D)) {
                    if (U) return JSON.stringify(Number(D));
                    let _e;
                    if (ue) _e = String(D);
                    else if (ge) {
                        let Te = D.toString(16);
                        K || (Te = Te.toUpperCase()), _e = "0x" + Te;
                    } else le ? _e = "0b" + D.toString(2) : ne && (_e = "0o" + D.toString(8));
                    return m(D) ? _e + "n" : _e;
                } else return m(D) ? U ? JSON.stringify(Number(D)) : D + "n" : u(D) ? (H = [], R.wrap = !0, N(), n(D, (_e, Te)=>{
                    se = !1, H.push((j ? "" : q) + O(_e, R) + ":" + (j ? "" : " ") + O(Te, R));
                }), se ? "{}" : "{" + $ + H.join("," + $) + $ + (j ? "" : ee) + "}") : U ? JSON.stringify(D) || "null" : String(D);
            }
            const ye = R.escapeEverything ? P : A;
            return H = D.replace(ye, (_e, Te, Re, Fe, be, Me)=>{
                if (Te) {
                    if (R.minimal) return Te;
                    const Ye = Te.charCodeAt(0), Be = Te.charCodeAt(1);
                    if (R.es6) {
                        const nt = (Ye - 55296) * 1024 + Be - 56320 + 65536;
                        return "\\u{" + o(nt, K) + "}";
                    }
                    return s(o(Ye, K)) + s(o(Be, K));
                }
                if (Re) return s(o(Re.charCodeAt(0), K));
                if (_e == "\0" && !U && !E.test(Me.charAt(be + 1))) return "\\0";
                if (Fe) return Fe == B || R.escapeEverything ? "\\" + Fe : Fe;
                if (M.test(_e)) return b[_e];
                if (R.minimal && !T.test(_e)) return _e;
                const oe = o(_e.charCodeAt(0), K);
                return U || oe.length > 2 ? s(oe) : "\\x" + ("00" + oe).slice(-2);
            }), B == "`" && (H = H.replace(/\$\{/g, "\\${")), R.isScriptContext && (H = H.replace(/<\/(script|style)/gi, "<\\/$1").replace(/<!--/g, U ? "\\u003C!--" : "\\x3C!--")), R.wrap && (H = B + H + B), H;
        };
        return O.version = "3.0.2", OC = O, OC;
    }
    gX();
    function yX({ children: t, log: e }) {
        return typeof document < "u" ? null : x.jsx("script", {
            className: "tsr-once",
            dangerouslySetInnerHTML: {
                __html: [
                    t,
                    "",
                    'if (typeof __TSR_SSR__ !== "undefined") __TSR_SSR__.cleanScripts()'
                ].filter(Boolean).join(`
`)
            }
        });
    }
    const _E = "tsr-scroll-restoration-v1_3", vX = typeof window < "u" && window.sessionStorage, xX = (t, e)=>{
        let n;
        return (...r)=>{
            n || (n = setTimeout(()=>{
                t(...r), n = null;
            }, e));
        };
    }, T0 = vX ? {
        state: JSON.parse(window.sessionStorage.getItem(_E) || "null") || {},
        set: (e)=>(T0.state = Xp(e, T0.state) || T0.state, window.sessionStorage.setItem(_E, JSON.stringify(T0.state)))
    } : void 0, RN = (t)=>t.state.key || t.href;
    function bX(t) {
        const e = [];
        let n;
        for(; n = t.parentNode;)e.unshift(`${t.tagName}:nth-child(${[].indexOf.call(n.children, t) + 1})`), t = n;
        return `${e.join(" > ")}`.toLowerCase();
    }
    let SE = !1;
    function AB(t, e, n, r, i) {
        var s;
        let o;
        try {
            o = JSON.parse(sessionStorage.getItem(t) || "{}");
        } catch (c) {
            console.error(c);
            return;
        }
        const a = e || ((s = window.history.state) == null ? void 0 : s.key), l = o[a];
        SE = !0, (()=>{
            if (r && l) {
                for(const u in l){
                    const f = l[u];
                    if (u === "window") window.scrollTo({
                        top: f.scrollY,
                        left: f.scrollX,
                        behavior: n
                    });
                    else if (u) {
                        const h = document.querySelector(u);
                        h && (h.scrollLeft = f.scrollX, h.scrollTop = f.scrollY);
                    }
                }
                return;
            }
            const c = window.location.hash.split("#")[1];
            if (c) {
                const u = (window.history.state || {}).__hashScrollIntoViewOptions ?? !0;
                if (u) {
                    const f = document.getElementById(c);
                    f && f.scrollIntoView(u);
                }
                return;
            }
            [
                "window",
                ...i?.filter((u)=>u !== "window") ?? []
            ].forEach((u)=>{
                const f = u === "window" ? window : document.querySelector(u);
                f && f.scrollTo({
                    top: 0,
                    left: 0,
                    behavior: n
                });
            });
        })(), SE = !1;
    }
    function wX(t, e) {
        if ((t.options.scrollRestoration ?? !1) && (t.isScrollRestoring = !0), typeof document > "u" || t.isScrollRestorationSetup) return;
        t.isScrollRestorationSetup = !0, SE = !1;
        const r = t.options.getScrollRestorationKey || RN;
        window.history.scrollRestoration = "manual";
        const i = (s)=>{
            if (SE || !t.isScrollRestoring) return;
            let o = "";
            if (s.target === document || s.target === window) o = "window";
            else {
                const l = s.target.getAttribute("data-scroll-restoration-id");
                l ? o = `[data-scroll-restoration-id="${l}"]` : o = bX(s.target);
            }
            const a = r(t.state.location);
            T0.set((l)=>{
                const c = l[a] = l[a] || {}, u = c[o] = c[o] || {};
                if (o === "window") u.scrollX = window.scrollX || 0, u.scrollY = window.scrollY || 0;
                else if (o) {
                    const f = document.querySelector(o);
                    f && (u.scrollX = f.scrollLeft || 0, u.scrollY = f.scrollTop || 0);
                }
                return l;
            });
        };
        typeof document < "u" && document.addEventListener("scroll", xX(i, 100), !0), t.subscribe("onRendered", (s)=>{
            const o = r(s.toLocation);
            if (!t.resetNextScroll) {
                t.resetNextScroll = !0;
                return;
            }
            AB(_E, o, t.options.scrollRestorationBehavior, t.isScrollRestoring, t.options.scrollToTopSelectors), t.isScrollRestoring && T0.set((a)=>(a[o] = a[o] || {}, a));
        });
    }
    function _X() {
        const t = Il(), n = (t.options.getScrollRestorationKey || RN)(t.latestLocation), r = n !== RN(t.latestLocation) ? n : null;
        return !t.isScrollRestoring || !t.isServer ? null : x.jsx(yX, {
            children: `(${AB.toString()})(${JSON.stringify(_E)},${JSON.stringify(r)}, undefined, true)`,
            log: !1
        });
    }
    const NB = J.memo(function({ matchId: e }) {
        var n, r;
        const i = Il(), s = co({
            select: (b)=>{
                var M;
                return (M = b.matches.find((E)=>E.id === e)) == null ? void 0 : M.routeId;
            }
        });
        hc(s);
        const o = i.routesById[s], a = o.options.pendingComponent ?? i.options.defaultPendingComponent, l = a ? x.jsx(a, {}) : null, c = o.options.errorComponent ?? i.options.defaultErrorComponent, u = o.options.onCatch ?? i.options.defaultOnCatch, f = o.isRoot ? o.options.notFoundComponent ?? ((n = i.options.notFoundRoute) == null ? void 0 : n.options.component) : o.options.notFoundComponent, h = (!o.isRoot || o.options.wrapInSuspense) && (o.options.wrapInSuspense ?? a ?? ((r = o.options.errorComponent) == null ? void 0 : r.preload)) ? J.Suspense : SS, m = c ? fP : SS, v = f ? cX : SS, _ = co({
            select: (b)=>b.loadedAt
        }), w = co({
            select: (b)=>{
                var M;
                const E = b.matches.findIndex((T)=>T.id === e);
                return (M = b.matches[E - 1]) == null ? void 0 : M.routeId;
            }
        });
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx(yT.Provider, {
                    value: e,
                    children: x.jsx(h, {
                        fallback: l,
                        children: x.jsx(m, {
                            getResetKey: ()=>_,
                            errorComponent: c || gT,
                            onCatch: (b, M)=>{
                                if (_l(b)) throw b;
                                u?.(b, M);
                            },
                            children: x.jsx(v, {
                                fallback: (b)=>{
                                    if (!f || b.routeId && b.routeId !== s || !b.routeId && !o.isRoot) throw b;
                                    return J.createElement(f, b);
                                },
                                children: x.jsx(EX, {
                                    matchId: e
                                })
                            })
                        })
                    })
                }),
                w === pa && i.options.scrollRestoration ? x.jsxs(x.Fragment, {
                    children: [
                        x.jsx(SX, {}),
                        x.jsx(_X, {})
                    ]
                }) : null
            ]
        });
    });
    function SX() {
        var t;
        const e = Il(), n = J.useRef(void 0);
        return x.jsx("script", {
            suppressHydrationWarning: !0,
            ref: (r)=>{
                r ? e.emit({
                    type: "onRendered",
                    ...V0(e.state)
                }) : n.current = e.state.resolvedLocation;
            }
        }, (t = e.state.resolvedLocation) == null ? void 0 : t.state.key);
    }
    const EX = J.memo(function({ matchId: e }) {
        var n, r, i;
        const s = Il(), { match: o, key: a, routeId: l } = co({
            select: (h)=>{
                const m = h.matches.findIndex((E)=>E.id === e), v = h.matches[m], _ = v.routeId, w = s.routesById[_].options.remountDeps ?? s.options.defaultRemountDeps, b = w?.({
                    routeId: _,
                    loaderDeps: v.loaderDeps,
                    params: v._strictParams,
                    search: v._strictSearch
                });
                return {
                    key: b ? JSON.stringify(b) : void 0,
                    routeId: _,
                    match: MN(v, [
                        "id",
                        "status",
                        "error"
                    ])
                };
            },
            structuralSharing: !0
        }), c = s.routesById[l], u = J.useMemo(()=>{
            const h = c.options.component ?? s.options.defaultComponent;
            return h ? x.jsx(h, {}, a) : x.jsx(Al, {});
        }, [
            a,
            c.options.component,
            s.options.defaultComponent
        ]), f = (c.options.errorComponent ?? s.options.defaultErrorComponent) || gT;
        if (o.status === "notFound") return hc(_l(o.error)), IB(s, c, o.error);
        if (o.status === "redirected") throw hc(Lp(o.error)), (n = s.getMatch(o.id)) == null ? void 0 : n.loadPromise;
        if (o.status === "error") {
            if (s.isServer) return x.jsx(f, {
                error: o.error,
                reset: void 0,
                info: {
                    componentStack: ""
                }
            });
            throw o.error;
        }
        if (o.status === "pending") {
            const h = c.options.pendingMinMs ?? s.options.defaultPendingMinMs;
            if (h && !((r = s.getMatch(o.id)) != null && r.minPendingPromise) && !s.isServer) {
                const m = x0();
                Promise.resolve().then(()=>{
                    s.updateMatch(o.id, (v)=>({
                            ...v,
                            minPendingPromise: m
                        }));
                }), setTimeout(()=>{
                    m.resolve(), s.updateMatch(o.id, (v)=>({
                            ...v,
                            minPendingPromise: void 0
                        }));
                }, h);
            }
            throw (i = s.getMatch(o.id)) == null ? void 0 : i.loadPromise;
        }
        return u;
    }), Al = J.memo(function() {
        const e = Il(), n = J.useContext(yT), r = co({
            select: (c)=>{
                var u;
                return (u = c.matches.find((f)=>f.id === n)) == null ? void 0 : u.routeId;
            }
        }), i = e.routesById[r], s = co({
            select: (c)=>{
                const f = c.matches.find((h)=>h.id === n);
                return hc(f), f.globalNotFound;
            }
        }), o = co({
            select: (c)=>{
                var u;
                const f = c.matches, h = f.findIndex((m)=>m.id === n);
                return (u = f[h + 1]) == null ? void 0 : u.id;
            }
        });
        if (s) return IB(e, i, void 0);
        if (!o) return null;
        const a = x.jsx(NB, {
            matchId: o
        }), l = e.options.defaultPendingComponent ? x.jsx(e.options.defaultPendingComponent, {}) : null;
        return n === pa ? x.jsx(J.Suspense, {
            fallback: l,
            children: a
        }) : a;
    });
    var DC = {
        exports: {}
    }, aa = {}, LC = {
        exports: {}
    }, FC = {};
    var PD;
    function MX() {
        return PD || (PD = 1, function(t) {
            function e(W, Z) {
                var $ = W.length;
                W.push(Z);
                e: for(; 0 < $;){
                    var H = $ - 1 >>> 1, se = W[H];
                    if (0 < i(se, Z)) W[H] = Z, W[$] = se, $ = H;
                    else break e;
                }
            }
            function n(W) {
                return W.length === 0 ? null : W[0];
            }
            function r(W) {
                if (W.length === 0) return null;
                var Z = W[0], $ = W.pop();
                if ($ !== Z) {
                    W[0] = $;
                    e: for(var H = 0, se = W.length, le = se >>> 1; H < le;){
                        var ne = 2 * (H + 1) - 1, ue = W[ne], ge = ne + 1, ye = W[ge];
                        if (0 > i(ue, $)) ge < se && 0 > i(ye, ue) ? (W[H] = ye, W[ge] = $, H = ge) : (W[H] = ue, W[ne] = $, H = ne);
                        else if (ge < se && 0 > i(ye, $)) W[H] = ye, W[ge] = $, H = ge;
                        else break e;
                    }
                }
                return Z;
            }
            function i(W, Z) {
                var $ = W.sortIndex - Z.sortIndex;
                return $ !== 0 ? $ : W.id - Z.id;
            }
            if (typeof performance == "object" && typeof performance.now == "function") {
                var s = performance;
                t.unstable_now = function() {
                    return s.now();
                };
            } else {
                var o = Date, a = o.now();
                t.unstable_now = function() {
                    return o.now() - a;
                };
            }
            var l = [], c = [], u = 1, f = null, h = 3, m = !1, v = !1, _ = !1, w = typeof setTimeout == "function" ? setTimeout : null, b = typeof clearTimeout == "function" ? clearTimeout : null, M = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            function E(W) {
                for(var Z = n(c); Z !== null;){
                    if (Z.callback === null) r(c);
                    else if (Z.startTime <= W) r(c), Z.sortIndex = Z.expirationTime, e(l, Z);
                    else break;
                    Z = n(c);
                }
            }
            function T(W) {
                if (_ = !1, E(W), !v) if (n(l) !== null) v = !0, q(P);
                else {
                    var Z = n(c);
                    Z !== null && ee(T, Z.startTime - W);
                }
            }
            function P(W, Z) {
                v = !1, _ && (_ = !1, b(D), D = -1), m = !0;
                var $ = h;
                try {
                    for(E(Z), f = n(l); f !== null && (!(f.expirationTime > Z) || W && !k());){
                        var H = f.callback;
                        if (typeof H == "function") {
                            f.callback = null, h = f.priorityLevel;
                            var se = H(f.expirationTime <= Z);
                            Z = t.unstable_now(), typeof se == "function" ? f.callback = se : f === n(l) && r(l), E(Z);
                        } else r(l);
                        f = n(l);
                    }
                    if (f !== null) var le = !0;
                    else {
                        var ne = n(c);
                        ne !== null && ee(T, ne.startTime - Z), le = !1;
                    }
                    return le;
                } finally{
                    f = null, h = $, m = !1;
                }
            }
            var A = !1, O = null, D = -1, R = 5, N = -1;
            function k() {
                return !(t.unstable_now() - N < R);
            }
            function U() {
                if (O !== null) {
                    var W = t.unstable_now();
                    N = W;
                    var Z = !0;
                    try {
                        Z = O(!0, W);
                    } finally{
                        Z ? B() : (A = !1, O = null);
                    }
                } else A = !1;
            }
            var B;
            if (typeof M == "function") B = function() {
                M(U);
            };
            else if (typeof MessageChannel < "u") {
                var j = new MessageChannel, K = j.port2;
                j.port1.onmessage = U, B = function() {
                    K.postMessage(null);
                };
            } else B = function() {
                w(U, 0);
            };
            function q(W) {
                O = W, A || (A = !0, B());
            }
            function ee(W, Z) {
                D = w(function() {
                    W(t.unstable_now());
                }, Z);
            }
            t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(W) {
                W.callback = null;
            }, t.unstable_continueExecution = function() {
                v || m || (v = !0, q(P));
            }, t.unstable_forceFrameRate = function(W) {
                0 > W || 125 < W ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : R = 0 < W ? Math.floor(1e3 / W) : 5;
            }, t.unstable_getCurrentPriorityLevel = function() {
                return h;
            }, t.unstable_getFirstCallbackNode = function() {
                return n(l);
            }, t.unstable_next = function(W) {
                switch(h){
                    case 1:
                    case 2:
                    case 3:
                        var Z = 3;
                        break;
                    default:
                        Z = h;
                }
                var $ = h;
                h = Z;
                try {
                    return W();
                } finally{
                    h = $;
                }
            }, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, t.unstable_runWithPriority = function(W, Z) {
                switch(W){
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        W = 3;
                }
                var $ = h;
                h = W;
                try {
                    return Z();
                } finally{
                    h = $;
                }
            }, t.unstable_scheduleCallback = function(W, Z, $) {
                var H = t.unstable_now();
                switch(typeof $ == "object" && $ !== null ? ($ = $.delay, $ = typeof $ == "number" && 0 < $ ? H + $ : H) : $ = H, W){
                    case 1:
                        var se = -1;
                        break;
                    case 2:
                        se = 250;
                        break;
                    case 5:
                        se = 1073741823;
                        break;
                    case 4:
                        se = 1e4;
                        break;
                    default:
                        se = 5e3;
                }
                return se = $ + se, W = {
                    id: u++,
                    callback: Z,
                    priorityLevel: W,
                    startTime: $,
                    expirationTime: se,
                    sortIndex: -1
                }, $ > H ? (W.sortIndex = $, e(c, W), n(l) === null && W === n(c) && (_ ? (b(D), D = -1) : _ = !0, ee(T, $ - H))) : (W.sortIndex = se, e(l, W), v || m || (v = !0, q(P))), W;
            }, t.unstable_shouldYield = k, t.unstable_wrapCallback = function(W) {
                var Z = h;
                return function() {
                    var $ = h;
                    h = Z;
                    try {
                        return W.apply(this, arguments);
                    } finally{
                        h = $;
                    }
                };
            };
        }(FC)), FC;
    }
    var kD;
    function TX() {
        return kD || (kD = 1, LC.exports = MX()), LC.exports;
    }
    var OD;
    function CX() {
        if (OD) return aa;
        OD = 1;
        var t = Ry(), e = TX();
        function n(d) {
            for(var p = "https://reactjs.org/docs/error-decoder.html?invariant=" + d, S = 1; S < arguments.length; S++)p += "&args[]=" + encodeURIComponent(arguments[S]);
            return "Minified React error #" + d + "; visit " + p + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
        }
        var r = new Set, i = {};
        function s(d, p) {
            o(d, p), o(d + "Capture", p);
        }
        function o(d, p) {
            for(i[d] = p, d = 0; d < p.length; d++)r.add(p[d]);
        }
        var a = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), l = Object.prototype.hasOwnProperty, c = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, u = {}, f = {};
        function h(d) {
            return l.call(f, d) ? !0 : l.call(u, d) ? !1 : c.test(d) ? f[d] = !0 : (u[d] = !0, !1);
        }
        function m(d, p, S, I) {
            if (S !== null && S.type === 0) return !1;
            switch(typeof p){
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return I ? !1 : S !== null ? !S.acceptsBooleans : (d = d.toLowerCase().slice(0, 5), d !== "data-" && d !== "aria-");
                default:
                    return !1;
            }
        }
        function v(d, p, S, I) {
            if (p === null || typeof p > "u" || m(d, p, S, I)) return !0;
            if (I) return !1;
            if (S !== null) switch(S.type){
                case 3:
                    return !p;
                case 4:
                    return p === !1;
                case 5:
                    return isNaN(p);
                case 6:
                    return isNaN(p) || 1 > p;
            }
            return !1;
        }
        function _(d, p, S, I, F, V, ie) {
            this.acceptsBooleans = p === 2 || p === 3 || p === 4, this.attributeName = I, this.attributeNamespace = F, this.mustUseProperty = S, this.propertyName = d, this.type = p, this.sanitizeURL = V, this.removeEmptyString = ie;
        }
        var w = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(d) {
            w[d] = new _(d, 0, !1, d, null, !1, !1);
        }), [
            [
                "acceptCharset",
                "accept-charset"
            ],
            [
                "className",
                "class"
            ],
            [
                "htmlFor",
                "for"
            ],
            [
                "httpEquiv",
                "http-equiv"
            ]
        ].forEach(function(d) {
            var p = d[0];
            w[p] = new _(p, 1, !1, d[1], null, !1, !1);
        }), [
            "contentEditable",
            "draggable",
            "spellCheck",
            "value"
        ].forEach(function(d) {
            w[d] = new _(d, 2, !1, d.toLowerCase(), null, !1, !1);
        }), [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha"
        ].forEach(function(d) {
            w[d] = new _(d, 2, !1, d, null, !1, !1);
        }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(d) {
            w[d] = new _(d, 3, !1, d.toLowerCase(), null, !1, !1);
        }), [
            "checked",
            "multiple",
            "muted",
            "selected"
        ].forEach(function(d) {
            w[d] = new _(d, 3, !0, d, null, !1, !1);
        }), [
            "capture",
            "download"
        ].forEach(function(d) {
            w[d] = new _(d, 4, !1, d, null, !1, !1);
        }), [
            "cols",
            "rows",
            "size",
            "span"
        ].forEach(function(d) {
            w[d] = new _(d, 6, !1, d, null, !1, !1);
        }), [
            "rowSpan",
            "start"
        ].forEach(function(d) {
            w[d] = new _(d, 5, !1, d.toLowerCase(), null, !1, !1);
        });
        var b = /[\-:]([a-z])/g;
        function M(d) {
            return d[1].toUpperCase();
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(d) {
            var p = d.replace(b, M);
            w[p] = new _(p, 1, !1, d, null, !1, !1);
        }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(d) {
            var p = d.replace(b, M);
            w[p] = new _(p, 1, !1, d, "http://www.w3.org/1999/xlink", !1, !1);
        }), [
            "xml:base",
            "xml:lang",
            "xml:space"
        ].forEach(function(d) {
            var p = d.replace(b, M);
            w[p] = new _(p, 1, !1, d, "http://www.w3.org/XML/1998/namespace", !1, !1);
        }), [
            "tabIndex",
            "crossOrigin"
        ].forEach(function(d) {
            w[d] = new _(d, 1, !1, d.toLowerCase(), null, !1, !1);
        }), w.xlinkHref = new _("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), [
            "src",
            "href",
            "action",
            "formAction"
        ].forEach(function(d) {
            w[d] = new _(d, 1, !1, d.toLowerCase(), null, !0, !0);
        });
        function E(d, p, S, I) {
            var F = w.hasOwnProperty(p) ? w[p] : null;
            (F !== null ? F.type !== 0 : I || !(2 < p.length) || p[0] !== "o" && p[0] !== "O" || p[1] !== "n" && p[1] !== "N") && (v(p, S, F, I) && (S = null), I || F === null ? h(p) && (S === null ? d.removeAttribute(p) : d.setAttribute(p, "" + S)) : F.mustUseProperty ? d[F.propertyName] = S === null ? F.type === 3 ? !1 : "" : S : (p = F.attributeName, I = F.attributeNamespace, S === null ? d.removeAttribute(p) : (F = F.type, S = F === 3 || F === 4 && S === !0 ? "" : "" + S, I ? d.setAttributeNS(I, p, S) : d.setAttribute(p, S))));
        }
        var T = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, P = Symbol.for("react.element"), A = Symbol.for("react.portal"), O = Symbol.for("react.fragment"), D = Symbol.for("react.strict_mode"), R = Symbol.for("react.profiler"), N = Symbol.for("react.provider"), k = Symbol.for("react.context"), U = Symbol.for("react.forward_ref"), B = Symbol.for("react.suspense"), j = Symbol.for("react.suspense_list"), K = Symbol.for("react.memo"), q = Symbol.for("react.lazy"), ee = Symbol.for("react.offscreen"), W = Symbol.iterator;
        function Z(d) {
            return d === null || typeof d != "object" ? null : (d = W && d[W] || d["@@iterator"], typeof d == "function" ? d : null);
        }
        var $ = Object.assign, H;
        function se(d) {
            if (H === void 0) try {
                throw Error();
            } catch (S) {
                var p = S.stack.trim().match(/\n( *(at )?)/);
                H = p && p[1] || "";
            }
            return `
` + H + d;
        }
        var le = !1;
        function ne(d, p) {
            if (!d || le) return "";
            le = !0;
            var S = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
                if (p) if (p = function() {
                    throw Error();
                }, Object.defineProperty(p.prototype, "props", {
                    set: function() {
                        throw Error();
                    }
                }), typeof Reflect == "object" && Reflect.construct) {
                    try {
                        Reflect.construct(p, []);
                    } catch (Ke) {
                        var I = Ke;
                    }
                    Reflect.construct(d, [], p);
                } else {
                    try {
                        p.call();
                    } catch (Ke) {
                        I = Ke;
                    }
                    d.call(p.prototype);
                }
                else {
                    try {
                        throw Error();
                    } catch (Ke) {
                        I = Ke;
                    }
                    d();
                }
            } catch (Ke) {
                if (Ke && I && typeof Ke.stack == "string") {
                    for(var F = Ke.stack.split(`
`), V = I.stack.split(`
`), ie = F.length - 1, we = V.length - 1; 1 <= ie && 0 <= we && F[ie] !== V[we];)we--;
                    for(; 1 <= ie && 0 <= we; ie--, we--)if (F[ie] !== V[we]) {
                        if (ie !== 1 || we !== 1) do if (ie--, we--, 0 > we || F[ie] !== V[we]) {
                            var Ce = `
` + F[ie].replace(" at new ", " at ");
                            return d.displayName && Ce.includes("<anonymous>") && (Ce = Ce.replace("<anonymous>", d.displayName)), Ce;
                        }
                        while (1 <= ie && 0 <= we);
                        break;
                    }
                }
            } finally{
                le = !1, Error.prepareStackTrace = S;
            }
            return (d = d ? d.displayName || d.name : "") ? se(d) : "";
        }
        function ue(d) {
            switch(d.tag){
                case 5:
                    return se(d.type);
                case 16:
                    return se("Lazy");
                case 13:
                    return se("Suspense");
                case 19:
                    return se("SuspenseList");
                case 0:
                case 2:
                case 15:
                    return d = ne(d.type, !1), d;
                case 11:
                    return d = ne(d.type.render, !1), d;
                case 1:
                    return d = ne(d.type, !0), d;
                default:
                    return "";
            }
        }
        function ge(d) {
            if (d == null) return null;
            if (typeof d == "function") return d.displayName || d.name || null;
            if (typeof d == "string") return d;
            switch(d){
                case O:
                    return "Fragment";
                case A:
                    return "Portal";
                case R:
                    return "Profiler";
                case D:
                    return "StrictMode";
                case B:
                    return "Suspense";
                case j:
                    return "SuspenseList";
            }
            if (typeof d == "object") switch(d.$$typeof){
                case k:
                    return (d.displayName || "Context") + ".Consumer";
                case N:
                    return (d._context.displayName || "Context") + ".Provider";
                case U:
                    var p = d.render;
                    return d = d.displayName, d || (d = p.displayName || p.name || "", d = d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef"), d;
                case K:
                    return p = d.displayName || null, p !== null ? p : ge(d.type) || "Memo";
                case q:
                    p = d._payload, d = d._init;
                    try {
                        return ge(d(p));
                    } catch  {}
            }
            return null;
        }
        function ye(d) {
            var p = d.type;
            switch(d.tag){
                case 24:
                    return "Cache";
                case 9:
                    return (p.displayName || "Context") + ".Consumer";
                case 10:
                    return (p._context.displayName || "Context") + ".Provider";
                case 18:
                    return "DehydratedFragment";
                case 11:
                    return d = p.render, d = d.displayName || d.name || "", p.displayName || (d !== "" ? "ForwardRef(" + d + ")" : "ForwardRef");
                case 7:
                    return "Fragment";
                case 5:
                    return p;
                case 4:
                    return "Portal";
                case 3:
                    return "Root";
                case 6:
                    return "Text";
                case 16:
                    return ge(p);
                case 8:
                    return p === D ? "StrictMode" : "Mode";
                case 22:
                    return "Offscreen";
                case 12:
                    return "Profiler";
                case 21:
                    return "Scope";
                case 13:
                    return "Suspense";
                case 19:
                    return "SuspenseList";
                case 25:
                    return "TracingMarker";
                case 1:
                case 0:
                case 17:
                case 2:
                case 14:
                case 15:
                    if (typeof p == "function") return p.displayName || p.name || null;
                    if (typeof p == "string") return p;
            }
            return null;
        }
        function _e(d) {
            switch(typeof d){
                case "boolean":
                case "number":
                case "string":
                case "undefined":
                    return d;
                case "object":
                    return d;
                default:
                    return "";
            }
        }
        function Te(d) {
            var p = d.type;
            return (d = d.nodeName) && d.toLowerCase() === "input" && (p === "checkbox" || p === "radio");
        }
        function Re(d) {
            var p = Te(d) ? "checked" : "value", S = Object.getOwnPropertyDescriptor(d.constructor.prototype, p), I = "" + d[p];
            if (!d.hasOwnProperty(p) && typeof S < "u" && typeof S.get == "function" && typeof S.set == "function") {
                var F = S.get, V = S.set;
                return Object.defineProperty(d, p, {
                    configurable: !0,
                    get: function() {
                        return F.call(this);
                    },
                    set: function(ie) {
                        I = "" + ie, V.call(this, ie);
                    }
                }), Object.defineProperty(d, p, {
                    enumerable: S.enumerable
                }), {
                    getValue: function() {
                        return I;
                    },
                    setValue: function(ie) {
                        I = "" + ie;
                    },
                    stopTracking: function() {
                        d._valueTracker = null, delete d[p];
                    }
                };
            }
        }
        function Fe(d) {
            d._valueTracker || (d._valueTracker = Re(d));
        }
        function be(d) {
            if (!d) return !1;
            var p = d._valueTracker;
            if (!p) return !0;
            var S = p.getValue(), I = "";
            return d && (I = Te(d) ? d.checked ? "true" : "false" : d.value), d = I, d !== S ? (p.setValue(d), !0) : !1;
        }
        function Me(d) {
            if (d = d || (typeof document < "u" ? document : void 0), typeof d > "u") return null;
            try {
                return d.activeElement || d.body;
            } catch  {
                return d.body;
            }
        }
        function oe(d, p) {
            var S = p.checked;
            return $({}, p, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: void 0,
                checked: S ?? d._wrapperState.initialChecked
            });
        }
        function Ye(d, p) {
            var S = p.defaultValue == null ? "" : p.defaultValue, I = p.checked != null ? p.checked : p.defaultChecked;
            S = _e(p.value != null ? p.value : S), d._wrapperState = {
                initialChecked: I,
                initialValue: S,
                controlled: p.type === "checkbox" || p.type === "radio" ? p.checked != null : p.value != null
            };
        }
        function Be(d, p) {
            p = p.checked, p != null && E(d, "checked", p, !1);
        }
        function nt(d, p) {
            Be(d, p);
            var S = _e(p.value), I = p.type;
            if (S != null) I === "number" ? (S === 0 && d.value === "" || d.value != S) && (d.value = "" + S) : d.value !== "" + S && (d.value = "" + S);
            else if (I === "submit" || I === "reset") {
                d.removeAttribute("value");
                return;
            }
            p.hasOwnProperty("value") ? ce(d, p.type, S) : p.hasOwnProperty("defaultValue") && ce(d, p.type, _e(p.defaultValue)), p.checked == null && p.defaultChecked != null && (d.defaultChecked = !!p.defaultChecked);
        }
        function de(d, p, S) {
            if (p.hasOwnProperty("value") || p.hasOwnProperty("defaultValue")) {
                var I = p.type;
                if (!(I !== "submit" && I !== "reset" || p.value !== void 0 && p.value !== null)) return;
                p = "" + d._wrapperState.initialValue, S || p === d.value || (d.value = p), d.defaultValue = p;
            }
            S = d.name, S !== "" && (d.name = ""), d.defaultChecked = !!d._wrapperState.initialChecked, S !== "" && (d.name = S);
        }
        function ce(d, p, S) {
            (p !== "number" || Me(d.ownerDocument) !== d) && (S == null ? d.defaultValue = "" + d._wrapperState.initialValue : d.defaultValue !== "" + S && (d.defaultValue = "" + S));
        }
        var ae = Array.isArray;
        function X(d, p, S, I) {
            if (d = d.options, p) {
                p = {};
                for(var F = 0; F < S.length; F++)p["$" + S[F]] = !0;
                for(S = 0; S < d.length; S++)F = p.hasOwnProperty("$" + d[S].value), d[S].selected !== F && (d[S].selected = F), F && I && (d[S].defaultSelected = !0);
            } else {
                for(S = "" + _e(S), p = null, F = 0; F < d.length; F++){
                    if (d[F].value === S) {
                        d[F].selected = !0, I && (d[F].defaultSelected = !0);
                        return;
                    }
                    p !== null || d[F].disabled || (p = d[F]);
                }
                p !== null && (p.selected = !0);
            }
        }
        function G(d, p) {
            if (p.dangerouslySetInnerHTML != null) throw Error(n(91));
            return $({}, p, {
                value: void 0,
                defaultValue: void 0,
                children: "" + d._wrapperState.initialValue
            });
        }
        function he(d, p) {
            var S = p.value;
            if (S == null) {
                if (S = p.children, p = p.defaultValue, S != null) {
                    if (p != null) throw Error(n(92));
                    if (ae(S)) {
                        if (1 < S.length) throw Error(n(93));
                        S = S[0];
                    }
                    p = S;
                }
                p == null && (p = ""), S = p;
            }
            d._wrapperState = {
                initialValue: _e(S)
            };
        }
        function pe(d, p) {
            var S = _e(p.value), I = _e(p.defaultValue);
            S != null && (S = "" + S, S !== d.value && (d.value = S), p.defaultValue == null && d.defaultValue !== S && (d.defaultValue = S)), I != null && (d.defaultValue = "" + I);
        }
        function me(d) {
            var p = d.textContent;
            p === d._wrapperState.initialValue && p !== "" && p !== null && (d.value = p);
        }
        function Ie(d) {
            switch(d){
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml";
            }
        }
        function Xe(d, p) {
            return d == null || d === "http://www.w3.org/1999/xhtml" ? Ie(p) : d === "http://www.w3.org/2000/svg" && p === "foreignObject" ? "http://www.w3.org/1999/xhtml" : d;
        }
        var Ze, at = function(d) {
            return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(p, S, I, F) {
                MSApp.execUnsafeLocalFunction(function() {
                    return d(p, S, I, F);
                });
            } : d;
        }(function(d, p) {
            if (d.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in d) d.innerHTML = p;
            else {
                for(Ze = Ze || document.createElement("div"), Ze.innerHTML = "<svg>" + p.valueOf().toString() + "</svg>", p = Ze.firstChild; d.firstChild;)d.removeChild(d.firstChild);
                for(; p.firstChild;)d.appendChild(p.firstChild);
            }
        });
        function Je(d, p) {
            if (p) {
                var S = d.firstChild;
                if (S && S === d.lastChild && S.nodeType === 3) {
                    S.nodeValue = p;
                    return;
                }
            }
            d.textContent = p;
        }
        var Pe = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0
        }, je = [
            "Webkit",
            "ms",
            "Moz",
            "O"
        ];
        Object.keys(Pe).forEach(function(d) {
            je.forEach(function(p) {
                p = p + d.charAt(0).toUpperCase() + d.substring(1), Pe[p] = Pe[d];
            });
        });
        function rt(d, p, S) {
            return p == null || typeof p == "boolean" || p === "" ? "" : S || typeof p != "number" || p === 0 || Pe.hasOwnProperty(d) && Pe[d] ? ("" + p).trim() : p + "px";
        }
        function ct(d, p) {
            d = d.style;
            for(var S in p)if (p.hasOwnProperty(S)) {
                var I = S.indexOf("--") === 0, F = rt(S, p[S], I);
                S === "float" && (S = "cssFloat"), I ? d.setProperty(S, F) : d[S] = F;
            }
        }
        var st = $({
            menuitem: !0
        }, {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0
        });
        function Se(d, p) {
            if (p) {
                if (st[d] && (p.children != null || p.dangerouslySetInnerHTML != null)) throw Error(n(137, d));
                if (p.dangerouslySetInnerHTML != null) {
                    if (p.children != null) throw Error(n(60));
                    if (typeof p.dangerouslySetInnerHTML != "object" || !("__html" in p.dangerouslySetInnerHTML)) throw Error(n(61));
                }
                if (p.style != null && typeof p.style != "object") throw Error(n(62));
            }
        }
        function $e(d, p) {
            if (d.indexOf("-") === -1) return typeof p.is == "string";
            switch(d){
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0;
            }
        }
        var ht = null;
        function Ee(d) {
            return d = d.target || d.srcElement || window, d.correspondingUseElement && (d = d.correspondingUseElement), d.nodeType === 3 ? d.parentNode : d;
        }
        var lt = null, Ae = null, ze = null;
        function We(d) {
            if (d = zl(d)) {
                if (typeof lt != "function") throw Error(n(280));
                var p = d.stateNode;
                p && (p = _g(p), lt(d.stateNode, d.type, p));
            }
        }
        function it(d) {
            Ae ? ze ? ze.push(d) : ze = [
                d
            ] : Ae = d;
        }
        function pt() {
            if (Ae) {
                var d = Ae, p = ze;
                if (ze = Ae = null, We(d), p) for(d = 0; d < p.length; d++)We(p[d]);
            }
        }
        function Pt(d, p) {
            return d(p);
        }
        function en() {}
        var wt = !1;
        function Ln(d, p, S) {
            if (wt) return d(p, S);
            wt = !0;
            try {
                return Pt(d, p, S);
            } finally{
                wt = !1, (Ae !== null || ze !== null) && (en(), pt());
            }
        }
        function vn(d, p) {
            var S = d.stateNode;
            if (S === null) return null;
            var I = _g(S);
            if (I === null) return null;
            S = I[p];
            e: switch(p){
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (I = !I.disabled) || (d = d.type, I = !(d === "button" || d === "input" || d === "select" || d === "textarea")), d = !I;
                    break e;
                default:
                    d = !1;
            }
            if (d) return null;
            if (S && typeof S != "function") throw Error(n(231, p, typeof S));
            return S;
        }
        var $r = !1;
        if (a) try {
            var il = {};
            Object.defineProperty(il, "passive", {
                get: function() {
                    $r = !0;
                }
            }), window.addEventListener("test", il, il), window.removeEventListener("test", il, il);
        } catch  {
            $r = !1;
        }
        function Ko(d, p, S, I, F, V, ie, we, Ce) {
            var Ke = Array.prototype.slice.call(arguments, 3);
            try {
                p.apply(S, Ke);
            } catch (ft) {
                this.onError(ft);
            }
        }
        var wo = !1, Pl = null, _o = !1, sl = null, Vd = {
            onError: function(d) {
                wo = !0, Pl = d;
            }
        };
        function Ic(d, p, S, I, F, V, ie, we, Ce) {
            wo = !1, Pl = null, Ko.apply(Vd, arguments);
        }
        function wu(d, p, S, I, F, V, ie, we, Ce) {
            if (Ic.apply(this, arguments), wo) {
                if (wo) {
                    var Ke = Pl;
                    wo = !1, Pl = null;
                } else throw Error(n(198));
                _o || (_o = !0, sl = Ke);
            }
        }
        function So(d) {
            var p = d, S = d;
            if (d.alternate) for(; p.return;)p = p.return;
            else {
                d = p;
                do p = d, p.flags & 4098 && (S = p.return), d = p.return;
                while (d);
            }
            return p.tag === 3 ? S : null;
        }
        function Wd(d) {
            if (d.tag === 13) {
                var p = d.memoizedState;
                if (p === null && (d = d.alternate, d !== null && (p = d.memoizedState)), p !== null) return p.dehydrated;
            }
            return null;
        }
        function qd(d) {
            if (So(d) !== d) throw Error(n(188));
        }
        function Hd(d) {
            var p = d.alternate;
            if (!p) {
                if (p = So(d), p === null) throw Error(n(188));
                return p !== d ? null : d;
            }
            for(var S = d, I = p;;){
                var F = S.return;
                if (F === null) break;
                var V = F.alternate;
                if (V === null) {
                    if (I = F.return, I !== null) {
                        S = I;
                        continue;
                    }
                    break;
                }
                if (F.child === V.child) {
                    for(V = F.child; V;){
                        if (V === S) return qd(F), d;
                        if (V === I) return qd(F), p;
                        V = V.sibling;
                    }
                    throw Error(n(188));
                }
                if (S.return !== I.return) S = F, I = V;
                else {
                    for(var ie = !1, we = F.child; we;){
                        if (we === S) {
                            ie = !0, S = F, I = V;
                            break;
                        }
                        if (we === I) {
                            ie = !0, I = F, S = V;
                            break;
                        }
                        we = we.sibling;
                    }
                    if (!ie) {
                        for(we = V.child; we;){
                            if (we === S) {
                                ie = !0, S = V, I = F;
                                break;
                            }
                            if (we === I) {
                                ie = !0, I = V, S = F;
                                break;
                            }
                            we = we.sibling;
                        }
                        if (!ie) throw Error(n(189));
                    }
                }
                if (S.alternate !== I) throw Error(n(190));
            }
            if (S.tag !== 3) throw Error(n(188));
            return S.stateNode.current === S ? d : p;
        }
        function $d(d) {
            return d = Hd(d), d !== null ? Gd(d) : null;
        }
        function Gd(d) {
            if (d.tag === 5 || d.tag === 6) return d;
            for(d = d.child; d !== null;){
                var p = Gd(d);
                if (p !== null) return p;
                d = d.sibling;
            }
            return null;
        }
        var Xd = e.unstable_scheduleCallback, fe = e.unstable_cancelCallback, Oe = e.unstable_shouldYield, Ge = e.unstable_requestPaint, Ue = e.unstable_now, De = e.unstable_getCurrentPriorityLevel, dt = e.unstable_ImmediatePriority, _t = e.unstable_UserBlockingPriority, Ct = e.unstable_NormalPriority, kt = e.unstable_LowPriority, tn = e.unstable_IdlePriority, Zt = null, yt = null;
        function qt(d) {
            if (yt && typeof yt.onCommitFiberRoot == "function") try {
                yt.onCommitFiberRoot(Zt, d, void 0, (d.current.flags & 128) === 128);
            } catch  {}
        }
        var on = Math.clz32 ? Math.clz32 : Mn, Fn = Math.log, jn = Math.LN2;
        function Mn(d) {
            return d >>>= 0, d === 0 ? 32 : 31 - (Fn(d) / jn | 0) | 0;
        }
        var Vt = 64, $n = 4194304;
        function Rn(d) {
            switch(d & -d){
                case 1:
                    return 1;
                case 2:
                    return 2;
                case 4:
                    return 4;
                case 8:
                    return 8;
                case 16:
                    return 16;
                case 32:
                    return 32;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return d & 4194240;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return d & 130023424;
                case 134217728:
                    return 134217728;
                case 268435456:
                    return 268435456;
                case 536870912:
                    return 536870912;
                case 1073741824:
                    return 1073741824;
                default:
                    return d;
            }
        }
        function oi(d, p) {
            var S = d.pendingLanes;
            if (S === 0) return 0;
            var I = 0, F = d.suspendedLanes, V = d.pingedLanes, ie = S & 268435455;
            if (ie !== 0) {
                var we = ie & ~F;
                we !== 0 ? I = Rn(we) : (V &= ie, V !== 0 && (I = Rn(V)));
            } else ie = S & ~F, ie !== 0 ? I = Rn(ie) : V !== 0 && (I = Rn(V));
            if (I === 0) return 0;
            if (p !== 0 && p !== I && !(p & F) && (F = I & -I, V = p & -p, F >= V || F === 16 && (V & 4194240) !== 0)) return p;
            if (I & 4 && (I |= S & 16), p = d.entangledLanes, p !== 0) for(d = d.entanglements, p &= I; 0 < p;)S = 31 - on(p), F = 1 << S, I |= d[S], p &= ~F;
            return I;
        }
        function Ra(d, p) {
            switch(d){
                case 1:
                case 2:
                case 4:
                    return p + 250;
                case 8:
                case 16:
                case 32:
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return p + 5e3;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return -1;
                case 134217728:
                case 268435456:
                case 536870912:
                case 1073741824:
                    return -1;
                default:
                    return -1;
            }
        }
        function hi(d, p) {
            for(var S = d.suspendedLanes, I = d.pingedLanes, F = d.expirationTimes, V = d.pendingLanes; 0 < V;){
                var ie = 31 - on(V), we = 1 << ie, Ce = F[ie];
                Ce === -1 ? (!(we & S) || we & I) && (F[ie] = Ra(we, p)) : Ce <= p && (d.expiredLanes |= we), V &= ~we;
            }
        }
        function Eo(d) {
            return d = d.pendingLanes & -1073741825, d !== 0 ? d : d & 1073741824 ? 1073741824 : 0;
        }
        function Gn() {
            var d = Vt;
            return Vt <<= 1, !(Vt & 4194240) && (Vt = 64), d;
        }
        function ms(d) {
            for(var p = [], S = 0; 31 > S; S++)p.push(d);
            return p;
        }
        function Ui(d, p, S) {
            d.pendingLanes |= p, p !== 536870912 && (d.suspendedLanes = 0, d.pingedLanes = 0), d = d.eventTimes, p = 31 - on(p), d[p] = S;
        }
        function ns(d, p) {
            var S = d.pendingLanes & ~p;
            d.pendingLanes = p, d.suspendedLanes = 0, d.pingedLanes = 0, d.expiredLanes &= p, d.mutableReadLanes &= p, d.entangledLanes &= p, p = d.entanglements;
            var I = d.eventTimes;
            for(d = d.expirationTimes; 0 < S;){
                var F = 31 - on(S), V = 1 << F;
                p[F] = 0, I[F] = -1, d[F] = -1, S &= ~V;
            }
        }
        function ai(d, p) {
            var S = d.entangledLanes |= p;
            for(d = d.entanglements; S;){
                var I = 31 - on(S), F = 1 << I;
                F & p | d[I] & p && (d[I] |= p), S &= ~F;
            }
        }
        var Kn = 0;
        function Gs(d) {
            return d &= -d, 1 < d ? 4 < d ? d & 268435455 ? 16 : 536870912 : 4 : 1;
        }
        var Dh, Xy, s_, qm, Hm, _u = !1, $m = [], ol = null, Bn = null, kl = null, Su = new Map, Kd = new Map, Ac = [], X2 = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
        function Ii(d, p) {
            switch(d){
                case "focusin":
                case "focusout":
                    ol = null;
                    break;
                case "dragenter":
                case "dragleave":
                    Bn = null;
                    break;
                case "mouseover":
                case "mouseout":
                    kl = null;
                    break;
                case "pointerover":
                case "pointerout":
                    Su.delete(p.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    Kd.delete(p.pointerId);
            }
        }
        function Eu(d, p, S, I, F, V) {
            return d === null || d.nativeEvent !== V ? (d = {
                blockedOn: p,
                domEventName: S,
                eventSystemFlags: I,
                nativeEvent: V,
                targetContainers: [
                    F
                ]
            }, p !== null && (p = zl(p), p !== null && Xy(p)), d) : (d.eventSystemFlags |= I, p = d.targetContainers, F !== null && p.indexOf(F) === -1 && p.push(F), d);
        }
        function K2(d, p, S, I, F) {
            switch(p){
                case "focusin":
                    return ol = Eu(ol, d, p, S, I, F), !0;
                case "dragenter":
                    return Bn = Eu(Bn, d, p, S, I, F), !0;
                case "mouseover":
                    return kl = Eu(kl, d, p, S, I, F), !0;
                case "pointerover":
                    var V = F.pointerId;
                    return Su.set(V, Eu(Su.get(V) || null, d, p, S, I, F)), !0;
                case "gotpointercapture":
                    return V = F.pointerId, Kd.set(V, Eu(Kd.get(V) || null, d, p, S, I, F)), !0;
            }
            return !1;
        }
        function Gm(d) {
            var p = Fc(d.target);
            if (p !== null) {
                var S = So(p);
                if (S !== null) {
                    if (p = S.tag, p === 13) {
                        if (p = Wd(S), p !== null) {
                            d.blockedOn = p, Hm(d.priority, function() {
                                s_(S);
                            });
                            return;
                        }
                    } else if (p === 3 && S.stateNode.current.memoizedState.isDehydrated) {
                        d.blockedOn = S.tag === 3 ? S.stateNode.containerInfo : null;
                        return;
                    }
                }
            }
            d.blockedOn = null;
        }
        function Xm(d) {
            if (d.blockedOn !== null) return !1;
            for(var p = d.targetContainers; 0 < p.length;){
                var S = Zo(d.domEventName, d.eventSystemFlags, p[0], d.nativeEvent);
                if (S === null) {
                    S = d.nativeEvent;
                    var I = new S.constructor(S.type, S);
                    ht = I, S.target.dispatchEvent(I), ht = null;
                } else return p = zl(S), p !== null && Xy(p), d.blockedOn = S, !1;
                p.shift();
            }
            return !0;
        }
        function Lh(d, p, S) {
            Xm(d) && S.delete(p);
        }
        function al() {
            _u = !1, ol !== null && Xm(ol) && (ol = null), Bn !== null && Xm(Bn) && (Bn = null), kl !== null && Xm(kl) && (kl = null), Su.forEach(Lh), Kd.forEach(Lh);
        }
        function Fh(d, p) {
            d.blockedOn === p && (d.blockedOn = null, _u || (_u = !0, e.unstable_scheduleCallback(e.unstable_NormalPriority, al)));
        }
        function jh(d) {
            function p(F) {
                return Fh(F, d);
            }
            if (0 < $m.length) {
                Fh($m[0], d);
                for(var S = 1; S < $m.length; S++){
                    var I = $m[S];
                    I.blockedOn === d && (I.blockedOn = null);
                }
            }
            for(ol !== null && Fh(ol, d), Bn !== null && Fh(Bn, d), kl !== null && Fh(kl, d), Su.forEach(p), Kd.forEach(p), S = 0; S < Ac.length; S++)I = Ac[S], I.blockedOn === d && (I.blockedOn = null);
            for(; 0 < Ac.length && (S = Ac[0], S.blockedOn === null);)Gm(S), S.blockedOn === null && Ac.shift();
        }
        var Is = T.ReactCurrentBatchConfig, Yo = !0;
        function Km(d, p, S, I) {
            var F = Kn, V = Is.transition;
            Is.transition = null;
            try {
                Kn = 1, Ym(d, p, S, I);
            } finally{
                Kn = F, Is.transition = V;
            }
        }
        function Ky(d, p, S, I) {
            var F = Kn, V = Is.transition;
            Is.transition = null;
            try {
                Kn = 4, Ym(d, p, S, I);
            } finally{
                Kn = F, Is.transition = V;
            }
        }
        function Ym(d, p, S, I) {
            if (Yo) {
                var F = Zo(d, p, S, I);
                if (F === null) gg(d, p, I, Zm, S), Ii(d, I);
                else if (K2(F, d, p, S, I)) I.stopPropagation();
                else if (Ii(d, I), p & 4 && -1 < X2.indexOf(d)) {
                    for(; F !== null;){
                        var V = zl(F);
                        if (V !== null && Dh(V), V = Zo(d, p, S, I), V === null && gg(d, p, I, Zm, S), V === F) break;
                        F = V;
                    }
                    F !== null && I.stopPropagation();
                } else gg(d, p, I, null, S);
            }
        }
        var Zm = null;
        function Zo(d, p, S, I) {
            if (Zm = null, d = Ee(I), d = Fc(d), d !== null) if (p = So(d), p === null) d = null;
            else if (S = p.tag, S === 13) {
                if (d = Wd(p), d !== null) return d;
                d = null;
            } else if (S === 3) {
                if (p.stateNode.current.memoizedState.isDehydrated) return p.tag === 3 ? p.stateNode.containerInfo : null;
                d = null;
            } else p !== d && (d = null);
            return Zm = d, null;
        }
        function o_(d) {
            switch(d){
                case "cancel":
                case "click":
                case "close":
                case "contextmenu":
                case "copy":
                case "cut":
                case "auxclick":
                case "dblclick":
                case "dragend":
                case "dragstart":
                case "drop":
                case "focusin":
                case "focusout":
                case "input":
                case "invalid":
                case "keydown":
                case "keypress":
                case "keyup":
                case "mousedown":
                case "mouseup":
                case "paste":
                case "pause":
                case "play":
                case "pointercancel":
                case "pointerdown":
                case "pointerup":
                case "ratechange":
                case "reset":
                case "resize":
                case "seeked":
                case "submit":
                case "touchcancel":
                case "touchend":
                case "touchstart":
                case "volumechange":
                case "change":
                case "selectionchange":
                case "textInput":
                case "compositionstart":
                case "compositionend":
                case "compositionupdate":
                case "beforeblur":
                case "afterblur":
                case "beforeinput":
                case "blur":
                case "fullscreenchange":
                case "focus":
                case "hashchange":
                case "popstate":
                case "select":
                case "selectstart":
                    return 1;
                case "drag":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "mousemove":
                case "mouseout":
                case "mouseover":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "scroll":
                case "toggle":
                case "touchmove":
                case "wheel":
                case "mouseenter":
                case "mouseleave":
                case "pointerenter":
                case "pointerleave":
                    return 4;
                case "message":
                    switch(De()){
                        case dt:
                            return 1;
                        case _t:
                            return 4;
                        case Ct:
                        case kt:
                            return 16;
                        case tn:
                            return 536870912;
                        default:
                            return 16;
                    }
                default:
                    return 16;
            }
        }
        var Ia = null, Yy = null, Xs = null;
        function Bh() {
            if (Xs) return Xs;
            var d, p = Yy, S = p.length, I, F = "value" in Ia ? Ia.value : Ia.textContent, V = F.length;
            for(d = 0; d < S && p[d] === F[d]; d++);
            var ie = S - d;
            for(I = 1; I <= ie && p[S - I] === F[V - I]; I++);
            return Xs = F.slice(d, 1 < I ? 1 - I : void 0);
        }
        function Mu(d) {
            var p = d.keyCode;
            return "charCode" in d ? (d = d.charCode, d === 0 && p === 13 && (d = 13)) : d = p, d === 10 && (d = 13), 32 <= d || d === 13 ? d : 0;
        }
        function Ol() {
            return !0;
        }
        function Jm() {
            return !1;
        }
        function As(d) {
            function p(S, I, F, V, ie) {
                this._reactName = S, this._targetInst = F, this.type = I, this.nativeEvent = V, this.target = ie, this.currentTarget = null;
                for(var we in d)d.hasOwnProperty(we) && (S = d[we], this[we] = S ? S(V) : V[we]);
                return this.isDefaultPrevented = (V.defaultPrevented != null ? V.defaultPrevented : V.returnValue === !1) ? Ol : Jm, this.isPropagationStopped = Jm, this;
            }
            return $(p.prototype, {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                    var S = this.nativeEvent;
                    S && (S.preventDefault ? S.preventDefault() : typeof S.returnValue != "unknown" && (S.returnValue = !1), this.isDefaultPrevented = Ol);
                },
                stopPropagation: function() {
                    var S = this.nativeEvent;
                    S && (S.stopPropagation ? S.stopPropagation() : typeof S.cancelBubble != "unknown" && (S.cancelBubble = !0), this.isPropagationStopped = Ol);
                },
                persist: function() {},
                isPersistent: Ol
            }), p;
        }
        var Tu = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function(d) {
                return d.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0
        }, Uh = As(Tu), Cu = $({}, Tu, {
            view: 0,
            detail: 0
        }), Yd = As(Cu), Ks, Jo, Qo, Zd = $({}, Cu, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: Pc,
            button: 0,
            buttons: 0,
            relatedTarget: function(d) {
                return d.relatedTarget === void 0 ? d.fromElement === d.srcElement ? d.toElement : d.fromElement : d.relatedTarget;
            },
            movementX: function(d) {
                return "movementX" in d ? d.movementX : (d !== Qo && (Qo && d.type === "mousemove" ? (Ks = d.screenX - Qo.screenX, Jo = d.screenY - Qo.screenY) : Jo = Ks = 0, Qo = d), Ks);
            },
            movementY: function(d) {
                return "movementY" in d ? d.movementY : Jo;
            }
        }), Zy = As(Zd), Dl = $({}, Zd, {
            dataTransfer: 0
        }), Nc = As(Dl), Qm = $({}, Cu, {
            relatedTarget: 0
        }), eg = As(Qm), tg = $({}, Tu, {
            animationName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), a_ = As(tg), l_ = $({}, Tu, {
            clipboardData: function(d) {
                return "clipboardData" in d ? d.clipboardData : window.clipboardData;
            }
        }), Jy = As(l_), ng = $({}, Tu, {
            data: 0
        }), Qy = As(ng), c_ = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
        }, u_ = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta"
        }, ev = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
        };
        function Jd(d) {
            var p = this.nativeEvent;
            return p.getModifierState ? p.getModifierState(d) : (d = ev[d]) ? !!p[d] : !1;
        }
        function Pc() {
            return Jd;
        }
        var rg = $({}, Cu, {
            key: function(d) {
                if (d.key) {
                    var p = c_[d.key] || d.key;
                    if (p !== "Unidentified") return p;
                }
                return d.type === "keypress" ? (d = Mu(d), d === 13 ? "Enter" : String.fromCharCode(d)) : d.type === "keydown" || d.type === "keyup" ? u_[d.keyCode] || "Unidentified" : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: Pc,
            charCode: function(d) {
                return d.type === "keypress" ? Mu(d) : 0;
            },
            keyCode: function(d) {
                return d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
            },
            which: function(d) {
                return d.type === "keypress" ? Mu(d) : d.type === "keydown" || d.type === "keyup" ? d.keyCode : 0;
            }
        }), ig = As(rg), ea = $({}, Zd, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0
        }), Mo = As(ea), Ru = $({}, Cu, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: Pc
        }), Ll = As(Ru), Fl = $({}, Tu, {
            propertyName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), Iu = As(Fl), d_ = $({}, Zd, {
            deltaX: function(d) {
                return "deltaX" in d ? d.deltaX : "wheelDeltaX" in d ? -d.wheelDeltaX : 0;
            },
            deltaY: function(d) {
                return "deltaY" in d ? d.deltaY : "wheelDeltaY" in d ? -d.wheelDeltaY : "wheelDelta" in d ? -d.wheelDelta : 0;
            },
            deltaZ: 0,
            deltaMode: 0
        }), tv = As(d_), nv = [
            9,
            13,
            27,
            32
        ], Ns = a && "CompositionEvent" in window, rs = null;
        a && "documentMode" in document && (rs = document.documentMode);
        var Dr = a && "TextEvent" in window && !rs, Qd = a && (!Ns || rs && 8 < rs && 11 >= rs), ta = " ", rv = !1;
        function iv(d, p) {
            switch(d){
                case "keyup":
                    return nv.indexOf(p.keyCode) !== -1;
                case "keydown":
                    return p.keyCode !== 229;
                case "keypress":
                case "mousedown":
                case "focusout":
                    return !0;
                default:
                    return !1;
            }
        }
        function sg(d) {
            return d = d.detail, typeof d == "object" && "data" in d ? d.data : null;
        }
        var kc = !1;
        function f_(d, p) {
            switch(d){
                case "compositionend":
                    return sg(p);
                case "keypress":
                    return p.which !== 32 ? null : (rv = !0, ta);
                case "textInput":
                    return d = p.data, d === ta && rv ? null : d;
                default:
                    return null;
            }
        }
        function zh(d, p) {
            if (kc) return d === "compositionend" || !Ns && iv(d, p) ? (d = Bh(), Xs = Yy = Ia = null, kc = !1, d) : null;
            switch(d){
                case "paste":
                    return null;
                case "keypress":
                    if (!(p.ctrlKey || p.altKey || p.metaKey) || p.ctrlKey && p.altKey) {
                        if (p.char && 1 < p.char.length) return p.char;
                        if (p.which) return String.fromCharCode(p.which);
                    }
                    return null;
                case "compositionend":
                    return Qd && p.locale !== "ko" ? null : p.data;
                default:
                    return null;
            }
        }
        var ef = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
        };
        function og(d) {
            var p = d && d.nodeName && d.nodeName.toLowerCase();
            return p === "input" ? !!ef[d.type] : p === "textarea";
        }
        function tf(d, p, S, I) {
            it(I), p = yg(p, "onChange"), 0 < p.length && (S = new Uh("onChange", "change", null, S, I), d.push({
                event: S,
                listeners: p
            }));
        }
        var Oc = null, nf = null;
        function h_(d) {
            af(d, 0);
        }
        function jl(d) {
            var p = li(d);
            if (be(p)) return d;
        }
        function p_(d, p) {
            if (d === "change") return p;
        }
        var rf = !1;
        if (a) {
            var Ys;
            if (a) {
                var Au = "oninput" in document;
                if (!Au) {
                    var Nu = document.createElement("div");
                    Nu.setAttribute("oninput", "return;"), Au = typeof Nu.oninput == "function";
                }
                Ys = Au;
            } else Ys = !1;
            rf = Ys && (!document.documentMode || 9 < document.documentMode);
        }
        function Aa() {
            Oc && (Oc.detachEvent("onpropertychange", ag), nf = Oc = null);
        }
        function ag(d) {
            if (d.propertyName === "value" && jl(nf)) {
                var p = [];
                tf(p, nf, d, Ee(d)), Ln(h_, p);
            }
        }
        function sf(d, p, S) {
            d === "focusin" ? (Aa(), Oc = p, nf = S, Oc.attachEvent("onpropertychange", ag)) : d === "focusout" && Aa();
        }
        function m_(d) {
            if (d === "selectionchange" || d === "keyup" || d === "keydown") return jl(nf);
        }
        function sv(d, p) {
            if (d === "click") return jl(p);
        }
        function Gr(d, p) {
            if (d === "input" || d === "change") return jl(p);
        }
        function lg(d, p) {
            return d === p && (d !== 0 || 1 / d === 1 / p) || d !== d && p !== p;
        }
        var To = typeof Object.is == "function" ? Object.is : lg;
        function Pu(d, p) {
            if (To(d, p)) return !0;
            if (typeof d != "object" || d === null || typeof p != "object" || p === null) return !1;
            var S = Object.keys(d), I = Object.keys(p);
            if (S.length !== I.length) return !1;
            for(I = 0; I < S.length; I++){
                var F = S[I];
                if (!l.call(p, F) || !To(d[F], p[F])) return !1;
            }
            return !0;
        }
        function Vh(d) {
            for(; d && d.firstChild;)d = d.firstChild;
            return d;
        }
        function Co(d, p) {
            var S = Vh(d);
            d = 0;
            for(var I; S;){
                if (S.nodeType === 3) {
                    if (I = d + S.textContent.length, d <= p && I >= p) return {
                        node: S,
                        offset: p - d
                    };
                    d = I;
                }
                e: {
                    for(; S;){
                        if (S.nextSibling) {
                            S = S.nextSibling;
                            break e;
                        }
                        S = S.parentNode;
                    }
                    S = void 0;
                }
                S = Vh(S);
            }
        }
        function ku(d, p) {
            return d && p ? d === p ? !0 : d && d.nodeType === 3 ? !1 : p && p.nodeType === 3 ? ku(d, p.parentNode) : "contains" in d ? d.contains(p) : d.compareDocumentPosition ? !!(d.compareDocumentPosition(p) & 16) : !1 : !1;
        }
        function Xr() {
            for(var d = window, p = Me(); p instanceof d.HTMLIFrameElement;){
                try {
                    var S = typeof p.contentWindow.location.href == "string";
                } catch  {
                    S = !1;
                }
                if (S) d = p.contentWindow;
                else break;
                p = Me(d.document);
            }
            return p;
        }
        function zi(d) {
            var p = d && d.nodeName && d.nodeName.toLowerCase();
            return p && (p === "input" && (d.type === "text" || d.type === "search" || d.type === "tel" || d.type === "url" || d.type === "password") || p === "textarea" || d.contentEditable === "true");
        }
        function Vi(d) {
            var p = Xr(), S = d.focusedElem, I = d.selectionRange;
            if (p !== S && S && S.ownerDocument && ku(S.ownerDocument.documentElement, S)) {
                if (I !== null && zi(S)) {
                    if (p = I.start, d = I.end, d === void 0 && (d = p), "selectionStart" in S) S.selectionStart = p, S.selectionEnd = Math.min(d, S.value.length);
                    else if (d = (p = S.ownerDocument || document) && p.defaultView || window, d.getSelection) {
                        d = d.getSelection();
                        var F = S.textContent.length, V = Math.min(I.start, F);
                        I = I.end === void 0 ? V : Math.min(I.end, F), !d.extend && V > I && (F = I, I = V, V = F), F = Co(S, V);
                        var ie = Co(S, I);
                        F && ie && (d.rangeCount !== 1 || d.anchorNode !== F.node || d.anchorOffset !== F.offset || d.focusNode !== ie.node || d.focusOffset !== ie.offset) && (p = p.createRange(), p.setStart(F.node, F.offset), d.removeAllRanges(), V > I ? (d.addRange(p), d.extend(ie.node, ie.offset)) : (p.setEnd(ie.node, ie.offset), d.addRange(p)));
                    }
                }
                for(p = [], d = S; d = d.parentNode;)d.nodeType === 1 && p.push({
                    element: d,
                    left: d.scrollLeft,
                    top: d.scrollTop
                });
                for(typeof S.focus == "function" && S.focus(), S = 0; S < p.length; S++)d = p[S], d.element.scrollLeft = d.left, d.element.scrollTop = d.top;
            }
        }
        var cg = a && "documentMode" in document && 11 >= document.documentMode, ll = null, Ou = null, Wh = null, Wi = !1;
        function ug(d, p, S) {
            var I = S.window === S ? S.document : S.nodeType === 9 ? S : S.ownerDocument;
            Wi || ll == null || ll !== Me(I) || (I = ll, "selectionStart" in I && zi(I) ? I = {
                start: I.selectionStart,
                end: I.selectionEnd
            } : (I = (I.ownerDocument && I.ownerDocument.defaultView || window).getSelection(), I = {
                anchorNode: I.anchorNode,
                anchorOffset: I.anchorOffset,
                focusNode: I.focusNode,
                focusOffset: I.focusOffset
            }), Wh && Pu(Wh, I) || (Wh = I, I = yg(Ou, "onSelect"), 0 < I.length && (p = new Uh("onSelect", "select", null, p, S), d.push({
                event: p,
                listeners: I
            }), p.target = ll)));
        }
        function of(d, p) {
            var S = {};
            return S[d.toLowerCase()] = p.toLowerCase(), S["Webkit" + d] = "webkit" + p, S["Moz" + d] = "moz" + p, S;
        }
        var Dc = {
            animationend: of("Animation", "AnimationEnd"),
            animationiteration: of("Animation", "AnimationIteration"),
            animationstart: of("Animation", "AnimationStart"),
            transitionend: of("Transition", "TransitionEnd")
        }, Na = {}, Pa = {};
        a && (Pa = document.createElement("div").style, "AnimationEvent" in window || (delete Dc.animationend.animation, delete Dc.animationiteration.animation, delete Dc.animationstart.animation), "TransitionEvent" in window || delete Dc.transitionend.transition);
        function cl(d) {
            if (Na[d]) return Na[d];
            if (!Dc[d]) return d;
            var p = Dc[d], S;
            for(S in p)if (p.hasOwnProperty(S) && S in Pa) return Na[d] = p[S];
            return d;
        }
        var qh = cl("animationend"), Hh = cl("animationiteration"), ov = cl("animationstart"), av = cl("transitionend"), lv = new Map, cv = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
        function Bl(d, p) {
            lv.set(d, p), s(p, [
                d
            ]);
        }
        for(var dg = 0; dg < cv.length; dg++){
            var $h = cv[dg], Gh = $h.toLowerCase(), g_ = $h[0].toUpperCase() + $h.slice(1);
            Bl(Gh, "on" + g_);
        }
        Bl(qh, "onAnimationEnd"), Bl(Hh, "onAnimationIteration"), Bl(ov, "onAnimationStart"), Bl("dblclick", "onDoubleClick"), Bl("focusin", "onFocus"), Bl("focusout", "onBlur"), Bl(av, "onTransitionEnd"), o("onMouseEnter", [
            "mouseout",
            "mouseover"
        ]), o("onMouseLeave", [
            "mouseout",
            "mouseover"
        ]), o("onPointerEnter", [
            "pointerout",
            "pointerover"
        ]), o("onPointerLeave", [
            "pointerout",
            "pointerover"
        ]), s("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), s("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), s("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste"
        ]), s("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), s("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
        var Lc = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), fg = new Set("cancel close invalid load scroll toggle".split(" ").concat(Lc));
        function hg(d, p, S) {
            var I = d.type || "unknown-event";
            d.currentTarget = S, wu(I, p, void 0, d), d.currentTarget = null;
        }
        function af(d, p) {
            p = (p & 4) !== 0;
            for(var S = 0; S < d.length; S++){
                var I = d[S], F = I.event;
                I = I.listeners;
                e: {
                    var V = void 0;
                    if (p) for(var ie = I.length - 1; 0 <= ie; ie--){
                        var we = I[ie], Ce = we.instance, Ke = we.currentTarget;
                        if (we = we.listener, Ce !== V && F.isPropagationStopped()) break e;
                        hg(F, we, Ke), V = Ce;
                    }
                    else for(ie = 0; ie < I.length; ie++){
                        if (we = I[ie], Ce = we.instance, Ke = we.currentTarget, we = we.listener, Ce !== V && F.isPropagationStopped()) break e;
                        hg(F, we, Ke), V = Ce;
                    }
                }
            }
            if (_o) throw d = sl, _o = !1, sl = null, d;
        }
        function wr(d, p) {
            var S = p[Fu];
            S === void 0 && (S = p[Fu] = new Set);
            var I = d + "__bubble";
            S.has(I) || (mg(p, d, 2, !1), S.add(I));
        }
        function pg(d, p, S) {
            var I = 0;
            p && (I |= 4), mg(S, d, I, p);
        }
        var Xh = "_reactListening" + Math.random().toString(36).slice(2);
        function lf(d) {
            if (!d[Xh]) {
                d[Xh] = !0, r.forEach(function(S) {
                    S !== "selectionchange" && (fg.has(S) || pg(S, !1, d), pg(S, !0, d));
                });
                var p = d.nodeType === 9 ? d : d.ownerDocument;
                p === null || p[Xh] || (p[Xh] = !0, pg("selectionchange", !1, p));
            }
        }
        function mg(d, p, S, I) {
            switch(o_(p)){
                case 1:
                    var F = Km;
                    break;
                case 4:
                    F = Ky;
                    break;
                default:
                    F = Ym;
            }
            S = F.bind(null, p, S, d), F = void 0, !$r || p !== "touchstart" && p !== "touchmove" && p !== "wheel" || (F = !0), I ? F !== void 0 ? d.addEventListener(p, S, {
                capture: !0,
                passive: F
            }) : d.addEventListener(p, S, !0) : F !== void 0 ? d.addEventListener(p, S, {
                passive: F
            }) : d.addEventListener(p, S, !1);
        }
        function gg(d, p, S, I, F) {
            var V = I;
            if (!(p & 1) && !(p & 2) && I !== null) e: for(;;){
                if (I === null) return;
                var ie = I.tag;
                if (ie === 3 || ie === 4) {
                    var we = I.stateNode.containerInfo;
                    if (we === F || we.nodeType === 8 && we.parentNode === F) break;
                    if (ie === 4) for(ie = I.return; ie !== null;){
                        var Ce = ie.tag;
                        if ((Ce === 3 || Ce === 4) && (Ce = ie.stateNode.containerInfo, Ce === F || Ce.nodeType === 8 && Ce.parentNode === F)) return;
                        ie = ie.return;
                    }
                    for(; we !== null;){
                        if (ie = Fc(we), ie === null) return;
                        if (Ce = ie.tag, Ce === 5 || Ce === 6) {
                            I = V = ie;
                            continue e;
                        }
                        we = we.parentNode;
                    }
                }
                I = I.return;
            }
            Ln(function() {
                var Ke = V, ft = Ee(S), mt = [];
                e: {
                    var ut = lv.get(d);
                    if (ut !== void 0) {
                        var Ot = Uh, Ht = d;
                        switch(d){
                            case "keypress":
                                if (Mu(S) === 0) break e;
                            case "keydown":
                            case "keyup":
                                Ot = ig;
                                break;
                            case "focusin":
                                Ht = "focus", Ot = eg;
                                break;
                            case "focusout":
                                Ht = "blur", Ot = eg;
                                break;
                            case "beforeblur":
                            case "afterblur":
                                Ot = eg;
                                break;
                            case "click":
                                if (S.button === 2) break e;
                            case "auxclick":
                            case "dblclick":
                            case "mousedown":
                            case "mousemove":
                            case "mouseup":
                            case "mouseout":
                            case "mouseover":
                            case "contextmenu":
                                Ot = Zy;
                                break;
                            case "drag":
                            case "dragend":
                            case "dragenter":
                            case "dragexit":
                            case "dragleave":
                            case "dragover":
                            case "dragstart":
                            case "drop":
                                Ot = Nc;
                                break;
                            case "touchcancel":
                            case "touchend":
                            case "touchmove":
                            case "touchstart":
                                Ot = Ll;
                                break;
                            case qh:
                            case Hh:
                            case ov:
                                Ot = a_;
                                break;
                            case av:
                                Ot = Iu;
                                break;
                            case "scroll":
                                Ot = Yd;
                                break;
                            case "wheel":
                                Ot = tv;
                                break;
                            case "copy":
                            case "cut":
                            case "paste":
                                Ot = Jy;
                                break;
                            case "gotpointercapture":
                            case "lostpointercapture":
                            case "pointercancel":
                            case "pointerdown":
                            case "pointermove":
                            case "pointerout":
                            case "pointerover":
                            case "pointerup":
                                Ot = Mo;
                        }
                        var Xt = (p & 4) !== 0, Ni = !Xt && d === "scroll", Ve = Xt ? ut !== null ? ut + "Capture" : null : ut;
                        Xt = [];
                        for(var Ne = Ke, qe; Ne !== null;){
                            qe = Ne;
                            var xt = qe.stateNode;
                            if (qe.tag === 5 && xt !== null && (qe = xt, Ve !== null && (xt = vn(Ne, Ve), xt != null && Xt.push(cf(Ne, xt, qe)))), Ni) break;
                            Ne = Ne.return;
                        }
                        0 < Xt.length && (ut = new Ot(ut, Ht, null, S, ft), mt.push({
                            event: ut,
                            listeners: Xt
                        }));
                    }
                }
                if (!(p & 7)) {
                    e: {
                        if (ut = d === "mouseover" || d === "pointerover", Ot = d === "mouseout" || d === "pointerout", ut && S !== ht && (Ht = S.relatedTarget || S.fromElement) && (Fc(Ht) || Ht[Ro])) break e;
                        if ((Ot || ut) && (ut = ft.window === ft ? ft : (ut = ft.ownerDocument) ? ut.defaultView || ut.parentWindow : window, Ot ? (Ht = S.relatedTarget || S.toElement, Ot = Ke, Ht = Ht ? Fc(Ht) : null, Ht !== null && (Ni = So(Ht), Ht !== Ni || Ht.tag !== 5 && Ht.tag !== 6) && (Ht = null)) : (Ot = null, Ht = Ke), Ot !== Ht)) {
                            if (Xt = Zy, xt = "onMouseLeave", Ve = "onMouseEnter", Ne = "mouse", (d === "pointerout" || d === "pointerover") && (Xt = Mo, xt = "onPointerLeave", Ve = "onPointerEnter", Ne = "pointer"), Ni = Ot == null ? ut : li(Ot), qe = Ht == null ? ut : li(Ht), ut = new Xt(xt, Ne + "leave", Ot, S, ft), ut.target = Ni, ut.relatedTarget = qe, xt = null, Fc(ft) === Ke && (Xt = new Xt(Ve, Ne + "enter", Ht, S, ft), Xt.target = qe, Xt.relatedTarget = Ni, xt = Xt), Ni = xt, Ot && Ht) t: {
                                for(Xt = Ot, Ve = Ht, Ne = 0, qe = Xt; qe; qe = Du(qe))Ne++;
                                for(qe = 0, xt = Ve; xt; xt = Du(xt))qe++;
                                for(; 0 < Ne - qe;)Xt = Du(Xt), Ne--;
                                for(; 0 < qe - Ne;)Ve = Du(Ve), qe--;
                                for(; Ne--;){
                                    if (Xt === Ve || Ve !== null && Xt === Ve.alternate) break t;
                                    Xt = Du(Xt), Ve = Du(Ve);
                                }
                                Xt = null;
                            }
                            else Xt = null;
                            Ot !== null && y_(mt, ut, Ot, Xt, !1), Ht !== null && Ni !== null && y_(mt, Ni, Ht, Xt, !0);
                        }
                    }
                    e: {
                        if (ut = Ke ? li(Ke) : window, Ot = ut.nodeName && ut.nodeName.toLowerCase(), Ot === "select" || Ot === "input" && ut.type === "file") var Jt = p_;
                        else if (og(ut)) if (rf) Jt = Gr;
                        else {
                            Jt = m_;
                            var ln = sf;
                        }
                        else (Ot = ut.nodeName) && Ot.toLowerCase() === "input" && (ut.type === "checkbox" || ut.type === "radio") && (Jt = sv);
                        if (Jt && (Jt = Jt(d, Ke))) {
                            tf(mt, Jt, S, ft);
                            break e;
                        }
                        ln && ln(d, ut, Ke), d === "focusout" && (ln = ut._wrapperState) && ln.controlled && ut.type === "number" && ce(ut, "number", ut.value);
                    }
                    switch(ln = Ke ? li(Ke) : window, d){
                        case "focusin":
                            (og(ln) || ln.contentEditable === "true") && (ll = ln, Ou = Ke, Wh = null);
                            break;
                        case "focusout":
                            Wh = Ou = ll = null;
                            break;
                        case "mousedown":
                            Wi = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            Wi = !1, ug(mt, S, ft);
                            break;
                        case "selectionchange":
                            if (cg) break;
                        case "keydown":
                        case "keyup":
                            ug(mt, S, ft);
                    }
                    var cn;
                    if (Ns) e: {
                        switch(d){
                            case "compositionstart":
                                var yn = "onCompositionStart";
                                break e;
                            case "compositionend":
                                yn = "onCompositionEnd";
                                break e;
                            case "compositionupdate":
                                yn = "onCompositionUpdate";
                                break e;
                        }
                        yn = void 0;
                    }
                    else kc ? iv(d, S) && (yn = "onCompositionEnd") : d === "keydown" && S.keyCode === 229 && (yn = "onCompositionStart");
                    yn && (Qd && S.locale !== "ko" && (kc || yn !== "onCompositionStart" ? yn === "onCompositionEnd" && kc && (cn = Bh()) : (Ia = ft, Yy = "value" in Ia ? Ia.value : Ia.textContent, kc = !0)), ln = yg(Ke, yn), 0 < ln.length && (yn = new Qy(yn, d, null, S, ft), mt.push({
                        event: yn,
                        listeners: ln
                    }), cn ? yn.data = cn : (cn = sg(S), cn !== null && (yn.data = cn)))), (cn = Dr ? f_(d, S) : zh(d, S)) && (Ke = yg(Ke, "onBeforeInput"), 0 < Ke.length && (ft = new Qy("onBeforeInput", "beforeinput", null, S, ft), mt.push({
                        event: ft,
                        listeners: Ke
                    }), ft.data = cn));
                }
                af(mt, p);
            });
        }
        function cf(d, p, S) {
            return {
                instance: d,
                listener: p,
                currentTarget: S
            };
        }
        function yg(d, p) {
            for(var S = p + "Capture", I = []; d !== null;){
                var F = d, V = F.stateNode;
                F.tag === 5 && V !== null && (F = V, V = vn(d, S), V != null && I.unshift(cf(d, V, F)), V = vn(d, p), V != null && I.push(cf(d, V, F))), d = d.return;
            }
            return I;
        }
        function Du(d) {
            if (d === null) return null;
            do d = d.return;
            while (d && d.tag !== 5);
            return d || null;
        }
        function y_(d, p, S, I, F) {
            for(var V = p._reactName, ie = []; S !== null && S !== I;){
                var we = S, Ce = we.alternate, Ke = we.stateNode;
                if (Ce !== null && Ce === I) break;
                we.tag === 5 && Ke !== null && (we = Ke, F ? (Ce = vn(S, V), Ce != null && ie.unshift(cf(S, Ce, we))) : F || (Ce = vn(S, V), Ce != null && ie.push(cf(S, Ce, we)))), S = S.return;
            }
            ie.length !== 0 && d.push({
                event: p,
                listeners: ie
            });
        }
        var Y2 = /\r\n?/g, v_ = /\u0000|\uFFFD/g;
        function uv(d) {
            return (typeof d == "string" ? d : "" + d).replace(Y2, `
`).replace(v_, "");
        }
        function Kh(d, p, S) {
            if (p = uv(p), uv(d) !== p && S) throw Error(n(425));
        }
        function Yh() {}
        var uf = null, dv = null;
        function fv(d, p) {
            return d === "textarea" || d === "noscript" || typeof p.children == "string" || typeof p.children == "number" || typeof p.dangerouslySetInnerHTML == "object" && p.dangerouslySetInnerHTML !== null && p.dangerouslySetInnerHTML.__html != null;
        }
        var hv = typeof setTimeout == "function" ? setTimeout : void 0, pv = typeof clearTimeout == "function" ? clearTimeout : void 0, vg = typeof Promise == "function" ? Promise : void 0, Z2 = typeof queueMicrotask == "function" ? queueMicrotask : typeof vg < "u" ? function(d) {
            return vg.resolve(null).then(d).catch(x_);
        } : hv;
        function x_(d) {
            setTimeout(function() {
                throw d;
            });
        }
        function xg(d, p) {
            var S = p, I = 0;
            do {
                var F = S.nextSibling;
                if (d.removeChild(S), F && F.nodeType === 8) if (S = F.data, S === "/$") {
                    if (I === 0) {
                        d.removeChild(F), jh(p);
                        return;
                    }
                    I--;
                } else S !== "$" && S !== "$?" && S !== "$!" || I++;
                S = F;
            }while (S);
            jh(p);
        }
        function Ul(d) {
            for(; d != null; d = d.nextSibling){
                var p = d.nodeType;
                if (p === 1 || p === 3) break;
                if (p === 8) {
                    if (p = d.data, p === "$" || p === "$!" || p === "$?") break;
                    if (p === "/$") return null;
                }
            }
            return d;
        }
        function mv(d) {
            d = d.previousSibling;
            for(var p = 0; d;){
                if (d.nodeType === 8) {
                    var S = d.data;
                    if (S === "$" || S === "$!" || S === "$?") {
                        if (p === 0) return d;
                        p--;
                    } else S === "/$" && p++;
                }
                d = d.previousSibling;
            }
            return null;
        }
        var Lu = Math.random().toString(36).slice(2), Ai = "__reactFiber$" + Lu, df = "__reactProps$" + Lu, Ro = "__reactContainer$" + Lu, Fu = "__reactEvents$" + Lu, bg = "__reactListeners$" + Lu, wg = "__reactHandles$" + Lu;
        function Fc(d) {
            var p = d[Ai];
            if (p) return p;
            for(var S = d.parentNode; S;){
                if (p = S[Ro] || S[Ai]) {
                    if (S = p.alternate, p.child !== null || S !== null && S.child !== null) for(d = mv(d); d !== null;){
                        if (S = d[Ai]) return S;
                        d = mv(d);
                    }
                    return p;
                }
                d = S, S = d.parentNode;
            }
            return null;
        }
        function zl(d) {
            return d = d[Ai] || d[Ro], !d || d.tag !== 5 && d.tag !== 6 && d.tag !== 13 && d.tag !== 3 ? null : d;
        }
        function li(d) {
            if (d.tag === 5 || d.tag === 6) return d.stateNode;
            throw Error(n(33));
        }
        function _g(d) {
            return d[df] || null;
        }
        var gv = [], qi = -1;
        function Jr(d) {
            return {
                current: d
            };
        }
        function _r(d) {
            0 > qi || (d.current = gv[qi], gv[qi] = null, qi--);
        }
        function xr(d, p) {
            qi++, gv[qi] = d.current, d.current = p;
        }
        var Vl = {}, is = Jr(Vl), Ps = Jr(!1), Wl = Vl;
        function ju(d, p) {
            var S = d.type.contextTypes;
            if (!S) return Vl;
            var I = d.stateNode;
            if (I && I.__reactInternalMemoizedUnmaskedChildContext === p) return I.__reactInternalMemoizedMaskedChildContext;
            var F = {}, V;
            for(V in S)F[V] = p[V];
            return I && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = p, d.__reactInternalMemoizedMaskedChildContext = F), F;
        }
        function gs(d) {
            return d = d.childContextTypes, d != null;
        }
        function Zh() {
            _r(Ps), _r(is);
        }
        function yv(d, p, S) {
            if (is.current !== Vl) throw Error(n(168));
            xr(is, p), xr(Ps, S);
        }
        function Jh(d, p, S) {
            var I = d.stateNode;
            if (p = p.childContextTypes, typeof I.getChildContext != "function") return S;
            I = I.getChildContext();
            for(var F in I)if (!(F in p)) throw Error(n(108, ye(d) || "Unknown", F));
            return $({}, S, I);
        }
        function Bu(d) {
            return d = (d = d.stateNode) && d.__reactInternalMemoizedMergedChildContext || Vl, Wl = is.current, xr(is, d), xr(Ps, Ps.current), !0;
        }
        function vv(d, p, S) {
            var I = d.stateNode;
            if (!I) throw Error(n(169));
            S ? (d = Jh(d, p, Wl), I.__reactInternalMemoizedMergedChildContext = d, _r(Ps), _r(is), xr(is, d)) : _r(Ps), xr(Ps, S);
        }
        var ka = null, Qh = !1, Sg = !1;
        function ep(d) {
            ka === null ? ka = [
                d
            ] : ka.push(d);
        }
        function b_(d) {
            Qh = !0, ep(d);
        }
        function ul() {
            if (!Sg && ka !== null) {
                Sg = !0;
                var d = 0, p = Kn;
                try {
                    var S = ka;
                    for(Kn = 1; d < S.length; d++){
                        var I = S[d];
                        do I = I(!0);
                        while (I !== null);
                    }
                    ka = null, Qh = !1;
                } catch (F) {
                    throw ka !== null && (ka = ka.slice(d + 1)), Xd(dt, ul), F;
                } finally{
                    Kn = p, Sg = !1;
                }
            }
            return null;
        }
        var Uu = [], Zs = 0, Eg = null, Mg = 0, ks = [], Hi = 0, zu = null, bt = 1, na = "";
        function ql(d, p) {
            Uu[Zs++] = Mg, Uu[Zs++] = Eg, Eg = d, Mg = p;
        }
        function xv(d, p, S) {
            ks[Hi++] = bt, ks[Hi++] = na, ks[Hi++] = zu, zu = d;
            var I = bt;
            d = na;
            var F = 32 - on(I) - 1;
            I &= ~(1 << F), S += 1;
            var V = 32 - on(p) + F;
            if (30 < V) {
                var ie = F - F % 5;
                V = (I & (1 << ie) - 1).toString(32), I >>= ie, F -= ie, bt = 1 << 32 - on(p) + F | S << F | I, na = V + d;
            } else bt = 1 << V | S << F | I, na = d;
        }
        function bv(d) {
            d.return !== null && (ql(d, 1), xv(d, 1, 0));
        }
        function Hl(d) {
            for(; d === Eg;)Eg = Uu[--Zs], Uu[Zs] = null, Mg = Uu[--Zs], Uu[Zs] = null;
            for(; d === zu;)zu = ks[--Hi], ks[Hi] = null, na = ks[--Hi], ks[Hi] = null, bt = ks[--Hi], ks[Hi] = null;
        }
        var ss = null, Os = null, Ir = !1, ra = null;
        function wv(d, p) {
            var S = ml(5, null, null, 0);
            S.elementType = "DELETED", S.stateNode = p, S.return = d, p = d.deletions, p === null ? (d.deletions = [
                S
            ], d.flags |= 16) : p.push(S);
        }
        function _v(d, p) {
            switch(d.tag){
                case 5:
                    var S = d.type;
                    return p = p.nodeType !== 1 || S.toLowerCase() !== p.nodeName.toLowerCase() ? null : p, p !== null ? (d.stateNode = p, ss = d, Os = Ul(p.firstChild), !0) : !1;
                case 6:
                    return p = d.pendingProps === "" || p.nodeType !== 3 ? null : p, p !== null ? (d.stateNode = p, ss = d, Os = null, !0) : !1;
                case 13:
                    return p = p.nodeType !== 8 ? null : p, p !== null ? (S = zu !== null ? {
                        id: bt,
                        overflow: na
                    } : null, d.memoizedState = {
                        dehydrated: p,
                        treeContext: S,
                        retryLane: 1073741824
                    }, S = ml(18, null, null, 0), S.stateNode = p, S.return = d, d.child = S, ss = d, Os = null, !0) : !1;
                default:
                    return !1;
            }
        }
        function Tg(d) {
            return (d.mode & 1) !== 0 && (d.flags & 128) === 0;
        }
        function Cg(d) {
            if (Ir) {
                var p = Os;
                if (p) {
                    var S = p;
                    if (!_v(d, p)) {
                        if (Tg(d)) throw Error(n(418));
                        p = Ul(S.nextSibling);
                        var I = ss;
                        p && _v(d, p) ? wv(I, S) : (d.flags = d.flags & -4097 | 2, Ir = !1, ss = d);
                    }
                } else {
                    if (Tg(d)) throw Error(n(418));
                    d.flags = d.flags & -4097 | 2, Ir = !1, ss = d;
                }
            }
        }
        function Rg(d) {
            for(d = d.return; d !== null && d.tag !== 5 && d.tag !== 3 && d.tag !== 13;)d = d.return;
            ss = d;
        }
        function ff(d) {
            if (d !== ss) return !1;
            if (!Ir) return Rg(d), Ir = !0, !1;
            var p;
            if ((p = d.tag !== 3) && !(p = d.tag !== 5) && (p = d.type, p = p !== "head" && p !== "body" && !fv(d.type, d.memoizedProps)), p && (p = Os)) {
                if (Tg(d)) throw Sv(), Error(n(418));
                for(; p;)wv(d, p), p = Ul(p.nextSibling);
            }
            if (Rg(d), d.tag === 13) {
                if (d = d.memoizedState, d = d !== null ? d.dehydrated : null, !d) throw Error(n(317));
                e: {
                    for(d = d.nextSibling, p = 0; d;){
                        if (d.nodeType === 8) {
                            var S = d.data;
                            if (S === "/$") {
                                if (p === 0) {
                                    Os = Ul(d.nextSibling);
                                    break e;
                                }
                                p--;
                            } else S !== "$" && S !== "$!" && S !== "$?" || p++;
                        }
                        d = d.nextSibling;
                    }
                    Os = null;
                }
            } else Os = ss ? Ul(d.stateNode.nextSibling) : null;
            return !0;
        }
        function Sv() {
            for(var d = Os; d;)d = Ul(d.nextSibling);
        }
        function jc() {
            Os = ss = null, Ir = !1;
        }
        function hf(d) {
            ra === null ? ra = [
                d
            ] : ra.push(d);
        }
        var J2 = T.ReactCurrentBatchConfig;
        function tp(d, p, S) {
            if (d = S.ref, d !== null && typeof d != "function" && typeof d != "object") {
                if (S._owner) {
                    if (S = S._owner, S) {
                        if (S.tag !== 1) throw Error(n(309));
                        var I = S.stateNode;
                    }
                    if (!I) throw Error(n(147, d));
                    var F = I, V = "" + d;
                    return p !== null && p.ref !== null && typeof p.ref == "function" && p.ref._stringRef === V ? p.ref : (p = function(ie) {
                        var we = F.refs;
                        ie === null ? delete we[V] : we[V] = ie;
                    }, p._stringRef = V, p);
                }
                if (typeof d != "string") throw Error(n(284));
                if (!S._owner) throw Error(n(290, d));
            }
            return d;
        }
        function np(d, p) {
            throw d = Object.prototype.toString.call(p), Error(n(31, d === "[object Object]" ? "object with keys {" + Object.keys(p).join(", ") + "}" : d));
        }
        function Ev(d) {
            var p = d._init;
            return p(d._payload);
        }
        function Mv(d) {
            function p(Ve, Ne) {
                if (d) {
                    var qe = Ve.deletions;
                    qe === null ? (Ve.deletions = [
                        Ne
                    ], Ve.flags |= 16) : qe.push(Ne);
                }
            }
            function S(Ve, Ne) {
                if (!d) return null;
                for(; Ne !== null;)p(Ve, Ne), Ne = Ne.sibling;
                return null;
            }
            function I(Ve, Ne) {
                for(Ve = new Map; Ne !== null;)Ne.key !== null ? Ve.set(Ne.key, Ne) : Ve.set(Ne.index, Ne), Ne = Ne.sibling;
                return Ve;
            }
            function F(Ve, Ne) {
                return Ve = Ef(Ve, Ne), Ve.index = 0, Ve.sibling = null, Ve;
            }
            function V(Ve, Ne, qe) {
                return Ve.index = qe, d ? (qe = Ve.alternate, qe !== null ? (qe = qe.index, qe < Ne ? (Ve.flags |= 2, Ne) : qe) : (Ve.flags |= 2, Ne)) : (Ve.flags |= 1048576, Ne);
            }
            function ie(Ve) {
                return d && Ve.alternate === null && (Ve.flags |= 2), Ve;
            }
            function we(Ve, Ne, qe, xt) {
                return Ne === null || Ne.tag !== 6 ? (Ne = yC(qe, Ve.mode, xt), Ne.return = Ve, Ne) : (Ne = F(Ne, qe), Ne.return = Ve, Ne);
            }
            function Ce(Ve, Ne, qe, xt) {
                var Jt = qe.type;
                return Jt === O ? ft(Ve, Ne, qe.props.children, xt, qe.key) : Ne !== null && (Ne.elementType === Jt || typeof Jt == "object" && Jt !== null && Jt.$$typeof === q && Ev(Jt) === Ne.type) ? (xt = F(Ne, qe.props), xt.ref = tp(Ve, Ne, qe), xt.return = Ve, xt) : (xt = W_(qe.type, qe.key, qe.props, null, Ve.mode, xt), xt.ref = tp(Ve, Ne, qe), xt.return = Ve, xt);
            }
            function Ke(Ve, Ne, qe, xt) {
                return Ne === null || Ne.tag !== 4 || Ne.stateNode.containerInfo !== qe.containerInfo || Ne.stateNode.implementation !== qe.implementation ? (Ne = vC(qe, Ve.mode, xt), Ne.return = Ve, Ne) : (Ne = F(Ne, qe.children || []), Ne.return = Ve, Ne);
            }
            function ft(Ve, Ne, qe, xt, Jt) {
                return Ne === null || Ne.tag !== 7 ? (Ne = xp(qe, Ve.mode, xt, Jt), Ne.return = Ve, Ne) : (Ne = F(Ne, qe), Ne.return = Ve, Ne);
            }
            function mt(Ve, Ne, qe) {
                if (typeof Ne == "string" && Ne !== "" || typeof Ne == "number") return Ne = yC("" + Ne, Ve.mode, qe), Ne.return = Ve, Ne;
                if (typeof Ne == "object" && Ne !== null) {
                    switch(Ne.$$typeof){
                        case P:
                            return qe = W_(Ne.type, Ne.key, Ne.props, null, Ve.mode, qe), qe.ref = tp(Ve, null, Ne), qe.return = Ve, qe;
                        case A:
                            return Ne = vC(Ne, Ve.mode, qe), Ne.return = Ve, Ne;
                        case q:
                            var xt = Ne._init;
                            return mt(Ve, xt(Ne._payload), qe);
                    }
                    if (ae(Ne) || Z(Ne)) return Ne = xp(Ne, Ve.mode, qe, null), Ne.return = Ve, Ne;
                    np(Ve, Ne);
                }
                return null;
            }
            function ut(Ve, Ne, qe, xt) {
                var Jt = Ne !== null ? Ne.key : null;
                if (typeof qe == "string" && qe !== "" || typeof qe == "number") return Jt !== null ? null : we(Ve, Ne, "" + qe, xt);
                if (typeof qe == "object" && qe !== null) {
                    switch(qe.$$typeof){
                        case P:
                            return qe.key === Jt ? Ce(Ve, Ne, qe, xt) : null;
                        case A:
                            return qe.key === Jt ? Ke(Ve, Ne, qe, xt) : null;
                        case q:
                            return Jt = qe._init, ut(Ve, Ne, Jt(qe._payload), xt);
                    }
                    if (ae(qe) || Z(qe)) return Jt !== null ? null : ft(Ve, Ne, qe, xt, null);
                    np(Ve, qe);
                }
                return null;
            }
            function Ot(Ve, Ne, qe, xt, Jt) {
                if (typeof xt == "string" && xt !== "" || typeof xt == "number") return Ve = Ve.get(qe) || null, we(Ne, Ve, "" + xt, Jt);
                if (typeof xt == "object" && xt !== null) {
                    switch(xt.$$typeof){
                        case P:
                            return Ve = Ve.get(xt.key === null ? qe : xt.key) || null, Ce(Ne, Ve, xt, Jt);
                        case A:
                            return Ve = Ve.get(xt.key === null ? qe : xt.key) || null, Ke(Ne, Ve, xt, Jt);
                        case q:
                            var ln = xt._init;
                            return Ot(Ve, Ne, qe, ln(xt._payload), Jt);
                    }
                    if (ae(xt) || Z(xt)) return Ve = Ve.get(qe) || null, ft(Ne, Ve, xt, Jt, null);
                    np(Ne, xt);
                }
                return null;
            }
            function Ht(Ve, Ne, qe, xt) {
                for(var Jt = null, ln = null, cn = Ne, yn = Ne = 0, bs = null; cn !== null && yn < qe.length; yn++){
                    cn.index > yn ? (bs = cn, cn = null) : bs = cn.sibling;
                    var dr = ut(Ve, cn, qe[yn], xt);
                    if (dr === null) {
                        cn === null && (cn = bs);
                        break;
                    }
                    d && cn && dr.alternate === null && p(Ve, cn), Ne = V(dr, Ne, yn), ln === null ? Jt = dr : ln.sibling = dr, ln = dr, cn = bs;
                }
                if (yn === qe.length) return S(Ve, cn), Ir && ql(Ve, yn), Jt;
                if (cn === null) {
                    for(; yn < qe.length; yn++)cn = mt(Ve, qe[yn], xt), cn !== null && (Ne = V(cn, Ne, yn), ln === null ? Jt = cn : ln.sibling = cn, ln = cn);
                    return Ir && ql(Ve, yn), Jt;
                }
                for(cn = I(Ve, cn); yn < qe.length; yn++)bs = Ot(cn, Ve, yn, qe[yn], xt), bs !== null && (d && bs.alternate !== null && cn.delete(bs.key === null ? yn : bs.key), Ne = V(bs, Ne, yn), ln === null ? Jt = bs : ln.sibling = bs, ln = bs);
                return d && cn.forEach(function(Mf) {
                    return p(Ve, Mf);
                }), Ir && ql(Ve, yn), Jt;
            }
            function Xt(Ve, Ne, qe, xt) {
                var Jt = Z(qe);
                if (typeof Jt != "function") throw Error(n(150));
                if (qe = Jt.call(qe), qe == null) throw Error(n(151));
                for(var ln = Jt = null, cn = Ne, yn = Ne = 0, bs = null, dr = qe.next(); cn !== null && !dr.done; yn++, dr = qe.next()){
                    cn.index > yn ? (bs = cn, cn = null) : bs = cn.sibling;
                    var Mf = ut(Ve, cn, dr.value, xt);
                    if (Mf === null) {
                        cn === null && (cn = bs);
                        break;
                    }
                    d && cn && Mf.alternate === null && p(Ve, cn), Ne = V(Mf, Ne, yn), ln === null ? Jt = Mf : ln.sibling = Mf, ln = Mf, cn = bs;
                }
                if (dr.done) return S(Ve, cn), Ir && ql(Ve, yn), Jt;
                if (cn === null) {
                    for(; !dr.done; yn++, dr = qe.next())dr = mt(Ve, dr.value, xt), dr !== null && (Ne = V(dr, Ne, yn), ln === null ? Jt = dr : ln.sibling = dr, ln = dr);
                    return Ir && ql(Ve, yn), Jt;
                }
                for(cn = I(Ve, cn); !dr.done; yn++, dr = qe.next())dr = Ot(cn, Ve, yn, dr.value, xt), dr !== null && (d && dr.alternate !== null && cn.delete(dr.key === null ? yn : dr.key), Ne = V(dr, Ne, yn), ln === null ? Jt = dr : ln.sibling = dr, ln = dr);
                return d && cn.forEach(function(G$) {
                    return p(Ve, G$);
                }), Ir && ql(Ve, yn), Jt;
            }
            function Ni(Ve, Ne, qe, xt) {
                if (typeof qe == "object" && qe !== null && qe.type === O && qe.key === null && (qe = qe.props.children), typeof qe == "object" && qe !== null) {
                    switch(qe.$$typeof){
                        case P:
                            e: {
                                for(var Jt = qe.key, ln = Ne; ln !== null;){
                                    if (ln.key === Jt) {
                                        if (Jt = qe.type, Jt === O) {
                                            if (ln.tag === 7) {
                                                S(Ve, ln.sibling), Ne = F(ln, qe.props.children), Ne.return = Ve, Ve = Ne;
                                                break e;
                                            }
                                        } else if (ln.elementType === Jt || typeof Jt == "object" && Jt !== null && Jt.$$typeof === q && Ev(Jt) === ln.type) {
                                            S(Ve, ln.sibling), Ne = F(ln, qe.props), Ne.ref = tp(Ve, ln, qe), Ne.return = Ve, Ve = Ne;
                                            break e;
                                        }
                                        S(Ve, ln);
                                        break;
                                    } else p(Ve, ln);
                                    ln = ln.sibling;
                                }
                                qe.type === O ? (Ne = xp(qe.props.children, Ve.mode, xt, qe.key), Ne.return = Ve, Ve = Ne) : (xt = W_(qe.type, qe.key, qe.props, null, Ve.mode, xt), xt.ref = tp(Ve, Ne, qe), xt.return = Ve, Ve = xt);
                            }
                            return ie(Ve);
                        case A:
                            e: {
                                for(ln = qe.key; Ne !== null;){
                                    if (Ne.key === ln) if (Ne.tag === 4 && Ne.stateNode.containerInfo === qe.containerInfo && Ne.stateNode.implementation === qe.implementation) {
                                        S(Ve, Ne.sibling), Ne = F(Ne, qe.children || []), Ne.return = Ve, Ve = Ne;
                                        break e;
                                    } else {
                                        S(Ve, Ne);
                                        break;
                                    }
                                    else p(Ve, Ne);
                                    Ne = Ne.sibling;
                                }
                                Ne = vC(qe, Ve.mode, xt), Ne.return = Ve, Ve = Ne;
                            }
                            return ie(Ve);
                        case q:
                            return ln = qe._init, Ni(Ve, Ne, ln(qe._payload), xt);
                    }
                    if (ae(qe)) return Ht(Ve, Ne, qe, xt);
                    if (Z(qe)) return Xt(Ve, Ne, qe, xt);
                    np(Ve, qe);
                }
                return typeof qe == "string" && qe !== "" || typeof qe == "number" ? (qe = "" + qe, Ne !== null && Ne.tag === 6 ? (S(Ve, Ne.sibling), Ne = F(Ne, qe), Ne.return = Ve, Ve = Ne) : (S(Ve, Ne), Ne = yC(qe, Ve.mode, xt), Ne.return = Ve, Ve = Ne), ie(Ve)) : S(Ve, Ne);
            }
            return Ni;
        }
        var Vu = Mv(!0), rp = Mv(!1), Wu = Jr(null), qu = null, $l = null, pf = null;
        function Hu() {
            pf = $l = qu = null;
        }
        function ip(d) {
            var p = Wu.current;
            _r(Wu), d._currentValue = p;
        }
        function sp(d, p, S) {
            for(; d !== null;){
                var I = d.alternate;
                if ((d.childLanes & p) !== p ? (d.childLanes |= p, I !== null && (I.childLanes |= p)) : I !== null && (I.childLanes & p) !== p && (I.childLanes |= p), d === S) break;
                d = d.return;
            }
        }
        function Bc(d, p) {
            qu = d, pf = $l = null, d = d.dependencies, d !== null && d.firstContext !== null && (d.lanes & p && (Pn = !0), d.firstContext = null);
        }
        function Io(d) {
            var p = d._currentValue;
            if (pf !== d) if (d = {
                context: d,
                memoizedValue: p,
                next: null
            }, $l === null) {
                if (qu === null) throw Error(n(308));
                $l = d, qu.dependencies = {
                    lanes: 0,
                    firstContext: d
                };
            } else $l = $l.next = d;
            return p;
        }
        var Gl = null;
        function Tv(d) {
            Gl === null ? Gl = [
                d
            ] : Gl.push(d);
        }
        function op(d, p, S, I) {
            var F = p.interleaved;
            return F === null ? (S.next = S, Tv(p)) : (S.next = F.next, F.next = S), p.interleaved = S, Oa(d, I);
        }
        function Oa(d, p) {
            d.lanes |= p;
            var S = d.alternate;
            for(S !== null && (S.lanes |= p), S = d, d = d.return; d !== null;)d.childLanes |= p, S = d.alternate, S !== null && (S.childLanes |= p), S = d, d = d.return;
            return S.tag === 3 ? S.stateNode : null;
        }
        var pr = !1;
        function In(d) {
            d.updateQueue = {
                baseState: d.memoizedState,
                firstBaseUpdate: null,
                lastBaseUpdate: null,
                shared: {
                    pending: null,
                    interleaved: null,
                    lanes: 0
                },
                effects: null
            };
        }
        function ci(d, p) {
            d = d.updateQueue, p.updateQueue === d && (p.updateQueue = {
                baseState: d.baseState,
                firstBaseUpdate: d.firstBaseUpdate,
                lastBaseUpdate: d.lastBaseUpdate,
                shared: d.shared,
                effects: d.effects
            });
        }
        function mr(d, p) {
            return {
                eventTime: d,
                lane: p,
                tag: 0,
                payload: null,
                callback: null,
                next: null
            };
        }
        function Lr(d, p, S) {
            var I = d.updateQueue;
            if (I === null) return null;
            if (I = I.shared, or & 2) {
                var F = I.pending;
                return F === null ? p.next = p : (p.next = F.next, F.next = p), I.pending = p, Oa(d, S);
            }
            return F = I.interleaved, F === null ? (p.next = p, Tv(I)) : (p.next = F.next, F.next = p), I.interleaved = p, Oa(d, S);
        }
        function ys(d, p, S) {
            if (p = p.updateQueue, p !== null && (p = p.shared, (S & 4194240) !== 0)) {
                var I = p.lanes;
                I &= d.pendingLanes, S |= I, p.lanes = S, ai(d, S);
            }
        }
        function $u(d, p) {
            var S = d.updateQueue, I = d.alternate;
            if (I !== null && (I = I.updateQueue, S === I)) {
                var F = null, V = null;
                if (S = S.firstBaseUpdate, S !== null) {
                    do {
                        var ie = {
                            eventTime: S.eventTime,
                            lane: S.lane,
                            tag: S.tag,
                            payload: S.payload,
                            callback: S.callback,
                            next: null
                        };
                        V === null ? F = V = ie : V = V.next = ie, S = S.next;
                    }while (S !== null);
                    V === null ? F = V = p : V = V.next = p;
                } else F = V = p;
                S = {
                    baseState: I.baseState,
                    firstBaseUpdate: F,
                    lastBaseUpdate: V,
                    shared: I.shared,
                    effects: I.effects
                }, d.updateQueue = S;
                return;
            }
            d = S.lastBaseUpdate, d === null ? S.firstBaseUpdate = p : d.next = p, S.lastBaseUpdate = p;
        }
        function Qr(d, p, S, I) {
            var F = d.updateQueue;
            pr = !1;
            var V = F.firstBaseUpdate, ie = F.lastBaseUpdate, we = F.shared.pending;
            if (we !== null) {
                F.shared.pending = null;
                var Ce = we, Ke = Ce.next;
                Ce.next = null, ie === null ? V = Ke : ie.next = Ke, ie = Ce;
                var ft = d.alternate;
                ft !== null && (ft = ft.updateQueue, we = ft.lastBaseUpdate, we !== ie && (we === null ? ft.firstBaseUpdate = Ke : we.next = Ke, ft.lastBaseUpdate = Ce));
            }
            if (V !== null) {
                var mt = F.baseState;
                ie = 0, ft = Ke = Ce = null, we = V;
                do {
                    var ut = we.lane, Ot = we.eventTime;
                    if ((I & ut) === ut) {
                        ft !== null && (ft = ft.next = {
                            eventTime: Ot,
                            lane: 0,
                            tag: we.tag,
                            payload: we.payload,
                            callback: we.callback,
                            next: null
                        });
                        e: {
                            var Ht = d, Xt = we;
                            switch(ut = p, Ot = S, Xt.tag){
                                case 1:
                                    if (Ht = Xt.payload, typeof Ht == "function") {
                                        mt = Ht.call(Ot, mt, ut);
                                        break e;
                                    }
                                    mt = Ht;
                                    break e;
                                case 3:
                                    Ht.flags = Ht.flags & -65537 | 128;
                                case 0:
                                    if (Ht = Xt.payload, ut = typeof Ht == "function" ? Ht.call(Ot, mt, ut) : Ht, ut == null) break e;
                                    mt = $({}, mt, ut);
                                    break e;
                                case 2:
                                    pr = !0;
                            }
                        }
                        we.callback !== null && we.lane !== 0 && (d.flags |= 64, ut = F.effects, ut === null ? F.effects = [
                            we
                        ] : ut.push(we));
                    } else Ot = {
                        eventTime: Ot,
                        lane: ut,
                        tag: we.tag,
                        payload: we.payload,
                        callback: we.callback,
                        next: null
                    }, ft === null ? (Ke = ft = Ot, Ce = mt) : ft = ft.next = Ot, ie |= ut;
                    if (we = we.next, we === null) {
                        if (we = F.shared.pending, we === null) break;
                        ut = we, we = ut.next, ut.next = null, F.lastBaseUpdate = ut, F.shared.pending = null;
                    }
                }while (!0);
                if (ft === null && (Ce = mt), F.baseState = Ce, F.firstBaseUpdate = Ke, F.lastBaseUpdate = ft, p = F.shared.interleaved, p !== null) {
                    F = p;
                    do ie |= F.lane, F = F.next;
                    while (F !== p);
                } else V === null && (F.shared.lanes = 0);
                mp |= ie, d.lanes = ie, d.memoizedState = mt;
            }
        }
        function mf(d, p, S) {
            if (d = p.effects, p.effects = null, d !== null) for(p = 0; p < d.length; p++){
                var I = d[p], F = I.callback;
                if (F !== null) {
                    if (I.callback = null, I = S, typeof F != "function") throw Error(n(191, F));
                    F.call(I);
                }
            }
        }
        var dl = {}, Ao = Jr(dl), Gu = Jr(dl), Xl = Jr(dl);
        function pi(d) {
            if (d === dl) throw Error(n(174));
            return d;
        }
        function ap(d, p) {
            switch(xr(Xl, p), xr(Gu, d), xr(Ao, dl), d = p.nodeType, d){
                case 9:
                case 11:
                    p = (p = p.documentElement) ? p.namespaceURI : Xe(null, "");
                    break;
                default:
                    d = d === 8 ? p.parentNode : p, p = d.namespaceURI || null, d = d.tagName, p = Xe(p, d);
            }
            _r(Ao), xr(Ao, p);
        }
        function Uc() {
            _r(Ao), _r(Gu), _r(Xl);
        }
        function Xu(d) {
            pi(Xl.current);
            var p = pi(Ao.current), S = Xe(p, d.type);
            p !== S && (xr(Gu, d), xr(Ao, S));
        }
        function gf(d) {
            Gu.current === d && (_r(Ao), _r(Gu));
        }
        var Ar = Jr(0);
        function Da(d) {
            for(var p = d; p !== null;){
                if (p.tag === 13) {
                    var S = p.memoizedState;
                    if (S !== null && (S = S.dehydrated, S === null || S.data === "$?" || S.data === "$!")) return p;
                } else if (p.tag === 19 && p.memoizedProps.revealOrder !== void 0) {
                    if (p.flags & 128) return p;
                } else if (p.child !== null) {
                    p.child.return = p, p = p.child;
                    continue;
                }
                if (p === d) break;
                for(; p.sibling === null;){
                    if (p.return === null || p.return === d) return null;
                    p = p.return;
                }
                p.sibling.return = p.return, p = p.sibling;
            }
            return null;
        }
        var yf = [];
        function fl() {
            for(var d = 0; d < yf.length; d++)yf[d]._workInProgressVersionPrimary = null;
            yf.length = 0;
        }
        var Ku = T.ReactCurrentDispatcher, Yu = T.ReactCurrentBatchConfig, Kl = 0, Sr = null, ei = null, nr = null, La = !1, vs = !1, zc = 0, Js = 0;
        function os() {
            throw Error(n(321));
        }
        function lp(d, p) {
            if (p === null) return !1;
            for(var S = 0; S < p.length && S < d.length; S++)if (!To(d[S], p[S])) return !1;
            return !0;
        }
        function cp(d, p, S, I, F, V) {
            if (Kl = V, Sr = p, p.memoizedState = null, p.updateQueue = null, p.lanes = 0, Ku.current = d === null || d.memoizedState === null ? C_ : R_, d = S(I, F), vs) {
                V = 0;
                do {
                    if (vs = !1, zc = 0, 25 <= V) throw Error(n(301));
                    V += 1, nr = ei = null, p.updateQueue = null, Ku.current = I_, d = S(I, F);
                }while (vs);
            }
            if (Ku.current = Dg, p = ei !== null && ei.next !== null, Kl = 0, nr = ei = Sr = null, La = !1, p) throw Error(n(300));
            return d;
        }
        function Cv() {
            var d = zc !== 0;
            return zc = 0, d;
        }
        function as() {
            var d = {
                memoizedState: null,
                baseState: null,
                baseQueue: null,
                queue: null,
                next: null
            };
            return nr === null ? Sr.memoizedState = nr = d : nr = nr.next = d, nr;
        }
        function No() {
            if (ei === null) {
                var d = Sr.alternate;
                d = d !== null ? d.memoizedState : null;
            } else d = ei.next;
            var p = nr === null ? Sr.memoizedState : nr.next;
            if (p !== null) nr = p, ei = d;
            else {
                if (d === null) throw Error(n(310));
                ei = d, d = {
                    memoizedState: ei.memoizedState,
                    baseState: ei.baseState,
                    baseQueue: ei.baseQueue,
                    queue: ei.queue,
                    next: null
                }, nr === null ? Sr.memoizedState = nr = d : nr = nr.next = d;
            }
            return nr;
        }
        function vf(d, p) {
            return typeof p == "function" ? p(d) : p;
        }
        function up(d) {
            var p = No(), S = p.queue;
            if (S === null) throw Error(n(311));
            S.lastRenderedReducer = d;
            var I = ei, F = I.baseQueue, V = S.pending;
            if (V !== null) {
                if (F !== null) {
                    var ie = F.next;
                    F.next = V.next, V.next = ie;
                }
                I.baseQueue = F = V, S.pending = null;
            }
            if (F !== null) {
                V = F.next, I = I.baseState;
                var we = ie = null, Ce = null, Ke = V;
                do {
                    var ft = Ke.lane;
                    if ((Kl & ft) === ft) Ce !== null && (Ce = Ce.next = {
                        lane: 0,
                        action: Ke.action,
                        hasEagerState: Ke.hasEagerState,
                        eagerState: Ke.eagerState,
                        next: null
                    }), I = Ke.hasEagerState ? Ke.eagerState : d(I, Ke.action);
                    else {
                        var mt = {
                            lane: ft,
                            action: Ke.action,
                            hasEagerState: Ke.hasEagerState,
                            eagerState: Ke.eagerState,
                            next: null
                        };
                        Ce === null ? (we = Ce = mt, ie = I) : Ce = Ce.next = mt, Sr.lanes |= ft, mp |= ft;
                    }
                    Ke = Ke.next;
                }while (Ke !== null && Ke !== V);
                Ce === null ? ie = I : Ce.next = we, To(I, p.memoizedState) || (Pn = !0), p.memoizedState = I, p.baseState = ie, p.baseQueue = Ce, S.lastRenderedState = I;
            }
            if (d = S.interleaved, d !== null) {
                F = d;
                do V = F.lane, Sr.lanes |= V, mp |= V, F = F.next;
                while (F !== d);
            } else F === null && (S.lanes = 0);
            return [
                p.memoizedState,
                S.dispatch
            ];
        }
        function Yl(d) {
            var p = No(), S = p.queue;
            if (S === null) throw Error(n(311));
            S.lastRenderedReducer = d;
            var I = S.dispatch, F = S.pending, V = p.memoizedState;
            if (F !== null) {
                S.pending = null;
                var ie = F = F.next;
                do V = d(V, ie.action), ie = ie.next;
                while (ie !== F);
                To(V, p.memoizedState) || (Pn = !0), p.memoizedState = V, p.baseQueue === null && (p.baseState = V), S.lastRenderedState = V;
            }
            return [
                V,
                I
            ];
        }
        function Rv() {}
        function Iv(d, p) {
            var S = Sr, I = No(), F = p(), V = !To(I.memoizedState, F);
            if (V && (I.memoizedState = F, Pn = !0), I = I.queue, Pv(w_.bind(null, S, I, d), [
                d
            ]), I.getSnapshot !== p || V || nr !== null && nr.memoizedState.tag & 1) {
                if (S.flags |= 2048, Fa(9, dp.bind(null, S, I, F, p), void 0, null), xs === null) throw Error(n(349));
                Kl & 30 || Ig(S, p, F);
            }
            return F;
        }
        function Ig(d, p, S) {
            d.flags |= 16384, d = {
                getSnapshot: p,
                value: S
            }, p = Sr.updateQueue, p === null ? (p = {
                lastEffect: null,
                stores: null
            }, Sr.updateQueue = p, p.stores = [
                d
            ]) : (S = p.stores, S === null ? p.stores = [
                d
            ] : S.push(d));
        }
        function dp(d, p, S, I) {
            p.value = S, p.getSnapshot = I, __(p) && Av(d);
        }
        function w_(d, p, S) {
            return S(function() {
                __(p) && Av(d);
            });
        }
        function __(d) {
            var p = d.getSnapshot;
            d = d.value;
            try {
                var S = p();
                return !To(d, S);
            } catch  {
                return !0;
            }
        }
        function Av(d) {
            var p = Oa(d, 1);
            p !== null && tc(p, d, 1, -1);
        }
        function Nv(d) {
            var p = as();
            return typeof d == "function" && (d = d()), p.memoizedState = p.baseState = d, d = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: vf,
                lastRenderedState: d
            }, p.queue = d, d = d.dispatch = Zu.bind(null, Sr, d), [
                p.memoizedState,
                d
            ];
        }
        function Fa(d, p, S, I) {
            return d = {
                tag: d,
                create: p,
                destroy: S,
                deps: I,
                next: null
            }, p = Sr.updateQueue, p === null ? (p = {
                lastEffect: null,
                stores: null
            }, Sr.updateQueue = p, p.lastEffect = d.next = d) : (S = p.lastEffect, S === null ? p.lastEffect = d.next = d : (I = S.next, S.next = d, d.next = I, p.lastEffect = d)), d;
        }
        function S_() {
            return No().memoizedState;
        }
        function hl(d, p, S, I) {
            var F = as();
            Sr.flags |= d, F.memoizedState = Fa(1 | p, S, void 0, I === void 0 ? null : I);
        }
        function fp(d, p, S, I) {
            var F = No();
            I = I === void 0 ? null : I;
            var V = void 0;
            if (ei !== null) {
                var ie = ei.memoizedState;
                if (V = ie.destroy, I !== null && lp(I, ie.deps)) {
                    F.memoizedState = Fa(p, S, V, I);
                    return;
                }
            }
            Sr.flags |= d, F.memoizedState = Fa(1 | p, S, V, I);
        }
        function Ds(d, p) {
            return hl(8390656, 8, d, p);
        }
        function Pv(d, p) {
            return fp(2048, 8, d, p);
        }
        function kv(d, p) {
            return fp(4, 2, d, p);
        }
        function E_(d, p) {
            return fp(4, 4, d, p);
        }
        function M_(d, p) {
            if (typeof p == "function") return d = d(), p(d), function() {
                p(null);
            };
            if (p != null) return d = d(), p.current = d, function() {
                p.current = null;
            };
        }
        function Ov(d, p, S) {
            return S = S != null ? S.concat([
                d
            ]) : null, fp(4, 4, M_.bind(null, p, d), S);
        }
        function Ag() {}
        function T_(d, p) {
            var S = No();
            p = p === void 0 ? null : p;
            var I = S.memoizedState;
            return I !== null && p !== null && lp(p, I[1]) ? I[0] : (S.memoizedState = [
                d,
                p
            ], d);
        }
        function Po(d, p) {
            var S = No();
            p = p === void 0 ? null : p;
            var I = S.memoizedState;
            return I !== null && p !== null && lp(p, I[1]) ? I[0] : (d = d(), S.memoizedState = [
                d,
                p
            ], d);
        }
        function Ng(d, p, S) {
            return Kl & 21 ? (To(S, p) || (S = Gn(), Sr.lanes |= S, mp |= S, d.baseState = !0), p) : (d.baseState && (d.baseState = !1, Pn = !0), d.memoizedState = S);
        }
        function Q2(d, p) {
            var S = Kn;
            Kn = S !== 0 && 4 > S ? S : 4, d(!0);
            var I = Yu.transition;
            Yu.transition = {};
            try {
                d(!1), p();
            } finally{
                Kn = S, Yu.transition = I;
            }
        }
        function Zl() {
            return No().memoizedState;
        }
        function Pg(d, p, S) {
            var I = _f(d);
            if (S = {
                lane: I,
                action: S,
                hasEagerState: !1,
                eagerState: null,
                next: null
            }, hp(d)) kg(p, S);
            else if (S = op(d, p, S, I), S !== null) {
                var F = Oo();
                tc(S, d, I, F), Og(S, p, I);
            }
        }
        function Zu(d, p, S) {
            var I = _f(d), F = {
                lane: I,
                action: S,
                hasEagerState: !1,
                eagerState: null,
                next: null
            };
            if (hp(d)) kg(p, F);
            else {
                var V = d.alternate;
                if (d.lanes === 0 && (V === null || V.lanes === 0) && (V = p.lastRenderedReducer, V !== null)) try {
                    var ie = p.lastRenderedState, we = V(ie, S);
                    if (F.hasEagerState = !0, F.eagerState = we, To(we, ie)) {
                        var Ce = p.interleaved;
                        Ce === null ? (F.next = F, Tv(p)) : (F.next = Ce.next, Ce.next = F), p.interleaved = F;
                        return;
                    }
                } catch  {} finally{}
                S = op(d, p, F, I), S !== null && (F = Oo(), tc(S, d, I, F), Og(S, p, I));
            }
        }
        function hp(d) {
            var p = d.alternate;
            return d === Sr || p !== null && p === Sr;
        }
        function kg(d, p) {
            vs = La = !0;
            var S = d.pending;
            S === null ? p.next = p : (p.next = S.next, S.next = p), d.pending = p;
        }
        function Og(d, p, S) {
            if (S & 4194240) {
                var I = p.lanes;
                I &= d.pendingLanes, S |= I, p.lanes = S, ai(d, S);
            }
        }
        var Dg = {
            readContext: Io,
            useCallback: os,
            useContext: os,
            useEffect: os,
            useImperativeHandle: os,
            useInsertionEffect: os,
            useLayoutEffect: os,
            useMemo: os,
            useReducer: os,
            useRef: os,
            useState: os,
            useDebugValue: os,
            useDeferredValue: os,
            useTransition: os,
            useMutableSource: os,
            useSyncExternalStore: os,
            useId: os,
            unstable_isNewReconciler: !1
        }, C_ = {
            readContext: Io,
            useCallback: function(d, p) {
                return as().memoizedState = [
                    d,
                    p === void 0 ? null : p
                ], d;
            },
            useContext: Io,
            useEffect: Ds,
            useImperativeHandle: function(d, p, S) {
                return S = S != null ? S.concat([
                    d
                ]) : null, hl(4194308, 4, M_.bind(null, p, d), S);
            },
            useLayoutEffect: function(d, p) {
                return hl(4194308, 4, d, p);
            },
            useInsertionEffect: function(d, p) {
                return hl(4, 2, d, p);
            },
            useMemo: function(d, p) {
                var S = as();
                return p = p === void 0 ? null : p, d = d(), S.memoizedState = [
                    d,
                    p
                ], d;
            },
            useReducer: function(d, p, S) {
                var I = as();
                return p = S !== void 0 ? S(p) : p, I.memoizedState = I.baseState = p, d = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: d,
                    lastRenderedState: p
                }, I.queue = d, d = d.dispatch = Pg.bind(null, Sr, d), [
                    I.memoizedState,
                    d
                ];
            },
            useRef: function(d) {
                var p = as();
                return d = {
                    current: d
                }, p.memoizedState = d;
            },
            useState: Nv,
            useDebugValue: Ag,
            useDeferredValue: function(d) {
                return as().memoizedState = d;
            },
            useTransition: function() {
                var d = Nv(!1), p = d[0];
                return d = Q2.bind(null, d[1]), as().memoizedState = d, [
                    p,
                    d
                ];
            },
            useMutableSource: function() {},
            useSyncExternalStore: function(d, p, S) {
                var I = Sr, F = as();
                if (Ir) {
                    if (S === void 0) throw Error(n(407));
                    S = S();
                } else {
                    if (S = p(), xs === null) throw Error(n(349));
                    Kl & 30 || Ig(I, p, S);
                }
                F.memoizedState = S;
                var V = {
                    value: S,
                    getSnapshot: p
                };
                return F.queue = V, Ds(w_.bind(null, I, V, d), [
                    d
                ]), I.flags |= 2048, Fa(9, dp.bind(null, I, V, S, p), void 0, null), S;
            },
            useId: function() {
                var d = as(), p = xs.identifierPrefix;
                if (Ir) {
                    var S = na, I = bt;
                    S = (I & ~(1 << 32 - on(I) - 1)).toString(32) + S, p = ":" + p + "R" + S, S = zc++, 0 < S && (p += "H" + S.toString(32)), p += ":";
                } else S = Js++, p = ":" + p + "r" + S.toString(32) + ":";
                return d.memoizedState = p;
            },
            unstable_isNewReconciler: !1
        }, R_ = {
            readContext: Io,
            useCallback: T_,
            useContext: Io,
            useEffect: Pv,
            useImperativeHandle: Ov,
            useInsertionEffect: kv,
            useLayoutEffect: E_,
            useMemo: Po,
            useReducer: up,
            useRef: S_,
            useState: function() {
                return up(vf);
            },
            useDebugValue: Ag,
            useDeferredValue: function(d) {
                var p = No();
                return Ng(p, ei.memoizedState, d);
            },
            useTransition: function() {
                var d = up(vf)[0], p = No().memoizedState;
                return [
                    d,
                    p
                ];
            },
            useMutableSource: Rv,
            useSyncExternalStore: Iv,
            useId: Zl,
            unstable_isNewReconciler: !1
        }, I_ = {
            readContext: Io,
            useCallback: T_,
            useContext: Io,
            useEffect: Pv,
            useImperativeHandle: Ov,
            useInsertionEffect: kv,
            useLayoutEffect: E_,
            useMemo: Po,
            useReducer: Yl,
            useRef: S_,
            useState: function() {
                return Yl(vf);
            },
            useDebugValue: Ag,
            useDeferredValue: function(d) {
                var p = No();
                return ei === null ? p.memoizedState = d : Ng(p, ei.memoizedState, d);
            },
            useTransition: function() {
                var d = Yl(vf)[0], p = No().memoizedState;
                return [
                    d,
                    p
                ];
            },
            useMutableSource: Rv,
            useSyncExternalStore: Iv,
            useId: Zl,
            unstable_isNewReconciler: !1
        };
        function ia(d, p) {
            if (d && d.defaultProps) {
                p = $({}, p), d = d.defaultProps;
                for(var S in d)p[S] === void 0 && (p[S] = d[S]);
                return p;
            }
            return p;
        }
        function pp(d, p, S, I) {
            p = d.memoizedState, S = S(I, p), S = S == null ? p : $({}, p, S), d.memoizedState = S, d.lanes === 0 && (d.updateQueue.baseState = S);
        }
        var Lg = {
            isMounted: function(d) {
                return (d = d._reactInternals) ? So(d) === d : !1;
            },
            enqueueSetState: function(d, p, S) {
                d = d._reactInternals;
                var I = Oo(), F = _f(d), V = mr(I, F);
                V.payload = p, S != null && (V.callback = S), p = Lr(d, V, F), p !== null && (tc(p, d, F, I), ys(p, d, F));
            },
            enqueueReplaceState: function(d, p, S) {
                d = d._reactInternals;
                var I = Oo(), F = _f(d), V = mr(I, F);
                V.tag = 1, V.payload = p, S != null && (V.callback = S), p = Lr(d, V, F), p !== null && (tc(p, d, F, I), ys(p, d, F));
            },
            enqueueForceUpdate: function(d, p) {
                d = d._reactInternals;
                var S = Oo(), I = _f(d), F = mr(S, I);
                F.tag = 2, p != null && (F.callback = p), p = Lr(d, F, I), p !== null && (tc(p, d, I, S), ys(p, d, I));
            }
        };
        function A_(d, p, S, I, F, V, ie) {
            return d = d.stateNode, typeof d.shouldComponentUpdate == "function" ? d.shouldComponentUpdate(I, V, ie) : p.prototype && p.prototype.isPureReactComponent ? !Pu(S, I) || !Pu(F, V) : !0;
        }
        function g(d, p, S) {
            var I = !1, F = Vl, V = p.contextType;
            return typeof V == "object" && V !== null ? V = Io(V) : (F = gs(p) ? Wl : is.current, I = p.contextTypes, V = (I = I != null) ? ju(d, F) : Vl), p = new p(S, V), d.memoizedState = p.state !== null && p.state !== void 0 ? p.state : null, p.updater = Lg, d.stateNode = p, p._reactInternals = d, I && (d = d.stateNode, d.__reactInternalMemoizedUnmaskedChildContext = F, d.__reactInternalMemoizedMaskedChildContext = V), p;
        }
        function y(d, p, S, I) {
            d = p.state, typeof p.componentWillReceiveProps == "function" && p.componentWillReceiveProps(S, I), typeof p.UNSAFE_componentWillReceiveProps == "function" && p.UNSAFE_componentWillReceiveProps(S, I), p.state !== d && Lg.enqueueReplaceState(p, p.state, null);
        }
        function C(d, p, S, I) {
            var F = d.stateNode;
            F.props = S, F.state = d.memoizedState, F.refs = {}, In(d);
            var V = p.contextType;
            typeof V == "object" && V !== null ? F.context = Io(V) : (V = gs(p) ? Wl : is.current, F.context = ju(d, V)), F.state = d.memoizedState, V = p.getDerivedStateFromProps, typeof V == "function" && (pp(d, p, V, S), F.state = d.memoizedState), typeof p.getDerivedStateFromProps == "function" || typeof F.getSnapshotBeforeUpdate == "function" || typeof F.UNSAFE_componentWillMount != "function" && typeof F.componentWillMount != "function" || (p = F.state, typeof F.componentWillMount == "function" && F.componentWillMount(), typeof F.UNSAFE_componentWillMount == "function" && F.UNSAFE_componentWillMount(), p !== F.state && Lg.enqueueReplaceState(F, F.state, null), Qr(d, S, F, I), F.state = d.memoizedState), typeof F.componentDidMount == "function" && (d.flags |= 4194308);
        }
        function L(d, p) {
            try {
                var S = "", I = p;
                do S += ue(I), I = I.return;
                while (I);
                var F = S;
            } catch (V) {
                F = `
Error generating stack: ` + V.message + `
` + V.stack;
            }
            return {
                value: d,
                source: p,
                stack: F,
                digest: null
            };
        }
        function z(d, p, S) {
            return {
                value: d,
                source: null,
                stack: S ?? null,
                digest: p ?? null
            };
        }
        function Q(d, p) {
            try {
                console.error(p.value);
            } catch (S) {
                setTimeout(function() {
                    throw S;
                });
            }
        }
        var xe = typeof WeakMap == "function" ? WeakMap : Map;
        function ke(d, p, S) {
            S = mr(-1, S), S.tag = 3, S.payload = {
                element: null
            };
            var I = p.value;
            return S.callback = function() {
                F_ || (F_ = !0, cC = I), Q(d, p);
            }, S;
        }
        function tt(d, p, S) {
            S = mr(-1, S), S.tag = 3;
            var I = d.type.getDerivedStateFromError;
            if (typeof I == "function") {
                var F = p.value;
                S.payload = function() {
                    return I(F);
                }, S.callback = function() {
                    Q(d, p);
                };
            }
            var V = d.stateNode;
            return V !== null && typeof V.componentDidCatch == "function" && (S.callback = function() {
                Q(d, p), typeof I != "function" && (bf === null ? bf = new Set([
                    this
                ]) : bf.add(this));
                var ie = p.stack;
                this.componentDidCatch(p.value, {
                    componentStack: ie !== null ? ie : ""
                });
            }), S;
        }
        function vt(d, p, S) {
            var I = d.pingCache;
            if (I === null) {
                I = d.pingCache = new xe;
                var F = new Set;
                I.set(p, F);
            } else F = I.get(p), F === void 0 && (F = new Set, I.set(p, F));
            F.has(S) || (F.add(S), d = L$.bind(null, d, p, S), p.then(d, d));
        }
        function Ut(d) {
            do {
                var p;
                if ((p = d.tag === 13) && (p = d.memoizedState, p = p !== null ? p.dehydrated !== null : !0), p) return d;
                d = d.return;
            }while (d !== null);
            return null;
        }
        function xn(d, p, S, I, F) {
            return d.mode & 1 ? (d.flags |= 65536, d.lanes = F, d) : (d === p ? d.flags |= 65536 : (d.flags |= 128, S.flags |= 131072, S.flags &= -52805, S.tag === 1 && (S.alternate === null ? S.tag = 17 : (p = mr(-1, 1), p.tag = 2, Lr(S, p, 1))), S.lanes |= 1), d);
        }
        var rn = T.ReactCurrentOwner, Pn = !1;
        function Rt(d, p, S, I) {
            p.child = d === null ? rp(p, null, S, I) : Vu(p, d.child, S, I);
        }
        function ls(d, p, S, I, F) {
            S = S.render;
            var V = p.ref;
            return Bc(p, F), I = cp(d, p, S, I, V, F), S = Cv(), d !== null && !Pn ? (p.updateQueue = d.updateQueue, p.flags &= -2053, d.lanes &= ~F, Ju(d, p, F)) : (Ir && S && bv(p), p.flags |= 1, Rt(d, p, I, F), p.child);
        }
        function ko(d, p, S, I, F) {
            if (d === null) {
                var V = S.type;
                return typeof V == "function" && !gC(V) && V.defaultProps === void 0 && S.compare === null && S.defaultProps === void 0 ? (p.tag = 15, p.type = V, He(d, p, V, I, F)) : (d = W_(S.type, null, I, p, p.mode, F), d.ref = p.ref, d.return = p, p.child = d);
            }
            if (V = d.child, !(d.lanes & F)) {
                var ie = V.memoizedProps;
                if (S = S.compare, S = S !== null ? S : Pu, S(ie, I) && d.ref === p.ref) return Ju(d, p, F);
            }
            return p.flags |= 1, d = Ef(V, I), d.ref = p.ref, d.return = p, p.child = d;
        }
        function He(d, p, S, I, F) {
            if (d !== null) {
                var V = d.memoizedProps;
                if (Pu(V, I) && d.ref === p.ref) if (Pn = !1, p.pendingProps = I = V, (d.lanes & F) !== 0) d.flags & 131072 && (Pn = !0);
                else return p.lanes = d.lanes, Ju(d, p, F);
            }
            return Et(d, p, S, I, F);
        }
        function Le(d, p, S) {
            var I = p.pendingProps, F = I.children, V = d !== null ? d.memoizedState : null;
            if (I.mode === "hidden") if (!(p.mode & 1)) p.memoizedState = {
                baseLanes: 0,
                cachePool: null,
                transitions: null
            }, xr(jg, ja), ja |= S;
            else {
                if (!(S & 1073741824)) return d = V !== null ? V.baseLanes | S : S, p.lanes = p.childLanes = 1073741824, p.memoizedState = {
                    baseLanes: d,
                    cachePool: null,
                    transitions: null
                }, p.updateQueue = null, xr(jg, ja), ja |= d, null;
                p.memoizedState = {
                    baseLanes: 0,
                    cachePool: null,
                    transitions: null
                }, I = V !== null ? V.baseLanes : S, xr(jg, ja), ja |= I;
            }
            else V !== null ? (I = V.baseLanes | S, p.memoizedState = null) : I = S, xr(jg, ja), ja |= I;
            return Rt(d, p, F, S), p.child;
        }
        function Qe(d, p) {
            var S = p.ref;
            (d === null && S !== null || d !== null && d.ref !== S) && (p.flags |= 512, p.flags |= 2097152);
        }
        function Et(d, p, S, I, F) {
            var V = gs(S) ? Wl : is.current;
            return V = ju(p, V), Bc(p, F), S = cp(d, p, S, I, V, F), I = Cv(), d !== null && !Pn ? (p.updateQueue = d.updateQueue, p.flags &= -2053, d.lanes &= ~F, Ju(d, p, F)) : (Ir && I && bv(p), p.flags |= 1, Rt(d, p, S, F), p.child);
        }
        function Kt(d, p, S, I, F) {
            if (gs(S)) {
                var V = !0;
                Bu(p);
            } else V = !1;
            if (Bc(p, F), p.stateNode === null) P_(d, p), g(p, S, I), C(p, S, I, F), I = !0;
            else if (d === null) {
                var ie = p.stateNode, we = p.memoizedProps;
                ie.props = we;
                var Ce = ie.context, Ke = S.contextType;
                typeof Ke == "object" && Ke !== null ? Ke = Io(Ke) : (Ke = gs(S) ? Wl : is.current, Ke = ju(p, Ke));
                var ft = S.getDerivedStateFromProps, mt = typeof ft == "function" || typeof ie.getSnapshotBeforeUpdate == "function";
                mt || typeof ie.UNSAFE_componentWillReceiveProps != "function" && typeof ie.componentWillReceiveProps != "function" || (we !== I || Ce !== Ke) && y(p, ie, I, Ke), pr = !1;
                var ut = p.memoizedState;
                ie.state = ut, Qr(p, I, ie, F), Ce = p.memoizedState, we !== I || ut !== Ce || Ps.current || pr ? (typeof ft == "function" && (pp(p, S, ft, I), Ce = p.memoizedState), (we = pr || A_(p, S, we, I, ut, Ce, Ke)) ? (mt || typeof ie.UNSAFE_componentWillMount != "function" && typeof ie.componentWillMount != "function" || (typeof ie.componentWillMount == "function" && ie.componentWillMount(), typeof ie.UNSAFE_componentWillMount == "function" && ie.UNSAFE_componentWillMount()), typeof ie.componentDidMount == "function" && (p.flags |= 4194308)) : (typeof ie.componentDidMount == "function" && (p.flags |= 4194308), p.memoizedProps = I, p.memoizedState = Ce), ie.props = I, ie.state = Ce, ie.context = Ke, I = we) : (typeof ie.componentDidMount == "function" && (p.flags |= 4194308), I = !1);
            } else {
                ie = p.stateNode, ci(d, p), we = p.memoizedProps, Ke = p.type === p.elementType ? we : ia(p.type, we), ie.props = Ke, mt = p.pendingProps, ut = ie.context, Ce = S.contextType, typeof Ce == "object" && Ce !== null ? Ce = Io(Ce) : (Ce = gs(S) ? Wl : is.current, Ce = ju(p, Ce));
                var Ot = S.getDerivedStateFromProps;
                (ft = typeof Ot == "function" || typeof ie.getSnapshotBeforeUpdate == "function") || typeof ie.UNSAFE_componentWillReceiveProps != "function" && typeof ie.componentWillReceiveProps != "function" || (we !== mt || ut !== Ce) && y(p, ie, I, Ce), pr = !1, ut = p.memoizedState, ie.state = ut, Qr(p, I, ie, F);
                var Ht = p.memoizedState;
                we !== mt || ut !== Ht || Ps.current || pr ? (typeof Ot == "function" && (pp(p, S, Ot, I), Ht = p.memoizedState), (Ke = pr || A_(p, S, Ke, I, ut, Ht, Ce) || !1) ? (ft || typeof ie.UNSAFE_componentWillUpdate != "function" && typeof ie.componentWillUpdate != "function" || (typeof ie.componentWillUpdate == "function" && ie.componentWillUpdate(I, Ht, Ce), typeof ie.UNSAFE_componentWillUpdate == "function" && ie.UNSAFE_componentWillUpdate(I, Ht, Ce)), typeof ie.componentDidUpdate == "function" && (p.flags |= 4), typeof ie.getSnapshotBeforeUpdate == "function" && (p.flags |= 1024)) : (typeof ie.componentDidUpdate != "function" || we === d.memoizedProps && ut === d.memoizedState || (p.flags |= 4), typeof ie.getSnapshotBeforeUpdate != "function" || we === d.memoizedProps && ut === d.memoizedState || (p.flags |= 1024), p.memoizedProps = I, p.memoizedState = Ht), ie.props = I, ie.state = Ht, ie.context = Ce, I = Ke) : (typeof ie.componentDidUpdate != "function" || we === d.memoizedProps && ut === d.memoizedState || (p.flags |= 4), typeof ie.getSnapshotBeforeUpdate != "function" || we === d.memoizedProps && ut === d.memoizedState || (p.flags |= 1024), I = !1);
            }
            return Tn(d, p, S, I, V, F);
        }
        function Tn(d, p, S, I, F, V) {
            Qe(d, p);
            var ie = (p.flags & 128) !== 0;
            if (!I && !ie) return F && vv(p, S, !1), Ju(d, p, V);
            I = p.stateNode, rn.current = p;
            var we = ie && typeof S.getDerivedStateFromError != "function" ? null : I.render();
            return p.flags |= 1, d !== null && ie ? (p.child = Vu(p, d.child, null, V), p.child = Vu(p, null, we, V)) : Rt(d, p, we, V), p.memoizedState = I.state, F && vv(p, S, !0), p.child;
        }
        function bn(d) {
            var p = d.stateNode;
            p.pendingContext ? yv(d, p.pendingContext, p.pendingContext !== p.context) : p.context && yv(d, p.context, !1), ap(d, p.containerInfo);
        }
        function Qn(d, p, S, I, F) {
            return jc(), hf(F), p.flags |= 256, Rt(d, p, S, I), p.child;
        }
        var mi = {
            dehydrated: null,
            treeContext: null,
            retryLane: 0
        };
        function Zn(d) {
            return {
                baseLanes: d,
                cachePool: null,
                transitions: null
            };
        }
        function Jl(d, p, S) {
            var I = p.pendingProps, F = Ar.current, V = !1, ie = (p.flags & 128) !== 0, we;
            if ((we = ie) || (we = d !== null && d.memoizedState === null ? !1 : (F & 2) !== 0), we ? (V = !0, p.flags &= -129) : (d === null || d.memoizedState !== null) && (F |= 1), xr(Ar, F & 1), d === null) return Cg(p), d = p.memoizedState, d !== null && (d = d.dehydrated, d !== null) ? (p.mode & 1 ? d.data === "$!" ? p.lanes = 8 : p.lanes = 1073741824 : p.lanes = 1, null) : (ie = I.children, d = I.fallback, V ? (I = p.mode, V = p.child, ie = {
                mode: "hidden",
                children: ie
            }, !(I & 1) && V !== null ? (V.childLanes = 0, V.pendingProps = ie) : V = q_(ie, I, 0, null), d = xp(d, I, S, null), V.return = p, d.return = p, V.sibling = d, p.child = V, p.child.memoizedState = Zn(S), p.memoizedState = mi, d) : Dv(p, ie));
            if (F = d.memoizedState, F !== null && (we = F.dehydrated, we !== null)) return E$(d, p, ie, I, we, F, S);
            if (V) {
                V = I.fallback, ie = p.mode, F = d.child, we = F.sibling;
                var Ce = {
                    mode: "hidden",
                    children: I.children
                };
                return !(ie & 1) && p.child !== F ? (I = p.child, I.childLanes = 0, I.pendingProps = Ce, p.deletions = null) : (I = Ef(F, Ce), I.subtreeFlags = F.subtreeFlags & 14680064), we !== null ? V = Ef(we, V) : (V = xp(V, ie, S, null), V.flags |= 2), V.return = p, I.return = p, I.sibling = V, p.child = I, I = V, V = p.child, ie = d.child.memoizedState, ie = ie === null ? Zn(S) : {
                    baseLanes: ie.baseLanes | S,
                    cachePool: null,
                    transitions: ie.transitions
                }, V.memoizedState = ie, V.childLanes = d.childLanes & ~S, p.memoizedState = mi, I;
            }
            return V = d.child, d = V.sibling, I = Ef(V, {
                mode: "visible",
                children: I.children
            }), !(p.mode & 1) && (I.lanes = S), I.return = p, I.sibling = null, d !== null && (S = p.deletions, S === null ? (p.deletions = [
                d
            ], p.flags |= 16) : S.push(d)), p.child = I, p.memoizedState = null, I;
        }
        function Dv(d, p) {
            return p = q_({
                mode: "visible",
                children: p
            }, d.mode, 0, null), p.return = d, d.child = p;
        }
        function N_(d, p, S, I) {
            return I !== null && hf(I), Vu(p, d.child, null, S), d = Dv(p, p.pendingProps.children), d.flags |= 2, p.memoizedState = null, d;
        }
        function E$(d, p, S, I, F, V, ie) {
            if (S) return p.flags & 256 ? (p.flags &= -257, I = z(Error(n(422))), N_(d, p, ie, I)) : p.memoizedState !== null ? (p.child = d.child, p.flags |= 128, null) : (V = I.fallback, F = p.mode, I = q_({
                mode: "visible",
                children: I.children
            }, F, 0, null), V = xp(V, F, ie, null), V.flags |= 2, I.return = p, V.return = p, I.sibling = V, p.child = I, p.mode & 1 && Vu(p, d.child, null, ie), p.child.memoizedState = Zn(ie), p.memoizedState = mi, V);
            if (!(p.mode & 1)) return N_(d, p, ie, null);
            if (F.data === "$!") {
                if (I = F.nextSibling && F.nextSibling.dataset, I) var we = I.dgst;
                return I = we, V = Error(n(419)), I = z(V, I, void 0), N_(d, p, ie, I);
            }
            if (we = (ie & d.childLanes) !== 0, Pn || we) {
                if (I = xs, I !== null) {
                    switch(ie & -ie){
                        case 4:
                            F = 2;
                            break;
                        case 16:
                            F = 8;
                            break;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            F = 32;
                            break;
                        case 536870912:
                            F = 268435456;
                            break;
                        default:
                            F = 0;
                    }
                    F = F & (I.suspendedLanes | ie) ? 0 : F, F !== 0 && F !== V.retryLane && (V.retryLane = F, Oa(d, F), tc(I, d, F, -1));
                }
                return mC(), I = z(Error(n(421))), N_(d, p, ie, I);
            }
            return F.data === "$?" ? (p.flags |= 128, p.child = d.child, p = F$.bind(null, d), F._reactRetry = p, null) : (d = V.treeContext, Os = Ul(F.nextSibling), ss = p, Ir = !0, ra = null, d !== null && (ks[Hi++] = bt, ks[Hi++] = na, ks[Hi++] = zu, bt = d.id, na = d.overflow, zu = p), p = Dv(p, I.children), p.flags |= 4096, p);
        }
        function AO(d, p, S) {
            d.lanes |= p;
            var I = d.alternate;
            I !== null && (I.lanes |= p), sp(d.return, p, S);
        }
        function eC(d, p, S, I, F) {
            var V = d.memoizedState;
            V === null ? d.memoizedState = {
                isBackwards: p,
                rendering: null,
                renderingStartTime: 0,
                last: I,
                tail: S,
                tailMode: F
            } : (V.isBackwards = p, V.rendering = null, V.renderingStartTime = 0, V.last = I, V.tail = S, V.tailMode = F);
        }
        function NO(d, p, S) {
            var I = p.pendingProps, F = I.revealOrder, V = I.tail;
            if (Rt(d, p, I.children, S), I = Ar.current, I & 2) I = I & 1 | 2, p.flags |= 128;
            else {
                if (d !== null && d.flags & 128) e: for(d = p.child; d !== null;){
                    if (d.tag === 13) d.memoizedState !== null && AO(d, S, p);
                    else if (d.tag === 19) AO(d, S, p);
                    else if (d.child !== null) {
                        d.child.return = d, d = d.child;
                        continue;
                    }
                    if (d === p) break e;
                    for(; d.sibling === null;){
                        if (d.return === null || d.return === p) break e;
                        d = d.return;
                    }
                    d.sibling.return = d.return, d = d.sibling;
                }
                I &= 1;
            }
            if (xr(Ar, I), !(p.mode & 1)) p.memoizedState = null;
            else switch(F){
                case "forwards":
                    for(S = p.child, F = null; S !== null;)d = S.alternate, d !== null && Da(d) === null && (F = S), S = S.sibling;
                    S = F, S === null ? (F = p.child, p.child = null) : (F = S.sibling, S.sibling = null), eC(p, !1, F, S, V);
                    break;
                case "backwards":
                    for(S = null, F = p.child, p.child = null; F !== null;){
                        if (d = F.alternate, d !== null && Da(d) === null) {
                            p.child = F;
                            break;
                        }
                        d = F.sibling, F.sibling = S, S = F, F = d;
                    }
                    eC(p, !0, S, null, V);
                    break;
                case "together":
                    eC(p, !1, null, null, void 0);
                    break;
                default:
                    p.memoizedState = null;
            }
            return p.child;
        }
        function P_(d, p) {
            !(p.mode & 1) && d !== null && (d.alternate = null, p.alternate = null, p.flags |= 2);
        }
        function Ju(d, p, S) {
            if (d !== null && (p.dependencies = d.dependencies), mp |= p.lanes, !(S & p.childLanes)) return null;
            if (d !== null && p.child !== d.child) throw Error(n(153));
            if (p.child !== null) {
                for(d = p.child, S = Ef(d, d.pendingProps), p.child = S, S.return = p; d.sibling !== null;)d = d.sibling, S = S.sibling = Ef(d, d.pendingProps), S.return = p;
                S.sibling = null;
            }
            return p.child;
        }
        function M$(d, p, S) {
            switch(p.tag){
                case 3:
                    bn(p), jc();
                    break;
                case 5:
                    Xu(p);
                    break;
                case 1:
                    gs(p.type) && Bu(p);
                    break;
                case 4:
                    ap(p, p.stateNode.containerInfo);
                    break;
                case 10:
                    var I = p.type._context, F = p.memoizedProps.value;
                    xr(Wu, I._currentValue), I._currentValue = F;
                    break;
                case 13:
                    if (I = p.memoizedState, I !== null) return I.dehydrated !== null ? (xr(Ar, Ar.current & 1), p.flags |= 128, null) : S & p.child.childLanes ? Jl(d, p, S) : (xr(Ar, Ar.current & 1), d = Ju(d, p, S), d !== null ? d.sibling : null);
                    xr(Ar, Ar.current & 1);
                    break;
                case 19:
                    if (I = (S & p.childLanes) !== 0, d.flags & 128) {
                        if (I) return NO(d, p, S);
                        p.flags |= 128;
                    }
                    if (F = p.memoizedState, F !== null && (F.rendering = null, F.tail = null, F.lastEffect = null), xr(Ar, Ar.current), I) break;
                    return null;
                case 22:
                case 23:
                    return p.lanes = 0, Le(d, p, S);
            }
            return Ju(d, p, S);
        }
        var PO, tC, kO, OO;
        PO = function(d, p) {
            for(var S = p.child; S !== null;){
                if (S.tag === 5 || S.tag === 6) d.appendChild(S.stateNode);
                else if (S.tag !== 4 && S.child !== null) {
                    S.child.return = S, S = S.child;
                    continue;
                }
                if (S === p) break;
                for(; S.sibling === null;){
                    if (S.return === null || S.return === p) return;
                    S = S.return;
                }
                S.sibling.return = S.return, S = S.sibling;
            }
        }, tC = function() {}, kO = function(d, p, S, I) {
            var F = d.memoizedProps;
            if (F !== I) {
                d = p.stateNode, pi(Ao.current);
                var V = null;
                switch(S){
                    case "input":
                        F = oe(d, F), I = oe(d, I), V = [];
                        break;
                    case "select":
                        F = $({}, F, {
                            value: void 0
                        }), I = $({}, I, {
                            value: void 0
                        }), V = [];
                        break;
                    case "textarea":
                        F = G(d, F), I = G(d, I), V = [];
                        break;
                    default:
                        typeof F.onClick != "function" && typeof I.onClick == "function" && (d.onclick = Yh);
                }
                Se(S, I);
                var ie;
                S = null;
                for(Ke in F)if (!I.hasOwnProperty(Ke) && F.hasOwnProperty(Ke) && F[Ke] != null) if (Ke === "style") {
                    var we = F[Ke];
                    for(ie in we)we.hasOwnProperty(ie) && (S || (S = {}), S[ie] = "");
                } else Ke !== "dangerouslySetInnerHTML" && Ke !== "children" && Ke !== "suppressContentEditableWarning" && Ke !== "suppressHydrationWarning" && Ke !== "autoFocus" && (i.hasOwnProperty(Ke) ? V || (V = []) : (V = V || []).push(Ke, null));
                for(Ke in I){
                    var Ce = I[Ke];
                    if (we = F?.[Ke], I.hasOwnProperty(Ke) && Ce !== we && (Ce != null || we != null)) if (Ke === "style") if (we) {
                        for(ie in we)!we.hasOwnProperty(ie) || Ce && Ce.hasOwnProperty(ie) || (S || (S = {}), S[ie] = "");
                        for(ie in Ce)Ce.hasOwnProperty(ie) && we[ie] !== Ce[ie] && (S || (S = {}), S[ie] = Ce[ie]);
                    } else S || (V || (V = []), V.push(Ke, S)), S = Ce;
                    else Ke === "dangerouslySetInnerHTML" ? (Ce = Ce ? Ce.__html : void 0, we = we ? we.__html : void 0, Ce != null && we !== Ce && (V = V || []).push(Ke, Ce)) : Ke === "children" ? typeof Ce != "string" && typeof Ce != "number" || (V = V || []).push(Ke, "" + Ce) : Ke !== "suppressContentEditableWarning" && Ke !== "suppressHydrationWarning" && (i.hasOwnProperty(Ke) ? (Ce != null && Ke === "onScroll" && wr("scroll", d), V || we === Ce || (V = [])) : (V = V || []).push(Ke, Ce));
                }
                S && (V = V || []).push("style", S);
                var Ke = V;
                (p.updateQueue = Ke) && (p.flags |= 4);
            }
        }, OO = function(d, p, S, I) {
            S !== I && (p.flags |= 4);
        };
        function Lv(d, p) {
            if (!Ir) switch(d.tailMode){
                case "hidden":
                    p = d.tail;
                    for(var S = null; p !== null;)p.alternate !== null && (S = p), p = p.sibling;
                    S === null ? d.tail = null : S.sibling = null;
                    break;
                case "collapsed":
                    S = d.tail;
                    for(var I = null; S !== null;)S.alternate !== null && (I = S), S = S.sibling;
                    I === null ? p || d.tail === null ? d.tail = null : d.tail.sibling = null : I.sibling = null;
            }
        }
        function Qs(d) {
            var p = d.alternate !== null && d.alternate.child === d.child, S = 0, I = 0;
            if (p) for(var F = d.child; F !== null;)S |= F.lanes | F.childLanes, I |= F.subtreeFlags & 14680064, I |= F.flags & 14680064, F.return = d, F = F.sibling;
            else for(F = d.child; F !== null;)S |= F.lanes | F.childLanes, I |= F.subtreeFlags, I |= F.flags, F.return = d, F = F.sibling;
            return d.subtreeFlags |= I, d.childLanes = S, p;
        }
        function T$(d, p, S) {
            var I = p.pendingProps;
            switch(Hl(p), p.tag){
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return Qs(p), null;
                case 1:
                    return gs(p.type) && Zh(), Qs(p), null;
                case 3:
                    return I = p.stateNode, Uc(), _r(Ps), _r(is), fl(), I.pendingContext && (I.context = I.pendingContext, I.pendingContext = null), (d === null || d.child === null) && (ff(p) ? p.flags |= 4 : d === null || d.memoizedState.isDehydrated && !(p.flags & 256) || (p.flags |= 1024, ra !== null && (fC(ra), ra = null))), tC(d, p), Qs(p), null;
                case 5:
                    gf(p);
                    var F = pi(Xl.current);
                    if (S = p.type, d !== null && p.stateNode != null) kO(d, p, S, I, F), d.ref !== p.ref && (p.flags |= 512, p.flags |= 2097152);
                    else {
                        if (!I) {
                            if (p.stateNode === null) throw Error(n(166));
                            return Qs(p), null;
                        }
                        if (d = pi(Ao.current), ff(p)) {
                            I = p.stateNode, S = p.type;
                            var V = p.memoizedProps;
                            switch(I[Ai] = p, I[df] = V, d = (p.mode & 1) !== 0, S){
                                case "dialog":
                                    wr("cancel", I), wr("close", I);
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    wr("load", I);
                                    break;
                                case "video":
                                case "audio":
                                    for(F = 0; F < Lc.length; F++)wr(Lc[F], I);
                                    break;
                                case "source":
                                    wr("error", I);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    wr("error", I), wr("load", I);
                                    break;
                                case "details":
                                    wr("toggle", I);
                                    break;
                                case "input":
                                    Ye(I, V), wr("invalid", I);
                                    break;
                                case "select":
                                    I._wrapperState = {
                                        wasMultiple: !!V.multiple
                                    }, wr("invalid", I);
                                    break;
                                case "textarea":
                                    he(I, V), wr("invalid", I);
                            }
                            Se(S, V), F = null;
                            for(var ie in V)if (V.hasOwnProperty(ie)) {
                                var we = V[ie];
                                ie === "children" ? typeof we == "string" ? I.textContent !== we && (V.suppressHydrationWarning !== !0 && Kh(I.textContent, we, d), F = [
                                    "children",
                                    we
                                ]) : typeof we == "number" && I.textContent !== "" + we && (V.suppressHydrationWarning !== !0 && Kh(I.textContent, we, d), F = [
                                    "children",
                                    "" + we
                                ]) : i.hasOwnProperty(ie) && we != null && ie === "onScroll" && wr("scroll", I);
                            }
                            switch(S){
                                case "input":
                                    Fe(I), de(I, V, !0);
                                    break;
                                case "textarea":
                                    Fe(I), me(I);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    typeof V.onClick == "function" && (I.onclick = Yh);
                            }
                            I = F, p.updateQueue = I, I !== null && (p.flags |= 4);
                        } else {
                            ie = F.nodeType === 9 ? F : F.ownerDocument, d === "http://www.w3.org/1999/xhtml" && (d = Ie(S)), d === "http://www.w3.org/1999/xhtml" ? S === "script" ? (d = ie.createElement("div"), d.innerHTML = "<script><\/script>", d = d.removeChild(d.firstChild)) : typeof I.is == "string" ? d = ie.createElement(S, {
                                is: I.is
                            }) : (d = ie.createElement(S), S === "select" && (ie = d, I.multiple ? ie.multiple = !0 : I.size && (ie.size = I.size))) : d = ie.createElementNS(d, S), d[Ai] = p, d[df] = I, PO(d, p, !1, !1), p.stateNode = d;
                            e: {
                                switch(ie = $e(S, I), S){
                                    case "dialog":
                                        wr("cancel", d), wr("close", d), F = I;
                                        break;
                                    case "iframe":
                                    case "object":
                                    case "embed":
                                        wr("load", d), F = I;
                                        break;
                                    case "video":
                                    case "audio":
                                        for(F = 0; F < Lc.length; F++)wr(Lc[F], d);
                                        F = I;
                                        break;
                                    case "source":
                                        wr("error", d), F = I;
                                        break;
                                    case "img":
                                    case "image":
                                    case "link":
                                        wr("error", d), wr("load", d), F = I;
                                        break;
                                    case "details":
                                        wr("toggle", d), F = I;
                                        break;
                                    case "input":
                                        Ye(d, I), F = oe(d, I), wr("invalid", d);
                                        break;
                                    case "option":
                                        F = I;
                                        break;
                                    case "select":
                                        d._wrapperState = {
                                            wasMultiple: !!I.multiple
                                        }, F = $({}, I, {
                                            value: void 0
                                        }), wr("invalid", d);
                                        break;
                                    case "textarea":
                                        he(d, I), F = G(d, I), wr("invalid", d);
                                        break;
                                    default:
                                        F = I;
                                }
                                Se(S, F), we = F;
                                for(V in we)if (we.hasOwnProperty(V)) {
                                    var Ce = we[V];
                                    V === "style" ? ct(d, Ce) : V === "dangerouslySetInnerHTML" ? (Ce = Ce ? Ce.__html : void 0, Ce != null && at(d, Ce)) : V === "children" ? typeof Ce == "string" ? (S !== "textarea" || Ce !== "") && Je(d, Ce) : typeof Ce == "number" && Je(d, "" + Ce) : V !== "suppressContentEditableWarning" && V !== "suppressHydrationWarning" && V !== "autoFocus" && (i.hasOwnProperty(V) ? Ce != null && V === "onScroll" && wr("scroll", d) : Ce != null && E(d, V, Ce, ie));
                                }
                                switch(S){
                                    case "input":
                                        Fe(d), de(d, I, !1);
                                        break;
                                    case "textarea":
                                        Fe(d), me(d);
                                        break;
                                    case "option":
                                        I.value != null && d.setAttribute("value", "" + _e(I.value));
                                        break;
                                    case "select":
                                        d.multiple = !!I.multiple, V = I.value, V != null ? X(d, !!I.multiple, V, !1) : I.defaultValue != null && X(d, !!I.multiple, I.defaultValue, !0);
                                        break;
                                    default:
                                        typeof F.onClick == "function" && (d.onclick = Yh);
                                }
                                switch(S){
                                    case "button":
                                    case "input":
                                    case "select":
                                    case "textarea":
                                        I = !!I.autoFocus;
                                        break e;
                                    case "img":
                                        I = !0;
                                        break e;
                                    default:
                                        I = !1;
                                }
                            }
                            I && (p.flags |= 4);
                        }
                        p.ref !== null && (p.flags |= 512, p.flags |= 2097152);
                    }
                    return Qs(p), null;
                case 6:
                    if (d && p.stateNode != null) OO(d, p, d.memoizedProps, I);
                    else {
                        if (typeof I != "string" && p.stateNode === null) throw Error(n(166));
                        if (S = pi(Xl.current), pi(Ao.current), ff(p)) {
                            if (I = p.stateNode, S = p.memoizedProps, I[Ai] = p, (V = I.nodeValue !== S) && (d = ss, d !== null)) switch(d.tag){
                                case 3:
                                    Kh(I.nodeValue, S, (d.mode & 1) !== 0);
                                    break;
                                case 5:
                                    d.memoizedProps.suppressHydrationWarning !== !0 && Kh(I.nodeValue, S, (d.mode & 1) !== 0);
                            }
                            V && (p.flags |= 4);
                        } else I = (S.nodeType === 9 ? S : S.ownerDocument).createTextNode(I), I[Ai] = p, p.stateNode = I;
                    }
                    return Qs(p), null;
                case 13:
                    if (_r(Ar), I = p.memoizedState, d === null || d.memoizedState !== null && d.memoizedState.dehydrated !== null) {
                        if (Ir && Os !== null && p.mode & 1 && !(p.flags & 128)) Sv(), jc(), p.flags |= 98560, V = !1;
                        else if (V = ff(p), I !== null && I.dehydrated !== null) {
                            if (d === null) {
                                if (!V) throw Error(n(318));
                                if (V = p.memoizedState, V = V !== null ? V.dehydrated : null, !V) throw Error(n(317));
                                V[Ai] = p;
                            } else jc(), !(p.flags & 128) && (p.memoizedState = null), p.flags |= 4;
                            Qs(p), V = !1;
                        } else ra !== null && (fC(ra), ra = null), V = !0;
                        if (!V) return p.flags & 65536 ? p : null;
                    }
                    return p.flags & 128 ? (p.lanes = S, p) : (I = I !== null, I !== (d !== null && d.memoizedState !== null) && I && (p.child.flags |= 8192, p.mode & 1 && (d === null || Ar.current & 1 ? cs === 0 && (cs = 3) : mC())), p.updateQueue !== null && (p.flags |= 4), Qs(p), null);
                case 4:
                    return Uc(), tC(d, p), d === null && lf(p.stateNode.containerInfo), Qs(p), null;
                case 10:
                    return ip(p.type._context), Qs(p), null;
                case 17:
                    return gs(p.type) && Zh(), Qs(p), null;
                case 19:
                    if (_r(Ar), V = p.memoizedState, V === null) return Qs(p), null;
                    if (I = (p.flags & 128) !== 0, ie = V.rendering, ie === null) if (I) Lv(V, !1);
                    else {
                        if (cs !== 0 || d !== null && d.flags & 128) for(d = p.child; d !== null;){
                            if (ie = Da(d), ie !== null) {
                                for(p.flags |= 128, Lv(V, !1), I = ie.updateQueue, I !== null && (p.updateQueue = I, p.flags |= 4), p.subtreeFlags = 0, I = S, S = p.child; S !== null;)V = S, d = I, V.flags &= 14680066, ie = V.alternate, ie === null ? (V.childLanes = 0, V.lanes = d, V.child = null, V.subtreeFlags = 0, V.memoizedProps = null, V.memoizedState = null, V.updateQueue = null, V.dependencies = null, V.stateNode = null) : (V.childLanes = ie.childLanes, V.lanes = ie.lanes, V.child = ie.child, V.subtreeFlags = 0, V.deletions = null, V.memoizedProps = ie.memoizedProps, V.memoizedState = ie.memoizedState, V.updateQueue = ie.updateQueue, V.type = ie.type, d = ie.dependencies, V.dependencies = d === null ? null : {
                                    lanes: d.lanes,
                                    firstContext: d.firstContext
                                }), S = S.sibling;
                                return xr(Ar, Ar.current & 1 | 2), p.child;
                            }
                            d = d.sibling;
                        }
                        V.tail !== null && Ue() > Bg && (p.flags |= 128, I = !0, Lv(V, !1), p.lanes = 4194304);
                    }
                    else {
                        if (!I) if (d = Da(ie), d !== null) {
                            if (p.flags |= 128, I = !0, S = d.updateQueue, S !== null && (p.updateQueue = S, p.flags |= 4), Lv(V, !0), V.tail === null && V.tailMode === "hidden" && !ie.alternate && !Ir) return Qs(p), null;
                        } else 2 * Ue() - V.renderingStartTime > Bg && S !== 1073741824 && (p.flags |= 128, I = !0, Lv(V, !1), p.lanes = 4194304);
                        V.isBackwards ? (ie.sibling = p.child, p.child = ie) : (S = V.last, S !== null ? S.sibling = ie : p.child = ie, V.last = ie);
                    }
                    return V.tail !== null ? (p = V.tail, V.rendering = p, V.tail = p.sibling, V.renderingStartTime = Ue(), p.sibling = null, S = Ar.current, xr(Ar, I ? S & 1 | 2 : S & 1), p) : (Qs(p), null);
                case 22:
                case 23:
                    return pC(), I = p.memoizedState !== null, d !== null && d.memoizedState !== null !== I && (p.flags |= 8192), I && p.mode & 1 ? ja & 1073741824 && (Qs(p), p.subtreeFlags & 6 && (p.flags |= 8192)) : Qs(p), null;
                case 24:
                    return null;
                case 25:
                    return null;
            }
            throw Error(n(156, p.tag));
        }
        function C$(d, p) {
            switch(Hl(p), p.tag){
                case 1:
                    return gs(p.type) && Zh(), d = p.flags, d & 65536 ? (p.flags = d & -65537 | 128, p) : null;
                case 3:
                    return Uc(), _r(Ps), _r(is), fl(), d = p.flags, d & 65536 && !(d & 128) ? (p.flags = d & -65537 | 128, p) : null;
                case 5:
                    return gf(p), null;
                case 13:
                    if (_r(Ar), d = p.memoizedState, d !== null && d.dehydrated !== null) {
                        if (p.alternate === null) throw Error(n(340));
                        jc();
                    }
                    return d = p.flags, d & 65536 ? (p.flags = d & -65537 | 128, p) : null;
                case 19:
                    return _r(Ar), null;
                case 4:
                    return Uc(), null;
                case 10:
                    return ip(p.type._context), null;
                case 22:
                case 23:
                    return pC(), null;
                case 24:
                    return null;
                default:
                    return null;
            }
        }
        var k_ = !1, eo = !1, R$ = typeof WeakSet == "function" ? WeakSet : Set, Wt = null;
        function Fg(d, p) {
            var S = d.ref;
            if (S !== null) if (typeof S == "function") try {
                S(null);
            } catch (I) {
                gi(d, p, I);
            }
            else S.current = null;
        }
        function nC(d, p, S) {
            try {
                S();
            } catch (I) {
                gi(d, p, I);
            }
        }
        var DO = !1;
        function I$(d, p) {
            if (uf = Yo, d = Xr(), zi(d)) {
                if ("selectionStart" in d) var S = {
                    start: d.selectionStart,
                    end: d.selectionEnd
                };
                else e: {
                    S = (S = d.ownerDocument) && S.defaultView || window;
                    var I = S.getSelection && S.getSelection();
                    if (I && I.rangeCount !== 0) {
                        S = I.anchorNode;
                        var F = I.anchorOffset, V = I.focusNode;
                        I = I.focusOffset;
                        try {
                            S.nodeType, V.nodeType;
                        } catch  {
                            S = null;
                            break e;
                        }
                        var ie = 0, we = -1, Ce = -1, Ke = 0, ft = 0, mt = d, ut = null;
                        t: for(;;){
                            for(var Ot; mt !== S || F !== 0 && mt.nodeType !== 3 || (we = ie + F), mt !== V || I !== 0 && mt.nodeType !== 3 || (Ce = ie + I), mt.nodeType === 3 && (ie += mt.nodeValue.length), (Ot = mt.firstChild) !== null;)ut = mt, mt = Ot;
                            for(;;){
                                if (mt === d) break t;
                                if (ut === S && ++Ke === F && (we = ie), ut === V && ++ft === I && (Ce = ie), (Ot = mt.nextSibling) !== null) break;
                                mt = ut, ut = mt.parentNode;
                            }
                            mt = Ot;
                        }
                        S = we === -1 || Ce === -1 ? null : {
                            start: we,
                            end: Ce
                        };
                    } else S = null;
                }
                S = S || {
                    start: 0,
                    end: 0
                };
            } else S = null;
            for(dv = {
                focusedElem: d,
                selectionRange: S
            }, Yo = !1, Wt = p; Wt !== null;)if (p = Wt, d = p.child, (p.subtreeFlags & 1028) !== 0 && d !== null) d.return = p, Wt = d;
            else for(; Wt !== null;){
                p = Wt;
                try {
                    var Ht = p.alternate;
                    if (p.flags & 1024) switch(p.tag){
                        case 0:
                        case 11:
                        case 15:
                            break;
                        case 1:
                            if (Ht !== null) {
                                var Xt = Ht.memoizedProps, Ni = Ht.memoizedState, Ve = p.stateNode, Ne = Ve.getSnapshotBeforeUpdate(p.elementType === p.type ? Xt : ia(p.type, Xt), Ni);
                                Ve.__reactInternalSnapshotBeforeUpdate = Ne;
                            }
                            break;
                        case 3:
                            var qe = p.stateNode.containerInfo;
                            qe.nodeType === 1 ? qe.textContent = "" : qe.nodeType === 9 && qe.documentElement && qe.removeChild(qe.documentElement);
                            break;
                        case 5:
                        case 6:
                        case 4:
                        case 17:
                            break;
                        default:
                            throw Error(n(163));
                    }
                } catch (xt) {
                    gi(p, p.return, xt);
                }
                if (d = p.sibling, d !== null) {
                    d.return = p.return, Wt = d;
                    break;
                }
                Wt = p.return;
            }
            return Ht = DO, DO = !1, Ht;
        }
        function Fv(d, p, S) {
            var I = p.updateQueue;
            if (I = I !== null ? I.lastEffect : null, I !== null) {
                var F = I = I.next;
                do {
                    if ((F.tag & d) === d) {
                        var V = F.destroy;
                        F.destroy = void 0, V !== void 0 && nC(p, S, V);
                    }
                    F = F.next;
                }while (F !== I);
            }
        }
        function O_(d, p) {
            if (p = p.updateQueue, p = p !== null ? p.lastEffect : null, p !== null) {
                var S = p = p.next;
                do {
                    if ((S.tag & d) === d) {
                        var I = S.create;
                        S.destroy = I();
                    }
                    S = S.next;
                }while (S !== p);
            }
        }
        function rC(d) {
            var p = d.ref;
            if (p !== null) {
                var S = d.stateNode;
                switch(d.tag){
                    case 5:
                        d = S;
                        break;
                    default:
                        d = S;
                }
                typeof p == "function" ? p(d) : p.current = d;
            }
        }
        function LO(d) {
            var p = d.alternate;
            p !== null && (d.alternate = null, LO(p)), d.child = null, d.deletions = null, d.sibling = null, d.tag === 5 && (p = d.stateNode, p !== null && (delete p[Ai], delete p[df], delete p[Fu], delete p[bg], delete p[wg])), d.stateNode = null, d.return = null, d.dependencies = null, d.memoizedProps = null, d.memoizedState = null, d.pendingProps = null, d.stateNode = null, d.updateQueue = null;
        }
        function FO(d) {
            return d.tag === 5 || d.tag === 3 || d.tag === 4;
        }
        function jO(d) {
            e: for(;;){
                for(; d.sibling === null;){
                    if (d.return === null || FO(d.return)) return null;
                    d = d.return;
                }
                for(d.sibling.return = d.return, d = d.sibling; d.tag !== 5 && d.tag !== 6 && d.tag !== 18;){
                    if (d.flags & 2 || d.child === null || d.tag === 4) continue e;
                    d.child.return = d, d = d.child;
                }
                if (!(d.flags & 2)) return d.stateNode;
            }
        }
        function iC(d, p, S) {
            var I = d.tag;
            if (I === 5 || I === 6) d = d.stateNode, p ? S.nodeType === 8 ? S.parentNode.insertBefore(d, p) : S.insertBefore(d, p) : (S.nodeType === 8 ? (p = S.parentNode, p.insertBefore(d, S)) : (p = S, p.appendChild(d)), S = S._reactRootContainer, S != null || p.onclick !== null || (p.onclick = Yh));
            else if (I !== 4 && (d = d.child, d !== null)) for(iC(d, p, S), d = d.sibling; d !== null;)iC(d, p, S), d = d.sibling;
        }
        function sC(d, p, S) {
            var I = d.tag;
            if (I === 5 || I === 6) d = d.stateNode, p ? S.insertBefore(d, p) : S.appendChild(d);
            else if (I !== 4 && (d = d.child, d !== null)) for(sC(d, p, S), d = d.sibling; d !== null;)sC(d, p, S), d = d.sibling;
        }
        var Ls = null, Ql = !1;
        function xf(d, p, S) {
            for(S = S.child; S !== null;)BO(d, p, S), S = S.sibling;
        }
        function BO(d, p, S) {
            if (yt && typeof yt.onCommitFiberUnmount == "function") try {
                yt.onCommitFiberUnmount(Zt, S);
            } catch  {}
            switch(S.tag){
                case 5:
                    eo || Fg(S, p);
                case 6:
                    var I = Ls, F = Ql;
                    Ls = null, xf(d, p, S), Ls = I, Ql = F, Ls !== null && (Ql ? (d = Ls, S = S.stateNode, d.nodeType === 8 ? d.parentNode.removeChild(S) : d.removeChild(S)) : Ls.removeChild(S.stateNode));
                    break;
                case 18:
                    Ls !== null && (Ql ? (d = Ls, S = S.stateNode, d.nodeType === 8 ? xg(d.parentNode, S) : d.nodeType === 1 && xg(d, S), jh(d)) : xg(Ls, S.stateNode));
                    break;
                case 4:
                    I = Ls, F = Ql, Ls = S.stateNode.containerInfo, Ql = !0, xf(d, p, S), Ls = I, Ql = F;
                    break;
                case 0:
                case 11:
                case 14:
                case 15:
                    if (!eo && (I = S.updateQueue, I !== null && (I = I.lastEffect, I !== null))) {
                        F = I = I.next;
                        do {
                            var V = F, ie = V.destroy;
                            V = V.tag, ie !== void 0 && (V & 2 || V & 4) && nC(S, p, ie), F = F.next;
                        }while (F !== I);
                    }
                    xf(d, p, S);
                    break;
                case 1:
                    if (!eo && (Fg(S, p), I = S.stateNode, typeof I.componentWillUnmount == "function")) try {
                        I.props = S.memoizedProps, I.state = S.memoizedState, I.componentWillUnmount();
                    } catch (we) {
                        gi(S, p, we);
                    }
                    xf(d, p, S);
                    break;
                case 21:
                    xf(d, p, S);
                    break;
                case 22:
                    S.mode & 1 ? (eo = (I = eo) || S.memoizedState !== null, xf(d, p, S), eo = I) : xf(d, p, S);
                    break;
                default:
                    xf(d, p, S);
            }
        }
        function UO(d) {
            var p = d.updateQueue;
            if (p !== null) {
                d.updateQueue = null;
                var S = d.stateNode;
                S === null && (S = d.stateNode = new R$), p.forEach(function(I) {
                    var F = j$.bind(null, d, I);
                    S.has(I) || (S.add(I), I.then(F, F));
                });
            }
        }
        function ec(d, p) {
            var S = p.deletions;
            if (S !== null) for(var I = 0; I < S.length; I++){
                var F = S[I];
                try {
                    var V = d, ie = p, we = ie;
                    e: for(; we !== null;){
                        switch(we.tag){
                            case 5:
                                Ls = we.stateNode, Ql = !1;
                                break e;
                            case 3:
                                Ls = we.stateNode.containerInfo, Ql = !0;
                                break e;
                            case 4:
                                Ls = we.stateNode.containerInfo, Ql = !0;
                                break e;
                        }
                        we = we.return;
                    }
                    if (Ls === null) throw Error(n(160));
                    BO(V, ie, F), Ls = null, Ql = !1;
                    var Ce = F.alternate;
                    Ce !== null && (Ce.return = null), F.return = null;
                } catch (Ke) {
                    gi(F, p, Ke);
                }
            }
            if (p.subtreeFlags & 12854) for(p = p.child; p !== null;)zO(p, d), p = p.sibling;
        }
        function zO(d, p) {
            var S = d.alternate, I = d.flags;
            switch(d.tag){
                case 0:
                case 11:
                case 14:
                case 15:
                    if (ec(p, d), Vc(d), I & 4) {
                        try {
                            Fv(3, d, d.return), O_(3, d);
                        } catch (Xt) {
                            gi(d, d.return, Xt);
                        }
                        try {
                            Fv(5, d, d.return);
                        } catch (Xt) {
                            gi(d, d.return, Xt);
                        }
                    }
                    break;
                case 1:
                    ec(p, d), Vc(d), I & 512 && S !== null && Fg(S, S.return);
                    break;
                case 5:
                    if (ec(p, d), Vc(d), I & 512 && S !== null && Fg(S, S.return), d.flags & 32) {
                        var F = d.stateNode;
                        try {
                            Je(F, "");
                        } catch (Xt) {
                            gi(d, d.return, Xt);
                        }
                    }
                    if (I & 4 && (F = d.stateNode, F != null)) {
                        var V = d.memoizedProps, ie = S !== null ? S.memoizedProps : V, we = d.type, Ce = d.updateQueue;
                        if (d.updateQueue = null, Ce !== null) try {
                            we === "input" && V.type === "radio" && V.name != null && Be(F, V), $e(we, ie);
                            var Ke = $e(we, V);
                            for(ie = 0; ie < Ce.length; ie += 2){
                                var ft = Ce[ie], mt = Ce[ie + 1];
                                ft === "style" ? ct(F, mt) : ft === "dangerouslySetInnerHTML" ? at(F, mt) : ft === "children" ? Je(F, mt) : E(F, ft, mt, Ke);
                            }
                            switch(we){
                                case "input":
                                    nt(F, V);
                                    break;
                                case "textarea":
                                    pe(F, V);
                                    break;
                                case "select":
                                    var ut = F._wrapperState.wasMultiple;
                                    F._wrapperState.wasMultiple = !!V.multiple;
                                    var Ot = V.value;
                                    Ot != null ? X(F, !!V.multiple, Ot, !1) : ut !== !!V.multiple && (V.defaultValue != null ? X(F, !!V.multiple, V.defaultValue, !0) : X(F, !!V.multiple, V.multiple ? [] : "", !1));
                            }
                            F[df] = V;
                        } catch (Xt) {
                            gi(d, d.return, Xt);
                        }
                    }
                    break;
                case 6:
                    if (ec(p, d), Vc(d), I & 4) {
                        if (d.stateNode === null) throw Error(n(162));
                        F = d.stateNode, V = d.memoizedProps;
                        try {
                            F.nodeValue = V;
                        } catch (Xt) {
                            gi(d, d.return, Xt);
                        }
                    }
                    break;
                case 3:
                    if (ec(p, d), Vc(d), I & 4 && S !== null && S.memoizedState.isDehydrated) try {
                        jh(p.containerInfo);
                    } catch (Xt) {
                        gi(d, d.return, Xt);
                    }
                    break;
                case 4:
                    ec(p, d), Vc(d);
                    break;
                case 13:
                    ec(p, d), Vc(d), F = d.child, F.flags & 8192 && (V = F.memoizedState !== null, F.stateNode.isHidden = V, !V || F.alternate !== null && F.alternate.memoizedState !== null || (lC = Ue())), I & 4 && UO(d);
                    break;
                case 22:
                    if (ft = S !== null && S.memoizedState !== null, d.mode & 1 ? (eo = (Ke = eo) || ft, ec(p, d), eo = Ke) : ec(p, d), Vc(d), I & 8192) {
                        if (Ke = d.memoizedState !== null, (d.stateNode.isHidden = Ke) && !ft && d.mode & 1) for(Wt = d, ft = d.child; ft !== null;){
                            for(mt = Wt = ft; Wt !== null;){
                                switch(ut = Wt, Ot = ut.child, ut.tag){
                                    case 0:
                                    case 11:
                                    case 14:
                                    case 15:
                                        Fv(4, ut, ut.return);
                                        break;
                                    case 1:
                                        Fg(ut, ut.return);
                                        var Ht = ut.stateNode;
                                        if (typeof Ht.componentWillUnmount == "function") {
                                            I = ut, S = ut.return;
                                            try {
                                                p = I, Ht.props = p.memoizedProps, Ht.state = p.memoizedState, Ht.componentWillUnmount();
                                            } catch (Xt) {
                                                gi(I, S, Xt);
                                            }
                                        }
                                        break;
                                    case 5:
                                        Fg(ut, ut.return);
                                        break;
                                    case 22:
                                        if (ut.memoizedState !== null) {
                                            qO(mt);
                                            continue;
                                        }
                                }
                                Ot !== null ? (Ot.return = ut, Wt = Ot) : qO(mt);
                            }
                            ft = ft.sibling;
                        }
                        e: for(ft = null, mt = d;;){
                            if (mt.tag === 5) {
                                if (ft === null) {
                                    ft = mt;
                                    try {
                                        F = mt.stateNode, Ke ? (V = F.style, typeof V.setProperty == "function" ? V.setProperty("display", "none", "important") : V.display = "none") : (we = mt.stateNode, Ce = mt.memoizedProps.style, ie = Ce != null && Ce.hasOwnProperty("display") ? Ce.display : null, we.style.display = rt("display", ie));
                                    } catch (Xt) {
                                        gi(d, d.return, Xt);
                                    }
                                }
                            } else if (mt.tag === 6) {
                                if (ft === null) try {
                                    mt.stateNode.nodeValue = Ke ? "" : mt.memoizedProps;
                                } catch (Xt) {
                                    gi(d, d.return, Xt);
                                }
                            } else if ((mt.tag !== 22 && mt.tag !== 23 || mt.memoizedState === null || mt === d) && mt.child !== null) {
                                mt.child.return = mt, mt = mt.child;
                                continue;
                            }
                            if (mt === d) break e;
                            for(; mt.sibling === null;){
                                if (mt.return === null || mt.return === d) break e;
                                ft === mt && (ft = null), mt = mt.return;
                            }
                            ft === mt && (ft = null), mt.sibling.return = mt.return, mt = mt.sibling;
                        }
                    }
                    break;
                case 19:
                    ec(p, d), Vc(d), I & 4 && UO(d);
                    break;
                case 21:
                    break;
                default:
                    ec(p, d), Vc(d);
            }
        }
        function Vc(d) {
            var p = d.flags;
            if (p & 2) {
                try {
                    e: {
                        for(var S = d.return; S !== null;){
                            if (FO(S)) {
                                var I = S;
                                break e;
                            }
                            S = S.return;
                        }
                        throw Error(n(160));
                    }
                    switch(I.tag){
                        case 5:
                            var F = I.stateNode;
                            I.flags & 32 && (Je(F, ""), I.flags &= -33);
                            var V = jO(d);
                            sC(d, V, F);
                            break;
                        case 3:
                        case 4:
                            var ie = I.stateNode.containerInfo, we = jO(d);
                            iC(d, we, ie);
                            break;
                        default:
                            throw Error(n(161));
                    }
                } catch (Ce) {
                    gi(d, d.return, Ce);
                }
                d.flags &= -3;
            }
            p & 4096 && (d.flags &= -4097);
        }
        function A$(d, p, S) {
            Wt = d, VO(d);
        }
        function VO(d, p, S) {
            for(var I = (d.mode & 1) !== 0; Wt !== null;){
                var F = Wt, V = F.child;
                if (F.tag === 22 && I) {
                    var ie = F.memoizedState !== null || k_;
                    if (!ie) {
                        var we = F.alternate, Ce = we !== null && we.memoizedState !== null || eo;
                        we = k_;
                        var Ke = eo;
                        if (k_ = ie, (eo = Ce) && !Ke) for(Wt = F; Wt !== null;)ie = Wt, Ce = ie.child, ie.tag === 22 && ie.memoizedState !== null ? HO(F) : Ce !== null ? (Ce.return = ie, Wt = Ce) : HO(F);
                        for(; V !== null;)Wt = V, VO(V), V = V.sibling;
                        Wt = F, k_ = we, eo = Ke;
                    }
                    WO(d);
                } else F.subtreeFlags & 8772 && V !== null ? (V.return = F, Wt = V) : WO(d);
            }
        }
        function WO(d) {
            for(; Wt !== null;){
                var p = Wt;
                if (p.flags & 8772) {
                    var S = p.alternate;
                    try {
                        if (p.flags & 8772) switch(p.tag){
                            case 0:
                            case 11:
                            case 15:
                                eo || O_(5, p);
                                break;
                            case 1:
                                var I = p.stateNode;
                                if (p.flags & 4 && !eo) if (S === null) I.componentDidMount();
                                else {
                                    var F = p.elementType === p.type ? S.memoizedProps : ia(p.type, S.memoizedProps);
                                    I.componentDidUpdate(F, S.memoizedState, I.__reactInternalSnapshotBeforeUpdate);
                                }
                                var V = p.updateQueue;
                                V !== null && mf(p, V, I);
                                break;
                            case 3:
                                var ie = p.updateQueue;
                                if (ie !== null) {
                                    if (S = null, p.child !== null) switch(p.child.tag){
                                        case 5:
                                            S = p.child.stateNode;
                                            break;
                                        case 1:
                                            S = p.child.stateNode;
                                    }
                                    mf(p, ie, S);
                                }
                                break;
                            case 5:
                                var we = p.stateNode;
                                if (S === null && p.flags & 4) {
                                    S = we;
                                    var Ce = p.memoizedProps;
                                    switch(p.type){
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            Ce.autoFocus && S.focus();
                                            break;
                                        case "img":
                                            Ce.src && (S.src = Ce.src);
                                    }
                                }
                                break;
                            case 6:
                                break;
                            case 4:
                                break;
                            case 12:
                                break;
                            case 13:
                                if (p.memoizedState === null) {
                                    var Ke = p.alternate;
                                    if (Ke !== null) {
                                        var ft = Ke.memoizedState;
                                        if (ft !== null) {
                                            var mt = ft.dehydrated;
                                            mt !== null && jh(mt);
                                        }
                                    }
                                }
                                break;
                            case 19:
                            case 17:
                            case 21:
                            case 22:
                            case 23:
                            case 25:
                                break;
                            default:
                                throw Error(n(163));
                        }
                        eo || p.flags & 512 && rC(p);
                    } catch (ut) {
                        gi(p, p.return, ut);
                    }
                }
                if (p === d) {
                    Wt = null;
                    break;
                }
                if (S = p.sibling, S !== null) {
                    S.return = p.return, Wt = S;
                    break;
                }
                Wt = p.return;
            }
        }
        function qO(d) {
            for(; Wt !== null;){
                var p = Wt;
                if (p === d) {
                    Wt = null;
                    break;
                }
                var S = p.sibling;
                if (S !== null) {
                    S.return = p.return, Wt = S;
                    break;
                }
                Wt = p.return;
            }
        }
        function HO(d) {
            for(; Wt !== null;){
                var p = Wt;
                try {
                    switch(p.tag){
                        case 0:
                        case 11:
                        case 15:
                            var S = p.return;
                            try {
                                O_(4, p);
                            } catch (Ce) {
                                gi(p, S, Ce);
                            }
                            break;
                        case 1:
                            var I = p.stateNode;
                            if (typeof I.componentDidMount == "function") {
                                var F = p.return;
                                try {
                                    I.componentDidMount();
                                } catch (Ce) {
                                    gi(p, F, Ce);
                                }
                            }
                            var V = p.return;
                            try {
                                rC(p);
                            } catch (Ce) {
                                gi(p, V, Ce);
                            }
                            break;
                        case 5:
                            var ie = p.return;
                            try {
                                rC(p);
                            } catch (Ce) {
                                gi(p, ie, Ce);
                            }
                    }
                } catch (Ce) {
                    gi(p, p.return, Ce);
                }
                if (p === d) {
                    Wt = null;
                    break;
                }
                var we = p.sibling;
                if (we !== null) {
                    we.return = p.return, Wt = we;
                    break;
                }
                Wt = p.return;
            }
        }
        var N$ = Math.ceil, D_ = T.ReactCurrentDispatcher, oC = T.ReactCurrentOwner, pl = T.ReactCurrentBatchConfig, or = 0, xs = null, $i = null, Fs = 0, ja = 0, jg = Jr(0), cs = 0, jv = null, mp = 0, L_ = 0, aC = 0, Bv = null, sa = null, lC = 0, Bg = 1 / 0, Qu = null, F_ = !1, cC = null, bf = null, j_ = !1, wf = null, B_ = 0, Uv = 0, uC = null, U_ = -1, z_ = 0;
        function Oo() {
            return or & 6 ? Ue() : U_ !== -1 ? U_ : U_ = Ue();
        }
        function _f(d) {
            return d.mode & 1 ? or & 2 && Fs !== 0 ? Fs & -Fs : J2.transition !== null ? (z_ === 0 && (z_ = Gn()), z_) : (d = Kn, d !== 0 || (d = window.event, d = d === void 0 ? 16 : o_(d.type)), d) : 1;
        }
        function tc(d, p, S, I) {
            if (50 < Uv) throw Uv = 0, uC = null, Error(n(185));
            Ui(d, S, I), (!(or & 2) || d !== xs) && (d === xs && (!(or & 2) && (L_ |= S), cs === 4 && Sf(d, Fs)), oa(d, I), S === 1 && or === 0 && !(p.mode & 1) && (Bg = Ue() + 500, Qh && ul()));
        }
        function oa(d, p) {
            var S = d.callbackNode;
            hi(d, p);
            var I = oi(d, d === xs ? Fs : 0);
            if (I === 0) S !== null && fe(S), d.callbackNode = null, d.callbackPriority = 0;
            else if (p = I & -I, d.callbackPriority !== p) {
                if (S != null && fe(S), p === 1) d.tag === 0 ? b_(GO.bind(null, d)) : ep(GO.bind(null, d)), Z2(function() {
                    !(or & 6) && ul();
                }), S = null;
                else {
                    switch(Gs(I)){
                        case 1:
                            S = dt;
                            break;
                        case 4:
                            S = _t;
                            break;
                        case 16:
                            S = Ct;
                            break;
                        case 536870912:
                            S = tn;
                            break;
                        default:
                            S = Ct;
                    }
                    S = tD(S, $O.bind(null, d));
                }
                d.callbackPriority = p, d.callbackNode = S;
            }
        }
        function $O(d, p) {
            if (U_ = -1, z_ = 0, or & 6) throw Error(n(327));
            var S = d.callbackNode;
            if (Ug() && d.callbackNode !== S) return null;
            var I = oi(d, d === xs ? Fs : 0);
            if (I === 0) return null;
            if (I & 30 || I & d.expiredLanes || p) p = V_(d, I);
            else {
                p = I;
                var F = or;
                or |= 2;
                var V = KO();
                (xs !== d || Fs !== p) && (Qu = null, Bg = Ue() + 500, yp(d, p));
                do try {
                    O$();
                    break;
                } catch (we) {
                    XO(d, we);
                }
                while (!0);
                Hu(), D_.current = V, or = F, $i !== null ? p = 0 : (xs = null, Fs = 0, p = cs);
            }
            if (p !== 0) {
                if (p === 2 && (F = Eo(d), F !== 0 && (I = F, p = dC(d, F))), p === 1) throw S = jv, yp(d, 0), Sf(d, I), oa(d, Ue()), S;
                if (p === 6) Sf(d, I);
                else {
                    if (F = d.current.alternate, !(I & 30) && !P$(F) && (p = V_(d, I), p === 2 && (V = Eo(d), V !== 0 && (I = V, p = dC(d, V))), p === 1)) throw S = jv, yp(d, 0), Sf(d, I), oa(d, Ue()), S;
                    switch(d.finishedWork = F, d.finishedLanes = I, p){
                        case 0:
                        case 1:
                            throw Error(n(345));
                        case 2:
                            vp(d, sa, Qu);
                            break;
                        case 3:
                            if (Sf(d, I), (I & 130023424) === I && (p = lC + 500 - Ue(), 10 < p)) {
                                if (oi(d, 0) !== 0) break;
                                if (F = d.suspendedLanes, (F & I) !== I) {
                                    Oo(), d.pingedLanes |= d.suspendedLanes & F;
                                    break;
                                }
                                d.timeoutHandle = hv(vp.bind(null, d, sa, Qu), p);
                                break;
                            }
                            vp(d, sa, Qu);
                            break;
                        case 4:
                            if (Sf(d, I), (I & 4194240) === I) break;
                            for(p = d.eventTimes, F = -1; 0 < I;){
                                var ie = 31 - on(I);
                                V = 1 << ie, ie = p[ie], ie > F && (F = ie), I &= ~V;
                            }
                            if (I = F, I = Ue() - I, I = (120 > I ? 120 : 480 > I ? 480 : 1080 > I ? 1080 : 1920 > I ? 1920 : 3e3 > I ? 3e3 : 4320 > I ? 4320 : 1960 * N$(I / 1960)) - I, 10 < I) {
                                d.timeoutHandle = hv(vp.bind(null, d, sa, Qu), I);
                                break;
                            }
                            vp(d, sa, Qu);
                            break;
                        case 5:
                            vp(d, sa, Qu);
                            break;
                        default:
                            throw Error(n(329));
                    }
                }
            }
            return oa(d, Ue()), d.callbackNode === S ? $O.bind(null, d) : null;
        }
        function dC(d, p) {
            var S = Bv;
            return d.current.memoizedState.isDehydrated && (yp(d, p).flags |= 256), d = V_(d, p), d !== 2 && (p = sa, sa = S, p !== null && fC(p)), d;
        }
        function fC(d) {
            sa === null ? sa = d : sa.push.apply(sa, d);
        }
        function P$(d) {
            for(var p = d;;){
                if (p.flags & 16384) {
                    var S = p.updateQueue;
                    if (S !== null && (S = S.stores, S !== null)) for(var I = 0; I < S.length; I++){
                        var F = S[I], V = F.getSnapshot;
                        F = F.value;
                        try {
                            if (!To(V(), F)) return !1;
                        } catch  {
                            return !1;
                        }
                    }
                }
                if (S = p.child, p.subtreeFlags & 16384 && S !== null) S.return = p, p = S;
                else {
                    if (p === d) break;
                    for(; p.sibling === null;){
                        if (p.return === null || p.return === d) return !0;
                        p = p.return;
                    }
                    p.sibling.return = p.return, p = p.sibling;
                }
            }
            return !0;
        }
        function Sf(d, p) {
            for(p &= ~aC, p &= ~L_, d.suspendedLanes |= p, d.pingedLanes &= ~p, d = d.expirationTimes; 0 < p;){
                var S = 31 - on(p), I = 1 << S;
                d[S] = -1, p &= ~I;
            }
        }
        function GO(d) {
            if (or & 6) throw Error(n(327));
            Ug();
            var p = oi(d, 0);
            if (!(p & 1)) return oa(d, Ue()), null;
            var S = V_(d, p);
            if (d.tag !== 0 && S === 2) {
                var I = Eo(d);
                I !== 0 && (p = I, S = dC(d, I));
            }
            if (S === 1) throw S = jv, yp(d, 0), Sf(d, p), oa(d, Ue()), S;
            if (S === 6) throw Error(n(345));
            return d.finishedWork = d.current.alternate, d.finishedLanes = p, vp(d, sa, Qu), oa(d, Ue()), null;
        }
        function hC(d, p) {
            var S = or;
            or |= 1;
            try {
                return d(p);
            } finally{
                or = S, or === 0 && (Bg = Ue() + 500, Qh && ul());
            }
        }
        function gp(d) {
            wf !== null && wf.tag === 0 && !(or & 6) && Ug();
            var p = or;
            or |= 1;
            var S = pl.transition, I = Kn;
            try {
                if (pl.transition = null, Kn = 1, d) return d();
            } finally{
                Kn = I, pl.transition = S, or = p, !(or & 6) && ul();
            }
        }
        function pC() {
            ja = jg.current, _r(jg);
        }
        function yp(d, p) {
            d.finishedWork = null, d.finishedLanes = 0;
            var S = d.timeoutHandle;
            if (S !== -1 && (d.timeoutHandle = -1, pv(S)), $i !== null) for(S = $i.return; S !== null;){
                var I = S;
                switch(Hl(I), I.tag){
                    case 1:
                        I = I.type.childContextTypes, I != null && Zh();
                        break;
                    case 3:
                        Uc(), _r(Ps), _r(is), fl();
                        break;
                    case 5:
                        gf(I);
                        break;
                    case 4:
                        Uc();
                        break;
                    case 13:
                        _r(Ar);
                        break;
                    case 19:
                        _r(Ar);
                        break;
                    case 10:
                        ip(I.type._context);
                        break;
                    case 22:
                    case 23:
                        pC();
                }
                S = S.return;
            }
            if (xs = d, $i = d = Ef(d.current, null), Fs = ja = p, cs = 0, jv = null, aC = L_ = mp = 0, sa = Bv = null, Gl !== null) {
                for(p = 0; p < Gl.length; p++)if (S = Gl[p], I = S.interleaved, I !== null) {
                    S.interleaved = null;
                    var F = I.next, V = S.pending;
                    if (V !== null) {
                        var ie = V.next;
                        V.next = F, I.next = ie;
                    }
                    S.pending = I;
                }
                Gl = null;
            }
            return d;
        }
        function XO(d, p) {
            do {
                var S = $i;
                try {
                    if (Hu(), Ku.current = Dg, La) {
                        for(var I = Sr.memoizedState; I !== null;){
                            var F = I.queue;
                            F !== null && (F.pending = null), I = I.next;
                        }
                        La = !1;
                    }
                    if (Kl = 0, nr = ei = Sr = null, vs = !1, zc = 0, oC.current = null, S === null || S.return === null) {
                        cs = 1, jv = p, $i = null;
                        break;
                    }
                    e: {
                        var V = d, ie = S.return, we = S, Ce = p;
                        if (p = Fs, we.flags |= 32768, Ce !== null && typeof Ce == "object" && typeof Ce.then == "function") {
                            var Ke = Ce, ft = we, mt = ft.tag;
                            if (!(ft.mode & 1) && (mt === 0 || mt === 11 || mt === 15)) {
                                var ut = ft.alternate;
                                ut ? (ft.updateQueue = ut.updateQueue, ft.memoizedState = ut.memoizedState, ft.lanes = ut.lanes) : (ft.updateQueue = null, ft.memoizedState = null);
                            }
                            var Ot = Ut(ie);
                            if (Ot !== null) {
                                Ot.flags &= -257, xn(Ot, ie, we, V, p), Ot.mode & 1 && vt(V, Ke, p), p = Ot, Ce = Ke;
                                var Ht = p.updateQueue;
                                if (Ht === null) {
                                    var Xt = new Set;
                                    Xt.add(Ce), p.updateQueue = Xt;
                                } else Ht.add(Ce);
                                break e;
                            } else {
                                if (!(p & 1)) {
                                    vt(V, Ke, p), mC();
                                    break e;
                                }
                                Ce = Error(n(426));
                            }
                        } else if (Ir && we.mode & 1) {
                            var Ni = Ut(ie);
                            if (Ni !== null) {
                                !(Ni.flags & 65536) && (Ni.flags |= 256), xn(Ni, ie, we, V, p), hf(L(Ce, we));
                                break e;
                            }
                        }
                        V = Ce = L(Ce, we), cs !== 4 && (cs = 2), Bv === null ? Bv = [
                            V
                        ] : Bv.push(V), V = ie;
                        do {
                            switch(V.tag){
                                case 3:
                                    V.flags |= 65536, p &= -p, V.lanes |= p;
                                    var Ve = ke(V, Ce, p);
                                    $u(V, Ve);
                                    break e;
                                case 1:
                                    we = Ce;
                                    var Ne = V.type, qe = V.stateNode;
                                    if (!(V.flags & 128) && (typeof Ne.getDerivedStateFromError == "function" || qe !== null && typeof qe.componentDidCatch == "function" && (bf === null || !bf.has(qe)))) {
                                        V.flags |= 65536, p &= -p, V.lanes |= p;
                                        var xt = tt(V, we, p);
                                        $u(V, xt);
                                        break e;
                                    }
                            }
                            V = V.return;
                        }while (V !== null);
                    }
                    ZO(S);
                } catch (Jt) {
                    p = Jt, $i === S && S !== null && ($i = S = S.return);
                    continue;
                }
                break;
            }while (!0);
        }
        function KO() {
            var d = D_.current;
            return D_.current = Dg, d === null ? Dg : d;
        }
        function mC() {
            (cs === 0 || cs === 3 || cs === 2) && (cs = 4), xs === null || !(mp & 268435455) && !(L_ & 268435455) || Sf(xs, Fs);
        }
        function V_(d, p) {
            var S = or;
            or |= 2;
            var I = KO();
            (xs !== d || Fs !== p) && (Qu = null, yp(d, p));
            do try {
                k$();
                break;
            } catch (F) {
                XO(d, F);
            }
            while (!0);
            if (Hu(), or = S, D_.current = I, $i !== null) throw Error(n(261));
            return xs = null, Fs = 0, cs;
        }
        function k$() {
            for(; $i !== null;)YO($i);
        }
        function O$() {
            for(; $i !== null && !Oe();)YO($i);
        }
        function YO(d) {
            var p = eD(d.alternate, d, ja);
            d.memoizedProps = d.pendingProps, p === null ? ZO(d) : $i = p, oC.current = null;
        }
        function ZO(d) {
            var p = d;
            do {
                var S = p.alternate;
                if (d = p.return, p.flags & 32768) {
                    if (S = C$(S, p), S !== null) {
                        S.flags &= 32767, $i = S;
                        return;
                    }
                    if (d !== null) d.flags |= 32768, d.subtreeFlags = 0, d.deletions = null;
                    else {
                        cs = 6, $i = null;
                        return;
                    }
                } else if (S = T$(S, p, ja), S !== null) {
                    $i = S;
                    return;
                }
                if (p = p.sibling, p !== null) {
                    $i = p;
                    return;
                }
                $i = p = d;
            }while (p !== null);
            cs === 0 && (cs = 5);
        }
        function vp(d, p, S) {
            var I = Kn, F = pl.transition;
            try {
                pl.transition = null, Kn = 1, D$(d, p, S, I);
            } finally{
                pl.transition = F, Kn = I;
            }
            return null;
        }
        function D$(d, p, S, I) {
            do Ug();
            while (wf !== null);
            if (or & 6) throw Error(n(327));
            S = d.finishedWork;
            var F = d.finishedLanes;
            if (S === null) return null;
            if (d.finishedWork = null, d.finishedLanes = 0, S === d.current) throw Error(n(177));
            d.callbackNode = null, d.callbackPriority = 0;
            var V = S.lanes | S.childLanes;
            if (ns(d, V), d === xs && ($i = xs = null, Fs = 0), !(S.subtreeFlags & 2064) && !(S.flags & 2064) || j_ || (j_ = !0, tD(Ct, function() {
                return Ug(), null;
            })), V = (S.flags & 15990) !== 0, S.subtreeFlags & 15990 || V) {
                V = pl.transition, pl.transition = null;
                var ie = Kn;
                Kn = 1;
                var we = or;
                or |= 4, oC.current = null, I$(d, S), zO(S, d), Vi(dv), Yo = !!uf, dv = uf = null, d.current = S, A$(S), Ge(), or = we, Kn = ie, pl.transition = V;
            } else d.current = S;
            if (j_ && (j_ = !1, wf = d, B_ = F), V = d.pendingLanes, V === 0 && (bf = null), qt(S.stateNode), oa(d, Ue()), p !== null) for(I = d.onRecoverableError, S = 0; S < p.length; S++)F = p[S], I(F.value, {
                componentStack: F.stack,
                digest: F.digest
            });
            if (F_) throw F_ = !1, d = cC, cC = null, d;
            return B_ & 1 && d.tag !== 0 && Ug(), V = d.pendingLanes, V & 1 ? d === uC ? Uv++ : (Uv = 0, uC = d) : Uv = 0, ul(), null;
        }
        function Ug() {
            if (wf !== null) {
                var d = Gs(B_), p = pl.transition, S = Kn;
                try {
                    if (pl.transition = null, Kn = 16 > d ? 16 : d, wf === null) var I = !1;
                    else {
                        if (d = wf, wf = null, B_ = 0, or & 6) throw Error(n(331));
                        var F = or;
                        for(or |= 4, Wt = d.current; Wt !== null;){
                            var V = Wt, ie = V.child;
                            if (Wt.flags & 16) {
                                var we = V.deletions;
                                if (we !== null) {
                                    for(var Ce = 0; Ce < we.length; Ce++){
                                        var Ke = we[Ce];
                                        for(Wt = Ke; Wt !== null;){
                                            var ft = Wt;
                                            switch(ft.tag){
                                                case 0:
                                                case 11:
                                                case 15:
                                                    Fv(8, ft, V);
                                            }
                                            var mt = ft.child;
                                            if (mt !== null) mt.return = ft, Wt = mt;
                                            else for(; Wt !== null;){
                                                ft = Wt;
                                                var ut = ft.sibling, Ot = ft.return;
                                                if (LO(ft), ft === Ke) {
                                                    Wt = null;
                                                    break;
                                                }
                                                if (ut !== null) {
                                                    ut.return = Ot, Wt = ut;
                                                    break;
                                                }
                                                Wt = Ot;
                                            }
                                        }
                                    }
                                    var Ht = V.alternate;
                                    if (Ht !== null) {
                                        var Xt = Ht.child;
                                        if (Xt !== null) {
                                            Ht.child = null;
                                            do {
                                                var Ni = Xt.sibling;
                                                Xt.sibling = null, Xt = Ni;
                                            }while (Xt !== null);
                                        }
                                    }
                                    Wt = V;
                                }
                            }
                            if (V.subtreeFlags & 2064 && ie !== null) ie.return = V, Wt = ie;
                            else e: for(; Wt !== null;){
                                if (V = Wt, V.flags & 2048) switch(V.tag){
                                    case 0:
                                    case 11:
                                    case 15:
                                        Fv(9, V, V.return);
                                }
                                var Ve = V.sibling;
                                if (Ve !== null) {
                                    Ve.return = V.return, Wt = Ve;
                                    break e;
                                }
                                Wt = V.return;
                            }
                        }
                        var Ne = d.current;
                        for(Wt = Ne; Wt !== null;){
                            ie = Wt;
                            var qe = ie.child;
                            if (ie.subtreeFlags & 2064 && qe !== null) qe.return = ie, Wt = qe;
                            else e: for(ie = Ne; Wt !== null;){
                                if (we = Wt, we.flags & 2048) try {
                                    switch(we.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            O_(9, we);
                                    }
                                } catch (Jt) {
                                    gi(we, we.return, Jt);
                                }
                                if (we === ie) {
                                    Wt = null;
                                    break e;
                                }
                                var xt = we.sibling;
                                if (xt !== null) {
                                    xt.return = we.return, Wt = xt;
                                    break e;
                                }
                                Wt = we.return;
                            }
                        }
                        if (or = F, ul(), yt && typeof yt.onPostCommitFiberRoot == "function") try {
                            yt.onPostCommitFiberRoot(Zt, d);
                        } catch  {}
                        I = !0;
                    }
                    return I;
                } finally{
                    Kn = S, pl.transition = p;
                }
            }
            return !1;
        }
        function JO(d, p, S) {
            p = L(S, p), p = ke(d, p, 1), d = Lr(d, p, 1), p = Oo(), d !== null && (Ui(d, 1, p), oa(d, p));
        }
        function gi(d, p, S) {
            if (d.tag === 3) JO(d, d, S);
            else for(; p !== null;){
                if (p.tag === 3) {
                    JO(p, d, S);
                    break;
                } else if (p.tag === 1) {
                    var I = p.stateNode;
                    if (typeof p.type.getDerivedStateFromError == "function" || typeof I.componentDidCatch == "function" && (bf === null || !bf.has(I))) {
                        d = L(S, d), d = tt(p, d, 1), p = Lr(p, d, 1), d = Oo(), p !== null && (Ui(p, 1, d), oa(p, d));
                        break;
                    }
                }
                p = p.return;
            }
        }
        function L$(d, p, S) {
            var I = d.pingCache;
            I !== null && I.delete(p), p = Oo(), d.pingedLanes |= d.suspendedLanes & S, xs === d && (Fs & S) === S && (cs === 4 || cs === 3 && (Fs & 130023424) === Fs && 500 > Ue() - lC ? yp(d, 0) : aC |= S), oa(d, p);
        }
        function QO(d, p) {
            p === 0 && (d.mode & 1 ? (p = $n, $n <<= 1, !($n & 130023424) && ($n = 4194304)) : p = 1);
            var S = Oo();
            d = Oa(d, p), d !== null && (Ui(d, p, S), oa(d, S));
        }
        function F$(d) {
            var p = d.memoizedState, S = 0;
            p !== null && (S = p.retryLane), QO(d, S);
        }
        function j$(d, p) {
            var S = 0;
            switch(d.tag){
                case 13:
                    var I = d.stateNode, F = d.memoizedState;
                    F !== null && (S = F.retryLane);
                    break;
                case 19:
                    I = d.stateNode;
                    break;
                default:
                    throw Error(n(314));
            }
            I !== null && I.delete(p), QO(d, S);
        }
        var eD;
        eD = function(d, p, S) {
            if (d !== null) if (d.memoizedProps !== p.pendingProps || Ps.current) Pn = !0;
            else {
                if (!(d.lanes & S) && !(p.flags & 128)) return Pn = !1, M$(d, p, S);
                Pn = !!(d.flags & 131072);
            }
            else Pn = !1, Ir && p.flags & 1048576 && xv(p, Mg, p.index);
            switch(p.lanes = 0, p.tag){
                case 2:
                    var I = p.type;
                    P_(d, p), d = p.pendingProps;
                    var F = ju(p, is.current);
                    Bc(p, S), F = cp(null, p, I, d, F, S);
                    var V = Cv();
                    return p.flags |= 1, typeof F == "object" && F !== null && typeof F.render == "function" && F.$$typeof === void 0 ? (p.tag = 1, p.memoizedState = null, p.updateQueue = null, gs(I) ? (V = !0, Bu(p)) : V = !1, p.memoizedState = F.state !== null && F.state !== void 0 ? F.state : null, In(p), F.updater = Lg, p.stateNode = F, F._reactInternals = p, C(p, I, d, S), p = Tn(null, p, I, !0, V, S)) : (p.tag = 0, Ir && V && bv(p), Rt(null, p, F, S), p = p.child), p;
                case 16:
                    I = p.elementType;
                    e: {
                        switch(P_(d, p), d = p.pendingProps, F = I._init, I = F(I._payload), p.type = I, F = p.tag = U$(I), d = ia(I, d), F){
                            case 0:
                                p = Et(null, p, I, d, S);
                                break e;
                            case 1:
                                p = Kt(null, p, I, d, S);
                                break e;
                            case 11:
                                p = ls(null, p, I, d, S);
                                break e;
                            case 14:
                                p = ko(null, p, I, ia(I.type, d), S);
                                break e;
                        }
                        throw Error(n(306, I, ""));
                    }
                    return p;
                case 0:
                    return I = p.type, F = p.pendingProps, F = p.elementType === I ? F : ia(I, F), Et(d, p, I, F, S);
                case 1:
                    return I = p.type, F = p.pendingProps, F = p.elementType === I ? F : ia(I, F), Kt(d, p, I, F, S);
                case 3:
                    e: {
                        if (bn(p), d === null) throw Error(n(387));
                        I = p.pendingProps, V = p.memoizedState, F = V.element, ci(d, p), Qr(p, I, null, S);
                        var ie = p.memoizedState;
                        if (I = ie.element, V.isDehydrated) if (V = {
                            element: I,
                            isDehydrated: !1,
                            cache: ie.cache,
                            pendingSuspenseBoundaries: ie.pendingSuspenseBoundaries,
                            transitions: ie.transitions
                        }, p.updateQueue.baseState = V, p.memoizedState = V, p.flags & 256) {
                            F = L(Error(n(423)), p), p = Qn(d, p, I, S, F);
                            break e;
                        } else if (I !== F) {
                            F = L(Error(n(424)), p), p = Qn(d, p, I, S, F);
                            break e;
                        } else for(Os = Ul(p.stateNode.containerInfo.firstChild), ss = p, Ir = !0, ra = null, S = rp(p, null, I, S), p.child = S; S;)S.flags = S.flags & -3 | 4096, S = S.sibling;
                        else {
                            if (jc(), I === F) {
                                p = Ju(d, p, S);
                                break e;
                            }
                            Rt(d, p, I, S);
                        }
                        p = p.child;
                    }
                    return p;
                case 5:
                    return Xu(p), d === null && Cg(p), I = p.type, F = p.pendingProps, V = d !== null ? d.memoizedProps : null, ie = F.children, fv(I, F) ? ie = null : V !== null && fv(I, V) && (p.flags |= 32), Qe(d, p), Rt(d, p, ie, S), p.child;
                case 6:
                    return d === null && Cg(p), null;
                case 13:
                    return Jl(d, p, S);
                case 4:
                    return ap(p, p.stateNode.containerInfo), I = p.pendingProps, d === null ? p.child = Vu(p, null, I, S) : Rt(d, p, I, S), p.child;
                case 11:
                    return I = p.type, F = p.pendingProps, F = p.elementType === I ? F : ia(I, F), ls(d, p, I, F, S);
                case 7:
                    return Rt(d, p, p.pendingProps, S), p.child;
                case 8:
                    return Rt(d, p, p.pendingProps.children, S), p.child;
                case 12:
                    return Rt(d, p, p.pendingProps.children, S), p.child;
                case 10:
                    e: {
                        if (I = p.type._context, F = p.pendingProps, V = p.memoizedProps, ie = F.value, xr(Wu, I._currentValue), I._currentValue = ie, V !== null) if (To(V.value, ie)) {
                            if (V.children === F.children && !Ps.current) {
                                p = Ju(d, p, S);
                                break e;
                            }
                        } else for(V = p.child, V !== null && (V.return = p); V !== null;){
                            var we = V.dependencies;
                            if (we !== null) {
                                ie = V.child;
                                for(var Ce = we.firstContext; Ce !== null;){
                                    if (Ce.context === I) {
                                        if (V.tag === 1) {
                                            Ce = mr(-1, S & -S), Ce.tag = 2;
                                            var Ke = V.updateQueue;
                                            if (Ke !== null) {
                                                Ke = Ke.shared;
                                                var ft = Ke.pending;
                                                ft === null ? Ce.next = Ce : (Ce.next = ft.next, ft.next = Ce), Ke.pending = Ce;
                                            }
                                        }
                                        V.lanes |= S, Ce = V.alternate, Ce !== null && (Ce.lanes |= S), sp(V.return, S, p), we.lanes |= S;
                                        break;
                                    }
                                    Ce = Ce.next;
                                }
                            } else if (V.tag === 10) ie = V.type === p.type ? null : V.child;
                            else if (V.tag === 18) {
                                if (ie = V.return, ie === null) throw Error(n(341));
                                ie.lanes |= S, we = ie.alternate, we !== null && (we.lanes |= S), sp(ie, S, p), ie = V.sibling;
                            } else ie = V.child;
                            if (ie !== null) ie.return = V;
                            else for(ie = V; ie !== null;){
                                if (ie === p) {
                                    ie = null;
                                    break;
                                }
                                if (V = ie.sibling, V !== null) {
                                    V.return = ie.return, ie = V;
                                    break;
                                }
                                ie = ie.return;
                            }
                            V = ie;
                        }
                        Rt(d, p, F.children, S), p = p.child;
                    }
                    return p;
                case 9:
                    return F = p.type, I = p.pendingProps.children, Bc(p, S), F = Io(F), I = I(F), p.flags |= 1, Rt(d, p, I, S), p.child;
                case 14:
                    return I = p.type, F = ia(I, p.pendingProps), F = ia(I.type, F), ko(d, p, I, F, S);
                case 15:
                    return He(d, p, p.type, p.pendingProps, S);
                case 17:
                    return I = p.type, F = p.pendingProps, F = p.elementType === I ? F : ia(I, F), P_(d, p), p.tag = 1, gs(I) ? (d = !0, Bu(p)) : d = !1, Bc(p, S), g(p, I, F), C(p, I, F, S), Tn(null, p, I, !0, d, S);
                case 19:
                    return NO(d, p, S);
                case 22:
                    return Le(d, p, S);
            }
            throw Error(n(156, p.tag));
        };
        function tD(d, p) {
            return Xd(d, p);
        }
        function B$(d, p, S, I) {
            this.tag = d, this.key = S, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = p, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = I, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
        }
        function ml(d, p, S, I) {
            return new B$(d, p, S, I);
        }
        function gC(d) {
            return d = d.prototype, !(!d || !d.isReactComponent);
        }
        function U$(d) {
            if (typeof d == "function") return gC(d) ? 1 : 0;
            if (d != null) {
                if (d = d.$$typeof, d === U) return 11;
                if (d === K) return 14;
            }
            return 2;
        }
        function Ef(d, p) {
            var S = d.alternate;
            return S === null ? (S = ml(d.tag, p, d.key, d.mode), S.elementType = d.elementType, S.type = d.type, S.stateNode = d.stateNode, S.alternate = d, d.alternate = S) : (S.pendingProps = p, S.type = d.type, S.flags = 0, S.subtreeFlags = 0, S.deletions = null), S.flags = d.flags & 14680064, S.childLanes = d.childLanes, S.lanes = d.lanes, S.child = d.child, S.memoizedProps = d.memoizedProps, S.memoizedState = d.memoizedState, S.updateQueue = d.updateQueue, p = d.dependencies, S.dependencies = p === null ? null : {
                lanes: p.lanes,
                firstContext: p.firstContext
            }, S.sibling = d.sibling, S.index = d.index, S.ref = d.ref, S;
        }
        function W_(d, p, S, I, F, V) {
            var ie = 2;
            if (I = d, typeof d == "function") gC(d) && (ie = 1);
            else if (typeof d == "string") ie = 5;
            else e: switch(d){
                case O:
                    return xp(S.children, F, V, p);
                case D:
                    ie = 8, F |= 8;
                    break;
                case R:
                    return d = ml(12, S, p, F | 2), d.elementType = R, d.lanes = V, d;
                case B:
                    return d = ml(13, S, p, F), d.elementType = B, d.lanes = V, d;
                case j:
                    return d = ml(19, S, p, F), d.elementType = j, d.lanes = V, d;
                case ee:
                    return q_(S, F, V, p);
                default:
                    if (typeof d == "object" && d !== null) switch(d.$$typeof){
                        case N:
                            ie = 10;
                            break e;
                        case k:
                            ie = 9;
                            break e;
                        case U:
                            ie = 11;
                            break e;
                        case K:
                            ie = 14;
                            break e;
                        case q:
                            ie = 16, I = null;
                            break e;
                    }
                    throw Error(n(130, d == null ? d : typeof d, ""));
            }
            return p = ml(ie, S, p, F), p.elementType = d, p.type = I, p.lanes = V, p;
        }
        function xp(d, p, S, I) {
            return d = ml(7, d, I, p), d.lanes = S, d;
        }
        function q_(d, p, S, I) {
            return d = ml(22, d, I, p), d.elementType = ee, d.lanes = S, d.stateNode = {
                isHidden: !1
            }, d;
        }
        function yC(d, p, S) {
            return d = ml(6, d, null, p), d.lanes = S, d;
        }
        function vC(d, p, S) {
            return p = ml(4, d.children !== null ? d.children : [], d.key, p), p.lanes = S, p.stateNode = {
                containerInfo: d.containerInfo,
                pendingChildren: null,
                implementation: d.implementation
            }, p;
        }
        function z$(d, p, S, I, F) {
            this.tag = p, this.containerInfo = d, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = ms(0), this.expirationTimes = ms(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = ms(0), this.identifierPrefix = I, this.onRecoverableError = F, this.mutableSourceEagerHydrationData = null;
        }
        function xC(d, p, S, I, F, V, ie, we, Ce) {
            return d = new z$(d, p, S, we, Ce), p === 1 ? (p = 1, V === !0 && (p |= 8)) : p = 0, V = ml(3, null, null, p), d.current = V, V.stateNode = d, V.memoizedState = {
                element: I,
                isDehydrated: S,
                cache: null,
                transitions: null,
                pendingSuspenseBoundaries: null
            }, In(V), d;
        }
        function V$(d, p, S) {
            var I = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
            return {
                $$typeof: A,
                key: I == null ? null : "" + I,
                children: d,
                containerInfo: p,
                implementation: S
            };
        }
        function nD(d) {
            if (!d) return Vl;
            d = d._reactInternals;
            e: {
                if (So(d) !== d || d.tag !== 1) throw Error(n(170));
                var p = d;
                do {
                    switch(p.tag){
                        case 3:
                            p = p.stateNode.context;
                            break e;
                        case 1:
                            if (gs(p.type)) {
                                p = p.stateNode.__reactInternalMemoizedMergedChildContext;
                                break e;
                            }
                    }
                    p = p.return;
                }while (p !== null);
                throw Error(n(171));
            }
            if (d.tag === 1) {
                var S = d.type;
                if (gs(S)) return Jh(d, S, p);
            }
            return p;
        }
        function rD(d, p, S, I, F, V, ie, we, Ce) {
            return d = xC(S, I, !0, d, F, V, ie, we, Ce), d.context = nD(null), S = d.current, I = Oo(), F = _f(S), V = mr(I, F), V.callback = p ?? null, Lr(S, V, F), d.current.lanes = F, Ui(d, F, I), oa(d, I), d;
        }
        function H_(d, p, S, I) {
            var F = p.current, V = Oo(), ie = _f(F);
            return S = nD(S), p.context === null ? p.context = S : p.pendingContext = S, p = mr(V, ie), p.payload = {
                element: d
            }, I = I === void 0 ? null : I, I !== null && (p.callback = I), d = Lr(F, p, ie), d !== null && (tc(d, F, ie, V), ys(d, F, ie)), ie;
        }
        function $_(d) {
            if (d = d.current, !d.child) return null;
            switch(d.child.tag){
                case 5:
                    return d.child.stateNode;
                default:
                    return d.child.stateNode;
            }
        }
        function iD(d, p) {
            if (d = d.memoizedState, d !== null && d.dehydrated !== null) {
                var S = d.retryLane;
                d.retryLane = S !== 0 && S < p ? S : p;
            }
        }
        function bC(d, p) {
            iD(d, p), (d = d.alternate) && iD(d, p);
        }
        function W$() {
            return null;
        }
        var sD = typeof reportError == "function" ? reportError : function(d) {
            console.error(d);
        };
        function wC(d) {
            this._internalRoot = d;
        }
        G_.prototype.render = wC.prototype.render = function(d) {
            var p = this._internalRoot;
            if (p === null) throw Error(n(409));
            H_(d, p, null, null);
        }, G_.prototype.unmount = wC.prototype.unmount = function() {
            var d = this._internalRoot;
            if (d !== null) {
                this._internalRoot = null;
                var p = d.containerInfo;
                gp(function() {
                    H_(null, d, null, null);
                }), p[Ro] = null;
            }
        };
        function G_(d) {
            this._internalRoot = d;
        }
        G_.prototype.unstable_scheduleHydration = function(d) {
            if (d) {
                var p = qm();
                d = {
                    blockedOn: null,
                    target: d,
                    priority: p
                };
                for(var S = 0; S < Ac.length && p !== 0 && p < Ac[S].priority; S++);
                Ac.splice(S, 0, d), S === 0 && Gm(d);
            }
        };
        function _C(d) {
            return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11);
        }
        function X_(d) {
            return !(!d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11 && (d.nodeType !== 8 || d.nodeValue !== " react-mount-point-unstable "));
        }
        function oD() {}
        function q$(d, p, S, I, F) {
            if (F) {
                if (typeof I == "function") {
                    var V = I;
                    I = function() {
                        var Ke = $_(ie);
                        V.call(Ke);
                    };
                }
                var ie = rD(p, I, d, 0, null, !1, !1, "", oD);
                return d._reactRootContainer = ie, d[Ro] = ie.current, lf(d.nodeType === 8 ? d.parentNode : d), gp(), ie;
            }
            for(; F = d.lastChild;)d.removeChild(F);
            if (typeof I == "function") {
                var we = I;
                I = function() {
                    var Ke = $_(Ce);
                    we.call(Ke);
                };
            }
            var Ce = xC(d, 0, !1, null, null, !1, !1, "", oD);
            return d._reactRootContainer = Ce, d[Ro] = Ce.current, lf(d.nodeType === 8 ? d.parentNode : d), gp(function() {
                H_(p, Ce, S, I);
            }), Ce;
        }
        function K_(d, p, S, I, F) {
            var V = S._reactRootContainer;
            if (V) {
                var ie = V;
                if (typeof F == "function") {
                    var we = F;
                    F = function() {
                        var Ce = $_(ie);
                        we.call(Ce);
                    };
                }
                H_(p, ie, d, F);
            } else ie = q$(S, p, d, F, I);
            return $_(ie);
        }
        Dh = function(d) {
            switch(d.tag){
                case 3:
                    var p = d.stateNode;
                    if (p.current.memoizedState.isDehydrated) {
                        var S = Rn(p.pendingLanes);
                        S !== 0 && (ai(p, S | 1), oa(p, Ue()), !(or & 6) && (Bg = Ue() + 500, ul()));
                    }
                    break;
                case 13:
                    gp(function() {
                        var I = Oa(d, 1);
                        if (I !== null) {
                            var F = Oo();
                            tc(I, d, 1, F);
                        }
                    }), bC(d, 1);
            }
        }, Xy = function(d) {
            if (d.tag === 13) {
                var p = Oa(d, 134217728);
                if (p !== null) {
                    var S = Oo();
                    tc(p, d, 134217728, S);
                }
                bC(d, 134217728);
            }
        }, s_ = function(d) {
            if (d.tag === 13) {
                var p = _f(d), S = Oa(d, p);
                if (S !== null) {
                    var I = Oo();
                    tc(S, d, p, I);
                }
                bC(d, p);
            }
        }, qm = function() {
            return Kn;
        }, Hm = function(d, p) {
            var S = Kn;
            try {
                return Kn = d, p();
            } finally{
                Kn = S;
            }
        }, lt = function(d, p, S) {
            switch(p){
                case "input":
                    if (nt(d, S), p = S.name, S.type === "radio" && p != null) {
                        for(S = d; S.parentNode;)S = S.parentNode;
                        for(S = S.querySelectorAll("input[name=" + JSON.stringify("" + p) + '][type="radio"]'), p = 0; p < S.length; p++){
                            var I = S[p];
                            if (I !== d && I.form === d.form) {
                                var F = _g(I);
                                if (!F) throw Error(n(90));
                                be(I), nt(I, F);
                            }
                        }
                    }
                    break;
                case "textarea":
                    pe(d, S);
                    break;
                case "select":
                    p = S.value, p != null && X(d, !!S.multiple, p, !1);
            }
        }, Pt = hC, en = gp;
        var H$ = {
            usingClientEntryPoint: !1,
            Events: [
                zl,
                li,
                _g,
                it,
                pt,
                hC
            ]
        }, zv = {
            findFiberByHostInstance: Fc,
            bundleType: 0,
            version: "18.3.1",
            rendererPackageName: "react-dom"
        }, $$ = {
            bundleType: zv.bundleType,
            version: zv.version,
            rendererPackageName: zv.rendererPackageName,
            rendererConfig: zv.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: T.ReactCurrentDispatcher,
            findHostInstanceByFiber: function(d) {
                return d = $d(d), d === null ? null : d.stateNode;
            },
            findFiberByHostInstance: zv.findFiberByHostInstance || W$,
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
        };
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
            var Y_ = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!Y_.isDisabled && Y_.supportsFiber) try {
                Zt = Y_.inject($$), yt = Y_;
            } catch  {}
        }
        return aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = H$, aa.createPortal = function(d, p) {
            var S = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
            if (!_C(p)) throw Error(n(200));
            return V$(d, p, null, S);
        }, aa.createRoot = function(d, p) {
            if (!_C(d)) throw Error(n(299));
            var S = !1, I = "", F = sD;
            return p != null && (p.unstable_strictMode === !0 && (S = !0), p.identifierPrefix !== void 0 && (I = p.identifierPrefix), p.onRecoverableError !== void 0 && (F = p.onRecoverableError)), p = xC(d, 1, !1, null, null, S, !1, I, F), d[Ro] = p.current, lf(d.nodeType === 8 ? d.parentNode : d), new wC(p);
        }, aa.findDOMNode = function(d) {
            if (d == null) return null;
            if (d.nodeType === 1) return d;
            var p = d._reactInternals;
            if (p === void 0) throw typeof d.render == "function" ? Error(n(188)) : (d = Object.keys(d).join(","), Error(n(268, d)));
            return d = $d(p), d = d === null ? null : d.stateNode, d;
        }, aa.flushSync = function(d) {
            return gp(d);
        }, aa.hydrate = function(d, p, S) {
            if (!X_(p)) throw Error(n(200));
            return K_(null, d, p, !0, S);
        }, aa.hydrateRoot = function(d, p, S) {
            if (!_C(d)) throw Error(n(405));
            var I = S != null && S.hydratedSources || null, F = !1, V = "", ie = sD;
            if (S != null && (S.unstable_strictMode === !0 && (F = !0), S.identifierPrefix !== void 0 && (V = S.identifierPrefix), S.onRecoverableError !== void 0 && (ie = S.onRecoverableError)), p = rD(p, null, d, 1, S ?? null, F, !1, V, ie), d[Ro] = p.current, lf(d), I) for(d = 0; d < I.length; d++)S = I[d], F = S._getVersion, F = F(S._source), p.mutableSourceEagerHydrationData == null ? p.mutableSourceEagerHydrationData = [
                S,
                F
            ] : p.mutableSourceEagerHydrationData.push(S, F);
            return new G_(p);
        }, aa.render = function(d, p, S) {
            if (!X_(p)) throw Error(n(200));
            return K_(null, d, p, !1, S);
        }, aa.unmountComponentAtNode = function(d) {
            if (!X_(d)) throw Error(n(40));
            return d._reactRootContainer ? (gp(function() {
                K_(null, null, d, !1, function() {
                    d._reactRootContainer = null, d[Ro] = null;
                });
            }), !0) : !1;
        }, aa.unstable_batchedUpdates = hC, aa.unstable_renderSubtreeIntoContainer = function(d, p, S, I) {
            if (!X_(S)) throw Error(n(200));
            if (d == null || d._reactInternals === void 0) throw Error(n(38));
            return K_(d, p, S, !1, I);
        }, aa.version = "18.3.1-next-f1338f8080-20240426", aa;
    }
    var DD;
    function PB() {
        if (DD) return DC.exports;
        DD = 1;
        function t() {
            if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t);
            } catch (e) {
                console.error(e);
            }
        }
        return t(), DC.exports = CX(), DC.exports;
    }
    var vT = PB();
    const px = typeof window < "u" ? J.useLayoutEffect : J.useEffect;
    function jC(t) {
        const e = J.useRef({
            value: t,
            prev: null
        }), n = e.current.value;
        return t !== n && (e.current = {
            value: t,
            prev: n
        }), e.current.prev;
    }
    function RX(t, e, n = {}, r = {}) {
        const i = J.useRef(typeof IntersectionObserver == "function"), s = J.useRef(null);
        return J.useEffect(()=>{
            if (!(!t.current || !i.current || r.disabled)) return s.current = new IntersectionObserver(([o])=>{
                e(o);
            }, n), s.current.observe(t.current), ()=>{
                var o;
                (o = s.current) == null || o.disconnect();
            };
        }, [
            e,
            n,
            r.disabled,
            t
        ]), s.current;
    }
    function IX(t) {
        const e = J.useRef(null);
        return J.useImperativeHandle(t, ()=>e.current, []), e;
    }
    function AX(t, e) {
        const n = Il(), [r, i] = J.useState(!1), s = J.useRef(!1), o = IX(e), { activeProps: a = ()=>({
                className: "active"
            }), inactiveProps: l = ()=>({}), activeOptions: c, to: u, preload: f, preloadDelay: h, hashScrollIntoView: m, replace: v, startTransition: _, resetScroll: w, viewTransition: b, children: M, target: E, disabled: T, style: P, className: A, onClick: O, onFocus: D, onMouseEnter: R, onMouseLeave: N, onTouchStart: k, ignoreBlocker: U, ...B } = t, { params: j, search: K, hash: q, state: ee, mask: W, reloadDocument: Z, ...$ } = B, H = J.useMemo(()=>{
            try {
                return new URL(`${u}`), "external";
            } catch  {}
            return "internal";
        }, [
            u
        ]), se = co({
            select: (ae)=>ae.location.search,
            structuralSharing: !0
        });
        t = {
            from: dh({
                strict: !1,
                select: (ae)=>ae.pathname
            }),
            ...t
        };
        const ne = J.useMemo(()=>n.buildLocation(t), [
            n,
            t,
            se
        ]), ue = J.useMemo(()=>t.reloadDocument ? !1 : f ?? n.options.defaultPreload, [
            n.options.defaultPreload,
            f,
            t.reloadDocument
        ]), ge = h ?? n.options.defaultPreloadDelay ?? 0, ye = co({
            select: (ae)=>{
                if (c?.exact) {
                    if (!jG(ae.location.pathname, ne.pathname, n.basepath)) return !1;
                } else {
                    const X = xE(ae.location.pathname, n.basepath).split("/");
                    if (!xE(ne.pathname, n.basepath).split("/").every((pe, me)=>pe === X[me])) return !1;
                }
                return (c?.includeSearch ?? !0) && !W0(ae.location.search, ne.search, {
                    partial: !c?.exact,
                    ignoreUndefined: !c?.explicitUndefined
                }) ? !1 : c?.includeHash ? ae.location.hash === ne.hash : !0;
            }
        }), _e = J.useCallback(()=>{
            n.preloadRoute(t).catch((ae)=>{
                console.warn(ae), console.warn(OG);
            });
        }, [
            t,
            n
        ]), Te = J.useCallback((ae)=>{
            ae?.isIntersecting && _e();
        }, [
            _e
        ]);
        if (RX(o, Te, {
            rootMargin: "100px"
        }, {
            disabled: !!T || ue !== "viewport"
        }), px(()=>{
            s.current || !T && ue === "render" && (_e(), s.current = !0);
        }, [
            T,
            _e,
            ue
        ]), H === "external") return {
            ...$,
            ref: o,
            type: H,
            href: u,
            ...M && {
                children: M
            },
            ...E && {
                target: E
            },
            ...T && {
                disabled: T
            },
            ...P && {
                style: P
            },
            ...A && {
                className: A
            },
            ...O && {
                onClick: O
            },
            ...D && {
                onFocus: D
            },
            ...R && {
                onMouseEnter: R
            },
            ...N && {
                onMouseLeave: N
            },
            ...k && {
                onTouchStart: k
            }
        };
        const Re = (ae)=>{
            if (!T && !PX(ae) && !ae.defaultPrevented && (!E || E === "_self") && ae.button === 0) {
                ae.preventDefault(), vT.flushSync(()=>{
                    i(!0);
                });
                const X = n.subscribe("onResolved", ()=>{
                    X(), i(!1);
                });
                return n.navigate({
                    ...t,
                    replace: v,
                    resetScroll: w,
                    hashScrollIntoView: m,
                    startTransition: _,
                    viewTransition: b,
                    ignoreBlocker: U
                });
            }
        }, Fe = (ae)=>{
            T || ue && _e();
        }, be = Fe, Me = (ae)=>{
            if (T) return;
            const X = ae.target || {};
            if (ue) {
                if (X.preloadTimeout) return;
                X.preloadTimeout = setTimeout(()=>{
                    X.preloadTimeout = null, _e();
                }, ge);
            }
        }, oe = (ae)=>{
            if (T) return;
            const X = ae.target || {};
            X.preloadTimeout && (clearTimeout(X.preloadTimeout), X.preloadTimeout = null);
        }, Ye = (ae)=>(X)=>{
                var G;
                (G = X.persist) == null || G.call(X), ae.filter(Boolean).forEach((he)=>{
                    X.defaultPrevented || he(X);
                });
            }, Be = ye ? Xp(a, {}) ?? {} : {}, nt = ye ? {} : Xp(l, {}), de = [
            A,
            Be.className,
            nt.className
        ].filter(Boolean).join(" "), ce = {
            ...P,
            ...Be.style,
            ...nt.style
        };
        return {
            ...$,
            ...Be,
            ...nt,
            href: T ? void 0 : ne.maskedLocation ? n.history.createHref(ne.maskedLocation.href) : n.history.createHref(ne.href),
            ref: o,
            onClick: Ye([
                O,
                Re
            ]),
            onFocus: Ye([
                D,
                Fe
            ]),
            onMouseEnter: Ye([
                R,
                Me
            ]),
            onMouseLeave: Ye([
                N,
                oe
            ]),
            onTouchStart: Ye([
                k,
                be
            ]),
            disabled: !!T,
            target: E,
            ...Object.keys(ce).length && {
                style: ce
            },
            ...de && {
                className: de
            },
            ...T && {
                role: "link",
                "aria-disabled": !0
            },
            ...ye && {
                "data-status": "active",
                "aria-current": "page"
            },
            ...r && {
                "data-transitioning": "transitioning"
            }
        };
    }
    function kB(t) {
        return J.forwardRef(function(n, r) {
            return x.jsx(NX, {
                ...n,
                _asChild: t,
                ref: r
            });
        });
    }
    const NX = J.forwardRef((t, e)=>{
        const { _asChild: n, ...r } = t, { type: i, ref: s, ...o } = AX(r, e), a = typeof r.children == "function" ? r.children({
            isActive: o["data-status"] === "active"
        }) : r.children;
        return typeof n > "u" && delete o.disabled, J.createElement(n || "a", {
            ...o,
            ref: s
        }, a);
    });
    function PX(t) {
        return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
    }
    function kX() {
        const t = Il(), e = J.useRef({
            router: t,
            mounted: !1
        }), n = co({
            select: ({ isLoading: f })=>f
        }), [r, i] = J.useState(!1), s = co({
            select: (f)=>f.matches.some((h)=>h.status === "pending"),
            structuralSharing: !0
        }), o = jC(n), a = n || r || s, l = jC(a), c = n || s, u = jC(c);
        return t.isServer || (t.startReactTransition = (f)=>{
            i(!0), J.startTransition(()=>{
                f(), i(!1);
            });
        }), J.useEffect(()=>{
            const f = t.history.subscribe(t.load), h = t.buildLocation({
                to: t.latestLocation.pathname,
                search: !0,
                params: !0,
                hash: !0,
                state: !0,
                _includeValidateSearch: !0
            });
            return Kp(t.latestLocation.href) !== Kp(h.href) && t.commitLocation({
                ...h,
                replace: !0
            }), ()=>{
                f();
            };
        }, [
            t,
            t.history
        ]), px(()=>{
            if (typeof window < "u" && t.clientSsr || e.current.router === t && e.current.mounted) return;
            e.current = {
                router: t,
                mounted: !0
            }, (async ()=>{
                try {
                    await t.load();
                } catch (h) {
                    console.error(h);
                }
            })();
        }, [
            t
        ]), px(()=>{
            o && !n && t.emit({
                type: "onLoad",
                ...V0(t.state)
            });
        }, [
            o,
            t,
            n
        ]), px(()=>{
            u && !c && t.emit({
                type: "onBeforeRouteMount",
                ...V0(t.state)
            });
        }, [
            c,
            u,
            t
        ]), px(()=>{
            l && !a && (t.emit({
                type: "onResolved",
                ...V0(t.state)
            }), t.__store.setState((f)=>({
                    ...f,
                    status: "idle",
                    resolvedLocation: f.location
                })));
        }, [
            a,
            l,
            t
        ]), null;
    }
    function OX() {
        const t = Il(), e = t.options.defaultPendingComponent ? x.jsx(t.options.defaultPendingComponent, {}) : null, n = t.isServer || typeof document < "u" && t.clientSsr ? SS : J.Suspense, r = x.jsxs(n, {
            fallback: e,
            children: [
                x.jsx(kX, {}),
                x.jsx(DX, {})
            ]
        });
        return t.options.InnerWrap ? x.jsx(t.options.InnerWrap, {
            children: r
        }) : r;
    }
    function DX() {
        const t = co({
            select: (n)=>{
                var r;
                return (r = n.matches[0]) == null ? void 0 : r.id;
            }
        }), e = co({
            select: (n)=>n.loadedAt
        });
        return x.jsx(yT.Provider, {
            value: t,
            children: x.jsx(fP, {
                getResetKey: ()=>e,
                errorComponent: gT,
                onCatch: (n)=>{
                    n.message || n.toString();
                },
                children: t ? x.jsx(NB, {
                    matchId: t
                }) : null
            })
        });
    }
    function LX() {
        const t = Il();
        return co({
            select: (e)=>{
                var n;
                return [
                    e.location.href,
                    (n = e.resolvedLocation) == null ? void 0 : n.href,
                    e.status
                ];
            },
            structuralSharing: !0
        }), J.useCallback((e)=>{
            const { pending: n, caseSensitive: r, fuzzy: i, includeSearch: s, ...o } = e;
            return t.matchRoute(o, {
                pending: n,
                caseSensitive: r,
                fuzzy: i,
                includeSearch: s
            });
        }, [
            t
        ]);
    }
    const OB = [
        "component",
        "errorComponent",
        "pendingComponent",
        "notFoundComponent"
    ];
    function FX(t) {
        var e;
        for (const n of OB)if ((e = t.options[n]) != null && e.preload) return !0;
        return !1;
    }
    function BC(t, e) {
        if (t == null) return {};
        if ("~standard" in t) {
            const n = t["~standard"].validate(e);
            if (n instanceof Promise) throw new EE("Async validation not supported");
            if (n.issues) throw new EE(JSON.stringify(n.issues, void 0, 2), {
                cause: n
            });
            return n.value;
        }
        return "parse" in t ? t.parse(e) : typeof t == "function" ? t(e) : {};
    }
    function jX(t) {
        return new BX(t);
    }
    class BX {
        constructor(e){
            this.tempLocationKey = `${Math.round(Math.random() * 1e7)}`, this.resetNextScroll = !0, this.shouldViewTransition = void 0, this.isViewTransitionTypesSupported = void 0, this.subscribers = new Set, this.isScrollRestoring = !1, this.isScrollRestorationSetup = !1, this.startReactTransition = (n)=>n(), this.update = (n)=>{
                var r;
                n.notFoundRoute && console.warn("The notFoundRoute API is deprecated and will be removed in the next major version. See https://tanstack.com/router/v1/docs/framework/react/guide/not-found-errors#migrating-from-notfoundroute for more info.");
                const i = this.options;
                this.options = {
                    ...this.options,
                    ...n
                }, this.isServer = this.options.isServer ?? typeof document > "u", this.pathParamsDecodeCharMap = this.options.pathParamsAllowedCharacters ? new Map(this.options.pathParamsAllowedCharacters.map((s)=>[
                        encodeURIComponent(s),
                        s
                    ])) : void 0, (!this.basepath || n.basepath && n.basepath !== i.basepath) && (n.basepath === void 0 || n.basepath === "" || n.basepath === "/" ? this.basepath = "/" : this.basepath = `/${FG(n.basepath)}`), (!this.history || this.options.history && this.options.history !== this.history) && (this.history = this.options.history ?? (this.isServer ? KG({
                    initialEntries: [
                        this.basepath || "/"
                    ]
                }) : XG()), this.latestLocation = this.parseLocation()), this.options.routeTree !== this.routeTree && (this.routeTree = this.options.routeTree, this.buildRouteTree()), this.__store || (this.__store = new CN(zX(this.latestLocation), {
                    onUpdate: ()=>{
                        this.__store.state = {
                            ...this.state,
                            cachedMatches: this.state.cachedMatches.filter((s)=>![
                                    "redirected"
                                ].includes(s.status))
                        };
                    }
                }), wX(this)), typeof window < "u" && "CSS" in window && typeof ((r = window.CSS) == null ? void 0 : r.supports) == "function" && (this.isViewTransitionTypesSupported = window.CSS.supports("selector(:active-view-transition-type(a)"));
            }, this.buildRouteTree = ()=>{
                this.routesById = {}, this.routesByPath = {};
                const n = this.options.notFoundRoute;
                n && (n.init({
                    originalIndex: 99999999999,
                    defaultSsr: this.options.defaultSsr
                }), this.routesById[n.id] = n);
                const r = (o)=>{
                    o.forEach((a, l)=>{
                        a.init({
                            originalIndex: l,
                            defaultSsr: this.options.defaultSsr
                        });
                        const c = this.routesById[a.id];
                        if (hc(!c, `Duplicate routes found with id: ${String(a.id)}`), this.routesById[a.id] = a, !a.isRoot && a.path) {
                            const f = Kp(a.fullPath);
                            (!this.routesByPath[f] || a.fullPath.endsWith("/")) && (this.routesByPath[f] = a);
                        }
                        const u = a.children;
                        u?.length && r(u);
                    });
                };
                r([
                    this.routeTree
                ]);
                const i = [];
                Object.values(this.routesById).forEach((o, a)=>{
                    var l;
                    if (o.isRoot || !o.path) return;
                    const c = uP(o.fullPath), u = sy(c);
                    for(; u.length > 1 && ((l = u[0]) == null ? void 0 : l.value) === "/";)u.shift();
                    const f = u.map((h)=>h.value === "/" ? .75 : h.type === "param" ? .5 : h.type === "wildcard" ? .25 : 1);
                    i.push({
                        child: o,
                        trimmed: c,
                        parsed: u,
                        index: a,
                        scores: f
                    });
                }), this.flatRoutes = i.sort((o, a)=>{
                    const l = Math.min(o.scores.length, a.scores.length);
                    for(let c = 0; c < l; c++)if (o.scores[c] !== a.scores[c]) return a.scores[c] - o.scores[c];
                    if (o.scores.length !== a.scores.length) return a.scores.length - o.scores.length;
                    for(let c = 0; c < l; c++)if (o.parsed[c].value !== a.parsed[c].value) return o.parsed[c].value > a.parsed[c].value ? 1 : -1;
                    return o.index - a.index;
                }).map((o, a)=>(o.child.rank = a, o.child));
            }, this.subscribe = (n, r)=>{
                const i = {
                    eventType: n,
                    fn: r
                };
                return this.subscribers.add(i), ()=>{
                    this.subscribers.delete(i);
                };
            }, this.emit = (n)=>{
                this.subscribers.forEach((r)=>{
                    r.eventType === n.type && r.fn(n);
                });
            }, this.parseLocation = (n, r)=>{
                const i = ({ pathname: l, search: c, hash: u, state: f })=>{
                    const h = this.options.parseSearch(c), m = this.options.stringifySearch(h);
                    return {
                        pathname: l,
                        searchStr: m,
                        search: vl(n?.search, h),
                        hash: u.split("#").reverse()[0] ?? "",
                        href: `${l}${m}${u}`,
                        state: vl(n?.state, f)
                    };
                }, s = i(r ?? this.history.location), { __tempLocation: o, __tempKey: a } = s.state;
                if (o && (!a || a === this.tempLocationKey)) {
                    const l = i(o);
                    return l.state.key = s.state.key, delete l.state.__tempLocation, {
                        ...l,
                        maskedLocation: s
                    };
                }
                return s;
            }, this.resolvePathWithBase = (n, r)=>BG({
                    basepath: this.basepath,
                    base: n,
                    to: mT(r),
                    trailingSlash: this.options.trailingSlash,
                    caseSensitive: this.options.caseSensitive
                }), this.getMatchedRoutes = (n, r)=>{
                let i = {};
                const s = Kp(n.pathname), o = (u)=>Q_(this.basepath, s, {
                        to: u.fullPath,
                        caseSensitive: u.options.caseSensitive ?? this.options.caseSensitive,
                        fuzzy: !0
                    });
                let a = r?.to !== void 0 ? this.routesByPath[r.to] : void 0;
                a ? i = o(a) : a = this.flatRoutes.find((u)=>{
                    const f = o(u);
                    return f ? (i = f, !0) : !1;
                });
                let l = a || this.routesById[pa];
                const c = [
                    l
                ];
                for(; l.parentRoute;)l = l.parentRoute, c.unshift(l);
                return {
                    matchedRoutes: c,
                    routeParams: i,
                    foundRoute: a
                };
            }, this.cancelMatch = (n)=>{
                const r = this.getMatch(n);
                r && (r.abortController.abort(), clearTimeout(r.pendingTimeout));
            }, this.cancelMatches = ()=>{
                var n;
                (n = this.state.pendingMatches) == null || n.forEach((r)=>{
                    this.cancelMatch(r.id);
                });
            }, this.buildLocation = (n)=>{
                const r = (s = {}, o)=>{
                    var a, l, c, u, f, h;
                    const m = s._fromLocation ? this.matchRoutes(s._fromLocation, {
                        _buildLocation: !0
                    }) : this.state.matches, v = s.from != null ? m.find((k)=>Q_(this.basepath, Kp(k.pathname), {
                            to: s.from,
                            caseSensitive: !1,
                            fuzzy: !1
                        })) : void 0, _ = v?.pathname || this.latestLocation.pathname;
                    hc(s.from == null || v != null, "Could not find match for from: " + s.from);
                    const w = (a = this.state.pendingMatches) != null && a.length ? (l = Dx(this.state.pendingMatches)) == null ? void 0 : l.search : ((c = Dx(m)) == null ? void 0 : c.search) || this.latestLocation.search, b = o?.matchedRoutes.filter((k)=>m.find((U)=>U.routeId === k.id));
                    let M;
                    if (s.to) {
                        const k = v?.fullPath || this.latestLocation.pathname;
                        M = this.resolvePathWithBase(k, `${s.to}`);
                    } else {
                        const k = this.routesById[(u = b?.find((U)=>{
                            const B = J_({
                                path: U.fullPath,
                                params: o?.routeParams ?? {},
                                decodeCharMap: this.pathParamsDecodeCharMap
                            }).interpolatedPath;
                            return Sd([
                                this.basepath,
                                B
                            ]) === _;
                        })) == null ? void 0 : u.id];
                        M = this.resolvePathWithBase(_, k?.to ?? _);
                    }
                    const E = {
                        ...(f = Dx(m)) == null ? void 0 : f.params
                    };
                    let T = (s.params ?? !0) === !0 ? E : {
                        ...E,
                        ...Xp(s.params, E)
                    };
                    Object.keys(T).length > 0 && o?.matchedRoutes.map((k)=>{
                        var U;
                        return ((U = k.options.params) == null ? void 0 : U.stringify) ?? k.options.stringifyParams;
                    }).filter(Boolean).forEach((k)=>{
                        T = {
                            ...T,
                            ...k(T)
                        };
                    }), M = J_({
                        path: M,
                        params: T ?? {},
                        leaveWildcards: !1,
                        leaveParams: n.leaveParams,
                        decodeCharMap: this.pathParamsDecodeCharMap
                    }).interpolatedPath;
                    let P = w;
                    if (n._includeValidateSearch && ((h = this.options.search) != null && h.strict)) {
                        let k = {};
                        o?.matchedRoutes.forEach((U)=>{
                            try {
                                U.options.validateSearch && (k = {
                                    ...k,
                                    ...BC(U.options.validateSearch, {
                                        ...k,
                                        ...P
                                    }) ?? {}
                                });
                            } catch  {}
                        }), P = k;
                    }
                    P = ((k)=>{
                        const U = o?.matchedRoutes.reduce((K, q)=>{
                            var ee;
                            const W = [];
                            if ("search" in q.options) (ee = q.options.search) != null && ee.middlewares && W.push(...q.options.search.middlewares);
                            else if (q.options.preSearchFilters || q.options.postSearchFilters) {
                                const Z = ({ search: $, next: H })=>{
                                    let se = $;
                                    "preSearchFilters" in q.options && q.options.preSearchFilters && (se = q.options.preSearchFilters.reduce((ne, ue)=>ue(ne), $));
                                    const le = H(se);
                                    return "postSearchFilters" in q.options && q.options.postSearchFilters ? q.options.postSearchFilters.reduce((ne, ue)=>ue(ne), le) : le;
                                };
                                W.push(Z);
                            }
                            if (n._includeValidateSearch && q.options.validateSearch) {
                                const Z = ({ search: $, next: H })=>{
                                    const se = H($);
                                    try {
                                        return {
                                            ...se,
                                            ...BC(q.options.validateSearch, se) ?? {}
                                        };
                                    } catch  {
                                        return se;
                                    }
                                };
                                W.push(Z);
                            }
                            return K.concat(W);
                        }, []) ?? [], B = ({ search: K })=>s.search ? s.search === !0 ? K : Xp(s.search, K) : {};
                        U.push(B);
                        const j = (K, q)=>{
                            if (K >= U.length) return q;
                            const ee = U[K];
                            return ee({
                                search: q,
                                next: (Z)=>j(K + 1, Z)
                            });
                        };
                        return j(0, k);
                    })(P), P = vl(w, P);
                    const O = this.options.stringifySearch(P), D = s.hash === !0 ? this.latestLocation.hash : s.hash ? Xp(s.hash, this.latestLocation.hash) : void 0, R = D ? `#${D}` : "";
                    let N = s.state === !0 ? this.latestLocation.state : s.state ? Xp(s.state, this.latestLocation.state) : {};
                    return N = vl(this.latestLocation.state, N), {
                        pathname: M,
                        search: P,
                        searchStr: O,
                        state: N,
                        hash: D ?? "",
                        href: `${M}${O}${R}`,
                        unmaskOnReload: s.unmaskOnReload
                    };
                }, i = (s = {}, o)=>{
                    var a;
                    const l = r(s);
                    let c = o ? r(o) : void 0;
                    if (!c) {
                        let h = {};
                        const m = (a = this.options.routeMasks) == null ? void 0 : a.find((v)=>{
                            const _ = Q_(this.basepath, l.pathname, {
                                to: v.from,
                                caseSensitive: !1,
                                fuzzy: !1
                            });
                            return _ ? (h = _, !0) : !1;
                        });
                        if (m) {
                            const { from: v, ..._ } = m;
                            o = {
                                ...MN(n, [
                                    "from"
                                ]),
                                ..._,
                                params: h
                            }, c = r(o);
                        }
                    }
                    const u = this.getMatchedRoutes(l, s), f = r(s, u);
                    if (c) {
                        const h = this.getMatchedRoutes(c, o), m = r(o, h);
                        f.maskedLocation = m;
                    }
                    return f;
                };
                return n.mask ? i(n, {
                    ...MN(n, [
                        "from"
                    ]),
                    ...n.mask
                }) : i(n);
            }, this.commitLocation = ({ viewTransition: n, ignoreBlocker: r, ...i })=>{
                const s = ()=>{
                    const l = [
                        "key",
                        "__TSR_index",
                        "__hashScrollIntoViewOptions"
                    ];
                    l.forEach((u)=>{
                        i.state[u] = this.latestLocation.state[u];
                    });
                    const c = W0(i.state, this.latestLocation.state);
                    return l.forEach((u)=>{
                        delete i.state[u];
                    }), c;
                }, o = this.latestLocation.href === i.href, a = this.commitLocationPromise;
                if (this.commitLocationPromise = x0(()=>{
                    a?.resolve();
                }), o && s()) this.load();
                else {
                    let { maskedLocation: l, hashScrollIntoView: c, ...u } = i;
                    l && (u = {
                        ...l,
                        state: {
                            ...l.state,
                            __tempKey: void 0,
                            __tempLocation: {
                                ...u,
                                search: u.searchStr,
                                state: {
                                    ...u.state,
                                    __tempKey: void 0,
                                    __tempLocation: void 0,
                                    key: void 0
                                }
                            }
                        }
                    }, (u.unmaskOnReload ?? this.options.unmaskOnReload ?? !1) && (u.state.__tempKey = this.tempLocationKey)), u.state.__hashScrollIntoViewOptions = c ?? this.options.defaultHashScrollIntoView ?? !0, this.shouldViewTransition = n, this.history[i.replace ? "replace" : "push"](u.href, u.state, {
                        ignoreBlocker: r
                    });
                }
                return this.resetNextScroll = i.resetScroll ?? !0, this.history.subscribers.size || this.load(), this.commitLocationPromise;
            }, this.buildAndCommitLocation = ({ replace: n, resetScroll: r, hashScrollIntoView: i, viewTransition: s, ignoreBlocker: o, href: a, ...l } = {})=>{
                if (a) {
                    const u = this.history.location.state.__TSR_index, f = lb(a, {
                        __TSR_index: n ? u : u + 1
                    });
                    l.to = f.pathname, l.search = this.options.parseSearch(f.search), l.hash = f.hash.slice(1);
                }
                const c = this.buildLocation({
                    ...l,
                    _includeValidateSearch: !0
                });
                return this.commitLocation({
                    ...c,
                    viewTransition: s,
                    replace: n,
                    resetScroll: r,
                    hashScrollIntoView: i,
                    ignoreBlocker: o
                });
            }, this.navigate = ({ to: n, reloadDocument: r, href: i, ...s })=>{
                if (r) {
                    if (!i) {
                        const o = this.buildLocation({
                            to: n,
                            ...s
                        });
                        i = this.history.createHref(o.href);
                    }
                    s.replace ? window.location.replace(i) : window.location.href = i;
                    return;
                }
                return this.buildAndCommitLocation({
                    ...s,
                    href: i,
                    to: n
                });
            }, this.load = async (n)=>{
                this.latestLocation = this.parseLocation(this.latestLocation);
                let r, i, s;
                for(s = new Promise((o)=>{
                    this.startReactTransition(async ()=>{
                        var a;
                        try {
                            const l = this.latestLocation, c = this.state.resolvedLocation;
                            this.cancelMatches();
                            let u;
                            NC(()=>{
                                u = this.matchRoutes(l), this.__store.setState((f)=>({
                                        ...f,
                                        status: "pending",
                                        isLoading: !0,
                                        location: l,
                                        pendingMatches: u,
                                        cachedMatches: f.cachedMatches.filter((h)=>!u.find((m)=>m.id === h.id))
                                    }));
                            }), this.state.redirect || this.emit({
                                type: "onBeforeNavigate",
                                ...V0({
                                    resolvedLocation: c,
                                    location: l
                                })
                            }), this.emit({
                                type: "onBeforeLoad",
                                ...V0({
                                    resolvedLocation: c,
                                    location: l
                                })
                            }), await this.loadMatches({
                                sync: n?.sync,
                                matches: u,
                                location: l,
                                onReady: async ()=>{
                                    this.startViewTransition(async ()=>{
                                        let f, h, m;
                                        NC(()=>{
                                            this.__store.setState((v)=>{
                                                const _ = v.matches, w = v.pendingMatches || v.matches;
                                                return f = _.filter((b)=>!w.find((M)=>M.id === b.id)), h = w.filter((b)=>!_.find((M)=>M.id === b.id)), m = _.filter((b)=>w.find((M)=>M.id === b.id)), {
                                                    ...v,
                                                    isLoading: !1,
                                                    loadedAt: Date.now(),
                                                    matches: w,
                                                    pendingMatches: void 0,
                                                    cachedMatches: [
                                                        ...v.cachedMatches,
                                                        ...f.filter((b)=>b.status !== "error")
                                                    ]
                                                };
                                            }), this.clearExpiredCache();
                                        }), [
                                            [
                                                f,
                                                "onLeave"
                                            ],
                                            [
                                                h,
                                                "onEnter"
                                            ],
                                            [
                                                m,
                                                "onStay"
                                            ]
                                        ].forEach(([v, _])=>{
                                            v.forEach((w)=>{
                                                var b, M;
                                                (M = (b = this.looseRoutesById[w.routeId].options)[_]) == null || M.call(b, w);
                                            });
                                        });
                                    });
                                }
                            });
                        } catch (l) {
                            kC(l) ? (r = l, this.isServer || this.navigate({
                                ...r,
                                replace: !0,
                                ignoreBlocker: !0
                            })) : _l(l) && (i = l), this.__store.setState((c)=>({
                                    ...c,
                                    statusCode: r ? r.statusCode : i ? 404 : c.matches.some((u)=>u.status === "error") ? 500 : 200,
                                    redirect: r
                                }));
                        }
                        this.latestLoadPromise === s && ((a = this.commitLocationPromise) == null || a.resolve(), this.latestLoadPromise = void 0, this.commitLocationPromise = void 0), o();
                    });
                }), this.latestLoadPromise = s, await s; this.latestLoadPromise && s !== this.latestLoadPromise;)await this.latestLoadPromise;
                this.hasNotFoundMatch() && this.__store.setState((o)=>({
                        ...o,
                        statusCode: 404
                    }));
            }, this.startViewTransition = (n)=>{
                const r = this.shouldViewTransition ?? this.options.defaultViewTransition;
                if (delete this.shouldViewTransition, r && typeof document < "u" && "startViewTransition" in document && typeof document.startViewTransition == "function") {
                    let i;
                    typeof r == "object" && this.isViewTransitionTypesSupported ? i = {
                        update: n,
                        types: r.types
                    } : i = n, document.startViewTransition(i);
                } else n();
            }, this.updateMatch = (n, r)=>{
                var i;
                let s;
                const o = (i = this.state.pendingMatches) == null ? void 0 : i.find((u)=>u.id === n), a = this.state.matches.find((u)=>u.id === n), l = this.state.cachedMatches.find((u)=>u.id === n), c = o ? "pendingMatches" : a ? "matches" : l ? "cachedMatches" : "";
                return c && this.__store.setState((u)=>{
                    var f;
                    return {
                        ...u,
                        [c]: (f = u[c]) == null ? void 0 : f.map((h)=>h.id === n ? s = r(h) : h)
                    };
                }), s;
            }, this.getMatch = (n)=>[
                    ...this.state.cachedMatches,
                    ...this.state.pendingMatches ?? [],
                    ...this.state.matches
                ].find((r)=>r.id === n), this.loadMatches = async ({ location: n, matches: r, preload: i, onReady: s, updateMatch: o = this.updateMatch, sync: a })=>{
                let l, c = !1;
                const u = async ()=>{
                    c || (c = !0, await s?.());
                }, f = (m)=>!!(i && !this.state.matches.find((v)=>v.id === m));
                !this.isServer && !this.state.matches.length && u();
                const h = (m, v)=>{
                    var _, w, b, M;
                    if (kC(v) && !v.reloadDocument) throw v;
                    if (Lp(v) || _l(v)) {
                        if (o(m.id, (E)=>({
                                ...E,
                                status: Lp(v) ? "redirected" : _l(v) ? "notFound" : "error",
                                isFetching: !1,
                                error: v,
                                beforeLoadPromise: void 0,
                                loaderPromise: void 0
                            })), v.routeId || (v.routeId = m.routeId), (_ = m.beforeLoadPromise) == null || _.resolve(), (w = m.loaderPromise) == null || w.resolve(), (b = m.loadPromise) == null || b.resolve(), Lp(v)) throw c = !0, v = this.resolveRedirect({
                            ...v,
                            _fromLocation: n
                        }), v;
                        if (_l(v)) throw this._handleNotFound(r, v, {
                            updateMatch: o
                        }), (M = this.serverSsr) == null || M.onMatchSettled({
                            router: this,
                            match: this.getMatch(m.id)
                        }), v;
                    }
                };
                try {
                    await new Promise((m, v)=>{
                        (async ()=>{
                            var _, w, b;
                            try {
                                const M = (P, A, O)=>{
                                    var D, R;
                                    const { id: N, routeId: k } = r[P], U = this.looseRoutesById[k];
                                    if (A instanceof Promise) throw A;
                                    A.routerCode = O, l = l ?? P, h(this.getMatch(N), A);
                                    try {
                                        (R = (D = U.options).onError) == null || R.call(D, A);
                                    } catch (B) {
                                        A = B, h(this.getMatch(N), A);
                                    }
                                    o(N, (B)=>{
                                        var j, K;
                                        return (j = B.beforeLoadPromise) == null || j.resolve(), (K = B.loadPromise) == null || K.resolve(), {
                                            ...B,
                                            error: A,
                                            status: "error",
                                            isFetching: !1,
                                            updatedAt: Date.now(),
                                            abortController: new AbortController,
                                            beforeLoadPromise: void 0
                                        };
                                    });
                                };
                                for (const [P, { id: A, routeId: O }] of r.entries()){
                                    const D = this.getMatch(A), R = (_ = r[P - 1]) == null ? void 0 : _.id, N = this.looseRoutesById[O], k = N.options.pendingMs ?? this.options.defaultPendingMs, U = !!(s && !this.isServer && !f(A) && (N.options.loader || N.options.beforeLoad) && typeof k == "number" && k !== 1 / 0 && (N.options.pendingComponent ?? this.options.defaultPendingComponent));
                                    let B = !0;
                                    if ((D.beforeLoadPromise || D.loaderPromise) && (U && setTimeout(()=>{
                                        try {
                                            u();
                                        } catch  {}
                                    }, k), await D.beforeLoadPromise, B = this.getMatch(A).status !== "success"), B) {
                                        try {
                                            o(A, (ge)=>({
                                                    ...ge,
                                                    loadPromise: x0(()=>{
                                                        var ye;
                                                        (ye = ge.loadPromise) == null || ye.resolve();
                                                    }),
                                                    beforeLoadPromise: x0()
                                                }));
                                            const j = new AbortController;
                                            let K;
                                            U && (K = setTimeout(()=>{
                                                try {
                                                    u();
                                                } catch  {}
                                            }, k));
                                            const { paramsError: q, searchError: ee } = this.getMatch(A);
                                            q && M(P, q, "PARSE_PARAMS"), ee && M(P, ee, "VALIDATE_SEARCH");
                                            const W = ()=>R ? this.getMatch(R).context : this.options.context ?? {};
                                            o(A, (ge)=>({
                                                    ...ge,
                                                    isFetching: "beforeLoad",
                                                    fetchCount: ge.fetchCount + 1,
                                                    abortController: j,
                                                    pendingTimeout: K,
                                                    context: {
                                                        ...W(),
                                                        ...ge.__routeContext
                                                    }
                                                }));
                                            const { search: Z, params: $, context: H, cause: se } = this.getMatch(A), le = f(A), ne = {
                                                search: Z,
                                                abortController: j,
                                                params: $,
                                                preload: le,
                                                context: H,
                                                location: n,
                                                navigate: (ge)=>this.navigate({
                                                        ...ge,
                                                        _fromLocation: n
                                                    }),
                                                buildLocation: this.buildLocation,
                                                cause: le ? "preload" : se,
                                                matches: r
                                            }, ue = await ((b = (w = N.options).beforeLoad) == null ? void 0 : b.call(w, ne)) ?? {};
                                            (Lp(ue) || _l(ue)) && M(P, ue, "BEFORE_LOAD"), o(A, (ge)=>({
                                                    ...ge,
                                                    __beforeLoadContext: ue,
                                                    context: {
                                                        ...W(),
                                                        ...ge.__routeContext,
                                                        ...ue
                                                    },
                                                    abortController: j
                                                }));
                                        } catch (j) {
                                            M(P, j, "BEFORE_LOAD");
                                        }
                                        o(A, (j)=>{
                                            var K;
                                            return (K = j.beforeLoadPromise) == null || K.resolve(), {
                                                ...j,
                                                beforeLoadPromise: void 0,
                                                isFetching: !1
                                            };
                                        });
                                    }
                                }
                                const E = r.slice(0, l), T = [];
                                E.forEach(({ id: P, routeId: A }, O)=>{
                                    T.push((async ()=>{
                                        const { loaderPromise: D } = this.getMatch(P);
                                        let R = !1, N = !1;
                                        if (D) {
                                            await D;
                                            const k = this.getMatch(P);
                                            k.error && h(k, k.error);
                                        } else {
                                            const k = T[O - 1], U = this.looseRoutesById[A], B = ()=>{
                                                const { params: se, loaderDeps: le, abortController: ne, context: ue, cause: ge } = this.getMatch(P), ye = f(P);
                                                return {
                                                    params: se,
                                                    deps: le,
                                                    preload: !!ye,
                                                    parentMatchPromise: k,
                                                    abortController: ne,
                                                    context: ue,
                                                    location: n,
                                                    navigate: (_e)=>this.navigate({
                                                            ..._e,
                                                            _fromLocation: n
                                                        }),
                                                    cause: ye ? "preload" : ge,
                                                    route: U
                                                };
                                            }, j = Date.now() - this.getMatch(P).updatedAt, K = f(P), q = K ? U.options.preloadStaleTime ?? this.options.defaultPreloadStaleTime ?? 3e4 : U.options.staleTime ?? this.options.defaultStaleTime ?? 0, ee = U.options.shouldReload, W = typeof ee == "function" ? ee(B()) : ee;
                                            o(P, (se)=>({
                                                    ...se,
                                                    loaderPromise: x0(),
                                                    preload: !!K && !this.state.matches.find((le)=>le.id === P)
                                                }));
                                            const Z = async ()=>{
                                                var se, le, ne, ue, ge, ye, _e, Te, Re, Fe, be;
                                                try {
                                                    const Me = async ()=>{
                                                        const oe = this.getMatch(P);
                                                        oe.minPendingPromise && await oe.minPendingPromise;
                                                    };
                                                    try {
                                                        this.loadRouteChunk(U), o(P, (G)=>({
                                                                ...G,
                                                                isFetching: "loader"
                                                            }));
                                                        const oe = await ((le = (se = U.options).loader) == null ? void 0 : le.call(se, B()));
                                                        h(this.getMatch(P), oe), await U._lazyPromise, await Me();
                                                        const Ye = {
                                                            matches: r,
                                                            match: this.getMatch(P),
                                                            params: this.getMatch(P).params,
                                                            loaderData: oe
                                                        }, Be = (ue = (ne = U.options).head) == null ? void 0 : ue.call(ne, Ye), nt = Be?.meta, de = Be?.links, ce = Be?.scripts, ae = (ye = (ge = U.options).scripts) == null ? void 0 : ye.call(ge, Ye), X = (Te = (_e = U.options).headers) == null ? void 0 : Te.call(_e, {
                                                            loaderData: oe
                                                        });
                                                        o(P, (G)=>({
                                                                ...G,
                                                                error: void 0,
                                                                status: "success",
                                                                isFetching: !1,
                                                                updatedAt: Date.now(),
                                                                loaderData: oe,
                                                                meta: nt,
                                                                links: de,
                                                                headScripts: ce,
                                                                headers: X,
                                                                scripts: ae
                                                            }));
                                                    } catch (oe) {
                                                        let Ye = oe;
                                                        await Me(), h(this.getMatch(P), oe);
                                                        try {
                                                            (Fe = (Re = U.options).onError) == null || Fe.call(Re, oe);
                                                        } catch (Be) {
                                                            Ye = Be, h(this.getMatch(P), Be);
                                                        }
                                                        o(P, (Be)=>({
                                                                ...Be,
                                                                error: Ye,
                                                                status: "error",
                                                                isFetching: !1
                                                            }));
                                                    }
                                                    (be = this.serverSsr) == null || be.onMatchSettled({
                                                        router: this,
                                                        match: this.getMatch(P)
                                                    }), await U._componentsPromise;
                                                } catch (Me) {
                                                    o(P, (oe)=>({
                                                            ...oe,
                                                            loaderPromise: void 0
                                                        })), h(this.getMatch(P), Me);
                                                }
                                            }, { status: $, invalid: H } = this.getMatch(P);
                                            R = $ === "success" && (H || (W ?? j > q)), K && U.options.preload === !1 || (R && !a ? (N = !0, (async ()=>{
                                                try {
                                                    await Z();
                                                    const { loaderPromise: se, loadPromise: le } = this.getMatch(P);
                                                    se?.resolve(), le?.resolve(), o(P, (ne)=>({
                                                            ...ne,
                                                            loaderPromise: void 0
                                                        }));
                                                } catch (se) {
                                                    kC(se) && await this.navigate(se);
                                                }
                                            })()) : ($ !== "success" || R && a) && await Z());
                                        }
                                        if (!N) {
                                            const { loaderPromise: k, loadPromise: U } = this.getMatch(P);
                                            k?.resolve(), U?.resolve();
                                        }
                                        return o(P, (k)=>({
                                                ...k,
                                                isFetching: N ? k.isFetching : !1,
                                                loaderPromise: N ? k.loaderPromise : void 0,
                                                invalid: !1
                                            })), this.getMatch(P);
                                    })());
                                }), await Promise.all(T), m();
                            } catch (M) {
                                v(M);
                            }
                        })();
                    }), await u();
                } catch (m) {
                    if (Lp(m) || _l(m)) throw _l(m) && !i && await u(), m;
                }
                return r;
            }, this.invalidate = (n)=>{
                const r = (i)=>{
                    var s;
                    return ((s = n?.filter) == null ? void 0 : s.call(n, i)) ?? !0 ? {
                        ...i,
                        invalid: !0,
                        ...i.status === "error" ? {
                            status: "pending",
                            error: void 0
                        } : {}
                    } : i;
                };
                return this.__store.setState((i)=>{
                    var s;
                    return {
                        ...i,
                        matches: i.matches.map(r),
                        cachedMatches: i.cachedMatches.map(r),
                        pendingMatches: (s = i.pendingMatches) == null ? void 0 : s.map(r)
                    };
                }), this.load({
                    sync: n?.sync
                });
            }, this.resolveRedirect = (n)=>{
                const r = n;
                return r.href || (r.href = this.buildLocation(r).href), r;
            }, this.clearCache = (n)=>{
                const r = n?.filter;
                r !== void 0 ? this.__store.setState((i)=>({
                        ...i,
                        cachedMatches: i.cachedMatches.filter((s)=>!r(s))
                    })) : this.__store.setState((i)=>({
                        ...i,
                        cachedMatches: []
                    }));
            }, this.clearExpiredCache = ()=>{
                const n = (r)=>{
                    const i = this.looseRoutesById[r.routeId];
                    if (!i.options.loader) return !0;
                    const s = (r.preload ? i.options.preloadGcTime ?? this.options.defaultPreloadGcTime : i.options.gcTime ?? this.options.defaultGcTime) ?? 5 * 60 * 1e3;
                    return !(r.status !== "error" && Date.now() - r.updatedAt < s);
                };
                this.clearCache({
                    filter: n
                });
            }, this.loadRouteChunk = (n)=>(n._lazyPromise === void 0 && (n.lazyFn ? n._lazyPromise = n.lazyFn().then((r)=>{
                    const { id: i, ...s } = r.options;
                    Object.assign(n.options, s);
                }) : n._lazyPromise = Promise.resolve()), n._componentsPromise === void 0 && (n._componentsPromise = n._lazyPromise.then(()=>Promise.all(OB.map(async (r)=>{
                        const i = n.options[r];
                        i?.preload && await i.preload();
                    })))), n._componentsPromise), this.preloadRoute = async (n)=>{
                const r = this.buildLocation(n);
                let i = this.matchRoutes(r, {
                    throwOnError: !0,
                    preload: !0,
                    dest: n
                });
                const s = new Set([
                    ...this.state.matches,
                    ...this.state.pendingMatches ?? []
                ].map((a)=>a.id)), o = new Set([
                    ...s,
                    ...this.state.cachedMatches.map((a)=>a.id)
                ]);
                NC(()=>{
                    i.forEach((a)=>{
                        o.has(a.id) || this.__store.setState((l)=>({
                                ...l,
                                cachedMatches: [
                                    ...l.cachedMatches,
                                    a
                                ]
                            }));
                    });
                });
                try {
                    return i = await this.loadMatches({
                        matches: i,
                        location: r,
                        preload: !0,
                        updateMatch: (a, l)=>{
                            s.has(a) ? i = i.map((c)=>c.id === a ? l(c) : c) : this.updateMatch(a, l);
                        }
                    }), i;
                } catch (a) {
                    if (Lp(a)) return a.reloadDocument ? void 0 : await this.preloadRoute({
                        ...a,
                        _fromLocation: r
                    });
                    _l(a) || console.error(a);
                    return;
                }
            }, this.matchRoute = (n, r)=>{
                const i = {
                    ...n,
                    to: n.to ? this.resolvePathWithBase(n.from || "", n.to) : void 0,
                    params: n.params || {},
                    leaveParams: !0
                }, s = this.buildLocation(i);
                if (r?.pending && this.state.status !== "pending") return !1;
                const a = (r?.pending === void 0 ? !this.state.isLoading : r.pending) ? this.latestLocation : this.state.resolvedLocation || this.state.location, l = Q_(this.basepath, a.pathname, {
                    ...r,
                    to: s.pathname
                });
                return !l || n.params && !W0(l, n.params, {
                    partial: !0
                }) ? !1 : l && (r?.includeSearch ?? !0) ? W0(a.search, s.search, {
                    partial: !0
                }) ? l : !1 : l;
            }, this._handleNotFound = (n, r, { updateMatch: i = this.updateMatch } = {})=>{
                const s = Object.fromEntries(n.map((l)=>[
                        l.routeId,
                        l
                    ]));
                let o = (r.global ? this.looseRoutesById[pa] : this.looseRoutesById[r.routeId]) || this.looseRoutesById[pa];
                for(; !o.options.notFoundComponent && !this.options.defaultNotFoundComponent && o.id !== pa;)o = o.parentRoute, hc(o);
                const a = s[o.id];
                hc(a, "Could not find match for route: " + o.id), i(a.id, (l)=>({
                        ...l,
                        status: "notFound",
                        error: r,
                        isFetching: !1
                    })), r.routerCode === "BEFORE_LOAD" && o.parentRoute && (r.routeId = o.parentRoute.id, this._handleNotFound(n, r, {
                    updateMatch: i
                }));
            }, this.hasNotFoundMatch = ()=>this.__store.state.matches.some((n)=>n.status === "notFound" || n.globalNotFound), this.update({
                defaultPreloadDelay: 50,
                defaultPendingMs: 1e3,
                defaultPendingMinMs: 500,
                context: void 0,
                ...e,
                caseSensitive: e.caseSensitive ?? !1,
                notFoundMode: e.notFoundMode ?? "fuzzy",
                stringifySearch: e.stringifySearch ?? HG,
                parseSearch: e.parseSearch ?? qG
            }), typeof document < "u" && (window.__TSR_ROUTER__ = this);
        }
        get state() {
            return this.__store.state;
        }
        get looseRoutesById() {
            return this.routesById;
        }
        matchRoutes(e, n, r) {
            return typeof e == "string" ? this.matchRoutesInternal({
                pathname: e,
                search: n
            }, r) : this.matchRoutesInternal(e, n);
        }
        matchRoutesInternal(e, n) {
            const { foundRoute: r, matchedRoutes: i, routeParams: s } = this.getMatchedRoutes(e, n?.dest);
            let o = !1;
            (r ? r.path !== "/" && s["**"] : Kp(e.pathname)) && (this.options.notFoundRoute ? i.push(this.options.notFoundRoute) : o = !0);
            const a = (()=>{
                if (o) {
                    if (this.options.notFoundMode !== "root") for(let f = i.length - 1; f >= 0; f--){
                        const h = i[f];
                        if (h.children) return h.id;
                    }
                    return pa;
                }
            })(), l = i.map((f)=>{
                var h;
                let m;
                const v = ((h = f.options.params) == null ? void 0 : h.parse) ?? f.options.parseParams;
                if (v) try {
                    const _ = v(s);
                    Object.assign(s, _);
                } catch (_) {
                    if (m = new UX(_.message, {
                        cause: _
                    }), n?.throwOnError) throw m;
                    return m;
                }
            }), c = [], u = (f)=>f?.id ? f.context ?? this.options.context ?? {} : this.options.context ?? {};
            return i.forEach((f, h)=>{
                var m, v;
                const _ = c[h - 1], [w, b, M] = (()=>{
                    const B = _?.search ?? e.search, j = _?._strictSearch ?? {};
                    try {
                        const K = BC(f.options.validateSearch, {
                            ...B
                        }) ?? {};
                        return [
                            {
                                ...B,
                                ...K
                            },
                            {
                                ...j,
                                ...K
                            },
                            void 0
                        ];
                    } catch (K) {
                        let q = K;
                        if (K instanceof EE || (q = new EE(K.message, {
                            cause: K
                        })), n?.throwOnError) throw q;
                        return [
                            B,
                            {},
                            q
                        ];
                    }
                })(), E = ((v = (m = f.options).loaderDeps) == null ? void 0 : v.call(m, {
                    search: w
                })) ?? "", T = E ? JSON.stringify(E) : "", { usedParams: P, interpolatedPath: A } = J_({
                    path: f.fullPath,
                    params: s,
                    decodeCharMap: this.pathParamsDecodeCharMap
                }), O = J_({
                    path: f.id,
                    params: s,
                    leaveWildcards: !0,
                    decodeCharMap: this.pathParamsDecodeCharMap
                }).interpolatedPath + T, D = this.getMatch(O), R = this.state.matches.find((B)=>B.routeId === f.id), N = R ? "stay" : "enter";
                let k;
                if (D) k = {
                    ...D,
                    cause: N,
                    params: R ? vl(R.params, s) : s,
                    _strictParams: P,
                    search: vl(R ? R.search : D.search, w),
                    _strictSearch: b
                };
                else {
                    const B = f.options.loader || f.options.beforeLoad || f.lazyFn || FX(f) ? "pending" : "success";
                    k = {
                        id: O,
                        index: h,
                        routeId: f.id,
                        params: R ? vl(R.params, s) : s,
                        _strictParams: P,
                        pathname: Sd([
                            this.basepath,
                            A
                        ]),
                        updatedAt: Date.now(),
                        search: R ? vl(R.search, w) : w,
                        _strictSearch: b,
                        searchError: void 0,
                        status: B,
                        isFetching: !1,
                        error: void 0,
                        paramsError: l[h],
                        __routeContext: {},
                        __beforeLoadContext: {},
                        context: {},
                        abortController: new AbortController,
                        fetchCount: 0,
                        cause: N,
                        loaderDeps: R ? vl(R.loaderDeps, E) : E,
                        invalid: !1,
                        preload: !1,
                        links: void 0,
                        scripts: void 0,
                        headScripts: void 0,
                        meta: void 0,
                        staticData: f.options.staticData || {},
                        loadPromise: x0(),
                        fullPath: f.fullPath
                    };
                }
                n?.preload || (k.globalNotFound = a === f.id), k.searchError = M;
                const U = u(_);
                k.context = {
                    ...U,
                    ...k.__routeContext,
                    ...k.__beforeLoadContext
                }, c.push(k);
            }), c.forEach((f, h)=>{
                var m, v, _, w, b, M, E, T;
                const P = this.looseRoutesById[f.routeId];
                if (!this.getMatch(f.id) && n?._buildLocation !== !0) {
                    const O = c[h - 1], D = u(O), R = {
                        deps: f.loaderDeps,
                        params: f.params,
                        context: D,
                        location: e,
                        navigate: (N)=>this.navigate({
                                ...N,
                                _fromLocation: e
                            }),
                        buildLocation: this.buildLocation,
                        cause: f.cause,
                        abortController: f.abortController,
                        preload: !!f.preload,
                        matches: c
                    };
                    f.__routeContext = ((v = (m = P.options).context) == null ? void 0 : v.call(m, R)) ?? {}, f.context = {
                        ...D,
                        ...f.__routeContext,
                        ...f.__beforeLoadContext
                    };
                }
                if (f.status === "success") {
                    f.headers = (w = (_ = P.options).headers) == null ? void 0 : w.call(_, {
                        loaderData: f.loaderData
                    });
                    const O = {
                        matches: c,
                        match: f,
                        params: f.params,
                        loaderData: f.loaderData
                    }, D = (M = (b = P.options).head) == null ? void 0 : M.call(b, O);
                    f.links = D?.links, f.headScripts = D?.scripts, f.meta = D?.meta, f.scripts = (T = (E = P.options).scripts) == null ? void 0 : T.call(E, O);
                }
            }), c;
        }
    }
    class EE extends Error {
    }
    class UX extends Error {
    }
    function zX(t) {
        return {
            loadedAt: 0,
            isLoading: !1,
            isTransitioning: !1,
            status: "idle",
            resolvedLocation: void 0,
            location: t,
            matches: [],
            pendingMatches: [],
            cachedMatches: [],
            statusCode: 200
        };
    }
    function VX({ router: t, children: e, ...n }) {
        t.update({
            ...t.options,
            ...n,
            context: {
                ...t.options.context,
                ...n.context
            }
        });
        const r = CB(), i = x.jsx(r.Provider, {
            value: t,
            children: e
        });
        return t.options.Wrap ? x.jsx(t.options.Wrap, {
            children: i
        }) : i;
    }
    function WX({ router: t, ...e }) {
        return x.jsx(VX, {
            router: t,
            ...e,
            children: x.jsx(OX, {})
        });
    }
    function qr(t) {
        return dh({
            ...t,
            select: (e)=>t.select ? t.select(e.context) : e.context
        });
    }
    let qX = {
        data: ""
    }, HX = (t)=>typeof window == "object" ? ((t ? t.querySelector("#_goober") : window._goober) || Object.assign((t || document.head).appendChild(document.createElement("style")), {
            innerHTML: " ",
            id: "_goober"
        })).firstChild : t || qX, $X = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g, GX = /\/\*[^]*?\*\/|  +/g, LD = /\n+/g, $f = (t, e)=>{
        let n = "", r = "", i = "";
        for(let s in t){
            let o = t[s];
            s[0] == "@" ? s[1] == "i" ? n = s + " " + o + ";" : r += s[1] == "f" ? $f(o, s) : s + "{" + $f(o, s[1] == "k" ? "" : e) + "}" : typeof o == "object" ? r += $f(o, e ? e.replace(/([^,])+/g, (a)=>s.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (l)=>/&/.test(l) ? l.replace(/&/g, a) : a ? a + " " + l : l)) : s) : o != null && (s = /^--/.test(s) ? s : s.replace(/[A-Z]/g, "-$&").toLowerCase(), i += $f.p ? $f.p(s, o) : s + ":" + o + ";");
        }
        return n + (e && i ? e + "{" + i + "}" : i) + r;
    }, ed = {}, DB = (t)=>{
        if (typeof t == "object") {
            let e = "";
            for(let n in t)e += n + DB(t[n]);
            return e;
        }
        return t;
    }, XX = (t, e, n, r, i)=>{
        let s = DB(t), o = ed[s] || (ed[s] = ((l)=>{
            let c = 0, u = 11;
            for(; c < l.length;)u = 101 * u + l.charCodeAt(c++) >>> 0;
            return "go" + u;
        })(s));
        if (!ed[o]) {
            let l = s !== t ? t : ((c)=>{
                let u, f, h = [
                    {}
                ];
                for(; u = $X.exec(c.replace(GX, ""));)u[4] ? h.shift() : u[3] ? (f = u[3].replace(LD, " ").trim(), h.unshift(h[0][f] = h[0][f] || {})) : h[0][u[1]] = u[2].replace(LD, " ").trim();
                return h[0];
            })(t);
            ed[o] = $f(i ? {
                ["@keyframes " + o]: l
            } : l, n ? "" : "." + o);
        }
        let a = n && ed.g ? ed.g : null;
        return n && (ed.g = ed[o]), ((l, c, u, f)=>{
            f ? c.data = c.data.replace(f, l) : c.data.indexOf(l) === -1 && (c.data = u ? l + c.data : c.data + l);
        })(ed[o], e, r, a), o;
    }, KX = (t, e, n)=>t.reduce((r, i, s)=>{
            let o = e[s];
            if (o && o.call) {
                let a = o(n), l = a && a.props && a.props.className || /^go/.test(a) && a;
                o = l ? "." + l : a && typeof a == "object" ? a.props ? "" : $f(a, "") : a === !1 ? "" : a;
            }
            return r + i + (o ?? "");
        }, "");
    function xT(t) {
        let e = this || {}, n = t.call ? t(e.p) : t;
        return XX(n.unshift ? n.raw ? KX(n, [].slice.call(arguments, 1), e.p) : n.reduce((r, i)=>Object.assign(r, i && i.call ? i(e.p) : i), {}) : n, HX(e.target), e.g, e.o, e.k);
    }
    let LB, IN, AN;
    xT.bind({
        g: 1
    });
    let Id = xT.bind({
        k: 1
    });
    function YX(t, e, n, r) {
        $f.p = e, LB = t, IN = n, AN = r;
    }
    function Eh(t, e) {
        let n = this || {};
        return function() {
            let r = arguments;
            function i(s, o) {
                let a = Object.assign({}, s), l = a.className || i.className;
                n.p = Object.assign({
                    theme: IN && IN()
                }, a), n.o = / *go\d+/.test(l), a.className = xT.apply(n, r) + (l ? " " + l : "");
                let c = t;
                return t[0] && (c = a.as || t, delete a.as), AN && c[0] && AN(a), LB(c, a);
            }
            return e ? e(i) : i;
        };
    }
    var ZX = (t)=>typeof t == "function", ME = (t, e)=>ZX(t) ? t(e) : t, JX = (()=>{
        let t = 0;
        return ()=>(++t).toString();
    })(), FB = (()=>{
        let t;
        return ()=>{
            if (t === void 0 && typeof window < "u") {
                let e = matchMedia("(prefers-reduced-motion: reduce)");
                t = !e || e.matches;
            }
            return t;
        };
    })(), QX = 20, jB = (t, e)=>{
        switch(e.type){
            case 0:
                return {
                    ...t,
                    toasts: [
                        e.toast,
                        ...t.toasts
                    ].slice(0, QX)
                };
            case 1:
                return {
                    ...t,
                    toasts: t.toasts.map((s)=>s.id === e.toast.id ? {
                            ...s,
                            ...e.toast
                        } : s)
                };
            case 2:
                let { toast: n } = e;
                return jB(t, {
                    type: t.toasts.find((s)=>s.id === n.id) ? 1 : 0,
                    toast: n
                });
            case 3:
                let { toastId: r } = e;
                return {
                    ...t,
                    toasts: t.toasts.map((s)=>s.id === r || r === void 0 ? {
                            ...s,
                            dismissed: !0,
                            visible: !1
                        } : s)
                };
            case 4:
                return e.toastId === void 0 ? {
                    ...t,
                    toasts: []
                } : {
                    ...t,
                    toasts: t.toasts.filter((s)=>s.id !== e.toastId)
                };
            case 5:
                return {
                    ...t,
                    pausedAt: e.time
                };
            case 6:
                let i = e.time - (t.pausedAt || 0);
                return {
                    ...t,
                    pausedAt: void 0,
                    toasts: t.toasts.map((s)=>({
                            ...s,
                            pauseDuration: s.pauseDuration + i
                        }))
                };
        }
    }, ES = [], Yp = {
        toasts: [],
        pausedAt: void 0
    }, Dm = (t)=>{
        Yp = jB(Yp, t), ES.forEach((e)=>{
            e(Yp);
        });
    }, eK = {
        blank: 4e3,
        error: 4e3,
        success: 2e3,
        loading: 1 / 0,
        custom: 4e3
    }, tK = (t = {})=>{
        let [e, n] = J.useState(Yp), r = J.useRef(Yp);
        J.useEffect(()=>(r.current !== Yp && n(Yp), ES.push(n), ()=>{
                let s = ES.indexOf(n);
                s > -1 && ES.splice(s, 1);
            }), []);
        let i = e.toasts.map((s)=>{
            var o, a, l;
            return {
                ...t,
                ...t[s.type],
                ...s,
                removeDelay: s.removeDelay || ((o = t[s.type]) == null ? void 0 : o.removeDelay) || t?.removeDelay,
                duration: s.duration || ((a = t[s.type]) == null ? void 0 : a.duration) || t?.duration || eK[s.type],
                style: {
                    ...t.style,
                    ...(l = t[s.type]) == null ? void 0 : l.style,
                    ...s.style
                }
            };
        });
        return {
            ...e,
            toasts: i
        };
    }, nK = (t, e = "blank", n)=>({
            createdAt: Date.now(),
            visible: !0,
            dismissed: !1,
            type: e,
            ariaProps: {
                role: "status",
                "aria-live": "polite"
            },
            message: t,
            pauseDuration: 0,
            ...n,
            id: n?.id || JX()
        }), fw = (t)=>(e, n)=>{
            let r = nK(e, t, n);
            return Dm({
                type: 2,
                toast: r
            }), r.id;
        }, fr = (t, e)=>fw("blank")(t, e);
    fr.error = fw("error");
    fr.success = fw("success");
    fr.loading = fw("loading");
    fr.custom = fw("custom");
    fr.dismiss = (t)=>{
        Dm({
            type: 3,
            toastId: t
        });
    };
    fr.remove = (t)=>Dm({
            type: 4,
            toastId: t
        });
    fr.promise = (t, e, n)=>{
        let r = fr.loading(e.loading, {
            ...n,
            ...n?.loading
        });
        return typeof t == "function" && (t = t()), t.then((i)=>{
            let s = e.success ? ME(e.success, i) : void 0;
            return s ? fr.success(s, {
                id: r,
                ...n,
                ...n?.success
            }) : fr.dismiss(r), i;
        }).catch((i)=>{
            let s = e.error ? ME(e.error, i) : void 0;
            s ? fr.error(s, {
                id: r,
                ...n,
                ...n?.error
            }) : fr.dismiss(r);
        }), t;
    };
    var rK = (t, e)=>{
        Dm({
            type: 1,
            toast: {
                id: t,
                height: e
            }
        });
    }, iK = ()=>{
        Dm({
            type: 5,
            time: Date.now()
        });
    }, Fx = new Map, sK = 1e3, oK = (t, e = sK)=>{
        if (Fx.has(t)) return;
        let n = setTimeout(()=>{
            Fx.delete(t), Dm({
                type: 4,
                toastId: t
            });
        }, e);
        Fx.set(t, n);
    }, aK = (t)=>{
        let { toasts: e, pausedAt: n } = tK(t);
        J.useEffect(()=>{
            if (n) return;
            let s = Date.now(), o = e.map((a)=>{
                if (a.duration === 1 / 0) return;
                let l = (a.duration || 0) + a.pauseDuration - (s - a.createdAt);
                if (l < 0) {
                    a.visible && fr.dismiss(a.id);
                    return;
                }
                return setTimeout(()=>fr.dismiss(a.id), l);
            });
            return ()=>{
                o.forEach((a)=>a && clearTimeout(a));
            };
        }, [
            e,
            n
        ]);
        let r = J.useCallback(()=>{
            n && Dm({
                type: 6,
                time: Date.now()
            });
        }, [
            n
        ]), i = J.useCallback((s, o)=>{
            let { reverseOrder: a = !1, gutter: l = 8, defaultPosition: c } = o || {}, u = e.filter((m)=>(m.position || c) === (s.position || c) && m.height), f = u.findIndex((m)=>m.id === s.id), h = u.filter((m, v)=>v < f && m.visible).length;
            return u.filter((m)=>m.visible).slice(...a ? [
                h + 1
            ] : [
                0,
                h
            ]).reduce((m, v)=>m + (v.height || 0) + l, 0);
        }, [
            e
        ]);
        return J.useEffect(()=>{
            e.forEach((s)=>{
                if (s.dismissed) oK(s.id, s.removeDelay);
                else {
                    let o = Fx.get(s.id);
                    o && (clearTimeout(o), Fx.delete(s.id));
                }
            });
        }, [
            e
        ]), {
            toasts: e,
            handlers: {
                updateHeight: rK,
                startPause: iK,
                endPause: r,
                calculateOffset: i
            }
        };
    }, lK = Id`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`, cK = Id`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`, uK = Id`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`, dK = Eh("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(t)=>t.primary || "#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${lK} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${cK} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${(t)=>t.secondary || "#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${uK} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`, fK = Id`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`, hK = Eh("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${(t)=>t.secondary || "#e0e0e0"};
  border-right-color: ${(t)=>t.primary || "#616161"};
  animation: ${fK} 1s linear infinite;
`, pK = Id`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`, mK = Id`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`, gK = Eh("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(t)=>t.primary || "#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${pK} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${mK} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${(t)=>t.secondary || "#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`, yK = Eh("div")`
  position: absolute;
`, vK = Eh("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`, xK = Id`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`, bK = Eh("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${xK} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`, wK = ({ toast: t })=>{
        let { icon: e, type: n, iconTheme: r } = t;
        return e !== void 0 ? typeof e == "string" ? J.createElement(bK, null, e) : e : n === "blank" ? null : J.createElement(vK, null, J.createElement(hK, {
            ...r
        }), n !== "loading" && J.createElement(yK, null, n === "error" ? J.createElement(dK, {
            ...r
        }) : J.createElement(gK, {
            ...r
        })));
    }, _K = (t)=>`
0% {transform: translate3d(0,${t * -200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`, SK = (t)=>`
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${t * -150}%,-1px) scale(.6); opacity:0;}
`, EK = "0%{opacity:0;} 100%{opacity:1;}", MK = "0%{opacity:1;} 100%{opacity:0;}", TK = Eh("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`, CK = Eh("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`, RK = (t, e)=>{
        let n = t.includes("top") ? 1 : -1, [r, i] = FB() ? [
            EK,
            MK
        ] : [
            _K(n),
            SK(n)
        ];
        return {
            animation: e ? `${Id(r)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards` : `${Id(i)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`
        };
    }, IK = J.memo(({ toast: t, position: e, style: n, children: r })=>{
        let i = t.height ? RK(t.position || e || "top-center", t.visible) : {
            opacity: 0
        }, s = J.createElement(wK, {
            toast: t
        }), o = J.createElement(CK, {
            ...t.ariaProps
        }, ME(t.message, t));
        return J.createElement(TK, {
            className: t.className,
            style: {
                ...i,
                ...n,
                ...t.style
            }
        }, typeof r == "function" ? r({
            icon: s,
            message: o
        }) : J.createElement(J.Fragment, null, s, o));
    });
    YX(J.createElement);
    var AK = ({ id: t, className: e, style: n, onHeightUpdate: r, children: i })=>{
        let s = J.useCallback((o)=>{
            if (o) {
                let a = ()=>{
                    let l = o.getBoundingClientRect().height;
                    r(t, l);
                };
                a(), new MutationObserver(a).observe(o, {
                    subtree: !0,
                    childList: !0,
                    characterData: !0
                });
            }
        }, [
            t,
            r
        ]);
        return J.createElement("div", {
            ref: s,
            className: e,
            style: n
        }, i);
    }, NK = (t, e)=>{
        let n = t.includes("top"), r = n ? {
            top: 0
        } : {
            bottom: 0
        }, i = t.includes("center") ? {
            justifyContent: "center"
        } : t.includes("right") ? {
            justifyContent: "flex-end"
        } : {};
        return {
            left: 0,
            right: 0,
            display: "flex",
            position: "absolute",
            transition: FB() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
            transform: `translateY(${e * (n ? 1 : -1)}px)`,
            ...r,
            ...i
        };
    }, PK = xT`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`, t1 = 16, BB = ({ reverseOrder: t, position: e = "top-center", toastOptions: n, gutter: r, children: i, containerStyle: s, containerClassName: o })=>{
        let { toasts: a, handlers: l } = aK(n);
        return J.createElement("div", {
            id: "_rht_toaster",
            style: {
                position: "fixed",
                zIndex: 9999,
                top: t1,
                left: t1,
                right: t1,
                bottom: t1,
                pointerEvents: "none",
                ...s
            },
            className: o,
            onMouseEnter: l.startPause,
            onMouseLeave: l.endPause
        }, a.map((c)=>{
            let u = c.position || e, f = l.calculateOffset(c, {
                reverseOrder: t,
                gutter: r,
                defaultPosition: e
            }), h = NK(u, f);
            return J.createElement(AK, {
                id: c.id,
                key: c.id,
                onHeightUpdate: l.updateHeight,
                className: c.visible ? PK : "",
                style: h
            }, c.type === "custom" ? ME(c.message, c) : i ? i(c) : J.createElement(IK, {
                toast: c,
                position: u
            }));
        }));
    }, kK = fr;
    function UB(t, e) {
        return function() {
            return t.apply(e, arguments);
        };
    }
    const { toString: OK } = Object.prototype, { getPrototypeOf: hP } = Object, bT = ((t)=>(e)=>{
            const n = OK.call(e);
            return t[n] || (t[n] = n.slice(8, -1).toLowerCase());
        })(Object.create(null)), Ec = (t)=>(t = t.toLowerCase(), (e)=>bT(e) === t), wT = (t)=>(e)=>typeof e === t, { isArray: Ay } = Array, cb = wT("undefined");
    function DK(t) {
        return t !== null && !cb(t) && t.constructor !== null && !cb(t.constructor) && Xa(t.constructor.isBuffer) && t.constructor.isBuffer(t);
    }
    const zB = Ec("ArrayBuffer");
    function LK(t) {
        let e;
        return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? e = ArrayBuffer.isView(t) : e = t && t.buffer && zB(t.buffer), e;
    }
    const FK = wT("string"), Xa = wT("function"), VB = wT("number"), _T = (t)=>t !== null && typeof t == "object", jK = (t)=>t === !0 || t === !1, MS = (t)=>{
        if (bT(t) !== "object") return !1;
        const e = hP(t);
        return (e === null || e === Object.prototype || Object.getPrototypeOf(e) === null) && !(Symbol.toStringTag in t) && !(Symbol.iterator in t);
    }, BK = Ec("Date"), UK = Ec("File"), zK = Ec("Blob"), VK = Ec("FileList"), WK = (t)=>_T(t) && Xa(t.pipe), qK = (t)=>{
        let e;
        return t && (typeof FormData == "function" && t instanceof FormData || Xa(t.append) && ((e = bT(t)) === "formdata" || e === "object" && Xa(t.toString) && t.toString() === "[object FormData]"));
    }, HK = Ec("URLSearchParams"), [$K, GK, XK, KK] = [
        "ReadableStream",
        "Request",
        "Response",
        "Headers"
    ].map(Ec), YK = (t)=>t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    function hw(t, e, { allOwnKeys: n = !1 } = {}) {
        if (t === null || typeof t > "u") return;
        let r, i;
        if (typeof t != "object" && (t = [
            t
        ]), Ay(t)) for(r = 0, i = t.length; r < i; r++)e.call(null, t[r], r, t);
        else {
            const s = n ? Object.getOwnPropertyNames(t) : Object.keys(t), o = s.length;
            let a;
            for(r = 0; r < o; r++)a = s[r], e.call(null, t[a], a, t);
        }
    }
    function WB(t, e) {
        e = e.toLowerCase();
        const n = Object.keys(t);
        let r = n.length, i;
        for(; r-- > 0;)if (i = n[r], e === i.toLowerCase()) return i;
        return null;
    }
    const Zp = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, qB = (t)=>!cb(t) && t !== Zp;
    function NN() {
        const { caseless: t } = qB(this) && this || {}, e = {}, n = (r, i)=>{
            const s = t && WB(e, i) || i;
            MS(e[s]) && MS(r) ? e[s] = NN(e[s], r) : MS(r) ? e[s] = NN({}, r) : Ay(r) ? e[s] = r.slice() : e[s] = r;
        };
        for(let r = 0, i = arguments.length; r < i; r++)arguments[r] && hw(arguments[r], n);
        return e;
    }
    const ZK = (t, e, n, { allOwnKeys: r } = {})=>(hw(e, (i, s)=>{
            n && Xa(i) ? t[s] = UB(i, n) : t[s] = i;
        }, {
            allOwnKeys: r
        }), t), JK = (t)=>(t.charCodeAt(0) === 65279 && (t = t.slice(1)), t), QK = (t, e, n, r)=>{
        t.prototype = Object.create(e.prototype, r), t.prototype.constructor = t, Object.defineProperty(t, "super", {
            value: e.prototype
        }), n && Object.assign(t.prototype, n);
    }, eY = (t, e, n, r)=>{
        let i, s, o;
        const a = {};
        if (e = e || {}, t == null) return e;
        do {
            for(i = Object.getOwnPropertyNames(t), s = i.length; s-- > 0;)o = i[s], (!r || r(o, t, e)) && !a[o] && (e[o] = t[o], a[o] = !0);
            t = n !== !1 && hP(t);
        }while (t && (!n || n(t, e)) && t !== Object.prototype);
        return e;
    }, tY = (t, e, n)=>{
        t = String(t), (n === void 0 || n > t.length) && (n = t.length), n -= e.length;
        const r = t.indexOf(e, n);
        return r !== -1 && r === n;
    }, nY = (t)=>{
        if (!t) return null;
        if (Ay(t)) return t;
        let e = t.length;
        if (!VB(e)) return null;
        const n = new Array(e);
        for(; e-- > 0;)n[e] = t[e];
        return n;
    }, rY = ((t)=>(e)=>t && e instanceof t)(typeof Uint8Array < "u" && hP(Uint8Array)), iY = (t, e)=>{
        const r = (t && t[Symbol.iterator]).call(t);
        let i;
        for(; (i = r.next()) && !i.done;){
            const s = i.value;
            e.call(t, s[0], s[1]);
        }
    }, sY = (t, e)=>{
        let n;
        const r = [];
        for(; (n = t.exec(e)) !== null;)r.push(n);
        return r;
    }, oY = Ec("HTMLFormElement"), aY = (t)=>t.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(n, r, i) {
            return r.toUpperCase() + i;
        }), FD = (({ hasOwnProperty: t })=>(e, n)=>t.call(e, n))(Object.prototype), lY = Ec("RegExp"), HB = (t, e)=>{
        const n = Object.getOwnPropertyDescriptors(t), r = {};
        hw(n, (i, s)=>{
            let o;
            (o = e(i, s, t)) !== !1 && (r[s] = o || i);
        }), Object.defineProperties(t, r);
    }, cY = (t)=>{
        HB(t, (e, n)=>{
            if (Xa(t) && [
                "arguments",
                "caller",
                "callee"
            ].indexOf(n) !== -1) return !1;
            const r = t[n];
            if (Xa(r)) {
                if (e.enumerable = !1, "writable" in e) {
                    e.writable = !1;
                    return;
                }
                e.set || (e.set = ()=>{
                    throw Error("Can not rewrite read-only method '" + n + "'");
                });
            }
        });
    }, uY = (t, e)=>{
        const n = {}, r = (i)=>{
            i.forEach((s)=>{
                n[s] = !0;
            });
        };
        return Ay(t) ? r(t) : r(String(t).split(e)), n;
    }, dY = ()=>{}, fY = (t, e)=>t != null && Number.isFinite(t = +t) ? t : e, UC = "abcdefghijklmnopqrstuvwxyz", jD = "0123456789", $B = {
        DIGIT: jD,
        ALPHA: UC,
        ALPHA_DIGIT: UC + UC.toUpperCase() + jD
    }, hY = (t = 16, e = $B.ALPHA_DIGIT)=>{
        let n = "";
        const { length: r } = e;
        for(; t--;)n += e[Math.random() * r | 0];
        return n;
    };
    function pY(t) {
        return !!(t && Xa(t.append) && t[Symbol.toStringTag] === "FormData" && t[Symbol.iterator]);
    }
    const mY = (t)=>{
        const e = new Array(10), n = (r, i)=>{
            if (_T(r)) {
                if (e.indexOf(r) >= 0) return;
                if (!("toJSON" in r)) {
                    e[i] = r;
                    const s = Ay(r) ? [] : {};
                    return hw(r, (o, a)=>{
                        const l = n(o, i + 1);
                        !cb(l) && (s[a] = l);
                    }), e[i] = void 0, s;
                }
            }
            return r;
        };
        return n(t, 0);
    }, gY = Ec("AsyncFunction"), yY = (t)=>t && (_T(t) || Xa(t)) && Xa(t.then) && Xa(t.catch), GB = ((t, e)=>t ? setImmediate : e ? ((n, r)=>(Zp.addEventListener("message", ({ source: i, data: s })=>{
                i === Zp && s === n && r.length && r.shift()();
            }, !1), (i)=>{
                r.push(i), Zp.postMessage(n, "*");
            }))(`axios@${Math.random()}`, []) : (n)=>setTimeout(n))(typeof setImmediate == "function", Xa(Zp.postMessage)), vY = typeof queueMicrotask < "u" ? queueMicrotask.bind(Zp) : typeof process < "u" && process.nextTick || GB, et = {
        isArray: Ay,
        isArrayBuffer: zB,
        isBuffer: DK,
        isFormData: qK,
        isArrayBufferView: LK,
        isString: FK,
        isNumber: VB,
        isBoolean: jK,
        isObject: _T,
        isPlainObject: MS,
        isReadableStream: $K,
        isRequest: GK,
        isResponse: XK,
        isHeaders: KK,
        isUndefined: cb,
        isDate: BK,
        isFile: UK,
        isBlob: zK,
        isRegExp: lY,
        isFunction: Xa,
        isStream: WK,
        isURLSearchParams: HK,
        isTypedArray: rY,
        isFileList: VK,
        forEach: hw,
        merge: NN,
        extend: ZK,
        trim: YK,
        stripBOM: JK,
        inherits: QK,
        toFlatObject: eY,
        kindOf: bT,
        kindOfTest: Ec,
        endsWith: tY,
        toArray: nY,
        forEachEntry: iY,
        matchAll: sY,
        isHTMLForm: oY,
        hasOwnProperty: FD,
        hasOwnProp: FD,
        reduceDescriptors: HB,
        freezeMethods: cY,
        toObjectSet: uY,
        toCamelCase: aY,
        noop: dY,
        toFiniteNumber: fY,
        findKey: WB,
        global: Zp,
        isContextDefined: qB,
        ALPHABET: $B,
        generateString: hY,
        isSpecCompliantForm: pY,
        toJSONObject: mY,
        isAsyncFn: gY,
        isThenable: yY,
        setImmediate: GB,
        asap: vY
    };
    function On(t, e, n, r, i) {
        Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = t, this.name = "AxiosError", e && (this.code = e), n && (this.config = n), r && (this.request = r), i && (this.response = i, this.status = i.status ? i.status : null);
    }
    et.inherits(On, Error, {
        toJSON: function() {
            return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: et.toJSONObject(this.config),
                code: this.code,
                status: this.status
            };
        }
    });
    const XB = On.prototype, KB = {};
    [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL"
    ].forEach((t)=>{
        KB[t] = {
            value: t
        };
    });
    Object.defineProperties(On, KB);
    Object.defineProperty(XB, "isAxiosError", {
        value: !0
    });
    On.from = (t, e, n, r, i, s)=>{
        const o = Object.create(XB);
        return et.toFlatObject(t, o, function(l) {
            return l !== Error.prototype;
        }, (a)=>a !== "isAxiosError"), On.call(o, t.message, e, n, r, i), o.cause = t, o.name = t.name, s && Object.assign(o, s), o;
    };
    const xY = null;
    function PN(t) {
        return et.isPlainObject(t) || et.isArray(t);
    }
    function YB(t) {
        return et.endsWith(t, "[]") ? t.slice(0, -2) : t;
    }
    function BD(t, e, n) {
        return t ? t.concat(e).map(function(i, s) {
            return i = YB(i), !n && s ? "[" + i + "]" : i;
        }).join(n ? "." : "") : e;
    }
    function bY(t) {
        return et.isArray(t) && !t.some(PN);
    }
    const wY = et.toFlatObject(et, {}, null, function(e) {
        return /^is[A-Z]/.test(e);
    });
    function ST(t, e, n) {
        if (!et.isObject(t)) throw new TypeError("target must be an object");
        e = e || new FormData, n = et.toFlatObject(n, {
            metaTokens: !0,
            dots: !1,
            indexes: !1
        }, !1, function(_, w) {
            return !et.isUndefined(w[_]);
        });
        const r = n.metaTokens, i = n.visitor || u, s = n.dots, o = n.indexes, l = (n.Blob || typeof Blob < "u" && Blob) && et.isSpecCompliantForm(e);
        if (!et.isFunction(i)) throw new TypeError("visitor must be a function");
        function c(v) {
            if (v === null) return "";
            if (et.isDate(v)) return v.toISOString();
            if (!l && et.isBlob(v)) throw new On("Blob is not supported. Use a Buffer instead.");
            return et.isArrayBuffer(v) || et.isTypedArray(v) ? l && typeof Blob == "function" ? new Blob([
                v
            ]) : Buffer.from(v) : v;
        }
        function u(v, _, w) {
            let b = v;
            if (v && !w && typeof v == "object") {
                if (et.endsWith(_, "{}")) _ = r ? _ : _.slice(0, -2), v = JSON.stringify(v);
                else if (et.isArray(v) && bY(v) || (et.isFileList(v) || et.endsWith(_, "[]")) && (b = et.toArray(v))) return _ = YB(_), b.forEach(function(E, T) {
                    !(et.isUndefined(E) || E === null) && e.append(o === !0 ? BD([
                        _
                    ], T, s) : o === null ? _ : _ + "[]", c(E));
                }), !1;
            }
            return PN(v) ? !0 : (e.append(BD(w, _, s), c(v)), !1);
        }
        const f = [], h = Object.assign(wY, {
            defaultVisitor: u,
            convertValue: c,
            isVisitable: PN
        });
        function m(v, _) {
            if (!et.isUndefined(v)) {
                if (f.indexOf(v) !== -1) throw Error("Circular reference detected in " + _.join("."));
                f.push(v), et.forEach(v, function(b, M) {
                    (!(et.isUndefined(b) || b === null) && i.call(e, b, et.isString(M) ? M.trim() : M, _, h)) === !0 && m(b, _ ? _.concat(M) : [
                        M
                    ]);
                }), f.pop();
            }
        }
        if (!et.isObject(t)) throw new TypeError("data must be an object");
        return m(t), e;
    }
    function UD(t) {
        const e = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+",
            "%00": "\0"
        };
        return encodeURIComponent(t).replace(/[!'()~]|%20|%00/g, function(r) {
            return e[r];
        });
    }
    function pP(t, e) {
        this._pairs = [], t && ST(t, this, e);
    }
    const ZB = pP.prototype;
    ZB.append = function(e, n) {
        this._pairs.push([
            e,
            n
        ]);
    };
    ZB.toString = function(e) {
        const n = e ? function(r) {
            return e.call(this, r, UD);
        } : UD;
        return this._pairs.map(function(i) {
            return n(i[0]) + "=" + n(i[1]);
        }, "").join("&");
    };
    function _Y(t) {
        return encodeURIComponent(t).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    function JB(t, e, n) {
        if (!e) return t;
        const r = n && n.encode || _Y;
        et.isFunction(n) && (n = {
            serialize: n
        });
        const i = n && n.serialize;
        let s;
        if (i ? s = i(e, n) : s = et.isURLSearchParams(e) ? e.toString() : new pP(e, n).toString(r), s) {
            const o = t.indexOf("#");
            o !== -1 && (t = t.slice(0, o)), t += (t.indexOf("?") === -1 ? "?" : "&") + s;
        }
        return t;
    }
    class zD {
        constructor(){
            this.handlers = [];
        }
        use(e, n, r) {
            return this.handlers.push({
                fulfilled: e,
                rejected: n,
                synchronous: r ? r.synchronous : !1,
                runWhen: r ? r.runWhen : null
            }), this.handlers.length - 1;
        }
        eject(e) {
            this.handlers[e] && (this.handlers[e] = null);
        }
        clear() {
            this.handlers && (this.handlers = []);
        }
        forEach(e) {
            et.forEach(this.handlers, function(r) {
                r !== null && e(r);
            });
        }
    }
    const QB = {
        silentJSONParsing: !0,
        forcedJSONParsing: !0,
        clarifyTimeoutError: !1
    }, SY = typeof URLSearchParams < "u" ? URLSearchParams : pP, EY = typeof FormData < "u" ? FormData : null, MY = typeof Blob < "u" ? Blob : null, TY = {
        isBrowser: !0,
        classes: {
            URLSearchParams: SY,
            FormData: EY,
            Blob: MY
        },
        protocols: [
            "http",
            "https",
            "file",
            "blob",
            "url",
            "data"
        ]
    }, mP = typeof window < "u" && typeof document < "u", kN = typeof navigator == "object" && navigator || void 0, CY = mP && (!kN || [
        "ReactNative",
        "NativeScript",
        "NS"
    ].indexOf(kN.product) < 0), RY = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", IY = mP && window.location.href || "http://localhost", AY = Object.freeze(Object.defineProperty({
        __proto__: null,
        hasBrowserEnv: mP,
        hasStandardBrowserEnv: CY,
        hasStandardBrowserWebWorkerEnv: RY,
        navigator: kN,
        origin: IY
    }, Symbol.toStringTag, {
        value: "Module"
    })), ao = {
        ...AY,
        ...TY
    };
    function NY(t, e) {
        return ST(t, new ao.classes.URLSearchParams, Object.assign({
            visitor: function(n, r, i, s) {
                return ao.isNode && et.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : s.defaultVisitor.apply(this, arguments);
            }
        }, e));
    }
    function PY(t) {
        return et.matchAll(/\w+|\[(\w*)]/g, t).map((e)=>e[0] === "[]" ? "" : e[1] || e[0]);
    }
    function kY(t) {
        const e = {}, n = Object.keys(t);
        let r;
        const i = n.length;
        let s;
        for(r = 0; r < i; r++)s = n[r], e[s] = t[s];
        return e;
    }
    function eU(t) {
        function e(n, r, i, s) {
            let o = n[s++];
            if (o === "__proto__") return !0;
            const a = Number.isFinite(+o), l = s >= n.length;
            return o = !o && et.isArray(i) ? i.length : o, l ? (et.hasOwnProp(i, o) ? i[o] = [
                i[o],
                r
            ] : i[o] = r, !a) : ((!i[o] || !et.isObject(i[o])) && (i[o] = []), e(n, r, i[o], s) && et.isArray(i[o]) && (i[o] = kY(i[o])), !a);
        }
        if (et.isFormData(t) && et.isFunction(t.entries)) {
            const n = {};
            return et.forEachEntry(t, (r, i)=>{
                e(PY(r), i, n, 0);
            }), n;
        }
        return null;
    }
    function OY(t, e, n) {
        if (et.isString(t)) try {
            return (e || JSON.parse)(t), et.trim(t);
        } catch (r) {
            if (r.name !== "SyntaxError") throw r;
        }
        return (n || JSON.stringify)(t);
    }
    const pw = {
        transitional: QB,
        adapter: [
            "xhr",
            "http",
            "fetch"
        ],
        transformRequest: [
            function(e, n) {
                const r = n.getContentType() || "", i = r.indexOf("application/json") > -1, s = et.isObject(e);
                if (s && et.isHTMLForm(e) && (e = new FormData(e)), et.isFormData(e)) return i ? JSON.stringify(eU(e)) : e;
                if (et.isArrayBuffer(e) || et.isBuffer(e) || et.isStream(e) || et.isFile(e) || et.isBlob(e) || et.isReadableStream(e)) return e;
                if (et.isArrayBufferView(e)) return e.buffer;
                if (et.isURLSearchParams(e)) return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), e.toString();
                let a;
                if (s) {
                    if (r.indexOf("application/x-www-form-urlencoded") > -1) return NY(e, this.formSerializer).toString();
                    if ((a = et.isFileList(e)) || r.indexOf("multipart/form-data") > -1) {
                        const l = this.env && this.env.FormData;
                        return ST(a ? {
                            "files[]": e
                        } : e, l && new l, this.formSerializer);
                    }
                }
                return s || i ? (n.setContentType("application/json", !1), OY(e)) : e;
            }
        ],
        transformResponse: [
            function(e) {
                const n = this.transitional || pw.transitional, r = n && n.forcedJSONParsing, i = this.responseType === "json";
                if (et.isResponse(e) || et.isReadableStream(e)) return e;
                if (e && et.isString(e) && (r && !this.responseType || i)) {
                    const o = !(n && n.silentJSONParsing) && i;
                    try {
                        return JSON.parse(e);
                    } catch (a) {
                        if (o) throw a.name === "SyntaxError" ? On.from(a, On.ERR_BAD_RESPONSE, this, null, this.response) : a;
                    }
                }
                return e;
            }
        ],
        timeout: 0,
        xsrfCookieName: "XSRF-TOKEN",
        xsrfHeaderName: "X-XSRF-TOKEN",
        maxContentLength: -1,
        maxBodyLength: -1,
        env: {
            FormData: ao.classes.FormData,
            Blob: ao.classes.Blob
        },
        validateStatus: function(e) {
            return e >= 200 && e < 300;
        },
        headers: {
            common: {
                Accept: "application/json, text/plain, */*",
                "Content-Type": void 0
            }
        }
    };
    et.forEach([
        "delete",
        "get",
        "head",
        "post",
        "put",
        "patch"
    ], (t)=>{
        pw.headers[t] = {};
    });
    const DY = et.toObjectSet([
        "age",
        "authorization",
        "content-length",
        "content-type",
        "etag",
        "expires",
        "from",
        "host",
        "if-modified-since",
        "if-unmodified-since",
        "last-modified",
        "location",
        "max-forwards",
        "proxy-authorization",
        "referer",
        "retry-after",
        "user-agent"
    ]), LY = (t)=>{
        const e = {};
        let n, r, i;
        return t && t.split(`
`).forEach(function(o) {
            i = o.indexOf(":"), n = o.substring(0, i).trim().toLowerCase(), r = o.substring(i + 1).trim(), !(!n || e[n] && DY[n]) && (n === "set-cookie" ? e[n] ? e[n].push(r) : e[n] = [
                r
            ] : e[n] = e[n] ? e[n] + ", " + r : r);
        }), e;
    }, VD = Symbol("internals");
    function Wv(t) {
        return t && String(t).trim().toLowerCase();
    }
    function TS(t) {
        return t === !1 || t == null ? t : et.isArray(t) ? t.map(TS) : String(t);
    }
    function FY(t) {
        const e = Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
        let r;
        for(; r = n.exec(t);)e[r[1]] = r[2];
        return e;
    }
    const jY = (t)=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t.trim());
    function zC(t, e, n, r, i) {
        if (et.isFunction(r)) return r.call(this, e, n);
        if (i && (e = n), !!et.isString(e)) {
            if (et.isString(r)) return e.indexOf(r) !== -1;
            if (et.isRegExp(r)) return r.test(e);
        }
    }
    function BY(t) {
        return t.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (e, n, r)=>n.toUpperCase() + r);
    }
    function UY(t, e) {
        const n = et.toCamelCase(" " + e);
        [
            "get",
            "set",
            "has"
        ].forEach((r)=>{
            Object.defineProperty(t, r + n, {
                value: function(i, s, o) {
                    return this[r].call(this, e, i, s, o);
                },
                configurable: !0
            });
        });
    }
    let ba = class {
        constructor(e){
            e && this.set(e);
        }
        set(e, n, r) {
            const i = this;
            function s(a, l, c) {
                const u = Wv(l);
                if (!u) throw new Error("header name must be a non-empty string");
                const f = et.findKey(i, u);
                (!f || i[f] === void 0 || c === !0 || c === void 0 && i[f] !== !1) && (i[f || l] = TS(a));
            }
            const o = (a, l)=>et.forEach(a, (c, u)=>s(c, u, l));
            if (et.isPlainObject(e) || e instanceof this.constructor) o(e, n);
            else if (et.isString(e) && (e = e.trim()) && !jY(e)) o(LY(e), n);
            else if (et.isHeaders(e)) for (const [a, l] of e.entries())s(l, a, r);
            else e != null && s(n, e, r);
            return this;
        }
        get(e, n) {
            if (e = Wv(e), e) {
                const r = et.findKey(this, e);
                if (r) {
                    const i = this[r];
                    if (!n) return i;
                    if (n === !0) return FY(i);
                    if (et.isFunction(n)) return n.call(this, i, r);
                    if (et.isRegExp(n)) return n.exec(i);
                    throw new TypeError("parser must be boolean|regexp|function");
                }
            }
        }
        has(e, n) {
            if (e = Wv(e), e) {
                const r = et.findKey(this, e);
                return !!(r && this[r] !== void 0 && (!n || zC(this, this[r], r, n)));
            }
            return !1;
        }
        delete(e, n) {
            const r = this;
            let i = !1;
            function s(o) {
                if (o = Wv(o), o) {
                    const a = et.findKey(r, o);
                    a && (!n || zC(r, r[a], a, n)) && (delete r[a], i = !0);
                }
            }
            return et.isArray(e) ? e.forEach(s) : s(e), i;
        }
        clear(e) {
            const n = Object.keys(this);
            let r = n.length, i = !1;
            for(; r--;){
                const s = n[r];
                (!e || zC(this, this[s], s, e, !0)) && (delete this[s], i = !0);
            }
            return i;
        }
        normalize(e) {
            const n = this, r = {};
            return et.forEach(this, (i, s)=>{
                const o = et.findKey(r, s);
                if (o) {
                    n[o] = TS(i), delete n[s];
                    return;
                }
                const a = e ? BY(s) : String(s).trim();
                a !== s && delete n[s], n[a] = TS(i), r[a] = !0;
            }), this;
        }
        concat(...e) {
            return this.constructor.concat(this, ...e);
        }
        toJSON(e) {
            const n = Object.create(null);
            return et.forEach(this, (r, i)=>{
                r != null && r !== !1 && (n[i] = e && et.isArray(r) ? r.join(", ") : r);
            }), n;
        }
        [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
            return Object.entries(this.toJSON()).map(([e, n])=>e + ": " + n).join(`
`);
        }
        get [Symbol.toStringTag]() {
            return "AxiosHeaders";
        }
        static from(e) {
            return e instanceof this ? e : new this(e);
        }
        static concat(e, ...n) {
            const r = new this(e);
            return n.forEach((i)=>r.set(i)), r;
        }
        static accessor(e) {
            const r = (this[VD] = this[VD] = {
                accessors: {}
            }).accessors, i = this.prototype;
            function s(o) {
                const a = Wv(o);
                r[a] || (UY(i, o), r[a] = !0);
            }
            return et.isArray(e) ? e.forEach(s) : s(e), this;
        }
    };
    ba.accessor([
        "Content-Type",
        "Content-Length",
        "Accept",
        "Accept-Encoding",
        "User-Agent",
        "Authorization"
    ]);
    et.reduceDescriptors(ba.prototype, ({ value: t }, e)=>{
        let n = e[0].toUpperCase() + e.slice(1);
        return {
            get: ()=>t,
            set (r) {
                this[n] = r;
            }
        };
    });
    et.freezeMethods(ba);
    function VC(t, e) {
        const n = this || pw, r = e || n, i = ba.from(r.headers);
        let s = r.data;
        return et.forEach(t, function(a) {
            s = a.call(n, s, i.normalize(), e ? e.status : void 0);
        }), i.normalize(), s;
    }
    function tU(t) {
        return !!(t && t.__CANCEL__);
    }
    function Ny(t, e, n) {
        On.call(this, t ?? "canceled", On.ERR_CANCELED, e, n), this.name = "CanceledError";
    }
    et.inherits(Ny, On, {
        __CANCEL__: !0
    });
    function nU(t, e, n) {
        const r = n.config.validateStatus;
        !n.status || !r || r(n.status) ? t(n) : e(new On("Request failed with status code " + n.status, [
            On.ERR_BAD_REQUEST,
            On.ERR_BAD_RESPONSE
        ][Math.floor(n.status / 100) - 4], n.config, n.request, n));
    }
    function zY(t) {
        const e = /^([-+\w]{1,25})(:?\/\/|:)/.exec(t);
        return e && e[1] || "";
    }
    function VY(t, e) {
        t = t || 10;
        const n = new Array(t), r = new Array(t);
        let i = 0, s = 0, o;
        return e = e !== void 0 ? e : 1e3, function(l) {
            const c = Date.now(), u = r[s];
            o || (o = c), n[i] = l, r[i] = c;
            let f = s, h = 0;
            for(; f !== i;)h += n[f++], f = f % t;
            if (i = (i + 1) % t, i === s && (s = (s + 1) % t), c - o < e) return;
            const m = u && c - u;
            return m ? Math.round(h * 1e3 / m) : void 0;
        };
    }
    function WY(t, e) {
        let n = 0, r = 1e3 / e, i, s;
        const o = (c, u = Date.now())=>{
            n = u, i = null, s && (clearTimeout(s), s = null), t.apply(null, c);
        };
        return [
            (...c)=>{
                const u = Date.now(), f = u - n;
                f >= r ? o(c, u) : (i = c, s || (s = setTimeout(()=>{
                    s = null, o(i);
                }, r - f)));
            },
            ()=>i && o(i)
        ];
    }
    const TE = (t, e, n = 3)=>{
        let r = 0;
        const i = VY(50, 250);
        return WY((s)=>{
            const o = s.loaded, a = s.lengthComputable ? s.total : void 0, l = o - r, c = i(l), u = o <= a;
            r = o;
            const f = {
                loaded: o,
                total: a,
                progress: a ? o / a : void 0,
                bytes: l,
                rate: c || void 0,
                estimated: c && a && u ? (a - o) / c : void 0,
                event: s,
                lengthComputable: a != null,
                [e ? "download" : "upload"]: !0
            };
            t(f);
        }, n);
    }, WD = (t, e)=>{
        const n = t != null;
        return [
            (r)=>e[0]({
                    lengthComputable: n,
                    total: t,
                    loaded: r
                }),
            e[1]
        ];
    }, qD = (t)=>(...e)=>et.asap(()=>t(...e)), qY = ao.hasStandardBrowserEnv ? ((t, e)=>(n)=>(n = new URL(n, ao.origin), t.protocol === n.protocol && t.host === n.host && (e || t.port === n.port)))(new URL(ao.origin), ao.navigator && /(msie|trident)/i.test(ao.navigator.userAgent)) : ()=>!0, HY = ao.hasStandardBrowserEnv ? {
        write (t, e, n, r, i, s) {
            const o = [
                t + "=" + encodeURIComponent(e)
            ];
            et.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), et.isString(r) && o.push("path=" + r), et.isString(i) && o.push("domain=" + i), s === !0 && o.push("secure"), document.cookie = o.join("; ");
        },
        read (t) {
            const e = document.cookie.match(new RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
            return e ? decodeURIComponent(e[3]) : null;
        },
        remove (t) {
            this.write(t, "", Date.now() - 864e5);
        }
    } : {
        write () {},
        read () {
            return null;
        },
        remove () {}
    };
    function $Y(t) {
        return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(t);
    }
    function GY(t, e) {
        return e ? t.replace(/\/?\/$/, "") + "/" + e.replace(/^\/+/, "") : t;
    }
    function rU(t, e) {
        return t && !$Y(e) ? GY(t, e) : e;
    }
    const HD = (t)=>t instanceof ba ? {
            ...t
        } : t;
    function vm(t, e) {
        e = e || {};
        const n = {};
        function r(c, u, f, h) {
            return et.isPlainObject(c) && et.isPlainObject(u) ? et.merge.call({
                caseless: h
            }, c, u) : et.isPlainObject(u) ? et.merge({}, u) : et.isArray(u) ? u.slice() : u;
        }
        function i(c, u, f, h) {
            if (et.isUndefined(u)) {
                if (!et.isUndefined(c)) return r(void 0, c, f, h);
            } else return r(c, u, f, h);
        }
        function s(c, u) {
            if (!et.isUndefined(u)) return r(void 0, u);
        }
        function o(c, u) {
            if (et.isUndefined(u)) {
                if (!et.isUndefined(c)) return r(void 0, c);
            } else return r(void 0, u);
        }
        function a(c, u, f) {
            if (f in e) return r(c, u);
            if (f in t) return r(void 0, c);
        }
        const l = {
            url: s,
            method: s,
            data: s,
            baseURL: o,
            transformRequest: o,
            transformResponse: o,
            paramsSerializer: o,
            timeout: o,
            timeoutMessage: o,
            withCredentials: o,
            withXSRFToken: o,
            adapter: o,
            responseType: o,
            xsrfCookieName: o,
            xsrfHeaderName: o,
            onUploadProgress: o,
            onDownloadProgress: o,
            decompress: o,
            maxContentLength: o,
            maxBodyLength: o,
            beforeRedirect: o,
            transport: o,
            httpAgent: o,
            httpsAgent: o,
            cancelToken: o,
            socketPath: o,
            responseEncoding: o,
            validateStatus: a,
            headers: (c, u, f)=>i(HD(c), HD(u), f, !0)
        };
        return et.forEach(Object.keys(Object.assign({}, t, e)), function(u) {
            const f = l[u] || i, h = f(t[u], e[u], u);
            et.isUndefined(h) && f !== a || (n[u] = h);
        }), n;
    }
    const iU = (t)=>{
        const e = vm({}, t);
        let { data: n, withXSRFToken: r, xsrfHeaderName: i, xsrfCookieName: s, headers: o, auth: a } = e;
        e.headers = o = ba.from(o), e.url = JB(rU(e.baseURL, e.url), t.params, t.paramsSerializer), a && o.set("Authorization", "Basic " + btoa((a.username || "") + ":" + (a.password ? unescape(encodeURIComponent(a.password)) : "")));
        let l;
        if (et.isFormData(n)) {
            if (ao.hasStandardBrowserEnv || ao.hasStandardBrowserWebWorkerEnv) o.setContentType(void 0);
            else if ((l = o.getContentType()) !== !1) {
                const [c, ...u] = l ? l.split(";").map((f)=>f.trim()).filter(Boolean) : [];
                o.setContentType([
                    c || "multipart/form-data",
                    ...u
                ].join("; "));
            }
        }
        if (ao.hasStandardBrowserEnv && (r && et.isFunction(r) && (r = r(e)), r || r !== !1 && qY(e.url))) {
            const c = i && s && HY.read(s);
            c && o.set(i, c);
        }
        return e;
    }, XY = typeof XMLHttpRequest < "u", KY = XY && function(t) {
        return new Promise(function(n, r) {
            const i = iU(t);
            let s = i.data;
            const o = ba.from(i.headers).normalize();
            let { responseType: a, onUploadProgress: l, onDownloadProgress: c } = i, u, f, h, m, v;
            function _() {
                m && m(), v && v(), i.cancelToken && i.cancelToken.unsubscribe(u), i.signal && i.signal.removeEventListener("abort", u);
            }
            let w = new XMLHttpRequest;
            w.open(i.method.toUpperCase(), i.url, !0), w.timeout = i.timeout;
            function b() {
                if (!w) return;
                const E = ba.from("getAllResponseHeaders" in w && w.getAllResponseHeaders()), P = {
                    data: !a || a === "text" || a === "json" ? w.responseText : w.response,
                    status: w.status,
                    statusText: w.statusText,
                    headers: E,
                    config: t,
                    request: w
                };
                nU(function(O) {
                    n(O), _();
                }, function(O) {
                    r(O), _();
                }, P), w = null;
            }
            "onloadend" in w ? w.onloadend = b : w.onreadystatechange = function() {
                !w || w.readyState !== 4 || w.status === 0 && !(w.responseURL && w.responseURL.indexOf("file:") === 0) || setTimeout(b);
            }, w.onabort = function() {
                w && (r(new On("Request aborted", On.ECONNABORTED, t, w)), w = null);
            }, w.onerror = function() {
                r(new On("Network Error", On.ERR_NETWORK, t, w)), w = null;
            }, w.ontimeout = function() {
                let T = i.timeout ? "timeout of " + i.timeout + "ms exceeded" : "timeout exceeded";
                const P = i.transitional || QB;
                i.timeoutErrorMessage && (T = i.timeoutErrorMessage), r(new On(T, P.clarifyTimeoutError ? On.ETIMEDOUT : On.ECONNABORTED, t, w)), w = null;
            }, s === void 0 && o.setContentType(null), "setRequestHeader" in w && et.forEach(o.toJSON(), function(T, P) {
                w.setRequestHeader(P, T);
            }), et.isUndefined(i.withCredentials) || (w.withCredentials = !!i.withCredentials), a && a !== "json" && (w.responseType = i.responseType), c && ([h, v] = TE(c, !0), w.addEventListener("progress", h)), l && w.upload && ([f, m] = TE(l), w.upload.addEventListener("progress", f), w.upload.addEventListener("loadend", m)), (i.cancelToken || i.signal) && (u = (E)=>{
                w && (r(!E || E.type ? new Ny(null, t, w) : E), w.abort(), w = null);
            }, i.cancelToken && i.cancelToken.subscribe(u), i.signal && (i.signal.aborted ? u() : i.signal.addEventListener("abort", u)));
            const M = zY(i.url);
            if (M && ao.protocols.indexOf(M) === -1) {
                r(new On("Unsupported protocol " + M + ":", On.ERR_BAD_REQUEST, t));
                return;
            }
            w.send(s || null);
        });
    }, YY = (t, e)=>{
        const { length: n } = t = t ? t.filter(Boolean) : [];
        if (e || n) {
            let r = new AbortController, i;
            const s = function(c) {
                if (!i) {
                    i = !0, a();
                    const u = c instanceof Error ? c : this.reason;
                    r.abort(u instanceof On ? u : new Ny(u instanceof Error ? u.message : u));
                }
            };
            let o = e && setTimeout(()=>{
                o = null, s(new On(`timeout ${e} of ms exceeded`, On.ETIMEDOUT));
            }, e);
            const a = ()=>{
                t && (o && clearTimeout(o), o = null, t.forEach((c)=>{
                    c.unsubscribe ? c.unsubscribe(s) : c.removeEventListener("abort", s);
                }), t = null);
            };
            t.forEach((c)=>c.addEventListener("abort", s));
            const { signal: l } = r;
            return l.unsubscribe = ()=>et.asap(a), l;
        }
    }, ZY = function*(t, e) {
        let n = t.byteLength;
        if (n < e) {
            yield t;
            return;
        }
        let r = 0, i;
        for(; r < n;)i = r + e, yield t.slice(r, i), r = i;
    }, JY = async function*(t, e) {
        for await (const n of QY(t))yield* ZY(n, e);
    }, QY = async function*(t) {
        if (t[Symbol.asyncIterator]) {
            yield* t;
            return;
        }
        const e = t.getReader();
        try {
            for(;;){
                const { done: n, value: r } = await e.read();
                if (n) break;
                yield r;
            }
        } finally{
            await e.cancel();
        }
    }, $D = (t, e, n, r)=>{
        const i = JY(t, e);
        let s = 0, o, a = (l)=>{
            o || (o = !0, r && r(l));
        };
        return new ReadableStream({
            async pull (l) {
                try {
                    const { done: c, value: u } = await i.next();
                    if (c) {
                        a(), l.close();
                        return;
                    }
                    let f = u.byteLength;
                    if (n) {
                        let h = s += f;
                        n(h);
                    }
                    l.enqueue(new Uint8Array(u));
                } catch (c) {
                    throw a(c), c;
                }
            },
            cancel (l) {
                return a(l), i.return();
            }
        }, {
            highWaterMark: 2
        });
    }, ET = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", sU = ET && typeof ReadableStream == "function", eZ = ET && (typeof TextEncoder == "function" ? ((t)=>(e)=>t.encode(e))(new TextEncoder) : async (t)=>new Uint8Array(await new Response(t).arrayBuffer())), oU = (t, ...e)=>{
        try {
            return !!t(...e);
        } catch  {
            return !1;
        }
    }, tZ = sU && oU(()=>{
        let t = !1;
        const e = new Request(ao.origin, {
            body: new ReadableStream,
            method: "POST",
            get duplex () {
                return t = !0, "half";
            }
        }).headers.has("Content-Type");
        return t && !e;
    }), GD = 64 * 1024, ON = sU && oU(()=>et.isReadableStream(new Response("").body)), CE = {
        stream: ON && ((t)=>t.body)
    };
    ET && ((t)=>{
        [
            "text",
            "arrayBuffer",
            "blob",
            "formData",
            "stream"
        ].forEach((e)=>{
            !CE[e] && (CE[e] = et.isFunction(t[e]) ? (n)=>n[e]() : (n, r)=>{
                throw new On(`Response type '${e}' is not supported`, On.ERR_NOT_SUPPORT, r);
            });
        });
    })(new Response);
    const nZ = async (t)=>{
        if (t == null) return 0;
        if (et.isBlob(t)) return t.size;
        if (et.isSpecCompliantForm(t)) return (await new Request(ao.origin, {
            method: "POST",
            body: t
        }).arrayBuffer()).byteLength;
        if (et.isArrayBufferView(t) || et.isArrayBuffer(t)) return t.byteLength;
        if (et.isURLSearchParams(t) && (t = t + ""), et.isString(t)) return (await eZ(t)).byteLength;
    }, rZ = async (t, e)=>{
        const n = et.toFiniteNumber(t.getContentLength());
        return n ?? nZ(e);
    }, iZ = ET && (async (t)=>{
        let { url: e, method: n, data: r, signal: i, cancelToken: s, timeout: o, onDownloadProgress: a, onUploadProgress: l, responseType: c, headers: u, withCredentials: f = "same-origin", fetchOptions: h } = iU(t);
        c = c ? (c + "").toLowerCase() : "text";
        let m = YY([
            i,
            s && s.toAbortSignal()
        ], o), v;
        const _ = m && m.unsubscribe && (()=>{
            m.unsubscribe();
        });
        let w;
        try {
            if (l && tZ && n !== "get" && n !== "head" && (w = await rZ(u, r)) !== 0) {
                let P = new Request(e, {
                    method: "POST",
                    body: r,
                    duplex: "half"
                }), A;
                if (et.isFormData(r) && (A = P.headers.get("content-type")) && u.setContentType(A), P.body) {
                    const [O, D] = WD(w, TE(qD(l)));
                    r = $D(P.body, GD, O, D);
                }
            }
            et.isString(f) || (f = f ? "include" : "omit");
            const b = "credentials" in Request.prototype;
            v = new Request(e, {
                ...h,
                signal: m,
                method: n.toUpperCase(),
                headers: u.normalize().toJSON(),
                body: r,
                duplex: "half",
                credentials: b ? f : void 0
            });
            let M = await fetch(v);
            const E = ON && (c === "stream" || c === "response");
            if (ON && (a || E && _)) {
                const P = {};
                [
                    "status",
                    "statusText",
                    "headers"
                ].forEach((R)=>{
                    P[R] = M[R];
                });
                const A = et.toFiniteNumber(M.headers.get("content-length")), [O, D] = a && WD(A, TE(qD(a), !0)) || [];
                M = new Response($D(M.body, GD, O, ()=>{
                    D && D(), _ && _();
                }), P);
            }
            c = c || "text";
            let T = await CE[et.findKey(CE, c) || "text"](M, t);
            return !E && _ && _(), await new Promise((P, A)=>{
                nU(P, A, {
                    data: T,
                    headers: ba.from(M.headers),
                    status: M.status,
                    statusText: M.statusText,
                    config: t,
                    request: v
                });
            });
        } catch (b) {
            throw _ && _(), b && b.name === "TypeError" && /fetch/i.test(b.message) ? Object.assign(new On("Network Error", On.ERR_NETWORK, t, v), {
                cause: b.cause || b
            }) : On.from(b, b && b.code, t, v);
        }
    }), DN = {
        http: xY,
        xhr: KY,
        fetch: iZ
    };
    et.forEach(DN, (t, e)=>{
        if (t) {
            try {
                Object.defineProperty(t, "name", {
                    value: e
                });
            } catch  {}
            Object.defineProperty(t, "adapterName", {
                value: e
            });
        }
    });
    const XD = (t)=>`- ${t}`, sZ = (t)=>et.isFunction(t) || t === null || t === !1, aU = {
        getAdapter: (t)=>{
            t = et.isArray(t) ? t : [
                t
            ];
            const { length: e } = t;
            let n, r;
            const i = {};
            for(let s = 0; s < e; s++){
                n = t[s];
                let o;
                if (r = n, !sZ(n) && (r = DN[(o = String(n)).toLowerCase()], r === void 0)) throw new On(`Unknown adapter '${o}'`);
                if (r) break;
                i[o || "#" + s] = r;
            }
            if (!r) {
                const s = Object.entries(i).map(([a, l])=>`adapter ${a} ` + (l === !1 ? "is not supported by the environment" : "is not available in the build"));
                let o = e ? s.length > 1 ? `since :
` + s.map(XD).join(`
`) : " " + XD(s[0]) : "as no adapter specified";
                throw new On("There is no suitable adapter to dispatch the request " + o, "ERR_NOT_SUPPORT");
            }
            return r;
        },
        adapters: DN
    };
    function WC(t) {
        if (t.cancelToken && t.cancelToken.throwIfRequested(), t.signal && t.signal.aborted) throw new Ny(null, t);
    }
    function KD(t) {
        return WC(t), t.headers = ba.from(t.headers), t.data = VC.call(t, t.transformRequest), [
            "post",
            "put",
            "patch"
        ].indexOf(t.method) !== -1 && t.headers.setContentType("application/x-www-form-urlencoded", !1), aU.getAdapter(t.adapter || pw.adapter)(t).then(function(r) {
            return WC(t), r.data = VC.call(t, t.transformResponse, r), r.headers = ba.from(r.headers), r;
        }, function(r) {
            return tU(r) || (WC(t), r && r.response && (r.response.data = VC.call(t, t.transformResponse, r.response), r.response.headers = ba.from(r.response.headers))), Promise.reject(r);
        });
    }
    const lU = "1.7.9", MT = {};
    [
        "object",
        "boolean",
        "number",
        "function",
        "string",
        "symbol"
    ].forEach((t, e)=>{
        MT[t] = function(r) {
            return typeof r === t || "a" + (e < 1 ? "n " : " ") + t;
        };
    });
    const YD = {};
    MT.transitional = function(e, n, r) {
        function i(s, o) {
            return "[Axios v" + lU + "] Transitional option '" + s + "'" + o + (r ? ". " + r : "");
        }
        return (s, o, a)=>{
            if (e === !1) throw new On(i(o, " has been removed" + (n ? " in " + n : "")), On.ERR_DEPRECATED);
            return n && !YD[o] && (YD[o] = !0, console.warn(i(o, " has been deprecated since v" + n + " and will be removed in the near future"))), e ? e(s, o, a) : !0;
        };
    };
    MT.spelling = function(e) {
        return (n, r)=>(console.warn(`${r} is likely a misspelling of ${e}`), !0);
    };
    function oZ(t, e, n) {
        if (typeof t != "object") throw new On("options must be an object", On.ERR_BAD_OPTION_VALUE);
        const r = Object.keys(t);
        let i = r.length;
        for(; i-- > 0;){
            const s = r[i], o = e[s];
            if (o) {
                const a = t[s], l = a === void 0 || o(a, s, t);
                if (l !== !0) throw new On("option " + s + " must be " + l, On.ERR_BAD_OPTION_VALUE);
                continue;
            }
            if (n !== !0) throw new On("Unknown option " + s, On.ERR_BAD_OPTION);
        }
    }
    const CS = {
        assertOptions: oZ,
        validators: MT
    }, Wc = CS.validators;
    let om = class {
        constructor(e){
            this.defaults = e, this.interceptors = {
                request: new zD,
                response: new zD
            };
        }
        async request(e, n) {
            try {
                return await this._request(e, n);
            } catch (r) {
                if (r instanceof Error) {
                    let i = {};
                    Error.captureStackTrace ? Error.captureStackTrace(i) : i = new Error;
                    const s = i.stack ? i.stack.replace(/^.+\n/, "") : "";
                    try {
                        r.stack ? s && !String(r.stack).endsWith(s.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + s) : r.stack = s;
                    } catch  {}
                }
                throw r;
            }
        }
        _request(e, n) {
            typeof e == "string" ? (n = n || {}, n.url = e) : n = e || {}, n = vm(this.defaults, n);
            const { transitional: r, paramsSerializer: i, headers: s } = n;
            r !== void 0 && CS.assertOptions(r, {
                silentJSONParsing: Wc.transitional(Wc.boolean),
                forcedJSONParsing: Wc.transitional(Wc.boolean),
                clarifyTimeoutError: Wc.transitional(Wc.boolean)
            }, !1), i != null && (et.isFunction(i) ? n.paramsSerializer = {
                serialize: i
            } : CS.assertOptions(i, {
                encode: Wc.function,
                serialize: Wc.function
            }, !0)), CS.assertOptions(n, {
                baseUrl: Wc.spelling("baseURL"),
                withXsrfToken: Wc.spelling("withXSRFToken")
            }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
            let o = s && et.merge(s.common, s[n.method]);
            s && et.forEach([
                "delete",
                "get",
                "head",
                "post",
                "put",
                "patch",
                "common"
            ], (v)=>{
                delete s[v];
            }), n.headers = ba.concat(o, s);
            const a = [];
            let l = !0;
            this.interceptors.request.forEach(function(_) {
                typeof _.runWhen == "function" && _.runWhen(n) === !1 || (l = l && _.synchronous, a.unshift(_.fulfilled, _.rejected));
            });
            const c = [];
            this.interceptors.response.forEach(function(_) {
                c.push(_.fulfilled, _.rejected);
            });
            let u, f = 0, h;
            if (!l) {
                const v = [
                    KD.bind(this),
                    void 0
                ];
                for(v.unshift.apply(v, a), v.push.apply(v, c), h = v.length, u = Promise.resolve(n); f < h;)u = u.then(v[f++], v[f++]);
                return u;
            }
            h = a.length;
            let m = n;
            for(f = 0; f < h;){
                const v = a[f++], _ = a[f++];
                try {
                    m = v(m);
                } catch (w) {
                    _.call(this, w);
                    break;
                }
            }
            try {
                u = KD.call(this, m);
            } catch (v) {
                return Promise.reject(v);
            }
            for(f = 0, h = c.length; f < h;)u = u.then(c[f++], c[f++]);
            return u;
        }
        getUri(e) {
            e = vm(this.defaults, e);
            const n = rU(e.baseURL, e.url);
            return JB(n, e.params, e.paramsSerializer);
        }
    };
    et.forEach([
        "delete",
        "get",
        "head",
        "options"
    ], function(e) {
        om.prototype[e] = function(n, r) {
            return this.request(vm(r || {}, {
                method: e,
                url: n,
                data: (r || {}).data
            }));
        };
    });
    et.forEach([
        "post",
        "put",
        "patch"
    ], function(e) {
        function n(r) {
            return function(s, o, a) {
                return this.request(vm(a || {}, {
                    method: e,
                    headers: r ? {
                        "Content-Type": "multipart/form-data"
                    } : {},
                    url: s,
                    data: o
                }));
            };
        }
        om.prototype[e] = n(), om.prototype[e + "Form"] = n(!0);
    });
    let aZ = class cU {
        constructor(e){
            if (typeof e != "function") throw new TypeError("executor must be a function.");
            let n;
            this.promise = new Promise(function(s) {
                n = s;
            });
            const r = this;
            this.promise.then((i)=>{
                if (!r._listeners) return;
                let s = r._listeners.length;
                for(; s-- > 0;)r._listeners[s](i);
                r._listeners = null;
            }), this.promise.then = (i)=>{
                let s;
                const o = new Promise((a)=>{
                    r.subscribe(a), s = a;
                }).then(i);
                return o.cancel = function() {
                    r.unsubscribe(s);
                }, o;
            }, e(function(s, o, a) {
                r.reason || (r.reason = new Ny(s, o, a), n(r.reason));
            });
        }
        throwIfRequested() {
            if (this.reason) throw this.reason;
        }
        subscribe(e) {
            if (this.reason) {
                e(this.reason);
                return;
            }
            this._listeners ? this._listeners.push(e) : this._listeners = [
                e
            ];
        }
        unsubscribe(e) {
            if (!this._listeners) return;
            const n = this._listeners.indexOf(e);
            n !== -1 && this._listeners.splice(n, 1);
        }
        toAbortSignal() {
            const e = new AbortController, n = (r)=>{
                e.abort(r);
            };
            return this.subscribe(n), e.signal.unsubscribe = ()=>this.unsubscribe(n), e.signal;
        }
        static source() {
            let e;
            return {
                token: new cU(function(i) {
                    e = i;
                }),
                cancel: e
            };
        }
    };
    function lZ(t) {
        return function(n) {
            return t.apply(null, n);
        };
    }
    function cZ(t) {
        return et.isObject(t) && t.isAxiosError === !0;
    }
    const LN = {
        Continue: 100,
        SwitchingProtocols: 101,
        Processing: 102,
        EarlyHints: 103,
        Ok: 200,
        Created: 201,
        Accepted: 202,
        NonAuthoritativeInformation: 203,
        NoContent: 204,
        ResetContent: 205,
        PartialContent: 206,
        MultiStatus: 207,
        AlreadyReported: 208,
        ImUsed: 226,
        MultipleChoices: 300,
        MovedPermanently: 301,
        Found: 302,
        SeeOther: 303,
        NotModified: 304,
        UseProxy: 305,
        Unused: 306,
        TemporaryRedirect: 307,
        PermanentRedirect: 308,
        BadRequest: 400,
        Unauthorized: 401,
        PaymentRequired: 402,
        Forbidden: 403,
        NotFound: 404,
        MethodNotAllowed: 405,
        NotAcceptable: 406,
        ProxyAuthenticationRequired: 407,
        RequestTimeout: 408,
        Conflict: 409,
        Gone: 410,
        LengthRequired: 411,
        PreconditionFailed: 412,
        PayloadTooLarge: 413,
        UriTooLong: 414,
        UnsupportedMediaType: 415,
        RangeNotSatisfiable: 416,
        ExpectationFailed: 417,
        ImATeapot: 418,
        MisdirectedRequest: 421,
        UnprocessableEntity: 422,
        Locked: 423,
        FailedDependency: 424,
        TooEarly: 425,
        UpgradeRequired: 426,
        PreconditionRequired: 428,
        TooManyRequests: 429,
        RequestHeaderFieldsTooLarge: 431,
        UnavailableForLegalReasons: 451,
        InternalServerError: 500,
        NotImplemented: 501,
        BadGateway: 502,
        ServiceUnavailable: 503,
        GatewayTimeout: 504,
        HttpVersionNotSupported: 505,
        VariantAlsoNegotiates: 506,
        InsufficientStorage: 507,
        LoopDetected: 508,
        NotExtended: 510,
        NetworkAuthenticationRequired: 511
    };
    Object.entries(LN).forEach(([t, e])=>{
        LN[e] = t;
    });
    function uU(t) {
        const e = new om(t), n = UB(om.prototype.request, e);
        return et.extend(n, om.prototype, e, {
            allOwnKeys: !0
        }), et.extend(n, e, null, {
            allOwnKeys: !0
        }), n.create = function(i) {
            return uU(vm(t, i));
        }, n;
    }
    const Fi = uU(pw);
    Fi.Axios = om;
    Fi.CanceledError = Ny;
    Fi.CancelToken = aZ;
    Fi.isCancel = tU;
    Fi.VERSION = lU;
    Fi.toFormData = ST;
    Fi.AxiosError = On;
    Fi.Cancel = Fi.CanceledError;
    Fi.all = function(e) {
        return Promise.all(e);
    };
    Fi.spread = lZ;
    Fi.isAxiosError = cZ;
    Fi.mergeConfig = vm;
    Fi.AxiosHeaders = ba;
    Fi.formToJSON = (t)=>eU(et.isHTMLForm(t) ? new FormData(t) : t);
    Fi.getAdapter = aU.getAdapter;
    Fi.HttpStatusCode = LN;
    Fi.default = Fi;
    const { Axios: h2e, AxiosError: uZ, CanceledError: p2e, isCancel: m2e, CancelToken: g2e, VERSION: y2e, all: v2e, Cancel: x2e, isAxiosError: b2e, spread: w2e, toFormData: _2e, AxiosHeaders: S2e, HttpStatusCode: E2e, formToJSON: M2e, getAdapter: T2e, mergeConfig: C2e } = Fi, gP = ({ error: t, schema: e, onError: n })=>{
        if (t instanceof uZ) {
            const i = e.safeParse(t.response?.data);
            return i.success && n({
                error: t,
                data: i.data
            }), i.success;
        }
        return !1;
    };
    var qC, ZD;
    function dZ() {
        if (ZD) return qC;
        ZD = 1;
        function t(r) {
            this.queue = [], this.timeslotRequests = 0, this.interceptors = {
                request: null,
                response: null
            }, this.handleRequest = this.handleRequest.bind(this), this.handleResponse = this.handleResponse.bind(this), this.enable(r);
        }
        t.prototype.getMaxRPS = function() {
            var r = this.perMilliseconds / 1e3;
            return this.maxRequests / r;
        }, t.prototype.getQueue = function() {
            return this.queue;
        }, t.prototype.setMaxRPS = function(r) {
            this.setRateLimitOptions({
                maxRequests: r,
                perMilliseconds: 1e3
            });
        }, t.prototype.setRateLimitOptions = function(r) {
            r.maxRPS ? this.setMaxRPS(r.maxRPS) : (this.perMilliseconds = r.perMilliseconds, this.maxRequests = r.maxRequests);
        }, t.prototype.enable = function(r) {
            function i(s) {
                return Promise.reject(s);
            }
            this.interceptors.request = r.interceptors.request.use(this.handleRequest, i), this.interceptors.response = r.interceptors.response.use(this.handleResponse, i);
        };
        function e(r) {
            r.cancelToken && r.cancelToken.throwIfRequested();
        }
        t.prototype.handleRequest = function(r) {
            return new Promise(function(i, s) {
                this.push({
                    resolve: function() {
                        try {
                            e(r);
                        } catch (o) {
                            return s(o), !1;
                        }
                        return i(r), !0;
                    }
                });
            }.bind(this));
        }, t.prototype.handleResponse = function(r) {
            return this.shift(), r;
        }, t.prototype.push = function(r) {
            this.queue.push(r), this.shiftInitial();
        }, t.prototype.shiftInitial = function() {
            setTimeout(function() {
                return this.shift();
            }.bind(this), 0);
        }, t.prototype.shift = function() {
            if (this.queue.length) {
                if (this.timeslotRequests === this.maxRequests) {
                    this.timeoutId && typeof this.timeoutId.ref == "function" && this.timeoutId.ref();
                    return;
                }
                var r = this.queue.shift(), i = r.resolve();
                if (this.timeslotRequests === 0 && (this.timeoutId = setTimeout(function() {
                    this.timeslotRequests = 0, this.shift();
                }.bind(this), this.perMilliseconds), typeof this.timeoutId.unref == "function" && this.queue.length === 0 && this.timeoutId.unref()), !i) {
                    this.shift();
                    return;
                }
                this.timeslotRequests += 1;
            }
        };
        function n(r, i) {
            var s = new t(r);
            return s.setRateLimitOptions(i), r.getQueue = t.prototype.getQueue.bind(s), r.getMaxRPS = t.prototype.getMaxRPS.bind(s), r.setMaxRPS = t.prototype.setMaxRPS.bind(s), r.setRateLimitOptions = t.prototype.setRateLimitOptions.bind(s), r;
        }
        return qC = n, qC;
    }
    var fZ = dZ();
    const hZ = Go(fZ), pZ = ({ instance: t, limit: e } = {})=>hZ(t || Fi, e || {
            maxRequests: 5,
            perMilliseconds: 100
        }), yP = "-", mZ = (t)=>{
        const e = yZ(t), { conflictingClassGroups: n, conflictingClassGroupModifiers: r } = t;
        return {
            getClassGroupId: (o)=>{
                const a = o.split(yP);
                return a[0] === "" && a.length !== 1 && a.shift(), dU(a, e) || gZ(o);
            },
            getConflictingClassGroupIds: (o, a)=>{
                const l = n[o] || [];
                return a && r[o] ? [
                    ...l,
                    ...r[o]
                ] : l;
            }
        };
    }, dU = (t, e)=>{
        if (t.length === 0) return e.classGroupId;
        const n = t[0], r = e.nextPart.get(n), i = r ? dU(t.slice(1), r) : void 0;
        if (i) return i;
        if (e.validators.length === 0) return;
        const s = t.join(yP);
        return e.validators.find(({ validator: o })=>o(s))?.classGroupId;
    }, JD = /^\[(.+)\]$/, gZ = (t)=>{
        if (JD.test(t)) {
            const e = JD.exec(t)[1], n = e?.substring(0, e.indexOf(":"));
            if (n) return "arbitrary.." + n;
        }
    }, yZ = (t)=>{
        const { theme: e, classGroups: n } = t, r = {
            nextPart: new Map,
            validators: []
        };
        for(const i in n)FN(n[i], r, i, e);
        return r;
    }, FN = (t, e, n, r)=>{
        t.forEach((i)=>{
            if (typeof i == "string") {
                const s = i === "" ? e : QD(e, i);
                s.classGroupId = n;
                return;
            }
            if (typeof i == "function") {
                if (vZ(i)) {
                    FN(i(r), e, n, r);
                    return;
                }
                e.validators.push({
                    validator: i,
                    classGroupId: n
                });
                return;
            }
            Object.entries(i).forEach(([s, o])=>{
                FN(o, QD(e, s), n, r);
            });
        });
    }, QD = (t, e)=>{
        let n = t;
        return e.split(yP).forEach((r)=>{
            n.nextPart.has(r) || n.nextPart.set(r, {
                nextPart: new Map,
                validators: []
            }), n = n.nextPart.get(r);
        }), n;
    }, vZ = (t)=>t.isThemeGetter, xZ = (t)=>{
        if (t < 1) return {
            get: ()=>{},
            set: ()=>{}
        };
        let e = 0, n = new Map, r = new Map;
        const i = (s, o)=>{
            n.set(s, o), e++, e > t && (e = 0, r = n, n = new Map);
        };
        return {
            get (s) {
                let o = n.get(s);
                if (o !== void 0) return o;
                if ((o = r.get(s)) !== void 0) return i(s, o), o;
            },
            set (s, o) {
                n.has(s) ? n.set(s, o) : i(s, o);
            }
        };
    }, jN = "!", BN = ":", bZ = BN.length, wZ = (t)=>{
        const { prefix: e, experimentalParseClassName: n } = t;
        let r = (i)=>{
            const s = [];
            let o = 0, a = 0, l = 0, c;
            for(let v = 0; v < i.length; v++){
                let _ = i[v];
                if (o === 0 && a === 0) {
                    if (_ === BN) {
                        s.push(i.slice(l, v)), l = v + bZ;
                        continue;
                    }
                    if (_ === "/") {
                        c = v;
                        continue;
                    }
                }
                _ === "[" ? o++ : _ === "]" ? o-- : _ === "(" ? a++ : _ === ")" && a--;
            }
            const u = s.length === 0 ? i : i.substring(l), f = _Z(u), h = f !== u, m = c && c > l ? c - l : void 0;
            return {
                modifiers: s,
                hasImportantModifier: h,
                baseClassName: f,
                maybePostfixModifierPosition: m
            };
        };
        if (e) {
            const i = e + BN, s = r;
            r = (o)=>o.startsWith(i) ? s(o.substring(i.length)) : {
                    isExternal: !0,
                    modifiers: [],
                    hasImportantModifier: !1,
                    baseClassName: o,
                    maybePostfixModifierPosition: void 0
                };
        }
        if (n) {
            const i = r;
            r = (s)=>n({
                    className: s,
                    parseClassName: i
                });
        }
        return r;
    }, _Z = (t)=>t.endsWith(jN) ? t.substring(0, t.length - 1) : t.startsWith(jN) ? t.substring(1) : t, SZ = (t)=>{
        const e = Object.fromEntries(t.orderSensitiveModifiers.map((r)=>[
                r,
                !0
            ]));
        return (r)=>{
            if (r.length <= 1) return r;
            const i = [];
            let s = [];
            return r.forEach((o)=>{
                o[0] === "[" || e[o] ? (i.push(...s.sort(), o), s = []) : s.push(o);
            }), i.push(...s.sort()), i;
        };
    }, EZ = (t)=>({
            cache: xZ(t.cacheSize),
            parseClassName: wZ(t),
            sortModifiers: SZ(t),
            ...mZ(t)
        }), MZ = /\s+/, TZ = (t, e)=>{
        const { parseClassName: n, getClassGroupId: r, getConflictingClassGroupIds: i, sortModifiers: s } = e, o = [], a = t.trim().split(MZ);
        let l = "";
        for(let c = a.length - 1; c >= 0; c -= 1){
            const u = a[c], { isExternal: f, modifiers: h, hasImportantModifier: m, baseClassName: v, maybePostfixModifierPosition: _ } = n(u);
            if (f) {
                l = u + (l.length > 0 ? " " + l : l);
                continue;
            }
            let w = !!_, b = r(w ? v.substring(0, _) : v);
            if (!b) {
                if (!w) {
                    l = u + (l.length > 0 ? " " + l : l);
                    continue;
                }
                if (b = r(v), !b) {
                    l = u + (l.length > 0 ? " " + l : l);
                    continue;
                }
                w = !1;
            }
            const M = s(h).join(":"), E = m ? M + jN : M, T = E + b;
            if (o.includes(T)) continue;
            o.push(T);
            const P = i(b, w);
            for(let A = 0; A < P.length; ++A){
                const O = P[A];
                o.push(E + O);
            }
            l = u + (l.length > 0 ? " " + l : l);
        }
        return l;
    };
    function CZ() {
        let t = 0, e, n, r = "";
        for(; t < arguments.length;)(e = arguments[t++]) && (n = fU(e)) && (r && (r += " "), r += n);
        return r;
    }
    const fU = (t)=>{
        if (typeof t == "string") return t;
        let e, n = "";
        for(let r = 0; r < t.length; r++)t[r] && (e = fU(t[r])) && (n && (n += " "), n += e);
        return n;
    };
    function RZ(t, ...e) {
        let n, r, i, s = o;
        function o(l) {
            const c = e.reduce((u, f)=>f(u), t());
            return n = EZ(c), r = n.cache.get, i = n.cache.set, s = a, a(l);
        }
        function a(l) {
            const c = r(l);
            if (c) return c;
            const u = TZ(l, n);
            return i(l, u), u;
        }
        return function() {
            return s(CZ.apply(null, arguments));
        };
    }
    const ws = (t)=>{
        const e = (n)=>n[t] || [];
        return e.isThemeGetter = !0, e;
    }, hU = /^\[(?:(\w[\w-]*):)?(.+)\]$/i, pU = /^\((?:(\w[\w-]*):)?(.+)\)$/i, IZ = /^\d+\/\d+$/, AZ = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, NZ = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, PZ = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, kZ = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, OZ = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/, zg = (t)=>IZ.test(t), Jn = (t)=>!!t && !Number.isNaN(Number(t)), bp = (t)=>!!t && Number.isInteger(Number(t)), eL = (t)=>t.endsWith("%") && Jn(t.slice(0, -1)), Tf = (t)=>AZ.test(t), DZ = ()=>!0, LZ = (t)=>NZ.test(t) && !PZ.test(t), vP = ()=>!1, FZ = (t)=>kZ.test(t), jZ = (t)=>OZ.test(t), BZ = (t)=>!Dt(t) && !Lt(t), UZ = (t)=>Py(t, yU, vP), Dt = (t)=>hU.test(t), wp = (t)=>Py(t, vU, LZ), HC = (t)=>Py(t, ZZ, Jn), zZ = (t)=>Py(t, mU, vP), VZ = (t)=>Py(t, gU, jZ), WZ = (t)=>Py(t, vP, FZ), Lt = (t)=>pU.test(t), n1 = (t)=>ky(t, vU), qZ = (t)=>ky(t, JZ), HZ = (t)=>ky(t, mU), $Z = (t)=>ky(t, yU), GZ = (t)=>ky(t, gU), XZ = (t)=>ky(t, QZ, !0), Py = (t, e, n)=>{
        const r = hU.exec(t);
        return r ? r[1] ? e(r[1]) : n(r[2]) : !1;
    }, ky = (t, e, n = !1)=>{
        const r = pU.exec(t);
        return r ? r[1] ? e(r[1]) : n : !1;
    }, mU = (t)=>t === "position", KZ = new Set([
        "image",
        "url"
    ]), gU = (t)=>KZ.has(t), YZ = new Set([
        "length",
        "size",
        "percentage"
    ]), yU = (t)=>YZ.has(t), vU = (t)=>t === "length", ZZ = (t)=>t === "number", JZ = (t)=>t === "family-name", QZ = (t)=>t === "shadow", eJ = ()=>{
        const t = ws("color"), e = ws("font"), n = ws("text"), r = ws("font-weight"), i = ws("tracking"), s = ws("leading"), o = ws("breakpoint"), a = ws("container"), l = ws("spacing"), c = ws("radius"), u = ws("shadow"), f = ws("inset-shadow"), h = ws("drop-shadow"), m = ws("blur"), v = ws("perspective"), _ = ws("aspect"), w = ws("ease"), b = ws("animate"), M = ()=>[
                "auto",
                "avoid",
                "all",
                "avoid-page",
                "page",
                "left",
                "right",
                "column"
            ], E = ()=>[
                "bottom",
                "center",
                "left",
                "left-bottom",
                "left-top",
                "right",
                "right-bottom",
                "right-top",
                "top"
            ], T = ()=>[
                "auto",
                "hidden",
                "clip",
                "visible",
                "scroll"
            ], P = ()=>[
                "auto",
                "contain",
                "none"
            ], A = ()=>[
                zg,
                "px",
                "full",
                "auto",
                Lt,
                Dt,
                l
            ], O = ()=>[
                bp,
                "none",
                "subgrid",
                Lt,
                Dt
            ], D = ()=>[
                "auto",
                {
                    span: [
                        "full",
                        bp,
                        Lt,
                        Dt
                    ]
                },
                Lt,
                Dt
            ], R = ()=>[
                bp,
                "auto",
                Lt,
                Dt
            ], N = ()=>[
                "auto",
                "min",
                "max",
                "fr",
                Lt,
                Dt
            ], k = ()=>[
                Lt,
                Dt,
                l
            ], U = ()=>[
                "start",
                "end",
                "center",
                "between",
                "around",
                "evenly",
                "stretch",
                "baseline"
            ], B = ()=>[
                "start",
                "end",
                "center",
                "stretch"
            ], j = ()=>[
                Lt,
                Dt,
                l
            ], K = ()=>[
                "px",
                ...j()
            ], q = ()=>[
                "px",
                "auto",
                ...j()
            ], ee = ()=>[
                zg,
                "auto",
                "px",
                "full",
                "dvw",
                "dvh",
                "lvw",
                "lvh",
                "svw",
                "svh",
                "min",
                "max",
                "fit",
                Lt,
                Dt,
                l
            ], W = ()=>[
                t,
                Lt,
                Dt
            ], Z = ()=>[
                eL,
                wp
            ], $ = ()=>[
                "",
                "none",
                "full",
                c,
                Lt,
                Dt
            ], H = ()=>[
                "",
                Jn,
                n1,
                wp
            ], se = ()=>[
                "solid",
                "dashed",
                "dotted",
                "double"
            ], le = ()=>[
                "normal",
                "multiply",
                "screen",
                "overlay",
                "darken",
                "lighten",
                "color-dodge",
                "color-burn",
                "hard-light",
                "soft-light",
                "difference",
                "exclusion",
                "hue",
                "saturation",
                "color",
                "luminosity"
            ], ne = ()=>[
                "",
                "none",
                m,
                Lt,
                Dt
            ], ue = ()=>[
                "center",
                "top",
                "top-right",
                "right",
                "bottom-right",
                "bottom",
                "bottom-left",
                "left",
                "top-left",
                Lt,
                Dt
            ], ge = ()=>[
                "none",
                Jn,
                Lt,
                Dt
            ], ye = ()=>[
                "none",
                Jn,
                Lt,
                Dt
            ], _e = ()=>[
                Jn,
                Lt,
                Dt
            ], Te = ()=>[
                zg,
                "full",
                "px",
                Lt,
                Dt,
                l
            ];
        return {
            cacheSize: 500,
            theme: {
                animate: [
                    "spin",
                    "ping",
                    "pulse",
                    "bounce"
                ],
                aspect: [
                    "video"
                ],
                blur: [
                    Tf
                ],
                breakpoint: [
                    Tf
                ],
                color: [
                    DZ
                ],
                container: [
                    Tf
                ],
                "drop-shadow": [
                    Tf
                ],
                ease: [
                    "in",
                    "out",
                    "in-out"
                ],
                font: [
                    BZ
                ],
                "font-weight": [
                    "thin",
                    "extralight",
                    "light",
                    "normal",
                    "medium",
                    "semibold",
                    "bold",
                    "extrabold",
                    "black"
                ],
                "inset-shadow": [
                    Tf
                ],
                leading: [
                    "none",
                    "tight",
                    "snug",
                    "normal",
                    "relaxed",
                    "loose"
                ],
                perspective: [
                    "dramatic",
                    "near",
                    "normal",
                    "midrange",
                    "distant",
                    "none"
                ],
                radius: [
                    Tf
                ],
                shadow: [
                    Tf
                ],
                spacing: [
                    Jn
                ],
                text: [
                    Tf
                ],
                tracking: [
                    "tighter",
                    "tight",
                    "normal",
                    "wide",
                    "wider",
                    "widest"
                ]
            },
            classGroups: {
                aspect: [
                    {
                        aspect: [
                            "auto",
                            "square",
                            zg,
                            Dt,
                            Lt,
                            _
                        ]
                    }
                ],
                container: [
                    "container"
                ],
                columns: [
                    {
                        columns: [
                            Jn,
                            Dt,
                            Lt,
                            a
                        ]
                    }
                ],
                "break-after": [
                    {
                        "break-after": M()
                    }
                ],
                "break-before": [
                    {
                        "break-before": M()
                    }
                ],
                "break-inside": [
                    {
                        "break-inside": [
                            "auto",
                            "avoid",
                            "avoid-page",
                            "avoid-column"
                        ]
                    }
                ],
                "box-decoration": [
                    {
                        "box-decoration": [
                            "slice",
                            "clone"
                        ]
                    }
                ],
                box: [
                    {
                        box: [
                            "border",
                            "content"
                        ]
                    }
                ],
                display: [
                    "block",
                    "inline-block",
                    "inline",
                    "flex",
                    "inline-flex",
                    "table",
                    "inline-table",
                    "table-caption",
                    "table-cell",
                    "table-column",
                    "table-column-group",
                    "table-footer-group",
                    "table-header-group",
                    "table-row-group",
                    "table-row",
                    "flow-root",
                    "grid",
                    "inline-grid",
                    "contents",
                    "list-item",
                    "hidden"
                ],
                sr: [
                    "sr-only",
                    "not-sr-only"
                ],
                float: [
                    {
                        float: [
                            "right",
                            "left",
                            "none",
                            "start",
                            "end"
                        ]
                    }
                ],
                clear: [
                    {
                        clear: [
                            "left",
                            "right",
                            "both",
                            "none",
                            "start",
                            "end"
                        ]
                    }
                ],
                isolation: [
                    "isolate",
                    "isolation-auto"
                ],
                "object-fit": [
                    {
                        object: [
                            "contain",
                            "cover",
                            "fill",
                            "none",
                            "scale-down"
                        ]
                    }
                ],
                "object-position": [
                    {
                        object: [
                            ...E(),
                            Dt,
                            Lt
                        ]
                    }
                ],
                overflow: [
                    {
                        overflow: T()
                    }
                ],
                "overflow-x": [
                    {
                        "overflow-x": T()
                    }
                ],
                "overflow-y": [
                    {
                        "overflow-y": T()
                    }
                ],
                overscroll: [
                    {
                        overscroll: P()
                    }
                ],
                "overscroll-x": [
                    {
                        "overscroll-x": P()
                    }
                ],
                "overscroll-y": [
                    {
                        "overscroll-y": P()
                    }
                ],
                position: [
                    "static",
                    "fixed",
                    "absolute",
                    "relative",
                    "sticky"
                ],
                inset: [
                    {
                        inset: A()
                    }
                ],
                "inset-x": [
                    {
                        "inset-x": A()
                    }
                ],
                "inset-y": [
                    {
                        "inset-y": A()
                    }
                ],
                start: [
                    {
                        start: A()
                    }
                ],
                end: [
                    {
                        end: A()
                    }
                ],
                top: [
                    {
                        top: A()
                    }
                ],
                right: [
                    {
                        right: A()
                    }
                ],
                bottom: [
                    {
                        bottom: A()
                    }
                ],
                left: [
                    {
                        left: A()
                    }
                ],
                visibility: [
                    "visible",
                    "invisible",
                    "collapse"
                ],
                z: [
                    {
                        z: [
                            bp,
                            "auto",
                            Lt,
                            Dt
                        ]
                    }
                ],
                basis: [
                    {
                        basis: [
                            zg,
                            "full",
                            "auto",
                            Lt,
                            Dt,
                            a,
                            l
                        ]
                    }
                ],
                "flex-direction": [
                    {
                        flex: [
                            "row",
                            "row-reverse",
                            "col",
                            "col-reverse"
                        ]
                    }
                ],
                "flex-wrap": [
                    {
                        flex: [
                            "nowrap",
                            "wrap",
                            "wrap-reverse"
                        ]
                    }
                ],
                flex: [
                    {
                        flex: [
                            Jn,
                            zg,
                            "auto",
                            "initial",
                            "none",
                            Dt
                        ]
                    }
                ],
                grow: [
                    {
                        grow: [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                shrink: [
                    {
                        shrink: [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                order: [
                    {
                        order: [
                            bp,
                            "first",
                            "last",
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "grid-cols": [
                    {
                        "grid-cols": O()
                    }
                ],
                "col-start-end": [
                    {
                        col: D()
                    }
                ],
                "col-start": [
                    {
                        "col-start": R()
                    }
                ],
                "col-end": [
                    {
                        "col-end": R()
                    }
                ],
                "grid-rows": [
                    {
                        "grid-rows": O()
                    }
                ],
                "row-start-end": [
                    {
                        row: D()
                    }
                ],
                "row-start": [
                    {
                        "row-start": R()
                    }
                ],
                "row-end": [
                    {
                        "row-end": R()
                    }
                ],
                "grid-flow": [
                    {
                        "grid-flow": [
                            "row",
                            "col",
                            "dense",
                            "row-dense",
                            "col-dense"
                        ]
                    }
                ],
                "auto-cols": [
                    {
                        "auto-cols": N()
                    }
                ],
                "auto-rows": [
                    {
                        "auto-rows": N()
                    }
                ],
                gap: [
                    {
                        gap: k()
                    }
                ],
                "gap-x": [
                    {
                        "gap-x": k()
                    }
                ],
                "gap-y": [
                    {
                        "gap-y": k()
                    }
                ],
                "justify-content": [
                    {
                        justify: [
                            ...U(),
                            "normal"
                        ]
                    }
                ],
                "justify-items": [
                    {
                        "justify-items": [
                            ...B(),
                            "normal"
                        ]
                    }
                ],
                "justify-self": [
                    {
                        "justify-self": [
                            "auto",
                            ...B()
                        ]
                    }
                ],
                "align-content": [
                    {
                        content: [
                            "normal",
                            ...U()
                        ]
                    }
                ],
                "align-items": [
                    {
                        items: [
                            ...B(),
                            "baseline"
                        ]
                    }
                ],
                "align-self": [
                    {
                        self: [
                            "auto",
                            ...B(),
                            "baseline"
                        ]
                    }
                ],
                "place-content": [
                    {
                        "place-content": U()
                    }
                ],
                "place-items": [
                    {
                        "place-items": [
                            ...B(),
                            "baseline"
                        ]
                    }
                ],
                "place-self": [
                    {
                        "place-self": [
                            "auto",
                            ...B()
                        ]
                    }
                ],
                p: [
                    {
                        p: K()
                    }
                ],
                px: [
                    {
                        px: K()
                    }
                ],
                py: [
                    {
                        py: K()
                    }
                ],
                ps: [
                    {
                        ps: K()
                    }
                ],
                pe: [
                    {
                        pe: K()
                    }
                ],
                pt: [
                    {
                        pt: K()
                    }
                ],
                pr: [
                    {
                        pr: K()
                    }
                ],
                pb: [
                    {
                        pb: K()
                    }
                ],
                pl: [
                    {
                        pl: K()
                    }
                ],
                m: [
                    {
                        m: q()
                    }
                ],
                mx: [
                    {
                        mx: q()
                    }
                ],
                my: [
                    {
                        my: q()
                    }
                ],
                ms: [
                    {
                        ms: q()
                    }
                ],
                me: [
                    {
                        me: q()
                    }
                ],
                mt: [
                    {
                        mt: q()
                    }
                ],
                mr: [
                    {
                        mr: q()
                    }
                ],
                mb: [
                    {
                        mb: q()
                    }
                ],
                ml: [
                    {
                        ml: q()
                    }
                ],
                "space-x": [
                    {
                        "space-x": j()
                    }
                ],
                "space-x-reverse": [
                    "space-x-reverse"
                ],
                "space-y": [
                    {
                        "space-y": j()
                    }
                ],
                "space-y-reverse": [
                    "space-y-reverse"
                ],
                size: [
                    {
                        size: ee()
                    }
                ],
                w: [
                    {
                        w: [
                            a,
                            "screen",
                            ...ee()
                        ]
                    }
                ],
                "min-w": [
                    {
                        "min-w": [
                            a,
                            "screen",
                            "none",
                            ...ee()
                        ]
                    }
                ],
                "max-w": [
                    {
                        "max-w": [
                            a,
                            "screen",
                            "none",
                            "prose",
                            {
                                screen: [
                                    o
                                ]
                            },
                            ...ee()
                        ]
                    }
                ],
                h: [
                    {
                        h: [
                            "screen",
                            ...ee()
                        ]
                    }
                ],
                "min-h": [
                    {
                        "min-h": [
                            "screen",
                            "none",
                            ...ee()
                        ]
                    }
                ],
                "max-h": [
                    {
                        "max-h": [
                            "screen",
                            ...ee()
                        ]
                    }
                ],
                "font-size": [
                    {
                        text: [
                            "base",
                            n,
                            n1,
                            wp
                        ]
                    }
                ],
                "font-smoothing": [
                    "antialiased",
                    "subpixel-antialiased"
                ],
                "font-style": [
                    "italic",
                    "not-italic"
                ],
                "font-weight": [
                    {
                        font: [
                            r,
                            Lt,
                            HC
                        ]
                    }
                ],
                "font-stretch": [
                    {
                        "font-stretch": [
                            "ultra-condensed",
                            "extra-condensed",
                            "condensed",
                            "semi-condensed",
                            "normal",
                            "semi-expanded",
                            "expanded",
                            "extra-expanded",
                            "ultra-expanded",
                            eL,
                            Dt
                        ]
                    }
                ],
                "font-family": [
                    {
                        font: [
                            qZ,
                            Dt,
                            e
                        ]
                    }
                ],
                "fvn-normal": [
                    "normal-nums"
                ],
                "fvn-ordinal": [
                    "ordinal"
                ],
                "fvn-slashed-zero": [
                    "slashed-zero"
                ],
                "fvn-figure": [
                    "lining-nums",
                    "oldstyle-nums"
                ],
                "fvn-spacing": [
                    "proportional-nums",
                    "tabular-nums"
                ],
                "fvn-fraction": [
                    "diagonal-fractions",
                    "stacked-fractions"
                ],
                tracking: [
                    {
                        tracking: [
                            i,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "line-clamp": [
                    {
                        "line-clamp": [
                            Jn,
                            "none",
                            Lt,
                            HC
                        ]
                    }
                ],
                leading: [
                    {
                        leading: [
                            Lt,
                            Dt,
                            s,
                            l
                        ]
                    }
                ],
                "list-image": [
                    {
                        "list-image": [
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "list-style-position": [
                    {
                        list: [
                            "inside",
                            "outside"
                        ]
                    }
                ],
                "list-style-type": [
                    {
                        list: [
                            "disc",
                            "decimal",
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "text-alignment": [
                    {
                        text: [
                            "left",
                            "center",
                            "right",
                            "justify",
                            "start",
                            "end"
                        ]
                    }
                ],
                "placeholder-color": [
                    {
                        placeholder: W()
                    }
                ],
                "text-color": [
                    {
                        text: W()
                    }
                ],
                "text-decoration": [
                    "underline",
                    "overline",
                    "line-through",
                    "no-underline"
                ],
                "text-decoration-style": [
                    {
                        decoration: [
                            ...se(),
                            "wavy"
                        ]
                    }
                ],
                "text-decoration-thickness": [
                    {
                        decoration: [
                            Jn,
                            "from-font",
                            "auto",
                            Lt,
                            wp
                        ]
                    }
                ],
                "text-decoration-color": [
                    {
                        decoration: W()
                    }
                ],
                "underline-offset": [
                    {
                        "underline-offset": [
                            Jn,
                            "auto",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "text-transform": [
                    "uppercase",
                    "lowercase",
                    "capitalize",
                    "normal-case"
                ],
                "text-overflow": [
                    "truncate",
                    "text-ellipsis",
                    "text-clip"
                ],
                "text-wrap": [
                    {
                        text: [
                            "wrap",
                            "nowrap",
                            "balance",
                            "pretty"
                        ]
                    }
                ],
                indent: [
                    {
                        indent: [
                            "px",
                            ...j()
                        ]
                    }
                ],
                "vertical-align": [
                    {
                        align: [
                            "baseline",
                            "top",
                            "middle",
                            "bottom",
                            "text-top",
                            "text-bottom",
                            "sub",
                            "super",
                            Lt,
                            Dt
                        ]
                    }
                ],
                whitespace: [
                    {
                        whitespace: [
                            "normal",
                            "nowrap",
                            "pre",
                            "pre-line",
                            "pre-wrap",
                            "break-spaces"
                        ]
                    }
                ],
                break: [
                    {
                        break: [
                            "normal",
                            "words",
                            "all",
                            "keep"
                        ]
                    }
                ],
                hyphens: [
                    {
                        hyphens: [
                            "none",
                            "manual",
                            "auto"
                        ]
                    }
                ],
                content: [
                    {
                        content: [
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "bg-attachment": [
                    {
                        bg: [
                            "fixed",
                            "local",
                            "scroll"
                        ]
                    }
                ],
                "bg-clip": [
                    {
                        "bg-clip": [
                            "border",
                            "padding",
                            "content",
                            "text"
                        ]
                    }
                ],
                "bg-origin": [
                    {
                        "bg-origin": [
                            "border",
                            "padding",
                            "content"
                        ]
                    }
                ],
                "bg-position": [
                    {
                        bg: [
                            ...E(),
                            HZ,
                            zZ
                        ]
                    }
                ],
                "bg-repeat": [
                    {
                        bg: [
                            "no-repeat",
                            {
                                repeat: [
                                    "",
                                    "x",
                                    "y",
                                    "space",
                                    "round"
                                ]
                            }
                        ]
                    }
                ],
                "bg-size": [
                    {
                        bg: [
                            "auto",
                            "cover",
                            "contain",
                            $Z,
                            UZ
                        ]
                    }
                ],
                "bg-image": [
                    {
                        bg: [
                            "none",
                            {
                                linear: [
                                    {
                                        to: [
                                            "t",
                                            "tr",
                                            "r",
                                            "br",
                                            "b",
                                            "bl",
                                            "l",
                                            "tl"
                                        ]
                                    },
                                    bp,
                                    Lt,
                                    Dt
                                ],
                                radial: [
                                    "",
                                    Lt,
                                    Dt
                                ],
                                conic: [
                                    bp,
                                    Lt,
                                    Dt
                                ]
                            },
                            GZ,
                            VZ
                        ]
                    }
                ],
                "bg-color": [
                    {
                        bg: W()
                    }
                ],
                "gradient-from-pos": [
                    {
                        from: Z()
                    }
                ],
                "gradient-via-pos": [
                    {
                        via: Z()
                    }
                ],
                "gradient-to-pos": [
                    {
                        to: Z()
                    }
                ],
                "gradient-from": [
                    {
                        from: W()
                    }
                ],
                "gradient-via": [
                    {
                        via: W()
                    }
                ],
                "gradient-to": [
                    {
                        to: W()
                    }
                ],
                rounded: [
                    {
                        rounded: $()
                    }
                ],
                "rounded-s": [
                    {
                        "rounded-s": $()
                    }
                ],
                "rounded-e": [
                    {
                        "rounded-e": $()
                    }
                ],
                "rounded-t": [
                    {
                        "rounded-t": $()
                    }
                ],
                "rounded-r": [
                    {
                        "rounded-r": $()
                    }
                ],
                "rounded-b": [
                    {
                        "rounded-b": $()
                    }
                ],
                "rounded-l": [
                    {
                        "rounded-l": $()
                    }
                ],
                "rounded-ss": [
                    {
                        "rounded-ss": $()
                    }
                ],
                "rounded-se": [
                    {
                        "rounded-se": $()
                    }
                ],
                "rounded-ee": [
                    {
                        "rounded-ee": $()
                    }
                ],
                "rounded-es": [
                    {
                        "rounded-es": $()
                    }
                ],
                "rounded-tl": [
                    {
                        "rounded-tl": $()
                    }
                ],
                "rounded-tr": [
                    {
                        "rounded-tr": $()
                    }
                ],
                "rounded-br": [
                    {
                        "rounded-br": $()
                    }
                ],
                "rounded-bl": [
                    {
                        "rounded-bl": $()
                    }
                ],
                "border-w": [
                    {
                        border: H()
                    }
                ],
                "border-w-x": [
                    {
                        "border-x": H()
                    }
                ],
                "border-w-y": [
                    {
                        "border-y": H()
                    }
                ],
                "border-w-s": [
                    {
                        "border-s": H()
                    }
                ],
                "border-w-e": [
                    {
                        "border-e": H()
                    }
                ],
                "border-w-t": [
                    {
                        "border-t": H()
                    }
                ],
                "border-w-r": [
                    {
                        "border-r": H()
                    }
                ],
                "border-w-b": [
                    {
                        "border-b": H()
                    }
                ],
                "border-w-l": [
                    {
                        "border-l": H()
                    }
                ],
                "divide-x": [
                    {
                        "divide-x": H()
                    }
                ],
                "divide-x-reverse": [
                    "divide-x-reverse"
                ],
                "divide-y": [
                    {
                        "divide-y": H()
                    }
                ],
                "divide-y-reverse": [
                    "divide-y-reverse"
                ],
                "border-style": [
                    {
                        border: [
                            ...se(),
                            "hidden",
                            "none"
                        ]
                    }
                ],
                "divide-style": [
                    {
                        divide: [
                            ...se(),
                            "hidden",
                            "none"
                        ]
                    }
                ],
                "border-color": [
                    {
                        border: W()
                    }
                ],
                "border-color-x": [
                    {
                        "border-x": W()
                    }
                ],
                "border-color-y": [
                    {
                        "border-y": W()
                    }
                ],
                "border-color-s": [
                    {
                        "border-s": W()
                    }
                ],
                "border-color-e": [
                    {
                        "border-e": W()
                    }
                ],
                "border-color-t": [
                    {
                        "border-t": W()
                    }
                ],
                "border-color-r": [
                    {
                        "border-r": W()
                    }
                ],
                "border-color-b": [
                    {
                        "border-b": W()
                    }
                ],
                "border-color-l": [
                    {
                        "border-l": W()
                    }
                ],
                "divide-color": [
                    {
                        divide: W()
                    }
                ],
                "outline-style": [
                    {
                        outline: [
                            ...se(),
                            "none",
                            "hidden"
                        ]
                    }
                ],
                "outline-offset": [
                    {
                        "outline-offset": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "outline-w": [
                    {
                        outline: [
                            "",
                            Jn,
                            n1,
                            wp
                        ]
                    }
                ],
                "outline-color": [
                    {
                        outline: [
                            t
                        ]
                    }
                ],
                shadow: [
                    {
                        shadow: [
                            "",
                            "none",
                            u,
                            XZ,
                            WZ
                        ]
                    }
                ],
                "shadow-color": [
                    {
                        shadow: W()
                    }
                ],
                "inset-shadow": [
                    {
                        "inset-shadow": [
                            "none",
                            Lt,
                            Dt,
                            f
                        ]
                    }
                ],
                "inset-shadow-color": [
                    {
                        "inset-shadow": W()
                    }
                ],
                "ring-w": [
                    {
                        ring: H()
                    }
                ],
                "ring-w-inset": [
                    "ring-inset"
                ],
                "ring-color": [
                    {
                        ring: W()
                    }
                ],
                "ring-offset-w": [
                    {
                        "ring-offset": [
                            Jn,
                            wp
                        ]
                    }
                ],
                "ring-offset-color": [
                    {
                        "ring-offset": W()
                    }
                ],
                "inset-ring-w": [
                    {
                        "inset-ring": H()
                    }
                ],
                "inset-ring-color": [
                    {
                        "inset-ring": W()
                    }
                ],
                opacity: [
                    {
                        opacity: [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "mix-blend": [
                    {
                        "mix-blend": [
                            ...le(),
                            "plus-darker",
                            "plus-lighter"
                        ]
                    }
                ],
                "bg-blend": [
                    {
                        "bg-blend": le()
                    }
                ],
                filter: [
                    {
                        filter: [
                            "",
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                blur: [
                    {
                        blur: ne()
                    }
                ],
                brightness: [
                    {
                        brightness: [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                contrast: [
                    {
                        contrast: [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "drop-shadow": [
                    {
                        "drop-shadow": [
                            "",
                            "none",
                            h,
                            Lt,
                            Dt
                        ]
                    }
                ],
                grayscale: [
                    {
                        grayscale: [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "hue-rotate": [
                    {
                        "hue-rotate": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                invert: [
                    {
                        invert: [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                saturate: [
                    {
                        saturate: [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                sepia: [
                    {
                        sepia: [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-filter": [
                    {
                        "backdrop-filter": [
                            "",
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-blur": [
                    {
                        "backdrop-blur": ne()
                    }
                ],
                "backdrop-brightness": [
                    {
                        "backdrop-brightness": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-contrast": [
                    {
                        "backdrop-contrast": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-grayscale": [
                    {
                        "backdrop-grayscale": [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-hue-rotate": [
                    {
                        "backdrop-hue-rotate": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-invert": [
                    {
                        "backdrop-invert": [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-opacity": [
                    {
                        "backdrop-opacity": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-saturate": [
                    {
                        "backdrop-saturate": [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "backdrop-sepia": [
                    {
                        "backdrop-sepia": [
                            "",
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "border-collapse": [
                    {
                        border: [
                            "collapse",
                            "separate"
                        ]
                    }
                ],
                "border-spacing": [
                    {
                        "border-spacing": j()
                    }
                ],
                "border-spacing-x": [
                    {
                        "border-spacing-x": j()
                    }
                ],
                "border-spacing-y": [
                    {
                        "border-spacing-y": j()
                    }
                ],
                "table-layout": [
                    {
                        table: [
                            "auto",
                            "fixed"
                        ]
                    }
                ],
                caption: [
                    {
                        caption: [
                            "top",
                            "bottom"
                        ]
                    }
                ],
                transition: [
                    {
                        transition: [
                            "",
                            "all",
                            "colors",
                            "opacity",
                            "shadow",
                            "transform",
                            "none",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "transition-behavior": [
                    {
                        transition: [
                            "normal",
                            "discrete"
                        ]
                    }
                ],
                duration: [
                    {
                        duration: [
                            Jn,
                            "initial",
                            Lt,
                            Dt
                        ]
                    }
                ],
                ease: [
                    {
                        ease: [
                            "linear",
                            "initial",
                            w,
                            Lt,
                            Dt
                        ]
                    }
                ],
                delay: [
                    {
                        delay: [
                            Jn,
                            Lt,
                            Dt
                        ]
                    }
                ],
                animate: [
                    {
                        animate: [
                            "none",
                            b,
                            Lt,
                            Dt
                        ]
                    }
                ],
                backface: [
                    {
                        backface: [
                            "hidden",
                            "visible"
                        ]
                    }
                ],
                perspective: [
                    {
                        perspective: [
                            v,
                            Lt,
                            Dt
                        ]
                    }
                ],
                "perspective-origin": [
                    {
                        "perspective-origin": ue()
                    }
                ],
                rotate: [
                    {
                        rotate: ge()
                    }
                ],
                "rotate-x": [
                    {
                        "rotate-x": ge()
                    }
                ],
                "rotate-y": [
                    {
                        "rotate-y": ge()
                    }
                ],
                "rotate-z": [
                    {
                        "rotate-z": ge()
                    }
                ],
                scale: [
                    {
                        scale: ye()
                    }
                ],
                "scale-x": [
                    {
                        "scale-x": ye()
                    }
                ],
                "scale-y": [
                    {
                        "scale-y": ye()
                    }
                ],
                "scale-z": [
                    {
                        "scale-z": ye()
                    }
                ],
                "scale-3d": [
                    "scale-3d"
                ],
                skew: [
                    {
                        skew: _e()
                    }
                ],
                "skew-x": [
                    {
                        "skew-x": _e()
                    }
                ],
                "skew-y": [
                    {
                        "skew-y": _e()
                    }
                ],
                transform: [
                    {
                        transform: [
                            Lt,
                            Dt,
                            "",
                            "none",
                            "gpu",
                            "cpu"
                        ]
                    }
                ],
                "transform-origin": [
                    {
                        origin: ue()
                    }
                ],
                "transform-style": [
                    {
                        transform: [
                            "3d",
                            "flat"
                        ]
                    }
                ],
                translate: [
                    {
                        translate: Te()
                    }
                ],
                "translate-x": [
                    {
                        "translate-x": Te()
                    }
                ],
                "translate-y": [
                    {
                        "translate-y": Te()
                    }
                ],
                "translate-z": [
                    {
                        "translate-z": Te()
                    }
                ],
                "translate-none": [
                    "translate-none"
                ],
                accent: [
                    {
                        accent: W()
                    }
                ],
                appearance: [
                    {
                        appearance: [
                            "none",
                            "auto"
                        ]
                    }
                ],
                "caret-color": [
                    {
                        caret: W()
                    }
                ],
                "color-scheme": [
                    {
                        scheme: [
                            "normal",
                            "dark",
                            "light",
                            "light-dark",
                            "only-dark",
                            "only-light"
                        ]
                    }
                ],
                cursor: [
                    {
                        cursor: [
                            "auto",
                            "default",
                            "pointer",
                            "wait",
                            "text",
                            "move",
                            "help",
                            "not-allowed",
                            "none",
                            "context-menu",
                            "progress",
                            "cell",
                            "crosshair",
                            "vertical-text",
                            "alias",
                            "copy",
                            "no-drop",
                            "grab",
                            "grabbing",
                            "all-scroll",
                            "col-resize",
                            "row-resize",
                            "n-resize",
                            "e-resize",
                            "s-resize",
                            "w-resize",
                            "ne-resize",
                            "nw-resize",
                            "se-resize",
                            "sw-resize",
                            "ew-resize",
                            "ns-resize",
                            "nesw-resize",
                            "nwse-resize",
                            "zoom-in",
                            "zoom-out",
                            Lt,
                            Dt
                        ]
                    }
                ],
                "field-sizing": [
                    {
                        "field-sizing": [
                            "fixed",
                            "content"
                        ]
                    }
                ],
                "pointer-events": [
                    {
                        "pointer-events": [
                            "auto",
                            "none"
                        ]
                    }
                ],
                resize: [
                    {
                        resize: [
                            "none",
                            "",
                            "y",
                            "x"
                        ]
                    }
                ],
                "scroll-behavior": [
                    {
                        scroll: [
                            "auto",
                            "smooth"
                        ]
                    }
                ],
                "scroll-m": [
                    {
                        "scroll-m": j()
                    }
                ],
                "scroll-mx": [
                    {
                        "scroll-mx": j()
                    }
                ],
                "scroll-my": [
                    {
                        "scroll-my": j()
                    }
                ],
                "scroll-ms": [
                    {
                        "scroll-ms": j()
                    }
                ],
                "scroll-me": [
                    {
                        "scroll-me": j()
                    }
                ],
                "scroll-mt": [
                    {
                        "scroll-mt": j()
                    }
                ],
                "scroll-mr": [
                    {
                        "scroll-mr": j()
                    }
                ],
                "scroll-mb": [
                    {
                        "scroll-mb": j()
                    }
                ],
                "scroll-ml": [
                    {
                        "scroll-ml": j()
                    }
                ],
                "scroll-p": [
                    {
                        "scroll-p": j()
                    }
                ],
                "scroll-px": [
                    {
                        "scroll-px": j()
                    }
                ],
                "scroll-py": [
                    {
                        "scroll-py": j()
                    }
                ],
                "scroll-ps": [
                    {
                        "scroll-ps": j()
                    }
                ],
                "scroll-pe": [
                    {
                        "scroll-pe": j()
                    }
                ],
                "scroll-pt": [
                    {
                        "scroll-pt": j()
                    }
                ],
                "scroll-pr": [
                    {
                        "scroll-pr": j()
                    }
                ],
                "scroll-pb": [
                    {
                        "scroll-pb": j()
                    }
                ],
                "scroll-pl": [
                    {
                        "scroll-pl": j()
                    }
                ],
                "snap-align": [
                    {
                        snap: [
                            "start",
                            "end",
                            "center",
                            "align-none"
                        ]
                    }
                ],
                "snap-stop": [
                    {
                        snap: [
                            "normal",
                            "always"
                        ]
                    }
                ],
                "snap-type": [
                    {
                        snap: [
                            "none",
                            "x",
                            "y",
                            "both"
                        ]
                    }
                ],
                "snap-strictness": [
                    {
                        snap: [
                            "mandatory",
                            "proximity"
                        ]
                    }
                ],
                touch: [
                    {
                        touch: [
                            "auto",
                            "none",
                            "manipulation"
                        ]
                    }
                ],
                "touch-x": [
                    {
                        "touch-pan": [
                            "x",
                            "left",
                            "right"
                        ]
                    }
                ],
                "touch-y": [
                    {
                        "touch-pan": [
                            "y",
                            "up",
                            "down"
                        ]
                    }
                ],
                "touch-pz": [
                    "touch-pinch-zoom"
                ],
                select: [
                    {
                        select: [
                            "none",
                            "text",
                            "all",
                            "auto"
                        ]
                    }
                ],
                "will-change": [
                    {
                        "will-change": [
                            "auto",
                            "scroll",
                            "contents",
                            "transform",
                            Lt,
                            Dt
                        ]
                    }
                ],
                fill: [
                    {
                        fill: [
                            "none",
                            ...W()
                        ]
                    }
                ],
                "stroke-w": [
                    {
                        stroke: [
                            Jn,
                            n1,
                            wp,
                            HC
                        ]
                    }
                ],
                stroke: [
                    {
                        stroke: [
                            "none",
                            ...W()
                        ]
                    }
                ],
                "forced-color-adjust": [
                    {
                        "forced-color-adjust": [
                            "auto",
                            "none"
                        ]
                    }
                ]
            },
            conflictingClassGroups: {
                overflow: [
                    "overflow-x",
                    "overflow-y"
                ],
                overscroll: [
                    "overscroll-x",
                    "overscroll-y"
                ],
                inset: [
                    "inset-x",
                    "inset-y",
                    "start",
                    "end",
                    "top",
                    "right",
                    "bottom",
                    "left"
                ],
                "inset-x": [
                    "right",
                    "left"
                ],
                "inset-y": [
                    "top",
                    "bottom"
                ],
                flex: [
                    "basis",
                    "grow",
                    "shrink"
                ],
                gap: [
                    "gap-x",
                    "gap-y"
                ],
                p: [
                    "px",
                    "py",
                    "ps",
                    "pe",
                    "pt",
                    "pr",
                    "pb",
                    "pl"
                ],
                px: [
                    "pr",
                    "pl"
                ],
                py: [
                    "pt",
                    "pb"
                ],
                m: [
                    "mx",
                    "my",
                    "ms",
                    "me",
                    "mt",
                    "mr",
                    "mb",
                    "ml"
                ],
                mx: [
                    "mr",
                    "ml"
                ],
                my: [
                    "mt",
                    "mb"
                ],
                size: [
                    "w",
                    "h"
                ],
                "font-size": [
                    "leading"
                ],
                "fvn-normal": [
                    "fvn-ordinal",
                    "fvn-slashed-zero",
                    "fvn-figure",
                    "fvn-spacing",
                    "fvn-fraction"
                ],
                "fvn-ordinal": [
                    "fvn-normal"
                ],
                "fvn-slashed-zero": [
                    "fvn-normal"
                ],
                "fvn-figure": [
                    "fvn-normal"
                ],
                "fvn-spacing": [
                    "fvn-normal"
                ],
                "fvn-fraction": [
                    "fvn-normal"
                ],
                "line-clamp": [
                    "display",
                    "overflow"
                ],
                rounded: [
                    "rounded-s",
                    "rounded-e",
                    "rounded-t",
                    "rounded-r",
                    "rounded-b",
                    "rounded-l",
                    "rounded-ss",
                    "rounded-se",
                    "rounded-ee",
                    "rounded-es",
                    "rounded-tl",
                    "rounded-tr",
                    "rounded-br",
                    "rounded-bl"
                ],
                "rounded-s": [
                    "rounded-ss",
                    "rounded-es"
                ],
                "rounded-e": [
                    "rounded-se",
                    "rounded-ee"
                ],
                "rounded-t": [
                    "rounded-tl",
                    "rounded-tr"
                ],
                "rounded-r": [
                    "rounded-tr",
                    "rounded-br"
                ],
                "rounded-b": [
                    "rounded-br",
                    "rounded-bl"
                ],
                "rounded-l": [
                    "rounded-tl",
                    "rounded-bl"
                ],
                "border-spacing": [
                    "border-spacing-x",
                    "border-spacing-y"
                ],
                "border-w": [
                    "border-w-s",
                    "border-w-e",
                    "border-w-t",
                    "border-w-r",
                    "border-w-b",
                    "border-w-l"
                ],
                "border-w-x": [
                    "border-w-r",
                    "border-w-l"
                ],
                "border-w-y": [
                    "border-w-t",
                    "border-w-b"
                ],
                "border-color": [
                    "border-color-s",
                    "border-color-e",
                    "border-color-t",
                    "border-color-r",
                    "border-color-b",
                    "border-color-l"
                ],
                "border-color-x": [
                    "border-color-r",
                    "border-color-l"
                ],
                "border-color-y": [
                    "border-color-t",
                    "border-color-b"
                ],
                translate: [
                    "translate-x",
                    "translate-y",
                    "translate-none"
                ],
                "translate-none": [
                    "translate",
                    "translate-x",
                    "translate-y",
                    "translate-z"
                ],
                "scroll-m": [
                    "scroll-mx",
                    "scroll-my",
                    "scroll-ms",
                    "scroll-me",
                    "scroll-mt",
                    "scroll-mr",
                    "scroll-mb",
                    "scroll-ml"
                ],
                "scroll-mx": [
                    "scroll-mr",
                    "scroll-ml"
                ],
                "scroll-my": [
                    "scroll-mt",
                    "scroll-mb"
                ],
                "scroll-p": [
                    "scroll-px",
                    "scroll-py",
                    "scroll-ps",
                    "scroll-pe",
                    "scroll-pt",
                    "scroll-pr",
                    "scroll-pb",
                    "scroll-pl"
                ],
                "scroll-px": [
                    "scroll-pr",
                    "scroll-pl"
                ],
                "scroll-py": [
                    "scroll-pt",
                    "scroll-pb"
                ],
                touch: [
                    "touch-x",
                    "touch-y",
                    "touch-pz"
                ],
                "touch-x": [
                    "touch"
                ],
                "touch-y": [
                    "touch"
                ],
                "touch-pz": [
                    "touch"
                ]
            },
            conflictingClassGroupModifiers: {
                "font-size": [
                    "leading"
                ]
            },
            orderSensitiveModifiers: [
                "before",
                "after",
                "placeholder",
                "file",
                "marker",
                "selection",
                "first-line",
                "first-letter",
                "backdrop",
                "*",
                "**"
            ]
        };
    }, xU = RZ(eJ), UN = new Proxy(()=>UN, {
        get: ()=>UN
    });
    function Nn({ use: t, slot: e, variant: n, match: r = [], defaults: i }) {
        return ({ css: s, ...o } = {})=>({
                slots: new Proxy({}, {
                    get: (a, l)=>({ css: c, ...u } = {})=>{
                            const f = [], h = t, m = {
                                ...h?.()?.config.defaults,
                                ...i,
                                ...o,
                                ...u
                            };
                            f.push(h?.(m)?.slots[l]?.(m)), f.push(Array.isArray(e[l]) ? e[l] : [
                                e[l]
                            ]);
                            for (const [v, _] of Object.entries(m)){
                                const w = n[v]?.[_];
                                w && f.push(w);
                            }
                            for (const v of r)Object.entries(v.if).every(([_, w])=>w === m[_]) && f.push(v.then?.[l]);
                            return f.push(s?.[l]), f.push(c), xU(f);
                        }
                }),
                config: {
                    defaults: {
                        ...t?.()?.config.defaults,
                        ...i
                    },
                    values: {
                        ...t?.()?.config.defaults,
                        ...i,
                        ...o
                    }
                },
                type: UN()
            });
    }
    const mn = xU;
    function tJ(t) {
        return t ||= new Map, {
            all: t,
            on (e, n) {
                const r = t.get(e);
                r ? r.push(n) : t.set(e, [
                    n
                ]);
            },
            off (e, n) {
                const r = t.get(e);
                r && (n ? r.splice(r.indexOf(n) >>> 0, 1) : t.set(e, []));
            },
            emit (e, n) {
                let r = t.get(e);
                r && r.slice().forEach((i)=>i(n)), r = t.get("*"), r && r.slice().forEach((i)=>i(e, n));
            }
        };
    }
    const gl = Object.freeze({
        Euclidean: "Euclidean",
        EuclideanSq: "EuclideanSq",
        Manhattan: "Manhattan",
        Hybrid: "Hybrid"
    }), _s = Object.freeze({
        CellValue: "CellValue",
        Distance: "Distance",
        Distance2: "Distance2",
        Distance2Add: "Distance2Add",
        Distance2Sub: "Distance2Sub",
        Distance2Mul: "Distance2Mul",
        Distance2Div: "Distance2Div"
    }), to = Object.freeze({
        OpenSimplex2: "OpenSimplex2",
        OpenSimplex2Reduced: "OpenSimplex2Reduced",
        BasicGrid: "BasicGrid"
    }), qc = Object.freeze({
        None: "None",
        FBm: "FBm",
        Ridged: "Ridged",
        PingPong: "PingPong",
        DomainWarpProgressive: "DomainWarpProgressive",
        DomainWarpIndependent: "DomainWarpIndependent"
    }), Yc = [
        .130526192220052,
        .99144486137381,
        .38268343236509,
        .923879532511287,
        .608761429008721,
        .793353340291235,
        .793353340291235,
        .608761429008721,
        .923879532511287,
        .38268343236509,
        .99144486137381,
        .130526192220051,
        .99144486137381,
        -.130526192220051,
        .923879532511287,
        -.38268343236509,
        .793353340291235,
        -.60876142900872,
        .608761429008721,
        -.793353340291235,
        .38268343236509,
        -.923879532511287,
        .130526192220052,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        -.38268343236509,
        -.923879532511287,
        -.608761429008721,
        -.793353340291235,
        -.793353340291235,
        -.608761429008721,
        -.923879532511287,
        -.38268343236509,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        .130526192220051,
        -.923879532511287,
        .38268343236509,
        -.793353340291235,
        .608761429008721,
        -.608761429008721,
        .793353340291235,
        -.38268343236509,
        .923879532511287,
        -.130526192220052,
        .99144486137381,
        .130526192220052,
        .99144486137381,
        .38268343236509,
        .923879532511287,
        .608761429008721,
        .793353340291235,
        .793353340291235,
        .608761429008721,
        .923879532511287,
        .38268343236509,
        .99144486137381,
        .130526192220051,
        .99144486137381,
        -.130526192220051,
        .923879532511287,
        -.38268343236509,
        .793353340291235,
        -.60876142900872,
        .608761429008721,
        -.793353340291235,
        .38268343236509,
        -.923879532511287,
        .130526192220052,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        -.38268343236509,
        -.923879532511287,
        -.608761429008721,
        -.793353340291235,
        -.793353340291235,
        -.608761429008721,
        -.923879532511287,
        -.38268343236509,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        .130526192220051,
        -.923879532511287,
        .38268343236509,
        -.793353340291235,
        .608761429008721,
        -.608761429008721,
        .793353340291235,
        -.38268343236509,
        .923879532511287,
        -.130526192220052,
        .99144486137381,
        .130526192220052,
        .99144486137381,
        .38268343236509,
        .923879532511287,
        .608761429008721,
        .793353340291235,
        .793353340291235,
        .608761429008721,
        .923879532511287,
        .38268343236509,
        .99144486137381,
        .130526192220051,
        .99144486137381,
        -.130526192220051,
        .923879532511287,
        -.38268343236509,
        .793353340291235,
        -.60876142900872,
        .608761429008721,
        -.793353340291235,
        .38268343236509,
        -.923879532511287,
        .130526192220052,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        -.38268343236509,
        -.923879532511287,
        -.608761429008721,
        -.793353340291235,
        -.793353340291235,
        -.608761429008721,
        -.923879532511287,
        -.38268343236509,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        .130526192220051,
        -.923879532511287,
        .38268343236509,
        -.793353340291235,
        .608761429008721,
        -.608761429008721,
        .793353340291235,
        -.38268343236509,
        .923879532511287,
        -.130526192220052,
        .99144486137381,
        .130526192220052,
        .99144486137381,
        .38268343236509,
        .923879532511287,
        .608761429008721,
        .793353340291235,
        .793353340291235,
        .608761429008721,
        .923879532511287,
        .38268343236509,
        .99144486137381,
        .130526192220051,
        .99144486137381,
        -.130526192220051,
        .923879532511287,
        -.38268343236509,
        .793353340291235,
        -.60876142900872,
        .608761429008721,
        -.793353340291235,
        .38268343236509,
        -.923879532511287,
        .130526192220052,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        -.38268343236509,
        -.923879532511287,
        -.608761429008721,
        -.793353340291235,
        -.793353340291235,
        -.608761429008721,
        -.923879532511287,
        -.38268343236509,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        .130526192220051,
        -.923879532511287,
        .38268343236509,
        -.793353340291235,
        .608761429008721,
        -.608761429008721,
        .793353340291235,
        -.38268343236509,
        .923879532511287,
        -.130526192220052,
        .99144486137381,
        .130526192220052,
        .99144486137381,
        .38268343236509,
        .923879532511287,
        .608761429008721,
        .793353340291235,
        .793353340291235,
        .608761429008721,
        .923879532511287,
        .38268343236509,
        .99144486137381,
        .130526192220051,
        .99144486137381,
        -.130526192220051,
        .923879532511287,
        -.38268343236509,
        .793353340291235,
        -.60876142900872,
        .608761429008721,
        -.793353340291235,
        .38268343236509,
        -.923879532511287,
        .130526192220052,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        -.38268343236509,
        -.923879532511287,
        -.608761429008721,
        -.793353340291235,
        -.793353340291235,
        -.608761429008721,
        -.923879532511287,
        -.38268343236509,
        -.99144486137381,
        -.130526192220052,
        -.99144486137381,
        .130526192220051,
        -.923879532511287,
        .38268343236509,
        -.793353340291235,
        .608761429008721,
        -.608761429008721,
        .793353340291235,
        -.38268343236509,
        .923879532511287,
        -.130526192220052,
        .99144486137381,
        .38268343236509,
        .923879532511287,
        .923879532511287,
        .38268343236509,
        .923879532511287,
        -.38268343236509,
        .38268343236509,
        -.923879532511287,
        -.38268343236509,
        -.923879532511287,
        -.923879532511287,
        -.38268343236509,
        -.923879532511287,
        .38268343236509,
        -.38268343236509,
        .923879532511287
    ], pd = [
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        -1,
        0,
        -1,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        -1,
        0,
        -1,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        -1,
        0,
        -1,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        -1,
        0,
        -1,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        1,
        0,
        1,
        0,
        -1,
        0,
        -1,
        0,
        -1,
        0,
        1,
        1,
        0,
        0,
        -1,
        1,
        0,
        0,
        1,
        -1,
        0,
        0,
        -1,
        -1,
        0,
        0,
        1,
        1,
        0,
        0,
        0,
        -1,
        1,
        0,
        -1,
        1,
        0,
        0,
        0,
        -1,
        -1,
        0
    ], Ss = Object.freeze({
        OpenSimplex2: "OpenSimplex2",
        OpenSimplex2S: "OpenSimplex2S",
        Cellular: "Cellular",
        Perlin: "Perlin",
        ValueCubic: "ValueCubic",
        Value: "Value"
    }), $t = 501125321, Gt = 1136930381, er = 1720413743, gr = [
        -.2700222198,
        -.9628540911,
        .3863092627,
        -.9223693152,
        .04444859006,
        -.999011673,
        -.5992523158,
        -.8005602176,
        -.7819280288,
        .6233687174,
        .9464672271,
        .3227999196,
        -.6514146797,
        -.7587218957,
        .9378472289,
        .347048376,
        -.8497875957,
        -.5271252623,
        -.879042592,
        .4767432447,
        -.892300288,
        -.4514423508,
        -.379844434,
        -.9250503802,
        -.9951650832,
        .0982163789,
        .7724397808,
        -.6350880136,
        .7573283322,
        -.6530343002,
        -.9928004525,
        -.119780055,
        -.0532665713,
        .9985803285,
        .9754253726,
        -.2203300762,
        -.7665018163,
        .6422421394,
        .991636706,
        .1290606184,
        -.994696838,
        .1028503788,
        -.5379205513,
        -.84299554,
        .5022815471,
        -.8647041387,
        .4559821461,
        -.8899889226,
        -.8659131224,
        -.5001944266,
        .0879458407,
        -.9961252577,
        -.5051684983,
        .8630207346,
        .7753185226,
        -.6315704146,
        -.6921944612,
        .7217110418,
        -.5191659449,
        -.8546734591,
        .8978622882,
        -.4402764035,
        -.1706774107,
        .9853269617,
        -.9353430106,
        -.3537420705,
        -.9992404798,
        .03896746794,
        -.2882064021,
        -.9575683108,
        -.9663811329,
        .2571137995,
        -.8759714238,
        -.4823630009,
        -.8303123018,
        -.5572983775,
        .05110133755,
        -.9986934731,
        -.8558373281,
        -.5172450752,
        .09887025282,
        .9951003332,
        .9189016087,
        .3944867976,
        -.2439375892,
        -.9697909324,
        -.8121409387,
        -.5834613061,
        -.9910431363,
        .1335421355,
        .8492423985,
        -.5280031709,
        -.9717838994,
        -.2358729591,
        .9949457207,
        .1004142068,
        .6241065508,
        -.7813392434,
        .662910307,
        .7486988212,
        -.7197418176,
        .6942418282,
        -.8143370775,
        -.5803922158,
        .104521054,
        -.9945226741,
        -.1065926113,
        -.9943027784,
        .445799684,
        -.8951327509,
        .105547406,
        .9944142724,
        -.992790267,
        .1198644477,
        -.8334366408,
        .552615025,
        .9115561563,
        -.4111755999,
        .8285544909,
        -.5599084351,
        .7217097654,
        -.6921957921,
        .4940492677,
        -.8694339084,
        -.3652321272,
        -.9309164803,
        -.9696606758,
        .2444548501,
        .08925509731,
        -.996008799,
        .5354071276,
        -.8445941083,
        -.1053576186,
        .9944343981,
        -.9890284586,
        .1477251101,
        .004856104961,
        .9999882091,
        .9885598478,
        .1508291331,
        .9286129562,
        -.3710498316,
        -.5832393863,
        -.8123003252,
        .3015207509,
        .9534596146,
        -.9575110528,
        .2883965738,
        .9715802154,
        -.2367105511,
        .229981792,
        .9731949318,
        .955763816,
        -.2941352207,
        .740956116,
        .6715534485,
        -.9971513787,
        -.07542630764,
        .6905710663,
        -.7232645452,
        -.290713703,
        -.9568100872,
        .5912777791,
        -.8064679708,
        -.9454592212,
        -.325740481,
        .6664455681,
        .74555369,
        .6236134912,
        .7817328275,
        .9126993851,
        -.4086316587,
        -.8191762011,
        .5735419353,
        -.8812745759,
        -.4726046147,
        .9953313627,
        .09651672651,
        .9855650846,
        -.1692969699,
        -.8495980887,
        .5274306472,
        .6174853946,
        -.7865823463,
        .8508156371,
        .52546432,
        .9985032451,
        -.05469249926,
        .1971371563,
        -.9803759185,
        .6607855748,
        -.7505747292,
        -.03097494063,
        .9995201614,
        -.6731660801,
        .739491331,
        -.7195018362,
        -.6944905383,
        .9727511689,
        .2318515979,
        .9997059088,
        -.0242506907,
        .4421787429,
        -.8969269532,
        .9981350961,
        -.061043673,
        -.9173660799,
        -.3980445648,
        -.8150056635,
        -.5794529907,
        -.8789331304,
        .4769450202,
        .0158605829,
        .999874213,
        -.8095464474,
        .5870558317,
        -.9165898907,
        -.3998286786,
        -.8023542565,
        .5968480938,
        -.5176737917,
        .8555780767,
        -.8154407307,
        -.5788405779,
        .4022010347,
        -.9155513791,
        -.9052556868,
        -.4248672045,
        .7317445619,
        .6815789728,
        -.5647632201,
        -.8252529947,
        -.8403276335,
        -.5420788397,
        -.9314281527,
        .363925262,
        .5238198472,
        .8518290719,
        .7432803869,
        -.6689800195,
        -.985371561,
        -.1704197369,
        .4601468731,
        .88784281,
        .825855404,
        .5638819483,
        .6182366099,
        .7859920446,
        .8331502863,
        -.553046653,
        .1500307506,
        .9886813308,
        -.662330369,
        -.7492119075,
        -.668598664,
        .743623444,
        .7025606278,
        .7116238924,
        -.5419389763,
        -.8404178401,
        -.3388616456,
        .9408362159,
        .8331530315,
        .5530425174,
        -.2989720662,
        -.9542618632,
        .2638522993,
        .9645630949,
        .124108739,
        -.9922686234,
        -.7282649308,
        -.6852956957,
        .6962500149,
        .7177993569,
        -.9183535368,
        .3957610156,
        -.6326102274,
        -.7744703352,
        -.9331891859,
        -.359385508,
        -.1153779357,
        -.9933216659,
        .9514974788,
        -.3076565421,
        -.08987977445,
        -.9959526224,
        .6678496916,
        .7442961705,
        .7952400393,
        -.6062947138,
        -.6462007402,
        -.7631674805,
        -.2733598753,
        .9619118351,
        .9669590226,
        -.254931851,
        -.9792894595,
        .2024651934,
        -.5369502995,
        -.8436138784,
        -.270036471,
        -.9628500944,
        -.6400277131,
        .7683518247,
        -.7854537493,
        -.6189203566,
        .06005905383,
        -.9981948257,
        -.02455770378,
        .9996984141,
        -.65983623,
        .751409442,
        -.6253894466,
        -.7803127835,
        -.6210408851,
        -.7837781695,
        .8348888491,
        .5504185768,
        -.1592275245,
        .9872419133,
        .8367622488,
        .5475663786,
        -.8675753916,
        -.4973056806,
        -.2022662628,
        -.9793305667,
        .9399189937,
        .3413975472,
        .9877404807,
        -.1561049093,
        -.9034455656,
        .4287028224,
        .1269804218,
        -.9919052235,
        -.3819600854,
        .924178821,
        .9754625894,
        .2201652486,
        -.3204015856,
        -.9472818081,
        -.9874760884,
        .1577687387,
        .02535348474,
        -.9996785487,
        .4835130794,
        -.8753371362,
        -.2850799925,
        -.9585037287,
        -.06805516006,
        -.99768156,
        -.7885244045,
        -.6150034663,
        .3185392127,
        -.9479096845,
        .8880043089,
        .4598351306,
        .6476921488,
        -.7619021462,
        .9820241299,
        .1887554194,
        .9357275128,
        -.3527237187,
        -.8894895414,
        .4569555293,
        .7922791302,
        .6101588153,
        .7483818261,
        .6632681526,
        -.7288929755,
        -.6846276581,
        .8729032783,
        -.4878932944,
        .8288345784,
        .5594937369,
        .08074567077,
        .9967347374,
        .9799148216,
        -.1994165048,
        -.580730673,
        -.8140957471,
        -.4700049791,
        -.8826637636,
        .2409492979,
        .9705377045,
        .9437816757,
        -.3305694308,
        -.8927998638,
        -.4504535528,
        -.8069622304,
        .5906030467,
        .06258973166,
        .9980393407,
        -.9312597469,
        .3643559849,
        .5777449785,
        .8162173362,
        -.3360095855,
        -.941858566,
        .697932075,
        -.7161639607,
        -.002008157227,
        -.9999979837,
        -.1827294312,
        -.9831632392,
        -.6523911722,
        .7578824173,
        -.4302626911,
        -.9027037258,
        -.9985126289,
        -.05452091251,
        -.01028102172,
        -.9999471489,
        -.4946071129,
        .8691166802,
        -.2999350194,
        .9539596344,
        .8165471961,
        .5772786819,
        .2697460475,
        .962931498,
        -.7306287391,
        -.6827749597,
        -.7590952064,
        -.6509796216,
        -.907053853,
        .4210146171,
        -.5104861064,
        -.8598860013,
        .8613350597,
        .5080373165,
        .5007881595,
        -.8655698812,
        -.654158152,
        .7563577938,
        -.8382755311,
        -.545246856,
        .6940070834,
        .7199681717,
        .06950936031,
        .9975812994,
        .1702942185,
        -.9853932612,
        .2695973274,
        .9629731466,
        .5519612192,
        -.8338697815,
        .225657487,
        -.9742067022,
        .4215262855,
        -.9068161835,
        .4881873305,
        -.8727388672,
        -.3683854996,
        -.9296731273,
        -.9825390578,
        .1860564427,
        .81256471,
        .5828709909,
        .3196460933,
        -.9475370046,
        .9570913859,
        .2897862643,
        -.6876655497,
        -.7260276109,
        -.9988770922,
        -.047376731,
        -.1250179027,
        .992154486,
        -.8280133617,
        .560708367,
        .9324863769,
        -.3612051451,
        .6394653183,
        .7688199442,
        -.01623847064,
        -.9998681473,
        -.9955014666,
        -.09474613458,
        -.81453315,
        .580117012,
        .4037327978,
        -.9148769469,
        .9944263371,
        .1054336766,
        -.1624711654,
        .9867132919,
        -.9949487814,
        -.100383875,
        -.6995302564,
        .7146029809,
        .5263414922,
        -.85027327,
        -.5395221479,
        .841971408,
        .6579370318,
        .7530729462,
        .01426758847,
        -.9998982128,
        -.6734383991,
        .7392433447,
        .639412098,
        -.7688642071,
        .9211571421,
        .3891908523,
        -.146637214,
        -.9891903394,
        -.782318098,
        .6228791163,
        -.5039610839,
        -.8637263605,
        -.7743120191,
        -.6328039957
    ], Sn = [
        -.7292736885,
        -.6618439697,
        .1735581948,
        0,
        .790292081,
        -.5480887466,
        -.2739291014,
        0,
        .7217578935,
        .6226212466,
        -.3023380997,
        0,
        .565683137,
        -.8208298145,
        -.0790000257,
        0,
        .760049034,
        -.5555979497,
        -.3370999617,
        0,
        .3713945616,
        .5011264475,
        .7816254623,
        0,
        -.1277062463,
        -.4254438999,
        -.8959289049,
        0,
        -.2881560924,
        -.5815838982,
        .7607405838,
        0,
        .5849561111,
        -.662820239,
        -.4674352136,
        0,
        .3307171178,
        .0391653737,
        .94291689,
        0,
        .8712121778,
        -.4113374369,
        -.2679381538,
        0,
        .580981015,
        .7021915846,
        .4115677815,
        0,
        .503756873,
        .6330056931,
        -.5878203852,
        0,
        .4493712205,
        .601390195,
        .6606022552,
        0,
        -.6878403724,
        .09018890807,
        -.7202371714,
        0,
        -.5958956522,
        -.6469350577,
        .475797649,
        0,
        -.5127052122,
        .1946921978,
        -.8361987284,
        0,
        -.9911507142,
        -.05410276466,
        -.1212153153,
        0,
        -.2149721042,
        .9720882117,
        -.09397607749,
        0,
        -.7518650936,
        -.5428057603,
        .3742469607,
        0,
        .5237068895,
        .8516377189,
        -.02107817834,
        0,
        .6333504779,
        .1926167129,
        -.7495104896,
        0,
        -.06788241606,
        .3998305789,
        .9140719259,
        0,
        -.5538628599,
        -.4729896695,
        -.6852128902,
        0,
        -.7261455366,
        -.5911990757,
        .3509933228,
        0,
        -.9229274737,
        -.1782808786,
        .3412049336,
        0,
        -.6968815002,
        .6511274338,
        .3006480328,
        0,
        .9608044783,
        -.2098363234,
        -.1811724921,
        0,
        .06817146062,
        -.9743405129,
        .2145069156,
        0,
        -.3577285196,
        -.6697087264,
        -.6507845481,
        0,
        -.1868621131,
        .7648617052,
        -.6164974636,
        0,
        -.6541697588,
        .3967914832,
        .6439087246,
        0,
        .6993340405,
        -.6164538506,
        .3618239211,
        0,
        -.1546665739,
        .6291283928,
        .7617583057,
        0,
        -.6841612949,
        -.2580482182,
        -.6821542638,
        0,
        .5383980957,
        .4258654885,
        .7271630328,
        0,
        -.5026987823,
        -.7939832935,
        -.3418836993,
        0,
        .3202971715,
        .2834415347,
        .9039195862,
        0,
        .8683227101,
        -.0003762656404,
        -.4959995258,
        0,
        .791120031,
        -.08511045745,
        .6057105799,
        0,
        -.04011016052,
        -.4397248749,
        .8972364289,
        0,
        .9145119872,
        .3579346169,
        -.1885487608,
        0,
        -.9612039066,
        -.2756484276,
        .01024666929,
        0,
        .6510361721,
        -.2877799159,
        -.7023778346,
        0,
        -.2041786351,
        .7365237271,
        .644859585,
        0,
        -.7718263711,
        .3790626912,
        .5104855816,
        0,
        -.3060082741,
        -.7692987727,
        .5608371729,
        0,
        .454007341,
        -.5024843065,
        .7357899537,
        0,
        .4816795475,
        .6021208291,
        -.6367380315,
        0,
        .6961980369,
        -.3222197429,
        .641469197,
        0,
        -.6532160499,
        -.6781148932,
        .3368515753,
        0,
        .5089301236,
        -.6154662304,
        -.6018234363,
        0,
        -.1635919754,
        -.9133604627,
        -.372840892,
        0,
        .52408019,
        -.8437664109,
        .1157505864,
        0,
        .5902587356,
        .4983817807,
        -.6349883666,
        0,
        .5863227872,
        .494764745,
        .6414307729,
        0,
        .6779335087,
        .2341345225,
        .6968408593,
        0,
        .7177054546,
        -.6858979348,
        .120178631,
        0,
        -.5328819713,
        -.5205125012,
        .6671608058,
        0,
        -.8654874251,
        -.0700727088,
        -.4960053754,
        0,
        -.2861810166,
        .7952089234,
        .5345495242,
        0,
        -.04849529634,
        .9810836427,
        -.1874115585,
        0,
        -.6358521667,
        .6058348682,
        .4781800233,
        0,
        .6254794696,
        -.2861619734,
        .7258696564,
        0,
        -.2585259868,
        .5061949264,
        -.8227581726,
        0,
        .02136306781,
        .5064016808,
        -.8620330371,
        0,
        .200111773,
        .8599263484,
        .4695550591,
        0,
        .4743561372,
        .6014985084,
        -.6427953014,
        0,
        .6622993731,
        -.5202474575,
        -.5391679918,
        0,
        .08084972818,
        -.6532720452,
        .7527940996,
        0,
        -.6893687501,
        .0592860349,
        .7219805347,
        0,
        -.1121887082,
        -.9673185067,
        .2273952515,
        0,
        .7344116094,
        .5979668656,
        -.3210532909,
        0,
        .5789393465,
        -.2488849713,
        .7764570201,
        0,
        .6988182827,
        .3557169806,
        -.6205791146,
        0,
        -.8636845529,
        -.2748771249,
        -.4224826141,
        0,
        -.4247027957,
        -.4640880967,
        .777335046,
        0,
        .5257722489,
        -.8427017621,
        .1158329937,
        0,
        .9343830603,
        .316302472,
        -.1639543925,
        0,
        -.1016836419,
        -.8057303073,
        -.5834887393,
        0,
        -.6529238969,
        .50602126,
        -.5635892736,
        0,
        -.2465286165,
        -.9668205684,
        -.06694497494,
        0,
        -.9776897119,
        -.2099250524,
        -.007368825344,
        0,
        .7736893337,
        .5734244712,
        .2694238123,
        0,
        -.6095087895,
        .4995678998,
        .6155736747,
        0,
        .5794535482,
        .7434546771,
        .3339292269,
        0,
        -.8226211154,
        .08142581855,
        .5627293636,
        0,
        -.510385483,
        .4703667658,
        .7199039967,
        0,
        -.5764971849,
        -.07231656274,
        -.8138926898,
        0,
        .7250628871,
        .3949971505,
        -.5641463116,
        0,
        -.1525424005,
        .4860840828,
        -.8604958341,
        0,
        -.5550976208,
        -.4957820792,
        .667882296,
        0,
        -.1883614327,
        .9145869398,
        .357841725,
        0,
        .7625556724,
        -.5414408243,
        -.3540489801,
        0,
        -.5870231946,
        -.3226498013,
        -.7424963803,
        0,
        .3051124198,
        .2262544068,
        -.9250488391,
        0,
        .6379576059,
        .577242424,
        -.5097070502,
        0,
        -.5966775796,
        .1454852398,
        -.7891830656,
        0,
        -.658330573,
        .6555487542,
        -.3699414651,
        0,
        .7434892426,
        .2351084581,
        .6260573129,
        0,
        .5562114096,
        .8264360377,
        -.0873632843,
        0,
        -.3028940016,
        -.8251527185,
        .4768419182,
        0,
        .1129343818,
        -.985888439,
        -.1235710781,
        0,
        .5937652891,
        -.5896813806,
        .5474656618,
        0,
        .6757964092,
        -.5835758614,
        -.4502648413,
        0,
        .7242302609,
        -.1152719764,
        .6798550586,
        0,
        -.9511914166,
        .0753623979,
        -.2992580792,
        0,
        .2539470961,
        -.1886339355,
        .9486454084,
        0,
        .571433621,
        -.1679450851,
        -.8032795685,
        0,
        -.06778234979,
        .3978269256,
        .9149531629,
        0,
        .6074972649,
        .733060024,
        -.3058922593,
        0,
        -.5435478392,
        .1675822484,
        .8224791405,
        0,
        -.5876678086,
        -.3380045064,
        -.7351186982,
        0,
        -.7967562402,
        .04097822706,
        -.6029098428,
        0,
        -.1996350917,
        .8706294745,
        .4496111079,
        0,
        -.02787660336,
        -.9106232682,
        -.4122962022,
        0,
        -.7797625996,
        -.6257634692,
        .01975775581,
        0,
        -.5211232846,
        .7401644346,
        -.4249554471,
        0,
        .8575424857,
        .4053272873,
        -.3167501783,
        0,
        .1045223322,
        .8390195772,
        -.5339674439,
        0,
        .3501822831,
        .9242524096,
        -.1520850155,
        0,
        .1987849858,
        .07647613266,
        .9770547224,
        0,
        .7845996363,
        .6066256811,
        -.1280964233,
        0,
        .09006737436,
        -.9750989929,
        -.2026569073,
        0,
        -.8274343547,
        -.542299559,
        .1458203587,
        0,
        -.3485797732,
        -.415802277,
        .840000362,
        0,
        -.2471778936,
        -.7304819962,
        -.6366310879,
        0,
        -.3700154943,
        .8577948156,
        .3567584454,
        0,
        .5913394901,
        -.548311967,
        -.5913303597,
        0,
        .1204873514,
        -.7626472379,
        -.6354935001,
        0,
        .616959265,
        .03079647928,
        .7863922953,
        0,
        .1258156836,
        -.6640829889,
        -.7369967419,
        0,
        -.6477565124,
        -.1740147258,
        -.7417077429,
        0,
        .6217889313,
        -.7804430448,
        -.06547655076,
        0,
        .6589943422,
        -.6096987708,
        .4404473475,
        0,
        -.2689837504,
        -.6732403169,
        -.6887635427,
        0,
        -.3849775103,
        .5676542638,
        .7277093879,
        0,
        .5754444408,
        .8110471154,
        -.1051963504,
        0,
        .9141593684,
        .3832947817,
        .131900567,
        0,
        -.107925319,
        .9245493968,
        .3654593525,
        0,
        .377977089,
        .3043148782,
        .8743716458,
        0,
        -.2142885215,
        -.8259286236,
        .5214617324,
        0,
        .5802544474,
        .4148098596,
        -.7008834116,
        0,
        -.1982660881,
        .8567161266,
        -.4761596756,
        0,
        -.03381553704,
        .3773180787,
        -.9254661404,
        0,
        -.6867922841,
        -.6656597827,
        .2919133642,
        0,
        .7731742607,
        -.2875793547,
        -.5652430251,
        0,
        -.09655941928,
        .9193708367,
        -.3813575004,
        0,
        .2715702457,
        -.9577909544,
        -.09426605581,
        0,
        .2451015704,
        -.6917998565,
        -.6792188003,
        0,
        .977700782,
        -.1753855374,
        .1155036542,
        0,
        -.5224739938,
        .8521606816,
        .02903615945,
        0,
        -.7734880599,
        -.5261292347,
        .3534179531,
        0,
        -.7134492443,
        -.269547243,
        .6467878011,
        0,
        .1644037271,
        .5105846203,
        -.8439637196,
        0,
        .6494635788,
        .05585611296,
        .7583384168,
        0,
        -.4711970882,
        .5017280509,
        -.7254255765,
        0,
        -.6335764307,
        -.2381686273,
        -.7361091029,
        0,
        -.9021533097,
        -.270947803,
        -.3357181763,
        0,
        -.3793711033,
        .872258117,
        .3086152025,
        0,
        -.6855598966,
        -.3250143309,
        .6514394162,
        0,
        .2900942212,
        -.7799057743,
        -.5546100667,
        0,
        -.2098319339,
        .85037073,
        .4825351604,
        0,
        -.4592603758,
        .6598504336,
        -.5947077538,
        0,
        .8715945488,
        .09616365406,
        -.4807031248,
        0,
        -.6776666319,
        .7118504878,
        -.1844907016,
        0,
        .7044377633,
        .312427597,
        .637304036,
        0,
        -.7052318886,
        -.2401093292,
        -.6670798253,
        0,
        .081921007,
        -.7207336136,
        -.6883545647,
        0,
        -.6993680906,
        -.5875763221,
        -.4069869034,
        0,
        -.1281454481,
        .6419895885,
        .7559286424,
        0,
        -.6337388239,
        -.6785471501,
        -.3714146849,
        0,
        .5565051903,
        -.2168887573,
        -.8020356851,
        0,
        -.5791554484,
        .7244372011,
        -.3738578718,
        0,
        .1175779076,
        -.7096451073,
        .6946792478,
        0,
        -.6134619607,
        .1323631078,
        .7785527795,
        0,
        .6984635305,
        -.02980516237,
        -.715024719,
        0,
        .8318082963,
        -.3930171956,
        .3919597455,
        0,
        .1469576422,
        .05541651717,
        -.9875892167,
        0,
        .708868575,
        -.2690503865,
        .6520101478,
        0,
        .2726053183,
        .67369766,
        -.68688995,
        0,
        -.6591295371,
        .3035458599,
        -.6880466294,
        0,
        .4815131379,
        -.7528270071,
        .4487723203,
        0,
        .9430009463,
        .1675647412,
        -.2875261255,
        0,
        .434802957,
        .7695304522,
        -.4677277752,
        0,
        .3931996188,
        .594473625,
        .7014236729,
        0,
        .7254336655,
        -.603925654,
        .3301814672,
        0,
        .7590235227,
        -.6506083235,
        .02433313207,
        0,
        -.8552768592,
        -.3430042733,
        .3883935666,
        0,
        -.6139746835,
        .6981725247,
        .3682257648,
        0,
        -.7465905486,
        -.5752009504,
        .3342849376,
        0,
        .5730065677,
        .810555537,
        -.1210916791,
        0,
        -.9225877367,
        -.3475211012,
        -.167514036,
        0,
        -.7105816789,
        -.4719692027,
        -.5218416899,
        0,
        -.08564609717,
        .3583001386,
        .929669703,
        0,
        -.8279697606,
        -.2043157126,
        .5222271202,
        0,
        .427944023,
        .278165994,
        .8599346446,
        0,
        .5399079671,
        -.7857120652,
        -.3019204161,
        0,
        .5678404253,
        -.5495413974,
        -.6128307303,
        0,
        -.9896071041,
        .1365639107,
        -.04503418428,
        0,
        -.6154342638,
        -.6440875597,
        .4543037336,
        0,
        .1074204368,
        -.7946340692,
        .5975094525,
        0,
        -.3595449969,
        -.8885529948,
        .28495784,
        0,
        -.2180405296,
        .1529888965,
        .9638738118,
        0,
        -.7277432317,
        -.6164050508,
        -.3007234646,
        0,
        .7249729114,
        -.00669719484,
        .6887448187,
        0,
        -.5553659455,
        -.5336586252,
        .6377908264,
        0,
        .5137558015,
        .7976208196,
        -.3160000073,
        0,
        -.3794024848,
        .9245608561,
        -.03522751494,
        0,
        .8229248658,
        .2745365933,
        -.4974176556,
        0,
        -.5404114394,
        .6091141441,
        .5804613989,
        0,
        .8036581901,
        -.2703029469,
        .5301601931,
        0,
        .6044318879,
        .6832968393,
        .4095943388,
        0,
        .06389988817,
        .9658208605,
        -.2512108074,
        0,
        .1087113286,
        .7402471173,
        -.6634877936,
        0,
        -.713427712,
        -.6926784018,
        .1059128479,
        0,
        .6458897819,
        -.5724548511,
        -.5050958653,
        0,
        -.6553931414,
        .7381471625,
        .159995615,
        0,
        .3910961323,
        .9188871375,
        -.05186755998,
        0,
        -.4879022471,
        -.5904376907,
        .6429111375,
        0,
        .6014790094,
        .7707441366,
        -.2101820095,
        0,
        -.5677173047,
        .7511360995,
        .3368851762,
        0,
        .7858573506,
        .226674665,
        .5753666838,
        0,
        -.4520345543,
        -.604222686,
        -.6561857263,
        0,
        .002272116345,
        .4132844051,
        -.9105991643,
        0,
        -.5815751419,
        -.5162925989,
        .6286591339,
        0,
        -.03703704785,
        .8273785755,
        .5604221175,
        0,
        -.5119692504,
        .7953543429,
        -.3244980058,
        0,
        -.2682417366,
        -.9572290247,
        -.1084387619,
        0,
        -.2322482736,
        -.9679131102,
        -.09594243324,
        0,
        .3554328906,
        -.8881505545,
        .2913006227,
        0,
        .7346520519,
        -.4371373164,
        .5188422971,
        0,
        .9985120116,
        .04659011161,
        -.02833944577,
        0,
        -.3727687496,
        -.9082481361,
        .1900757285,
        0,
        .91737377,
        -.3483642108,
        .1925298489,
        0,
        .2714911074,
        .4147529736,
        -.8684886582,
        0,
        .5131763485,
        -.7116334161,
        .4798207128,
        0,
        -.8737353606,
        .18886992,
        -.4482350644,
        0,
        .8460043821,
        -.3725217914,
        .3814499973,
        0,
        .8978727456,
        -.1780209141,
        -.4026575304,
        0,
        .2178065647,
        -.9698322841,
        -.1094789531,
        0,
        -.1518031304,
        -.7788918132,
        -.6085091231,
        0,
        -.2600384876,
        -.4755398075,
        -.8403819825,
        0,
        .572313509,
        -.7474340931,
        -.3373418503,
        0,
        -.7174141009,
        .1699017182,
        -.6756111411,
        0,
        -.684180784,
        .02145707593,
        -.7289967412,
        0,
        -.2007447902,
        .06555605789,
        -.9774476623,
        0,
        -.1148803697,
        -.8044887315,
        .5827524187,
        0,
        -.7870349638,
        .03447489231,
        .6159443543,
        0,
        -.2015596421,
        .6859872284,
        .6991389226,
        0,
        -.08581082512,
        -.10920836,
        -.9903080513,
        0,
        .5532693395,
        .7325250401,
        -.396610771,
        0,
        -.1842489331,
        -.9777375055,
        -.1004076743,
        0,
        .0775473789,
        -.9111505856,
        .4047110257,
        0,
        .1399838409,
        .7601631212,
        -.6344734459,
        0,
        .4484419361,
        -.845289248,
        .2904925424,
        0
    ], qv = Object.freeze({
        None: "None",
        ImproveXYPlanes: "ImproveXYPlanes",
        ImproveXZPlanes: "ImproveXZPlanes"
    }), yi = Object.freeze({
        None: "None",
        ImproveXYPlanes: "ImproveXYPlanes",
        ImproveXZPlanes: "ImproveXZPlanes",
        DefaultOpenSimplex2: "DefaultOpenSimplex2"
    });
    let Vg = class {
        x;
        y;
        constructor(e, n){
            this.x = e, this.y = n;
        }
    }, Wg = class {
        x;
        y;
        z;
        constructor(e, n, r){
            this.x = e, this.y = n, this.z = r;
        }
    };
    const Fr = (t, e, n, r, i)=>{
        const s = r - n - (t - e);
        return i * i * i * s + i * i * (t - e - s) + i * (n - t) + e;
    }, Bs = (t, e, n)=>{
        let r = t ^ e ^ n;
        return r = Math.imul(r, 668265261), r;
    }, Ms = (t, e, n, r, i)=>{
        let s = Bs(t, e, n);
        s ^= s >> 15, s &= 254;
        const o = Yc[s], a = Yc[s | 1];
        return r * o + i * a;
    }, Us = (t, e, n, r)=>{
        let i = t ^ e ^ n ^ r;
        return i = Math.imul(i, 668265261), i;
    }, jr = (t, e, n, r, i, s, o)=>{
        let a = Us(t, e, n, r);
        a ^= a >> 15, a &= 252;
        const l = pd[a], c = pd[a | 1], u = pd[a | 2];
        return i * l + s * c + o * u;
    }, Hc = (t)=>t * t * (3 - 2 * t), jx = (t)=>t * t * t * (t * (t * 6 - 15) + 10), an = (t, e, n)=>t + n * (e - t), tL = (t)=>(t -= Math.trunc(t * .5) * 2, t < 1 ? t : 2 - t), nJ = (t, e, n)=>{
        let r = Math.floor(e), i = Math.floor(n);
        const s = e - r, o = n - i, a = s - 1, l = o - 1, c = jx(s), u = jx(o);
        r = Math.imul(r, $t), i = Math.imul(i, Gt);
        const f = r + $t, h = i + Gt, m = an(Ms(t, r, i, s, o), Ms(t, f, i, a, o), c), v = an(Ms(t, r, h, s, l), Ms(t, f, h, a, l), c);
        return an(m, v, u) * 1.4247691104677813;
    }, Gi = (t, e, n)=>{
        let r = Bs(t, e, n);
        return r = Math.imul(r, r), r ^= r << 19, r * (1 / 2147483648);
    }, Nt = (t, e, n, r)=>{
        let i = Us(t, e, n, r);
        return i = Math.imul(i, i), i ^= i << 19, i * (1 / 2147483648);
    };
    class $C {
        _Seed;
        _Frequency = .01;
        _NoiseType = Ss.OpenSimplex2;
        _RotationType3D = qv.None;
        _TransformType3D = yi.DefaultOpenSimplex2;
        _DomainWarpAmp = 1;
        _FractalType = qc.None;
        _Octaves = 3;
        _Lacunarity = 2;
        _Gain = .5;
        _WeightedStrength = 0;
        _PingPongStrength = 2;
        _FractalBounding = 1 / 1.75;
        _CellularDistanceFunction = gl.EuclideanSq;
        _CellularReturnType = _s.Distance;
        _CellularJitterModifier = 1;
        _DomainWarpType = to.OpenSimplex2;
        _WarpTransformType3D = yi.DefaultOpenSimplex2;
        static NoiseType = Ss;
        static FractalType = qc;
        static CellularDistanceFunction = gl;
        static CellularReturnType = _s;
        static DomainWarpType = to;
        constructor(e){
            this._Seed = e;
        }
        SetFrequency(e) {
            this._Frequency = e;
        }
        SetNoiseType(e) {
            this._NoiseType = e, this._UpdateTransformType3D();
        }
        SetRotationType3D(e) {
            this._RotationType3D = e, this._UpdateTransformType3D(), this._UpdateWarpTransformType3D();
        }
        SetFractalType(e) {
            this._FractalType = e;
        }
        SetFractalOctaves(e) {
            this._Octaves = e, this._CalculateFractalBounding();
        }
        SetFractalLacunarity(e) {
            this._Lacunarity = e;
        }
        SetFractalGain(e) {
            this._Gain = e, this._CalculateFractalBounding();
        }
        SetFractalWeightedStrength(e) {
            this._WeightedStrength = e;
        }
        SetFractalPingPongStrength(e) {
            this._PingPongStrength = e;
        }
        SetCellularDistanceFunction(e) {
            this._CellularDistanceFunction = e;
        }
        SetCellularReturnType(e) {
            this._CellularReturnType = e;
        }
        SetCellularJitter(e) {
            this._CellularJitterModifier = e;
        }
        SetDomainWarpType(e) {
            this._DomainWarpType = e, this._UpdateWarpTransformType3D();
        }
        SetDomainWarpAmp(e) {
            this._DomainWarpAmp = e;
        }
        GetNoise(e, n, r) {
            const i = (o, a)=>{
                switch(o *= this._Frequency, a *= this._Frequency, this._NoiseType){
                    case Ss.OpenSimplex2:
                    case Ss.OpenSimplex2S:
                        {
                            const c = .5 * (1.7320508075688772 - 1), u = (o + a) * c;
                            o += u, a += u;
                            break;
                        }
                }
                switch(this._FractalType){
                    case qc.FBm:
                        return this._GenFractalFBmR2(o, a);
                    case qc.Ridged:
                        return this._GenFractalRidgedR2(o, a);
                    case qc.PingPong:
                        return this._GenFractalPingPongR2(o, a);
                    default:
                        return this._GenNoiseSingleR2(this._Seed, o, a);
                }
            }, s = (o, a, l)=>{
                switch(o *= this._Frequency, a *= this._Frequency, l *= this._Frequency, this._TransformType3D){
                    case yi.ImproveXYPlanes:
                        {
                            const c = o + a, u = c * -.211324865405187;
                            l *= .577350269189626, o += u - l, a += u - l, l += c * .577350269189626;
                            break;
                        }
                    case yi.ImproveXZPlanes:
                        {
                            const c = o + l, u = c * -.211324865405187;
                            a *= .577350269189626, o += u - a, l += u - a, a += c * .577350269189626;
                            break;
                        }
                    case yi.DefaultOpenSimplex2:
                        {
                            const u = (o + a + l) * .6666666666666666;
                            o = u - o, a = u - a, l = u - l;
                            break;
                        }
                }
                switch(this._FractalType){
                    case qc.FBm:
                        return this._GenFractalFBmR3(o, a, l);
                    case qc.Ridged:
                        return this._GenFractalRidgedR3(o, a, l);
                    case qc.PingPong:
                        return this._GenFractalPingPongR3(o, a, l);
                    default:
                        return this._GenNoiseSingleR3(this._Seed, o, a, l);
                }
            };
            return arguments.length === 2 ? i(e, n) : arguments.length === 3 && r !== void 0 ? s(e, n, r) : 0;
        }
        DomainWrap(e) {
            switch(this._FractalType){
                case qc.DomainWarpProgressive:
                    this._DomainWarpFractalProgressive(e);
                    break;
                case qc.DomainWarpIndependent:
                    this._DomainWarpFractalIndependent(e);
                    break;
                default:
                    this._DomainWarpSingle(e);
                    break;
            }
        }
        _CalculateFractalBounding() {
            const e = Math.abs(this._Gain);
            let n = e, r = 1;
            for(let i = 1; i < this._Octaves; i++)r += n, n *= e;
            this._FractalBounding = 1 / r;
        }
        _GenNoiseSingleR2(e, n, r) {
            switch(this._NoiseType){
                case Ss.OpenSimplex2:
                    return this._SingleOpenSimplex2R2(e, n, r);
                case Ss.OpenSimplex2S:
                    return this._SingleOpenSimplex2SR2(e, n, r);
                case Ss.Cellular:
                    return this._SingleCellularR2(e, n, r);
                case Ss.Perlin:
                    return nJ(e, n, r);
                case Ss.ValueCubic:
                    return this._SingleValueCubicR2(e, n, r);
                case Ss.Value:
                    return this._SingleValueR2(e, n, r);
                default:
                    return 0;
            }
        }
        _GenNoiseSingleR3(e, n, r, i) {
            switch(this._NoiseType){
                case Ss.OpenSimplex2:
                    return this._SingleOpenSimplex2R3(e, n, r, i);
                case Ss.OpenSimplex2S:
                    return this._SingleOpenSimplex2SR3(e, n, r, i);
                case Ss.Cellular:
                    return this._SingleCellularR3(e, n, r, i);
                case Ss.Perlin:
                    return this._SinglePerlinR3(e, n, r, i);
                case Ss.ValueCubic:
                    return this._SingleValueCubicR3(e, n, r, i);
                case Ss.Value:
                    return this._SingleValueR3(e, n, r, i);
                default:
                    return 0;
            }
        }
        _UpdateTransformType3D() {
            switch(this._RotationType3D){
                case qv.ImproveXYPlanes:
                    this._TransformType3D = yi.ImproveXYPlanes;
                    break;
                case qv.ImproveXZPlanes:
                    this._TransformType3D = yi.ImproveXZPlanes;
                    break;
                default:
                    switch(this._NoiseType){
                        case Ss.OpenSimplex2:
                        case Ss.OpenSimplex2S:
                            this._TransformType3D = yi.DefaultOpenSimplex2;
                            break;
                        default:
                            this._TransformType3D = yi.None;
                            break;
                    }
                    break;
            }
        }
        _UpdateWarpTransformType3D() {
            switch(this._RotationType3D){
                case qv.ImproveXYPlanes:
                    this._WarpTransformType3D = yi.ImproveXYPlanes;
                    break;
                case qv.ImproveXZPlanes:
                    this._WarpTransformType3D = yi.ImproveXZPlanes;
                    break;
                default:
                    switch(this._DomainWarpType){
                        case to.OpenSimplex2:
                        case to.OpenSimplex2Reduced:
                            this._WarpTransformType3D = yi.DefaultOpenSimplex2;
                            break;
                        default:
                            this._WarpTransformType3D = yi.None;
                            break;
                    }
                    break;
            }
        }
        _GenFractalFBmR2(e, n) {
            let r = this._Seed, i = 0, s = this._FractalBounding;
            for(let o = 0; o < this._Octaves; o++){
                const a = this._GenNoiseSingleR2(r++, e, n);
                i += a * s, s *= an(1, Math.min(a + 1, 2) * .5, this._WeightedStrength), e *= this._Lacunarity, n *= this._Lacunarity, s *= this._Gain;
            }
            return i;
        }
        _GenFractalFBmR3(e, n, r) {
            let i = this._Seed, s = 0, o = this._FractalBounding;
            for(let a = 0; a < this._Octaves; a++){
                const l = this._GenNoiseSingleR3(i++, e, n, r);
                s += l * o, o *= an(1, (l + 1) * .5, this._WeightedStrength), e *= this._Lacunarity, n *= this._Lacunarity, r *= this._Lacunarity, o *= this._Gain;
            }
            return s;
        }
        _GenFractalRidgedR2(e, n) {
            let r = this._Seed, i = 0, s = this._FractalBounding;
            for(let o = 0; o < this._Octaves; o++){
                const a = Math.abs(this._GenNoiseSingleR2(r++, e, n));
                i += (a * -2 + 1) * s, s *= an(1, 1 - a, this._WeightedStrength), e *= this._Lacunarity, n *= this._Lacunarity, s *= this._Gain;
            }
            return i;
        }
        _GenFractalRidgedR3(e, n, r) {
            let i = this._Seed, s = 0, o = this._FractalBounding;
            for(let a = 0; a < this._Octaves; a++){
                const l = Math.abs(this._GenNoiseSingleR3(i++, e, n, r));
                s += (l * -2 + 1) * o, o *= an(1, 1 - l, this._WeightedStrength), e *= this._Lacunarity, n *= this._Lacunarity, r *= this._Lacunarity, o *= this._Gain;
            }
            return s;
        }
        _GenFractalPingPongR2(e, n) {
            let r = this._Seed, i = 0, s = this._FractalBounding;
            for(let o = 0; o < this._Octaves; o++){
                const a = tL((this._GenNoiseSingleR2(r++, e, n) + 1) * this._PingPongStrength);
                i += (a - .5) * 2 * s, s *= an(1, a, this._WeightedStrength), e *= this._Lacunarity, n *= this._Lacunarity, s *= this._Gain;
            }
            return i;
        }
        _GenFractalPingPongR3(e, n, r) {
            let i = this._Seed, s = 0, o = this._FractalBounding;
            for(let a = 0; a < this._Octaves; a++){
                const l = tL((this._GenNoiseSingleR3(i++, e, n, r) + 1) * this._PingPongStrength);
                s += (l - .5) * 2 * o, o *= an(1, l, this._WeightedStrength), e *= this._Lacunarity, n *= this._Lacunarity, r *= this._Lacunarity, o *= this._Gain;
            }
            return s;
        }
        _SingleOpenSimplex2R2(e, n, r) {
            const s = (3 - 1.7320508075688772) / 6;
            let o = Math.floor(n), a = Math.floor(r);
            const l = n - o, c = r - a, u = (l + c) * s, f = l - u, h = c - u;
            o = Math.imul(o, $t), a = Math.imul(a, Gt);
            let m, v, _;
            const w = .5 - f * f - h * h;
            w <= 0 ? m = 0 : m = w * w * (w * w) * Ms(e, o, a, f, h);
            const b = 2 * (1 - 2 * s) * (1 / s - 2) * u + (-2 * (1 - 2 * s) * (1 - 2 * s) + w);
            if (b <= 0) _ = 0;
            else {
                const M = f + (2 * s - 1), E = h + (2 * s - 1);
                _ = b * b * (b * b) * Ms(e, o + $t, a + Gt, M, E);
            }
            if (h > f) {
                const M = f + s, E = h + (s - 1), T = .5 - M * M - E * E;
                T <= 0 ? v = 0 : v = T * T * (T * T) * Ms(e, o, a + Gt, M, E);
            } else {
                const M = f + (s - 1), E = h + s, T = .5 - M * M - E * E;
                T <= 0 ? v = 0 : v = T * T * (T * T) * Ms(e, o + $t, a, M, E);
            }
            return (m + v + _) * 99.83685446303647;
        }
        _SingleOpenSimplex2R3(e, n, r, i) {
            let s = Math.round(n), o = Math.round(r), a = Math.round(i), l = n - s, c = r - o, u = i - a, f = Math.trunc(-1 - c | 1), h = Math.trunc(-1 - l | 1), m = Math.trunc(-1 - u | 1), v = h * -l, _ = f * -c, w = m * -u;
            s = Math.imul(s, $t), o = Math.imul(o, Gt), a = Math.imul(a, er);
            let b = 0, M = .6 - l * l - (c * c + u * u);
            for(let E = 0;; E++){
                if (M > 0 && (b += M * M * (M * M) * jr(e, s, o, a, l, c, u)), v >= _ && v >= w) {
                    let T = M + v + v;
                    T > 1 && (T -= 1, b += T * T * (T * T) * jr(e, s - h * $t, o, a, l + h, c, u));
                } else if (_ > v && _ >= w) {
                    let T = M + _ + _;
                    T > 1 && (T -= 1, b += T * T * (T * T) * jr(e, s, o - f * Gt, a, l, c + f, u));
                } else {
                    let T = M + w + w;
                    T > 1 && (T -= 1, b += T * T * (T * T) * jr(e, s, o, a - m * er, l, c, u + m));
                }
                if (E === 1) break;
                v = .5 - v, _ = .5 - _, w = .5 - w, l = h * v, c = f * _, u = m * w, M += .75 - v - (_ + w), s += h >> 1 & $t, o += f >> 1 & Gt, a += m >> 1 & er, h = -h, f = -f, m = -m, e = ~e;
            }
            return b * 32.69428253173828;
        }
        _SingleOpenSimplex2SR2(e, n, r) {
            const s = (3 - 1.7320508075688772) / 6;
            let o = Math.floor(n), a = Math.floor(r);
            const l = n - o, c = r - a;
            o = Math.imul(o, $t), a = Math.imul(a, Gt);
            const u = o + $t, f = a + Gt, h = (l + c) * s, m = l - h, v = c - h, _ = 2 / 3 - m * m - v * v;
            let w = _ * _ * (_ * _) * Ms(e, o, a, m, v);
            const b = 2 * (1 - 2 * s) * (1 / s - 2) * h + (-2 * (1 - 2 * s) * (1 - 2 * s) + _), M = m - (1 - 2 * s), E = v - (1 - 2 * s);
            w += b * b * (b * b) * Ms(e, u, f, M, E);
            const T = l - c;
            if (h > s) {
                if (l + T > 1) {
                    const P = m + (3 * s - 2), A = v + (3 * s - 1), O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o + ($t << 1), a + Gt, P, A));
                } else {
                    const P = m + s, A = v + (s - 1), O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o, a + Gt, P, A));
                }
                if (c - T > 1) {
                    const P = m + (3 * s - 1), A = v + (3 * s - 2), O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o + $t, a + (Gt << 1), P, A));
                } else {
                    const P = m + (s - 1), A = v + s, O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o + $t, a, P, A));
                }
            } else {
                if (l + T < 0) {
                    const P = m + (1 - s), A = v - s, O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o - $t, a, P, A));
                } else {
                    const P = m + (s - 1), A = v + s, O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o + $t, a, P, A));
                }
                if (c < T) {
                    const P = m - s, A = v - (s - 1), O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o, a - Gt, P, A));
                } else {
                    const P = m + s, A = v + (s - 1), O = 2 / 3 - P * P - A * A;
                    O > 0 && (w += O * O * (O * O) * Ms(e, o, a + Gt, P, A));
                }
            }
            return w * 18.24196194486065;
        }
        _SingleOpenSimplex2SR3(e, n, r, i) {
            let s = Math.floor(n), o = Math.floor(r), a = Math.floor(i);
            const l = n - s, c = r - o, u = i - a;
            s = Math.imul(s, $t), o = Math.imul(o, Gt), a = Math.imul(a, er);
            const f = e + 1293373, h = Math.trunc(-.5 - l), m = Math.trunc(-.5 - c), v = Math.trunc(-.5 - u), _ = l + h, w = c + m, b = u + v, M = .75 - _ * _ - w * w - b * b;
            let E = M * M * (M * M) * jr(e, s + (h & $t), o + (m & Gt), a + (v & er), _, w, b);
            const T = l - .5, P = c - .5, A = u - .5, O = .75 - T * T - P * P - A * A;
            E += O * O * (O * O) * jr(f, s + $t, o + Gt, a + er, T, P, A);
            const D = ((h | 1) << 1) * T, R = ((m | 1) << 1) * P, N = ((v | 1) << 1) * A, k = (-2 - (h << 2)) * T - 1, U = (-2 - (m << 2)) * P - 1, B = (-2 - (v << 2)) * A - 1;
            let j = !1;
            const K = D + M;
            if (K > 0) {
                const $ = _ - (h | 1);
                E += K * K * (K * K) * jr(e, s + (~h & $t), o + (m & Gt), a + (v & er), $, w, b);
            } else {
                const $ = R + N + M;
                if ($ > 0) {
                    const se = _, le = w - (m | 1), ne = b - (v | 1);
                    E += $ * $ * ($ * $) * jr(e, s + (h & $t), o + (~m & Gt), a + (~v & er), se, le, ne);
                }
                const H = k + O;
                if (H > 0) {
                    const se = (h | 1) + T;
                    E += H * H * (H * H) * jr(f, s + (h & $t * 2), o + Gt, a + er, se, P, A), j = !0;
                }
            }
            let q = !1;
            const ee = R + M;
            if (ee > 0) {
                const $ = _, H = w - (m | 1);
                E += ee * ee * (ee * ee) * jr(e, s + (h & $t), o + (~m & Gt), a + (v & er), $, H, b);
            } else {
                const $ = D + N + M;
                if ($ > 0) {
                    const se = _ - (h | 1), le = w, ne = b - (v | 1);
                    E += $ * $ * ($ * $) * jr(e, s + (~h & $t), o + (m & Gt), a + (~v & er), se, le, ne);
                }
                const H = U + O;
                if (H > 0) {
                    const se = T, le = (m | 1) + P;
                    E += H * H * (H * H) * jr(f, s + $t, o + (m & Gt << 1), a + er, se, le, A), q = !0;
                }
            }
            let W = !1;
            const Z = N + M;
            if (Z > 0) {
                const $ = _, H = w, se = b - (v | 1);
                E += Z * Z * (Z * Z) * jr(e, s + (h & $t), o + (m & Gt), a + (~v & er), $, H, se);
            } else {
                const $ = D + R + M;
                if ($ > 0) {
                    const se = _ - (h | 1), le = w - (m | 1);
                    E += $ * $ * ($ * $) * jr(e, s + (~h & $t), o + (~m & Gt), a + (v & er), se, le, b);
                }
                const H = B + O;
                if (H > 0) {
                    const se = T, le = P, ne = (v | 1) + A;
                    E += H * H * (H * H) * jr(f, s + $t, o + Gt, a + (v & er << 1), se, le, ne), W = !0;
                }
            }
            if (!j) {
                const $ = U + B + O;
                if ($ > 0) {
                    const H = T, se = (m | 1) + P, le = (v | 1) + A;
                    E += $ * $ * ($ * $) * jr(f, s + $t, o + (m & Gt << 1), a + (v & er << 1), H, se, le);
                }
            }
            if (!q) {
                const $ = k + B + O;
                if ($ > 0) {
                    const H = (h | 1) + T, se = P, le = (v | 1) + A;
                    E += $ * $ * ($ * $) * jr(f, s + (h & $t * 2), o + Gt, a + (v & er << 1), H, se, le);
                }
            }
            if (!W) {
                const $ = k + U + O;
                if ($ > 0) {
                    const H = (h | 1) + T, se = (m | 1) + P;
                    E += $ * $ * ($ * $) * jr(f, s + (h & $t << 1), o + (m & Gt << 1), a + er, H, se, A);
                }
            }
            return E * 9.046026385208288;
        }
        _SingleCellularR2(e, n, r) {
            const i = Math.round(n), s = Math.round(r);
            let o = Number.MAX_VALUE, a = Number.MAX_VALUE, l = 0;
            const c = .43701595 * this._CellularJitterModifier;
            let u = (i - 1) * $t;
            const f = (s - 1) * Gt;
            switch(this._CellularDistanceFunction){
                default:
                case gl.Euclidean:
                case gl.EuclideanSq:
                    for(let h = i - 1; h <= i + 1; h++){
                        let m = f;
                        for(let v = s - 1; v <= s + 1; v++){
                            const _ = Bs(e, u, m), w = _ & 510, b = h - n + gr[w] * c, M = v - r + gr[w | 1] * c, E = b * b + M * M;
                            a = Math.max(Math.min(a, E), o), E < o && (o = E, l = _), m += Gt;
                        }
                        u += $t;
                    }
                    break;
                case gl.Manhattan:
                    for(let h = i - 1; h <= i + 1; h++){
                        let m = f;
                        for(let v = s - 1; v <= s + 1; v++){
                            const _ = Bs(e, u, m), w = _ & 510, b = h - n + gr[w] * c, M = v - r + gr[w | 1] * c, E = Math.abs(b) + Math.abs(M);
                            a = Math.max(Math.min(a, E), o), E < o && (o = E, l = _), m += Gt;
                        }
                        u += $t;
                    }
                    break;
                case gl.Hybrid:
                    for(let h = i - 1; h <= i + 1; h++){
                        let m = f;
                        for(let v = s - 1; v <= s + 1; v++){
                            const _ = Bs(e, u, m), w = _ & 510, b = h - n + gr[w] * c, M = v - r + gr[w | 1] * c, E = Math.abs(b) + Math.abs(M) + (b * b + M * M);
                            a = Math.max(Math.min(a, E), o), E < o && (o = E, l = _), m += Gt;
                        }
                        u += $t;
                    }
                    break;
            }
            switch(this._CellularDistanceFunction === gl.Euclidean && this._CellularReturnType !== _s.CellValue && (o = Math.sqrt(o), a = Math.sqrt(a)), this._CellularReturnType){
                case _s.CellValue:
                    return l * (1 / 2147483648);
                case _s.Distance:
                    return o - 1;
                case _s.Distance2:
                    return a - 1;
                case _s.Distance2Add:
                    return (a + o) * .5 - 1;
                case _s.Distance2Sub:
                    return a - o - 1;
                case _s.Distance2Mul:
                    return a * o * .5 - 1;
                case _s.Distance2Div:
                    return o / a - 1;
                default:
                    return 0;
            }
        }
        _SingleCellularR3(e, n, r, i) {
            const s = Math.round(n), o = Math.round(r), a = Math.round(i);
            let l = Number.MAX_VALUE, c = Number.MAX_VALUE, u = 0;
            const f = .39614353 * this._CellularJitterModifier;
            let h = (s - 1) * $t;
            const m = (o - 1) * Gt, v = (a - 1) * er;
            switch(this._CellularDistanceFunction){
                case gl.Euclidean:
                case gl.EuclideanSq:
                    for(let _ = s - 1; _ <= s + 1; _++){
                        let w = m;
                        for(let b = o - 1; b <= o + 1; b++){
                            let M = v;
                            for(let E = a - 1; E <= a + 1; E++){
                                const T = Us(e, h, w, M), P = T & 1020, A = _ - n + Sn[P] * f, O = b - r + Sn[P | 1] * f, D = E - i + Sn[P | 2] * f, R = A * A + O * O + D * D;
                                c = Math.max(Math.min(c, R), l), R < l && (l = R, u = T), M += er;
                            }
                            w += Gt;
                        }
                        h += $t;
                    }
                    break;
                case gl.Manhattan:
                    for(let _ = s - 1; _ <= s + 1; _++){
                        let w = m;
                        for(let b = o - 1; b <= o + 1; b++){
                            let M = v;
                            for(let E = a - 1; E <= a + 1; E++){
                                const T = Us(e, h, w, M), P = T & 1020, A = _ - n + Sn[P] * f, O = b - r + Sn[P | 1] * f, D = E - i + Sn[P | 2] * f, R = Math.abs(A) + Math.abs(O) + Math.abs(D);
                                c = Math.max(Math.min(c, R), l), R < l && (l = R, u = T), M += er;
                            }
                            w += Gt;
                        }
                        h += $t;
                    }
                    break;
                case gl.Hybrid:
                    for(let _ = s - 1; _ <= s + 1; _++){
                        let w = m;
                        for(let b = o - 1; b <= o + 1; b++){
                            let M = v;
                            for(let E = a - 1; E <= a + 1; E++){
                                const T = Us(e, h, w, M), P = T & 1020, A = _ - n + Sn[P] * f, O = b - r + Sn[P | 1] * f, D = E - i + Sn[P | 2] * f, R = Math.abs(A) + Math.abs(O) + Math.abs(D) + (A * A + O * O + D * D);
                                c = Math.max(Math.min(c, R), l), R < l && (l = R, u = T), M += er;
                            }
                            w += Gt;
                        }
                        h += $t;
                    }
                    break;
            }
            switch(this._CellularDistanceFunction === gl.Euclidean && this._CellularReturnType !== _s.CellValue && (l = Math.sqrt(l), c = Math.sqrt(c)), this._CellularReturnType){
                case _s.CellValue:
                    return u * (1 / 2147483648);
                case _s.Distance:
                    return l - 1;
                case _s.Distance2:
                    return c - 1;
                case _s.Distance2Add:
                    return (c + l) * .5 - 1;
                case _s.Distance2Sub:
                    return c - l - 1;
                case _s.Distance2Mul:
                    return c * l * .5 - 1;
                case _s.Distance2Div:
                    return l / c - 1;
                default:
                    return 0;
            }
        }
        _SinglePerlinR3(e, n, r, i) {
            let s = Math.floor(n), o = Math.floor(r), a = Math.floor(i);
            const l = n - s, c = r - o, u = i - a, f = l - 1, h = c - 1, m = u - 1, v = jx(l), _ = jx(c), w = jx(u);
            s = Math.imul(s, $t), o = Math.imul(o, Gt), a = Math.imul(a, er);
            const b = s + $t, M = o + Gt, E = a + er, T = an(jr(e, s, o, a, l, c, u), jr(e, b, o, a, f, c, u), v), P = an(jr(e, s, M, a, l, h, u), jr(e, b, M, a, f, h, u), v), A = an(jr(e, s, o, E, l, c, m), jr(e, b, o, E, f, c, m), v), O = an(jr(e, s, M, E, l, h, m), jr(e, b, M, E, f, h, m), v), D = an(T, P, _), R = an(A, O, _);
            return an(D, R, w) * .9649214148521423;
        }
        _SingleValueCubicR2(e, n, r) {
            let i = Math.floor(n), s = Math.floor(r);
            const o = n - i, a = r - s;
            i = Math.imul(i, $t), s = Math.imul(s, Gt);
            const l = i - $t, c = s - Gt, u = i + $t, f = s + Gt, h = i + ($t << 1), m = s + (Gt << 1);
            return Fr(Fr(Gi(e, l, c), Gi(e, i, c), Gi(e, u, c), Gi(e, h, c), o), Fr(Gi(e, l, s), Gi(e, i, s), Gi(e, u, s), Gi(e, h, s), o), Fr(Gi(e, l, f), Gi(e, i, f), Gi(e, u, f), Gi(e, h, f), o), Fr(Gi(e, l, m), Gi(e, i, m), Gi(e, u, m), Gi(e, h, m), o), a) * (1 / (1.5 * 1.5));
        }
        _SingleValueCubicR3(e, n, r, i) {
            let s = Math.floor(n), o = Math.floor(r), a = Math.floor(i);
            const l = n - s, c = r - o, u = i - a;
            s = Math.imul(s, $t), o = Math.imul(o, Gt), a = Math.imul(a, er);
            const f = s - $t, h = o - Gt, m = a - er, v = s + $t, _ = o + Gt, w = a + er, b = s + ($t << 1), M = o + (Gt << 1), E = a + (er << 1);
            return Fr(Fr(Fr(Nt(e, f, h, m), Nt(e, s, h, m), Nt(e, v, h, m), Nt(e, b, h, m), l), Fr(Nt(e, f, o, m), Nt(e, s, o, m), Nt(e, v, o, m), Nt(e, b, o, m), l), Fr(Nt(e, f, _, m), Nt(e, s, _, m), Nt(e, v, _, m), Nt(e, b, _, m), l), Fr(Nt(e, f, M, m), Nt(e, s, M, m), Nt(e, v, M, m), Nt(e, b, M, m), l), c), Fr(Fr(Nt(e, f, h, a), Nt(e, s, h, a), Nt(e, v, h, a), Nt(e, b, h, a), l), Fr(Nt(e, f, o, a), Nt(e, s, o, a), Nt(e, v, o, a), Nt(e, b, o, a), l), Fr(Nt(e, f, _, a), Nt(e, s, _, a), Nt(e, v, _, a), Nt(e, b, _, a), l), Fr(Nt(e, f, M, a), Nt(e, s, M, a), Nt(e, v, M, a), Nt(e, b, M, a), l), c), Fr(Fr(Nt(e, f, h, w), Nt(e, s, h, w), Nt(e, v, h, w), Nt(e, b, h, w), l), Fr(Nt(e, f, o, w), Nt(e, s, o, w), Nt(e, v, o, w), Nt(e, b, o, w), l), Fr(Nt(e, f, _, w), Nt(e, s, _, w), Nt(e, v, _, w), Nt(e, b, _, w), l), Fr(Nt(e, f, M, w), Nt(e, s, M, w), Nt(e, v, M, w), Nt(e, b, M, w), l), c), Fr(Fr(Nt(e, f, h, E), Nt(e, s, h, E), Nt(e, v, h, E), Nt(e, b, h, E), l), Fr(Nt(e, f, o, E), Nt(e, s, o, E), Nt(e, v, o, E), Nt(e, b, o, E), l), Fr(Nt(e, f, _, E), Nt(e, s, _, E), Nt(e, v, _, E), Nt(e, b, _, E), l), Fr(Nt(e, f, M, E), Nt(e, s, M, E), Nt(e, v, M, E), Nt(e, b, M, E), l), c), u) * (1 / (1.5 * 1.5 * 1.5));
        }
        _SingleValueR2(e, n, r) {
            let i = Math.floor(n), s = Math.floor(r);
            const o = Hc(n - i), a = Hc(r - s);
            i = Math.imul(i, $t), s = Math.imul(s, Gt);
            const l = i + $t, c = s + Gt, u = an(Gi(e, i, s), Gi(e, l, s), o), f = an(Gi(e, i, c), Gi(e, l, c), o);
            return an(u, f, a);
        }
        _SingleValueR3(e, n, r, i) {
            let s = Math.floor(n), o = Math.floor(r), a = Math.floor(i);
            const l = Hc(n - s), c = Hc(r - o), u = Hc(i - a);
            s = Math.imul(s, $t), o = Math.imul(o, Gt), a = Math.imul(a, er);
            const f = s + $t, h = o + Gt, m = a + er, v = an(Nt(e, s, o, a), Nt(e, f, o, a), l), _ = an(Nt(e, s, h, a), Nt(e, f, h, a), l), w = an(Nt(e, s, o, m), Nt(e, f, o, m), l), b = an(Nt(e, s, h, m), Nt(e, f, h, m), l), M = an(v, _, c), E = an(w, b, c);
            return an(M, E, u);
        }
        _DoSingleDomainWarp(e, n, r, i, s, o, a) {
            const l = (u, f, h, m, v, _)=>{
                switch(this._DomainWarpType){
                    case to.OpenSimplex2:
                        this._SingleDomainWarpOpenSimplex2Gradient(u, f * 38.283687591552734, h, m, !1, v, _);
                        break;
                    case to.OpenSimplex2Reduced:
                        this._SingleDomainWarpOpenSimplex2Gradient(u, f * 16, h, m, !0, v, _);
                        break;
                    case to.BasicGrid:
                        this._SingleDomainWarpBasicGrid(u, f, h, m, v, _);
                        break;
                }
            }, c = (u, f, h, m, v, _, w)=>{
                switch(this._DomainWarpType){
                    case to.OpenSimplex2:
                        this._SingleDomainWarpOpenSimplex2Gradient(u, f * 32.69428253173828, h, m, !1, v, _, w);
                        break;
                    case to.OpenSimplex2Reduced:
                        this._SingleDomainWarpOpenSimplex2Gradient(u, f * 7.71604938271605, h, m, !0, v, _, w);
                        break;
                    case to.BasicGrid:
                        this._SingleDomainWarpBasicGrid(u, f, h, m, v, _, w);
                        break;
                }
            };
            if (i instanceof Vg) return l(e, n, r, i, s, o);
            if (i instanceof Wg && a !== void 0) return c(e, n, r, i, s, o, a);
        }
        _DomainWarpSingle(e) {
            const n = (i)=>{
                const s = this._Seed, o = this._DomainWarpAmp * this._FractalBounding, a = this._Frequency;
                let l = i.x, c = i.y;
                switch(this._DomainWarpType){
                    case to.OpenSimplex2:
                    case to.OpenSimplex2Reduced:
                        {
                            const f = .5 * (1.7320508075688772 - 1), h = (l + c) * f;
                            l += h, c += h;
                            break;
                        }
                }
                this._DoSingleDomainWarp(s, o, a, i, l, c);
            }, r = (i)=>{
                const s = this._Seed, o = this._DomainWarpAmp * this._FractalBounding, a = this._Frequency;
                let l = i.x, c = i.y, u = i.z;
                switch(this._WarpTransformType3D){
                    case yi.ImproveXYPlanes:
                        {
                            const f = l + c, h = f * -.211324865405187;
                            u *= .577350269189626, l += h - u, c = c + h - u, u += f * .577350269189626;
                        }
                        break;
                    case yi.ImproveXZPlanes:
                        {
                            const f = l + u, h = f * -.211324865405187;
                            c *= .577350269189626, l += h - c, u += h - c, c += f * .577350269189626;
                        }
                        break;
                    case yi.DefaultOpenSimplex2:
                        {
                            const h = (l + c + u) * .6666666666666666;
                            l = h - l, c = h - c, u = h - u;
                            break;
                        }
                }
                this._DoSingleDomainWarp(s, o, a, i, l, c, u);
            };
            if (e instanceof Vg) return n(e);
            if (e instanceof Wg) return r(e);
        }
        _DomainWarpFractalProgressive(e) {
            const n = (i)=>{
                let s = this._Seed, o = this._DomainWarpAmp * this._FractalBounding, a = this._Frequency;
                for(let l = 0; l < this._Octaves; l++){
                    let c = i.x, u = i.y;
                    switch(this._DomainWarpType){
                        case to.OpenSimplex2:
                        case to.OpenSimplex2Reduced:
                            {
                                const h = .5 * (1.7320508075688772 - 1), m = (c + u) * h;
                                c += m, u += m;
                                break;
                            }
                    }
                    this._DoSingleDomainWarp(s, o, a, i, c, u), s++, o *= this._Gain, a *= this._Lacunarity;
                }
            }, r = (i)=>{
                let s = this._Seed, o = this._DomainWarpAmp * this._FractalBounding, a = this._Frequency;
                for(let l = 0; l < this._Octaves; l++){
                    let c = i.x, u = i.y, f = i.z;
                    switch(this._WarpTransformType3D){
                        case yi.ImproveXYPlanes:
                            {
                                const h = c + u, m = h * -.211324865405187;
                                f *= .577350269189626, c += m - f, u = u + m - f, f += h * .577350269189626;
                            }
                            break;
                        case yi.ImproveXZPlanes:
                            {
                                const h = c + f, m = h * -.211324865405187;
                                u *= .577350269189626, c += m - u, f += m - u, u += h * .577350269189626;
                            }
                            break;
                        case yi.DefaultOpenSimplex2:
                            {
                                const m = (c + u + f) * .6666666666666666;
                                c = m - c, u = m - u, f = m - f;
                            }
                            break;
                    }
                    this._DoSingleDomainWarp(s, o, a, i, c, u, f), s++, o *= this._Gain, a *= this._Lacunarity;
                }
            };
            if (e instanceof Vg) return n(e);
            if (e instanceof Wg) return r(e);
        }
        _DomainWarpFractalIndependent(e) {
            const n = (i)=>{
                let s = i.x, o = i.y;
                switch(this._DomainWarpType){
                    case to.OpenSimplex2:
                    case to.OpenSimplex2Reduced:
                        {
                            const f = .5 * (1.7320508075688772 - 1), h = (s + o) * f;
                            s += h, o += h;
                            break;
                        }
                }
                let a = this._Seed, l = this._DomainWarpAmp * this._FractalBounding, c = this._Frequency;
                for(let u = 0; u < this._Octaves; u++)this._DoSingleDomainWarp(a, l, c, i, s, o), a++, l *= this._Gain, c *= this._Lacunarity;
            }, r = (i)=>{
                let s = i.x, o = i.y, a = i.z;
                switch(this._WarpTransformType3D){
                    case yi.ImproveXYPlanes:
                        {
                            const f = s + o, h = f * -.211324865405187;
                            a *= .577350269189626, s += h - a, o = o + h - a, a += f * .577350269189626;
                        }
                        break;
                    case yi.ImproveXZPlanes:
                        {
                            const f = s + a, h = f * -.211324865405187;
                            o *= .577350269189626, s += h - o, a += h - o, o += f * .577350269189626;
                        }
                        break;
                    case yi.DefaultOpenSimplex2:
                        {
                            const h = (s + o + a) * .6666666666666666;
                            s = h - s, o = h - o, a = h - a;
                        }
                        break;
                }
                let l = this._Seed, c = this._DomainWarpAmp * this._FractalBounding, u = this._Frequency;
                for(let f = 0; f < this._Octaves; f++)this._DoSingleDomainWarp(l, c, u, i, s, o, a), l++, c *= this._Gain, u *= this._Lacunarity;
            };
            if (e instanceof Vg) return n(e);
            if (e instanceof Wg) return r(e);
        }
        _SingleDomainWarpBasicGrid(e, n, r, i, s, o, a) {
            const l = (u, f, h, m, v, _)=>{
                const w = v * h, b = _ * h;
                let M = Math.floor(w), E = Math.floor(b);
                const T = Hc(w - M), P = Hc(b - E);
                M = Math.imul(M, $t), E = Math.imul(E, Gt);
                const A = M + $t, O = E + Gt;
                let D = Bs(u, M, E) & 510, R = Bs(u, A, E) & 510;
                const N = an(gr[D], gr[R], T), k = an(gr[D | 1], gr[R | 1], T);
                D = Bs(u, M, O) & 510, R = Bs(u, A, O) & 510;
                const U = an(gr[D], gr[R], T), B = an(gr[D | 1], gr[R | 1], T);
                m.x += an(N, U, P) * f, m.y += an(k, B, P) * f;
            }, c = (u, f, h, m, v, _, w)=>{
                const b = v * h, M = _ * h, E = w * h;
                let T = Math.floor(b), P = Math.floor(M), A = Math.floor(E);
                const O = Hc(b - T), D = Hc(M - P), R = Hc(E - A);
                T = Math.imul(T, $t), P = Math.imul(P, Gt), A = Math.imul(A, er);
                const N = T + $t, k = P + Gt, U = A + er;
                let B = Us(u, T, P, A) & 1020, j = Us(u, N, P, A) & 1020, K = an(Sn[B], Sn[j], O), q = an(Sn[B | 1], Sn[j | 1], O), ee = an(Sn[B | 2], Sn[j | 2], O);
                B = Us(u, T, k, A) & 1020, j = Us(u, N, k, A) & 1020;
                let W = an(Sn[B], Sn[j], O), Z = an(Sn[B | 1], Sn[j | 1], O), $ = an(Sn[B | 2], Sn[j | 2], O);
                const H = an(K, W, D), se = an(q, Z, D), le = an(ee, $, D);
                B = Us(u, T, P, U) & 1020, j = Us(u, N, P, U) & 1020, K = an(Sn[B], Sn[j], O), q = an(Sn[B | 1], Sn[j | 1], O), ee = an(Sn[B | 2], Sn[j | 2], O), B = Us(u, T, k, U) & 1020, j = Us(u, N, k, U) & 1020, W = an(Sn[B], Sn[j], O), Z = an(Sn[B | 1], Sn[j | 1], O), $ = an(Sn[B | 2], Sn[j | 2], O), m.x += an(H, an(K, W, D), R) * f, m.y += an(se, an(q, Z, D), R) * f, m.z += an(le, an(ee, $, D), R) * f;
            };
            i instanceof Vg && l(e, n, r, i, s, o), i instanceof Wg && a !== void 0 && c(e, n, r, i, s, o, a);
        }
        _SingleDomainWarpOpenSimplex2Gradient(e, n, r, i, s, o, a, l) {
            const c = (f, h, m, v, _, w, b)=>{
                const E = (3 - 1.7320508075688772) / 6;
                w *= m, b *= m;
                let T = Math.floor(w), P = Math.floor(b);
                const A = w - T, O = b - P, D = (A + O) * E, R = A - D, N = O - D;
                T = Math.imul(T, $t), P = Math.imul(P, Gt);
                let k, U;
                k = U = 0;
                const B = .5 - R * R - N * N;
                if (B > 0) {
                    const K = B * B * (B * B);
                    let q, ee;
                    if (_) {
                        const W = Bs(f, T, P) & 510;
                        q = gr[W], ee = gr[W | 1];
                    } else {
                        const W = Bs(f, T, P), Z = W & 254, $ = W >> 7 & 510, H = Yc[Z], se = Yc[Z | 1], le = R * H + N * se, ne = gr[$], ue = gr[$ | 1];
                        q = le * ne, ee = le * ue;
                    }
                    k += K * q, U += K * ee;
                }
                const j = 2 * (1 - 2 * E) * (1 / E - 2) * D + (-2 * (1 - 2 * E) * (1 - 2 * E) + B);
                if (j > 0) {
                    const K = R + (2 * E - 1), q = N + (2 * E - 1), ee = j * j * (j * j);
                    let W, Z;
                    if (_) {
                        const $ = Bs(f, T + $t, P + Gt) & 510;
                        W = gr[$], Z = gr[$ | 1];
                    } else {
                        const $ = Bs(f, T + $t, P + Gt), H = $ & 254, se = $ >> 7 & 510, le = Yc[H], ne = Yc[H | 1], ue = K * le + q * ne, ge = gr[se], ye = gr[se | 1];
                        W = ue * ge, Z = ue * ye;
                    }
                    k += ee * W, U += ee * Z;
                }
                if (N > R) {
                    const K = R + E, q = N + (E - 1), ee = .5 - K * K - q * q;
                    if (ee > 0) {
                        const W = ee * ee * (ee * ee);
                        let Z, $;
                        if (_) {
                            const H = Bs(f, T, P + Gt) & 510;
                            Z = gr[H], $ = gr[H | 1];
                        } else {
                            const H = Bs(f, T, P + Gt), se = H & 254, le = H >> 7 & 510, ne = Yc[se], ue = Yc[se | 1], ge = K * ne + q * ue, ye = gr[le], _e = gr[le | 1];
                            Z = ge * ye, $ = ge * _e;
                        }
                        k += W * Z, U += W * $;
                    }
                } else {
                    const K = R + (E - 1), q = N + E, ee = .5 - K * K - q * q;
                    if (ee > 0) {
                        const W = ee * ee * (ee * ee);
                        let Z, $;
                        if (_) {
                            const H = Bs(f, T + $t, P) & 510;
                            Z = gr[H], $ = gr[H | 1];
                        } else {
                            const H = Bs(f, T + $t, P), se = H & 254, le = H >> 7 & 510, ne = Yc[se], ue = Yc[se | 1], ge = K * ne + q * ue, ye = gr[le], _e = gr[le | 1];
                            Z = ge * ye, $ = ge * _e;
                        }
                        k += W * Z, U += W * $;
                    }
                }
                v.x += k * h, v.y += U * h;
            }, u = (f, h, m, v, _, w, b, M)=>{
                w *= m, b *= m, M *= m;
                let E = Math.round(w), T = Math.round(b), P = Math.round(M), A = w - E, O = b - T, D = M - P, R = -A - 1 | 1, N = -O - 1 | 1, k = -D - 1 | 1, U = R * -A, B = N * -O, j = k * -D;
                E = Math.imul(E, $t), T = Math.imul(T, Gt), P = Math.imul(P, er);
                let K, q, ee;
                K = q = ee = 0;
                let W = .6 - A * A - (O * O + D * D);
                for(let Z = 0;; Z++){
                    if (W > 0) {
                        const ye = W * W * (W * W);
                        let _e, Te, Re;
                        if (_) {
                            const Fe = Us(f, E, T, P) & 1020;
                            _e = Sn[Fe], Te = Sn[Fe | 1], Re = Sn[Fe | 2];
                        } else {
                            const Fe = Us(f, E, T, P), be = Fe & 252, Me = Fe >> 6 & 1020, oe = pd[be], Ye = pd[be | 1], Be = pd[be | 2], nt = A * oe + O * Ye + D * Be, de = Sn[Me], ce = Sn[Me | 1], ae = Sn[Me | 2];
                            _e = nt * de, Te = nt * ce, Re = nt * ae;
                        }
                        K += ye * _e, q += ye * Te, ee += ye * Re;
                    }
                    let $ = W, H = E, se = T, le = P, ne = A, ue = O, ge = D;
                    if (U >= B && U >= j ? (ne += R, $ = $ + U + U, H -= R * $t) : B > U && B >= j ? (ue += N, $ = $ + B + B, se -= N * Gt) : (ge += k, $ = $ + j + j, le -= k * er), $ > 1) {
                        $ -= 1;
                        const ye = $ * $ * ($ * $);
                        let _e, Te, Re;
                        if (_) {
                            const Fe = Us(f, H, se, le) & 1020;
                            _e = Sn[Fe], Te = Sn[Fe | 1], Re = Sn[Fe | 2];
                        } else {
                            const Fe = Us(f, H, se, le), be = Fe & 252, Me = Fe >> 6 & 1020, oe = pd[be], Ye = pd[be | 1], Be = pd[be | 2], nt = ne * oe + ue * Ye + ge * Be, de = Sn[Me], ce = Sn[Me | 1], ae = Sn[Me | 2];
                            _e = nt * de, Te = nt * ce, Re = nt * ae;
                        }
                        K += ye * _e, q += ye * Te, ee += ye * Re;
                    }
                    if (Z === 1) break;
                    U = .5 - U, B = .5 - B, j = .5 - j, A = R * U, O = N * B, D = k * j, W += .75 - U - (B + j), E += R >> 1 & $t, T += N >> 1 & Gt, P += k >> 1 & er, R = -R, N = -N, k = -k, f += 1293373;
                }
                v.x += K * h, v.y += q * h, v.z += ee * h;
            };
            i instanceof Vg && c(e, n, r, i, s, o, a), i instanceof Wg && l !== void 0 && u(e, n, r, i, s, o, a, l);
        }
    }
    var GC, nL;
    function bU() {
        return nL || (nL = 1, GC = Object), GC;
    }
    var XC, rL;
    function rJ() {
        return rL || (rL = 1, XC = Error), XC;
    }
    var KC, iL;
    function iJ() {
        return iL || (iL = 1, KC = EvalError), KC;
    }
    var YC, sL;
    function sJ() {
        return sL || (sL = 1, YC = RangeError), YC;
    }
    var ZC, oL;
    function oJ() {
        return oL || (oL = 1, ZC = ReferenceError), ZC;
    }
    var JC, aL;
    function aJ() {
        return aL || (aL = 1, JC = SyntaxError), JC;
    }
    var QC, lL;
    function wU() {
        return lL || (lL = 1, QC = TypeError), QC;
    }
    var eR, cL;
    function lJ() {
        return cL || (cL = 1, eR = URIError), eR;
    }
    var tR, uL;
    function cJ() {
        return uL || (uL = 1, tR = Math.abs), tR;
    }
    var nR, dL;
    function uJ() {
        return dL || (dL = 1, nR = Math.floor), nR;
    }
    var rR, fL;
    function dJ() {
        return fL || (fL = 1, rR = Math.max), rR;
    }
    var iR, hL;
    function fJ() {
        return hL || (hL = 1, iR = Math.min), iR;
    }
    var sR, pL;
    function hJ() {
        return pL || (pL = 1, sR = Math.pow), sR;
    }
    var oR, mL;
    function pJ() {
        return mL || (mL = 1, oR = Math.round), oR;
    }
    var aR, gL;
    function mJ() {
        return gL || (gL = 1, aR = Number.isNaN || function(e) {
            return e !== e;
        }), aR;
    }
    var lR, yL;
    function gJ() {
        if (yL) return lR;
        yL = 1;
        var t = mJ();
        return lR = function(n) {
            return t(n) || n === 0 ? n : n < 0 ? -1 : 1;
        }, lR;
    }
    var cR, vL;
    function yJ() {
        return vL || (vL = 1, cR = Object.getOwnPropertyDescriptor), cR;
    }
    var uR, xL;
    function _U() {
        if (xL) return uR;
        xL = 1;
        var t = yJ();
        if (t) try {
            t([], "length");
        } catch  {
            t = null;
        }
        return uR = t, uR;
    }
    var dR, bL;
    function vJ() {
        if (bL) return dR;
        bL = 1;
        var t = Object.defineProperty || !1;
        if (t) try {
            t({}, "a", {
                value: 1
            });
        } catch  {
            t = !1;
        }
        return dR = t, dR;
    }
    var fR, wL;
    function SU() {
        return wL || (wL = 1, fR = function() {
            if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return !1;
            if (typeof Symbol.iterator == "symbol") return !0;
            var e = {}, n = Symbol("test"), r = Object(n);
            if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]") return !1;
            var i = 42;
            e[n] = i;
            for(var s in e)return !1;
            if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0) return !1;
            var o = Object.getOwnPropertySymbols(e);
            if (o.length !== 1 || o[0] !== n || !Object.prototype.propertyIsEnumerable.call(e, n)) return !1;
            if (typeof Object.getOwnPropertyDescriptor == "function") {
                var a = Object.getOwnPropertyDescriptor(e, n);
                if (a.value !== i || a.enumerable !== !0) return !1;
            }
            return !0;
        }), fR;
    }
    var hR, _L;
    function xJ() {
        if (_L) return hR;
        _L = 1;
        var t = typeof Symbol < "u" && Symbol, e = SU();
        return hR = function() {
            return typeof t != "function" || typeof Symbol != "function" || typeof t("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : e();
        }, hR;
    }
    var pR, SL;
    function EU() {
        return SL || (SL = 1, pR = typeof Reflect < "u" && Reflect.getPrototypeOf || null), pR;
    }
    var mR, EL;
    function MU() {
        if (EL) return mR;
        EL = 1;
        var t = bU();
        return mR = t.getPrototypeOf || null, mR;
    }
    var gR, ML;
    function bJ() {
        if (ML) return gR;
        ML = 1;
        var t = "Function.prototype.bind called on incompatible ", e = Object.prototype.toString, n = Math.max, r = "[object Function]", i = function(l, c) {
            for(var u = [], f = 0; f < l.length; f += 1)u[f] = l[f];
            for(var h = 0; h < c.length; h += 1)u[h + l.length] = c[h];
            return u;
        }, s = function(l, c) {
            for(var u = [], f = c, h = 0; f < l.length; f += 1, h += 1)u[h] = l[f];
            return u;
        }, o = function(a, l) {
            for(var c = "", u = 0; u < a.length; u += 1)c += a[u], u + 1 < a.length && (c += l);
            return c;
        };
        return gR = function(l) {
            var c = this;
            if (typeof c != "function" || e.apply(c) !== r) throw new TypeError(t + c);
            for(var u = s(arguments, 1), f, h = function() {
                if (this instanceof f) {
                    var b = c.apply(this, i(u, arguments));
                    return Object(b) === b ? b : this;
                }
                return c.apply(l, i(u, arguments));
            }, m = n(0, c.length - u.length), v = [], _ = 0; _ < m; _++)v[_] = "$" + _;
            if (f = Function("binder", "return function (" + o(v, ",") + "){ return binder.apply(this,arguments); }")(h), c.prototype) {
                var w = function() {};
                w.prototype = c.prototype, f.prototype = new w, w.prototype = null;
            }
            return f;
        }, gR;
    }
    var yR, TL;
    function TT() {
        if (TL) return yR;
        TL = 1;
        var t = bJ();
        return yR = Function.prototype.bind || t, yR;
    }
    var vR, CL;
    function xP() {
        return CL || (CL = 1, vR = Function.prototype.call), vR;
    }
    var xR, RL;
    function TU() {
        return RL || (RL = 1, xR = Function.prototype.apply), xR;
    }
    var bR, IL;
    function wJ() {
        return IL || (IL = 1, bR = typeof Reflect < "u" && Reflect && Reflect.apply), bR;
    }
    var wR, AL;
    function _J() {
        if (AL) return wR;
        AL = 1;
        var t = TT(), e = TU(), n = xP(), r = wJ();
        return wR = r || t.call(n, e), wR;
    }
    var _R, NL;
    function CU() {
        if (NL) return _R;
        NL = 1;
        var t = TT(), e = wU(), n = xP(), r = _J();
        return _R = function(s) {
            if (s.length < 1 || typeof s[0] != "function") throw new e("a function is required");
            return r(t, n, s);
        }, _R;
    }
    var SR, PL;
    function SJ() {
        if (PL) return SR;
        PL = 1;
        var t = CU(), e = _U(), n;
        try {
            n = [].__proto__ === Array.prototype;
        } catch (o) {
            if (!o || typeof o != "object" || !("code" in o) || o.code !== "ERR_PROTO_ACCESS") throw o;
        }
        var r = !!n && e && e(Object.prototype, "__proto__"), i = Object, s = i.getPrototypeOf;
        return SR = r && typeof r.get == "function" ? t([
            r.get
        ]) : typeof s == "function" ? function(a) {
            return s(a == null ? a : i(a));
        } : !1, SR;
    }
    var ER, kL;
    function EJ() {
        if (kL) return ER;
        kL = 1;
        var t = EU(), e = MU(), n = SJ();
        return ER = t ? function(i) {
            return t(i);
        } : e ? function(i) {
            if (!i || typeof i != "object" && typeof i != "function") throw new TypeError("getProto: not an object");
            return e(i);
        } : n ? function(i) {
            return n(i);
        } : null, ER;
    }
    var MR, OL;
    function MJ() {
        if (OL) return MR;
        OL = 1;
        var t = Function.prototype.call, e = Object.prototype.hasOwnProperty, n = TT();
        return MR = n.call(t, e), MR;
    }
    var TR, DL;
    function TJ() {
        if (DL) return TR;
        DL = 1;
        var t, e = bU(), n = rJ(), r = iJ(), i = sJ(), s = oJ(), o = aJ(), a = wU(), l = lJ(), c = cJ(), u = uJ(), f = dJ(), h = fJ(), m = hJ(), v = pJ(), _ = gJ(), w = Function, b = function(Te) {
            try {
                return w('"use strict"; return (' + Te + ").constructor;")();
            } catch  {}
        }, M = _U(), E = vJ(), T = function() {
            throw new a;
        }, P = M ? function() {
            try {
                return arguments.callee, T;
            } catch  {
                try {
                    return M(arguments, "callee").get;
                } catch  {
                    return T;
                }
            }
        }() : T, A = xJ()(), O = EJ(), D = MU(), R = EU(), N = TU(), k = xP(), U = {}, B = typeof Uint8Array > "u" || !O ? t : O(Uint8Array), j = {
            __proto__: null,
            "%AggregateError%": typeof AggregateError > "u" ? t : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%": typeof ArrayBuffer > "u" ? t : ArrayBuffer,
            "%ArrayIteratorPrototype%": A && O ? O([][Symbol.iterator]()) : t,
            "%AsyncFromSyncIteratorPrototype%": t,
            "%AsyncFunction%": U,
            "%AsyncGenerator%": U,
            "%AsyncGeneratorFunction%": U,
            "%AsyncIteratorPrototype%": U,
            "%Atomics%": typeof Atomics > "u" ? t : Atomics,
            "%BigInt%": typeof BigInt > "u" ? t : BigInt,
            "%BigInt64Array%": typeof BigInt64Array > "u" ? t : BigInt64Array,
            "%BigUint64Array%": typeof BigUint64Array > "u" ? t : BigUint64Array,
            "%Boolean%": Boolean,
            "%DataView%": typeof DataView > "u" ? t : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": n,
            "%eval%": eval,
            "%EvalError%": r,
            "%Float32Array%": typeof Float32Array > "u" ? t : Float32Array,
            "%Float64Array%": typeof Float64Array > "u" ? t : Float64Array,
            "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? t : FinalizationRegistry,
            "%Function%": w,
            "%GeneratorFunction%": U,
            "%Int8Array%": typeof Int8Array > "u" ? t : Int8Array,
            "%Int16Array%": typeof Int16Array > "u" ? t : Int16Array,
            "%Int32Array%": typeof Int32Array > "u" ? t : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": A && O ? O(O([][Symbol.iterator]())) : t,
            "%JSON%": typeof JSON == "object" ? JSON : t,
            "%Map%": typeof Map > "u" ? t : Map,
            "%MapIteratorPrototype%": typeof Map > "u" || !A || !O ? t : O(new Map()[Symbol.iterator]()),
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": e,
            "%Object.getOwnPropertyDescriptor%": M,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": typeof Promise > "u" ? t : Promise,
            "%Proxy%": typeof Proxy > "u" ? t : Proxy,
            "%RangeError%": i,
            "%ReferenceError%": s,
            "%Reflect%": typeof Reflect > "u" ? t : Reflect,
            "%RegExp%": RegExp,
            "%Set%": typeof Set > "u" ? t : Set,
            "%SetIteratorPrototype%": typeof Set > "u" || !A || !O ? t : O(new Set()[Symbol.iterator]()),
            "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? t : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": A && O ? O(""[Symbol.iterator]()) : t,
            "%Symbol%": A ? Symbol : t,
            "%SyntaxError%": o,
            "%ThrowTypeError%": P,
            "%TypedArray%": B,
            "%TypeError%": a,
            "%Uint8Array%": typeof Uint8Array > "u" ? t : Uint8Array,
            "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? t : Uint8ClampedArray,
            "%Uint16Array%": typeof Uint16Array > "u" ? t : Uint16Array,
            "%Uint32Array%": typeof Uint32Array > "u" ? t : Uint32Array,
            "%URIError%": l,
            "%WeakMap%": typeof WeakMap > "u" ? t : WeakMap,
            "%WeakRef%": typeof WeakRef > "u" ? t : WeakRef,
            "%WeakSet%": typeof WeakSet > "u" ? t : WeakSet,
            "%Function.prototype.call%": k,
            "%Function.prototype.apply%": N,
            "%Object.defineProperty%": E,
            "%Object.getPrototypeOf%": D,
            "%Math.abs%": c,
            "%Math.floor%": u,
            "%Math.max%": f,
            "%Math.min%": h,
            "%Math.pow%": m,
            "%Math.round%": v,
            "%Math.sign%": _,
            "%Reflect.getPrototypeOf%": R
        };
        if (O) try {
            null.error;
        } catch (Te) {
            var K = O(O(Te));
            j["%Error.prototype%"] = K;
        }
        var q = function Te(Re) {
            var Fe;
            if (Re === "%AsyncFunction%") Fe = b("async function () {}");
            else if (Re === "%GeneratorFunction%") Fe = b("function* () {}");
            else if (Re === "%AsyncGeneratorFunction%") Fe = b("async function* () {}");
            else if (Re === "%AsyncGenerator%") {
                var be = Te("%AsyncGeneratorFunction%");
                be && (Fe = be.prototype);
            } else if (Re === "%AsyncIteratorPrototype%") {
                var Me = Te("%AsyncGenerator%");
                Me && O && (Fe = O(Me.prototype));
            }
            return j[Re] = Fe, Fe;
        }, ee = {
            __proto__: null,
            "%ArrayBufferPrototype%": [
                "ArrayBuffer",
                "prototype"
            ],
            "%ArrayPrototype%": [
                "Array",
                "prototype"
            ],
            "%ArrayProto_entries%": [
                "Array",
                "prototype",
                "entries"
            ],
            "%ArrayProto_forEach%": [
                "Array",
                "prototype",
                "forEach"
            ],
            "%ArrayProto_keys%": [
                "Array",
                "prototype",
                "keys"
            ],
            "%ArrayProto_values%": [
                "Array",
                "prototype",
                "values"
            ],
            "%AsyncFunctionPrototype%": [
                "AsyncFunction",
                "prototype"
            ],
            "%AsyncGenerator%": [
                "AsyncGeneratorFunction",
                "prototype"
            ],
            "%AsyncGeneratorPrototype%": [
                "AsyncGeneratorFunction",
                "prototype",
                "prototype"
            ],
            "%BooleanPrototype%": [
                "Boolean",
                "prototype"
            ],
            "%DataViewPrototype%": [
                "DataView",
                "prototype"
            ],
            "%DatePrototype%": [
                "Date",
                "prototype"
            ],
            "%ErrorPrototype%": [
                "Error",
                "prototype"
            ],
            "%EvalErrorPrototype%": [
                "EvalError",
                "prototype"
            ],
            "%Float32ArrayPrototype%": [
                "Float32Array",
                "prototype"
            ],
            "%Float64ArrayPrototype%": [
                "Float64Array",
                "prototype"
            ],
            "%FunctionPrototype%": [
                "Function",
                "prototype"
            ],
            "%Generator%": [
                "GeneratorFunction",
                "prototype"
            ],
            "%GeneratorPrototype%": [
                "GeneratorFunction",
                "prototype",
                "prototype"
            ],
            "%Int8ArrayPrototype%": [
                "Int8Array",
                "prototype"
            ],
            "%Int16ArrayPrototype%": [
                "Int16Array",
                "prototype"
            ],
            "%Int32ArrayPrototype%": [
                "Int32Array",
                "prototype"
            ],
            "%JSONParse%": [
                "JSON",
                "parse"
            ],
            "%JSONStringify%": [
                "JSON",
                "stringify"
            ],
            "%MapPrototype%": [
                "Map",
                "prototype"
            ],
            "%NumberPrototype%": [
                "Number",
                "prototype"
            ],
            "%ObjectPrototype%": [
                "Object",
                "prototype"
            ],
            "%ObjProto_toString%": [
                "Object",
                "prototype",
                "toString"
            ],
            "%ObjProto_valueOf%": [
                "Object",
                "prototype",
                "valueOf"
            ],
            "%PromisePrototype%": [
                "Promise",
                "prototype"
            ],
            "%PromiseProto_then%": [
                "Promise",
                "prototype",
                "then"
            ],
            "%Promise_all%": [
                "Promise",
                "all"
            ],
            "%Promise_reject%": [
                "Promise",
                "reject"
            ],
            "%Promise_resolve%": [
                "Promise",
                "resolve"
            ],
            "%RangeErrorPrototype%": [
                "RangeError",
                "prototype"
            ],
            "%ReferenceErrorPrototype%": [
                "ReferenceError",
                "prototype"
            ],
            "%RegExpPrototype%": [
                "RegExp",
                "prototype"
            ],
            "%SetPrototype%": [
                "Set",
                "prototype"
            ],
            "%SharedArrayBufferPrototype%": [
                "SharedArrayBuffer",
                "prototype"
            ],
            "%StringPrototype%": [
                "String",
                "prototype"
            ],
            "%SymbolPrototype%": [
                "Symbol",
                "prototype"
            ],
            "%SyntaxErrorPrototype%": [
                "SyntaxError",
                "prototype"
            ],
            "%TypedArrayPrototype%": [
                "TypedArray",
                "prototype"
            ],
            "%TypeErrorPrototype%": [
                "TypeError",
                "prototype"
            ],
            "%Uint8ArrayPrototype%": [
                "Uint8Array",
                "prototype"
            ],
            "%Uint8ClampedArrayPrototype%": [
                "Uint8ClampedArray",
                "prototype"
            ],
            "%Uint16ArrayPrototype%": [
                "Uint16Array",
                "prototype"
            ],
            "%Uint32ArrayPrototype%": [
                "Uint32Array",
                "prototype"
            ],
            "%URIErrorPrototype%": [
                "URIError",
                "prototype"
            ],
            "%WeakMapPrototype%": [
                "WeakMap",
                "prototype"
            ],
            "%WeakSetPrototype%": [
                "WeakSet",
                "prototype"
            ]
        }, W = TT(), Z = MJ(), $ = W.call(k, Array.prototype.concat), H = W.call(N, Array.prototype.splice), se = W.call(k, String.prototype.replace), le = W.call(k, String.prototype.slice), ne = W.call(k, RegExp.prototype.exec), ue = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, ge = /\\(\\)?/g, ye = function(Re) {
            var Fe = le(Re, 0, 1), be = le(Re, -1);
            if (Fe === "%" && be !== "%") throw new o("invalid intrinsic syntax, expected closing `%`");
            if (be === "%" && Fe !== "%") throw new o("invalid intrinsic syntax, expected opening `%`");
            var Me = [];
            return se(Re, ue, function(oe, Ye, Be, nt) {
                Me[Me.length] = Be ? se(nt, ge, "$1") : Ye || oe;
            }), Me;
        }, _e = function(Re, Fe) {
            var be = Re, Me;
            if (Z(ee, be) && (Me = ee[be], be = "%" + Me[0] + "%"), Z(j, be)) {
                var oe = j[be];
                if (oe === U && (oe = q(be)), typeof oe > "u" && !Fe) throw new a("intrinsic " + Re + " exists, but is not available. Please file an issue!");
                return {
                    alias: Me,
                    name: be,
                    value: oe
                };
            }
            throw new o("intrinsic " + Re + " does not exist!");
        };
        return TR = function(Re, Fe) {
            if (typeof Re != "string" || Re.length === 0) throw new a("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && typeof Fe != "boolean") throw new a('"allowMissing" argument must be a boolean');
            if (ne(/^%?[^%]*%?$/, Re) === null) throw new o("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
            var be = ye(Re), Me = be.length > 0 ? be[0] : "", oe = _e("%" + Me + "%", Fe), Ye = oe.name, Be = oe.value, nt = !1, de = oe.alias;
            de && (Me = de[0], H(be, $([
                0,
                1
            ], de)));
            for(var ce = 1, ae = !0; ce < be.length; ce += 1){
                var X = be[ce], G = le(X, 0, 1), he = le(X, -1);
                if ((G === '"' || G === "'" || G === "`" || he === '"' || he === "'" || he === "`") && G !== he) throw new o("property names with quotes must have matching quotes");
                if ((X === "constructor" || !ae) && (nt = !0), Me += "." + X, Ye = "%" + Me + "%", Z(j, Ye)) Be = j[Ye];
                else if (Be != null) {
                    if (!(X in Be)) {
                        if (!Fe) throw new a("base intrinsic for " + Re + " exists, but the property is not available.");
                        return;
                    }
                    if (M && ce + 1 >= be.length) {
                        var pe = M(Be, X);
                        ae = !!pe, ae && "get" in pe && !("originalValue" in pe.get) ? Be = pe.get : Be = Be[X];
                    } else ae = Z(Be, X), Be = Be[X];
                    ae && !nt && (j[Ye] = Be);
                }
            }
            return Be;
        }, TR;
    }
    var CR, LL;
    function CJ() {
        if (LL) return CR;
        LL = 1;
        var t = TJ(), e = CU(), n = e([
            t("%String.prototype.indexOf%")
        ]);
        return CR = function(i, s) {
            var o = t(i, !!s);
            return typeof o == "function" && n(i, ".prototype.") > -1 ? e([
                o
            ]) : o;
        }, CR;
    }
    var RR, FL;
    function RJ() {
        if (FL) return RR;
        FL = 1;
        var t = SU();
        return RR = function() {
            return t() && !!Symbol.toStringTag;
        }, RR;
    }
    var IR, jL;
    function IJ() {
        if (jL) return IR;
        jL = 1;
        var t = CJ(), e = t("String.prototype.valueOf"), n = function(a) {
            try {
                return e(a), !0;
            } catch  {
                return !1;
            }
        }, r = t("Object.prototype.toString"), i = "[object String]", s = RJ()();
        return IR = function(a) {
            return typeof a == "string" ? !0 : !a || typeof a != "object" ? !1 : s ? n(a) : r(a) === i;
        }, IR;
    }
    var AJ = IJ();
    const NJ = Go(AJ), mw = (t)=>NJ(t), PJ = (t, e, n = {})=>{
        const r = [];
        return t.filter((s, o)=>{
            const a = n.regionLowerCase ? s.toLowerCase() : s;
            if (e.includes(a)) return r.push({
                index: o,
                appLocale: a
            }), !0;
            const { isAvailable: l, appLocale: c } = kJ(a, e, n);
            return l && r.push({
                index: o,
                appLocale: n.regionLowerCase ? c.toLowerCase() : c
            }), l;
        }).map((s, o)=>!r || r.length === 0 ? s : r[o]?.appLocale);
    }, kJ = (t, e, n = {})=>{
        n?.languageOnly || (n.languageOnly = !1);
        let r = t;
        return {
            isAvailable: e.some((s)=>{
                if (!RS() && !n.languageOnly && t.split("-")[1] === void 0) return !1;
                const o = RS() ? new Intl.Locale(t).minimize().language : t.split("-")[0], a = RS() ? new Intl.Locale(s).minimize().language : s.split("-")[0], l = o === a;
                return l && (r = s), l;
            }),
            appLocale: r
        };
    }, OJ = (t = {})=>{
        t?.regionLowerCase || (t.regionLowerCase = !1);
        let e = [];
        return Intl && "DateTimeFormat" in Intl ? e = [
            Intl.DateTimeFormat().resolvedOptions().locale
        ] : typeof window == "object" && window?.navigator?.languages && (e = [
            ...window.navigator.languages
        ]), e.map((n)=>t.regionLowerCase ? n.toLowerCase() : n);
    }, RS = ()=>Intl && "Locale" in Intl, DJ = (t, e = {})=>{
        e?.regionLowerCase || (e.regionLowerCase = !1), e?.languageOnly || (e.languageOnly = !1);
        const n = t.map((r)=>{
            const i = r.split("-");
            if (e.languageOnly) return i[0];
            const s = RS() ? new Intl.Locale(r).maximize() : {
                language: i[0],
                script: i.length === 3 ? i[1] : void 0,
                region: i.length === 3 ? i[2] : i[1]
            }, { language: o, script: a } = s;
            let { region: l } = s;
            return e.regionLowerCase && l && (l = l.toLowerCase()), i.length > 2 ? `${o}-${a}-${l}` : l ? `${o}-${l}` : o;
        });
        return [
            ...new Set(n)
        ];
    }, LJ = (t, e, n = {})=>{
        n.regionLowerCase || (n.regionLowerCase = !1), n.languageOnly || (n.languageOnly = !1);
        const r = OJ(n), i = DJ([
            ...r,
            t
        ], n);
        return PJ(i, e, n)[0] || t;
    }, FJ = ({ available: t, fallback: e })=>LJ(e, t, {
            languageOnly: !0
        });
    var AR = {
        exports: {}
    };
    const jJ = {}, BJ = Object.freeze(Object.defineProperty({
        __proto__: null,
        default: jJ
    }, Symbol.toStringTag, {
        value: "Module"
    })), Vf = K$(BJ);
    var BL;
    function UJ() {
        return BL || (BL = 1, function(t) {
            (function() {
                var e = "input is invalid type", n = typeof window == "object", r = n ? window : {};
                r.JS_SHA256_NO_WINDOW && (n = !1);
                var i = !n && typeof self == "object", s = !r.JS_SHA256_NO_NODE_JS && typeof process == "object" && process.versions && process.versions.node;
                s ? r = Gp : i && (r = self);
                var o = !r.JS_SHA256_NO_COMMON_JS && !0 && t.exports, a = !r.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", l = "0123456789abcdef".split(""), c = [
                    -2147483648,
                    8388608,
                    32768,
                    128
                ], u = [
                    24,
                    16,
                    8,
                    0
                ], f = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ], h = [
                    "hex",
                    "array",
                    "digest",
                    "arrayBuffer"
                ], m = [];
                (r.JS_SHA256_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(A) {
                    return Object.prototype.toString.call(A) === "[object Array]";
                }), a && (r.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(A) {
                    return typeof A == "object" && A.buffer && A.buffer.constructor === ArrayBuffer;
                });
                var v = function(A, O) {
                    return function(D) {
                        return new E(O, !0).update(D)[A]();
                    };
                }, _ = function(A) {
                    var O = v("hex", A);
                    s && (O = w(O, A)), O.create = function() {
                        return new E(A);
                    }, O.update = function(N) {
                        return O.create().update(N);
                    };
                    for(var D = 0; D < h.length; ++D){
                        var R = h[D];
                        O[R] = v(R, A);
                    }
                    return O;
                }, w = function(A, O) {
                    var D = Vf, R = Vf.Buffer, N = O ? "sha224" : "sha256", k;
                    R.from && !r.JS_SHA256_NO_BUFFER_FROM ? k = R.from : k = function(B) {
                        return new R(B);
                    };
                    var U = function(B) {
                        if (typeof B == "string") return D.createHash(N).update(B, "utf8").digest("hex");
                        if (B == null) throw new Error(e);
                        return B.constructor === ArrayBuffer && (B = new Uint8Array(B)), Array.isArray(B) || ArrayBuffer.isView(B) || B.constructor === R ? D.createHash(N).update(k(B)).digest("hex") : A(B);
                    };
                    return U;
                }, b = function(A, O) {
                    return function(D, R) {
                        return new T(D, O, !0).update(R)[A]();
                    };
                }, M = function(A) {
                    var O = b("hex", A);
                    O.create = function(N) {
                        return new T(N, A);
                    }, O.update = function(N, k) {
                        return O.create(N).update(k);
                    };
                    for(var D = 0; D < h.length; ++D){
                        var R = h[D];
                        O[R] = b(R, A);
                    }
                    return O;
                };
                function E(A, O) {
                    O ? (m[0] = m[16] = m[1] = m[2] = m[3] = m[4] = m[5] = m[6] = m[7] = m[8] = m[9] = m[10] = m[11] = m[12] = m[13] = m[14] = m[15] = 0, this.blocks = m) : this.blocks = [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ], A ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = A;
                }
                E.prototype.update = function(A) {
                    if (!this.finalized) {
                        var O, D = typeof A;
                        if (D !== "string") {
                            if (D === "object") {
                                if (A === null) throw new Error(e);
                                if (a && A.constructor === ArrayBuffer) A = new Uint8Array(A);
                                else if (!Array.isArray(A) && (!a || !ArrayBuffer.isView(A))) throw new Error(e);
                            } else throw new Error(e);
                            O = !0;
                        }
                        for(var R, N = 0, k, U = A.length, B = this.blocks; N < U;){
                            if (this.hashed && (this.hashed = !1, B[0] = this.block, this.block = B[16] = B[1] = B[2] = B[3] = B[4] = B[5] = B[6] = B[7] = B[8] = B[9] = B[10] = B[11] = B[12] = B[13] = B[14] = B[15] = 0), O) for(k = this.start; N < U && k < 64; ++N)B[k >>> 2] |= A[N] << u[k++ & 3];
                            else for(k = this.start; N < U && k < 64; ++N)R = A.charCodeAt(N), R < 128 ? B[k >>> 2] |= R << u[k++ & 3] : R < 2048 ? (B[k >>> 2] |= (192 | R >>> 6) << u[k++ & 3], B[k >>> 2] |= (128 | R & 63) << u[k++ & 3]) : R < 55296 || R >= 57344 ? (B[k >>> 2] |= (224 | R >>> 12) << u[k++ & 3], B[k >>> 2] |= (128 | R >>> 6 & 63) << u[k++ & 3], B[k >>> 2] |= (128 | R & 63) << u[k++ & 3]) : (R = 65536 + ((R & 1023) << 10 | A.charCodeAt(++N) & 1023), B[k >>> 2] |= (240 | R >>> 18) << u[k++ & 3], B[k >>> 2] |= (128 | R >>> 12 & 63) << u[k++ & 3], B[k >>> 2] |= (128 | R >>> 6 & 63) << u[k++ & 3], B[k >>> 2] |= (128 | R & 63) << u[k++ & 3]);
                            this.lastByteIndex = k, this.bytes += k - this.start, k >= 64 ? (this.block = B[16], this.start = k - 64, this.hash(), this.hashed = !0) : this.start = k;
                        }
                        return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;
                    }
                }, E.prototype.finalize = function() {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var A = this.blocks, O = this.lastByteIndex;
                        A[16] = this.block, A[O >>> 2] |= c[O & 3], this.block = A[16], O >= 56 && (this.hashed || this.hash(), A[0] = this.block, A[16] = A[1] = A[2] = A[3] = A[4] = A[5] = A[6] = A[7] = A[8] = A[9] = A[10] = A[11] = A[12] = A[13] = A[14] = A[15] = 0), A[14] = this.hBytes << 3 | this.bytes >>> 29, A[15] = this.bytes << 3, this.hash();
                    }
                }, E.prototype.hash = function() {
                    var A = this.h0, O = this.h1, D = this.h2, R = this.h3, N = this.h4, k = this.h5, U = this.h6, B = this.h7, j = this.blocks, K, q, ee, W, Z, $, H, se, le, ne, ue;
                    for(K = 16; K < 64; ++K)Z = j[K - 15], q = (Z >>> 7 | Z << 25) ^ (Z >>> 18 | Z << 14) ^ Z >>> 3, Z = j[K - 2], ee = (Z >>> 17 | Z << 15) ^ (Z >>> 19 | Z << 13) ^ Z >>> 10, j[K] = j[K - 16] + q + j[K - 7] + ee << 0;
                    for(ue = O & D, K = 0; K < 64; K += 4)this.first ? (this.is224 ? (se = 300032, Z = j[0] - 1413257819, B = Z - 150054599 << 0, R = Z + 24177077 << 0) : (se = 704751109, Z = j[0] - 210244248, B = Z - 1521486534 << 0, R = Z + 143694565 << 0), this.first = !1) : (q = (A >>> 2 | A << 30) ^ (A >>> 13 | A << 19) ^ (A >>> 22 | A << 10), ee = (N >>> 6 | N << 26) ^ (N >>> 11 | N << 21) ^ (N >>> 25 | N << 7), se = A & O, W = se ^ A & D ^ ue, H = N & k ^ ~N & U, Z = B + ee + H + f[K] + j[K], $ = q + W, B = R + Z << 0, R = Z + $ << 0), q = (R >>> 2 | R << 30) ^ (R >>> 13 | R << 19) ^ (R >>> 22 | R << 10), ee = (B >>> 6 | B << 26) ^ (B >>> 11 | B << 21) ^ (B >>> 25 | B << 7), le = R & A, W = le ^ R & O ^ se, H = B & N ^ ~B & k, Z = U + ee + H + f[K + 1] + j[K + 1], $ = q + W, U = D + Z << 0, D = Z + $ << 0, q = (D >>> 2 | D << 30) ^ (D >>> 13 | D << 19) ^ (D >>> 22 | D << 10), ee = (U >>> 6 | U << 26) ^ (U >>> 11 | U << 21) ^ (U >>> 25 | U << 7), ne = D & R, W = ne ^ D & A ^ le, H = U & B ^ ~U & N, Z = k + ee + H + f[K + 2] + j[K + 2], $ = q + W, k = O + Z << 0, O = Z + $ << 0, q = (O >>> 2 | O << 30) ^ (O >>> 13 | O << 19) ^ (O >>> 22 | O << 10), ee = (k >>> 6 | k << 26) ^ (k >>> 11 | k << 21) ^ (k >>> 25 | k << 7), ue = O & D, W = ue ^ O & R ^ ne, H = k & U ^ ~k & B, Z = N + ee + H + f[K + 3] + j[K + 3], $ = q + W, N = A + Z << 0, A = Z + $ << 0, this.chromeBugWorkAround = !0;
                    this.h0 = this.h0 + A << 0, this.h1 = this.h1 + O << 0, this.h2 = this.h2 + D << 0, this.h3 = this.h3 + R << 0, this.h4 = this.h4 + N << 0, this.h5 = this.h5 + k << 0, this.h6 = this.h6 + U << 0, this.h7 = this.h7 + B << 0;
                }, E.prototype.hex = function() {
                    this.finalize();
                    var A = this.h0, O = this.h1, D = this.h2, R = this.h3, N = this.h4, k = this.h5, U = this.h6, B = this.h7, j = l[A >>> 28 & 15] + l[A >>> 24 & 15] + l[A >>> 20 & 15] + l[A >>> 16 & 15] + l[A >>> 12 & 15] + l[A >>> 8 & 15] + l[A >>> 4 & 15] + l[A & 15] + l[O >>> 28 & 15] + l[O >>> 24 & 15] + l[O >>> 20 & 15] + l[O >>> 16 & 15] + l[O >>> 12 & 15] + l[O >>> 8 & 15] + l[O >>> 4 & 15] + l[O & 15] + l[D >>> 28 & 15] + l[D >>> 24 & 15] + l[D >>> 20 & 15] + l[D >>> 16 & 15] + l[D >>> 12 & 15] + l[D >>> 8 & 15] + l[D >>> 4 & 15] + l[D & 15] + l[R >>> 28 & 15] + l[R >>> 24 & 15] + l[R >>> 20 & 15] + l[R >>> 16 & 15] + l[R >>> 12 & 15] + l[R >>> 8 & 15] + l[R >>> 4 & 15] + l[R & 15] + l[N >>> 28 & 15] + l[N >>> 24 & 15] + l[N >>> 20 & 15] + l[N >>> 16 & 15] + l[N >>> 12 & 15] + l[N >>> 8 & 15] + l[N >>> 4 & 15] + l[N & 15] + l[k >>> 28 & 15] + l[k >>> 24 & 15] + l[k >>> 20 & 15] + l[k >>> 16 & 15] + l[k >>> 12 & 15] + l[k >>> 8 & 15] + l[k >>> 4 & 15] + l[k & 15] + l[U >>> 28 & 15] + l[U >>> 24 & 15] + l[U >>> 20 & 15] + l[U >>> 16 & 15] + l[U >>> 12 & 15] + l[U >>> 8 & 15] + l[U >>> 4 & 15] + l[U & 15];
                    return this.is224 || (j += l[B >>> 28 & 15] + l[B >>> 24 & 15] + l[B >>> 20 & 15] + l[B >>> 16 & 15] + l[B >>> 12 & 15] + l[B >>> 8 & 15] + l[B >>> 4 & 15] + l[B & 15]), j;
                }, E.prototype.toString = E.prototype.hex, E.prototype.digest = function() {
                    this.finalize();
                    var A = this.h0, O = this.h1, D = this.h2, R = this.h3, N = this.h4, k = this.h5, U = this.h6, B = this.h7, j = [
                        A >>> 24 & 255,
                        A >>> 16 & 255,
                        A >>> 8 & 255,
                        A & 255,
                        O >>> 24 & 255,
                        O >>> 16 & 255,
                        O >>> 8 & 255,
                        O & 255,
                        D >>> 24 & 255,
                        D >>> 16 & 255,
                        D >>> 8 & 255,
                        D & 255,
                        R >>> 24 & 255,
                        R >>> 16 & 255,
                        R >>> 8 & 255,
                        R & 255,
                        N >>> 24 & 255,
                        N >>> 16 & 255,
                        N >>> 8 & 255,
                        N & 255,
                        k >>> 24 & 255,
                        k >>> 16 & 255,
                        k >>> 8 & 255,
                        k & 255,
                        U >>> 24 & 255,
                        U >>> 16 & 255,
                        U >>> 8 & 255,
                        U & 255
                    ];
                    return this.is224 || j.push(B >>> 24 & 255, B >>> 16 & 255, B >>> 8 & 255, B & 255), j;
                }, E.prototype.array = E.prototype.digest, E.prototype.arrayBuffer = function() {
                    this.finalize();
                    var A = new ArrayBuffer(this.is224 ? 28 : 32), O = new DataView(A);
                    return O.setUint32(0, this.h0), O.setUint32(4, this.h1), O.setUint32(8, this.h2), O.setUint32(12, this.h3), O.setUint32(16, this.h4), O.setUint32(20, this.h5), O.setUint32(24, this.h6), this.is224 || O.setUint32(28, this.h7), A;
                };
                function T(A, O, D) {
                    var R, N = typeof A;
                    if (N === "string") {
                        var k = [], U = A.length, B = 0, j;
                        for(R = 0; R < U; ++R)j = A.charCodeAt(R), j < 128 ? k[B++] = j : j < 2048 ? (k[B++] = 192 | j >>> 6, k[B++] = 128 | j & 63) : j < 55296 || j >= 57344 ? (k[B++] = 224 | j >>> 12, k[B++] = 128 | j >>> 6 & 63, k[B++] = 128 | j & 63) : (j = 65536 + ((j & 1023) << 10 | A.charCodeAt(++R) & 1023), k[B++] = 240 | j >>> 18, k[B++] = 128 | j >>> 12 & 63, k[B++] = 128 | j >>> 6 & 63, k[B++] = 128 | j & 63);
                        A = k;
                    } else if (N === "object") {
                        if (A === null) throw new Error(e);
                        if (a && A.constructor === ArrayBuffer) A = new Uint8Array(A);
                        else if (!Array.isArray(A) && (!a || !ArrayBuffer.isView(A))) throw new Error(e);
                    } else throw new Error(e);
                    A.length > 64 && (A = new E(O, !0).update(A).array());
                    var K = [], q = [];
                    for(R = 0; R < 64; ++R){
                        var ee = A[R] || 0;
                        K[R] = 92 ^ ee, q[R] = 54 ^ ee;
                    }
                    E.call(this, O, D), this.update(q), this.oKeyPad = K, this.inner = !0, this.sharedMemory = D;
                }
                T.prototype = new E, T.prototype.finalize = function() {
                    if (E.prototype.finalize.call(this), this.inner) {
                        this.inner = !1;
                        var A = this.array();
                        E.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(A), E.prototype.finalize.call(this);
                    }
                };
                var P = _();
                P.sha256 = P, P.sha224 = _(!0), P.sha256.hmac = M(), P.sha224.hmac = M(!0), o ? t.exports = P : (r.sha256 = P.sha256, r.sha224 = P.sha224);
            })();
        }(AR)), AR.exports;
    }
    var zN = UJ();
    const zJ = zN.sha224, RU = ({ index: t, key: e, fallback: n })=>t[zJ(e)]?.value ?? t[e]?.value ?? n ?? e, VJ = ({ index: t, key: e, fallback: n })=>RU({
            index: t,
            key: e,
            fallback: n
        }), WJ = ({ index: t, key: e, fallback: n })=>RU({
            index: t,
            key: e,
            fallback: n
        }), _a = {
        index: {},
        push (t) {
            this.index = {
                ...this.index,
                ...t
            };
        },
        text: (t, e)=>VJ({
                index: _a.index,
                key: t,
                fallback: e
            }),
        rich: (t, e)=>WJ({
                index: _a.index,
                key: t,
                fallback: e
            })
    };
    function nh(t) {
        return typeof t > "u" || t === void 0;
    }
    function Za(t) {
        return typeof t == "string";
    }
    function CT(t) {
        return typeof t == "number";
    }
    function RE(t) {
        return typeof t == "boolean";
    }
    function bP(t) {
        return t === null;
    }
    function qJ(t) {
        return t instanceof Date;
    }
    function wP(t) {
        return typeof t == "bigint";
    }
    function nl(t) {
        return typeof t == "function";
    }
    function Jc(t) {
        return typeof t == "object" && t !== null;
    }
    function te(t) {
        return Object.freeze(t);
    }
    function r1(t) {
        return Ad(t) ? t : [
            t
        ];
    }
    function Ad(t) {
        return Array.isArray(t);
    }
    function rh(t) {
        return t;
    }
    const Tr = te({
        is (t) {
            return t.kind === "AlterTableNode";
        },
        create (t) {
            return te({
                kind: "AlterTableNode",
                table: t
            });
        },
        cloneWithTableProps (t, e) {
            return te({
                ...t,
                ...e
            });
        },
        cloneWithColumnAlteration (t, e) {
            return te({
                ...t,
                columnAlterations: t.columnAlterations ? [
                    ...t.columnAlterations,
                    e
                ] : [
                    e
                ]
            });
        }
    }), ri = te({
        is (t) {
            return t.kind === "IdentifierNode";
        },
        create (t) {
            return te({
                kind: "IdentifierNode",
                name: t
            });
        }
    }), dd = te({
        is (t) {
            return t.kind === "CreateIndexNode";
        },
        create (t) {
            return te({
                kind: "CreateIndexNode",
                name: ri.create(t)
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        },
        cloneWithColumns (t, e) {
            return te({
                ...t,
                columns: [
                    ...t.columns || [],
                    ...e
                ]
            });
        }
    }), IU = te({
        is (t) {
            return t.kind === "CreateSchemaNode";
        },
        create (t, e) {
            return te({
                kind: "CreateSchemaNode",
                schema: ri.create(t),
                ...e
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), HJ = [
        "preserve rows",
        "delete rows",
        "drop"
    ], za = te({
        is (t) {
            return t.kind === "CreateTableNode";
        },
        create (t) {
            return te({
                kind: "CreateTableNode",
                table: t,
                columns: te([])
            });
        },
        cloneWithColumn (t, e) {
            return te({
                ...t,
                columns: te([
                    ...t.columns,
                    e
                ])
            });
        },
        cloneWithConstraint (t, e) {
            return te({
                ...t,
                constraints: t.constraints ? te([
                    ...t.constraints,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWithFrontModifier (t, e) {
            return te({
                ...t,
                frontModifiers: t.frontModifiers ? te([
                    ...t.frontModifiers,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWithEndModifier (t, e) {
            return te({
                ...t,
                endModifiers: t.endModifiers ? te([
                    ...t.endModifiers,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), fh = te({
        is (t) {
            return t.kind === "SchemableIdentifierNode";
        },
        create (t) {
            return te({
                kind: "SchemableIdentifierNode",
                identifier: ri.create(t)
            });
        },
        createWithSchema (t, e) {
            return te({
                kind: "SchemableIdentifierNode",
                schema: ri.create(t),
                identifier: ri.create(e)
            });
        }
    }), Bx = te({
        is (t) {
            return t.kind === "DropIndexNode";
        },
        create (t, e) {
            return te({
                kind: "DropIndexNode",
                name: fh.create(t),
                ...e
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), VN = te({
        is (t) {
            return t.kind === "DropSchemaNode";
        },
        create (t, e) {
            return te({
                kind: "DropSchemaNode",
                schema: ri.create(t),
                ...e
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), WN = te({
        is (t) {
            return t.kind === "DropTableNode";
        },
        create (t, e) {
            return te({
                kind: "DropTableNode",
                table: t,
                ...e
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), Mh = te({
        is (t) {
            return t.kind === "AliasNode";
        },
        create (t, e) {
            return te({
                kind: "AliasNode",
                node: t,
                alias: e
            });
        }
    }), ih = te({
        is (t) {
            return t.kind === "TableNode";
        },
        create (t) {
            return te({
                kind: "TableNode",
                table: fh.create(t)
            });
        },
        createWithSchema (t, e) {
            return te({
                kind: "TableNode",
                table: fh.createWithSchema(t, e)
            });
        }
    });
    function Sa(t) {
        return Jc(t) && nl(t.toOperationNode);
    }
    function $J(t) {
        return Jc(t) && "expressionType" in t && Sa(t);
    }
    function GJ(t) {
        return Jc(t) && "expression" in t && Za(t.alias) && Sa(t);
    }
    const td = te({
        is (t) {
            return t.kind === "SelectModifierNode";
        },
        create (t, e) {
            return te({
                kind: "SelectModifierNode",
                modifier: t,
                of: e
            });
        },
        createWithExpression (t) {
            return te({
                kind: "SelectModifierNode",
                rawModifier: t
            });
        }
    }), hh = te({
        is (t) {
            return t.kind === "AndNode";
        },
        create (t, e) {
            return te({
                kind: "AndNode",
                left: t,
                right: e
            });
        }
    }), Oy = te({
        is (t) {
            return t.kind === "OrNode";
        },
        create (t, e) {
            return te({
                kind: "OrNode",
                left: t,
                right: e
            });
        }
    }), NR = te({
        is (t) {
            return t.kind === "OnNode";
        },
        create (t) {
            return te({
                kind: "OnNode",
                on: t
            });
        },
        cloneWithOperation (t, e, n) {
            return te({
                ...t,
                on: e === "And" ? hh.create(t.on, n) : Oy.create(t.on, n)
            });
        }
    }), Ux = te({
        is (t) {
            return t.kind === "JoinNode";
        },
        create (t, e) {
            return te({
                kind: "JoinNode",
                joinType: t,
                table: e,
                on: void 0
            });
        },
        createWithOn (t, e, n) {
            return te({
                kind: "JoinNode",
                joinType: t,
                table: e,
                on: NR.create(n)
            });
        },
        cloneWithOn (t, e) {
            return te({
                ...t,
                on: t.on ? NR.cloneWithOperation(t.on, "And", e) : NR.create(e)
            });
        }
    }), oy = te({
        is (t) {
            return t.kind === "BinaryOperationNode";
        },
        create (t, e, n) {
            return te({
                kind: "BinaryOperationNode",
                leftOperand: t,
                operator: e,
                rightOperand: n
            });
        }
    }), XJ = [
        "=",
        "==",
        "!=",
        "<>",
        ">",
        ">=",
        "<",
        "<=",
        "in",
        "not in",
        "is",
        "is not",
        "like",
        "not like",
        "match",
        "ilike",
        "not ilike",
        "@>",
        "<@",
        "^@",
        "&&",
        "?",
        "?&",
        "?|",
        "!<",
        "!>",
        "<=>",
        "!~",
        "~",
        "~*",
        "!~*",
        "@@",
        "@@@",
        "!!",
        "<->",
        "regexp",
        "is distinct from",
        "is not distinct from"
    ], KJ = [
        "+",
        "-",
        "*",
        "/",
        "%",
        "^",
        "&",
        "|",
        "#",
        "<<",
        ">>"
    ], AU = [
        "->",
        "->>"
    ], YJ = [
        ...XJ,
        ...KJ,
        "&&",
        "||"
    ], ZJ = [
        "exists",
        "not exists"
    ], JJ = [
        "not",
        "-",
        ...ZJ
    ], QJ = [
        ...YJ,
        ...AU,
        ...JJ,
        "between",
        "between symmetric"
    ], ph = te({
        is (t) {
            return t.kind === "OperatorNode";
        },
        create (t) {
            return te({
                kind: "OperatorNode",
                operator: t
            });
        }
    });
    function UL(t) {
        return Za(t) && AU.includes(t);
    }
    const ji = te({
        is (t) {
            return t.kind === "ColumnNode";
        },
        create (t) {
            return te({
                kind: "ColumnNode",
                column: ri.create(t)
            });
        }
    }), _P = te({
        is (t) {
            return t.kind === "SelectAllNode";
        },
        create () {
            return te({
                kind: "SelectAllNode"
            });
        }
    }), RT = te({
        is (t) {
            return t.kind === "ReferenceNode";
        },
        create (t, e) {
            return te({
                kind: "ReferenceNode",
                table: e,
                column: t
            });
        },
        createSelectAll (t) {
            return te({
                kind: "ReferenceNode",
                table: t,
                column: _P.create()
            });
        }
    });
    class eQ {
        #e;
        get dynamicReference() {
            return this.#e;
        }
        get refType() {}
        constructor(e){
            this.#e = e;
        }
        toOperationNode() {
            return DU(this.#e);
        }
    }
    function NU(t) {
        return Jc(t) && Sa(t) && Za(t.dynamicReference);
    }
    const qN = te({
        is (t) {
            return t.kind === "OrderByItemNode";
        },
        create (t, e) {
            return te({
                kind: "OrderByItemNode",
                orderBy: t,
                direction: e
            });
        }
    }), oo = te({
        is (t) {
            return t.kind === "RawNode";
        },
        create (t, e) {
            return te({
                kind: "RawNode",
                sqlFragments: te(t),
                parameters: te(e)
            });
        },
        createWithSql (t) {
            return oo.create([
                t
            ], []);
        },
        createWithChild (t) {
            return oo.create([
                "",
                ""
            ], [
                t
            ]);
        },
        createWithChildren (t) {
            return oo.create(new Array(t.length + 1).fill(""), t);
        }
    });
    function PU(t) {
        return t === "asc" || t === "desc";
    }
    function gw(t) {
        if (t.length === 2) return [
            PR(t[0], t[1])
        ];
        if (t.length === 1) {
            const [e] = t;
            return Array.isArray(e) ? e.map((n)=>PR(n)) : [
                PR(e)
            ];
        }
        throw new Error(`Invalid number of arguments at order by! expected 1-2, received ${t.length}`);
    }
    function PR(t, e) {
        const n = tQ(t);
        if (qN.is(n)) {
            if (e) throw new Error("Cannot specify direction twice!");
            return n;
        }
        return qN.create(n, kU(e));
    }
    function tQ(t) {
        if (ww(t)) return Lm(t);
        if (NU(t)) return t.toOperationNode();
        const [e, n] = t.split(" ");
        if (n) {
            if (!PU(n)) throw new Error(`Invalid order by direction: ${n}`);
            return qN.create(Nd(e), kU(n));
        }
        return Nd(t);
    }
    function kU(t) {
        if (t) return t === "asc" || t === "desc" ? oo.createWithSql(t) : t.toOperationNode();
    }
    const IE = te({
        is (t) {
            return t.kind === "JSONReferenceNode";
        },
        create (t, e) {
            return te({
                kind: "JSONReferenceNode",
                reference: t,
                traversal: e
            });
        },
        cloneWithTraversal (t, e) {
            return te({
                ...t,
                traversal: e
            });
        }
    }), OU = te({
        is (t) {
            return t.kind === "JSONOperatorChainNode";
        },
        create (t) {
            return te({
                kind: "JSONOperatorChainNode",
                operator: t,
                values: te([])
            });
        },
        cloneWithValue (t, e) {
            return te({
                ...t,
                values: te([
                    ...t.values,
                    e
                ])
            });
        }
    }), zx = te({
        is (t) {
            return t.kind === "JSONPathNode";
        },
        create (t) {
            return te({
                kind: "JSONPathNode",
                inOperator: t,
                pathLegs: te([])
            });
        },
        cloneWithLeg (t, e) {
            return te({
                ...t,
                pathLegs: te([
                    ...t.pathLegs,
                    e
                ])
            });
        }
    });
    function DU(t) {
        return Za(t) ? Nd(t) : t.toOperationNode();
    }
    function ub(t) {
        return Ad(t) ? t.map((e)=>Ha(e)) : [
            Ha(t)
        ];
    }
    function Ha(t) {
        return ww(t) ? Lm(t) : DU(t);
    }
    function nQ(t, e) {
        const n = Nd(t);
        if (UL(e)) return IE.create(n, OU.create(ph.create(e)));
        const r = e.slice(0, -1);
        if (UL(r)) return IE.create(n, zx.create(ph.create(r)));
        throw new Error(`Invalid JSON operator: ${e}`);
    }
    function Nd(t) {
        const e = ".";
        if (!t.includes(e)) return RT.create(ji.create(t));
        const n = t.split(e).map(SP);
        if (n.length === 3) return iQ(n);
        if (n.length === 2) return sQ(n);
        throw new Error(`invalid column reference ${t}`);
    }
    function rQ(t) {
        const e = " as ";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(SP);
            return Mh.create(Nd(n), ri.create(r));
        } else return Nd(t);
    }
    function LU(t) {
        return ji.create(t);
    }
    function AE(t) {
        const e = " ";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(SP);
            if (!PU(r)) throw new Error(`invalid order direction "${r}" next to "${n}"`);
            return gw([
                n,
                r
            ])[0];
        } else return LU(t);
    }
    function iQ(t) {
        const [e, n, r] = t;
        return RT.create(ji.create(r), ih.createWithSchema(e, n));
    }
    function sQ(t) {
        const [e, n] = t;
        return RT.create(ji.create(n), ih.create(e));
    }
    function SP(t) {
        return t.trim();
    }
    const FU = te({
        is (t) {
            return t.kind === "PrimitiveValueListNode";
        },
        create (t) {
            return te({
                kind: "PrimitiveValueListNode",
                values: te([
                    ...t
                ])
            });
        }
    }), EP = te({
        is (t) {
            return t.kind === "ValueListNode";
        },
        create (t) {
            return te({
                kind: "ValueListNode",
                values: te(t)
            });
        }
    }), uu = te({
        is (t) {
            return t.kind === "ValueNode";
        },
        create (t) {
            return te({
                kind: "ValueNode",
                value: t
            });
        },
        createImmediate (t) {
            return te({
                kind: "ValueNode",
                value: t,
                immediate: !0
            });
        }
    });
    function oQ(t) {
        return Ad(t) ? aQ(t) : Yi(t);
    }
    function Yi(t) {
        return ww(t) ? Lm(t) : uu.create(t);
    }
    function MP(t) {
        return CT(t) || RE(t) || bP(t);
    }
    function TP(t) {
        if (!MP(t)) throw new Error(`unsafe immediate value ${JSON.stringify(t)}`);
        return uu.createImmediate(t);
    }
    function aQ(t) {
        return t.some(ww) ? EP.create(t.map((e)=>Yi(e))) : FU.create(t);
    }
    const ay = te({
        is (t) {
            return t.kind === "ParensNode";
        },
        create (t) {
            return te({
                kind: "ParensNode",
                node: t
            });
        }
    });
    function Hs(t) {
        if (t.length === 3) return CP(t[0], t[1], t[2]);
        if (t.length === 1) return Yi(t[0]);
        throw new Error(`invalid arguments: ${JSON.stringify(t)}`);
    }
    function CP(t, e, n) {
        return lQ(e) && jU(n) ? oy.create(Ha(t), HN(e), uu.createImmediate(n)) : oy.create(Ha(t), HN(e), oQ(n));
    }
    function du(t, e, n) {
        return oy.create(Ha(t), HN(e), Ha(n));
    }
    function zL(t, e) {
        return NE(Object.entries(t).filter(([, n])=>!nh(n)).map(([n, r])=>CP(n, jU(r) ? "is" : "=", r)), e);
    }
    function NE(t, e, n = !0) {
        const r = e === "and" ? hh.create : Oy.create;
        if (t.length === 0) return oy.create(uu.createImmediate(1), ph.create("="), uu.createImmediate(e === "and" ? 1 : 0));
        let i = VL(t[0]);
        for(let s = 1; s < t.length; ++s)i = r(i, VL(t[s]));
        return t.length > 1 && n ? ay.create(i) : i;
    }
    function lQ(t) {
        return t === "is" || t === "is not";
    }
    function jU(t) {
        return bP(t) || RE(t);
    }
    function HN(t) {
        if (Za(t) && QJ.includes(t)) return ph.create(t);
        if (Sa(t)) return t.toOperationNode();
        throw new Error(`invalid operator ${JSON.stringify(t)}`);
    }
    function VL(t) {
        return Sa(t) ? t.toOperationNode() : t;
    }
    const mh = te({
        is (t) {
            return t.kind === "OrderByNode";
        },
        create (t) {
            return te({
                kind: "OrderByNode",
                items: te([
                    ...t
                ])
            });
        },
        cloneWithItems (t, e) {
            return te({
                ...t,
                items: te([
                    ...t.items,
                    ...e
                ])
            });
        }
    }), WL = te({
        is (t) {
            return t.kind === "PartitionByNode";
        },
        create (t) {
            return te({
                kind: "PartitionByNode",
                items: te(t)
            });
        },
        cloneWithItems (t, e) {
            return te({
                ...t,
                items: te([
                    ...t.items,
                    ...e
                ])
            });
        }
    }), $N = te({
        is (t) {
            return t.kind === "OverNode";
        },
        create () {
            return te({
                kind: "OverNode"
            });
        },
        cloneWithOrderByItems (t, e) {
            return te({
                ...t,
                orderBy: t.orderBy ? mh.cloneWithItems(t.orderBy, e) : mh.create(e)
            });
        },
        cloneWithPartitionByItems (t, e) {
            return te({
                ...t,
                partitionBy: t.partitionBy ? WL.cloneWithItems(t.partitionBy, e) : WL.create(e)
            });
        }
    }), PE = te({
        is (t) {
            return t.kind === "FromNode";
        },
        create (t) {
            return te({
                kind: "FromNode",
                froms: te(t)
            });
        },
        cloneWithFroms (t, e) {
            return te({
                ...t,
                froms: te([
                    ...t.froms,
                    ...e
                ])
            });
        }
    }), qL = te({
        is (t) {
            return t.kind === "GroupByNode";
        },
        create (t) {
            return te({
                kind: "GroupByNode",
                items: te(t)
            });
        },
        cloneWithItems (t, e) {
            return te({
                ...t,
                items: te([
                    ...t.items,
                    ...e
                ])
            });
        }
    }), HL = te({
        is (t) {
            return t.kind === "HavingNode";
        },
        create (t) {
            return te({
                kind: "HavingNode",
                having: t
            });
        },
        cloneWithOperation (t, e, n) {
            return te({
                ...t,
                having: e === "And" ? hh.create(t.having, n) : Oy.create(t.having, n)
            });
        }
    }), Mr = te({
        is (t) {
            return t.kind === "SelectQueryNode";
        },
        create (t) {
            return te({
                kind: "SelectQueryNode",
                ...t && {
                    with: t
                }
            });
        },
        createFrom (t, e) {
            return te({
                kind: "SelectQueryNode",
                from: PE.create(t),
                ...e && {
                    with: e
                }
            });
        },
        cloneWithSelections (t, e) {
            return te({
                ...t,
                selections: t.selections ? te([
                    ...t.selections,
                    ...e
                ]) : te(e)
            });
        },
        cloneWithDistinctOn (t, e) {
            return te({
                ...t,
                distinctOn: t.distinctOn ? te([
                    ...t.distinctOn,
                    ...e
                ]) : te(e)
            });
        },
        cloneWithFrontModifier (t, e) {
            return te({
                ...t,
                frontModifiers: t.frontModifiers ? te([
                    ...t.frontModifiers,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWithOrderByItems (t, e) {
            return te({
                ...t,
                orderBy: t.orderBy ? mh.cloneWithItems(t.orderBy, e) : mh.create(e)
            });
        },
        cloneWithGroupByItems (t, e) {
            return te({
                ...t,
                groupBy: t.groupBy ? qL.cloneWithItems(t.groupBy, e) : qL.create(e)
            });
        },
        cloneWithLimit (t, e) {
            return te({
                ...t,
                limit: e
            });
        },
        cloneWithOffset (t, e) {
            return te({
                ...t,
                offset: e
            });
        },
        cloneWithFetch (t, e) {
            return te({
                ...t,
                fetch: e
            });
        },
        cloneWithHaving (t, e) {
            return te({
                ...t,
                having: t.having ? HL.cloneWithOperation(t.having, "And", e) : HL.create(e)
            });
        },
        cloneWithSetOperations (t, e) {
            return te({
                ...t,
                setOperations: t.setOperations ? te([
                    ...t.setOperations,
                    ...e
                ]) : te([
                    ...e
                ])
            });
        },
        cloneWithoutSelections (t) {
            return te({
                ...t,
                selections: []
            });
        },
        cloneWithoutLimit (t) {
            return te({
                ...t,
                limit: void 0
            });
        },
        cloneWithoutOffset (t) {
            return te({
                ...t,
                offset: void 0
            });
        },
        cloneWithoutOrderBy (t) {
            return te({
                ...t,
                orderBy: void 0
            });
        },
        cloneWithoutGroupBy (t) {
            return te({
                ...t,
                groupBy: void 0
            });
        }
    });
    function Wn(t, e) {
        Object.defineProperties(t.prototype, {
            then: {
                enumerable: !1,
                value: ()=>{
                    throw new Error(e);
                }
            }
        });
    }
    class $0 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        on(...e) {
            return new $0({
                ...this.#e,
                joinNode: Ux.cloneWithOn(this.#e.joinNode, Hs(e))
            });
        }
        onRef(e, n, r) {
            return new $0({
                ...this.#e,
                joinNode: Ux.cloneWithOn(this.#e.joinNode, du(e, n, r))
            });
        }
        onTrue() {
            return new $0({
                ...this.#e,
                joinNode: Ux.cloneWithOn(this.#e.joinNode, oo.createWithSql("true"))
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.joinNode;
        }
    }
    Wn($0, "don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");
    const cQ = te({
        is (t) {
            return t.kind === "PartitionByItemNode";
        },
        create (t) {
            return te({
                kind: "PartitionByItemNode",
                partitionBy: t
            });
        }
    });
    function uQ(t) {
        return ub(t).map(cQ.create);
    }
    class db {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        orderBy(e, n) {
            return new db({
                overNode: $N.cloneWithOrderByItems(this.#e.overNode, gw([
                    e,
                    n
                ]))
            });
        }
        partitionBy(e) {
            return new db({
                overNode: $N.cloneWithPartitionByItems(this.#e.overNode, uQ(e))
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.overNode;
        }
    }
    Wn(db, "don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");
    const Vx = te({
        is (t) {
            return t.kind === "SelectionNode";
        },
        create (t) {
            return te({
                kind: "SelectionNode",
                selection: t
            });
        },
        createSelectAll () {
            return te({
                kind: "SelectionNode",
                selection: _P.create()
            });
        },
        createSelectAllFromTable (t) {
            return te({
                kind: "SelectionNode",
                selection: RT.createSelectAll(t)
            });
        }
    });
    function xc(t) {
        return nl(t) ? xc(t(Ly())) : Ad(t) ? t.map((e)=>$L(e)) : [
            $L(t)
        ];
    }
    function $L(t) {
        return Za(t) ? Vx.create(rQ(t)) : NU(t) ? Vx.create(t.toOperationNode()) : Vx.create(ZU(t));
    }
    function fu(t) {
        return t ? Array.isArray(t) ? t.map(GL) : [
            GL(t)
        ] : [
            Vx.createSelectAll()
        ];
    }
    function GL(t) {
        if (Za(t)) return Vx.createSelectAllFromTable(Di(t));
        throw new Error(`invalid value selectAll expression: ${JSON.stringify(t)}`);
    }
    const dQ = te({
        is (t) {
            return t.kind === "ValuesNode";
        },
        create (t) {
            return te({
                kind: "ValuesNode",
                values: te(t)
            });
        }
    }), fQ = te({
        is (t) {
            return t.kind === "DefaultInsertValueNode";
        },
        create () {
            return te({
                kind: "DefaultInsertValueNode"
            });
        }
    });
    function BU(t) {
        const e = nl(t) ? t(Ly()) : t, n = Ad(e) ? e : te([
            e
        ]);
        return hQ(n);
    }
    function hQ(t) {
        const e = pQ(t);
        return [
            te([
                ...e.keys()
            ].map(ji.create)),
            dQ.create(t.map((n)=>mQ(n, e)))
        ];
    }
    function pQ(t) {
        const e = new Map;
        for (const n of t){
            const r = Object.keys(n);
            for (const i of r)!e.has(i) && n[i] !== void 0 && e.set(i, e.size);
        }
        return e;
    }
    function mQ(t, e) {
        const n = Object.keys(t), r = Array.from({
            length: e.size
        });
        let i = !1;
        for (const o of n){
            const a = e.get(o);
            if (nh(a)) continue;
            const l = t[o];
            (nh(l) || ww(l)) && (i = !0), r[a] = l;
        }
        if (n.length < e.size || i) {
            const o = fQ.create();
            return EP.create(r.map((a)=>nh(a) ? o : Yi(a)));
        }
        return FU.create(r);
    }
    const Wa = te({
        is (t) {
            return t.kind === "InsertQueryNode";
        },
        create (t, e, n) {
            return te({
                kind: "InsertQueryNode",
                into: t,
                ...e && {
                    with: e
                },
                replace: n
            });
        },
        createWithoutInto () {
            return te({
                kind: "InsertQueryNode"
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), G0 = te({
        is (t) {
            return t.kind === "UpdateQueryNode";
        },
        create (t, e) {
            return te({
                kind: "UpdateQueryNode",
                table: t,
                ...e && {
                    with: e
                }
            });
        },
        createWithoutTable () {
            return te({
                kind: "UpdateQueryNode"
            });
        },
        cloneWithFromItems (t, e) {
            return te({
                ...t,
                from: t.from ? PE.cloneWithFroms(t.from, e) : PE.create(e)
            });
        },
        cloneWithUpdates (t, e) {
            return te({
                ...t,
                updates: t.updates ? te([
                    ...t.updates,
                    ...e
                ]) : e
            });
        },
        cloneWithLimit (t, e) {
            return te({
                ...t,
                limit: e
            });
        }
    }), XL = te({
        is (t) {
            return t.kind === "UsingNode";
        },
        create (t) {
            return te({
                kind: "UsingNode",
                tables: te(t)
            });
        },
        cloneWithTables (t, e) {
            return te({
                ...t,
                tables: te([
                    ...t.tables,
                    ...e
                ])
            });
        }
    }), Wp = te({
        is (t) {
            return t.kind === "DeleteQueryNode";
        },
        create (t, e) {
            return te({
                kind: "DeleteQueryNode",
                from: PE.create(t),
                ...e && {
                    with: e
                }
            });
        },
        cloneWithOrderByItems (t, e) {
            return te({
                ...t,
                orderBy: t.orderBy ? mh.cloneWithItems(t.orderBy, e) : mh.create(e)
            });
        },
        cloneWithoutOrderBy (t) {
            return te({
                ...t,
                orderBy: void 0
            });
        },
        cloneWithLimit (t, e) {
            return te({
                ...t,
                limit: e
            });
        },
        cloneWithoutLimit (t) {
            return te({
                ...t,
                limit: void 0
            });
        },
        cloneWithUsing (t, e) {
            return te({
                ...t,
                using: t.using !== void 0 ? XL.cloneWithTables(t.using, e) : XL.create(e)
            });
        }
    }), ha = te({
        is (t) {
            return t.kind === "WhereNode";
        },
        create (t) {
            return te({
                kind: "WhereNode",
                where: t
            });
        },
        cloneWithOperation (t, e, n) {
            return te({
                ...t,
                where: e === "And" ? hh.create(t.where, n) : Oy.create(t.where, n)
            });
        }
    }), KL = te({
        is (t) {
            return t.kind === "ReturningNode";
        },
        create (t) {
            return te({
                kind: "ReturningNode",
                selections: te(t)
            });
        },
        cloneWithSelections (t, e) {
            return te({
                ...t,
                selections: t.selections ? te([
                    ...t.selections,
                    ...e
                ]) : te(e)
            });
        }
    }), gQ = te({
        is (t) {
            return t.kind === "ExplainNode";
        },
        create (t, e) {
            return te({
                kind: "ExplainNode",
                format: t,
                options: e
            });
        }
    }), yw = te({
        is (t) {
            return t.kind === "WhenNode";
        },
        create (t) {
            return te({
                kind: "WhenNode",
                condition: t
            });
        },
        cloneWithResult (t, e) {
            return te({
                ...t,
                result: e
            });
        }
    }), ya = te({
        is (t) {
            return t.kind === "MergeQueryNode";
        },
        create (t, e) {
            return te({
                kind: "MergeQueryNode",
                into: t,
                ...e && {
                    with: e
                }
            });
        },
        cloneWithUsing (t, e) {
            return te({
                ...t,
                using: e
            });
        },
        cloneWithWhen (t, e) {
            return te({
                ...t,
                whens: t.whens ? te([
                    ...t.whens,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWithThen (t, e) {
            return te({
                ...t,
                whens: t.whens ? te([
                    ...t.whens.slice(0, -1),
                    yw.cloneWithResult(t.whens[t.whens.length - 1], e)
                ]) : void 0
            });
        }
    }), YL = te({
        is (t) {
            return t.kind === "OutputNode";
        },
        create (t) {
            return te({
                kind: "OutputNode",
                selections: te(t)
            });
        },
        cloneWithSelections (t, e) {
            return te({
                ...t,
                selections: t.selections ? te([
                    ...t.selections,
                    ...e
                ]) : te(e)
            });
        }
    }), zt = te({
        is (t) {
            return Mr.is(t) || Wa.is(t) || G0.is(t) || Wp.is(t) || ya.is(t);
        },
        cloneWithEndModifier (t, e) {
            return te({
                ...t,
                endModifiers: t.endModifiers ? te([
                    ...t.endModifiers,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWithWhere (t, e) {
            return te({
                ...t,
                where: t.where ? ha.cloneWithOperation(t.where, "And", e) : ha.create(e)
            });
        },
        cloneWithJoin (t, e) {
            return te({
                ...t,
                joins: t.joins ? te([
                    ...t.joins,
                    e
                ]) : te([
                    e
                ])
            });
        },
        cloneWithReturning (t, e) {
            return te({
                ...t,
                returning: t.returning ? KL.cloneWithSelections(t.returning, e) : KL.create(e)
            });
        },
        cloneWithoutReturning (t) {
            return te({
                ...t,
                returning: void 0
            });
        },
        cloneWithoutWhere (t) {
            return te({
                ...t,
                where: void 0
            });
        },
        cloneWithExplain (t, e, n) {
            return te({
                ...t,
                explain: gQ.create(e, n?.toOperationNode())
            });
        },
        cloneWithTop (t, e) {
            return te({
                ...t,
                top: e
            });
        },
        cloneWithOutput (t, e) {
            return te({
                ...t,
                output: t.output ? YL.cloneWithSelections(t.output, e) : YL.create(e)
            });
        }
    }), UU = te({
        is (t) {
            return t.kind === "ColumnUpdateNode";
        },
        create (t, e) {
            return te({
                kind: "ColumnUpdateNode",
                column: t,
                value: e
            });
        }
    });
    function yQ(...t) {
        return t.length === 2 ? [
            UU.create(Ha(t[0]), Yi(t[1]))
        ] : RP(t[0]);
    }
    function RP(t) {
        const e = nl(t) ? t(Ly()) : t;
        return Object.entries(e).filter(([n, r])=>r !== void 0).map(([n, r])=>UU.create(ji.create(n), Yi(r)));
    }
    const vQ = te({
        is (t) {
            return t.kind === "OnDuplicateKeyNode";
        },
        create (t) {
            return te({
                kind: "OnDuplicateKeyNode",
                updates: t
            });
        }
    });
    class xQ {
        insertId;
        numInsertedOrUpdatedRows;
        constructor(e, n){
            this.insertId = e, this.numInsertedOrUpdatedRows = n;
        }
    }
    class vw extends Error {
        node;
        constructor(e){
            super("no result"), this.node = e;
        }
    }
    function xw(t) {
        return Object.prototype.hasOwnProperty.call(t, "prototype");
    }
    const Va = te({
        is (t) {
            return t.kind === "OnConflictNode";
        },
        create () {
            return te({
                kind: "OnConflictNode"
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        },
        cloneWithIndexWhere (t, e) {
            return te({
                ...t,
                indexWhere: t.indexWhere ? ha.cloneWithOperation(t.indexWhere, "And", e) : ha.create(e)
            });
        },
        cloneWithIndexOrWhere (t, e) {
            return te({
                ...t,
                indexWhere: t.indexWhere ? ha.cloneWithOperation(t.indexWhere, "Or", e) : ha.create(e)
            });
        },
        cloneWithUpdateWhere (t, e) {
            return te({
                ...t,
                updateWhere: t.updateWhere ? ha.cloneWithOperation(t.updateWhere, "And", e) : ha.create(e)
            });
        },
        cloneWithUpdateOrWhere (t, e) {
            return te({
                ...t,
                updateWhere: t.updateWhere ? ha.cloneWithOperation(t.updateWhere, "Or", e) : ha.create(e)
            });
        },
        cloneWithoutIndexWhere (t) {
            return te({
                ...t,
                indexWhere: void 0
            });
        },
        cloneWithoutUpdateWhere (t) {
            return te({
                ...t,
                updateWhere: void 0
            });
        }
    });
    class Zc {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        column(e) {
            const n = ji.create(e);
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWith(this.#e.onConflictNode, {
                    columns: this.#e.onConflictNode.columns ? te([
                        ...this.#e.onConflictNode.columns,
                        n
                    ]) : te([
                        n
                    ])
                })
            });
        }
        columns(e) {
            const n = e.map(ji.create);
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWith(this.#e.onConflictNode, {
                    columns: this.#e.onConflictNode.columns ? te([
                        ...this.#e.onConflictNode.columns,
                        ...n
                    ]) : te(n)
                })
            });
        }
        constraint(e) {
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWith(this.#e.onConflictNode, {
                    constraint: ri.create(e)
                })
            });
        }
        expression(e) {
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWith(this.#e.onConflictNode, {
                    indexExpression: e.toOperationNode()
                })
            });
        }
        where(...e) {
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWithIndexWhere(this.#e.onConflictNode, Hs(e))
            });
        }
        whereRef(e, n, r) {
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWithIndexWhere(this.#e.onConflictNode, du(e, n, r))
            });
        }
        clearWhere() {
            return new Zc({
                ...this.#e,
                onConflictNode: Va.cloneWithoutIndexWhere(this.#e.onConflictNode)
            });
        }
        doNothing() {
            return new zU({
                ...this.#e,
                onConflictNode: Va.cloneWith(this.#e.onConflictNode, {
                    doNothing: !0
                })
            });
        }
        doUpdateSet(e) {
            return new X0({
                ...this.#e,
                onConflictNode: Va.cloneWith(this.#e.onConflictNode, {
                    updates: RP(e)
                })
            });
        }
        $call(e) {
            return e(this);
        }
    }
    Wn(Zc, "don't await OnConflictBuilder instances.");
    class zU {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        toOperationNode() {
            return this.#e.onConflictNode;
        }
    }
    Wn(zU, "don't await OnConflictDoNothingBuilder instances.");
    class X0 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        where(...e) {
            return new X0({
                ...this.#e,
                onConflictNode: Va.cloneWithUpdateWhere(this.#e.onConflictNode, Hs(e))
            });
        }
        whereRef(e, n, r) {
            return new X0({
                ...this.#e,
                onConflictNode: Va.cloneWithUpdateWhere(this.#e.onConflictNode, du(e, n, r))
            });
        }
        clearWhere() {
            return new X0({
                ...this.#e,
                onConflictNode: Va.cloneWithoutUpdateWhere(this.#e.onConflictNode)
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.onConflictNode;
        }
    }
    Wn(X0, "don't await OnConflictUpdateBuilder instances.");
    const bQ = te({
        is (t) {
            return t.kind === "TopNode";
        },
        create (t, e) {
            return te({
                kind: "TopNode",
                expression: t,
                modifiers: e
            });
        }
    });
    function Dy(t, e) {
        if (!CT(t) && !wP(t)) throw new Error(`Invalid top expression: ${t}`);
        if (!nh(e) && !wQ(e)) throw new Error(`Invalid top modifiers: ${e}`);
        return bQ.create(t, e);
    }
    function wQ(t) {
        return t === "percent" || t === "with ties" || t === "percent with ties";
    }
    class ti {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        values(e) {
            const [n, r] = BU(e);
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    columns: n,
                    values: r
                })
            });
        }
        columns(e) {
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    columns: te(e.map(ji.create))
                })
            });
        }
        expression(e) {
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    values: Lm(e)
                })
            });
        }
        defaultValues() {
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    defaultValues: !0
                })
            });
        }
        modifyEnd(e) {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        ignore() {
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    ignore: !0
                })
            });
        }
        top(e, n) {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithTop(this.#e.queryNode, Dy(e, n))
            });
        }
        onConflict(e) {
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    onConflict: e(new Zc({
                        onConflictNode: Va.create()
                    })).toOperationNode()
                })
            });
        }
        onDuplicateKeyUpdate(e) {
            return new ti({
                ...this.#e,
                queryNode: Wa.cloneWith(this.#e.queryNode, {
                    onDuplicateKey: vQ.create(RP(e))
                })
            });
        }
        returning(e) {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithReturning(this.#e.queryNode, xc(e))
            });
        }
        returningAll() {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithReturning(this.#e.queryNode, fu())
            });
        }
        output(e) {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, xc(e))
            });
        }
        outputAll(e) {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, fu(e))
            });
        }
        clearReturning() {
            return new ti({
                ...this.#e,
                queryNode: zt.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new ti({
                ...this.#e
            });
        }
        $castTo() {
            return new ti(this.#e);
        }
        $narrowType() {
            return new ti(this.#e);
        }
        $assertType() {
            return new ti(this.#e);
        }
        withPlugin(e) {
            return new ti({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId), { adapter: r } = this.#e.executor, i = e.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new xQ(n.insertId, n.numAffectedRows ?? n.numUpdatedOrDeletedRows)
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = vw) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw xw(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new ti({
                ...this.#e,
                queryNode: zt.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    Wn(ti, "don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    class _Q {
        numDeletedRows;
        constructor(e){
            this.numDeletedRows = e;
        }
    }
    const IP = te({
        is (t) {
            return t.kind === "LimitNode";
        },
        create (t) {
            return te({
                kind: "LimitNode",
                limit: t
            });
        }
    });
    class Er {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        where(...e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithWhere(this.#e.queryNode, Hs(e))
            });
        }
        whereRef(e, n, r) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithWhere(this.#e.queryNode, du(e, n, r))
            });
        }
        clearWhere() {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        top(e, n) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithTop(this.#e.queryNode, Dy(e, n))
            });
        }
        using(e) {
            return new Er({
                ...this.#e,
                queryNode: Wp.cloneWithUsing(this.#e.queryNode, pb(e))
            });
        }
        innerJoin(...e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("InnerJoin", e))
            });
        }
        leftJoin(...e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("LeftJoin", e))
            });
        }
        rightJoin(...e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("RightJoin", e))
            });
        }
        fullJoin(...e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("FullJoin", e))
            });
        }
        returning(e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithReturning(this.#e.queryNode, xc(e))
            });
        }
        returningAll(e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithReturning(this.#e.queryNode, fu(e))
            });
        }
        output(e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, xc(e))
            });
        }
        outputAll(e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, fu(e))
            });
        }
        clearReturning() {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        clearLimit() {
            return new Er({
                ...this.#e,
                queryNode: Wp.cloneWithoutLimit(this.#e.queryNode)
            });
        }
        clearOrderBy() {
            return new Er({
                ...this.#e,
                queryNode: Wp.cloneWithoutOrderBy(this.#e.queryNode)
            });
        }
        orderBy(e, n) {
            return new Er({
                ...this.#e,
                queryNode: Wp.cloneWithOrderByItems(this.#e.queryNode, gw([
                    e,
                    n
                ]))
            });
        }
        limit(e) {
            return new Er({
                ...this.#e,
                queryNode: Wp.cloneWithLimit(this.#e.queryNode, IP.create(Yi(e)))
            });
        }
        modifyEnd(e) {
            return new Er({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new Er({
                ...this.#e
            });
        }
        $castTo() {
            return new Er(this.#e);
        }
        $narrowType() {
            return new Er(this.#e);
        }
        $assertType() {
            return new Er(this.#e);
        }
        withPlugin(e) {
            return new Er({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId), { adapter: r } = this.#e.executor, i = e.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new _Q(n.numAffectedRows ?? n.numUpdatedOrDeletedRows ?? BigInt(0))
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = vw) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw xw(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new Er({
                ...this.#e,
                queryNode: zt.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    Wn(Er, "don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    class SQ {
        numUpdatedRows;
        numChangedRows;
        constructor(e, n){
            this.numUpdatedRows = e, this.numChangedRows = n;
        }
    }
    class Pr {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        where(...e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithWhere(this.#e.queryNode, Hs(e))
            });
        }
        whereRef(e, n, r) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithWhere(this.#e.queryNode, du(e, n, r))
            });
        }
        clearWhere() {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        top(e, n) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithTop(this.#e.queryNode, Dy(e, n))
            });
        }
        from(e) {
            return new Pr({
                ...this.#e,
                queryNode: G0.cloneWithFromItems(this.#e.queryNode, pb(e))
            });
        }
        innerJoin(...e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("InnerJoin", e))
            });
        }
        leftJoin(...e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("LeftJoin", e))
            });
        }
        rightJoin(...e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("RightJoin", e))
            });
        }
        fullJoin(...e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("FullJoin", e))
            });
        }
        limit(e) {
            return new Pr({
                ...this.#e,
                queryNode: G0.cloneWithLimit(this.#e.queryNode, IP.create(Yi(e)))
            });
        }
        set(...e) {
            return new Pr({
                ...this.#e,
                queryNode: G0.cloneWithUpdates(this.#e.queryNode, yQ(...e))
            });
        }
        returning(e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithReturning(this.#e.queryNode, xc(e))
            });
        }
        returningAll(e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithReturning(this.#e.queryNode, fu(e))
            });
        }
        output(e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, xc(e))
            });
        }
        outputAll(e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, fu(e))
            });
        }
        modifyEnd(e) {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        clearReturning() {
            return new Pr({
                ...this.#e,
                queryNode: zt.cloneWithoutReturning(this.#e.queryNode)
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new Pr({
                ...this.#e
            });
        }
        $castTo() {
            return new Pr(this.#e);
        }
        $narrowType() {
            return new Pr(this.#e);
        }
        $assertType() {
            return new Pr(this.#e);
        }
        withPlugin(e) {
            return new Pr({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId), { adapter: r } = this.#e.executor, i = e.query;
            return i.returning && r.supportsReturning || i.output && r.supportsOutput ? n.rows : [
                new SQ(n.numAffectedRows ?? n.numUpdatedOrDeletedRows ?? BigInt(0), n.numChangedRows)
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = vw) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw xw(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new Pr({
                ...this.#e,
                queryNode: zt.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    Wn(Pr, "don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    const ZL = te({
        is (t) {
            return t.kind === "CommonTableExpressionNameNode";
        },
        create (t, e) {
            return te({
                kind: "CommonTableExpressionNameNode",
                table: ih.create(t),
                columns: e ? te(e.map(ji.create)) : void 0
            });
        }
    }), kE = te({
        is (t) {
            return t.kind === "CommonTableExpressionNode";
        },
        create (t, e) {
            return te({
                kind: "CommonTableExpressionNode",
                name: t,
                expression: e
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    });
    class fb {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        materialized() {
            return new fb({
                ...this.#e,
                node: kE.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        notMaterialized() {
            return new fb({
                ...this.#e,
                node: kE.cloneWith(this.#e.node, {
                    materialized: !1
                })
            });
        }
        toOperationNode() {
            return this.#e.node;
        }
    }
    Wn(fb, "don't await CTEBuilder instances. They are never executed directly and are always just a part of a query.");
    function JL(t, e) {
        const n = e(DQ()).toOperationNode();
        return nl(t) ? t(EQ(n)).toOperationNode() : kE.create(VU(t), n);
    }
    function EQ(t) {
        return (e)=>new fb({
                node: kE.create(VU(e), t)
            });
    }
    function VU(t) {
        if (t.includes("(")) {
            const e = t.split(/[\(\)]/), n = e[0], r = e[1].split(",").map((i)=>i.trim());
            return ZL.create(n, r);
        } else return ZL.create(t);
    }
    const i1 = te({
        is (t) {
            return t.kind === "WithNode";
        },
        create (t, e) {
            return te({
                kind: "WithNode",
                expressions: te([
                    t
                ]),
                ...e
            });
        },
        cloneWithExpression (t, e) {
            return te({
                ...t,
                expressions: te([
                    ...t.expressions,
                    e
                ])
            });
        }
    }), QL = [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
    ];
    function MQ(t) {
        let e = "";
        for(let n = 0; n < t; ++n)e += TQ();
        return e;
    }
    function TQ() {
        return QL[~~(Math.random() * QL.length)];
    }
    function Cr() {
        return new CQ;
    }
    class CQ {
        #e;
        get queryId() {
            return this.#e === void 0 && (this.#e = MQ(8)), this.#e;
        }
    }
    class WU {
        nodeStack = [];
        #e = te({
            AliasNode: this.transformAlias.bind(this),
            ColumnNode: this.transformColumn.bind(this),
            IdentifierNode: this.transformIdentifier.bind(this),
            SchemableIdentifierNode: this.transformSchemableIdentifier.bind(this),
            RawNode: this.transformRaw.bind(this),
            ReferenceNode: this.transformReference.bind(this),
            SelectQueryNode: this.transformSelectQuery.bind(this),
            SelectionNode: this.transformSelection.bind(this),
            TableNode: this.transformTable.bind(this),
            FromNode: this.transformFrom.bind(this),
            SelectAllNode: this.transformSelectAll.bind(this),
            AndNode: this.transformAnd.bind(this),
            OrNode: this.transformOr.bind(this),
            ValueNode: this.transformValue.bind(this),
            ValueListNode: this.transformValueList.bind(this),
            PrimitiveValueListNode: this.transformPrimitiveValueList.bind(this),
            ParensNode: this.transformParens.bind(this),
            JoinNode: this.transformJoin.bind(this),
            OperatorNode: this.transformOperator.bind(this),
            WhereNode: this.transformWhere.bind(this),
            InsertQueryNode: this.transformInsertQuery.bind(this),
            DeleteQueryNode: this.transformDeleteQuery.bind(this),
            ReturningNode: this.transformReturning.bind(this),
            CreateTableNode: this.transformCreateTable.bind(this),
            AddColumnNode: this.transformAddColumn.bind(this),
            ColumnDefinitionNode: this.transformColumnDefinition.bind(this),
            DropTableNode: this.transformDropTable.bind(this),
            DataTypeNode: this.transformDataType.bind(this),
            OrderByNode: this.transformOrderBy.bind(this),
            OrderByItemNode: this.transformOrderByItem.bind(this),
            GroupByNode: this.transformGroupBy.bind(this),
            GroupByItemNode: this.transformGroupByItem.bind(this),
            UpdateQueryNode: this.transformUpdateQuery.bind(this),
            ColumnUpdateNode: this.transformColumnUpdate.bind(this),
            LimitNode: this.transformLimit.bind(this),
            OffsetNode: this.transformOffset.bind(this),
            OnConflictNode: this.transformOnConflict.bind(this),
            OnDuplicateKeyNode: this.transformOnDuplicateKey.bind(this),
            CreateIndexNode: this.transformCreateIndex.bind(this),
            DropIndexNode: this.transformDropIndex.bind(this),
            ListNode: this.transformList.bind(this),
            PrimaryKeyConstraintNode: this.transformPrimaryKeyConstraint.bind(this),
            UniqueConstraintNode: this.transformUniqueConstraint.bind(this),
            ReferencesNode: this.transformReferences.bind(this),
            CheckConstraintNode: this.transformCheckConstraint.bind(this),
            WithNode: this.transformWith.bind(this),
            CommonTableExpressionNode: this.transformCommonTableExpression.bind(this),
            CommonTableExpressionNameNode: this.transformCommonTableExpressionName.bind(this),
            HavingNode: this.transformHaving.bind(this),
            CreateSchemaNode: this.transformCreateSchema.bind(this),
            DropSchemaNode: this.transformDropSchema.bind(this),
            AlterTableNode: this.transformAlterTable.bind(this),
            DropColumnNode: this.transformDropColumn.bind(this),
            RenameColumnNode: this.transformRenameColumn.bind(this),
            AlterColumnNode: this.transformAlterColumn.bind(this),
            ModifyColumnNode: this.transformModifyColumn.bind(this),
            AddConstraintNode: this.transformAddConstraint.bind(this),
            DropConstraintNode: this.transformDropConstraint.bind(this),
            ForeignKeyConstraintNode: this.transformForeignKeyConstraint.bind(this),
            CreateViewNode: this.transformCreateView.bind(this),
            DropViewNode: this.transformDropView.bind(this),
            GeneratedNode: this.transformGenerated.bind(this),
            DefaultValueNode: this.transformDefaultValue.bind(this),
            OnNode: this.transformOn.bind(this),
            ValuesNode: this.transformValues.bind(this),
            SelectModifierNode: this.transformSelectModifier.bind(this),
            CreateTypeNode: this.transformCreateType.bind(this),
            DropTypeNode: this.transformDropType.bind(this),
            ExplainNode: this.transformExplain.bind(this),
            DefaultInsertValueNode: this.transformDefaultInsertValue.bind(this),
            AggregateFunctionNode: this.transformAggregateFunction.bind(this),
            OverNode: this.transformOver.bind(this),
            PartitionByNode: this.transformPartitionBy.bind(this),
            PartitionByItemNode: this.transformPartitionByItem.bind(this),
            SetOperationNode: this.transformSetOperation.bind(this),
            BinaryOperationNode: this.transformBinaryOperation.bind(this),
            UnaryOperationNode: this.transformUnaryOperation.bind(this),
            UsingNode: this.transformUsing.bind(this),
            FunctionNode: this.transformFunction.bind(this),
            CaseNode: this.transformCase.bind(this),
            WhenNode: this.transformWhen.bind(this),
            JSONReferenceNode: this.transformJSONReference.bind(this),
            JSONPathNode: this.transformJSONPath.bind(this),
            JSONPathLegNode: this.transformJSONPathLeg.bind(this),
            JSONOperatorChainNode: this.transformJSONOperatorChain.bind(this),
            TupleNode: this.transformTuple.bind(this),
            MergeQueryNode: this.transformMergeQuery.bind(this),
            MatchedNode: this.transformMatched.bind(this),
            AddIndexNode: this.transformAddIndex.bind(this),
            CastNode: this.transformCast.bind(this),
            FetchNode: this.transformFetch.bind(this),
            TopNode: this.transformTop.bind(this),
            OutputNode: this.transformOutput.bind(this)
        });
        transformNode(e) {
            if (!e) return e;
            this.nodeStack.push(e);
            const n = this.transformNodeImpl(e);
            return this.nodeStack.pop(), te(n);
        }
        transformNodeImpl(e) {
            return this.#e[e.kind](e);
        }
        transformNodeList(e) {
            return e && te(e.map((n)=>this.transformNode(n)));
        }
        transformSelectQuery(e) {
            return {
                kind: "SelectQueryNode",
                from: this.transformNode(e.from),
                selections: this.transformNodeList(e.selections),
                distinctOn: this.transformNodeList(e.distinctOn),
                joins: this.transformNodeList(e.joins),
                groupBy: this.transformNode(e.groupBy),
                orderBy: this.transformNode(e.orderBy),
                where: this.transformNode(e.where),
                frontModifiers: this.transformNodeList(e.frontModifiers),
                endModifiers: this.transformNodeList(e.endModifiers),
                limit: this.transformNode(e.limit),
                offset: this.transformNode(e.offset),
                with: this.transformNode(e.with),
                having: this.transformNode(e.having),
                explain: this.transformNode(e.explain),
                setOperations: this.transformNodeList(e.setOperations),
                fetch: this.transformNode(e.fetch),
                top: this.transformNode(e.top)
            };
        }
        transformSelection(e) {
            return {
                kind: "SelectionNode",
                selection: this.transformNode(e.selection)
            };
        }
        transformColumn(e) {
            return {
                kind: "ColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformAlias(e) {
            return {
                kind: "AliasNode",
                node: this.transformNode(e.node),
                alias: this.transformNode(e.alias)
            };
        }
        transformTable(e) {
            return {
                kind: "TableNode",
                table: this.transformNode(e.table)
            };
        }
        transformFrom(e) {
            return {
                kind: "FromNode",
                froms: this.transformNodeList(e.froms)
            };
        }
        transformReference(e) {
            return {
                kind: "ReferenceNode",
                column: this.transformNode(e.column),
                table: this.transformNode(e.table)
            };
        }
        transformAnd(e) {
            return {
                kind: "AndNode",
                left: this.transformNode(e.left),
                right: this.transformNode(e.right)
            };
        }
        transformOr(e) {
            return {
                kind: "OrNode",
                left: this.transformNode(e.left),
                right: this.transformNode(e.right)
            };
        }
        transformValueList(e) {
            return {
                kind: "ValueListNode",
                values: this.transformNodeList(e.values)
            };
        }
        transformParens(e) {
            return {
                kind: "ParensNode",
                node: this.transformNode(e.node)
            };
        }
        transformJoin(e) {
            return {
                kind: "JoinNode",
                joinType: e.joinType,
                table: this.transformNode(e.table),
                on: this.transformNode(e.on)
            };
        }
        transformRaw(e) {
            return {
                kind: "RawNode",
                sqlFragments: te([
                    ...e.sqlFragments
                ]),
                parameters: this.transformNodeList(e.parameters)
            };
        }
        transformWhere(e) {
            return {
                kind: "WhereNode",
                where: this.transformNode(e.where)
            };
        }
        transformInsertQuery(e) {
            return {
                kind: "InsertQueryNode",
                into: this.transformNode(e.into),
                columns: this.transformNodeList(e.columns),
                values: this.transformNode(e.values),
                returning: this.transformNode(e.returning),
                onConflict: this.transformNode(e.onConflict),
                onDuplicateKey: this.transformNode(e.onDuplicateKey),
                endModifiers: this.transformNodeList(e.endModifiers),
                with: this.transformNode(e.with),
                ignore: e.ignore,
                replace: e.replace,
                explain: this.transformNode(e.explain),
                defaultValues: e.defaultValues,
                top: this.transformNode(e.top),
                output: this.transformNode(e.output)
            };
        }
        transformValues(e) {
            return {
                kind: "ValuesNode",
                values: this.transformNodeList(e.values)
            };
        }
        transformDeleteQuery(e) {
            return {
                kind: "DeleteQueryNode",
                from: this.transformNode(e.from),
                using: this.transformNode(e.using),
                joins: this.transformNodeList(e.joins),
                where: this.transformNode(e.where),
                returning: this.transformNode(e.returning),
                endModifiers: this.transformNodeList(e.endModifiers),
                with: this.transformNode(e.with),
                orderBy: this.transformNode(e.orderBy),
                limit: this.transformNode(e.limit),
                explain: this.transformNode(e.explain),
                top: this.transformNode(e.top),
                output: this.transformNode(e.output)
            };
        }
        transformReturning(e) {
            return {
                kind: "ReturningNode",
                selections: this.transformNodeList(e.selections)
            };
        }
        transformCreateTable(e) {
            return {
                kind: "CreateTableNode",
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns),
                constraints: this.transformNodeList(e.constraints),
                temporary: e.temporary,
                ifNotExists: e.ifNotExists,
                onCommit: e.onCommit,
                frontModifiers: this.transformNodeList(e.frontModifiers),
                endModifiers: this.transformNodeList(e.endModifiers),
                selectQuery: this.transformNode(e.selectQuery)
            };
        }
        transformColumnDefinition(e) {
            return {
                kind: "ColumnDefinitionNode",
                column: this.transformNode(e.column),
                dataType: this.transformNode(e.dataType),
                references: this.transformNode(e.references),
                primaryKey: e.primaryKey,
                autoIncrement: e.autoIncrement,
                unique: e.unique,
                notNull: e.notNull,
                unsigned: e.unsigned,
                defaultTo: this.transformNode(e.defaultTo),
                check: this.transformNode(e.check),
                generated: this.transformNode(e.generated),
                frontModifiers: this.transformNodeList(e.frontModifiers),
                endModifiers: this.transformNodeList(e.endModifiers),
                nullsNotDistinct: e.nullsNotDistinct,
                identity: e.identity,
                ifNotExists: e.ifNotExists
            };
        }
        transformAddColumn(e) {
            return {
                kind: "AddColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformDropTable(e) {
            return {
                kind: "DropTableNode",
                table: this.transformNode(e.table),
                ifExists: e.ifExists,
                cascade: e.cascade
            };
        }
        transformOrderBy(e) {
            return {
                kind: "OrderByNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformOrderByItem(e) {
            return {
                kind: "OrderByItemNode",
                orderBy: this.transformNode(e.orderBy),
                direction: this.transformNode(e.direction)
            };
        }
        transformGroupBy(e) {
            return {
                kind: "GroupByNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformGroupByItem(e) {
            return {
                kind: "GroupByItemNode",
                groupBy: this.transformNode(e.groupBy)
            };
        }
        transformUpdateQuery(e) {
            return {
                kind: "UpdateQueryNode",
                table: this.transformNode(e.table),
                from: this.transformNode(e.from),
                joins: this.transformNodeList(e.joins),
                where: this.transformNode(e.where),
                updates: this.transformNodeList(e.updates),
                returning: this.transformNode(e.returning),
                endModifiers: this.transformNodeList(e.endModifiers),
                with: this.transformNode(e.with),
                explain: this.transformNode(e.explain),
                limit: this.transformNode(e.limit),
                top: this.transformNode(e.top),
                output: this.transformNode(e.output)
            };
        }
        transformColumnUpdate(e) {
            return {
                kind: "ColumnUpdateNode",
                column: this.transformNode(e.column),
                value: this.transformNode(e.value)
            };
        }
        transformLimit(e) {
            return {
                kind: "LimitNode",
                limit: this.transformNode(e.limit)
            };
        }
        transformOffset(e) {
            return {
                kind: "OffsetNode",
                offset: this.transformNode(e.offset)
            };
        }
        transformOnConflict(e) {
            return {
                kind: "OnConflictNode",
                columns: this.transformNodeList(e.columns),
                constraint: this.transformNode(e.constraint),
                indexExpression: this.transformNode(e.indexExpression),
                indexWhere: this.transformNode(e.indexWhere),
                updates: this.transformNodeList(e.updates),
                updateWhere: this.transformNode(e.updateWhere),
                doNothing: e.doNothing
            };
        }
        transformOnDuplicateKey(e) {
            return {
                kind: "OnDuplicateKeyNode",
                updates: this.transformNodeList(e.updates)
            };
        }
        transformCreateIndex(e) {
            return {
                kind: "CreateIndexNode",
                name: this.transformNode(e.name),
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns),
                unique: e.unique,
                using: this.transformNode(e.using),
                ifNotExists: e.ifNotExists,
                where: this.transformNode(e.where),
                nullsNotDistinct: e.nullsNotDistinct
            };
        }
        transformList(e) {
            return {
                kind: "ListNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformDropIndex(e) {
            return {
                kind: "DropIndexNode",
                name: this.transformNode(e.name),
                table: this.transformNode(e.table),
                ifExists: e.ifExists,
                cascade: e.cascade
            };
        }
        transformPrimaryKeyConstraint(e) {
            return {
                kind: "PrimaryKeyConstraintNode",
                columns: this.transformNodeList(e.columns),
                name: this.transformNode(e.name)
            };
        }
        transformUniqueConstraint(e) {
            return {
                kind: "UniqueConstraintNode",
                columns: this.transformNodeList(e.columns),
                name: this.transformNode(e.name),
                nullsNotDistinct: e.nullsNotDistinct
            };
        }
        transformForeignKeyConstraint(e) {
            return {
                kind: "ForeignKeyConstraintNode",
                columns: this.transformNodeList(e.columns),
                references: this.transformNode(e.references),
                name: this.transformNode(e.name),
                onDelete: e.onDelete,
                onUpdate: e.onUpdate
            };
        }
        transformSetOperation(e) {
            return {
                kind: "SetOperationNode",
                operator: e.operator,
                expression: this.transformNode(e.expression),
                all: e.all
            };
        }
        transformReferences(e) {
            return {
                kind: "ReferencesNode",
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns),
                onDelete: e.onDelete,
                onUpdate: e.onUpdate
            };
        }
        transformCheckConstraint(e) {
            return {
                kind: "CheckConstraintNode",
                expression: this.transformNode(e.expression),
                name: this.transformNode(e.name)
            };
        }
        transformWith(e) {
            return {
                kind: "WithNode",
                expressions: this.transformNodeList(e.expressions),
                recursive: e.recursive
            };
        }
        transformCommonTableExpression(e) {
            return {
                kind: "CommonTableExpressionNode",
                name: this.transformNode(e.name),
                materialized: e.materialized,
                expression: this.transformNode(e.expression)
            };
        }
        transformCommonTableExpressionName(e) {
            return {
                kind: "CommonTableExpressionNameNode",
                table: this.transformNode(e.table),
                columns: this.transformNodeList(e.columns)
            };
        }
        transformHaving(e) {
            return {
                kind: "HavingNode",
                having: this.transformNode(e.having)
            };
        }
        transformCreateSchema(e) {
            return {
                kind: "CreateSchemaNode",
                schema: this.transformNode(e.schema),
                ifNotExists: e.ifNotExists
            };
        }
        transformDropSchema(e) {
            return {
                kind: "DropSchemaNode",
                schema: this.transformNode(e.schema),
                ifExists: e.ifExists,
                cascade: e.cascade
            };
        }
        transformAlterTable(e) {
            return {
                kind: "AlterTableNode",
                table: this.transformNode(e.table),
                renameTo: this.transformNode(e.renameTo),
                setSchema: this.transformNode(e.setSchema),
                columnAlterations: this.transformNodeList(e.columnAlterations),
                addConstraint: this.transformNode(e.addConstraint),
                dropConstraint: this.transformNode(e.dropConstraint),
                addIndex: this.transformNode(e.addIndex),
                dropIndex: this.transformNode(e.dropIndex)
            };
        }
        transformDropColumn(e) {
            return {
                kind: "DropColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformRenameColumn(e) {
            return {
                kind: "RenameColumnNode",
                column: this.transformNode(e.column),
                renameTo: this.transformNode(e.renameTo)
            };
        }
        transformAlterColumn(e) {
            return {
                kind: "AlterColumnNode",
                column: this.transformNode(e.column),
                dataType: this.transformNode(e.dataType),
                dataTypeExpression: this.transformNode(e.dataTypeExpression),
                setDefault: this.transformNode(e.setDefault),
                dropDefault: e.dropDefault,
                setNotNull: e.setNotNull,
                dropNotNull: e.dropNotNull
            };
        }
        transformModifyColumn(e) {
            return {
                kind: "ModifyColumnNode",
                column: this.transformNode(e.column)
            };
        }
        transformAddConstraint(e) {
            return {
                kind: "AddConstraintNode",
                constraint: this.transformNode(e.constraint)
            };
        }
        transformDropConstraint(e) {
            return {
                kind: "DropConstraintNode",
                constraintName: this.transformNode(e.constraintName),
                ifExists: e.ifExists,
                modifier: e.modifier
            };
        }
        transformCreateView(e) {
            return {
                kind: "CreateViewNode",
                name: this.transformNode(e.name),
                temporary: e.temporary,
                orReplace: e.orReplace,
                ifNotExists: e.ifNotExists,
                materialized: e.materialized,
                columns: this.transformNodeList(e.columns),
                as: this.transformNode(e.as)
            };
        }
        transformDropView(e) {
            return {
                kind: "DropViewNode",
                name: this.transformNode(e.name),
                ifExists: e.ifExists,
                materialized: e.materialized,
                cascade: e.cascade
            };
        }
        transformGenerated(e) {
            return {
                kind: "GeneratedNode",
                byDefault: e.byDefault,
                always: e.always,
                identity: e.identity,
                stored: e.stored,
                expression: this.transformNode(e.expression)
            };
        }
        transformDefaultValue(e) {
            return {
                kind: "DefaultValueNode",
                defaultValue: this.transformNode(e.defaultValue)
            };
        }
        transformOn(e) {
            return {
                kind: "OnNode",
                on: this.transformNode(e.on)
            };
        }
        transformSelectModifier(e) {
            return {
                kind: "SelectModifierNode",
                modifier: e.modifier,
                rawModifier: this.transformNode(e.rawModifier),
                of: this.transformNodeList(e.of)
            };
        }
        transformCreateType(e) {
            return {
                kind: "CreateTypeNode",
                name: this.transformNode(e.name),
                enum: this.transformNode(e.enum)
            };
        }
        transformDropType(e) {
            return {
                kind: "DropTypeNode",
                name: this.transformNode(e.name),
                ifExists: e.ifExists
            };
        }
        transformExplain(e) {
            return {
                kind: "ExplainNode",
                format: e.format,
                options: this.transformNode(e.options)
            };
        }
        transformSchemableIdentifier(e) {
            return {
                kind: "SchemableIdentifierNode",
                schema: this.transformNode(e.schema),
                identifier: this.transformNode(e.identifier)
            };
        }
        transformAggregateFunction(e) {
            return {
                kind: "AggregateFunctionNode",
                aggregated: this.transformNodeList(e.aggregated),
                distinct: e.distinct,
                orderBy: this.transformNode(e.orderBy),
                filter: this.transformNode(e.filter),
                func: e.func,
                over: this.transformNode(e.over)
            };
        }
        transformOver(e) {
            return {
                kind: "OverNode",
                orderBy: this.transformNode(e.orderBy),
                partitionBy: this.transformNode(e.partitionBy)
            };
        }
        transformPartitionBy(e) {
            return {
                kind: "PartitionByNode",
                items: this.transformNodeList(e.items)
            };
        }
        transformPartitionByItem(e) {
            return {
                kind: "PartitionByItemNode",
                partitionBy: this.transformNode(e.partitionBy)
            };
        }
        transformBinaryOperation(e) {
            return {
                kind: "BinaryOperationNode",
                leftOperand: this.transformNode(e.leftOperand),
                operator: this.transformNode(e.operator),
                rightOperand: this.transformNode(e.rightOperand)
            };
        }
        transformUnaryOperation(e) {
            return {
                kind: "UnaryOperationNode",
                operator: this.transformNode(e.operator),
                operand: this.transformNode(e.operand)
            };
        }
        transformUsing(e) {
            return {
                kind: "UsingNode",
                tables: this.transformNodeList(e.tables)
            };
        }
        transformFunction(e) {
            return {
                kind: "FunctionNode",
                func: e.func,
                arguments: this.transformNodeList(e.arguments)
            };
        }
        transformCase(e) {
            return {
                kind: "CaseNode",
                value: this.transformNode(e.value),
                when: this.transformNodeList(e.when),
                else: this.transformNode(e.else),
                isStatement: e.isStatement
            };
        }
        transformWhen(e) {
            return {
                kind: "WhenNode",
                condition: this.transformNode(e.condition),
                result: this.transformNode(e.result)
            };
        }
        transformJSONReference(e) {
            return {
                kind: "JSONReferenceNode",
                reference: this.transformNode(e.reference),
                traversal: this.transformNode(e.traversal)
            };
        }
        transformJSONPath(e) {
            return {
                kind: "JSONPathNode",
                inOperator: this.transformNode(e.inOperator),
                pathLegs: this.transformNodeList(e.pathLegs)
            };
        }
        transformJSONPathLeg(e) {
            return {
                kind: "JSONPathLegNode",
                type: e.type,
                value: e.value
            };
        }
        transformJSONOperatorChain(e) {
            return {
                kind: "JSONOperatorChainNode",
                operator: this.transformNode(e.operator),
                values: this.transformNodeList(e.values)
            };
        }
        transformTuple(e) {
            return {
                kind: "TupleNode",
                values: this.transformNodeList(e.values)
            };
        }
        transformMergeQuery(e) {
            return {
                kind: "MergeQueryNode",
                into: this.transformNode(e.into),
                using: this.transformNode(e.using),
                whens: this.transformNodeList(e.whens),
                with: this.transformNode(e.with),
                top: this.transformNode(e.top),
                endModifiers: this.transformNodeList(e.endModifiers),
                output: this.transformNode(e.output)
            };
        }
        transformMatched(e) {
            return {
                kind: "MatchedNode",
                not: e.not,
                bySource: e.bySource
            };
        }
        transformAddIndex(e) {
            return {
                kind: "AddIndexNode",
                name: this.transformNode(e.name),
                columns: this.transformNodeList(e.columns),
                unique: e.unique,
                using: this.transformNode(e.using),
                ifNotExists: e.ifNotExists
            };
        }
        transformCast(e) {
            return {
                kind: "CastNode",
                expression: this.transformNode(e.expression),
                dataType: this.transformNode(e.dataType)
            };
        }
        transformFetch(e) {
            return {
                kind: "FetchNode",
                rowCount: this.transformNode(e.rowCount),
                modifier: e.modifier
            };
        }
        transformTop(e) {
            return {
                kind: "TopNode",
                expression: e.expression,
                modifiers: e.modifiers
            };
        }
        transformOutput(e) {
            return {
                kind: "OutputNode",
                selections: this.transformNodeList(e.selections)
            };
        }
        transformDataType(e) {
            return e;
        }
        transformSelectAll(e) {
            return e;
        }
        transformIdentifier(e) {
            return e;
        }
        transformValue(e) {
            return e;
        }
        transformPrimitiveValueList(e) {
            return e;
        }
        transformOperator(e) {
            return e;
        }
        transformDefaultInsertValue(e) {
            return e;
        }
    }
    const RQ = te({
        AlterTableNode: !0,
        CreateIndexNode: !0,
        CreateSchemaNode: !0,
        CreateTableNode: !0,
        CreateTypeNode: !0,
        CreateViewNode: !0,
        DeleteQueryNode: !0,
        DropIndexNode: !0,
        DropSchemaNode: !0,
        DropTableNode: !0,
        DropTypeNode: !0,
        DropViewNode: !0,
        InsertQueryNode: !0,
        RawNode: !0,
        SelectQueryNode: !0,
        UpdateQueryNode: !0,
        MergeQueryNode: !0
    });
    class IQ extends WU {
        #e;
        #t = new Set;
        #n = new Set;
        constructor(e){
            super(), this.#e = e;
        }
        transformNodeImpl(e) {
            if (!this.#r(e)) return super.transformNodeImpl(e);
            const n = this.#c(e);
            for (const s of n)this.#n.add(s);
            const r = this.#s(e);
            for (const s of r)this.#t.add(s);
            const i = super.transformNodeImpl(e);
            for (const s of r)this.#t.delete(s);
            for (const s of n)this.#n.delete(s);
            return i;
        }
        transformSchemableIdentifier(e) {
            const n = super.transformSchemableIdentifier(e);
            return n.schema || !this.#t.has(e.identifier.name) ? n : {
                ...n,
                schema: ri.create(this.#e)
            };
        }
        transformReferences(e) {
            const n = super.transformReferences(e);
            return n.table.table.schema ? n : {
                ...n,
                table: ih.createWithSchema(this.#e, n.table.table.identifier.name)
            };
        }
        #r(e) {
            return e.kind in RQ;
        }
        #s(e) {
            const n = new Set;
            if ("name" in e && e.name && fh.is(e.name) && this.#a(e.name, n), "from" in e && e.from) for (const r of e.from.froms)this.#o(r, n);
            if ("into" in e && e.into && this.#o(e.into, n), "table" in e && e.table && this.#o(e.table, n), "joins" in e && e.joins) for (const r of e.joins)this.#o(r.table, n);
            return "using" in e && e.using && this.#o(e.using, n), n;
        }
        #c(e) {
            const n = new Set;
            return "with" in e && e.with && this.#u(e.with, n), n;
        }
        #o(e, n) {
            const r = ih.is(e) ? e : Mh.is(e) && ih.is(e.node) ? e.node : null;
            r && this.#a(r.table, n);
        }
        #a(e, n) {
            const r = e.identifier.name;
            !this.#t.has(r) && !this.#n.has(r) && n.add(r);
        }
        #u(e, n) {
            for (const r of e.expressions){
                const i = r.name.table.table.identifier.name;
                this.#n.has(i) || n.add(i);
            }
        }
    }
    class bw {
        #e;
        constructor(e){
            this.#e = new IQ(e);
        }
        transformQuery(e) {
            return this.#e.transformNode(e.node);
        }
        async transformResult(e) {
            return e.result;
        }
    }
    const AQ = te({
        is (t) {
            return t.kind === "MatchedNode";
        },
        create (t, e = !1) {
            return te({
                kind: "MatchedNode",
                not: t,
                bySource: e
            });
        }
    });
    function eF(t, e, n) {
        return yw.create(NE([
            AQ.create(!t.isMatched, t.bySource),
            ...e && e.length > 0 ? [
                e.length === 3 && n ? du(e[0], e[1], e[2]) : Hs(e)
            ] : []
        ], "and", !1));
    }
    function Wx(t) {
        return Za(t) ? oo.create([
            t
        ], []) : Sa(t) ? t.toOperationNode() : t;
    }
    class tF {
        #e;
        #t;
        #n;
        constructor(){
            this.#e = new Promise((e, n)=>{
                this.#n = n, this.#t = e;
            });
        }
        get promise() {
            return this.#e;
        }
        resolve = (e)=>{
            this.#t && this.#t(e);
        };
        reject = (e)=>{
            this.#n && this.#n(e);
        };
    }
    const nF = new Set;
    function NQ(t) {
        nF.has(t) || (nF.add(t), console.log(t));
    }
    const PQ = te([]);
    class qU {
        #e;
        constructor(e = PQ){
            this.#e = e;
        }
        get plugins() {
            return this.#e;
        }
        transformQuery(e, n) {
            for (const r of this.#e){
                const i = r.transformQuery({
                    node: e,
                    queryId: n
                });
                if (i.kind === e.kind) e = i;
                else throw new Error([
                    "KyselyPlugin.transformQuery must return a node",
                    "of the same kind that was given to it.",
                    `The plugin was given a ${e.kind}`,
                    `but it returned a ${i.kind}`
                ].join(" "));
            }
            return e;
        }
        async executeQuery(e, n) {
            return await this.provideConnection(async (r)=>{
                const i = await r.executeQuery(e), s = await this.#t(i, n);
                return kQ(i, s), s;
            });
        }
        async *stream(e, n, r) {
            const i = new tF, s = new tF;
            this.provideConnection(async (a)=>(i.resolve(a), await s.promise)).catch((a)=>i.reject(a));
            const o = await i.promise;
            try {
                for await (const a of o.streamQuery(e, n))yield await this.#t(a, r);
            } finally{
                s.resolve();
            }
        }
        async #t(e, n) {
            for (const r of this.#e)e = await r.transformResult({
                result: e,
                queryId: n
            });
            return e;
        }
    }
    function kQ(t, e) {
        const { numAffectedRows: n } = t;
        n === void 0 && t.numUpdatedOrDeletedRows === void 0 || n !== void 0 && e.numAffectedRows !== void 0 || NQ("kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.");
    }
    class C0 extends qU {
        get adapter() {
            throw new Error("this query cannot be compiled to SQL");
        }
        compileQuery() {
            throw new Error("this query cannot be compiled to SQL");
        }
        provideConnection() {
            throw new Error("this query cannot be executed");
        }
        withConnectionProvider() {
            throw new Error("this query cannot have a connection provider");
        }
        withPlugin(e) {
            return new C0([
                ...this.plugins,
                e
            ]);
        }
        withPlugins(e) {
            return new C0([
                ...this.plugins,
                ...e
            ]);
        }
        withPluginAtFront(e) {
            return new C0([
                e,
                ...this.plugins
            ]);
        }
        withoutPlugins() {
            return new C0([]);
        }
    }
    const IT = new C0;
    class OQ {
        numChangedRows;
        constructor(e){
            this.numChangedRows = e;
        }
    }
    class Jp {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        modifyEnd(e) {
            return new Jp({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        top(e, n) {
            return new Jp({
                ...this.#e,
                queryNode: zt.cloneWithTop(this.#e.queryNode, Dy(e, n))
            });
        }
        using(...e) {
            return new $a({
                ...this.#e,
                queryNode: ya.cloneWithUsing(this.#e.queryNode, Bo("Using", e))
            });
        }
        output(e) {
            return new Jp({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, xc(e))
            });
        }
        outputAll(e) {
            return new Jp({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, fu(e))
            });
        }
    }
    Wn(Jp, "don't await MergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class $a {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        modifyEnd(e) {
            return new $a({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, e.toOperationNode())
            });
        }
        top(e, n) {
            return new $a({
                ...this.#e,
                queryNode: zt.cloneWithTop(this.#e.queryNode, Dy(e, n))
            });
        }
        whenMatched() {
            return this.#t([]);
        }
        whenMatchedAnd(...e) {
            return this.#t(e);
        }
        whenMatchedAndRef(e, n, r) {
            return this.#t([
                e,
                n,
                r
            ], !0);
        }
        #t(e, n) {
            return new GN({
                ...this.#e,
                queryNode: ya.cloneWithWhen(this.#e.queryNode, eF({
                    isMatched: !0
                }, e, n))
            });
        }
        whenNotMatched() {
            return this.#n([]);
        }
        whenNotMatchedAnd(...e) {
            return this.#n(e);
        }
        whenNotMatchedAndRef(e, n, r) {
            return this.#n([
                e,
                n,
                r
            ], !0);
        }
        whenNotMatchedBySource() {
            return this.#n([], !1, !0);
        }
        whenNotMatchedBySourceAnd(...e) {
            return this.#n(e, !1, !0);
        }
        whenNotMatchedBySourceAndRef(e, n, r) {
            return this.#n([
                e,
                n,
                r
            ], !0, !0);
        }
        output(e) {
            return new $a({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, xc(e))
            });
        }
        outputAll(e) {
            return new $a({
                ...this.#e,
                queryNode: zt.cloneWithOutput(this.#e.queryNode, fu(e))
            });
        }
        #n(e, n = !1, r = !1) {
            const i = {
                ...this.#e,
                queryNode: ya.cloneWithWhen(this.#e.queryNode, eF({
                    isMatched: !1,
                    bySource: r
                }, e, n))
            }, s = r ? GN : HU;
            return new s(i);
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new $a({
                ...this.#e
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile(), n = await this.#e.executor.executeQuery(e, this.#e.queryId);
            return e.query.output && this.#e.executor.adapter.supportsOutput ? n.rows : [
                new OQ(n.numAffectedRows)
            ];
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = vw) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw xw(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
    }
    Wn($a, "don't await WheneableMergeQueryBuilder instances directly. To execute the query you need to call `execute`.");
    class GN {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        thenDelete() {
            return new $a({
                ...this.#e,
                queryNode: ya.cloneWithThen(this.#e.queryNode, Wx("delete"))
            });
        }
        thenDoNothing() {
            return new $a({
                ...this.#e,
                queryNode: ya.cloneWithThen(this.#e.queryNode, Wx("do nothing"))
            });
        }
        thenUpdate(e) {
            return new $a({
                ...this.#e,
                queryNode: ya.cloneWithThen(this.#e.queryNode, Wx(e(new Pr({
                    queryId: this.#e.queryId,
                    executor: IT,
                    queryNode: G0.createWithoutTable()
                }))))
            });
        }
        thenUpdateSet(...e) {
            return this.thenUpdate((n)=>n.set(...e));
        }
    }
    Wn(GN, "don't await MatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class HU {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        thenDoNothing() {
            return new $a({
                ...this.#e,
                queryNode: ya.cloneWithThen(this.#e.queryNode, Wx("do nothing"))
            });
        }
        thenInsertValues(e) {
            const [n, r] = BU(e);
            return new $a({
                ...this.#e,
                queryNode: ya.cloneWithThen(this.#e.queryNode, Wx(Wa.cloneWith(Wa.createWithoutInto(), {
                    columns: n,
                    values: r
                })))
            });
        }
    }
    Wn(HU, "don't await NotMatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
    class Gf {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        selectFrom(e) {
            return XN({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: Mr.createFrom(pb(e), this.#e.withNode)
            });
        }
        selectNoFrom(e) {
            return XN({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: Mr.cloneWithSelections(Mr.create(this.#e.withNode), xc(e))
            });
        }
        insertInto(e) {
            return new ti({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: Wa.create(Di(e), this.#e.withNode)
            });
        }
        replaceInto(e) {
            return new ti({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: Wa.create(Di(e), this.#e.withNode, !0)
            });
        }
        deleteFrom(e) {
            return new Er({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: Wp.create(pb(e), this.#e.withNode)
            });
        }
        updateTable(e) {
            return new Pr({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: G0.create(mb(e), this.#e.withNode)
            });
        }
        mergeInto(e) {
            return new Jp({
                queryId: Cr(),
                executor: this.#e.executor,
                queryNode: ya.create(JU(e), this.#e.withNode)
            });
        }
        with(e, n) {
            const r = JL(e, n);
            return new Gf({
                ...this.#e,
                withNode: this.#e.withNode ? i1.cloneWithExpression(this.#e.withNode, r) : i1.create(r)
            });
        }
        withRecursive(e, n) {
            const r = JL(e, n);
            return new Gf({
                ...this.#e,
                withNode: this.#e.withNode ? i1.cloneWithExpression(this.#e.withNode, r) : i1.create(r, {
                    recursive: !0
                })
            });
        }
        withPlugin(e) {
            return new Gf({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        withoutPlugins() {
            return new Gf({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(e) {
            return new Gf({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new bw(e))
            });
        }
    }
    function DQ() {
        return new Gf({
            executor: IT
        });
    }
    function LQ(t, e) {
        return new $0({
            joinNode: Ux.create(t, mb(e))
        });
    }
    function FQ() {
        return new db({
            overNode: $N.create()
        });
    }
    function Bo(t, e) {
        if (e.length === 3) return BQ(t, e[0], e[1], e[2]);
        if (e.length === 2) return jQ(t, e[0], e[1]);
        throw new Error("not implemented");
    }
    function jQ(t, e, n) {
        return n(LQ(t, e)).toOperationNode();
    }
    function BQ(t, e, n, r) {
        return Ux.createWithOn(t, mb(e), du(n, "=", r));
    }
    const UQ = te({
        is (t) {
            return t.kind === "OffsetNode";
        },
        create (t) {
            return te({
                kind: "OffsetNode",
                offset: t
            });
        }
    }), zQ = te({
        is (t) {
            return t.kind === "GroupByItemNode";
        },
        create (t) {
            return te({
                kind: "GroupByItemNode",
                groupBy: t
            });
        }
    });
    function VQ(t) {
        return t = nl(t) ? t(Ly()) : t, ub(t).map(zQ.create);
    }
    const $U = te({
        is (t) {
            return t.kind === "SetOperationNode";
        },
        create (t, e, n) {
            return te({
                kind: "SetOperationNode",
                operator: t,
                expression: e,
                all: n
            });
        }
    });
    function qg(t, e, n) {
        return nl(e) && (e = e(NP())), Ad(e) || (e = [
            e
        ]), e.map((r)=>$U.create(t, Lm(r), n));
    }
    class kr {
        #e;
        constructor(e){
            this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new AP(this, e);
        }
        or(...e) {
            return new OE(Oy.create(this.#e, Hs(e)));
        }
        and(...e) {
            return new DE(hh.create(this.#e, Hs(e)));
        }
        $castTo() {
            return new kr(this.#e);
        }
        $notNull() {
            return new kr(this.#e);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    class AP {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return Mh.create(this.#e.toOperationNode(), Sa(this.#t) ? this.#t.toOperationNode() : ri.create(this.#t));
        }
    }
    class OE {
        #e;
        constructor(e){
            this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new AP(this, e);
        }
        or(...e) {
            return new OE(Oy.create(this.#e, Hs(e)));
        }
        $castTo() {
            return new OE(this.#e);
        }
        toOperationNode() {
            return ay.create(this.#e);
        }
    }
    class DE {
        #e;
        constructor(e){
            this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new AP(this, e);
        }
        and(...e) {
            return new DE(hh.create(this.#e, Hs(e)));
        }
        $castTo() {
            return new DE(this.#e);
        }
        toOperationNode() {
            return ay.create(this.#e);
        }
    }
    const WQ = {
        is (t) {
            return t.kind === "FetchNode";
        },
        create (t, e) {
            return {
                kind: "FetchNode",
                rowCount: uu.create(t),
                modifier: e
            };
        }
    };
    function qQ(t, e) {
        if (!CT(t) && !wP(t)) throw new Error(`Invalid fetch row count: ${t}`);
        if (!HQ(e)) throw new Error(`Invalid fetch modifier: ${e}`);
        return WQ.create(t, e);
    }
    function HQ(t) {
        return t === "only" || t === "with ties";
    }
    class fn {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        get expressionType() {}
        get isSelectQueryBuilder() {
            return !0;
        }
        where(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithWhere(this.#e.queryNode, Hs(e))
            });
        }
        whereRef(e, n, r) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithWhere(this.#e.queryNode, du(e, n, r))
            });
        }
        having(...e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithHaving(this.#e.queryNode, Hs(e))
            });
        }
        havingRef(e, n, r) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithHaving(this.#e.queryNode, du(e, n, r))
            });
        }
        select(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSelections(this.#e.queryNode, xc(e))
            });
        }
        distinctOn(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithDistinctOn(this.#e.queryNode, ub(e))
            });
        }
        modifyFront(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithFrontModifier(this.#e.queryNode, td.createWithExpression(e.toOperationNode()))
            });
        }
        modifyEnd(e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.createWithExpression(e.toOperationNode()))
            });
        }
        distinct() {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithFrontModifier(this.#e.queryNode, td.create("Distinct"))
            });
        }
        forUpdate(e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.create("ForUpdate", e ? r1(e).map(Di) : void 0))
            });
        }
        forShare(e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.create("ForShare", e ? r1(e).map(Di) : void 0))
            });
        }
        forKeyShare(e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.create("ForKeyShare", e ? r1(e).map(Di) : void 0))
            });
        }
        forNoKeyUpdate(e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.create("ForNoKeyUpdate", e ? r1(e).map(Di) : void 0))
            });
        }
        skipLocked() {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.create("SkipLocked"))
            });
        }
        noWait() {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithEndModifier(this.#e.queryNode, td.create("NoWait"))
            });
        }
        selectAll(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSelections(this.#e.queryNode, fu(e))
            });
        }
        innerJoin(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("InnerJoin", e))
            });
        }
        leftJoin(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("LeftJoin", e))
            });
        }
        rightJoin(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("RightJoin", e))
            });
        }
        fullJoin(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("FullJoin", e))
            });
        }
        innerJoinLateral(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("LateralInnerJoin", e))
            });
        }
        leftJoinLateral(...e) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithJoin(this.#e.queryNode, Bo("LateralLeftJoin", e))
            });
        }
        orderBy(...e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithOrderByItems(this.#e.queryNode, gw(e))
            });
        }
        groupBy(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithGroupByItems(this.#e.queryNode, VQ(e))
            });
        }
        limit(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithLimit(this.#e.queryNode, IP.create(Yi(e)))
            });
        }
        offset(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithOffset(this.#e.queryNode, UQ.create(Yi(e)))
            });
        }
        fetch(e, n = "only") {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithFetch(this.#e.queryNode, qQ(e, n))
            });
        }
        top(e, n) {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithTop(this.#e.queryNode, Dy(e, n))
            });
        }
        union(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSetOperations(this.#e.queryNode, qg("union", e, !1))
            });
        }
        unionAll(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSetOperations(this.#e.queryNode, qg("union", e, !0))
            });
        }
        intersect(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSetOperations(this.#e.queryNode, qg("intersect", e, !1))
            });
        }
        intersectAll(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSetOperations(this.#e.queryNode, qg("intersect", e, !0))
            });
        }
        except(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSetOperations(this.#e.queryNode, qg("except", e, !1))
            });
        }
        exceptAll(e) {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithSetOperations(this.#e.queryNode, qg("except", e, !0))
            });
        }
        as(e) {
            return new GU(this, e);
        }
        clearSelect() {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithoutSelections(this.#e.queryNode)
            });
        }
        clearWhere() {
            return new fn({
                ...this.#e,
                queryNode: zt.cloneWithoutWhere(this.#e.queryNode)
            });
        }
        clearLimit() {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithoutLimit(this.#e.queryNode)
            });
        }
        clearOffset() {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithoutOffset(this.#e.queryNode)
            });
        }
        clearOrderBy() {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithoutOrderBy(this.#e.queryNode)
            });
        }
        clearGroupBy() {
            return new fn({
                ...this.#e,
                queryNode: Mr.cloneWithoutGroupBy(this.#e.queryNode)
            });
        }
        $call(e) {
            return e(this);
        }
        $if(e, n) {
            return e ? n(this) : new fn({
                ...this.#e
            });
        }
        $castTo() {
            return new fn(this.#e);
        }
        $narrowType() {
            return new fn(this.#e);
        }
        $assertType() {
            return new fn(this.#e);
        }
        $asTuple() {
            return new kr(this.toOperationNode());
        }
        withPlugin(e) {
            return new fn({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.queryNode, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            const e = this.compile();
            return (await this.#e.executor.executeQuery(e, this.#e.queryId)).rows;
        }
        async executeTakeFirst() {
            const [e] = await this.execute();
            return e;
        }
        async executeTakeFirstOrThrow(e = vw) {
            const n = await this.executeTakeFirst();
            if (n === void 0) throw xw(e) ? new e(this.toOperationNode()) : e(this.toOperationNode());
            return n;
        }
        async *stream(e = 100) {
            const n = this.compile(), r = this.#e.executor.stream(n, e, this.#e.queryId);
            for await (const i of r)yield* i.rows;
        }
        async explain(e, n) {
            return await new fn({
                ...this.#e,
                queryNode: zt.cloneWithExplain(this.#e.queryNode, e, n)
            }).execute();
        }
    }
    Wn(fn, "don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
    function XN(t) {
        return new fn(t);
    }
    class GU {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        get isAliasedSelectQueryBuilder() {
            return !0;
        }
        toOperationNode() {
            return Mh.create(this.#e.toOperationNode(), ri.create(this.#t));
        }
    }
    Wn(GU, "don't await AliasedSelectQueryBuilder instances directly. AliasedSelectQueryBuilder should never be executed directly since it's always a part of another query.");
    const Xf = te({
        is (t) {
            return t.kind === "AggregateFunctionNode";
        },
        create (t, e = []) {
            return te({
                kind: "AggregateFunctionNode",
                func: t,
                aggregated: e
            });
        },
        cloneWithDistinct (t) {
            return te({
                ...t,
                distinct: !0
            });
        },
        cloneWithOrderBy (t, e) {
            return te({
                ...t,
                orderBy: t.orderBy ? mh.cloneWithItems(t.orderBy, e) : mh.create(e)
            });
        },
        cloneWithFilter (t, e) {
            return te({
                ...t,
                filter: t.filter ? ha.cloneWithOperation(t.filter, "And", e) : ha.create(e)
            });
        },
        cloneWithOrFilter (t, e) {
            return te({
                ...t,
                filter: t.filter ? ha.cloneWithOperation(t.filter, "Or", e) : ha.create(e)
            });
        },
        cloneWithOver (t, e) {
            return te({
                ...t,
                over: e
            });
        }
    }), rF = te({
        is (t) {
            return t.kind === "FunctionNode";
        },
        create (t, e) {
            return te({
                kind: "FunctionNode",
                func: t,
                arguments: e
            });
        }
    });
    class Sl {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        get expressionType() {}
        as(e) {
            return new $Q(this, e);
        }
        distinct() {
            return new Sl({
                ...this.#e,
                aggregateFunctionNode: Xf.cloneWithDistinct(this.#e.aggregateFunctionNode)
            });
        }
        orderBy(e, n) {
            return new Sl({
                ...this.#e,
                aggregateFunctionNode: Xf.cloneWithOrderBy(this.#e.aggregateFunctionNode, gw([
                    e,
                    n
                ]))
            });
        }
        filterWhere(...e) {
            return new Sl({
                ...this.#e,
                aggregateFunctionNode: Xf.cloneWithFilter(this.#e.aggregateFunctionNode, Hs(e))
            });
        }
        filterWhereRef(e, n, r) {
            return new Sl({
                ...this.#e,
                aggregateFunctionNode: Xf.cloneWithFilter(this.#e.aggregateFunctionNode, du(e, n, r))
            });
        }
        over(e) {
            const n = FQ();
            return new Sl({
                ...this.#e,
                aggregateFunctionNode: Xf.cloneWithOver(this.#e.aggregateFunctionNode, (e ? e(n) : n).toOperationNode())
            });
        }
        $call(e) {
            return e(this);
        }
        $castTo() {
            return new Sl(this.#e);
        }
        $notNull() {
            return new Sl(this.#e);
        }
        toOperationNode() {
            return this.#e.aggregateFunctionNode;
        }
    }
    Wn(Sl, "don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");
    class $Q {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return Mh.create(this.#e.toOperationNode(), ri.create(this.#t));
        }
    }
    function XU() {
        const t = (n, r)=>new kr(rF.create(n, ub(r ?? []))), e = (n, r)=>new Sl({
                aggregateFunctionNode: Xf.create(n, r ? ub(r) : void 0)
            });
        return Object.assign(t, {
            agg: e,
            avg (n) {
                return e("avg", [
                    n
                ]);
            },
            coalesce (...n) {
                return t("coalesce", n);
            },
            count (n) {
                return e("count", [
                    n
                ]);
            },
            countAll (n) {
                return new Sl({
                    aggregateFunctionNode: Xf.create("count", fu(n))
                });
            },
            max (n) {
                return e("max", [
                    n
                ]);
            },
            min (n) {
                return e("min", [
                    n
                ]);
            },
            sum (n) {
                return e("sum", [
                    n
                ]);
            },
            any (n) {
                return t("any", [
                    n
                ]);
            },
            jsonAgg (n) {
                return new Sl({
                    aggregateFunctionNode: Xf.create("json_agg", [
                        Za(n) ? Di(n) : n.toOperationNode()
                    ])
                });
            },
            toJson (n) {
                return new kr(rF.create("to_json", [
                    Za(n) ? Di(n) : n.toOperationNode()
                ]));
            }
        });
    }
    const GQ = te({
        is (t) {
            return t.kind === "UnaryOperationNode";
        },
        create (t, e) {
            return te({
                kind: "UnaryOperationNode",
                operator: t,
                operand: e
            });
        }
    });
    function XQ(t, e) {
        return GQ.create(ph.create(t), Ha(e));
    }
    const tu = te({
        is (t) {
            return t.kind === "CaseNode";
        },
        create (t) {
            return te({
                kind: "CaseNode",
                value: t
            });
        },
        cloneWithWhen (t, e) {
            return te({
                ...t,
                when: te(t.when ? [
                    ...t.when,
                    e
                ] : [
                    e
                ])
            });
        },
        cloneWithThen (t, e) {
            return te({
                ...t,
                when: t.when ? te([
                    ...t.when.slice(0, -1),
                    yw.cloneWithResult(t.when[t.when.length - 1], e)
                ]) : void 0
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    });
    class KU {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        when(...e) {
            return new YU({
                ...this.#e,
                node: tu.cloneWithWhen(this.#e.node, yw.create(Hs(e)))
            });
        }
    }
    class YU {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        then(e) {
            return new KQ({
                ...this.#e,
                node: tu.cloneWithThen(this.#e.node, MP(e) ? TP(e) : Yi(e))
            });
        }
    }
    class KQ {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        when(...e) {
            return new YU({
                ...this.#e,
                node: tu.cloneWithWhen(this.#e.node, yw.create(Hs(e)))
            });
        }
        else(e) {
            return new YQ({
                ...this.#e,
                node: tu.cloneWith(this.#e.node, {
                    else: MP(e) ? TP(e) : Yi(e)
                })
            });
        }
        end() {
            return new kr(tu.cloneWith(this.#e.node, {
                isStatement: !1
            }));
        }
        endCase() {
            return new kr(tu.cloneWith(this.#e.node, {
                isStatement: !0
            }));
        }
    }
    class YQ {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        end() {
            return new kr(tu.cloneWith(this.#e.node, {
                isStatement: !1
            }));
        }
        endCase() {
            return new kr(tu.cloneWith(this.#e.node, {
                isStatement: !0
            }));
        }
    }
    const iF = te({
        is (t) {
            return t.kind === "JSONPathLegNode";
        },
        create (t, e) {
            return te({
                kind: "JSONPathLegNode",
                type: t,
                value: e
            });
        }
    });
    class KN {
        #e;
        constructor(e){
            this.#e = e;
        }
        at(e) {
            return this.#t("ArrayLocation", e);
        }
        key(e) {
            return this.#t("Member", e);
        }
        #t(e, n) {
            return IE.is(this.#e) ? new hb(IE.cloneWithTraversal(this.#e, zx.is(this.#e.traversal) ? zx.cloneWithLeg(this.#e.traversal, iF.create(e, n)) : OU.cloneWithValue(this.#e.traversal, uu.createImmediate(n)))) : new hb(zx.cloneWithLeg(this.#e, iF.create(e, n)));
        }
    }
    class hb extends KN {
        #e;
        constructor(e){
            super(e), this.#e = e;
        }
        get expressionType() {}
        as(e) {
            return new ZQ(this, e);
        }
        $castTo() {
            return new hb(this.#e);
        }
        $notNull() {
            return new hb(this.#e);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    class ZQ {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        toOperationNode() {
            return Mh.create(this.#e.toOperationNode(), Sa(this.#t) ? this.#t.toOperationNode() : ri.create(this.#t));
        }
    }
    const sF = te({
        is (t) {
            return t.kind === "TupleNode";
        },
        create (t) {
            return te({
                kind: "TupleNode",
                values: te(t)
            });
        }
    }), JQ = [
        "varchar",
        "char",
        "text",
        "integer",
        "int2",
        "int4",
        "int8",
        "smallint",
        "bigint",
        "boolean",
        "real",
        "double precision",
        "float4",
        "float8",
        "decimal",
        "numeric",
        "binary",
        "bytea",
        "date",
        "datetime",
        "time",
        "timetz",
        "timestamp",
        "timestamptz",
        "serial",
        "bigserial",
        "uuid",
        "json",
        "jsonb",
        "blob",
        "varbinary",
        "int4range",
        "int4multirange",
        "int8range",
        "int8multirange",
        "numrange",
        "nummultirange",
        "tsrange",
        "tsmultirange",
        "tstzrange",
        "tstzmultirange",
        "daterange",
        "datemultirange"
    ], QQ = [
        /^varchar\(\d+\)$/,
        /^char\(\d+\)$/,
        /^decimal\(\d+, \d+\)$/,
        /^numeric\(\d+, \d+\)$/,
        /^binary\(\d+\)$/,
        /^datetime\(\d+\)$/,
        /^time\(\d+\)$/,
        /^timetz\(\d+\)$/,
        /^timestamp\(\d+\)$/,
        /^timestamptz\(\d+\)$/,
        /^varbinary\(\d+\)$/
    ], eee = te({
        is (t) {
            return t.kind === "DataTypeNode";
        },
        create (t) {
            return te({
                kind: "DataTypeNode",
                dataType: t
            });
        }
    });
    function tee(t) {
        return !!(JQ.includes(t) || QQ.some((e)=>e.test(t)));
    }
    function xm(t) {
        if (Sa(t)) return t.toOperationNode();
        if (tee(t)) return eee.create(t);
        throw new Error(`invalid column data type ${JSON.stringify(t)}`);
    }
    const nee = te({
        is (t) {
            return t.kind === "CastNode";
        },
        create (t, e) {
            return te({
                kind: "CastNode",
                expression: t,
                dataType: e
            });
        }
    });
    function NP(t = IT) {
        function e(i, s, o) {
            return new kr(CP(i, s, o));
        }
        function n(i, s) {
            return new kr(XQ(i, s));
        }
        const r = Object.assign(e, {
            fn: void 0,
            eb: void 0,
            selectFrom (i) {
                return XN({
                    queryId: Cr(),
                    executor: t,
                    queryNode: Mr.createFrom(pb(i))
                });
            },
            case (i) {
                return new KU({
                    node: tu.create(nh(i) ? void 0 : Ha(i))
                });
            },
            ref (i, s) {
                return nh(s) ? new kr(Nd(i)) : new KN(nQ(i, s));
            },
            jsonPath () {
                return new KN(zx.create());
            },
            table (i) {
                return new kr(Di(i));
            },
            val (i) {
                return new kr(Yi(i));
            },
            refTuple (...i) {
                return new kr(sF.create(i.map(Ha)));
            },
            tuple (...i) {
                return new kr(sF.create(i.map(Yi)));
            },
            lit (i) {
                return new kr(TP(i));
            },
            unary: n,
            not (i) {
                return n("not", i);
            },
            exists (i) {
                return n("exists", i);
            },
            neg (i) {
                return n("-", i);
            },
            between (i, s, o) {
                return new kr(oy.create(Ha(i), ph.create("between"), hh.create(Yi(s), Yi(o))));
            },
            betweenSymmetric (i, s, o) {
                return new kr(oy.create(Ha(i), ph.create("between symmetric"), hh.create(Yi(s), Yi(o))));
            },
            and (i) {
                return Ad(i) ? new kr(NE(i, "and")) : new kr(zL(i, "and"));
            },
            or (i) {
                return Ad(i) ? new kr(NE(i, "or")) : new kr(zL(i, "or"));
            },
            parens (...i) {
                const s = Hs(i);
                return ay.is(s) ? new kr(s) : new kr(ay.create(s));
            },
            cast (i, s) {
                return new kr(nee.create(Ha(i), xm(s)));
            },
            withSchema (i) {
                return NP(t.withPluginAtFront(new bw(i)));
            }
        });
        return r.fn = XU(), r.eb = r, r;
    }
    function Ly(t) {
        return NP();
    }
    function Lm(t) {
        if (Sa(t)) return t.toOperationNode();
        if (nl(t)) return t(Ly()).toOperationNode();
        throw new Error(`invalid expression: ${JSON.stringify(t)}`);
    }
    function ZU(t) {
        if (Sa(t)) return t.toOperationNode();
        if (nl(t)) return t(Ly()).toOperationNode();
        throw new Error(`invalid aliased expression: ${JSON.stringify(t)}`);
    }
    function ww(t) {
        return $J(t) || GJ(t) || nl(t);
    }
    function pb(t) {
        return Ad(t) ? t.map((e)=>mb(e)) : [
            mb(t)
        ];
    }
    function mb(t) {
        return Za(t) ? JU(t) : ZU(t);
    }
    function JU(t) {
        const e = " as ";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(QU);
            return Mh.create(Di(n), ri.create(r));
        } else return Di(t);
    }
    function Di(t) {
        const e = ".";
        if (t.includes(e)) {
            const [n, r] = t.split(e).map(QU);
            return ih.createWithSchema(n, r);
        } else return ih.create(t);
    }
    function QU(t) {
        return t.trim();
    }
    const e9 = te({
        is (t) {
            return t.kind === "AddColumnNode";
        },
        create (t) {
            return te({
                kind: "AddColumnNode",
                column: t
            });
        }
    }), ni = te({
        is (t) {
            return t.kind === "ColumnDefinitionNode";
        },
        create (t, e) {
            return te({
                kind: "ColumnDefinitionNode",
                column: ji.create(t),
                dataType: e
            });
        },
        cloneWithFrontModifier (t, e) {
            return te({
                ...t,
                frontModifiers: t.frontModifiers ? te([
                    ...t.frontModifiers,
                    e
                ]) : [
                    e
                ]
            });
        },
        cloneWithEndModifier (t, e) {
            return te({
                ...t,
                endModifiers: t.endModifiers ? te([
                    ...t.endModifiers,
                    e
                ]) : [
                    e
                ]
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), t9 = te({
        is (t) {
            return t.kind === "DropColumnNode";
        },
        create (t) {
            return te({
                kind: "DropColumnNode",
                column: ji.create(t)
            });
        }
    }), n9 = te({
        is (t) {
            return t.kind === "RenameColumnNode";
        },
        create (t, e) {
            return te({
                kind: "RenameColumnNode",
                column: ji.create(t),
                renameTo: ji.create(e)
            });
        }
    }), PP = te({
        is (t) {
            return t.kind === "CheckConstraintNode";
        },
        create (t, e) {
            return te({
                kind: "CheckConstraintNode",
                expression: t,
                name: e ? ri.create(e) : void 0
            });
        }
    }), ree = [
        "no action",
        "restrict",
        "cascade",
        "set null",
        "set default"
    ], IS = te({
        is (t) {
            return t.kind === "ReferencesNode";
        },
        create (t, e) {
            return te({
                kind: "ReferencesNode",
                table: t,
                columns: te([
                    ...e
                ])
            });
        },
        cloneWithOnDelete (t, e) {
            return te({
                ...t,
                onDelete: e
            });
        },
        cloneWithOnUpdate (t, e) {
            return te({
                ...t,
                onUpdate: e
            });
        }
    });
    function r9(t) {
        return Sa(t) ? t.toOperationNode() : uu.createImmediate(t);
    }
    const s1 = te({
        is (t) {
            return t.kind === "GeneratedNode";
        },
        create (t) {
            return te({
                kind: "GeneratedNode",
                ...t
            });
        },
        createWithExpression (t) {
            return te({
                kind: "GeneratedNode",
                always: !0,
                expression: t
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), iee = te({
        is (t) {
            return t.kind === "DefaultValueNode";
        },
        create (t) {
            return te({
                kind: "DefaultValueNode",
                defaultValue: t
            });
        }
    });
    function LE(t) {
        if (ree.includes(t)) return t;
        throw new Error(`invalid OnModifyForeignAction ${t}`);
    }
    class Ur {
        #e;
        constructor(e){
            this.#e = e;
        }
        autoIncrement() {
            return new Ur(ni.cloneWith(this.#e, {
                autoIncrement: !0
            }));
        }
        identity() {
            return new Ur(ni.cloneWith(this.#e, {
                identity: !0
            }));
        }
        primaryKey() {
            return new Ur(ni.cloneWith(this.#e, {
                primaryKey: !0
            }));
        }
        references(e) {
            const n = Nd(e);
            if (!n.table || _P.is(n.column)) throw new Error(`invalid call references('${e}'). The reference must have format table.column or schema.table.column`);
            return new Ur(ni.cloneWith(this.#e, {
                references: IS.create(n.table, [
                    n.column
                ])
            }));
        }
        onDelete(e) {
            if (!this.#e.references) throw new Error("on delete constraint can only be added for foreign keys");
            return new Ur(ni.cloneWith(this.#e, {
                references: IS.cloneWithOnDelete(this.#e.references, LE(e))
            }));
        }
        onUpdate(e) {
            if (!this.#e.references) throw new Error("on update constraint can only be added for foreign keys");
            return new Ur(ni.cloneWith(this.#e, {
                references: IS.cloneWithOnUpdate(this.#e.references, LE(e))
            }));
        }
        unique() {
            return new Ur(ni.cloneWith(this.#e, {
                unique: !0
            }));
        }
        notNull() {
            return new Ur(ni.cloneWith(this.#e, {
                notNull: !0
            }));
        }
        unsigned() {
            return new Ur(ni.cloneWith(this.#e, {
                unsigned: !0
            }));
        }
        defaultTo(e) {
            return new Ur(ni.cloneWith(this.#e, {
                defaultTo: iee.create(r9(e))
            }));
        }
        check(e) {
            return new Ur(ni.cloneWith(this.#e, {
                check: PP.create(e.toOperationNode())
            }));
        }
        generatedAlwaysAs(e) {
            return new Ur(ni.cloneWith(this.#e, {
                generated: s1.createWithExpression(e.toOperationNode())
            }));
        }
        generatedAlwaysAsIdentity() {
            return new Ur(ni.cloneWith(this.#e, {
                generated: s1.create({
                    identity: !0,
                    always: !0
                })
            }));
        }
        generatedByDefaultAsIdentity() {
            return new Ur(ni.cloneWith(this.#e, {
                generated: s1.create({
                    identity: !0,
                    byDefault: !0
                })
            }));
        }
        stored() {
            if (!this.#e.generated) throw new Error("stored() can only be called after generatedAlwaysAs");
            return new Ur(ni.cloneWith(this.#e, {
                generated: s1.cloneWith(this.#e.generated, {
                    stored: !0
                })
            }));
        }
        modifyFront(e) {
            return new Ur(ni.cloneWithFrontModifier(this.#e, e.toOperationNode()));
        }
        nullsNotDistinct() {
            return new Ur(ni.cloneWith(this.#e, {
                nullsNotDistinct: !0
            }));
        }
        ifNotExists() {
            return new Ur(ni.cloneWith(this.#e, {
                ifNotExists: !0
            }));
        }
        modifyEnd(e) {
            return new Ur(ni.cloneWithEndModifier(this.#e, e.toOperationNode()));
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    Wn(Ur, "don't await ColumnDefinitionBuilder instances directly.");
    const i9 = te({
        is (t) {
            return t.kind === "ModifyColumnNode";
        },
        create (t) {
            return te({
                kind: "ModifyColumnNode",
                column: t
            });
        }
    }), FE = te({
        is (t) {
            return t.kind === "ForeignKeyConstraintNode";
        },
        create (t, e, n, r) {
            return te({
                kind: "ForeignKeyConstraintNode",
                columns: t,
                references: IS.create(e, n),
                name: r ? ri.create(r) : void 0
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    });
    class ly {
        #e;
        constructor(e){
            this.#e = e;
        }
        onDelete(e) {
            return new ly(FE.cloneWith(this.#e, {
                onDelete: LE(e)
            }));
        }
        onUpdate(e) {
            return new ly(FE.cloneWith(this.#e, {
                onUpdate: LE(e)
            }));
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e;
        }
    }
    Wn(ly, "don't await ForeignKeyConstraintBuilder instances directly.");
    const AS = te({
        is (t) {
            return t.kind === "AddConstraintNode";
        },
        create (t) {
            return te({
                kind: "AddConstraintNode",
                constraint: t
            });
        }
    }), kP = te({
        is (t) {
            return t.kind === "UniqueConstraintNode";
        },
        create (t, e, n) {
            return te({
                kind: "UniqueConstraintNode",
                columns: te(t.map(ji.create)),
                name: e ? ri.create(e) : void 0,
                nullsNotDistinct: n
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), NS = te({
        is (t) {
            return t.kind === "DropConstraintNode";
        },
        create (t) {
            return te({
                kind: "DropConstraintNode",
                constraintName: ri.create(t)
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    }), Hv = te({
        is (t) {
            return t.kind === "AlterColumnNode";
        },
        create (t, e, n) {
            return te({
                kind: "AlterColumnNode",
                column: ji.create(t),
                [e]: n
            });
        }
    });
    class OP {
        #e;
        constructor(e){
            this.#e = e;
        }
        setDataType(e) {
            return new b0(Hv.create(this.#e, "dataType", xm(e)));
        }
        setDefault(e) {
            return new b0(Hv.create(this.#e, "setDefault", r9(e)));
        }
        dropDefault() {
            return new b0(Hv.create(this.#e, "dropDefault", !0));
        }
        setNotNull() {
            return new b0(Hv.create(this.#e, "setNotNull", !0));
        }
        dropNotNull() {
            return new b0(Hv.create(this.#e, "dropNotNull", !0));
        }
        $call(e) {
            return e(this);
        }
    }
    Wn(OP, "don't await AlterColumnBuilder instances");
    class b0 {
        #e;
        constructor(e){
            this.#e = e;
        }
        toOperationNode() {
            return this.#e;
        }
    }
    Wn(b0, "don't await AlteredColumnBuilder instances");
    class Fp {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(Fp, "don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");
    class gb {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        onDelete(e) {
            return new gb({
                ...this.#e,
                constraintBuilder: this.#e.constraintBuilder.onDelete(e)
            });
        }
        onUpdate(e) {
            return new gb({
                ...this.#e,
                constraintBuilder: this.#e.constraintBuilder.onUpdate(e)
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(Tr.cloneWithTableProps(this.#e.node, {
                addConstraint: AS.create(this.#e.constraintBuilder.toOperationNode())
            }), this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(gb, "don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");
    class K0 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        ifExists() {
            return new K0({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: NS.cloneWith(this.#e.node.dropConstraint, {
                        ifExists: !0
                    })
                })
            });
        }
        cascade() {
            return new K0({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: NS.cloneWith(this.#e.node.dropConstraint, {
                        modifier: "cascade"
                    })
                })
            });
        }
        restrict() {
            return new K0({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: NS.cloneWith(this.#e.node.dropConstraint, {
                        modifier: "restrict"
                    })
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(K0, "don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");
    const s9 = te({
        is (t) {
            return t.kind === "PrimaryKeyConstraintNode";
        },
        create (t, e) {
            return te({
                kind: "PrimaryKeyConstraintNode",
                columns: te(t.map(ji.create)),
                name: e ? ri.create(e) : void 0
            });
        }
    }), w0 = te({
        is (t) {
            return t.kind === "AddIndexNode";
        },
        create (t) {
            return te({
                kind: "AddIndexNode",
                name: ri.create(t)
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        },
        cloneWithColumns (t, e) {
            return te({
                ...t,
                columns: [
                    ...t.columns || [],
                    ...e
                ]
            });
        }
    });
    class Kf {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        unique() {
            return new Kf({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addIndex: w0.cloneWith(this.#e.node.addIndex, {
                        unique: !0
                    })
                })
            });
        }
        column(e) {
            return new Kf({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addIndex: w0.cloneWithColumns(this.#e.node.addIndex, [
                        AE(e)
                    ])
                })
            });
        }
        columns(e) {
            return new Kf({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addIndex: w0.cloneWithColumns(this.#e.node.addIndex, e.map(AE))
                })
            });
        }
        expression(e) {
            return new Kf({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addIndex: w0.cloneWithColumns(this.#e.node.addIndex, [
                        e.toOperationNode()
                    ])
                })
            });
        }
        using(e) {
            return new Kf({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addIndex: w0.cloneWith(this.#e.node.addIndex, {
                        using: oo.createWithSql(e)
                    })
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(Kf, "don't await AlterTableAddIndexBuilder instances directly. To execute the query you need to call `execute`");
    class _w {
        #e;
        constructor(e){
            this.#e = e;
        }
        toOperationNode() {
            return this.#e;
        }
        nullsNotDistinct() {
            return new _w(kP.cloneWith(this.#e, {
                nullsNotDistinct: !0
            }));
        }
    }
    Wn(_w, "don't await UniqueConstraintNodeBuilder instances directly.");
    class o9 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        renameTo(e) {
            return new Fp({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    renameTo: Di(e)
                })
            });
        }
        setSchema(e) {
            return new Fp({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    setSchema: ri.create(e)
                })
            });
        }
        alterColumn(e, n) {
            const r = n(new OP(e));
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, r.toOperationNode())
            });
        }
        dropColumn(e) {
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, t9.create(e))
            });
        }
        renameColumn(e, n) {
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, n9.create(e, n))
            });
        }
        addColumn(e, n, r = rh) {
            const i = r(new Ur(ni.create(e, xm(n))));
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, e9.create(i.toOperationNode()))
            });
        }
        modifyColumn(e, n, r = rh) {
            const i = r(new Ur(ni.create(e, xm(n))));
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, i9.create(i.toOperationNode()))
            });
        }
        addUniqueConstraint(e, n, r = rh) {
            const i = r(new _w(kP.create(n, e)));
            return new Fp({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addConstraint: AS.create(i.toOperationNode())
                })
            });
        }
        addCheckConstraint(e, n) {
            return new Fp({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addConstraint: AS.create(PP.create(n.toOperationNode(), e))
                })
            });
        }
        addForeignKeyConstraint(e, n, r, i) {
            return new gb({
                ...this.#e,
                constraintBuilder: new ly(FE.create(n.map(ji.create), Di(r), i.map(ji.create), e))
            });
        }
        addPrimaryKeyConstraint(e, n) {
            return new Fp({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addConstraint: AS.create(s9.create(n, e))
                })
            });
        }
        dropConstraint(e) {
            return new K0({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    dropConstraint: NS.create(e)
                })
            });
        }
        addIndex(e) {
            return new Kf({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    addIndex: w0.create(e)
                })
            });
        }
        dropIndex(e) {
            return new Fp({
                ...this.#e,
                node: Tr.cloneWithTableProps(this.#e.node, {
                    dropIndex: Bx.create(e)
                })
            });
        }
        $call(e) {
            return e(this);
        }
    }
    Wn(o9, "don't await AlterTableBuilder instances");
    class Ml {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        alterColumn(e, n) {
            const r = n(new OP(e));
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, r.toOperationNode())
            });
        }
        dropColumn(e) {
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, t9.create(e))
            });
        }
        renameColumn(e, n) {
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, n9.create(e, n))
            });
        }
        addColumn(e, n, r = rh) {
            const i = r(new Ur(ni.create(e, xm(n))));
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, e9.create(i.toOperationNode()))
            });
        }
        modifyColumn(e, n, r = rh) {
            const i = r(new Ur(ni.create(e, xm(n))));
            return new Ml({
                ...this.#e,
                node: Tr.cloneWithColumnAlteration(this.#e.node, i9.create(i.toOperationNode()))
            });
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(Ml, "don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");
    class a9 extends WU {
        transformValue(e) {
            return {
                ...super.transformValue(e),
                immediate: !0
            };
        }
    }
    class xl {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        ifNotExists() {
            return new xl({
                ...this.#e,
                node: dd.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        unique() {
            return new xl({
                ...this.#e,
                node: dd.cloneWith(this.#e.node, {
                    unique: !0
                })
            });
        }
        nullsNotDistinct() {
            return new xl({
                ...this.#e,
                node: dd.cloneWith(this.#e.node, {
                    nullsNotDistinct: !0
                })
            });
        }
        on(e) {
            return new xl({
                ...this.#e,
                node: dd.cloneWith(this.#e.node, {
                    table: Di(e)
                })
            });
        }
        column(e) {
            return new xl({
                ...this.#e,
                node: dd.cloneWithColumns(this.#e.node, [
                    AE(e)
                ])
            });
        }
        columns(e) {
            return new xl({
                ...this.#e,
                node: dd.cloneWithColumns(this.#e.node, e.map(AE))
            });
        }
        expression(e) {
            return new xl({
                ...this.#e,
                node: dd.cloneWithColumns(this.#e.node, [
                    e.toOperationNode()
                ])
            });
        }
        using(e) {
            return new xl({
                ...this.#e,
                node: dd.cloneWith(this.#e.node, {
                    using: oo.createWithSql(e)
                })
            });
        }
        where(...e) {
            const n = new a9;
            return new xl({
                ...this.#e,
                node: zt.cloneWithWhere(this.#e.node, n.transformNode(Hs(e)))
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(xl, "don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");
    class AT {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        ifNotExists() {
            return new AT({
                ...this.#e,
                node: IU.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(AT, "don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");
    function see(t) {
        if (HJ.includes(t)) return t;
        throw new Error(`invalid OnCommitAction ${t}`);
    }
    class ua {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        temporary() {
            return new ua({
                ...this.#e,
                node: za.cloneWith(this.#e.node, {
                    temporary: !0
                })
            });
        }
        onCommit(e) {
            return new ua({
                ...this.#e,
                node: za.cloneWith(this.#e.node, {
                    onCommit: see(e)
                })
            });
        }
        ifNotExists() {
            return new ua({
                ...this.#e,
                node: za.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        addColumn(e, n, r = rh) {
            const i = r(new Ur(ni.create(e, xm(n))));
            return new ua({
                ...this.#e,
                node: za.cloneWithColumn(this.#e.node, i.toOperationNode())
            });
        }
        addPrimaryKeyConstraint(e, n) {
            return new ua({
                ...this.#e,
                node: za.cloneWithConstraint(this.#e.node, s9.create(n, e))
            });
        }
        addUniqueConstraint(e, n, r = rh) {
            const i = r(new _w(kP.create(n, e)));
            return new ua({
                ...this.#e,
                node: za.cloneWithConstraint(this.#e.node, i.toOperationNode())
            });
        }
        addCheckConstraint(e, n) {
            return new ua({
                ...this.#e,
                node: za.cloneWithConstraint(this.#e.node, PP.create(n.toOperationNode(), e))
            });
        }
        addForeignKeyConstraint(e, n, r, i, s = rh) {
            const o = s(new ly(FE.create(n.map(ji.create), Di(r), i.map(ji.create), e)));
            return new ua({
                ...this.#e,
                node: za.cloneWithConstraint(this.#e.node, o.toOperationNode())
            });
        }
        modifyFront(e) {
            return new ua({
                ...this.#e,
                node: za.cloneWithFrontModifier(this.#e.node, e.toOperationNode())
            });
        }
        modifyEnd(e) {
            return new ua({
                ...this.#e,
                node: za.cloneWithEndModifier(this.#e.node, e.toOperationNode())
            });
        }
        as(e) {
            return new ua({
                ...this.#e,
                node: za.cloneWith(this.#e.node, {
                    selectQuery: Lm(e)
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(ua, "don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");
    class Y0 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        on(e) {
            return new Y0({
                ...this.#e,
                node: Bx.cloneWith(this.#e.node, {
                    table: Di(e)
                })
            });
        }
        ifExists() {
            return new Y0({
                ...this.#e,
                node: Bx.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new Y0({
                ...this.#e,
                node: Bx.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(Y0, "don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");
    class yb {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        ifExists() {
            return new yb({
                ...this.#e,
                node: VN.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new yb({
                ...this.#e,
                node: VN.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(yb, "don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");
    class vb {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        ifExists() {
            return new vb({
                ...this.#e,
                node: WN.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new vb({
                ...this.#e,
                node: WN.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(vb, "don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");
    const Wf = te({
        is (t) {
            return t.kind === "CreateViewNode";
        },
        create (t) {
            return te({
                kind: "CreateViewNode",
                name: fh.create(t)
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    });
    class oee {
        #e = new a9;
        transformQuery(e) {
            return this.#e.transformNode(e.node);
        }
        transformResult(e) {
            return Promise.resolve(e.result);
        }
    }
    class md {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        temporary() {
            return new md({
                ...this.#e,
                node: Wf.cloneWith(this.#e.node, {
                    temporary: !0
                })
            });
        }
        materialized() {
            return new md({
                ...this.#e,
                node: Wf.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        ifNotExists() {
            return new md({
                ...this.#e,
                node: Wf.cloneWith(this.#e.node, {
                    ifNotExists: !0
                })
            });
        }
        orReplace() {
            return new md({
                ...this.#e,
                node: Wf.cloneWith(this.#e.node, {
                    orReplace: !0
                })
            });
        }
        columns(e) {
            return new md({
                ...this.#e,
                node: Wf.cloneWith(this.#e.node, {
                    columns: e.map(LU)
                })
            });
        }
        as(e) {
            const n = e.withPlugin(new oee).toOperationNode();
            return new md({
                ...this.#e,
                node: Wf.cloneWith(this.#e.node, {
                    as: n
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(md, "don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");
    const PS = te({
        is (t) {
            return t.kind === "DropViewNode";
        },
        create (t) {
            return te({
                kind: "DropViewNode",
                name: fh.create(t)
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    });
    class Z0 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        materialized() {
            return new Z0({
                ...this.#e,
                node: PS.cloneWith(this.#e.node, {
                    materialized: !0
                })
            });
        }
        ifExists() {
            return new Z0({
                ...this.#e,
                node: PS.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        cascade() {
            return new Z0({
                ...this.#e,
                node: PS.cloneWith(this.#e.node, {
                    cascade: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(Z0, "don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");
    const l9 = te({
        is (t) {
            return t.kind === "CreateTypeNode";
        },
        create (t) {
            return te({
                kind: "CreateTypeNode",
                name: t
            });
        },
        cloneWithEnum (t, e) {
            return te({
                ...t,
                enum: EP.create(e.map((n)=>uu.createImmediate(n)))
            });
        }
    });
    class NT {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        asEnum(e) {
            return new NT({
                ...this.#e,
                node: l9.cloneWithEnum(this.#e.node, e)
            });
        }
        $call(e) {
            return e(this);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(NT, "don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");
    const c9 = te({
        is (t) {
            return t.kind === "DropTypeNode";
        },
        create (t) {
            return te({
                kind: "DropTypeNode",
                name: t
            });
        },
        cloneWith (t, e) {
            return te({
                ...t,
                ...e
            });
        }
    });
    class PT {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        ifExists() {
            return new PT({
                ...this.#e,
                node: c9.cloneWith(this.#e.node, {
                    ifExists: !0
                })
            });
        }
        $call(e) {
            return e(this);
        }
        toOperationNode() {
            return this.#e.executor.transformQuery(this.#e.node, this.#e.queryId);
        }
        compile() {
            return this.#e.executor.compileQuery(this.toOperationNode(), this.#e.queryId);
        }
        async execute() {
            await this.#e.executor.executeQuery(this.compile(), this.#e.queryId);
        }
    }
    Wn(PT, "don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");
    function oF(t) {
        const e = ".";
        if (t.includes(e)) {
            const n = t.split(e).map(aee);
            if (n.length === 2) return fh.createWithSchema(n[0], n[1]);
            throw new Error(`invalid schemable identifier ${t}`);
        } else return fh.create(t);
    }
    function aee(t) {
        return t.trim();
    }
    class qx {
        #e;
        constructor(e){
            this.#e = e;
        }
        createTable(e) {
            return new ua({
                queryId: Cr(),
                executor: this.#e,
                node: za.create(Di(e))
            });
        }
        dropTable(e) {
            return new vb({
                queryId: Cr(),
                executor: this.#e,
                node: WN.create(Di(e))
            });
        }
        createIndex(e) {
            return new xl({
                queryId: Cr(),
                executor: this.#e,
                node: dd.create(e)
            });
        }
        dropIndex(e) {
            return new Y0({
                queryId: Cr(),
                executor: this.#e,
                node: Bx.create(e)
            });
        }
        createSchema(e) {
            return new AT({
                queryId: Cr(),
                executor: this.#e,
                node: IU.create(e)
            });
        }
        dropSchema(e) {
            return new yb({
                queryId: Cr(),
                executor: this.#e,
                node: VN.create(e)
            });
        }
        alterTable(e) {
            return new o9({
                queryId: Cr(),
                executor: this.#e,
                node: Tr.create(Di(e))
            });
        }
        createView(e) {
            return new md({
                queryId: Cr(),
                executor: this.#e,
                node: Wf.create(e)
            });
        }
        dropView(e) {
            return new Z0({
                queryId: Cr(),
                executor: this.#e,
                node: PS.create(e)
            });
        }
        createType(e) {
            return new NT({
                queryId: Cr(),
                executor: this.#e,
                node: l9.create(oF(e))
            });
        }
        dropType(e) {
            return new PT({
                queryId: Cr(),
                executor: this.#e,
                node: c9.create(oF(e))
            });
        }
        withPlugin(e) {
            return new qx(this.#e.withPlugin(e));
        }
        withoutPlugins() {
            return new qx(this.#e.withoutPlugins());
        }
        withSchema(e) {
            return new qx(this.#e.withPluginAtFront(new bw(e)));
        }
    }
    class lee {
        ref(e) {
            return new eQ(e);
        }
    }
    class cee {
        #e;
        constructor(e){
            this.#e = e;
        }
        async provideConnection(e) {
            const n = await this.#e.acquireConnection();
            try {
                return await e(n);
            } finally{
                await this.#e.releaseConnection(n);
            }
        }
    }
    class qp extends qU {
        #e;
        #t;
        #n;
        constructor(e, n, r, i = []){
            super(i), this.#e = e, this.#t = n, this.#n = r;
        }
        get adapter() {
            return this.#t;
        }
        compileQuery(e) {
            return this.#e.compileQuery(e);
        }
        provideConnection(e) {
            return this.#n.provideConnection(e);
        }
        withPlugins(e) {
            return new qp(this.#e, this.#t, this.#n, [
                ...this.plugins,
                ...e
            ]);
        }
        withPlugin(e) {
            return new qp(this.#e, this.#t, this.#n, [
                ...this.plugins,
                e
            ]);
        }
        withPluginAtFront(e) {
            return new qp(this.#e, this.#t, this.#n, [
                e,
                ...this.plugins
            ]);
        }
        withConnectionProvider(e) {
            return new qp(this.#e, this.#t, e, [
                ...this.plugins
            ]);
        }
        withoutPlugins() {
            return new qp(this.#e, this.#t, this.#n, []);
        }
    }
    function aF() {
        return typeof performance < "u" && nl(performance.now) ? performance.now() : Date.now();
    }
    class uee {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c = new WeakSet;
        constructor(e, n){
            this.#r = !1, this.#e = e, this.#t = n;
        }
        async init() {
            if (this.#s) throw new Error("driver has already been destroyed");
            this.#n || (this.#n = this.#e.init().then(()=>{
                this.#r = !0;
            }).catch((e)=>(this.#n = void 0, Promise.reject(e)))), await this.#n;
        }
        async acquireConnection() {
            if (this.#s) throw new Error("driver has already been destroyed");
            this.#r || await this.init();
            const e = await this.#e.acquireConnection();
            return this.#c.has(e) || (this.#o() && this.#a(e), this.#c.add(e)), e;
        }
        async releaseConnection(e) {
            await this.#e.releaseConnection(e);
        }
        beginTransaction(e, n) {
            return this.#e.beginTransaction(e, n);
        }
        commitTransaction(e) {
            return this.#e.commitTransaction(e);
        }
        rollbackTransaction(e) {
            return this.#e.rollbackTransaction(e);
        }
        async destroy() {
            this.#n && (await this.#n, this.#s || (this.#s = this.#e.destroy().catch((e)=>(this.#s = void 0, Promise.reject(e)))), await this.#s);
        }
        #o() {
            return this.#t.isLevelEnabled("query") || this.#t.isLevelEnabled("error");
        }
        #a(e) {
            const n = e.executeQuery;
            e.executeQuery = async (r)=>{
                let i;
                const s = aF();
                try {
                    return await n.call(e, r);
                } catch (o) {
                    throw i = o, await this.#u(o, r, s), o;
                } finally{
                    i || await this.#l(r, s);
                }
            };
        }
        async #u(e, n, r) {
            await this.#t.error(()=>({
                    level: "error",
                    error: e,
                    query: n,
                    queryDurationMillis: this.#i(r)
                }));
        }
        async #l(e, n) {
            await this.#t.query(()=>({
                    level: "query",
                    query: e,
                    queryDurationMillis: this.#i(n)
                }));
        }
        #i(e) {
            return aF() - e;
        }
    }
    const dee = ()=>{};
    class u9 {
        #e;
        #t;
        constructor(e){
            this.#e = e;
        }
        async provideConnection(e) {
            for(; this.#t;)await this.#t.catch(dee);
            return this.#t = this.#n(e).finally(()=>{
                this.#t = void 0;
            }), this.#t;
        }
        async #n(e) {
            return await e(this.#e);
        }
    }
    const fee = [
        "read uncommitted",
        "read committed",
        "repeatable read",
        "serializable",
        "snapshot"
    ];
    te([
        "query",
        "error"
    ]);
    class hee {
        #e;
        #t;
        constructor(e){
            nl(e) ? (this.#t = e, this.#e = te({
                query: !0,
                error: !0
            })) : (this.#t = pee, this.#e = te({
                query: e.includes("query"),
                error: e.includes("error")
            }));
        }
        isLevelEnabled(e) {
            return this.#e[e];
        }
        async query(e) {
            this.#e.query && await this.#t(e());
        }
        async error(e) {
            this.#e.error && await this.#t(e());
        }
    }
    function pee(t) {
        t.level === "query" ? (console.log(`kysely:query: ${t.query.sql}`), console.log(`kysely:query: duration: ${t.queryDurationMillis.toFixed(1)}ms`)) : t.level === "error" && (t.error instanceof Error ? console.error(`kysely:error: ${t.error.stack ?? t.error.message}`) : console.error(`kysely:error: ${JSON.stringify({
            error: t.error,
            query: t.query.sql,
            queryDurationMillis: t.queryDurationMillis
        })}`));
    }
    function mee(t) {
        return Jc(t) && nl(t.compile);
    }
    let DP = class mx extends Gf {
        #e;
        constructor(e){
            let n, r;
            if (gee(e)) n = {
                executor: e.executor
            }, r = {
                ...e
            };
            else {
                const i = e.dialect, s = i.createDriver(), o = i.createQueryCompiler(), a = i.createAdapter(), l = new hee(e.log ?? []), c = new uee(s, l), u = new cee(c), f = new qp(o, a, u, e.plugins ?? []);
                n = {
                    executor: f
                }, r = {
                    config: e,
                    executor: f,
                    dialect: i,
                    driver: c
                };
            }
            super(n), this.#e = te(r);
        }
        get schema() {
            return new qx(this.#e.executor);
        }
        get dynamic() {
            return new lee;
        }
        get introspection() {
            return this.#e.dialect.createIntrospector(this.withoutPlugins());
        }
        case(e) {
            return new KU({
                node: tu.create(nh(e) ? void 0 : Lm(e))
            });
        }
        get fn() {
            return XU();
        }
        transaction() {
            return new kT({
                ...this.#e
            });
        }
        connection() {
            return new d9({
                ...this.#e
            });
        }
        withPlugin(e) {
            return new mx({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        withoutPlugins() {
            return new mx({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(e) {
            return new mx({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new bw(e))
            });
        }
        withTables() {
            return new mx({
                ...this.#e
            });
        }
        async destroy() {
            await this.#e.driver.destroy();
        }
        get isTransaction() {
            return !1;
        }
        getExecutor() {
            return this.#e.executor;
        }
        executeQuery(e, n = Cr()) {
            const r = mee(e) ? e.compile() : e;
            return this.getExecutor().executeQuery(r, n);
        }
    };
    class R0 extends DP {
        #e;
        constructor(e){
            super(e), this.#e = e;
        }
        get isTransaction() {
            return !0;
        }
        transaction() {
            throw new Error("calling the transaction method for a Transaction is not supported");
        }
        connection() {
            throw new Error("calling the connection method for a Transaction is not supported");
        }
        async destroy() {
            throw new Error("calling the destroy method for a Transaction is not supported");
        }
        withPlugin(e) {
            return new R0({
                ...this.#e,
                executor: this.#e.executor.withPlugin(e)
            });
        }
        withoutPlugins() {
            return new R0({
                ...this.#e,
                executor: this.#e.executor.withoutPlugins()
            });
        }
        withSchema(e) {
            return new R0({
                ...this.#e,
                executor: this.#e.executor.withPluginAtFront(new bw(e))
            });
        }
        withTables() {
            return new R0({
                ...this.#e
            });
        }
    }
    function gee(t) {
        return Jc(t) && Jc(t.config) && Jc(t.driver) && Jc(t.executor) && Jc(t.dialect);
    }
    class d9 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        async execute(e) {
            return this.#e.executor.provideConnection(async (n)=>{
                const r = this.#e.executor.withConnectionProvider(new u9(n)), i = new DP({
                    ...this.#e,
                    executor: r
                });
                return await e(i);
            });
        }
    }
    Wn(d9, "don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");
    class kT {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        setIsolationLevel(e) {
            return new kT({
                ...this.#e,
                isolationLevel: e
            });
        }
        async execute(e) {
            const { isolationLevel: n, ...r } = this.#e, i = {
                isolationLevel: n
            };
            return yee(i), this.#e.executor.provideConnection(async (s)=>{
                const o = this.#e.executor.withConnectionProvider(new u9(s)), a = new R0({
                    ...r,
                    executor: o
                });
                try {
                    await this.#e.driver.beginTransaction(s, i);
                    const l = await e(a);
                    return await this.#e.driver.commitTransaction(s), l;
                } catch (l) {
                    throw await this.#e.driver.rollbackTransaction(s), l;
                }
            });
        }
    }
    Wn(kT, "don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");
    function yee(t) {
        if (t.isolationLevel && !fee.includes(t.isolationLevel)) throw new Error(`invalid transaction isolation level ${t.isolationLevel}`);
    }
    class J0 {
        #e;
        constructor(e){
            this.#e = te(e);
        }
        get expressionType() {}
        get isRawBuilder() {
            return !0;
        }
        as(e) {
            return new f9(this, e);
        }
        $castTo() {
            return new J0({
                ...this.#e
            });
        }
        $notNull() {
            return new J0(this.#e);
        }
        withPlugin(e) {
            return new J0({
                ...this.#e,
                plugins: this.#e.plugins !== void 0 ? te([
                    ...this.#e.plugins,
                    e
                ]) : te([
                    e
                ])
            });
        }
        toOperationNode() {
            return this.#n(this.#t());
        }
        compile(e) {
            return this.#r(this.#t(e));
        }
        async execute(e) {
            const n = this.#t(e);
            return n.executeQuery(this.#r(n), this.#e.queryId);
        }
        #t(e) {
            const n = e !== void 0 ? e.getExecutor() : IT;
            return this.#e.plugins !== void 0 ? n.withPlugins(this.#e.plugins) : n;
        }
        #n(e) {
            return e.transformQuery(this.#e.rawNode, this.#e.queryId);
        }
        #r(e) {
            return e.compileQuery(this.#n(e), this.#e.queryId);
        }
    }
    function Cf(t) {
        return new J0(t);
    }
    Wn(J0, "don't await RawBuilder instances directly. To execute the query you need to call `execute`");
    class f9 {
        #e;
        #t;
        constructor(e, n){
            this.#e = e, this.#t = n;
        }
        get expression() {
            return this.#e;
        }
        get alias() {
            return this.#t;
        }
        get rawBuilder() {
            return this.#e;
        }
        toOperationNode() {
            return Mh.create(this.#e.toOperationNode(), Sa(this.#t) ? this.#t.toOperationNode() : ri.create(this.#t));
        }
    }
    Wn(f9, "don't await AliasedRawBuilder instances directly. AliasedRawBuilder should never be executed directly since it's always a part of another query.");
    const xi = Object.assign((t, ...e)=>Cf({
            queryId: Cr(),
            rawNode: oo.create(t, e?.map(lF) ?? [])
        }), {
        ref (t) {
            return Cf({
                queryId: Cr(),
                rawNode: oo.createWithChild(Nd(t))
            });
        },
        val (t) {
            return Cf({
                queryId: Cr(),
                rawNode: oo.createWithChild(Yi(t))
            });
        },
        value (t) {
            return this.val(t);
        },
        table (t) {
            return Cf({
                queryId: Cr(),
                rawNode: oo.createWithChild(Di(t))
            });
        },
        id (...t) {
            const e = new Array(t.length + 1).fill(".");
            return e[0] = "", e[e.length - 1] = "", Cf({
                queryId: Cr(),
                rawNode: oo.create(e, t.map(ri.create))
            });
        },
        lit (t) {
            return Cf({
                queryId: Cr(),
                rawNode: oo.createWithChild(uu.createImmediate(t))
            });
        },
        literal (t) {
            return this.lit(t);
        },
        raw (t) {
            return Cf({
                queryId: Cr(),
                rawNode: oo.createWithSql(t)
            });
        },
        join (t, e = xi`, `) {
            const n = new Array(2 * t.length - 1), r = e.toOperationNode();
            for(let i = 0; i < t.length; ++i)n[2 * i] = lF(t[i]), i !== t.length - 1 && (n[2 * i + 1] = r);
            return Cf({
                queryId: Cr(),
                rawNode: oo.createWithChildren(n)
            });
        }
    });
    function lF(t) {
        return Sa(t) ? t.toOperationNode() : Yi(t);
    }
    class vee {
        nodeStack = [];
        get parentNode() {
            return this.nodeStack[this.nodeStack.length - 2];
        }
        #e = te({
            AliasNode: this.visitAlias.bind(this),
            ColumnNode: this.visitColumn.bind(this),
            IdentifierNode: this.visitIdentifier.bind(this),
            SchemableIdentifierNode: this.visitSchemableIdentifier.bind(this),
            RawNode: this.visitRaw.bind(this),
            ReferenceNode: this.visitReference.bind(this),
            SelectQueryNode: this.visitSelectQuery.bind(this),
            SelectionNode: this.visitSelection.bind(this),
            TableNode: this.visitTable.bind(this),
            FromNode: this.visitFrom.bind(this),
            SelectAllNode: this.visitSelectAll.bind(this),
            AndNode: this.visitAnd.bind(this),
            OrNode: this.visitOr.bind(this),
            ValueNode: this.visitValue.bind(this),
            ValueListNode: this.visitValueList.bind(this),
            PrimitiveValueListNode: this.visitPrimitiveValueList.bind(this),
            ParensNode: this.visitParens.bind(this),
            JoinNode: this.visitJoin.bind(this),
            OperatorNode: this.visitOperator.bind(this),
            WhereNode: this.visitWhere.bind(this),
            InsertQueryNode: this.visitInsertQuery.bind(this),
            DeleteQueryNode: this.visitDeleteQuery.bind(this),
            ReturningNode: this.visitReturning.bind(this),
            CreateTableNode: this.visitCreateTable.bind(this),
            AddColumnNode: this.visitAddColumn.bind(this),
            ColumnDefinitionNode: this.visitColumnDefinition.bind(this),
            DropTableNode: this.visitDropTable.bind(this),
            DataTypeNode: this.visitDataType.bind(this),
            OrderByNode: this.visitOrderBy.bind(this),
            OrderByItemNode: this.visitOrderByItem.bind(this),
            GroupByNode: this.visitGroupBy.bind(this),
            GroupByItemNode: this.visitGroupByItem.bind(this),
            UpdateQueryNode: this.visitUpdateQuery.bind(this),
            ColumnUpdateNode: this.visitColumnUpdate.bind(this),
            LimitNode: this.visitLimit.bind(this),
            OffsetNode: this.visitOffset.bind(this),
            OnConflictNode: this.visitOnConflict.bind(this),
            OnDuplicateKeyNode: this.visitOnDuplicateKey.bind(this),
            CreateIndexNode: this.visitCreateIndex.bind(this),
            DropIndexNode: this.visitDropIndex.bind(this),
            ListNode: this.visitList.bind(this),
            PrimaryKeyConstraintNode: this.visitPrimaryKeyConstraint.bind(this),
            UniqueConstraintNode: this.visitUniqueConstraint.bind(this),
            ReferencesNode: this.visitReferences.bind(this),
            CheckConstraintNode: this.visitCheckConstraint.bind(this),
            WithNode: this.visitWith.bind(this),
            CommonTableExpressionNode: this.visitCommonTableExpression.bind(this),
            CommonTableExpressionNameNode: this.visitCommonTableExpressionName.bind(this),
            HavingNode: this.visitHaving.bind(this),
            CreateSchemaNode: this.visitCreateSchema.bind(this),
            DropSchemaNode: this.visitDropSchema.bind(this),
            AlterTableNode: this.visitAlterTable.bind(this),
            DropColumnNode: this.visitDropColumn.bind(this),
            RenameColumnNode: this.visitRenameColumn.bind(this),
            AlterColumnNode: this.visitAlterColumn.bind(this),
            ModifyColumnNode: this.visitModifyColumn.bind(this),
            AddConstraintNode: this.visitAddConstraint.bind(this),
            DropConstraintNode: this.visitDropConstraint.bind(this),
            ForeignKeyConstraintNode: this.visitForeignKeyConstraint.bind(this),
            CreateViewNode: this.visitCreateView.bind(this),
            DropViewNode: this.visitDropView.bind(this),
            GeneratedNode: this.visitGenerated.bind(this),
            DefaultValueNode: this.visitDefaultValue.bind(this),
            OnNode: this.visitOn.bind(this),
            ValuesNode: this.visitValues.bind(this),
            SelectModifierNode: this.visitSelectModifier.bind(this),
            CreateTypeNode: this.visitCreateType.bind(this),
            DropTypeNode: this.visitDropType.bind(this),
            ExplainNode: this.visitExplain.bind(this),
            DefaultInsertValueNode: this.visitDefaultInsertValue.bind(this),
            AggregateFunctionNode: this.visitAggregateFunction.bind(this),
            OverNode: this.visitOver.bind(this),
            PartitionByNode: this.visitPartitionBy.bind(this),
            PartitionByItemNode: this.visitPartitionByItem.bind(this),
            SetOperationNode: this.visitSetOperation.bind(this),
            BinaryOperationNode: this.visitBinaryOperation.bind(this),
            UnaryOperationNode: this.visitUnaryOperation.bind(this),
            UsingNode: this.visitUsing.bind(this),
            FunctionNode: this.visitFunction.bind(this),
            CaseNode: this.visitCase.bind(this),
            WhenNode: this.visitWhen.bind(this),
            JSONReferenceNode: this.visitJSONReference.bind(this),
            JSONPathNode: this.visitJSONPath.bind(this),
            JSONPathLegNode: this.visitJSONPathLeg.bind(this),
            JSONOperatorChainNode: this.visitJSONOperatorChain.bind(this),
            TupleNode: this.visitTuple.bind(this),
            MergeQueryNode: this.visitMergeQuery.bind(this),
            MatchedNode: this.visitMatched.bind(this),
            AddIndexNode: this.visitAddIndex.bind(this),
            CastNode: this.visitCast.bind(this),
            FetchNode: this.visitFetch.bind(this),
            TopNode: this.visitTop.bind(this),
            OutputNode: this.visitOutput.bind(this)
        });
        visitNode = (e)=>{
            this.nodeStack.push(e), this.#e[e.kind](e), this.nodeStack.pop();
        };
    }
    class xee extends vee {
        #e = "";
        #t = [];
        get numParameters() {
            return this.#t.length;
        }
        compileQuery(e) {
            return this.#e = "", this.#t = [], this.nodeStack.splice(0, this.nodeStack.length), this.visitNode(e), te({
                query: e,
                sql: this.getSql(),
                parameters: [
                    ...this.#t
                ]
            });
        }
        getSql() {
            return this.#e;
        }
        visitSelectQuery(e) {
            const n = this.parentNode !== void 0 && !ay.is(this.parentNode) && !Wa.is(this.parentNode) && !za.is(this.parentNode) && !Wf.is(this.parentNode) && !$U.is(this.parentNode);
            this.parentNode === void 0 && e.explain && (this.visitNode(e.explain), this.append(" ")), n && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append("select"), e.distinctOn && (this.append(" "), this.compileDistinctOn(e.distinctOn)), e.frontModifiers?.length && (this.append(" "), this.compileList(e.frontModifiers, " ")), e.top && (this.append(" "), this.visitNode(e.top)), e.selections && (this.append(" "), this.compileList(e.selections)), e.from && (this.append(" "), this.visitNode(e.from)), e.joins && (this.append(" "), this.compileList(e.joins, " ")), e.where && (this.append(" "), this.visitNode(e.where)), e.groupBy && (this.append(" "), this.visitNode(e.groupBy)), e.having && (this.append(" "), this.visitNode(e.having)), e.setOperations && (this.append(" "), this.compileList(e.setOperations, " ")), e.orderBy && (this.append(" "), this.visitNode(e.orderBy)), e.limit && (this.append(" "), this.visitNode(e.limit)), e.offset && (this.append(" "), this.visitNode(e.offset)), e.fetch && (this.append(" "), this.visitNode(e.fetch)), e.endModifiers?.length && (this.append(" "), this.compileList(this.sortSelectModifiers([
                ...e.endModifiers
            ]), " ")), n && this.append(")");
        }
        visitFrom(e) {
            this.append("from "), this.compileList(e.froms);
        }
        visitSelection(e) {
            this.visitNode(e.selection);
        }
        visitColumn(e) {
            this.visitNode(e.column);
        }
        compileDistinctOn(e) {
            this.append("distinct on ("), this.compileList(e), this.append(")");
        }
        compileList(e, n = ", ") {
            const r = e.length - 1;
            for(let i = 0; i <= r; i++)this.visitNode(e[i]), i < r && this.append(n);
        }
        visitWhere(e) {
            this.append("where "), this.visitNode(e.where);
        }
        visitHaving(e) {
            this.append("having "), this.visitNode(e.having);
        }
        visitInsertQuery(e) {
            const n = this.nodeStack.find(zt.is), r = n !== e;
            !r && e.explain && (this.visitNode(e.explain), this.append(" ")), r && !ya.is(n) && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append(e.replace ? "replace" : "insert"), e.ignore && this.append(" ignore"), e.top && (this.append(" "), this.visitNode(e.top)), e.into && (this.append(" into "), this.visitNode(e.into)), e.columns && (this.append(" ("), this.compileList(e.columns), this.append(")")), e.output && (this.append(" "), this.visitNode(e.output)), e.values && (this.append(" "), this.visitNode(e.values)), e.defaultValues && (this.append(" "), this.append("default values")), e.onConflict && (this.append(" "), this.visitNode(e.onConflict)), e.onDuplicateKey && (this.append(" "), this.visitNode(e.onDuplicateKey)), e.returning && (this.append(" "), this.visitNode(e.returning)), r && !ya.is(n) && this.append(")"), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitValues(e) {
            this.append("values "), this.compileList(e.values);
        }
        visitDeleteQuery(e) {
            const n = this.nodeStack.find(zt.is) !== e;
            !n && e.explain && (this.visitNode(e.explain), this.append(" ")), n && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append("delete "), e.top && (this.visitNode(e.top), this.append(" ")), this.visitNode(e.from), e.output && (this.append(" "), this.visitNode(e.output)), e.using && (this.append(" "), this.visitNode(e.using)), e.joins && (this.append(" "), this.compileList(e.joins, " ")), e.where && (this.append(" "), this.visitNode(e.where)), e.orderBy && (this.append(" "), this.visitNode(e.orderBy)), e.limit && (this.append(" "), this.visitNode(e.limit)), e.returning && (this.append(" "), this.visitNode(e.returning)), n && this.append(")"), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitReturning(e) {
            this.append("returning "), this.compileList(e.selections);
        }
        visitAlias(e) {
            this.visitNode(e.node), this.append(" as "), this.visitNode(e.alias);
        }
        visitReference(e) {
            e.table && (this.visitNode(e.table), this.append(".")), this.visitNode(e.column);
        }
        visitSelectAll(e) {
            this.append("*");
        }
        visitIdentifier(e) {
            this.append(this.getLeftIdentifierWrapper()), this.compileUnwrappedIdentifier(e), this.append(this.getRightIdentifierWrapper());
        }
        compileUnwrappedIdentifier(e) {
            if (!Za(e.name)) throw new Error("a non-string identifier was passed to compileUnwrappedIdentifier.");
            this.append(this.sanitizeIdentifier(e.name));
        }
        visitAnd(e) {
            this.visitNode(e.left), this.append(" and "), this.visitNode(e.right);
        }
        visitOr(e) {
            this.visitNode(e.left), this.append(" or "), this.visitNode(e.right);
        }
        visitValue(e) {
            e.immediate ? this.appendImmediateValue(e.value) : this.appendValue(e.value);
        }
        visitValueList(e) {
            this.append("("), this.compileList(e.values), this.append(")");
        }
        visitTuple(e) {
            this.append("("), this.compileList(e.values), this.append(")");
        }
        visitPrimitiveValueList(e) {
            this.append("(");
            const { values: n } = e;
            for(let r = 0; r < n.length; ++r)this.appendValue(n[r]), r !== n.length - 1 && this.append(", ");
            this.append(")");
        }
        visitParens(e) {
            this.append("("), this.visitNode(e.node), this.append(")");
        }
        visitJoin(e) {
            this.append(wee[e.joinType]), this.append(" "), this.visitNode(e.table), e.on && (this.append(" "), this.visitNode(e.on));
        }
        visitOn(e) {
            this.append("on "), this.visitNode(e.on);
        }
        visitRaw(e) {
            const { sqlFragments: n, parameters: r } = e;
            for(let i = 0; i < n.length; ++i)this.append(n[i]), r.length > i && this.visitNode(r[i]);
        }
        visitOperator(e) {
            this.append(e.operator);
        }
        visitTable(e) {
            this.visitNode(e.table);
        }
        visitSchemableIdentifier(e) {
            e.schema && (this.visitNode(e.schema), this.append(".")), this.visitNode(e.identifier);
        }
        visitCreateTable(e) {
            this.append("create "), e.frontModifiers && e.frontModifiers.length > 0 && (this.compileList(e.frontModifiers, " "), this.append(" ")), e.temporary && this.append("temporary "), this.append("table "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.table), e.selectQuery ? (this.append(" as "), this.visitNode(e.selectQuery)) : (this.append(" ("), this.compileList([
                ...e.columns,
                ...e.constraints ?? []
            ]), this.append(")"), e.onCommit && (this.append(" on commit "), this.append(e.onCommit)), e.endModifiers && e.endModifiers.length > 0 && (this.append(" "), this.compileList(e.endModifiers, " ")));
        }
        visitColumnDefinition(e) {
            e.ifNotExists && this.append("if not exists "), this.visitNode(e.column), this.append(" "), this.visitNode(e.dataType), e.unsigned && this.append(" unsigned"), e.frontModifiers && e.frontModifiers.length > 0 && (this.append(" "), this.compileList(e.frontModifiers, " ")), e.generated && (this.append(" "), this.visitNode(e.generated)), e.identity && this.append(" identity"), e.defaultTo && (this.append(" "), this.visitNode(e.defaultTo)), e.notNull && this.append(" not null"), e.unique && this.append(" unique"), e.nullsNotDistinct && this.append(" nulls not distinct"), e.primaryKey && this.append(" primary key"), e.autoIncrement && (this.append(" "), this.append(this.getAutoIncrement())), e.references && (this.append(" "), this.visitNode(e.references)), e.check && (this.append(" "), this.visitNode(e.check)), e.endModifiers && e.endModifiers.length > 0 && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        getAutoIncrement() {
            return "auto_increment";
        }
        visitReferences(e) {
            this.append("references "), this.visitNode(e.table), this.append(" ("), this.compileList(e.columns), this.append(")"), e.onDelete && (this.append(" on delete "), this.append(e.onDelete)), e.onUpdate && (this.append(" on update "), this.append(e.onUpdate));
        }
        visitDropTable(e) {
            this.append("drop table "), e.ifExists && this.append("if exists "), this.visitNode(e.table), e.cascade && this.append(" cascade");
        }
        visitDataType(e) {
            this.append(e.dataType);
        }
        visitOrderBy(e) {
            this.append("order by "), this.compileList(e.items);
        }
        visitOrderByItem(e) {
            this.visitNode(e.orderBy), e.direction && (this.append(" "), this.visitNode(e.direction));
        }
        visitGroupBy(e) {
            this.append("group by "), this.compileList(e.items);
        }
        visitGroupByItem(e) {
            this.visitNode(e.groupBy);
        }
        visitUpdateQuery(e) {
            const n = this.nodeStack.find(zt.is), r = n !== e;
            !r && e.explain && (this.visitNode(e.explain), this.append(" ")), r && !ya.is(n) && this.append("("), e.with && (this.visitNode(e.with), this.append(" ")), this.append("update "), e.top && (this.visitNode(e.top), this.append(" ")), e.table && (this.visitNode(e.table), this.append(" ")), this.append("set "), e.updates && this.compileList(e.updates), e.output && (this.append(" "), this.visitNode(e.output)), e.from && (this.append(" "), this.visitNode(e.from)), e.joins && (this.append(" "), this.compileList(e.joins, " ")), e.where && (this.append(" "), this.visitNode(e.where)), e.limit && (this.append(" "), this.visitNode(e.limit)), e.returning && (this.append(" "), this.visitNode(e.returning)), r && !ya.is(n) && this.append(")"), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitColumnUpdate(e) {
            this.visitNode(e.column), this.append(" = "), this.visitNode(e.value);
        }
        visitLimit(e) {
            this.append("limit "), this.visitNode(e.limit);
        }
        visitOffset(e) {
            this.append("offset "), this.visitNode(e.offset);
        }
        visitOnConflict(e) {
            this.append("on conflict"), e.columns ? (this.append(" ("), this.compileList(e.columns), this.append(")")) : e.constraint ? (this.append(" on constraint "), this.visitNode(e.constraint)) : e.indexExpression && (this.append(" ("), this.visitNode(e.indexExpression), this.append(")")), e.indexWhere && (this.append(" "), this.visitNode(e.indexWhere)), e.doNothing === !0 ? this.append(" do nothing") : e.updates && (this.append(" do update set "), this.compileList(e.updates), e.updateWhere && (this.append(" "), this.visitNode(e.updateWhere)));
        }
        visitOnDuplicateKey(e) {
            this.append("on duplicate key update "), this.compileList(e.updates);
        }
        visitCreateIndex(e) {
            this.append("create "), e.unique && this.append("unique "), this.append("index "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.name), e.table && (this.append(" on "), this.visitNode(e.table)), e.using && (this.append(" using "), this.visitNode(e.using)), e.columns && (this.append(" ("), this.compileList(e.columns), this.append(")")), e.nullsNotDistinct && this.append(" nulls not distinct"), e.where && (this.append(" "), this.visitNode(e.where));
        }
        visitDropIndex(e) {
            this.append("drop index "), e.ifExists && this.append("if exists "), this.visitNode(e.name), e.table && (this.append(" on "), this.visitNode(e.table)), e.cascade && this.append(" cascade");
        }
        visitCreateSchema(e) {
            this.append("create schema "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.schema);
        }
        visitDropSchema(e) {
            this.append("drop schema "), e.ifExists && this.append("if exists "), this.visitNode(e.schema), e.cascade && this.append(" cascade");
        }
        visitPrimaryKeyConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("primary key ("), this.compileList(e.columns), this.append(")");
        }
        visitUniqueConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("unique"), e.nullsNotDistinct && this.append(" nulls not distinct"), this.append(" ("), this.compileList(e.columns), this.append(")");
        }
        visitCheckConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("check ("), this.visitNode(e.expression), this.append(")");
        }
        visitForeignKeyConstraint(e) {
            e.name && (this.append("constraint "), this.visitNode(e.name), this.append(" ")), this.append("foreign key ("), this.compileList(e.columns), this.append(") "), this.visitNode(e.references), e.onDelete && (this.append(" on delete "), this.append(e.onDelete)), e.onUpdate && (this.append(" on update "), this.append(e.onUpdate));
        }
        visitList(e) {
            this.compileList(e.items);
        }
        visitWith(e) {
            this.append("with "), e.recursive && this.append("recursive "), this.compileList(e.expressions);
        }
        visitCommonTableExpression(e) {
            this.visitNode(e.name), this.append(" as "), RE(e.materialized) && (e.materialized || this.append("not "), this.append("materialized ")), this.visitNode(e.expression);
        }
        visitCommonTableExpressionName(e) {
            this.visitNode(e.table), e.columns && (this.append("("), this.compileList(e.columns), this.append(")"));
        }
        visitAlterTable(e) {
            this.append("alter table "), this.visitNode(e.table), this.append(" "), e.renameTo && (this.append("rename to "), this.visitNode(e.renameTo)), e.setSchema && (this.append("set schema "), this.visitNode(e.setSchema)), e.addConstraint && this.visitNode(e.addConstraint), e.dropConstraint && this.visitNode(e.dropConstraint), e.columnAlterations && this.compileColumnAlterations(e.columnAlterations), e.addIndex && this.visitNode(e.addIndex), e.dropIndex && this.visitNode(e.dropIndex);
        }
        visitAddColumn(e) {
            this.append("add column "), this.visitNode(e.column);
        }
        visitRenameColumn(e) {
            this.append("rename column "), this.visitNode(e.column), this.append(" to "), this.visitNode(e.renameTo);
        }
        visitDropColumn(e) {
            this.append("drop column "), this.visitNode(e.column);
        }
        visitAlterColumn(e) {
            this.append("alter column "), this.visitNode(e.column), this.append(" "), e.dataType && (this.announcesNewColumnDataType() && this.append("type "), this.visitNode(e.dataType), e.dataTypeExpression && (this.append("using "), this.visitNode(e.dataTypeExpression))), e.setDefault && (this.append("set default "), this.visitNode(e.setDefault)), e.dropDefault && this.append("drop default"), e.setNotNull && this.append("set not null"), e.dropNotNull && this.append("drop not null");
        }
        visitModifyColumn(e) {
            this.append("modify column "), this.visitNode(e.column);
        }
        visitAddConstraint(e) {
            this.append("add "), this.visitNode(e.constraint);
        }
        visitDropConstraint(e) {
            this.append("drop constraint "), e.ifExists && this.append("if exists "), this.visitNode(e.constraintName), e.modifier === "cascade" ? this.append(" cascade") : e.modifier === "restrict" && this.append(" restrict");
        }
        visitSetOperation(e) {
            this.append(e.operator), this.append(" "), e.all && this.append("all "), this.visitNode(e.expression);
        }
        visitCreateView(e) {
            this.append("create "), e.orReplace && this.append("or replace "), e.materialized && this.append("materialized "), e.temporary && this.append("temporary "), this.append("view "), e.ifNotExists && this.append("if not exists "), this.visitNode(e.name), this.append(" "), e.columns && (this.append("("), this.compileList(e.columns), this.append(") ")), e.as && (this.append("as "), this.visitNode(e.as));
        }
        visitDropView(e) {
            this.append("drop "), e.materialized && this.append("materialized "), this.append("view "), e.ifExists && this.append("if exists "), this.visitNode(e.name), e.cascade && this.append(" cascade");
        }
        visitGenerated(e) {
            this.append("generated "), e.always && this.append("always "), e.byDefault && this.append("by default "), this.append("as "), e.identity && this.append("identity"), e.expression && (this.append("("), this.visitNode(e.expression), this.append(")")), e.stored && this.append(" stored");
        }
        visitDefaultValue(e) {
            this.append("default "), this.visitNode(e.defaultValue);
        }
        visitSelectModifier(e) {
            e.rawModifier ? this.visitNode(e.rawModifier) : this.append(bee[e.modifier]), e.of && (this.append(" of "), this.compileList(e.of, ", "));
        }
        visitCreateType(e) {
            this.append("create type "), this.visitNode(e.name), e.enum && (this.append(" as enum "), this.visitNode(e.enum));
        }
        visitDropType(e) {
            this.append("drop type "), e.ifExists && this.append("if exists "), this.visitNode(e.name);
        }
        visitExplain(e) {
            this.append("explain"), (e.options || e.format) && (this.append(" "), this.append(this.getLeftExplainOptionsWrapper()), e.options && (this.visitNode(e.options), e.format && this.append(this.getExplainOptionsDelimiter())), e.format && (this.append("format"), this.append(this.getExplainOptionAssignment()), this.append(e.format)), this.append(this.getRightExplainOptionsWrapper()));
        }
        visitDefaultInsertValue(e) {
            this.append("default");
        }
        visitAggregateFunction(e) {
            this.append(e.func), this.append("("), e.distinct && this.append("distinct "), this.compileList(e.aggregated), e.orderBy && (this.append(" "), this.visitNode(e.orderBy)), this.append(")"), e.filter && (this.append(" filter("), this.visitNode(e.filter), this.append(")")), e.over && (this.append(" "), this.visitNode(e.over));
        }
        visitOver(e) {
            this.append("over("), e.partitionBy && (this.visitNode(e.partitionBy), e.orderBy && this.append(" ")), e.orderBy && this.visitNode(e.orderBy), this.append(")");
        }
        visitPartitionBy(e) {
            this.append("partition by "), this.compileList(e.items);
        }
        visitPartitionByItem(e) {
            this.visitNode(e.partitionBy);
        }
        visitBinaryOperation(e) {
            this.visitNode(e.leftOperand), this.append(" "), this.visitNode(e.operator), this.append(" "), this.visitNode(e.rightOperand);
        }
        visitUnaryOperation(e) {
            this.visitNode(e.operator), this.isMinusOperator(e.operator) || this.append(" "), this.visitNode(e.operand);
        }
        isMinusOperator(e) {
            return ph.is(e) && e.operator === "-";
        }
        visitUsing(e) {
            this.append("using "), this.compileList(e.tables);
        }
        visitFunction(e) {
            this.append(e.func), this.append("("), this.compileList(e.arguments), this.append(")");
        }
        visitCase(e) {
            this.append("case"), e.value && (this.append(" "), this.visitNode(e.value)), e.when && (this.append(" "), this.compileList(e.when, " ")), e.else && (this.append(" else "), this.visitNode(e.else)), this.append(" end"), e.isStatement && this.append(" case");
        }
        visitWhen(e) {
            this.append("when "), this.visitNode(e.condition), e.result && (this.append(" then "), this.visitNode(e.result));
        }
        visitJSONReference(e) {
            this.visitNode(e.reference), this.visitNode(e.traversal);
        }
        visitJSONPath(e) {
            e.inOperator && this.visitNode(e.inOperator), this.append("'$");
            for (const n of e.pathLegs)this.visitNode(n);
            this.append("'");
        }
        visitJSONPathLeg(e) {
            const n = e.type === "ArrayLocation";
            this.append(n ? "[" : "."), this.append(String(e.value)), n && this.append("]");
        }
        visitJSONOperatorChain(e) {
            for(let n = 0, r = e.values.length; n < r; n++)n === r - 1 ? this.visitNode(e.operator) : this.append("->"), this.visitNode(e.values[n]);
        }
        visitMergeQuery(e) {
            e.with && (this.visitNode(e.with), this.append(" ")), this.append("merge "), e.top && (this.visitNode(e.top), this.append(" ")), this.append("into "), this.visitNode(e.into), e.using && (this.append(" "), this.visitNode(e.using)), e.whens && (this.append(" "), this.compileList(e.whens, " ")), e.output && (this.append(" "), this.visitNode(e.output)), e.endModifiers?.length && (this.append(" "), this.compileList(e.endModifiers, " "));
        }
        visitMatched(e) {
            e.not && this.append("not "), this.append("matched"), e.bySource && this.append(" by source");
        }
        visitAddIndex(e) {
            this.append("add "), e.unique && this.append("unique "), this.append("index "), this.visitNode(e.name), e.columns && (this.append(" ("), this.compileList(e.columns), this.append(")")), e.using && (this.append(" using "), this.visitNode(e.using));
        }
        visitCast(e) {
            this.append("cast("), this.visitNode(e.expression), this.append(" as "), this.visitNode(e.dataType), this.append(")");
        }
        visitFetch(e) {
            this.append("fetch next "), this.visitNode(e.rowCount), this.append(` rows ${e.modifier}`);
        }
        visitOutput(e) {
            this.append("output "), this.compileList(e.selections);
        }
        visitTop(e) {
            this.append(`top(${e.expression})`), e.modifiers && this.append(` ${e.modifiers}`);
        }
        append(e) {
            this.#e += e;
        }
        appendValue(e) {
            this.addParameter(e), this.append(this.getCurrentParameterPlaceholder());
        }
        getLeftIdentifierWrapper() {
            return '"';
        }
        getRightIdentifierWrapper() {
            return '"';
        }
        getCurrentParameterPlaceholder() {
            return "$" + this.numParameters;
        }
        getLeftExplainOptionsWrapper() {
            return "(";
        }
        getExplainOptionAssignment() {
            return " ";
        }
        getExplainOptionsDelimiter() {
            return ", ";
        }
        getRightExplainOptionsWrapper() {
            return ")";
        }
        sanitizeIdentifier(e) {
            const n = this.getLeftIdentifierWrapper(), r = this.getRightIdentifierWrapper();
            let i = "";
            for (const s of e)i += s, s === n ? i += n : s === r && (i += r);
            return i;
        }
        addParameter(e) {
            this.#t.push(e);
        }
        appendImmediateValue(e) {
            if (Za(e)) this.append(`'${e}'`);
            else if (CT(e) || RE(e)) this.append(e.toString());
            else if (bP(e)) this.append("null");
            else if (qJ(e)) this.appendImmediateValue(e.toISOString());
            else if (wP(e)) this.appendImmediateValue(e.toString());
            else throw new Error(`invalid immediate value ${e}`);
        }
        sortSelectModifiers(e) {
            return e.sort((n, r)=>n.modifier && r.modifier ? cF[n.modifier] - cF[r.modifier] : 1), te(e);
        }
        compileColumnAlterations(e) {
            this.compileList(e);
        }
        announcesNewColumnDataType() {
            return !0;
        }
    }
    const bee = te({
        ForKeyShare: "for key share",
        ForNoKeyUpdate: "for no key update",
        ForUpdate: "for update",
        ForShare: "for share",
        NoWait: "nowait",
        SkipLocked: "skip locked",
        Distinct: "distinct"
    }), cF = te({
        ForKeyShare: 1,
        ForNoKeyUpdate: 1,
        ForUpdate: 1,
        ForShare: 1,
        NoWait: 2,
        SkipLocked: 2,
        Distinct: 0
    }), wee = te({
        InnerJoin: "inner join",
        LeftJoin: "left join",
        RightJoin: "right join",
        FullJoin: "full join",
        LateralInnerJoin: "inner join lateral",
        LateralLeftJoin: "left join lateral",
        Using: "using"
    });
    class _ee {
        get supportsCreateIfNotExists() {
            return !0;
        }
        get supportsTransactionalDdl() {
            return !1;
        }
        get supportsReturning() {
            return !1;
        }
        get supportsOutput() {
            return !1;
        }
    }
    const See = /"/g;
    class Eee extends xee {
        getCurrentParameterPlaceholder() {
            return "?";
        }
        getLeftExplainOptionsWrapper() {
            return "";
        }
        getRightExplainOptionsWrapper() {
            return "";
        }
        getLeftIdentifierWrapper() {
            return '"';
        }
        getRightIdentifierWrapper() {
            return '"';
        }
        getAutoIncrement() {
            return "autoincrement";
        }
        sanitizeIdentifier(e) {
            return e.replace(See, '""');
        }
        visitDefaultInsertValue(e) {
            this.append("null");
        }
    }
    const Mee = "kysely_migration", Tee = "kysely_migration_lock";
    te({
        __noMigrations__: !0
    });
    class Cee {
        #e;
        constructor(e){
            this.#e = e;
        }
        async getSchemas() {
            return [];
        }
        async getTables(e = {
            withInternalKyselyTables: !1
        }) {
            let n = this.#e.selectFrom("sqlite_master").where("type", "in", [
                "table",
                "view"
            ]).where("name", "not like", "sqlite_%").select("name").orderBy("name").$castTo();
            e.withInternalKyselyTables || (n = n.where("name", "!=", Mee).where("name", "!=", Tee));
            const r = await n.execute();
            return Promise.all(r.map(({ name: i })=>this.#t(i)));
        }
        async getMetadata(e) {
            return {
                tables: await this.getTables(e)
            };
        }
        async #t(e) {
            const n = this.#e, r = await n.selectFrom("sqlite_master").where("name", "=", e).select([
                "sql",
                "type"
            ]).$castTo().executeTakeFirstOrThrow(), i = r.sql?.split(/[\(\),]/)?.find((o)=>o.toLowerCase().includes("autoincrement"))?.trimStart()?.split(/\s+/)?.[0]?.replace(/["`]/g, ""), s = await n.selectFrom(xi`pragma_table_info(${e})`.as("table_info")).select([
                "name",
                "type",
                "notnull",
                "dflt_value"
            ]).orderBy("cid").execute();
            return {
                name: e,
                isView: r.type === "view",
                columns: s.map((o)=>({
                        name: o.name,
                        dataType: o.type,
                        isNullable: !o.notnull,
                        isAutoIncrementing: o.name === i,
                        hasDefaultValue: o.dflt_value != null,
                        comment: void 0
                    }))
            };
        }
    }
    class Ree extends _ee {
        get supportsTransactionalDdl() {
            return !1;
        }
        get supportsReturning() {
            return !0;
        }
        async acquireMigrationLock(e, n) {}
        async releaseMigrationLock(e, n) {}
    }
    const sh = {
        jsonObject (t) {
            const e = xi.join(Object.entries(t).map(([n, r])=>xi`${n}, ${r}`));
            return xi`json_object(${e})`;
        },
        jsonGroupArray (t) {
            return xi`json_group_array(${sh.jsonObject(t)})`;
        }
    }, h9 = {
        hash (t) {
            return zN.sha224(t);
        },
        verify (t, e) {
            return zN.sha224(t) === e;
        }
    };
    var ir;
    (function(t) {
        t.assertEqual = (i)=>i;
        function e(i) {}
        t.assertIs = e;
        function n(i) {
            throw new Error;
        }
        t.assertNever = n, t.arrayToEnum = (i)=>{
            const s = {};
            for (const o of i)s[o] = o;
            return s;
        }, t.getValidEnumValues = (i)=>{
            const s = t.objectKeys(i).filter((a)=>typeof i[i[a]] != "number"), o = {};
            for (const a of s)o[a] = i[a];
            return t.objectValues(o);
        }, t.objectValues = (i)=>t.objectKeys(i).map(function(s) {
                return i[s];
            }), t.objectKeys = typeof Object.keys == "function" ? (i)=>Object.keys(i) : (i)=>{
            const s = [];
            for(const o in i)Object.prototype.hasOwnProperty.call(i, o) && s.push(o);
            return s;
        }, t.find = (i, s)=>{
            for (const o of i)if (s(o)) return o;
        }, t.isInteger = typeof Number.isInteger == "function" ? (i)=>Number.isInteger(i) : (i)=>typeof i == "number" && isFinite(i) && Math.floor(i) === i;
        function r(i, s = " | ") {
            return i.map((o)=>typeof o == "string" ? `'${o}'` : o).join(s);
        }
        t.joinValues = r, t.jsonStringifyReplacer = (i, s)=>typeof s == "bigint" ? s.toString() : s;
    })(ir || (ir = {}));
    var YN;
    (function(t) {
        t.mergeShapes = (e, n)=>({
                ...e,
                ...n
            });
    })(YN || (YN = {}));
    const Ft = ir.arrayToEnum([
        "string",
        "nan",
        "number",
        "integer",
        "float",
        "boolean",
        "date",
        "bigint",
        "symbol",
        "function",
        "undefined",
        "null",
        "array",
        "object",
        "unknown",
        "promise",
        "void",
        "never",
        "map",
        "set"
    ]), gd = (t)=>{
        switch(typeof t){
            case "undefined":
                return Ft.undefined;
            case "string":
                return Ft.string;
            case "number":
                return isNaN(t) ? Ft.nan : Ft.number;
            case "boolean":
                return Ft.boolean;
            case "function":
                return Ft.function;
            case "bigint":
                return Ft.bigint;
            case "symbol":
                return Ft.symbol;
            case "object":
                return Array.isArray(t) ? Ft.array : t === null ? Ft.null : t.then && typeof t.then == "function" && t.catch && typeof t.catch == "function" ? Ft.promise : typeof Map < "u" && t instanceof Map ? Ft.map : typeof Set < "u" && t instanceof Set ? Ft.set : typeof Date < "u" && t instanceof Date ? Ft.date : Ft.object;
            default:
                return Ft.unknown;
        }
    }, gt = ir.arrayToEnum([
        "invalid_type",
        "invalid_literal",
        "custom",
        "invalid_union",
        "invalid_union_discriminator",
        "invalid_enum_value",
        "unrecognized_keys",
        "invalid_arguments",
        "invalid_return_type",
        "invalid_date",
        "invalid_string",
        "too_small",
        "too_big",
        "invalid_intersection_types",
        "not_multiple_of",
        "not_finite"
    ]), Iee = (t)=>JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
    class Ka extends Error {
        get errors() {
            return this.issues;
        }
        constructor(e){
            super(), this.issues = [], this.addIssue = (r)=>{
                this.issues = [
                    ...this.issues,
                    r
                ];
            }, this.addIssues = (r = [])=>{
                this.issues = [
                    ...this.issues,
                    ...r
                ];
            };
            const n = new.target.prototype;
            Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n, this.name = "ZodError", this.issues = e;
        }
        format(e) {
            const n = e || function(s) {
                return s.message;
            }, r = {
                _errors: []
            }, i = (s)=>{
                for (const o of s.issues)if (o.code === "invalid_union") o.unionErrors.map(i);
                else if (o.code === "invalid_return_type") i(o.returnTypeError);
                else if (o.code === "invalid_arguments") i(o.argumentsError);
                else if (o.path.length === 0) r._errors.push(n(o));
                else {
                    let a = r, l = 0;
                    for(; l < o.path.length;){
                        const c = o.path[l];
                        l === o.path.length - 1 ? (a[c] = a[c] || {
                            _errors: []
                        }, a[c]._errors.push(n(o))) : a[c] = a[c] || {
                            _errors: []
                        }, a = a[c], l++;
                    }
                }
            };
            return i(this), r;
        }
        static assert(e) {
            if (!(e instanceof Ka)) throw new Error(`Not a ZodError: ${e}`);
        }
        toString() {
            return this.message;
        }
        get message() {
            return JSON.stringify(this.issues, ir.jsonStringifyReplacer, 2);
        }
        get isEmpty() {
            return this.issues.length === 0;
        }
        flatten(e = (n)=>n.message) {
            const n = {}, r = [];
            for (const i of this.issues)i.path.length > 0 ? (n[i.path[0]] = n[i.path[0]] || [], n[i.path[0]].push(e(i))) : r.push(e(i));
            return {
                formErrors: r,
                fieldErrors: n
            };
        }
        get formErrors() {
            return this.flatten();
        }
    }
    Ka.create = (t)=>new Ka(t);
    const cy = (t, e)=>{
        let n;
        switch(t.code){
            case gt.invalid_type:
                t.received === Ft.undefined ? n = "Required" : n = `Expected ${t.expected}, received ${t.received}`;
                break;
            case gt.invalid_literal:
                n = `Invalid literal value, expected ${JSON.stringify(t.expected, ir.jsonStringifyReplacer)}`;
                break;
            case gt.unrecognized_keys:
                n = `Unrecognized key(s) in object: ${ir.joinValues(t.keys, ", ")}`;
                break;
            case gt.invalid_union:
                n = "Invalid input";
                break;
            case gt.invalid_union_discriminator:
                n = `Invalid discriminator value. Expected ${ir.joinValues(t.options)}`;
                break;
            case gt.invalid_enum_value:
                n = `Invalid enum value. Expected ${ir.joinValues(t.options)}, received '${t.received}'`;
                break;
            case gt.invalid_arguments:
                n = "Invalid function arguments";
                break;
            case gt.invalid_return_type:
                n = "Invalid function return type";
                break;
            case gt.invalid_date:
                n = "Invalid date";
                break;
            case gt.invalid_string:
                typeof t.validation == "object" ? "includes" in t.validation ? (n = `Invalid input: must include "${t.validation.includes}"`, typeof t.validation.position == "number" && (n = `${n} at one or more positions greater than or equal to ${t.validation.position}`)) : "startsWith" in t.validation ? n = `Invalid input: must start with "${t.validation.startsWith}"` : "endsWith" in t.validation ? n = `Invalid input: must end with "${t.validation.endsWith}"` : ir.assertNever(t.validation) : t.validation !== "regex" ? n = `Invalid ${t.validation}` : n = "Invalid";
                break;
            case gt.too_small:
                t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "more than"} ${t.minimum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "over"} ${t.minimum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${t.minimum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(t.minimum))}` : n = "Invalid input";
                break;
            case gt.too_big:
                t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "less than"} ${t.maximum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "under"} ${t.maximum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "bigint" ? n = `BigInt must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly" : t.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(t.maximum))}` : n = "Invalid input";
                break;
            case gt.custom:
                n = "Invalid input";
                break;
            case gt.invalid_intersection_types:
                n = "Intersection results could not be merged";
                break;
            case gt.not_multiple_of:
                n = `Number must be a multiple of ${t.multipleOf}`;
                break;
            case gt.not_finite:
                n = "Number must be finite";
                break;
            default:
                n = e.defaultError, ir.assertNever(t);
        }
        return {
            message: n
        };
    };
    let p9 = cy;
    function Aee(t) {
        p9 = t;
    }
    function jE() {
        return p9;
    }
    const BE = (t)=>{
        const { data: e, path: n, errorMaps: r, issueData: i } = t, s = [
            ...n,
            ...i.path || []
        ], o = {
            ...i,
            path: s
        };
        if (i.message !== void 0) return {
            ...i,
            path: s,
            message: i.message
        };
        let a = "";
        const l = r.filter((c)=>!!c).slice().reverse();
        for (const c of l)a = c(o, {
            data: e,
            defaultError: a
        }).message;
        return {
            ...i,
            path: s,
            message: a
        };
    }, Nee = [];
    function Tt(t, e) {
        const n = jE(), r = BE({
            issueData: e,
            data: t.data,
            path: t.path,
            errorMaps: [
                t.common.contextualErrorMap,
                t.schemaErrorMap,
                n,
                n === cy ? void 0 : cy
            ].filter((i)=>!!i)
        });
        t.common.issues.push(r);
    }
    class po {
        constructor(){
            this.value = "valid";
        }
        dirty() {
            this.value === "valid" && (this.value = "dirty");
        }
        abort() {
            this.value !== "aborted" && (this.value = "aborted");
        }
        static mergeArray(e, n) {
            const r = [];
            for (const i of n){
                if (i.status === "aborted") return pn;
                i.status === "dirty" && e.dirty(), r.push(i.value);
            }
            return {
                status: e.value,
                value: r
            };
        }
        static async mergeObjectAsync(e, n) {
            const r = [];
            for (const i of n){
                const s = await i.key, o = await i.value;
                r.push({
                    key: s,
                    value: o
                });
            }
            return po.mergeObjectSync(e, r);
        }
        static mergeObjectSync(e, n) {
            const r = {};
            for (const i of n){
                const { key: s, value: o } = i;
                if (s.status === "aborted" || o.status === "aborted") return pn;
                s.status === "dirty" && e.dirty(), o.status === "dirty" && e.dirty(), s.value !== "__proto__" && (typeof o.value < "u" || i.alwaysSet) && (r[s.value] = o.value);
            }
            return {
                status: e.value,
                value: r
            };
        }
    }
    const pn = Object.freeze({
        status: "aborted"
    }), I0 = (t)=>({
            status: "dirty",
            value: t
        }), Ho = (t)=>({
            status: "valid",
            value: t
        }), ZN = (t)=>t.status === "aborted", JN = (t)=>t.status === "dirty", bm = (t)=>t.status === "valid", xb = (t)=>typeof Promise < "u" && t instanceof Promise;
    function UE(t, e, n, r) {
        if (typeof e == "function" ? t !== e || !0 : !e.has(t)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return e.get(t);
    }
    function m9(t, e, n, r, i) {
        if (typeof e == "function" ? t !== e || !0 : !e.has(t)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return e.set(t, n), n;
    }
    var Qt;
    (function(t) {
        t.errToObj = (e)=>typeof e == "string" ? {
                message: e
            } : e || {}, t.toString = (e)=>typeof e == "string" ? e : e?.message;
    })(Qt || (Qt = {}));
    var gx, yx;
    class hu {
        constructor(e, n, r, i){
            this._cachedPath = [], this.parent = e, this.data = n, this._path = r, this._key = i;
        }
        get path() {
            return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;
        }
    }
    const uF = (t, e)=>{
        if (bm(e)) return {
            success: !0,
            data: e.value
        };
        if (!t.common.issues.length) throw new Error("Validation failed but no issues detected.");
        return {
            success: !1,
            get error () {
                if (this._error) return this._error;
                const n = new Ka(t.common.issues);
                return this._error = n, this._error;
            }
        };
    };
    function Dn(t) {
        if (!t) return {};
        const { errorMap: e, invalid_type_error: n, required_error: r, description: i } = t;
        if (e && (n || r)) throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
        return e ? {
            errorMap: e,
            description: i
        } : {
            errorMap: (o, a)=>{
                var l, c;
                const { message: u } = t;
                return o.code === "invalid_enum_value" ? {
                    message: u ?? a.defaultError
                } : typeof a.data > "u" ? {
                    message: (l = u ?? r) !== null && l !== void 0 ? l : a.defaultError
                } : o.code !== "invalid_type" ? {
                    message: a.defaultError
                } : {
                    message: (c = u ?? n) !== null && c !== void 0 ? c : a.defaultError
                };
            },
            description: i
        };
    }
    class Hn {
        get description() {
            return this._def.description;
        }
        _getType(e) {
            return gd(e.data);
        }
        _getOrReturnCtx(e, n) {
            return n || {
                common: e.parent.common,
                data: e.data,
                parsedType: gd(e.data),
                schemaErrorMap: this._def.errorMap,
                path: e.path,
                parent: e.parent
            };
        }
        _processInputParams(e) {
            return {
                status: new po,
                ctx: {
                    common: e.parent.common,
                    data: e.data,
                    parsedType: gd(e.data),
                    schemaErrorMap: this._def.errorMap,
                    path: e.path,
                    parent: e.parent
                }
            };
        }
        _parseSync(e) {
            const n = this._parse(e);
            if (xb(n)) throw new Error("Synchronous parse encountered promise.");
            return n;
        }
        _parseAsync(e) {
            const n = this._parse(e);
            return Promise.resolve(n);
        }
        parse(e, n) {
            const r = this.safeParse(e, n);
            if (r.success) return r.data;
            throw r.error;
        }
        safeParse(e, n) {
            var r;
            const i = {
                common: {
                    issues: [],
                    async: (r = n?.async) !== null && r !== void 0 ? r : !1,
                    contextualErrorMap: n?.errorMap
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: gd(e)
            }, s = this._parseSync({
                data: e,
                path: i.path,
                parent: i
            });
            return uF(i, s);
        }
        "~validate"(e) {
            var n, r;
            const i = {
                common: {
                    issues: [],
                    async: !!this["~standard"].async
                },
                path: [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: gd(e)
            };
            if (!this["~standard"].async) try {
                const s = this._parseSync({
                    data: e,
                    path: [],
                    parent: i
                });
                return bm(s) ? {
                    value: s.value
                } : {
                    issues: i.common.issues
                };
            } catch (s) {
                !((r = (n = s?.message) === null || n === void 0 ? void 0 : n.toLowerCase()) === null || r === void 0) && r.includes("encountered") && (this["~standard"].async = !0), i.common = {
                    issues: [],
                    async: !0
                };
            }
            return this._parseAsync({
                data: e,
                path: [],
                parent: i
            }).then((s)=>bm(s) ? {
                    value: s.value
                } : {
                    issues: i.common.issues
                });
        }
        async parseAsync(e, n) {
            const r = await this.safeParseAsync(e, n);
            if (r.success) return r.data;
            throw r.error;
        }
        async safeParseAsync(e, n) {
            const r = {
                common: {
                    issues: [],
                    contextualErrorMap: n?.errorMap,
                    async: !0
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: gd(e)
            }, i = this._parse({
                data: e,
                path: r.path,
                parent: r
            }), s = await (xb(i) ? i : Promise.resolve(i));
            return uF(r, s);
        }
        refine(e, n) {
            const r = (i)=>typeof n == "string" || typeof n > "u" ? {
                    message: n
                } : typeof n == "function" ? n(i) : n;
            return this._refinement((i, s)=>{
                const o = e(i), a = ()=>s.addIssue({
                        code: gt.custom,
                        ...r(i)
                    });
                return typeof Promise < "u" && o instanceof Promise ? o.then((l)=>l ? !0 : (a(), !1)) : o ? !0 : (a(), !1);
            });
        }
        refinement(e, n) {
            return this._refinement((r, i)=>e(r) ? !0 : (i.addIssue(typeof n == "function" ? n(r, i) : n), !1));
        }
        _refinement(e) {
            return new bc({
                schema: this,
                typeName: hn.ZodEffects,
                effect: {
                    type: "refinement",
                    refinement: e
                }
            });
        }
        superRefine(e) {
            return this._refinement(e);
        }
        constructor(e){
            this.spa = this.safeParseAsync, this._def = e, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this), this["~standard"] = {
                version: 1,
                vendor: "zod",
                validate: (n)=>this["~validate"](n)
            };
        }
        optional() {
            return iu.create(this, this._def);
        }
        nullable() {
            return xh.create(this, this._def);
        }
        nullish() {
            return this.nullable().optional();
        }
        array() {
            return yc.create(this);
        }
        promise() {
            return dy.create(this, this._def);
        }
        or(e) {
            return Sb.create([
                this,
                e
            ], this._def);
        }
        and(e) {
            return Eb.create(this, e, this._def);
        }
        transform(e) {
            return new bc({
                ...Dn(this._def),
                schema: this,
                typeName: hn.ZodEffects,
                effect: {
                    type: "transform",
                    transform: e
                }
            });
        }
        default(e) {
            const n = typeof e == "function" ? e : ()=>e;
            return new Ib({
                ...Dn(this._def),
                innerType: this,
                defaultValue: n,
                typeName: hn.ZodDefault
            });
        }
        brand() {
            return new LP({
                typeName: hn.ZodBranded,
                type: this,
                ...Dn(this._def)
            });
        }
        catch(e) {
            const n = typeof e == "function" ? e : ()=>e;
            return new Ab({
                ...Dn(this._def),
                innerType: this,
                catchValue: n,
                typeName: hn.ZodCatch
            });
        }
        describe(e) {
            const n = this.constructor;
            return new n({
                ...this._def,
                description: e
            });
        }
        pipe(e) {
            return Sw.create(this, e);
        }
        readonly() {
            return Nb.create(this);
        }
        isOptional() {
            return this.safeParse(void 0).success;
        }
        isNullable() {
            return this.safeParse(null).success;
        }
    }
    const Pee = /^c[^\s-]{8,}$/i, kee = /^[0-9a-z]+$/, Oee = /^[0-9A-HJKMNP-TV-Z]{26}$/i, Dee = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i, Lee = /^[a-z0-9_-]{21}$/i, Fee = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/, jee = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/, Bee = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, Uee = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
    let kR;
    const zee = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/, Vee = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/, Wee = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/, qee = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/, Hee = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/, $ee = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/, g9 = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))", Gee = new RegExp(`^${g9}$`);
    function y9(t) {
        let e = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
        return t.precision ? e = `${e}\\.\\d{${t.precision}}` : t.precision == null && (e = `${e}(\\.\\d+)?`), e;
    }
    function Xee(t) {
        return new RegExp(`^${y9(t)}$`);
    }
    function v9(t) {
        let e = `${g9}T${y9(t)}`;
        const n = [];
        return n.push(t.local ? "Z?" : "Z"), t.offset && n.push("([+-]\\d{2}:?\\d{2})"), e = `${e}(${n.join("|")})`, new RegExp(`^${e}$`);
    }
    function Kee(t, e) {
        return !!((e === "v4" || !e) && zee.test(t) || (e === "v6" || !e) && Wee.test(t));
    }
    function Yee(t, e) {
        if (!Fee.test(t)) return !1;
        try {
            const [n] = t.split("."), r = n.replace(/-/g, "+").replace(/_/g, "/").padEnd(n.length + (4 - n.length % 4) % 4, "="), i = JSON.parse(atob(r));
            return !(typeof i != "object" || i === null || !i.typ || !i.alg || e && i.alg !== e);
        } catch  {
            return !1;
        }
    }
    function Zee(t, e) {
        return !!((e === "v4" || !e) && Vee.test(t) || (e === "v6" || !e) && qee.test(t));
    }
    class pc extends Hn {
        _parse(e) {
            if (this._def.coerce && (e.data = String(e.data)), this._getType(e) !== Ft.string) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_type,
                    expected: Ft.string,
                    received: s.parsedType
                }), pn;
            }
            const r = new po;
            let i;
            for (const s of this._def.checks)if (s.kind === "min") e.data.length < s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_small,
                minimum: s.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: s.message
            }), r.dirty());
            else if (s.kind === "max") e.data.length > s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_big,
                maximum: s.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: s.message
            }), r.dirty());
            else if (s.kind === "length") {
                const o = e.data.length > s.value, a = e.data.length < s.value;
                (o || a) && (i = this._getOrReturnCtx(e, i), o ? Tt(i, {
                    code: gt.too_big,
                    maximum: s.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: s.message
                }) : a && Tt(i, {
                    code: gt.too_small,
                    minimum: s.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: s.message
                }), r.dirty());
            } else if (s.kind === "email") Bee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "email",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "emoji") kR || (kR = new RegExp(Uee, "u")), kR.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "emoji",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "uuid") Dee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "uuid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "nanoid") Lee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "nanoid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "cuid") Pee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "cuid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "cuid2") kee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "cuid2",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "ulid") Oee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "ulid",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty());
            else if (s.kind === "url") try {
                new URL(e.data);
            } catch  {
                i = this._getOrReturnCtx(e, i), Tt(i, {
                    validation: "url",
                    code: gt.invalid_string,
                    message: s.message
                }), r.dirty();
            }
            else s.kind === "regex" ? (s.regex.lastIndex = 0, s.regex.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "regex",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty())) : s.kind === "trim" ? e.data = e.data.trim() : s.kind === "includes" ? e.data.includes(s.value, s.position) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: {
                    includes: s.value,
                    position: s.position
                },
                message: s.message
            }), r.dirty()) : s.kind === "toLowerCase" ? e.data = e.data.toLowerCase() : s.kind === "toUpperCase" ? e.data = e.data.toUpperCase() : s.kind === "startsWith" ? e.data.startsWith(s.value) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: {
                    startsWith: s.value
                },
                message: s.message
            }), r.dirty()) : s.kind === "endsWith" ? e.data.endsWith(s.value) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: {
                    endsWith: s.value
                },
                message: s.message
            }), r.dirty()) : s.kind === "datetime" ? v9(s).test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: "datetime",
                message: s.message
            }), r.dirty()) : s.kind === "date" ? Gee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: "date",
                message: s.message
            }), r.dirty()) : s.kind === "time" ? Xee(s).test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.invalid_string,
                validation: "time",
                message: s.message
            }), r.dirty()) : s.kind === "duration" ? jee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "duration",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "ip" ? Kee(e.data, s.version) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "ip",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "jwt" ? Yee(e.data, s.alg) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "jwt",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "cidr" ? Zee(e.data, s.version) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "cidr",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "base64" ? Hee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "base64",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : s.kind === "base64url" ? $ee.test(e.data) || (i = this._getOrReturnCtx(e, i), Tt(i, {
                validation: "base64url",
                code: gt.invalid_string,
                message: s.message
            }), r.dirty()) : ir.assertNever(s);
            return {
                status: r.value,
                value: e.data
            };
        }
        _regex(e, n, r) {
            return this.refinement((i)=>e.test(i), {
                validation: n,
                code: gt.invalid_string,
                ...Qt.errToObj(r)
            });
        }
        _addCheck(e) {
            return new pc({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        email(e) {
            return this._addCheck({
                kind: "email",
                ...Qt.errToObj(e)
            });
        }
        url(e) {
            return this._addCheck({
                kind: "url",
                ...Qt.errToObj(e)
            });
        }
        emoji(e) {
            return this._addCheck({
                kind: "emoji",
                ...Qt.errToObj(e)
            });
        }
        uuid(e) {
            return this._addCheck({
                kind: "uuid",
                ...Qt.errToObj(e)
            });
        }
        nanoid(e) {
            return this._addCheck({
                kind: "nanoid",
                ...Qt.errToObj(e)
            });
        }
        cuid(e) {
            return this._addCheck({
                kind: "cuid",
                ...Qt.errToObj(e)
            });
        }
        cuid2(e) {
            return this._addCheck({
                kind: "cuid2",
                ...Qt.errToObj(e)
            });
        }
        ulid(e) {
            return this._addCheck({
                kind: "ulid",
                ...Qt.errToObj(e)
            });
        }
        base64(e) {
            return this._addCheck({
                kind: "base64",
                ...Qt.errToObj(e)
            });
        }
        base64url(e) {
            return this._addCheck({
                kind: "base64url",
                ...Qt.errToObj(e)
            });
        }
        jwt(e) {
            return this._addCheck({
                kind: "jwt",
                ...Qt.errToObj(e)
            });
        }
        ip(e) {
            return this._addCheck({
                kind: "ip",
                ...Qt.errToObj(e)
            });
        }
        cidr(e) {
            return this._addCheck({
                kind: "cidr",
                ...Qt.errToObj(e)
            });
        }
        datetime(e) {
            var n, r;
            return typeof e == "string" ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                local: !1,
                message: e
            }) : this._addCheck({
                kind: "datetime",
                precision: typeof e?.precision > "u" ? null : e?.precision,
                offset: (n = e?.offset) !== null && n !== void 0 ? n : !1,
                local: (r = e?.local) !== null && r !== void 0 ? r : !1,
                ...Qt.errToObj(e?.message)
            });
        }
        date(e) {
            return this._addCheck({
                kind: "date",
                message: e
            });
        }
        time(e) {
            return typeof e == "string" ? this._addCheck({
                kind: "time",
                precision: null,
                message: e
            }) : this._addCheck({
                kind: "time",
                precision: typeof e?.precision > "u" ? null : e?.precision,
                ...Qt.errToObj(e?.message)
            });
        }
        duration(e) {
            return this._addCheck({
                kind: "duration",
                ...Qt.errToObj(e)
            });
        }
        regex(e, n) {
            return this._addCheck({
                kind: "regex",
                regex: e,
                ...Qt.errToObj(n)
            });
        }
        includes(e, n) {
            return this._addCheck({
                kind: "includes",
                value: e,
                position: n?.position,
                ...Qt.errToObj(n?.message)
            });
        }
        startsWith(e, n) {
            return this._addCheck({
                kind: "startsWith",
                value: e,
                ...Qt.errToObj(n)
            });
        }
        endsWith(e, n) {
            return this._addCheck({
                kind: "endsWith",
                value: e,
                ...Qt.errToObj(n)
            });
        }
        min(e, n) {
            return this._addCheck({
                kind: "min",
                value: e,
                ...Qt.errToObj(n)
            });
        }
        max(e, n) {
            return this._addCheck({
                kind: "max",
                value: e,
                ...Qt.errToObj(n)
            });
        }
        length(e, n) {
            return this._addCheck({
                kind: "length",
                value: e,
                ...Qt.errToObj(n)
            });
        }
        nonempty(e) {
            return this.min(1, Qt.errToObj(e));
        }
        trim() {
            return new pc({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "trim"
                    }
                ]
            });
        }
        toLowerCase() {
            return new pc({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "toLowerCase"
                    }
                ]
            });
        }
        toUpperCase() {
            return new pc({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: "toUpperCase"
                    }
                ]
            });
        }
        get isDatetime() {
            return !!this._def.checks.find((e)=>e.kind === "datetime");
        }
        get isDate() {
            return !!this._def.checks.find((e)=>e.kind === "date");
        }
        get isTime() {
            return !!this._def.checks.find((e)=>e.kind === "time");
        }
        get isDuration() {
            return !!this._def.checks.find((e)=>e.kind === "duration");
        }
        get isEmail() {
            return !!this._def.checks.find((e)=>e.kind === "email");
        }
        get isURL() {
            return !!this._def.checks.find((e)=>e.kind === "url");
        }
        get isEmoji() {
            return !!this._def.checks.find((e)=>e.kind === "emoji");
        }
        get isUUID() {
            return !!this._def.checks.find((e)=>e.kind === "uuid");
        }
        get isNANOID() {
            return !!this._def.checks.find((e)=>e.kind === "nanoid");
        }
        get isCUID() {
            return !!this._def.checks.find((e)=>e.kind === "cuid");
        }
        get isCUID2() {
            return !!this._def.checks.find((e)=>e.kind === "cuid2");
        }
        get isULID() {
            return !!this._def.checks.find((e)=>e.kind === "ulid");
        }
        get isIP() {
            return !!this._def.checks.find((e)=>e.kind === "ip");
        }
        get isCIDR() {
            return !!this._def.checks.find((e)=>e.kind === "cidr");
        }
        get isBase64() {
            return !!this._def.checks.find((e)=>e.kind === "base64");
        }
        get isBase64url() {
            return !!this._def.checks.find((e)=>e.kind === "base64url");
        }
        get minLength() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e;
        }
        get maxLength() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e;
        }
    }
    pc.create = (t)=>{
        var e;
        return new pc({
            checks: [],
            typeName: hn.ZodString,
            coerce: (e = t?.coerce) !== null && e !== void 0 ? e : !1,
            ...Dn(t)
        });
    };
    function Jee(t, e) {
        const n = (t.toString().split(".")[1] || "").length, r = (e.toString().split(".")[1] || "").length, i = n > r ? n : r, s = parseInt(t.toFixed(i).replace(".", "")), o = parseInt(e.toFixed(i).replace(".", ""));
        return s % o / Math.pow(10, i);
    }
    class gh extends Hn {
        constructor(){
            super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
        }
        _parse(e) {
            if (this._def.coerce && (e.data = Number(e.data)), this._getType(e) !== Ft.number) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_type,
                    expected: Ft.number,
                    received: s.parsedType
                }), pn;
            }
            let r;
            const i = new po;
            for (const s of this._def.checks)s.kind === "int" ? ir.isInteger(e.data) || (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.invalid_type,
                expected: "integer",
                received: "float",
                message: s.message
            }), i.dirty()) : s.kind === "min" ? (s.inclusive ? e.data < s.value : e.data <= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_small,
                minimum: s.value,
                type: "number",
                inclusive: s.inclusive,
                exact: !1,
                message: s.message
            }), i.dirty()) : s.kind === "max" ? (s.inclusive ? e.data > s.value : e.data >= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_big,
                maximum: s.value,
                type: "number",
                inclusive: s.inclusive,
                exact: !1,
                message: s.message
            }), i.dirty()) : s.kind === "multipleOf" ? Jee(e.data, s.value) !== 0 && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.not_multiple_of,
                multipleOf: s.value,
                message: s.message
            }), i.dirty()) : s.kind === "finite" ? Number.isFinite(e.data) || (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.not_finite,
                message: s.message
            }), i.dirty()) : ir.assertNever(s);
            return {
                status: i.value,
                value: e.data
            };
        }
        gte(e, n) {
            return this.setLimit("min", e, !0, Qt.toString(n));
        }
        gt(e, n) {
            return this.setLimit("min", e, !1, Qt.toString(n));
        }
        lte(e, n) {
            return this.setLimit("max", e, !0, Qt.toString(n));
        }
        lt(e, n) {
            return this.setLimit("max", e, !1, Qt.toString(n));
        }
        setLimit(e, n, r, i) {
            return new gh({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: e,
                        value: n,
                        inclusive: r,
                        message: Qt.toString(i)
                    }
                ]
            });
        }
        _addCheck(e) {
            return new gh({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        int(e) {
            return this._addCheck({
                kind: "int",
                message: Qt.toString(e)
            });
        }
        positive(e) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !1,
                message: Qt.toString(e)
            });
        }
        negative(e) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !1,
                message: Qt.toString(e)
            });
        }
        nonpositive(e) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !0,
                message: Qt.toString(e)
            });
        }
        nonnegative(e) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !0,
                message: Qt.toString(e)
            });
        }
        multipleOf(e, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: e,
                message: Qt.toString(n)
            });
        }
        finite(e) {
            return this._addCheck({
                kind: "finite",
                message: Qt.toString(e)
            });
        }
        safe(e) {
            return this._addCheck({
                kind: "min",
                inclusive: !0,
                value: Number.MIN_SAFE_INTEGER,
                message: Qt.toString(e)
            })._addCheck({
                kind: "max",
                inclusive: !0,
                value: Number.MAX_SAFE_INTEGER,
                message: Qt.toString(e)
            });
        }
        get minValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e;
        }
        get maxValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e;
        }
        get isInt() {
            return !!this._def.checks.find((e)=>e.kind === "int" || e.kind === "multipleOf" && ir.isInteger(e.value));
        }
        get isFinite() {
            let e = null, n = null;
            for (const r of this._def.checks){
                if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf") return !0;
                r.kind === "min" ? (n === null || r.value > n) && (n = r.value) : r.kind === "max" && (e === null || r.value < e) && (e = r.value);
            }
            return Number.isFinite(n) && Number.isFinite(e);
        }
    }
    gh.create = (t)=>new gh({
            checks: [],
            typeName: hn.ZodNumber,
            coerce: t?.coerce || !1,
            ...Dn(t)
        });
    class yh extends Hn {
        constructor(){
            super(...arguments), this.min = this.gte, this.max = this.lte;
        }
        _parse(e) {
            if (this._def.coerce) try {
                e.data = BigInt(e.data);
            } catch  {
                return this._getInvalidInput(e);
            }
            if (this._getType(e) !== Ft.bigint) return this._getInvalidInput(e);
            let r;
            const i = new po;
            for (const s of this._def.checks)s.kind === "min" ? (s.inclusive ? e.data < s.value : e.data <= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_small,
                type: "bigint",
                minimum: s.value,
                inclusive: s.inclusive,
                message: s.message
            }), i.dirty()) : s.kind === "max" ? (s.inclusive ? e.data > s.value : e.data >= s.value) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.too_big,
                type: "bigint",
                maximum: s.value,
                inclusive: s.inclusive,
                message: s.message
            }), i.dirty()) : s.kind === "multipleOf" ? e.data % s.value !== BigInt(0) && (r = this._getOrReturnCtx(e, r), Tt(r, {
                code: gt.not_multiple_of,
                multipleOf: s.value,
                message: s.message
            }), i.dirty()) : ir.assertNever(s);
            return {
                status: i.value,
                value: e.data
            };
        }
        _getInvalidInput(e) {
            const n = this._getOrReturnCtx(e);
            return Tt(n, {
                code: gt.invalid_type,
                expected: Ft.bigint,
                received: n.parsedType
            }), pn;
        }
        gte(e, n) {
            return this.setLimit("min", e, !0, Qt.toString(n));
        }
        gt(e, n) {
            return this.setLimit("min", e, !1, Qt.toString(n));
        }
        lte(e, n) {
            return this.setLimit("max", e, !0, Qt.toString(n));
        }
        lt(e, n) {
            return this.setLimit("max", e, !1, Qt.toString(n));
        }
        setLimit(e, n, r, i) {
            return new yh({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    {
                        kind: e,
                        value: n,
                        inclusive: r,
                        message: Qt.toString(i)
                    }
                ]
            });
        }
        _addCheck(e) {
            return new yh({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        positive(e) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !1,
                message: Qt.toString(e)
            });
        }
        negative(e) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !1,
                message: Qt.toString(e)
            });
        }
        nonpositive(e) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !0,
                message: Qt.toString(e)
            });
        }
        nonnegative(e) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !0,
                message: Qt.toString(e)
            });
        }
        multipleOf(e, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: e,
                message: Qt.toString(n)
            });
        }
        get minValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e;
        }
        get maxValue() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e;
        }
    }
    yh.create = (t)=>{
        var e;
        return new yh({
            checks: [],
            typeName: hn.ZodBigInt,
            coerce: (e = t?.coerce) !== null && e !== void 0 ? e : !1,
            ...Dn(t)
        });
    };
    class bb extends Hn {
        _parse(e) {
            if (this._def.coerce && (e.data = !!e.data), this._getType(e) !== Ft.boolean) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Ft.boolean,
                    received: r.parsedType
                }), pn;
            }
            return Ho(e.data);
        }
    }
    bb.create = (t)=>new bb({
            typeName: hn.ZodBoolean,
            coerce: t?.coerce || !1,
            ...Dn(t)
        });
    class wm extends Hn {
        _parse(e) {
            if (this._def.coerce && (e.data = new Date(e.data)), this._getType(e) !== Ft.date) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_type,
                    expected: Ft.date,
                    received: s.parsedType
                }), pn;
            }
            if (isNaN(e.data.getTime())) {
                const s = this._getOrReturnCtx(e);
                return Tt(s, {
                    code: gt.invalid_date
                }), pn;
            }
            const r = new po;
            let i;
            for (const s of this._def.checks)s.kind === "min" ? e.data.getTime() < s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_small,
                message: s.message,
                inclusive: !0,
                exact: !1,
                minimum: s.value,
                type: "date"
            }), r.dirty()) : s.kind === "max" ? e.data.getTime() > s.value && (i = this._getOrReturnCtx(e, i), Tt(i, {
                code: gt.too_big,
                message: s.message,
                inclusive: !0,
                exact: !1,
                maximum: s.value,
                type: "date"
            }), r.dirty()) : ir.assertNever(s);
            return {
                status: r.value,
                value: new Date(e.data.getTime())
            };
        }
        _addCheck(e) {
            return new wm({
                ...this._def,
                checks: [
                    ...this._def.checks,
                    e
                ]
            });
        }
        min(e, n) {
            return this._addCheck({
                kind: "min",
                value: e.getTime(),
                message: Qt.toString(n)
            });
        }
        max(e, n) {
            return this._addCheck({
                kind: "max",
                value: e.getTime(),
                message: Qt.toString(n)
            });
        }
        get minDate() {
            let e = null;
            for (const n of this._def.checks)n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e != null ? new Date(e) : null;
        }
        get maxDate() {
            let e = null;
            for (const n of this._def.checks)n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e != null ? new Date(e) : null;
        }
    }
    wm.create = (t)=>new wm({
            checks: [],
            coerce: t?.coerce || !1,
            typeName: hn.ZodDate,
            ...Dn(t)
        });
    class zE extends Hn {
        _parse(e) {
            if (this._getType(e) !== Ft.symbol) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Ft.symbol,
                    received: r.parsedType
                }), pn;
            }
            return Ho(e.data);
        }
    }
    zE.create = (t)=>new zE({
            typeName: hn.ZodSymbol,
            ...Dn(t)
        });
    class wb extends Hn {
        _parse(e) {
            if (this._getType(e) !== Ft.undefined) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Ft.undefined,
                    received: r.parsedType
                }), pn;
            }
            return Ho(e.data);
        }
    }
    wb.create = (t)=>new wb({
            typeName: hn.ZodUndefined,
            ...Dn(t)
        });
    class _b extends Hn {
        _parse(e) {
            if (this._getType(e) !== Ft.null) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Ft.null,
                    received: r.parsedType
                }), pn;
            }
            return Ho(e.data);
        }
    }
    _b.create = (t)=>new _b({
            typeName: hn.ZodNull,
            ...Dn(t)
        });
    class uy extends Hn {
        constructor(){
            super(...arguments), this._any = !0;
        }
        _parse(e) {
            return Ho(e.data);
        }
    }
    uy.create = (t)=>new uy({
            typeName: hn.ZodAny,
            ...Dn(t)
        });
    class am extends Hn {
        constructor(){
            super(...arguments), this._unknown = !0;
        }
        _parse(e) {
            return Ho(e.data);
        }
    }
    am.create = (t)=>new am({
            typeName: hn.ZodUnknown,
            ...Dn(t)
        });
    class Pd extends Hn {
        _parse(e) {
            const n = this._getOrReturnCtx(e);
            return Tt(n, {
                code: gt.invalid_type,
                expected: Ft.never,
                received: n.parsedType
            }), pn;
        }
    }
    Pd.create = (t)=>new Pd({
            typeName: hn.ZodNever,
            ...Dn(t)
        });
    class VE extends Hn {
        _parse(e) {
            if (this._getType(e) !== Ft.undefined) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Ft.void,
                    received: r.parsedType
                }), pn;
            }
            return Ho(e.data);
        }
    }
    VE.create = (t)=>new VE({
            typeName: hn.ZodVoid,
            ...Dn(t)
        });
    class yc extends Hn {
        _parse(e) {
            const { ctx: n, status: r } = this._processInputParams(e), i = this._def;
            if (n.parsedType !== Ft.array) return Tt(n, {
                code: gt.invalid_type,
                expected: Ft.array,
                received: n.parsedType
            }), pn;
            if (i.exactLength !== null) {
                const o = n.data.length > i.exactLength.value, a = n.data.length < i.exactLength.value;
                (o || a) && (Tt(n, {
                    code: o ? gt.too_big : gt.too_small,
                    minimum: a ? i.exactLength.value : void 0,
                    maximum: o ? i.exactLength.value : void 0,
                    type: "array",
                    inclusive: !0,
                    exact: !0,
                    message: i.exactLength.message
                }), r.dirty());
            }
            if (i.minLength !== null && n.data.length < i.minLength.value && (Tt(n, {
                code: gt.too_small,
                minimum: i.minLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: i.minLength.message
            }), r.dirty()), i.maxLength !== null && n.data.length > i.maxLength.value && (Tt(n, {
                code: gt.too_big,
                maximum: i.maxLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: i.maxLength.message
            }), r.dirty()), n.common.async) return Promise.all([
                ...n.data
            ].map((o, a)=>i.type._parseAsync(new hu(n, o, n.path, a)))).then((o)=>po.mergeArray(r, o));
            const s = [
                ...n.data
            ].map((o, a)=>i.type._parseSync(new hu(n, o, n.path, a)));
            return po.mergeArray(r, s);
        }
        get element() {
            return this._def.type;
        }
        min(e, n) {
            return new yc({
                ...this._def,
                minLength: {
                    value: e,
                    message: Qt.toString(n)
                }
            });
        }
        max(e, n) {
            return new yc({
                ...this._def,
                maxLength: {
                    value: e,
                    message: Qt.toString(n)
                }
            });
        }
        length(e, n) {
            return new yc({
                ...this._def,
                exactLength: {
                    value: e,
                    message: Qt.toString(n)
                }
            });
        }
        nonempty(e) {
            return this.min(1, e);
        }
    }
    yc.create = (t, e)=>new yc({
            type: t,
            minLength: null,
            maxLength: null,
            exactLength: null,
            typeName: hn.ZodArray,
            ...Dn(e)
        });
    function _0(t) {
        if (t instanceof di) {
            const e = {};
            for(const n in t.shape){
                const r = t.shape[n];
                e[n] = iu.create(_0(r));
            }
            return new di({
                ...t._def,
                shape: ()=>e
            });
        } else return t instanceof yc ? new yc({
            ...t._def,
            type: _0(t.element)
        }) : t instanceof iu ? iu.create(_0(t.unwrap())) : t instanceof xh ? xh.create(_0(t.unwrap())) : t instanceof pu ? pu.create(t.items.map((e)=>_0(e))) : t;
    }
    class di extends Hn {
        constructor(){
            super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
        }
        _getCached() {
            if (this._cached !== null) return this._cached;
            const e = this._def.shape(), n = ir.objectKeys(e);
            return this._cached = {
                shape: e,
                keys: n
            };
        }
        _parse(e) {
            if (this._getType(e) !== Ft.object) {
                const c = this._getOrReturnCtx(e);
                return Tt(c, {
                    code: gt.invalid_type,
                    expected: Ft.object,
                    received: c.parsedType
                }), pn;
            }
            const { status: r, ctx: i } = this._processInputParams(e), { shape: s, keys: o } = this._getCached(), a = [];
            if (!(this._def.catchall instanceof Pd && this._def.unknownKeys === "strip")) for(const c in i.data)o.includes(c) || a.push(c);
            const l = [];
            for (const c of o){
                const u = s[c], f = i.data[c];
                l.push({
                    key: {
                        status: "valid",
                        value: c
                    },
                    value: u._parse(new hu(i, f, i.path, c)),
                    alwaysSet: c in i.data
                });
            }
            if (this._def.catchall instanceof Pd) {
                const c = this._def.unknownKeys;
                if (c === "passthrough") for (const u of a)l.push({
                    key: {
                        status: "valid",
                        value: u
                    },
                    value: {
                        status: "valid",
                        value: i.data[u]
                    }
                });
                else if (c === "strict") a.length > 0 && (Tt(i, {
                    code: gt.unrecognized_keys,
                    keys: a
                }), r.dirty());
                else if (c !== "strip") throw new Error("Internal ZodObject error: invalid unknownKeys value.");
            } else {
                const c = this._def.catchall;
                for (const u of a){
                    const f = i.data[u];
                    l.push({
                        key: {
                            status: "valid",
                            value: u
                        },
                        value: c._parse(new hu(i, f, i.path, u)),
                        alwaysSet: u in i.data
                    });
                }
            }
            return i.common.async ? Promise.resolve().then(async ()=>{
                const c = [];
                for (const u of l){
                    const f = await u.key, h = await u.value;
                    c.push({
                        key: f,
                        value: h,
                        alwaysSet: u.alwaysSet
                    });
                }
                return c;
            }).then((c)=>po.mergeObjectSync(r, c)) : po.mergeObjectSync(r, l);
        }
        get shape() {
            return this._def.shape();
        }
        strict(e) {
            return Qt.errToObj, new di({
                ...this._def,
                unknownKeys: "strict",
                ...e !== void 0 ? {
                    errorMap: (n, r)=>{
                        var i, s, o, a;
                        const l = (o = (s = (i = this._def).errorMap) === null || s === void 0 ? void 0 : s.call(i, n, r).message) !== null && o !== void 0 ? o : r.defaultError;
                        return n.code === "unrecognized_keys" ? {
                            message: (a = Qt.errToObj(e).message) !== null && a !== void 0 ? a : l
                        } : {
                            message: l
                        };
                    }
                } : {}
            });
        }
        strip() {
            return new di({
                ...this._def,
                unknownKeys: "strip"
            });
        }
        passthrough() {
            return new di({
                ...this._def,
                unknownKeys: "passthrough"
            });
        }
        extend(e) {
            return new di({
                ...this._def,
                shape: ()=>({
                        ...this._def.shape(),
                        ...e
                    })
            });
        }
        merge(e) {
            return new di({
                unknownKeys: e._def.unknownKeys,
                catchall: e._def.catchall,
                shape: ()=>({
                        ...this._def.shape(),
                        ...e._def.shape()
                    }),
                typeName: hn.ZodObject
            });
        }
        setKey(e, n) {
            return this.augment({
                [e]: n
            });
        }
        catchall(e) {
            return new di({
                ...this._def,
                catchall: e
            });
        }
        pick(e) {
            const n = {};
            return ir.objectKeys(e).forEach((r)=>{
                e[r] && this.shape[r] && (n[r] = this.shape[r]);
            }), new di({
                ...this._def,
                shape: ()=>n
            });
        }
        omit(e) {
            const n = {};
            return ir.objectKeys(this.shape).forEach((r)=>{
                e[r] || (n[r] = this.shape[r]);
            }), new di({
                ...this._def,
                shape: ()=>n
            });
        }
        deepPartial() {
            return _0(this);
        }
        partial(e) {
            const n = {};
            return ir.objectKeys(this.shape).forEach((r)=>{
                const i = this.shape[r];
                e && !e[r] ? n[r] = i : n[r] = i.optional();
            }), new di({
                ...this._def,
                shape: ()=>n
            });
        }
        required(e) {
            const n = {};
            return ir.objectKeys(this.shape).forEach((r)=>{
                if (e && !e[r]) n[r] = this.shape[r];
                else {
                    let s = this.shape[r];
                    for(; s instanceof iu;)s = s._def.innerType;
                    n[r] = s;
                }
            }), new di({
                ...this._def,
                shape: ()=>n
            });
        }
        keyof() {
            return x9(ir.objectKeys(this.shape));
        }
    }
    di.create = (t, e)=>new di({
            shape: ()=>t,
            unknownKeys: "strip",
            catchall: Pd.create(),
            typeName: hn.ZodObject,
            ...Dn(e)
        });
    di.strictCreate = (t, e)=>new di({
            shape: ()=>t,
            unknownKeys: "strict",
            catchall: Pd.create(),
            typeName: hn.ZodObject,
            ...Dn(e)
        });
    di.lazycreate = (t, e)=>new di({
            shape: t,
            unknownKeys: "strip",
            catchall: Pd.create(),
            typeName: hn.ZodObject,
            ...Dn(e)
        });
    class Sb extends Hn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e), r = this._def.options;
            function i(s) {
                for (const a of s)if (a.result.status === "valid") return a.result;
                for (const a of s)if (a.result.status === "dirty") return n.common.issues.push(...a.ctx.common.issues), a.result;
                const o = s.map((a)=>new Ka(a.ctx.common.issues));
                return Tt(n, {
                    code: gt.invalid_union,
                    unionErrors: o
                }), pn;
            }
            if (n.common.async) return Promise.all(r.map(async (s)=>{
                const o = {
                    ...n,
                    common: {
                        ...n.common,
                        issues: []
                    },
                    parent: null
                };
                return {
                    result: await s._parseAsync({
                        data: n.data,
                        path: n.path,
                        parent: o
                    }),
                    ctx: o
                };
            })).then(i);
            {
                let s;
                const o = [];
                for (const l of r){
                    const c = {
                        ...n,
                        common: {
                            ...n.common,
                            issues: []
                        },
                        parent: null
                    }, u = l._parseSync({
                        data: n.data,
                        path: n.path,
                        parent: c
                    });
                    if (u.status === "valid") return u;
                    u.status === "dirty" && !s && (s = {
                        result: u,
                        ctx: c
                    }), c.common.issues.length && o.push(c.common.issues);
                }
                if (s) return n.common.issues.push(...s.ctx.common.issues), s.result;
                const a = o.map((l)=>new Ka(l));
                return Tt(n, {
                    code: gt.invalid_union,
                    unionErrors: a
                }), pn;
            }
        }
        get options() {
            return this._def.options;
        }
    }
    Sb.create = (t, e)=>new Sb({
            options: t,
            typeName: hn.ZodUnion,
            ...Dn(e)
        });
    const fd = (t)=>t instanceof Tb ? fd(t.schema) : t instanceof bc ? fd(t.innerType()) : t instanceof Cb ? [
            t.value
        ] : t instanceof vh ? t.options : t instanceof Rb ? ir.objectValues(t.enum) : t instanceof Ib ? fd(t._def.innerType) : t instanceof wb ? [
            void 0
        ] : t instanceof _b ? [
            null
        ] : t instanceof iu ? [
            void 0,
            ...fd(t.unwrap())
        ] : t instanceof xh ? [
            null,
            ...fd(t.unwrap())
        ] : t instanceof LP || t instanceof Nb ? fd(t.unwrap()) : t instanceof Ab ? fd(t._def.innerType) : [];
    class OT extends Hn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            if (n.parsedType !== Ft.object) return Tt(n, {
                code: gt.invalid_type,
                expected: Ft.object,
                received: n.parsedType
            }), pn;
            const r = this.discriminator, i = n.data[r], s = this.optionsMap.get(i);
            return s ? n.common.async ? s._parseAsync({
                data: n.data,
                path: n.path,
                parent: n
            }) : s._parseSync({
                data: n.data,
                path: n.path,
                parent: n
            }) : (Tt(n, {
                code: gt.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [
                    r
                ]
            }), pn);
        }
        get discriminator() {
            return this._def.discriminator;
        }
        get options() {
            return this._def.options;
        }
        get optionsMap() {
            return this._def.optionsMap;
        }
        static create(e, n, r) {
            const i = new Map;
            for (const s of n){
                const o = fd(s.shape[e]);
                if (!o.length) throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);
                for (const a of o){
                    if (i.has(a)) throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(a)}`);
                    i.set(a, s);
                }
            }
            return new OT({
                typeName: hn.ZodDiscriminatedUnion,
                discriminator: e,
                options: n,
                optionsMap: i,
                ...Dn(r)
            });
        }
    }
    function QN(t, e) {
        const n = gd(t), r = gd(e);
        if (t === e) return {
            valid: !0,
            data: t
        };
        if (n === Ft.object && r === Ft.object) {
            const i = ir.objectKeys(e), s = ir.objectKeys(t).filter((a)=>i.indexOf(a) !== -1), o = {
                ...t,
                ...e
            };
            for (const a of s){
                const l = QN(t[a], e[a]);
                if (!l.valid) return {
                    valid: !1
                };
                o[a] = l.data;
            }
            return {
                valid: !0,
                data: o
            };
        } else if (n === Ft.array && r === Ft.array) {
            if (t.length !== e.length) return {
                valid: !1
            };
            const i = [];
            for(let s = 0; s < t.length; s++){
                const o = t[s], a = e[s], l = QN(o, a);
                if (!l.valid) return {
                    valid: !1
                };
                i.push(l.data);
            }
            return {
                valid: !0,
                data: i
            };
        } else return n === Ft.date && r === Ft.date && +t == +e ? {
            valid: !0,
            data: t
        } : {
            valid: !1
        };
    }
    class Eb extends Hn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e), i = (s, o)=>{
                if (ZN(s) || ZN(o)) return pn;
                const a = QN(s.value, o.value);
                return a.valid ? ((JN(s) || JN(o)) && n.dirty(), {
                    status: n.value,
                    value: a.data
                }) : (Tt(r, {
                    code: gt.invalid_intersection_types
                }), pn);
            };
            return r.common.async ? Promise.all([
                this._def.left._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }),
                this._def.right._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                })
            ]).then(([s, o])=>i(s, o)) : i(this._def.left._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }), this._def.right._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }));
        }
    }
    Eb.create = (t, e, n)=>new Eb({
            left: t,
            right: e,
            typeName: hn.ZodIntersection,
            ...Dn(n)
        });
    class pu extends Hn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Ft.array) return Tt(r, {
                code: gt.invalid_type,
                expected: Ft.array,
                received: r.parsedType
            }), pn;
            if (r.data.length < this._def.items.length) return Tt(r, {
                code: gt.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), pn;
            !this._def.rest && r.data.length > this._def.items.length && (Tt(r, {
                code: gt.too_big,
                maximum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), n.dirty());
            const s = [
                ...r.data
            ].map((o, a)=>{
                const l = this._def.items[a] || this._def.rest;
                return l ? l._parse(new hu(r, o, r.path, a)) : null;
            }).filter((o)=>!!o);
            return r.common.async ? Promise.all(s).then((o)=>po.mergeArray(n, o)) : po.mergeArray(n, s);
        }
        get items() {
            return this._def.items;
        }
        rest(e) {
            return new pu({
                ...this._def,
                rest: e
            });
        }
    }
    pu.create = (t, e)=>{
        if (!Array.isArray(t)) throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new pu({
            items: t,
            typeName: hn.ZodTuple,
            rest: null,
            ...Dn(e)
        });
    };
    class Mb extends Hn {
        get keySchema() {
            return this._def.keyType;
        }
        get valueSchema() {
            return this._def.valueType;
        }
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Ft.object) return Tt(r, {
                code: gt.invalid_type,
                expected: Ft.object,
                received: r.parsedType
            }), pn;
            const i = [], s = this._def.keyType, o = this._def.valueType;
            for(const a in r.data)i.push({
                key: s._parse(new hu(r, a, r.path, a)),
                value: o._parse(new hu(r, r.data[a], r.path, a)),
                alwaysSet: a in r.data
            });
            return r.common.async ? po.mergeObjectAsync(n, i) : po.mergeObjectSync(n, i);
        }
        get element() {
            return this._def.valueType;
        }
        static create(e, n, r) {
            return n instanceof Hn ? new Mb({
                keyType: e,
                valueType: n,
                typeName: hn.ZodRecord,
                ...Dn(r)
            }) : new Mb({
                keyType: pc.create(),
                valueType: e,
                typeName: hn.ZodRecord,
                ...Dn(n)
            });
        }
    }
    class WE extends Hn {
        get keySchema() {
            return this._def.keyType;
        }
        get valueSchema() {
            return this._def.valueType;
        }
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Ft.map) return Tt(r, {
                code: gt.invalid_type,
                expected: Ft.map,
                received: r.parsedType
            }), pn;
            const i = this._def.keyType, s = this._def.valueType, o = [
                ...r.data.entries()
            ].map(([a, l], c)=>({
                    key: i._parse(new hu(r, a, r.path, [
                        c,
                        "key"
                    ])),
                    value: s._parse(new hu(r, l, r.path, [
                        c,
                        "value"
                    ]))
                }));
            if (r.common.async) {
                const a = new Map;
                return Promise.resolve().then(async ()=>{
                    for (const l of o){
                        const c = await l.key, u = await l.value;
                        if (c.status === "aborted" || u.status === "aborted") return pn;
                        (c.status === "dirty" || u.status === "dirty") && n.dirty(), a.set(c.value, u.value);
                    }
                    return {
                        status: n.value,
                        value: a
                    };
                });
            } else {
                const a = new Map;
                for (const l of o){
                    const c = l.key, u = l.value;
                    if (c.status === "aborted" || u.status === "aborted") return pn;
                    (c.status === "dirty" || u.status === "dirty") && n.dirty(), a.set(c.value, u.value);
                }
                return {
                    status: n.value,
                    value: a
                };
            }
        }
    }
    WE.create = (t, e, n)=>new WE({
            valueType: e,
            keyType: t,
            typeName: hn.ZodMap,
            ...Dn(n)
        });
    class _m extends Hn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.parsedType !== Ft.set) return Tt(r, {
                code: gt.invalid_type,
                expected: Ft.set,
                received: r.parsedType
            }), pn;
            const i = this._def;
            i.minSize !== null && r.data.size < i.minSize.value && (Tt(r, {
                code: gt.too_small,
                minimum: i.minSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.minSize.message
            }), n.dirty()), i.maxSize !== null && r.data.size > i.maxSize.value && (Tt(r, {
                code: gt.too_big,
                maximum: i.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.maxSize.message
            }), n.dirty());
            const s = this._def.valueType;
            function o(l) {
                const c = new Set;
                for (const u of l){
                    if (u.status === "aborted") return pn;
                    u.status === "dirty" && n.dirty(), c.add(u.value);
                }
                return {
                    status: n.value,
                    value: c
                };
            }
            const a = [
                ...r.data.values()
            ].map((l, c)=>s._parse(new hu(r, l, r.path, c)));
            return r.common.async ? Promise.all(a).then((l)=>o(l)) : o(a);
        }
        min(e, n) {
            return new _m({
                ...this._def,
                minSize: {
                    value: e,
                    message: Qt.toString(n)
                }
            });
        }
        max(e, n) {
            return new _m({
                ...this._def,
                maxSize: {
                    value: e,
                    message: Qt.toString(n)
                }
            });
        }
        size(e, n) {
            return this.min(e, n).max(e, n);
        }
        nonempty(e) {
            return this.min(1, e);
        }
    }
    _m.create = (t, e)=>new _m({
            valueType: t,
            minSize: null,
            maxSize: null,
            typeName: hn.ZodSet,
            ...Dn(e)
        });
    class Q0 extends Hn {
        constructor(){
            super(...arguments), this.validate = this.implement;
        }
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            if (n.parsedType !== Ft.function) return Tt(n, {
                code: gt.invalid_type,
                expected: Ft.function,
                received: n.parsedType
            }), pn;
            function r(a, l) {
                return BE({
                    data: a,
                    path: n.path,
                    errorMaps: [
                        n.common.contextualErrorMap,
                        n.schemaErrorMap,
                        jE(),
                        cy
                    ].filter((c)=>!!c),
                    issueData: {
                        code: gt.invalid_arguments,
                        argumentsError: l
                    }
                });
            }
            function i(a, l) {
                return BE({
                    data: a,
                    path: n.path,
                    errorMaps: [
                        n.common.contextualErrorMap,
                        n.schemaErrorMap,
                        jE(),
                        cy
                    ].filter((c)=>!!c),
                    issueData: {
                        code: gt.invalid_return_type,
                        returnTypeError: l
                    }
                });
            }
            const s = {
                errorMap: n.common.contextualErrorMap
            }, o = n.data;
            if (this._def.returns instanceof dy) {
                const a = this;
                return Ho(async function(...l) {
                    const c = new Ka([]), u = await a._def.args.parseAsync(l, s).catch((m)=>{
                        throw c.addIssue(r(l, m)), c;
                    }), f = await Reflect.apply(o, this, u);
                    return await a._def.returns._def.type.parseAsync(f, s).catch((m)=>{
                        throw c.addIssue(i(f, m)), c;
                    });
                });
            } else {
                const a = this;
                return Ho(function(...l) {
                    const c = a._def.args.safeParse(l, s);
                    if (!c.success) throw new Ka([
                        r(l, c.error)
                    ]);
                    const u = Reflect.apply(o, this, c.data), f = a._def.returns.safeParse(u, s);
                    if (!f.success) throw new Ka([
                        i(u, f.error)
                    ]);
                    return f.data;
                });
            }
        }
        parameters() {
            return this._def.args;
        }
        returnType() {
            return this._def.returns;
        }
        args(...e) {
            return new Q0({
                ...this._def,
                args: pu.create(e).rest(am.create())
            });
        }
        returns(e) {
            return new Q0({
                ...this._def,
                returns: e
            });
        }
        implement(e) {
            return this.parse(e);
        }
        strictImplement(e) {
            return this.parse(e);
        }
        static create(e, n, r) {
            return new Q0({
                args: e || pu.create([]).rest(am.create()),
                returns: n || am.create(),
                typeName: hn.ZodFunction,
                ...Dn(r)
            });
        }
    }
    class Tb extends Hn {
        get schema() {
            return this._def.getter();
        }
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            return this._def.getter()._parse({
                data: n.data,
                path: n.path,
                parent: n
            });
        }
    }
    Tb.create = (t, e)=>new Tb({
            getter: t,
            typeName: hn.ZodLazy,
            ...Dn(e)
        });
    class Cb extends Hn {
        _parse(e) {
            if (e.data !== this._def.value) {
                const n = this._getOrReturnCtx(e);
                return Tt(n, {
                    received: n.data,
                    code: gt.invalid_literal,
                    expected: this._def.value
                }), pn;
            }
            return {
                status: "valid",
                value: e.data
            };
        }
        get value() {
            return this._def.value;
        }
    }
    Cb.create = (t, e)=>new Cb({
            value: t,
            typeName: hn.ZodLiteral,
            ...Dn(e)
        });
    function x9(t, e) {
        return new vh({
            values: t,
            typeName: hn.ZodEnum,
            ...Dn(e)
        });
    }
    class vh extends Hn {
        constructor(){
            super(...arguments), gx.set(this, void 0);
        }
        _parse(e) {
            if (typeof e.data != "string") {
                const n = this._getOrReturnCtx(e), r = this._def.values;
                return Tt(n, {
                    expected: ir.joinValues(r),
                    received: n.parsedType,
                    code: gt.invalid_type
                }), pn;
            }
            if (UE(this, gx) || m9(this, gx, new Set(this._def.values)), !UE(this, gx).has(e.data)) {
                const n = this._getOrReturnCtx(e), r = this._def.values;
                return Tt(n, {
                    received: n.data,
                    code: gt.invalid_enum_value,
                    options: r
                }), pn;
            }
            return Ho(e.data);
        }
        get options() {
            return this._def.values;
        }
        get enum() {
            const e = {};
            for (const n of this._def.values)e[n] = n;
            return e;
        }
        get Values() {
            const e = {};
            for (const n of this._def.values)e[n] = n;
            return e;
        }
        get Enum() {
            const e = {};
            for (const n of this._def.values)e[n] = n;
            return e;
        }
        extract(e, n = this._def) {
            return vh.create(e, {
                ...this._def,
                ...n
            });
        }
        exclude(e, n = this._def) {
            return vh.create(this.options.filter((r)=>!e.includes(r)), {
                ...this._def,
                ...n
            });
        }
    }
    gx = new WeakMap;
    vh.create = x9;
    class Rb extends Hn {
        constructor(){
            super(...arguments), yx.set(this, void 0);
        }
        _parse(e) {
            const n = ir.getValidEnumValues(this._def.values), r = this._getOrReturnCtx(e);
            if (r.parsedType !== Ft.string && r.parsedType !== Ft.number) {
                const i = ir.objectValues(n);
                return Tt(r, {
                    expected: ir.joinValues(i),
                    received: r.parsedType,
                    code: gt.invalid_type
                }), pn;
            }
            if (UE(this, yx) || m9(this, yx, new Set(ir.getValidEnumValues(this._def.values))), !UE(this, yx).has(e.data)) {
                const i = ir.objectValues(n);
                return Tt(r, {
                    received: r.data,
                    code: gt.invalid_enum_value,
                    options: i
                }), pn;
            }
            return Ho(e.data);
        }
        get enum() {
            return this._def.values;
        }
    }
    yx = new WeakMap;
    Rb.create = (t, e)=>new Rb({
            values: t,
            typeName: hn.ZodNativeEnum,
            ...Dn(e)
        });
    class dy extends Hn {
        unwrap() {
            return this._def.type;
        }
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            if (n.parsedType !== Ft.promise && n.common.async === !1) return Tt(n, {
                code: gt.invalid_type,
                expected: Ft.promise,
                received: n.parsedType
            }), pn;
            const r = n.parsedType === Ft.promise ? n.data : Promise.resolve(n.data);
            return Ho(r.then((i)=>this._def.type.parseAsync(i, {
                    path: n.path,
                    errorMap: n.common.contextualErrorMap
                })));
        }
    }
    dy.create = (t, e)=>new dy({
            type: t,
            typeName: hn.ZodPromise,
            ...Dn(e)
        });
    class bc extends Hn {
        innerType() {
            return this._def.schema;
        }
        sourceType() {
            return this._def.schema._def.typeName === hn.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
        }
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e), i = this._def.effect || null, s = {
                addIssue: (o)=>{
                    Tt(r, o), o.fatal ? n.abort() : n.dirty();
                },
                get path () {
                    return r.path;
                }
            };
            if (s.addIssue = s.addIssue.bind(s), i.type === "preprocess") {
                const o = i.transform(r.data, s);
                if (r.common.async) return Promise.resolve(o).then(async (a)=>{
                    if (n.value === "aborted") return pn;
                    const l = await this._def.schema._parseAsync({
                        data: a,
                        path: r.path,
                        parent: r
                    });
                    return l.status === "aborted" ? pn : l.status === "dirty" || n.value === "dirty" ? I0(l.value) : l;
                });
                {
                    if (n.value === "aborted") return pn;
                    const a = this._def.schema._parseSync({
                        data: o,
                        path: r.path,
                        parent: r
                    });
                    return a.status === "aborted" ? pn : a.status === "dirty" || n.value === "dirty" ? I0(a.value) : a;
                }
            }
            if (i.type === "refinement") {
                const o = (a)=>{
                    const l = i.refinement(a, s);
                    if (r.common.async) return Promise.resolve(l);
                    if (l instanceof Promise) throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                    return a;
                };
                if (r.common.async === !1) {
                    const a = this._def.schema._parseSync({
                        data: r.data,
                        path: r.path,
                        parent: r
                    });
                    return a.status === "aborted" ? pn : (a.status === "dirty" && n.dirty(), o(a.value), {
                        status: n.value,
                        value: a.value
                    });
                } else return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then((a)=>a.status === "aborted" ? pn : (a.status === "dirty" && n.dirty(), o(a.value).then(()=>({
                            status: n.value,
                            value: a.value
                        }))));
            }
            if (i.type === "transform") if (r.common.async === !1) {
                const o = this._def.schema._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                if (!bm(o)) return o;
                const a = i.transform(o.value, s);
                if (a instanceof Promise) throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
                return {
                    status: n.value,
                    value: a
                };
            } else return this._def.schema._parseAsync({
                data: r.data,
                path: r.path,
                parent: r
            }).then((o)=>bm(o) ? Promise.resolve(i.transform(o.value, s)).then((a)=>({
                        status: n.value,
                        value: a
                    })) : o);
            ir.assertNever(i);
        }
    }
    bc.create = (t, e, n)=>new bc({
            schema: t,
            typeName: hn.ZodEffects,
            effect: e,
            ...Dn(n)
        });
    bc.createWithPreprocess = (t, e, n)=>new bc({
            schema: e,
            effect: {
                type: "preprocess",
                transform: t
            },
            typeName: hn.ZodEffects,
            ...Dn(n)
        });
    class iu extends Hn {
        _parse(e) {
            return this._getType(e) === Ft.undefined ? Ho(void 0) : this._def.innerType._parse(e);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    iu.create = (t, e)=>new iu({
            innerType: t,
            typeName: hn.ZodOptional,
            ...Dn(e)
        });
    class xh extends Hn {
        _parse(e) {
            return this._getType(e) === Ft.null ? Ho(null) : this._def.innerType._parse(e);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    xh.create = (t, e)=>new xh({
            innerType: t,
            typeName: hn.ZodNullable,
            ...Dn(e)
        });
    class Ib extends Hn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e);
            let r = n.data;
            return n.parsedType === Ft.undefined && (r = this._def.defaultValue()), this._def.innerType._parse({
                data: r,
                path: n.path,
                parent: n
            });
        }
        removeDefault() {
            return this._def.innerType;
        }
    }
    Ib.create = (t, e)=>new Ib({
            innerType: t,
            typeName: hn.ZodDefault,
            defaultValue: typeof e.default == "function" ? e.default : ()=>e.default,
            ...Dn(e)
        });
    class Ab extends Hn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e), r = {
                ...n,
                common: {
                    ...n.common,
                    issues: []
                }
            }, i = this._def.innerType._parse({
                data: r.data,
                path: r.path,
                parent: {
                    ...r
                }
            });
            return xb(i) ? i.then((s)=>({
                    status: "valid",
                    value: s.status === "valid" ? s.value : this._def.catchValue({
                        get error () {
                            return new Ka(r.common.issues);
                        },
                        input: r.data
                    })
                })) : {
                status: "valid",
                value: i.status === "valid" ? i.value : this._def.catchValue({
                    get error () {
                        return new Ka(r.common.issues);
                    },
                    input: r.data
                })
            };
        }
        removeCatch() {
            return this._def.innerType;
        }
    }
    Ab.create = (t, e)=>new Ab({
            innerType: t,
            typeName: hn.ZodCatch,
            catchValue: typeof e.catch == "function" ? e.catch : ()=>e.catch,
            ...Dn(e)
        });
    class qE extends Hn {
        _parse(e) {
            if (this._getType(e) !== Ft.nan) {
                const r = this._getOrReturnCtx(e);
                return Tt(r, {
                    code: gt.invalid_type,
                    expected: Ft.nan,
                    received: r.parsedType
                }), pn;
            }
            return {
                status: "valid",
                value: e.data
            };
        }
    }
    qE.create = (t)=>new qE({
            typeName: hn.ZodNaN,
            ...Dn(t)
        });
    const Qee = Symbol("zod_brand");
    class LP extends Hn {
        _parse(e) {
            const { ctx: n } = this._processInputParams(e), r = n.data;
            return this._def.type._parse({
                data: r,
                path: n.path,
                parent: n
            });
        }
        unwrap() {
            return this._def.type;
        }
    }
    class Sw extends Hn {
        _parse(e) {
            const { status: n, ctx: r } = this._processInputParams(e);
            if (r.common.async) return (async ()=>{
                const s = await this._def.in._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return s.status === "aborted" ? pn : s.status === "dirty" ? (n.dirty(), I0(s.value)) : this._def.out._parseAsync({
                    data: s.value,
                    path: r.path,
                    parent: r
                });
            })();
            {
                const i = this._def.in._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return i.status === "aborted" ? pn : i.status === "dirty" ? (n.dirty(), {
                    status: "dirty",
                    value: i.value
                }) : this._def.out._parseSync({
                    data: i.value,
                    path: r.path,
                    parent: r
                });
            }
        }
        static create(e, n) {
            return new Sw({
                in: e,
                out: n,
                typeName: hn.ZodPipeline
            });
        }
    }
    class Nb extends Hn {
        _parse(e) {
            const n = this._def.innerType._parse(e), r = (i)=>(bm(i) && (i.value = Object.freeze(i.value)), i);
            return xb(n) ? n.then((i)=>r(i)) : r(n);
        }
        unwrap() {
            return this._def.innerType;
        }
    }
    Nb.create = (t, e)=>new Nb({
            innerType: t,
            typeName: hn.ZodReadonly,
            ...Dn(e)
        });
    function dF(t, e) {
        const n = typeof t == "function" ? t(e) : typeof t == "string" ? {
            message: t
        } : t;
        return typeof n == "string" ? {
            message: n
        } : n;
    }
    function b9(t, e = {}, n) {
        return t ? uy.create().superRefine((r, i)=>{
            var s, o;
            const a = t(r);
            if (a instanceof Promise) return a.then((l)=>{
                var c, u;
                if (!l) {
                    const f = dF(e, r), h = (u = (c = f.fatal) !== null && c !== void 0 ? c : n) !== null && u !== void 0 ? u : !0;
                    i.addIssue({
                        code: "custom",
                        ...f,
                        fatal: h
                    });
                }
            });
            if (!a) {
                const l = dF(e, r), c = (o = (s = l.fatal) !== null && s !== void 0 ? s : n) !== null && o !== void 0 ? o : !0;
                i.addIssue({
                    code: "custom",
                    ...l,
                    fatal: c
                });
            }
        }) : uy.create();
    }
    const ete = {
        object: di.lazycreate
    };
    var hn;
    (function(t) {
        t.ZodString = "ZodString", t.ZodNumber = "ZodNumber", t.ZodNaN = "ZodNaN", t.ZodBigInt = "ZodBigInt", t.ZodBoolean = "ZodBoolean", t.ZodDate = "ZodDate", t.ZodSymbol = "ZodSymbol", t.ZodUndefined = "ZodUndefined", t.ZodNull = "ZodNull", t.ZodAny = "ZodAny", t.ZodUnknown = "ZodUnknown", t.ZodNever = "ZodNever", t.ZodVoid = "ZodVoid", t.ZodArray = "ZodArray", t.ZodObject = "ZodObject", t.ZodUnion = "ZodUnion", t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", t.ZodIntersection = "ZodIntersection", t.ZodTuple = "ZodTuple", t.ZodRecord = "ZodRecord", t.ZodMap = "ZodMap", t.ZodSet = "ZodSet", t.ZodFunction = "ZodFunction", t.ZodLazy = "ZodLazy", t.ZodLiteral = "ZodLiteral", t.ZodEnum = "ZodEnum", t.ZodEffects = "ZodEffects", t.ZodNativeEnum = "ZodNativeEnum", t.ZodOptional = "ZodOptional", t.ZodNullable = "ZodNullable", t.ZodDefault = "ZodDefault", t.ZodCatch = "ZodCatch", t.ZodPromise = "ZodPromise", t.ZodBranded = "ZodBranded", t.ZodPipeline = "ZodPipeline", t.ZodReadonly = "ZodReadonly";
    })(hn || (hn = {}));
    const tte = (t, e = {
        message: `Input not instance of ${t.name}`
    })=>b9((n)=>n instanceof t, e), w9 = pc.create, _9 = gh.create, nte = qE.create, rte = yh.create, S9 = bb.create, ite = wm.create, ste = zE.create, ote = wb.create, ate = _b.create, lte = uy.create, cte = am.create, ute = Pd.create, dte = VE.create, fte = yc.create, hte = di.create, pte = di.strictCreate, mte = Sb.create, gte = OT.create, yte = Eb.create, vte = pu.create, xte = Mb.create, bte = WE.create, wte = _m.create, _te = Q0.create, Ste = Tb.create, Ete = Cb.create, Mte = vh.create, Tte = Rb.create, Cte = dy.create, fF = bc.create, Rte = iu.create, Ite = xh.create, Ate = bc.createWithPreprocess, Nte = Sw.create, Pte = ()=>w9().optional(), kte = ()=>_9().optional(), Ote = ()=>S9().optional(), Dte = {
        string: (t)=>pc.create({
                ...t,
                coerce: !0
            }),
        number: (t)=>gh.create({
                ...t,
                coerce: !0
            }),
        boolean: (t)=>bb.create({
                ...t,
                coerce: !0
            }),
        bigint: (t)=>yh.create({
                ...t,
                coerce: !0
            }),
        date: (t)=>wm.create({
                ...t,
                coerce: !0
            })
    }, Lte = pn;
    var Y = Object.freeze({
        __proto__: null,
        defaultErrorMap: cy,
        setErrorMap: Aee,
        getErrorMap: jE,
        makeIssue: BE,
        EMPTY_PATH: Nee,
        addIssueToContext: Tt,
        ParseStatus: po,
        INVALID: pn,
        DIRTY: I0,
        OK: Ho,
        isAborted: ZN,
        isDirty: JN,
        isValid: bm,
        isAsync: xb,
        get util () {
            return ir;
        },
        get objectUtil () {
            return YN;
        },
        ZodParsedType: Ft,
        getParsedType: gd,
        ZodType: Hn,
        datetimeRegex: v9,
        ZodString: pc,
        ZodNumber: gh,
        ZodBigInt: yh,
        ZodBoolean: bb,
        ZodDate: wm,
        ZodSymbol: zE,
        ZodUndefined: wb,
        ZodNull: _b,
        ZodAny: uy,
        ZodUnknown: am,
        ZodNever: Pd,
        ZodVoid: VE,
        ZodArray: yc,
        ZodObject: di,
        ZodUnion: Sb,
        ZodDiscriminatedUnion: OT,
        ZodIntersection: Eb,
        ZodTuple: pu,
        ZodRecord: Mb,
        ZodMap: WE,
        ZodSet: _m,
        ZodFunction: Q0,
        ZodLazy: Tb,
        ZodLiteral: Cb,
        ZodEnum: vh,
        ZodNativeEnum: Rb,
        ZodPromise: dy,
        ZodEffects: bc,
        ZodTransformer: bc,
        ZodOptional: iu,
        ZodNullable: xh,
        ZodDefault: Ib,
        ZodCatch: Ab,
        ZodNaN: qE,
        BRAND: Qee,
        ZodBranded: LP,
        ZodPipeline: Sw,
        ZodReadonly: Nb,
        custom: b9,
        Schema: Hn,
        ZodSchema: Hn,
        late: ete,
        get ZodFirstPartyTypeKind () {
            return hn;
        },
        coerce: Dte,
        any: lte,
        array: fte,
        bigint: rte,
        boolean: S9,
        date: ite,
        discriminatedUnion: gte,
        effect: fF,
        enum: Mte,
        function: _te,
        instanceof: tte,
        intersection: yte,
        lazy: Ste,
        literal: Ete,
        map: bte,
        nan: nte,
        nativeEnum: Tte,
        never: ute,
        null: ate,
        nullable: Ite,
        number: _9,
        object: hte,
        oboolean: Ote,
        onumber: kte,
        optional: Rte,
        ostring: Pte,
        pipeline: Nte,
        preprocess: Ate,
        promise: Cte,
        record: xte,
        set: wte,
        strictObject: pte,
        string: w9,
        symbol: ste,
        transformer: fF,
        tuple: vte,
        undefined: ote,
        union: mte,
        unknown: cte,
        void: dte,
        NEVER: Lte,
        ZodIssueCode: gt,
        quotelessJson: Iee,
        ZodError: Ka
    });
    const Fte = Y.object({
        page: Y.number().gte(0, "Page must be greater than zero"),
        size: Y.number().gte(1, "Page size must be greater than one to get any data")
    }), go = Y.object({
        id: Y.string().min(1)
    }), FP = Y.object({
        message: Y.string()
    }), yo = Y.object({
        id: Y.string().optional(),
        idIn: Y.array(Y.string()).optional(),
        fulltext: Y.string().optional()
    }), jte = Y.enum([
        "asc",
        "desc"
    ]), Nl = ()=>Y.union([
            Y.boolean(),
            Y.number().int().refine((t)=>t === 0 || t === 1).transform((t)=>typeof t == "boolean" ? t : t === 1)
        ]), kd = ()=>Y.union([
            Y.number(),
            Y.string().transform((t)=>parseFloat(t)).refine((t)=>!isNaN(t))
        ]), su = ()=>Y.union([
            Y.number().int(),
            Y.string().transform((t)=>parseInt(t, 10)).refine((t)=>!isNaN(t))
        ]), Ws = (t)=>Y.string().transform((e)=>JSON.parse(e)).refine((e)=>Array.isArray(e)).pipe(Y.array(t)), hF = (t)=>Y.string().transform((e)=>JSON.parse(e)).pipe(t), e3 = new Proxy(()=>e3, {
        get: ()=>e3
    }), vo = ({ entity: t, shape: e, filter: n, sort: r })=>{
        const i = e3();
        return {
            entity: t,
            "~entity": i,
            "~entity-array": [],
            "~entity-partial-exclude-id": i,
            "~entity-input": i,
            "~entity-input-array": i,
            shape: e,
            "~shape": i,
            "~shape-partial": i,
            "~shape-input": i,
            "~shape-input-partial": i,
            filter: n,
            "~filter": i,
            sort: Y.array(Y.object({
                name: Y.enum(r),
                sort: jte
            })),
            "~sort": i,
            "~sort-keyof": i
        };
    };
    var OR, pF;
    function Bte() {
        if (pF) return OR;
        pF = 1;
        class t {
            constructor(n){
                this.options = n;
            }
            clean(n) {
                return n && (Array.isArray(n) ? this._cleanArray(n) : this._isObject(n) ? this.options.cleanInPlace ? this._cleanObjectInPlace(n) : this._cleanObject(n) : n);
            }
            _cleanArray(n) {
                return this.options.cleanInPlace ? this._getFilteredArrayInPlace(n) : this._getFilteredArray(n);
            }
            _cleanObjectInPlace(n) {
                return Object.keys(n).forEach((r)=>{
                    const i = n[r];
                    if (Array.isArray(i)) {
                        const s = this._cleanArray(i);
                        this._shouldReturnArray(s) ? n[r] = s : delete n[r];
                    } else if (this._isObject(i)) {
                        const s = this.clean(i);
                        this._shouldReturnObject(s) ? n[r] = s : delete n[r];
                    } else this._shouldRemoveValue(i) && delete n[r];
                }), n;
            }
            _cleanObject(n) {
                const r = {};
                return Object.keys(n).forEach((i)=>{
                    const s = n[i];
                    if (Array.isArray(s)) {
                        const o = this._cleanArray(s);
                        this._shouldReturnArray(o) && (r[i] = o);
                    } else if (this._isObject(s)) {
                        const o = this.clean(s);
                        this._shouldReturnObject(o) && (r[i] = o);
                    } else this._shouldRemoveValue(s) || (r[i] = s);
                }), r;
            }
            _getFilteredArrayInPlace(n) {
                for(let r = n.length - 1; r >= 0; r--){
                    const i = n[r], s = this.clean(i);
                    this._isObject(s) ? this._shouldReturnObject(s) ? n[r] = s : n.splice(r, 1) : Array.isArray(s) ? this._shouldReturnArray(s) ? n[r] = s : n.splice(r, 1) : this._shouldRemoveValue(s) && n.splice(r, 1);
                }
                return n;
            }
            _getFilteredArray(n) {
                const r = [];
                return n.forEach((i)=>{
                    const s = this.clean(i);
                    this._isObject(s) ? this._shouldReturnObject(s) && r.push(s) : Array.isArray(s) ? this._shouldReturnArray(s) && r.push(s) : this._shouldRemoveValue(s) || r.push(s);
                }), r;
            }
            _isObject(n) {
                return Object.prototype.toString.call(n) === "[object Object]";
            }
            _shouldReturnArray(n) {
                return !this.options.emptyArraysCleaner || n.length !== 0;
            }
            _shouldReturnObject(n) {
                return !this.options.emptyObjectsCleaner || Object.keys(n).length !== 0;
            }
            _shouldRemoveValue(n) {
                return n === null ? this.options.nullCleaner : n === "" ? this.options.emptyStringsCleaner : Number.isNaN(n) ? this.options.nanCleaner : n === void 0;
            }
        }
        return OR = t, OR;
    }
    var DR, mF;
    function Ute() {
        if (mF) return DR;
        mF = 1;
        const t = Bte(), e = (n)=>{
            const r = n || {};
            return {
                nullCleaner: r.hasOwnProperty("nullCleaner") ? r.nullCleaner : !1,
                emptyArraysCleaner: r.hasOwnProperty("emptyArraysCleaner") ? r.emptyArraysCleaner : !0,
                emptyObjectsCleaner: r.hasOwnProperty("emptyObjectsCleaner") ? r.emptyObjectsCleaner : !0,
                emptyStringsCleaner: r.hasOwnProperty("emptyStringsCleaner") ? r.emptyStringsCleaner : !0,
                nanCleaner: r.hasOwnProperty("nanCleaner") ? r.nanCleaner : !0,
                cleanInPlace: r.hasOwnProperty("cleanInPlace") ? r.cleanInPlace : !1
            };
        };
        return DR = {
            clean: function(n, r) {
                const i = e(r);
                return new t(i).clean(n);
            }
        }, DR;
    }
    var zte = Ute();
    const Vte = Go(zte), Wte = (t, e)=>t && Vte.clean(t, {
            nullCleaner: !1,
            emptyArraysCleaner: !1,
            ...e
        }), Rf = (t, e)=>Array.from({
            length: e - t + 1
        }, (n, r)=>r + t), qte = ({ page: t, total: e, siblings: n = 1, boundaries: r = 1 })=>{
        const i = Math.max(Math.trunc(e), 0);
        if (n * 2 + 3 + r * 2 >= i) return {
            type: "simple",
            page: t,
            total: e,
            pages: Rf(1, i),
            start: [],
            end: []
        };
        const o = Math.max(t - n, r), a = Math.min(t + n, i - r), l = o > r + 2, c = a < i - (r + 1);
        return !l && c ? {
            type: "end",
            page: t,
            total: e,
            start: [],
            pages: Rf(1, n * 2 + r + 2),
            end: Rf(e - (r - 1), i)
        } : l && !c ? {
            type: "start",
            page: t,
            total: e,
            start: Rf(1, r),
            pages: Rf(e - (r + 1 + 2 * n), i),
            end: []
        } : {
            type: "both",
            page: t,
            total: e,
            start: Rf(1, r),
            pages: Rf(o, a),
            end: Rf(i - r + 1, i)
        };
    };
    var Hg = {}, nd = {}, Br = {}, If = {}, gF;
    function E9() {
        if (gF) return If;
        gF = 1, Object.defineProperty(If, "__esModule", {
            value: !0
        }), If.anumber = t, If.abytes = n, If.ahash = r, If.aexists = i, If.aoutput = s;
        function t(o) {
            if (!Number.isSafeInteger(o) || o < 0) throw new Error("positive integer expected, got " + o);
        }
        function e(o) {
            return o instanceof Uint8Array || ArrayBuffer.isView(o) && o.constructor.name === "Uint8Array";
        }
        function n(o, ...a) {
            if (!e(o)) throw new Error("Uint8Array expected");
            if (a.length > 0 && !a.includes(o.length)) throw new Error("Uint8Array expected of length " + a + ", got length=" + o.length);
        }
        function r(o) {
            if (typeof o != "function" || typeof o.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
            t(o.outputLen), t(o.blockLen);
        }
        function i(o, a = !0) {
            if (o.destroyed) throw new Error("Hash instance has been destroyed");
            if (a && o.finished) throw new Error("Hash#digest() has already been called");
        }
        function s(o, a) {
            n(o);
            const l = a.outputLen;
            if (o.length < l) throw new Error("digestInto() expects output buffer of length at least " + l);
        }
        return If;
    }
    var En = {}, yF;
    function Hte() {
        if (yF) return En;
        yF = 1, Object.defineProperty(En, "__esModule", {
            value: !0
        }), En.add5L = En.add5H = En.add4H = En.add4L = En.add3H = En.add3L = En.rotlBL = En.rotlBH = En.rotlSL = En.rotlSH = En.rotr32L = En.rotr32H = En.rotrBL = En.rotrBH = En.rotrSL = En.rotrSH = En.shrSL = En.shrSH = En.toBig = void 0, En.fromBig = n, En.split = r, En.add = b;
        const t = BigInt(2 ** 32 - 1), e = BigInt(32);
        function n(R, N = !1) {
            return N ? {
                h: Number(R & t),
                l: Number(R >> e & t)
            } : {
                h: Number(R >> e & t) | 0,
                l: Number(R & t) | 0
            };
        }
        function r(R, N = !1) {
            let k = new Uint32Array(R.length), U = new Uint32Array(R.length);
            for(let B = 0; B < R.length; B++){
                const { h: j, l: K } = n(R[B], N);
                [k[B], U[B]] = [
                    j,
                    K
                ];
            }
            return [
                k,
                U
            ];
        }
        const i = (R, N)=>BigInt(R >>> 0) << e | BigInt(N >>> 0);
        En.toBig = i;
        const s = (R, N, k)=>R >>> k;
        En.shrSH = s;
        const o = (R, N, k)=>R << 32 - k | N >>> k;
        En.shrSL = o;
        const a = (R, N, k)=>R >>> k | N << 32 - k;
        En.rotrSH = a;
        const l = (R, N, k)=>R << 32 - k | N >>> k;
        En.rotrSL = l;
        const c = (R, N, k)=>R << 64 - k | N >>> k - 32;
        En.rotrBH = c;
        const u = (R, N, k)=>R >>> k - 32 | N << 64 - k;
        En.rotrBL = u;
        const f = (R, N)=>N;
        En.rotr32H = f;
        const h = (R, N)=>R;
        En.rotr32L = h;
        const m = (R, N, k)=>R << k | N >>> 32 - k;
        En.rotlSH = m;
        const v = (R, N, k)=>N << k | R >>> 32 - k;
        En.rotlSL = v;
        const _ = (R, N, k)=>N << k - 32 | R >>> 64 - k;
        En.rotlBH = _;
        const w = (R, N, k)=>R << k - 32 | N >>> 64 - k;
        En.rotlBL = w;
        function b(R, N, k, U) {
            const B = (N >>> 0) + (U >>> 0);
            return {
                h: R + k + (B / 2 ** 32 | 0) | 0,
                l: B | 0
            };
        }
        const M = (R, N, k)=>(R >>> 0) + (N >>> 0) + (k >>> 0);
        En.add3L = M;
        const E = (R, N, k, U)=>N + k + U + (R / 2 ** 32 | 0) | 0;
        En.add3H = E;
        const T = (R, N, k, U)=>(R >>> 0) + (N >>> 0) + (k >>> 0) + (U >>> 0);
        En.add4L = T;
        const P = (R, N, k, U, B)=>N + k + U + B + (R / 2 ** 32 | 0) | 0;
        En.add4H = P;
        const A = (R, N, k, U, B)=>(R >>> 0) + (N >>> 0) + (k >>> 0) + (U >>> 0) + (B >>> 0);
        En.add5L = A;
        const O = (R, N, k, U, B, j)=>N + k + U + B + j + (R / 2 ** 32 | 0) | 0;
        En.add5H = O;
        const D = {
            fromBig: n,
            split: r,
            toBig: i,
            shrSH: s,
            shrSL: o,
            rotrSH: a,
            rotrSL: l,
            rotrBH: c,
            rotrBL: u,
            rotr32H: f,
            rotr32L: h,
            rotlSH: m,
            rotlSL: v,
            rotlBH: _,
            rotlBL: w,
            add: b,
            add3L: M,
            add3H: E,
            add4L: T,
            add4H: P,
            add5H: O,
            add5L: A
        };
        return En.default = D, En;
    }
    var LR = {}, $v = {}, vF;
    function $te() {
        return vF || (vF = 1, Object.defineProperty($v, "__esModule", {
            value: !0
        }), $v.crypto = void 0, $v.crypto = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0), $v;
    }
    var xF;
    function Gte() {
        return xF || (xF = 1, function(t) {
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Hash = t.nextTick = t.byteSwapIfBE = t.isLE = void 0, t.isBytes = r, t.u8 = i, t.u32 = s, t.createView = o, t.rotr = a, t.rotl = l, t.byteSwap = c, t.byteSwap32 = u, t.bytesToHex = h, t.hexToBytes = _, t.asyncLoop = b, t.utf8ToBytes = M, t.toBytes = E, t.concatBytes = T, t.checkOpts = A, t.wrapConstructor = O, t.wrapConstructorWithOpts = D, t.wrapXOFConstructorWithOpts = R, t.randomBytes = N;
            const e = $te(), n = E9();
            function r(k) {
                return k instanceof Uint8Array || ArrayBuffer.isView(k) && k.constructor.name === "Uint8Array";
            }
            function i(k) {
                return new Uint8Array(k.buffer, k.byteOffset, k.byteLength);
            }
            function s(k) {
                return new Uint32Array(k.buffer, k.byteOffset, Math.floor(k.byteLength / 4));
            }
            function o(k) {
                return new DataView(k.buffer, k.byteOffset, k.byteLength);
            }
            function a(k, U) {
                return k << 32 - U | k >>> U;
            }
            function l(k, U) {
                return k << U | k >>> 32 - U >>> 0;
            }
            t.isLE = new Uint8Array(new Uint32Array([
                287454020
            ]).buffer)[0] === 68;
            function c(k) {
                return k << 24 & 4278190080 | k << 8 & 16711680 | k >>> 8 & 65280 | k >>> 24 & 255;
            }
            t.byteSwapIfBE = t.isLE ? (k)=>k : (k)=>c(k);
            function u(k) {
                for(let U = 0; U < k.length; U++)k[U] = c(k[U]);
            }
            const f = Array.from({
                length: 256
            }, (k, U)=>U.toString(16).padStart(2, "0"));
            function h(k) {
                (0, n.abytes)(k);
                let U = "";
                for(let B = 0; B < k.length; B++)U += f[k[B]];
                return U;
            }
            const m = {
                _0: 48,
                _9: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };
            function v(k) {
                if (k >= m._0 && k <= m._9) return k - m._0;
                if (k >= m.A && k <= m.F) return k - (m.A - 10);
                if (k >= m.a && k <= m.f) return k - (m.a - 10);
            }
            function _(k) {
                if (typeof k != "string") throw new Error("hex string expected, got " + typeof k);
                const U = k.length, B = U / 2;
                if (U % 2) throw new Error("hex string expected, got unpadded hex of length " + U);
                const j = new Uint8Array(B);
                for(let K = 0, q = 0; K < B; K++, q += 2){
                    const ee = v(k.charCodeAt(q)), W = v(k.charCodeAt(q + 1));
                    if (ee === void 0 || W === void 0) {
                        const Z = k[q] + k[q + 1];
                        throw new Error('hex string expected, got non-hex character "' + Z + '" at index ' + q);
                    }
                    j[K] = ee * 16 + W;
                }
                return j;
            }
            const w = async ()=>{};
            t.nextTick = w;
            async function b(k, U, B) {
                let j = Date.now();
                for(let K = 0; K < k; K++){
                    B(K);
                    const q = Date.now() - j;
                    q >= 0 && q < U || (await (0, t.nextTick)(), j += q);
                }
            }
            function M(k) {
                if (typeof k != "string") throw new Error("utf8ToBytes expected string, got " + typeof k);
                return new Uint8Array(new TextEncoder().encode(k));
            }
            function E(k) {
                return typeof k == "string" && (k = M(k)), (0, n.abytes)(k), k;
            }
            function T(...k) {
                let U = 0;
                for(let j = 0; j < k.length; j++){
                    const K = k[j];
                    (0, n.abytes)(K), U += K.length;
                }
                const B = new Uint8Array(U);
                for(let j = 0, K = 0; j < k.length; j++){
                    const q = k[j];
                    B.set(q, K), K += q.length;
                }
                return B;
            }
            class P {
                clone() {
                    return this._cloneInto();
                }
            }
            t.Hash = P;
            function A(k, U) {
                if (U !== void 0 && {}.toString.call(U) !== "[object Object]") throw new Error("Options should be object or undefined");
                return Object.assign(k, U);
            }
            function O(k) {
                const U = (j)=>k().update(E(j)).digest(), B = k();
                return U.outputLen = B.outputLen, U.blockLen = B.blockLen, U.create = ()=>k(), U;
            }
            function D(k) {
                const U = (j, K)=>k(K).update(E(j)).digest(), B = k({});
                return U.outputLen = B.outputLen, U.blockLen = B.blockLen, U.create = (j)=>k(j), U;
            }
            function R(k) {
                const U = (j, K)=>k(K).update(E(j)).digest(), B = k({});
                return U.outputLen = B.outputLen, U.blockLen = B.blockLen, U.create = (j)=>k(j), U;
            }
            function N(k = 32) {
                if (e.crypto && typeof e.crypto.getRandomValues == "function") return e.crypto.getRandomValues(new Uint8Array(k));
                if (e.crypto && typeof e.crypto.randomBytes == "function") return e.crypto.randomBytes(k);
                throw new Error("crypto.getRandomValues must be defined");
            }
        }(LR)), LR;
    }
    var bF;
    function Xte() {
        if (bF) return Br;
        bF = 1, Object.defineProperty(Br, "__esModule", {
            value: !0
        }), Br.shake256 = Br.shake128 = Br.keccak_512 = Br.keccak_384 = Br.keccak_256 = Br.keccak_224 = Br.sha3_512 = Br.sha3_384 = Br.sha3_256 = Br.sha3_224 = Br.Keccak = void 0, Br.keccakP = w;
        const t = E9(), e = Hte(), n = Gte(), r = [], i = [], s = [], o = BigInt(0), a = BigInt(1), l = BigInt(2), c = BigInt(7), u = BigInt(256), f = BigInt(113);
        for(let T = 0, P = a, A = 1, O = 0; T < 24; T++){
            [A, O] = [
                O,
                (2 * A + 3 * O) % 5
            ], r.push(2 * (5 * O + A)), i.push((T + 1) * (T + 2) / 2 % 64);
            let D = o;
            for(let R = 0; R < 7; R++)P = (P << a ^ (P >> c) * f) % u, P & l && (D ^= a << (a << BigInt(R)) - a);
            s.push(D);
        }
        const [h, m] = (0, e.split)(s, !0), v = (T, P, A)=>A > 32 ? (0, e.rotlBH)(T, P, A) : (0, e.rotlSH)(T, P, A), _ = (T, P, A)=>A > 32 ? (0, e.rotlBL)(T, P, A) : (0, e.rotlSL)(T, P, A);
        function w(T, P = 24) {
            const A = new Uint32Array(10);
            for(let O = 24 - P; O < 24; O++){
                for(let N = 0; N < 10; N++)A[N] = T[N] ^ T[N + 10] ^ T[N + 20] ^ T[N + 30] ^ T[N + 40];
                for(let N = 0; N < 10; N += 2){
                    const k = (N + 8) % 10, U = (N + 2) % 10, B = A[U], j = A[U + 1], K = v(B, j, 1) ^ A[k], q = _(B, j, 1) ^ A[k + 1];
                    for(let ee = 0; ee < 50; ee += 10)T[N + ee] ^= K, T[N + ee + 1] ^= q;
                }
                let D = T[2], R = T[3];
                for(let N = 0; N < 24; N++){
                    const k = i[N], U = v(D, R, k), B = _(D, R, k), j = r[N];
                    D = T[j], R = T[j + 1], T[j] = U, T[j + 1] = B;
                }
                for(let N = 0; N < 50; N += 10){
                    for(let k = 0; k < 10; k++)A[k] = T[N + k];
                    for(let k = 0; k < 10; k++)T[N + k] ^= ~A[(k + 2) % 10] & A[(k + 4) % 10];
                }
                T[0] ^= h[O], T[1] ^= m[O];
            }
            A.fill(0);
        }
        class b extends n.Hash {
            constructor(P, A, O, D = !1, R = 24){
                if (super(), this.blockLen = P, this.suffix = A, this.outputLen = O, this.enableXOF = D, this.rounds = R, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, t.anumber)(O), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
                this.state = new Uint8Array(200), this.state32 = (0, n.u32)(this.state);
            }
            keccak() {
                n.isLE || (0, n.byteSwap32)(this.state32), w(this.state32, this.rounds), n.isLE || (0, n.byteSwap32)(this.state32), this.posOut = 0, this.pos = 0;
            }
            update(P) {
                (0, t.aexists)(this);
                const { blockLen: A, state: O } = this;
                P = (0, n.toBytes)(P);
                const D = P.length;
                for(let R = 0; R < D;){
                    const N = Math.min(A - this.pos, D - R);
                    for(let k = 0; k < N; k++)O[this.pos++] ^= P[R++];
                    this.pos === A && this.keccak();
                }
                return this;
            }
            finish() {
                if (this.finished) return;
                this.finished = !0;
                const { state: P, suffix: A, pos: O, blockLen: D } = this;
                P[O] ^= A, A & 128 && O === D - 1 && this.keccak(), P[D - 1] ^= 128, this.keccak();
            }
            writeInto(P) {
                (0, t.aexists)(this, !1), (0, t.abytes)(P), this.finish();
                const A = this.state, { blockLen: O } = this;
                for(let D = 0, R = P.length; D < R;){
                    this.posOut >= O && this.keccak();
                    const N = Math.min(O - this.posOut, R - D);
                    P.set(A.subarray(this.posOut, this.posOut + N), D), this.posOut += N, D += N;
                }
                return P;
            }
            xofInto(P) {
                if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
                return this.writeInto(P);
            }
            xof(P) {
                return (0, t.anumber)(P), this.xofInto(new Uint8Array(P));
            }
            digestInto(P) {
                if ((0, t.aoutput)(P, this), this.finished) throw new Error("digest() was already called");
                return this.writeInto(P), this.destroy(), P;
            }
            digest() {
                return this.digestInto(new Uint8Array(this.outputLen));
            }
            destroy() {
                this.destroyed = !0, this.state.fill(0);
            }
            _cloneInto(P) {
                const { blockLen: A, suffix: O, outputLen: D, rounds: R, enableXOF: N } = this;
                return P || (P = new b(A, O, D, N, R)), P.state32.set(this.state32), P.pos = this.pos, P.posOut = this.posOut, P.finished = this.finished, P.rounds = R, P.suffix = O, P.outputLen = D, P.enableXOF = N, P.destroyed = this.destroyed, P;
            }
        }
        Br.Keccak = b;
        const M = (T, P, A)=>(0, n.wrapConstructor)(()=>new b(P, T, A));
        Br.sha3_224 = M(6, 144, 224 / 8), Br.sha3_256 = M(6, 136, 256 / 8), Br.sha3_384 = M(6, 104, 384 / 8), Br.sha3_512 = M(6, 72, 512 / 8), Br.keccak_224 = M(1, 144, 224 / 8), Br.keccak_256 = M(1, 136, 256 / 8), Br.keccak_384 = M(1, 104, 384 / 8), Br.keccak_512 = M(1, 72, 512 / 8);
        const E = (T, P, A)=>(0, n.wrapXOFConstructorWithOpts)((O = {})=>new b(P, T, O.dkLen === void 0 ? A : O.dkLen, !0));
        return Br.shake128 = E(31, 168, 128 / 8), Br.shake256 = E(31, 136, 256 / 8), Br;
    }
    var wF;
    function Kte() {
        if (wF) return nd;
        wF = 1;
        const { sha3_512: t } = Xte(), e = 24, n = 32, r = (v = 4, _ = Math.random)=>{
            let w = "";
            for(; w.length < v;)w = w + Math.floor(_() * 36).toString(36);
            return w;
        };
        function i(v) {
            let _ = 8n, w = 0n;
            for (const b of v.values()){
                const M = BigInt(b);
                w = (w << _) + M;
            }
            return w;
        }
        const s = (v = "")=>i(t(v)).toString(36).slice(1), o = Array.from({
            length: 26
        }, (v, _)=>String.fromCharCode(_ + 97)), a = (v)=>o[Math.floor(v() * o.length)], l = ({ globalObj: v = typeof Gp < "u" ? Gp : typeof window < "u" ? window : {}, random: _ = Math.random } = {})=>{
            const w = Object.keys(v).toString(), b = w.length ? w + r(n, _) : r(n, _);
            return s(b).substring(0, n);
        }, c = (v)=>()=>v++, u = 476782367, f = ({ random: v = Math.random, counter: _ = c(Math.floor(v() * u)), length: w = e, fingerprint: b = l({
            random: v
        }) } = {})=>function() {
                const E = a(v), T = Date.now().toString(36), P = _().toString(36), A = r(w, v), O = `${T + A + P + b}`;
                return `${E + s(O).substring(1, w)}`;
            }, h = f(), m = (v, { minLength: _ = 2, maxLength: w = n } = {})=>{
            const b = v.length, M = /^[0-9a-z]+$/;
            try {
                if (typeof v == "string" && b >= _ && b <= w && M.test(v)) return !0;
            } finally{}
            return !1;
        };
        return nd.getConstants = ()=>({
                defaultLength: e,
                bigLength: n
            }), nd.init = f, nd.createId = h, nd.bufToBigInt = i, nd.createCounter = c, nd.createFingerprint = l, nd.isCuid = m, nd;
    }
    var _F;
    function Yte() {
        if (_F) return Hg;
        _F = 1;
        const { createId: t, init: e, getConstants: n, isCuid: r } = Kte();
        return Hg.createId = t, Hg.init = e, Hg.getConstants = n, Hg.isCuid = r, Hg;
    }
    var Zte = Yte();
    const tr = Zte.createId;
    var FR, SF;
    function Jte() {
        if (SF) return FR;
        SF = 1;
        var t = Function.prototype.toString, e = typeof Reflect == "object" && Reflect !== null && Reflect.apply, n, r;
        if (typeof e == "function" && typeof Object.defineProperty == "function") try {
            n = Object.defineProperty({}, "length", {
                get: function() {
                    throw r;
                }
            }), r = {}, e(function() {
                throw 42;
            }, null, n);
        } catch (M) {
            M !== r && (e = null);
        }
        else e = null;
        var i = /^\s*class\b/, s = function(E) {
            try {
                var T = t.call(E);
                return i.test(T);
            } catch  {
                return !1;
            }
        }, o = function(E) {
            try {
                return s(E) ? !1 : (t.call(E), !0);
            } catch  {
                return !1;
            }
        }, a = Object.prototype.toString, l = "[object Object]", c = "[object Function]", u = "[object GeneratorFunction]", f = "[object HTMLAllCollection]", h = "[object HTML document.all class]", m = "[object HTMLCollection]", v = typeof Symbol == "function" && !!Symbol.toStringTag, _ = !(0 in [
            , 
        ]), w = function() {
            return !1;
        };
        if (typeof document == "object") {
            var b = document.all;
            a.call(b) === a.call(document.all) && (w = function(E) {
                if ((_ || !E) && (typeof E > "u" || typeof E == "object")) try {
                    var T = a.call(E);
                    return (T === f || T === h || T === m || T === l) && E("") == null;
                } catch  {}
                return !1;
            });
        }
        return FR = e ? function(E) {
            if (w(E)) return !0;
            if (!E || typeof E != "function" && typeof E != "object") return !1;
            try {
                e(E, null, n);
            } catch (T) {
                if (T !== r) return !1;
            }
            return !s(E) && o(E);
        } : function(E) {
            if (w(E)) return !0;
            if (!E || typeof E != "function" && typeof E != "object") return !1;
            if (v) return o(E);
            if (s(E)) return !1;
            var T = a.call(E);
            return T !== c && T !== u && !/^\[object HTML/.test(T) ? !1 : o(E);
        }, FR;
    }
    var Qte = Jte();
    const ene = Go(Qte), tne = (t)=>ene(t), nne = (t)=>typeof t == "object" && !Array.isArray(t) && t !== null, M9 = (t)=>Object.keys(t).reduce((e, n)=>(e[n] = t[n] === "" ? null : nne(t[n]) ? M9(t[n]) : t[n], e), {});
    var kS = {
        exports: {}
    }, rne = kS.exports, EF;
    function ine() {
        return EF || (EF = 1, function(t) {
            (function(e, n) {
                t.exports = n();
            })(rne, function() {
                var e = Object.prototype.toString;
                function n(f, h) {
                    return f == null ? !1 : Object.prototype.hasOwnProperty.call(f, h);
                }
                function r(f) {
                    if (!f || o(f) && f.length === 0) return !0;
                    if (typeof f != "string") {
                        for(var h in f)if (n(f, h)) return !1;
                        return !0;
                    }
                    return !1;
                }
                function i(f) {
                    return e.call(f);
                }
                function s(f) {
                    return typeof f == "object" && i(f) === "[object Object]";
                }
                var o = Array.isArray || function(f) {
                    return e.call(f) === "[object Array]";
                };
                function a(f) {
                    return typeof f == "boolean" || i(f) === "[object Boolean]";
                }
                function l(f) {
                    var h = parseInt(f);
                    return h.toString() === f ? h : f;
                }
                function c(f) {
                    f = f || {};
                    var h = function(b) {
                        return Object.keys(h).reduce(function(M, E) {
                            return E === "create" || typeof h[E] == "function" && (M[E] = h[E].bind(h, b)), M;
                        }, {});
                    }, m;
                    f.includeInheritedProps ? m = function() {
                        return !0;
                    } : m = function(b, M) {
                        return typeof M == "number" && Array.isArray(b) || n(b, M);
                    };
                    function v(b, M) {
                        if (m(b, M)) return b[M];
                    }
                    var _;
                    f.includeInheritedProps ? _ = function(b, M) {
                        typeof M != "string" && typeof M != "number" && (M = String(M));
                        var E = v(b, M);
                        if (M === "__proto__" || M === "prototype" || M === "constructor" && typeof E == "function") throw new Error("For security reasons, object's magic properties cannot be set");
                        return E;
                    } : _ = function(b, M) {
                        return v(b, M);
                    };
                    function w(b, M, E, T) {
                        if (typeof M == "number" && (M = [
                            M
                        ]), !M || M.length === 0) return b;
                        if (typeof M == "string") return w(b, M.split(".").map(l), E, T);
                        var P = M[0], A = _(b, P);
                        return M.length === 1 ? ((A === void 0 || !T) && (b[P] = E), A) : (A === void 0 && (typeof M[1] == "number" ? b[P] = [] : b[P] = {}), w(b[P], M.slice(1), E, T));
                    }
                    return h.has = function(b, M) {
                        if (typeof M == "number" ? M = [
                            M
                        ] : typeof M == "string" && (M = M.split(".")), !M || M.length === 0) return !!b;
                        for(var E = 0; E < M.length; E++){
                            var T = l(M[E]);
                            if (typeof T == "number" && o(b) && T < b.length || (f.includeInheritedProps ? T in Object(b) : n(b, T))) b = b[T];
                            else return !1;
                        }
                        return !0;
                    }, h.ensureExists = function(b, M, E) {
                        return w(b, M, E, !0);
                    }, h.set = function(b, M, E, T) {
                        return w(b, M, E, T);
                    }, h.insert = function(b, M, E, T) {
                        var P = h.get(b, M);
                        T = ~~T, o(P) || (P = [], h.set(b, M, P)), P.splice(T, 0, E);
                    }, h.empty = function(b, M) {
                        if (!r(M) && b != null) {
                            var E, T;
                            if (E = h.get(b, M)) {
                                if (typeof E == "string") return h.set(b, M, "");
                                if (a(E)) return h.set(b, M, !1);
                                if (typeof E == "number") return h.set(b, M, 0);
                                if (o(E)) E.length = 0;
                                else if (s(E)) for(T in E)m(E, T) && delete E[T];
                                else return h.set(b, M, null);
                            }
                        }
                    }, h.push = function(b, M) {
                        var E = h.get(b, M);
                        o(E) || (E = [], h.set(b, M, E)), E.push.apply(E, Array.prototype.slice.call(arguments, 2));
                    }, h.coalesce = function(b, M, E) {
                        for(var T, P = 0, A = M.length; P < A; P++)if ((T = h.get(b, M[P])) !== void 0) return T;
                        return E;
                    }, h.get = function(b, M, E) {
                        if (typeof M == "number" && (M = [
                            M
                        ]), !M || M.length === 0) return b;
                        if (b == null) return E;
                        if (typeof M == "string") return h.get(b, M.split("."), E);
                        var T = l(M[0]), P = _(b, T);
                        return P === void 0 ? E : M.length === 1 ? P : h.get(b[T], M.slice(1), E);
                    }, h.del = function(M, E) {
                        if (typeof E == "number" && (E = [
                            E
                        ]), M == null || r(E)) return M;
                        if (typeof E == "string") return h.del(M, E.split("."));
                        var T = l(E[0]);
                        if (_(M, T), !m(M, T)) return M;
                        if (E.length === 1) o(M) ? M.splice(T, 1) : delete M[T];
                        else return h.del(M[T], E.slice(1));
                        return M;
                    }, h;
                }
                var u = c();
                return u.create = c, u.withInheritedProps = c({
                    includeInheritedProps: !0
                }), u;
            });
        }(kS)), kS.exports;
    }
    var sne = ine();
    const MF = Go(sne), one = ({ value: t, input: e, output: n })=>(t - e.min) / (e.max - e.min) * (n.max - n.min) + n.min;
    var jR = {}, BR = {};
    var TF;
    function ane() {
        if (TF) return BR;
        TF = 1;
        class t {
            constructor(n = {}){
                const { label: r, startTimestamp: i, endTimestamp: s, currentStartTimestamp: o, pauseCount: a, accumulatedMs: l } = n, c = i >= 0 && i < Date.now() ? i : void 0, u = c >= 0 && s > 0 && s > c ? s : void 0, f = o >= c && (!u || o < u) ? o : c, h = i >= 0, m = o !== void 0, v = a > 0, _ = h && !m && v;
                this._label = r || "", this._startTimestamp = c, this._currentStartTimestamp = _ ? void 0 : f, this._endTimestamp = u, this._pauseCount = a || 0, this._accumulatedMs = l || 0;
            }
            getLabel() {
                return this._label;
            }
            isStarted() {
                return this._startTimestamp >= 0;
            }
            isPaused() {
                return this.isStarted() && this._currentStartTimestamp === void 0;
            }
            isStopped() {
                return this._endTimestamp > 0;
            }
            isRunning() {
                return this.isStarted() && !this.isPaused() && !this.isStopped();
            }
            start() {
                return this.isStarted() && !this.isStopped() ? this : (this.clear(), this._startTimestamp = Date.now(), this._currentStartTimestamp = this._startTimestamp, this);
            }
            pause() {
                return this.isPaused() || !this.isStarted() || this.isStopped() ? this : (this._pauseCount += 1, this._accumulatedMs += Date.now() - this._currentStartTimestamp, this._currentStartTimestamp = void 0, this);
            }
            resume() {
                return !this.isPaused() || this.isStopped() ? this : (this._currentStartTimestamp = Date.now(), this);
            }
            stop() {
                return this.isStarted() ? (this._endTimestamp = Date.now(), this) : this;
            }
            ms() {
                return this.isStarted() ? this.isPaused() ? this._accumulatedMs : (this._endTimestamp || Date.now()) - this._currentStartTimestamp + this._accumulatedMs : 0;
            }
            pauseMs() {
                return this.isStarted() ? (this._endTimestamp || Date.now()) - this._startTimestamp - this.ms() : 0;
            }
            _getTime(n) {
                const r = Math.floor(n / 1e3), i = Math.floor(r / 60), s = Math.floor(i / 60), o = Math.floor(s / 24);
                return {
                    ms: n % 1e3,
                    s: r % 60,
                    m: i % 60,
                    h: s % 24,
                    d: o
                };
            }
            time() {
                return this._getTime(this.ms());
            }
            pauseTime() {
                return this._getTime(this.pauseMs());
            }
            pauseCount() {
                return this._pauseCount;
            }
            startedAt() {
                return this._startTimestamp;
            }
            stoppedAt() {
                return this._endTimestamp;
            }
            format(n = "%label%d d, %h h, %m m, %s s, %ms ms") {
                const r = this.time();
                return n.replace("%label", this._label ? `${this._label}: ` : "").replace("%ms", r.ms).replace("%s", r.s).replace("%m", r.m).replace("%h", r.h).replace("%d", r.d);
            }
            clear() {
                return this._startTimestamp = void 0, this._currentStartTimestamp = void 0, this._endTimestamp = void 0, this._accumulatedMs = 0, this._pauseCount = 0, this;
            }
            serialize() {
                return JSON.stringify({
                    startTimestamp: this._startTimestamp,
                    currentStartTimestamp: this._currentStartTimestamp,
                    endTimestamp: this._endTimestamp,
                    accumulatedMs: this._accumulatedMs,
                    pauseCount: this._pauseCount,
                    label: this._label
                });
            }
            static deserialize(n) {
                return new t(JSON.parse(n));
            }
            static benchmark(n) {
                if (typeof n != "function") throw new Error("Timer.benchmark expects a function");
                const r = new t({
                    label: n.name
                }).start();
                return n(), r.stop();
            }
        }
        return BR.Timer = t, BR;
    }
    var CF;
    function lne() {
        if (CF) return jR;
        CF = 1;
        const { Timer: t } = ane();
        return jR.Timer = t, jR;
    }
    var T9 = lne();
    function qn({ number: t, empty: e = "-", fraction: n = 2 }) {
        if (t == null) return e;
        try {
            return t.toLocaleString(void 0, {
                maximumFractionDigits: n
            });
        } catch (r) {
            return console.error("toHumanNumber", t, r), t.toFixed(2);
        }
    }
    const cne = (t)=>{
        let e = 0;
        for(let n = 0; n < t.length; n++)e = (e << 5) - e + t.charCodeAt(n), e |= 0;
        return Math.abs(e);
    }, C9 = async (t)=>new Promise((e, n)=>{
            const r = new FileReader;
            r.readAsDataURL(t), r.onload = ()=>e(r.result), r.onerror = (i)=>n(i);
        }), jP = ({ error: t, errors: e, onError: n })=>{
        const r = e.some((s)=>s), i = t instanceof Error;
        return !r && i && n(t), r || i;
    }, R9 = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-sm",
                "px-2",
                "py-0.5",
                "hover:bg-slate-100",
                "text-slate-500",
                "hover:text-blue-500",
                "cursor-pointer"
            ]
        },
        variant: {
            variant: {
                common: [],
                warning: [
                    "text-amber-500",
                    "hover:text-amber-600",
                    "hover:bg-amber-100"
                ],
                danger: [
                    "text-red-500",
                    "hover:text-red-600",
                    "hover:bg-red-100"
                ]
            },
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "text-slate-300",
                    "bg-slate-100",
                    "hover:bg-slate-100"
                ]
            }
        },
        defaults: {
            variant: "common",
            disabled: !1
        }
    }), une = Nn({
        use: R9,
        slot: {},
        variant: {},
        defaults: {}
    }), BP = ({ icon: t, iconProps: e, variant: n, tva: r = une, css: i, children: s, ...o })=>{
        const a = r({
            ...n,
            css: i
        }).slots;
        return x.jsxs("div", {
            className: a.base(),
            ...o,
            children: [
                mw(t) ? x.jsx(_n, {
                    icon: t,
                    ...e
                }) : t,
                s
            ]
        });
    };
    function DT() {
        return typeof window < "u";
    }
    function Th(t) {
        return I9(t) ? (t.nodeName || "").toLowerCase() : "#document";
    }
    function wa(t) {
        var e;
        return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
    }
    function gu(t) {
        var e;
        return (e = (I9(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
    }
    function I9(t) {
        return DT() ? t instanceof Node || t instanceof wa(t).Node : !1;
    }
    function zr(t) {
        return DT() ? t instanceof Element || t instanceof wa(t).Element : !1;
    }
    function Zi(t) {
        return DT() ? t instanceof HTMLElement || t instanceof wa(t).HTMLElement : !1;
    }
    function t3(t) {
        return !DT() || typeof ShadowRoot > "u" ? !1 : t instanceof ShadowRoot || t instanceof wa(t).ShadowRoot;
    }
    function Ew(t) {
        const { overflow: e, overflowX: n, overflowY: r, display: i } = Cl(t);
        return /auto|scroll|overlay|hidden|clip/.test(e + r + n) && ![
            "inline",
            "contents"
        ].includes(i);
    }
    function dne(t) {
        return [
            "table",
            "td",
            "th"
        ].includes(Th(t));
    }
    function LT(t) {
        return [
            ":popover-open",
            ":modal"
        ].some((e)=>{
            try {
                return t.matches(e);
            } catch  {
                return !1;
            }
        });
    }
    function UP(t) {
        const e = FT(), n = zr(t) ? Cl(t) : t;
        return [
            "transform",
            "translate",
            "scale",
            "rotate",
            "perspective"
        ].some((r)=>n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !e && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !e && (n.filter ? n.filter !== "none" : !1) || [
            "transform",
            "translate",
            "scale",
            "rotate",
            "perspective",
            "filter"
        ].some((r)=>(n.willChange || "").includes(r)) || [
            "paint",
            "layout",
            "strict",
            "content"
        ].some((r)=>(n.contain || "").includes(r));
    }
    function fne(t) {
        let e = Od(t);
        for(; Zi(e) && !Ed(e);){
            if (UP(e)) return e;
            if (LT(e)) return null;
            e = Od(e);
        }
        return null;
    }
    function FT() {
        return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
    }
    function Ed(t) {
        return [
            "html",
            "body",
            "#document"
        ].includes(Th(t));
    }
    function Cl(t) {
        return wa(t).getComputedStyle(t);
    }
    function jT(t) {
        return zr(t) ? {
            scrollLeft: t.scrollLeft,
            scrollTop: t.scrollTop
        } : {
            scrollLeft: t.scrollX,
            scrollTop: t.scrollY
        };
    }
    function Od(t) {
        if (Th(t) === "html") return t;
        const e = t.assignedSlot || t.parentNode || t3(t) && t.host || gu(t);
        return t3(e) ? e.host : e;
    }
    function A9(t) {
        const e = Od(t);
        return Ed(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : Zi(e) && Ew(e) ? e : A9(e);
    }
    function oh(t, e, n) {
        var r;
        e === void 0 && (e = []), n === void 0 && (n = !0);
        const i = A9(t), s = i === ((r = t.ownerDocument) == null ? void 0 : r.body), o = wa(i);
        if (s) {
            const a = n3(o);
            return e.concat(o, o.visualViewport || [], Ew(i) ? i : [], a && n ? oh(a) : []);
        }
        return e.concat(i, oh(i, [], n));
    }
    function n3(t) {
        return t.parent && Object.getPrototypeOf(t.parent) ? t.frameElement : null;
    }
    function cc(t) {
        let e = t.activeElement;
        for(; ((n = e) == null || (n = n.shadowRoot) == null ? void 0 : n.activeElement) != null;){
            var n;
            e = e.shadowRoot.activeElement;
        }
        return e;
    }
    function zs(t, e) {
        if (!t || !e) return !1;
        const n = e.getRootNode == null ? void 0 : e.getRootNode();
        if (t.contains(e)) return !0;
        if (n && t3(n)) {
            let r = e;
            for(; r;){
                if (t === r) return !0;
                r = r.parentNode || r.host;
            }
        }
        return !1;
    }
    function zP() {
        const t = navigator.userAgentData;
        return t != null && t.platform ? t.platform : navigator.platform;
    }
    function N9() {
        const t = navigator.userAgentData;
        return t && Array.isArray(t.brands) ? t.brands.map((e)=>{
            let { brand: n, version: r } = e;
            return n + "/" + r;
        }).join(" ") : navigator.userAgent;
    }
    function P9(t) {
        return t.mozInputSource === 0 && t.isTrusted ? !0 : r3() && t.pointerType ? t.type === "click" && t.buttons === 1 : t.detail === 0 && !t.pointerType;
    }
    function VP(t) {
        return pne() ? !1 : !r3() && t.width === 0 && t.height === 0 || r3() && t.width === 1 && t.height === 1 && t.pressure === 0 && t.detail === 0 && t.pointerType === "mouse" || t.width < 1 && t.height < 1 && t.pressure === 0 && t.detail === 0 && t.pointerType === "touch";
    }
    function k9() {
        return /apple/i.test(navigator.vendor);
    }
    function r3() {
        const t = /android/i;
        return t.test(zP()) || t.test(N9());
    }
    function hne() {
        return zP().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints;
    }
    function pne() {
        return N9().includes("jsdom/");
    }
    function Pb(t, e) {
        const n = [
            "mouse",
            "pen"
        ];
        return e || n.push("", void 0), n.includes(t);
    }
    function mne(t) {
        return "nativeEvent" in t;
    }
    function gne(t) {
        return t.matches("html,body");
    }
    function Vs(t) {
        return t?.ownerDocument || document;
    }
    function UR(t, e) {
        if (e == null) return !1;
        if ("composedPath" in t) return t.composedPath().includes(e);
        const n = t;
        return n.target != null && e.contains(n.target);
    }
    function Yf(t) {
        return "composedPath" in t ? t.composedPath()[0] : t.target;
    }
    const yne = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
    function WP(t) {
        return Zi(t) && t.matches(yne);
    }
    function Fo(t) {
        t.preventDefault(), t.stopPropagation();
    }
    function O9(t) {
        return t ? t.getAttribute("role") === "combobox" && WP(t) : !1;
    }
    const fy = Math.min, qa = Math.max, HE = Math.round, A0 = Math.floor, ou = (t)=>({
            x: t,
            y: t
        }), vne = {
        left: "right",
        right: "left",
        bottom: "top",
        top: "bottom"
    }, xne = {
        start: "end",
        end: "start"
    };
    function RF(t, e, n) {
        return qa(t, fy(e, n));
    }
    function Mw(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function bh(t) {
        return t.split("-")[0];
    }
    function Tw(t) {
        return t.split("-")[1];
    }
    function D9(t) {
        return t === "x" ? "y" : "x";
    }
    function L9(t) {
        return t === "y" ? "height" : "width";
    }
    function Sm(t) {
        return [
            "top",
            "bottom"
        ].includes(bh(t)) ? "y" : "x";
    }
    function F9(t) {
        return D9(Sm(t));
    }
    function bne(t, e, n) {
        n === void 0 && (n = !1);
        const r = Tw(t), i = F9(t), s = L9(i);
        let o = i === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
        return e.reference[s] > e.floating[s] && (o = $E(o)), [
            o,
            $E(o)
        ];
    }
    function wne(t) {
        const e = $E(t);
        return [
            i3(t),
            e,
            i3(e)
        ];
    }
    function i3(t) {
        return t.replace(/start|end/g, (e)=>xne[e]);
    }
    function _ne(t, e, n) {
        const r = [
            "left",
            "right"
        ], i = [
            "right",
            "left"
        ], s = [
            "top",
            "bottom"
        ], o = [
            "bottom",
            "top"
        ];
        switch(t){
            case "top":
            case "bottom":
                return n ? e ? i : r : e ? r : i;
            case "left":
            case "right":
                return e ? s : o;
            default:
                return [];
        }
    }
    function Sne(t, e, n, r) {
        const i = Tw(t);
        let s = _ne(bh(t), n === "start", r);
        return i && (s = s.map((o)=>o + "-" + i), e && (s = s.concat(s.map(i3)))), s;
    }
    function $E(t) {
        return t.replace(/left|right|bottom|top/g, (e)=>vne[e]);
    }
    function Ene(t) {
        return {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            ...t
        };
    }
    function Mne(t) {
        return typeof t != "number" ? Ene(t) : {
            top: t,
            right: t,
            bottom: t,
            left: t
        };
    }
    function GE(t) {
        const { x: e, y: n, width: r, height: i } = t;
        return {
            width: r,
            height: i,
            top: n,
            left: e,
            right: e + r,
            bottom: n + i,
            x: e,
            y: n
        };
    }
    var Tne = [
        "input:not([inert])",
        "select:not([inert])",
        "textarea:not([inert])",
        "a[href]:not([inert])",
        "button:not([inert])",
        "[tabindex]:not(slot):not([inert])",
        "audio[controls]:not([inert])",
        "video[controls]:not([inert])",
        '[contenteditable]:not([contenteditable="false"]):not([inert])',
        "details>summary:first-of-type:not([inert])",
        "details:not([inert])"
    ], XE = Tne.join(","), j9 = typeof Element > "u", hy = j9 ? function() {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, KE = !j9 && Element.prototype.getRootNode ? function(t) {
        var e;
        return t == null || (e = t.getRootNode) === null || e === void 0 ? void 0 : e.call(t);
    } : function(t) {
        return t?.ownerDocument;
    }, YE = function t(e, n) {
        var r;
        n === void 0 && (n = !0);
        var i = e == null || (r = e.getAttribute) === null || r === void 0 ? void 0 : r.call(e, "inert"), s = i === "" || i === "true", o = s || n && e && t(e.parentNode);
        return o;
    }, Cne = function(e) {
        var n, r = e == null || (n = e.getAttribute) === null || n === void 0 ? void 0 : n.call(e, "contenteditable");
        return r === "" || r === "true";
    }, Rne = function(e, n, r) {
        if (YE(e)) return [];
        var i = Array.prototype.slice.apply(e.querySelectorAll(XE));
        return n && hy.call(e, XE) && i.unshift(e), i = i.filter(r), i;
    }, Ine = function t(e, n, r) {
        for(var i = [], s = Array.from(e); s.length;){
            var o = s.shift();
            if (!YE(o, !1)) if (o.tagName === "SLOT") {
                var a = o.assignedElements(), l = a.length ? a : o.children, c = t(l, !0, r);
                r.flatten ? i.push.apply(i, c) : i.push({
                    scopeParent: o,
                    candidates: c
                });
            } else {
                var u = hy.call(o, XE);
                u && r.filter(o) && (n || !e.includes(o)) && i.push(o);
                var f = o.shadowRoot || typeof r.getShadowRoot == "function" && r.getShadowRoot(o), h = !YE(f, !1) && (!r.shadowRootFilter || r.shadowRootFilter(o));
                if (f && h) {
                    var m = t(f === !0 ? o.children : f.children, !0, r);
                    r.flatten ? i.push.apply(i, m) : i.push({
                        scopeParent: o,
                        candidates: m
                    });
                } else s.unshift.apply(s, o.children);
            }
        }
        return i;
    }, B9 = function(e) {
        return !isNaN(parseInt(e.getAttribute("tabindex"), 10));
    }, U9 = function(e) {
        if (!e) throw new Error("No node provided");
        return e.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName) || Cne(e)) && !B9(e) ? 0 : e.tabIndex;
    }, Ane = function(e, n) {
        var r = U9(e);
        return r < 0 && n && !B9(e) ? 0 : r;
    }, Nne = function(e, n) {
        return e.tabIndex === n.tabIndex ? e.documentOrder - n.documentOrder : e.tabIndex - n.tabIndex;
    }, z9 = function(e) {
        return e.tagName === "INPUT";
    }, Pne = function(e) {
        return z9(e) && e.type === "hidden";
    }, kne = function(e) {
        var n = e.tagName === "DETAILS" && Array.prototype.slice.apply(e.children).some(function(r) {
            return r.tagName === "SUMMARY";
        });
        return n;
    }, One = function(e, n) {
        for(var r = 0; r < e.length; r++)if (e[r].checked && e[r].form === n) return e[r];
    }, Dne = function(e) {
        if (!e.name) return !0;
        var n = e.form || KE(e), r = function(a) {
            return n.querySelectorAll('input[type="radio"][name="' + a + '"]');
        }, i;
        if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function") i = r(window.CSS.escape(e.name));
        else try {
            i = r(e.name);
        } catch (o) {
            return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", o.message), !1;
        }
        var s = One(i, e.form);
        return !s || s === e;
    }, Lne = function(e) {
        return z9(e) && e.type === "radio";
    }, Fne = function(e) {
        return Lne(e) && !Dne(e);
    }, jne = function(e) {
        var n, r = e && KE(e), i = (n = r) === null || n === void 0 ? void 0 : n.host, s = !1;
        if (r && r !== e) {
            var o, a, l;
            for(s = !!((o = i) !== null && o !== void 0 && (a = o.ownerDocument) !== null && a !== void 0 && a.contains(i) || e != null && (l = e.ownerDocument) !== null && l !== void 0 && l.contains(e)); !s && i;){
                var c, u, f;
                r = KE(i), i = (c = r) === null || c === void 0 ? void 0 : c.host, s = !!((u = i) !== null && u !== void 0 && (f = u.ownerDocument) !== null && f !== void 0 && f.contains(i));
            }
        }
        return s;
    }, IF = function(e) {
        var n = e.getBoundingClientRect(), r = n.width, i = n.height;
        return r === 0 && i === 0;
    }, Bne = function(e, n) {
        var r = n.displayCheck, i = n.getShadowRoot;
        if (getComputedStyle(e).visibility === "hidden") return !0;
        var s = hy.call(e, "details>summary:first-of-type"), o = s ? e.parentElement : e;
        if (hy.call(o, "details:not([open]) *")) return !0;
        if (!r || r === "full" || r === "legacy-full") {
            if (typeof i == "function") {
                for(var a = e; e;){
                    var l = e.parentElement, c = KE(e);
                    if (l && !l.shadowRoot && i(l) === !0) return IF(e);
                    e.assignedSlot ? e = e.assignedSlot : !l && c !== e.ownerDocument ? e = c.host : e = l;
                }
                e = a;
            }
            if (jne(e)) return !e.getClientRects().length;
            if (r !== "legacy-full") return !0;
        } else if (r === "non-zero-area") return IF(e);
        return !1;
    }, Une = function(e) {
        if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName)) for(var n = e.parentElement; n;){
            if (n.tagName === "FIELDSET" && n.disabled) {
                for(var r = 0; r < n.children.length; r++){
                    var i = n.children.item(r);
                    if (i.tagName === "LEGEND") return hy.call(n, "fieldset[disabled] *") ? !0 : !i.contains(e);
                }
                return !0;
            }
            n = n.parentElement;
        }
        return !1;
    }, zne = function(e, n) {
        return !(n.disabled || YE(n) || Pne(n) || Bne(n, e) || kne(n) || Une(n));
    }, s3 = function(e, n) {
        return !(Fne(n) || U9(n) < 0 || !zne(e, n));
    }, Vne = function(e) {
        var n = parseInt(e.getAttribute("tabindex"), 10);
        return !!(isNaN(n) || n >= 0);
    }, Wne = function t(e) {
        var n = [], r = [];
        return e.forEach(function(i, s) {
            var o = !!i.scopeParent, a = o ? i.scopeParent : i, l = Ane(a, o), c = o ? t(i.candidates) : a;
            l === 0 ? o ? n.push.apply(n, c) : n.push(a) : r.push({
                documentOrder: s,
                tabIndex: l,
                item: i,
                isScope: o,
                content: c
            });
        }), r.sort(Nne).reduce(function(i, s) {
            return s.isScope ? i.push.apply(i, s.content) : i.push(s.content), i;
        }, []).concat(n);
    }, BT = function(e, n) {
        n = n || {};
        var r;
        return n.getShadowRoot ? r = Ine([
            e
        ], n.includeContainer, {
            filter: s3.bind(null, n),
            flatten: !1,
            getShadowRoot: n.getShadowRoot,
            shadowRootFilter: Vne
        }) : r = Rne(e, n.includeContainer, s3.bind(null, n)), Wne(r);
    }, qne = function(e, n) {
        if (n = n || {}, !e) throw new Error("No node provided");
        return hy.call(e, XE) === !1 ? !1 : s3(n, e);
    };
    function AF(t, e, n) {
        let { reference: r, floating: i } = t;
        const s = Sm(e), o = F9(e), a = L9(o), l = bh(e), c = s === "y", u = r.x + r.width / 2 - i.width / 2, f = r.y + r.height / 2 - i.height / 2, h = r[a] / 2 - i[a] / 2;
        let m;
        switch(l){
            case "top":
                m = {
                    x: u,
                    y: r.y - i.height
                };
                break;
            case "bottom":
                m = {
                    x: u,
                    y: r.y + r.height
                };
                break;
            case "right":
                m = {
                    x: r.x + r.width,
                    y: f
                };
                break;
            case "left":
                m = {
                    x: r.x - i.width,
                    y: f
                };
                break;
            default:
                m = {
                    x: r.x,
                    y: r.y
                };
        }
        switch(Tw(e)){
            case "start":
                m[o] -= h * (n && c ? -1 : 1);
                break;
            case "end":
                m[o] += h * (n && c ? -1 : 1);
                break;
        }
        return m;
    }
    const Hne = async (t, e, n)=>{
        const { placement: r = "bottom", strategy: i = "absolute", middleware: s = [], platform: o } = n, a = s.filter(Boolean), l = await (o.isRTL == null ? void 0 : o.isRTL(e));
        let c = await o.getElementRects({
            reference: t,
            floating: e,
            strategy: i
        }), { x: u, y: f } = AF(c, r, l), h = r, m = {}, v = 0;
        for(let _ = 0; _ < a.length; _++){
            const { name: w, fn: b } = a[_], { x: M, y: E, data: T, reset: P } = await b({
                x: u,
                y: f,
                initialPlacement: r,
                placement: h,
                strategy: i,
                middlewareData: m,
                rects: c,
                platform: o,
                elements: {
                    reference: t,
                    floating: e
                }
            });
            u = M ?? u, f = E ?? f, m = {
                ...m,
                [w]: {
                    ...m[w],
                    ...T
                }
            }, P && v <= 50 && (v++, typeof P == "object" && (P.placement && (h = P.placement), P.rects && (c = P.rects === !0 ? await o.getElementRects({
                reference: t,
                floating: e,
                strategy: i
            }) : P.rects), { x: u, y: f } = AF(c, h, l)), _ = -1);
        }
        return {
            x: u,
            y: f,
            placement: h,
            strategy: i,
            middlewareData: m
        };
    };
    async function qP(t, e) {
        var n;
        e === void 0 && (e = {});
        const { x: r, y: i, platform: s, rects: o, elements: a, strategy: l } = t, { boundary: c = "clippingAncestors", rootBoundary: u = "viewport", elementContext: f = "floating", altBoundary: h = !1, padding: m = 0 } = Mw(e, t), v = Mne(m), w = a[h ? f === "floating" ? "reference" : "floating" : f], b = GE(await s.getClippingRect({
            element: (n = await (s.isElement == null ? void 0 : s.isElement(w))) == null || n ? w : w.contextElement || await (s.getDocumentElement == null ? void 0 : s.getDocumentElement(a.floating)),
            boundary: c,
            rootBoundary: u,
            strategy: l
        })), M = f === "floating" ? {
            x: r,
            y: i,
            width: o.floating.width,
            height: o.floating.height
        } : o.reference, E = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(a.floating)), T = await (s.isElement == null ? void 0 : s.isElement(E)) ? await (s.getScale == null ? void 0 : s.getScale(E)) || {
            x: 1,
            y: 1
        } : {
            x: 1,
            y: 1
        }, P = GE(s.convertOffsetParentRelativeRectToViewportRelativeRect ? await s.convertOffsetParentRelativeRectToViewportRelativeRect({
            elements: a,
            rect: M,
            offsetParent: E,
            strategy: l
        }) : M);
        return {
            top: (b.top - P.top + v.top) / T.y,
            bottom: (P.bottom - b.bottom + v.bottom) / T.y,
            left: (b.left - P.left + v.left) / T.x,
            right: (P.right - b.right + v.right) / T.x
        };
    }
    const $ne = function(t) {
        return t === void 0 && (t = {}), {
            name: "flip",
            options: t,
            async fn (e) {
                var n, r;
                const { placement: i, middlewareData: s, rects: o, initialPlacement: a, platform: l, elements: c } = e, { mainAxis: u = !0, crossAxis: f = !0, fallbackPlacements: h, fallbackStrategy: m = "bestFit", fallbackAxisSideDirection: v = "none", flipAlignment: _ = !0, ...w } = Mw(t, e);
                if ((n = s.arrow) != null && n.alignmentOffset) return {};
                const b = bh(i), M = Sm(a), E = bh(a) === a, T = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)), P = h || (E || !_ ? [
                    $E(a)
                ] : wne(a)), A = v !== "none";
                !h && A && P.push(...Sne(a, _, v, T));
                const O = [
                    a,
                    ...P
                ], D = await qP(e, w), R = [];
                let N = ((r = s.flip) == null ? void 0 : r.overflows) || [];
                if (u && R.push(D[b]), f) {
                    const j = bne(i, o, T);
                    R.push(D[j[0]], D[j[1]]);
                }
                if (N = [
                    ...N,
                    {
                        placement: i,
                        overflows: R
                    }
                ], !R.every((j)=>j <= 0)) {
                    var k, U;
                    const j = (((k = s.flip) == null ? void 0 : k.index) || 0) + 1, K = O[j];
                    if (K) return {
                        data: {
                            index: j,
                            overflows: N
                        },
                        reset: {
                            placement: K
                        }
                    };
                    let q = (U = N.filter((ee)=>ee.overflows[0] <= 0).sort((ee, W)=>ee.overflows[1] - W.overflows[1])[0]) == null ? void 0 : U.placement;
                    if (!q) switch(m){
                        case "bestFit":
                            {
                                var B;
                                const ee = (B = N.filter((W)=>{
                                    if (A) {
                                        const Z = Sm(W.placement);
                                        return Z === M || Z === "y";
                                    }
                                    return !0;
                                }).map((W)=>[
                                        W.placement,
                                        W.overflows.filter((Z)=>Z > 0).reduce((Z, $)=>Z + $, 0)
                                    ]).sort((W, Z)=>W[1] - Z[1])[0]) == null ? void 0 : B[0];
                                ee && (q = ee);
                                break;
                            }
                        case "initialPlacement":
                            q = a;
                            break;
                    }
                    if (i !== q) return {
                        reset: {
                            placement: q
                        }
                    };
                }
                return {};
            }
        };
    };
    async function Gne(t, e) {
        const { placement: n, platform: r, elements: i } = t, s = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), o = bh(n), a = Tw(n), l = Sm(n) === "y", c = [
            "left",
            "top"
        ].includes(o) ? -1 : 1, u = s && l ? -1 : 1, f = Mw(e, t);
        let { mainAxis: h, crossAxis: m, alignmentAxis: v } = typeof f == "number" ? {
            mainAxis: f,
            crossAxis: 0,
            alignmentAxis: null
        } : {
            mainAxis: f.mainAxis || 0,
            crossAxis: f.crossAxis || 0,
            alignmentAxis: f.alignmentAxis
        };
        return a && typeof v == "number" && (m = a === "end" ? v * -1 : v), l ? {
            x: m * u,
            y: h * c
        } : {
            x: h * c,
            y: m * u
        };
    }
    const Xne = function(t) {
        return t === void 0 && (t = 0), {
            name: "offset",
            options: t,
            async fn (e) {
                var n, r;
                const { x: i, y: s, placement: o, middlewareData: a } = e, l = await Gne(e, t);
                return o === ((n = a.offset) == null ? void 0 : n.placement) && (r = a.arrow) != null && r.alignmentOffset ? {} : {
                    x: i + l.x,
                    y: s + l.y,
                    data: {
                        ...l,
                        placement: o
                    }
                };
            }
        };
    }, Kne = function(t) {
        return t === void 0 && (t = {}), {
            name: "shift",
            options: t,
            async fn (e) {
                const { x: n, y: r, placement: i } = e, { mainAxis: s = !0, crossAxis: o = !1, limiter: a = {
                    fn: (w)=>{
                        let { x: b, y: M } = w;
                        return {
                            x: b,
                            y: M
                        };
                    }
                }, ...l } = Mw(t, e), c = {
                    x: n,
                    y: r
                }, u = await qP(e, l), f = Sm(bh(i)), h = D9(f);
                let m = c[h], v = c[f];
                if (s) {
                    const w = h === "y" ? "top" : "left", b = h === "y" ? "bottom" : "right", M = m + u[w], E = m - u[b];
                    m = RF(M, m, E);
                }
                if (o) {
                    const w = f === "y" ? "top" : "left", b = f === "y" ? "bottom" : "right", M = v + u[w], E = v - u[b];
                    v = RF(M, v, E);
                }
                const _ = a.fn({
                    ...e,
                    [h]: m,
                    [f]: v
                });
                return {
                    ..._,
                    data: {
                        x: _.x - n,
                        y: _.y - r,
                        enabled: {
                            [h]: s,
                            [f]: o
                        }
                    }
                };
            }
        };
    }, Yne = function(t) {
        return t === void 0 && (t = {}), {
            name: "size",
            options: t,
            async fn (e) {
                var n, r;
                const { placement: i, rects: s, platform: o, elements: a } = e, { apply: l = ()=>{}, ...c } = Mw(t, e), u = await qP(e, c), f = bh(i), h = Tw(i), m = Sm(i) === "y", { width: v, height: _ } = s.floating;
                let w, b;
                f === "top" || f === "bottom" ? (w = f, b = h === (await (o.isRTL == null ? void 0 : o.isRTL(a.floating)) ? "start" : "end") ? "left" : "right") : (b = f, w = h === "end" ? "top" : "bottom");
                const M = _ - u.top - u.bottom, E = v - u.left - u.right, T = fy(_ - u[w], M), P = fy(v - u[b], E), A = !e.middlewareData.shift;
                let O = T, D = P;
                if ((n = e.middlewareData.shift) != null && n.enabled.x && (D = E), (r = e.middlewareData.shift) != null && r.enabled.y && (O = M), A && !h) {
                    const N = qa(u.left, 0), k = qa(u.right, 0), U = qa(u.top, 0), B = qa(u.bottom, 0);
                    m ? D = v - 2 * (N !== 0 || k !== 0 ? N + k : qa(u.left, u.right)) : O = _ - 2 * (U !== 0 || B !== 0 ? U + B : qa(u.top, u.bottom));
                }
                await l({
                    ...e,
                    availableWidth: D,
                    availableHeight: O
                });
                const R = await o.getDimensions(a.floating);
                return v !== R.width || _ !== R.height ? {
                    reset: {
                        rects: !0
                    }
                } : {};
            }
        };
    };
    function V9(t) {
        const e = Cl(t);
        let n = parseFloat(e.width) || 0, r = parseFloat(e.height) || 0;
        const i = Zi(t), s = i ? t.offsetWidth : n, o = i ? t.offsetHeight : r, a = HE(n) !== s || HE(r) !== o;
        return a && (n = s, r = o), {
            width: n,
            height: r,
            $: a
        };
    }
    function HP(t) {
        return zr(t) ? t : t.contextElement;
    }
    function ey(t) {
        const e = HP(t);
        if (!Zi(e)) return ou(1);
        const n = e.getBoundingClientRect(), { width: r, height: i, $: s } = V9(e);
        let o = (s ? HE(n.width) : n.width) / r, a = (s ? HE(n.height) : n.height) / i;
        return (!o || !Number.isFinite(o)) && (o = 1), (!a || !Number.isFinite(a)) && (a = 1), {
            x: o,
            y: a
        };
    }
    const Zne = ou(0);
    function W9(t) {
        const e = wa(t);
        return !FT() || !e.visualViewport ? Zne : {
            x: e.visualViewport.offsetLeft,
            y: e.visualViewport.offsetTop
        };
    }
    function Jne(t, e, n) {
        return e === void 0 && (e = !1), !n || e && n !== wa(t) ? !1 : e;
    }
    function Em(t, e, n, r) {
        e === void 0 && (e = !1), n === void 0 && (n = !1);
        const i = t.getBoundingClientRect(), s = HP(t);
        let o = ou(1);
        e && (r ? zr(r) && (o = ey(r)) : o = ey(t));
        const a = Jne(s, n, r) ? W9(s) : ou(0);
        let l = (i.left + a.x) / o.x, c = (i.top + a.y) / o.y, u = i.width / o.x, f = i.height / o.y;
        if (s) {
            const h = wa(s), m = r && zr(r) ? wa(r) : r;
            let v = h, _ = n3(v);
            for(; _ && r && m !== v;){
                const w = ey(_), b = _.getBoundingClientRect(), M = Cl(_), E = b.left + (_.clientLeft + parseFloat(M.paddingLeft)) * w.x, T = b.top + (_.clientTop + parseFloat(M.paddingTop)) * w.y;
                l *= w.x, c *= w.y, u *= w.x, f *= w.y, l += E, c += T, v = wa(_), _ = n3(v);
            }
        }
        return GE({
            width: u,
            height: f,
            x: l,
            y: c
        });
    }
    function $P(t, e) {
        const n = jT(t).scrollLeft;
        return e ? e.left + n : Em(gu(t)).left + n;
    }
    function q9(t, e, n) {
        n === void 0 && (n = !1);
        const r = t.getBoundingClientRect(), i = r.left + e.scrollLeft - (n ? 0 : $P(t, r)), s = r.top + e.scrollTop;
        return {
            x: i,
            y: s
        };
    }
    function Qne(t) {
        let { elements: e, rect: n, offsetParent: r, strategy: i } = t;
        const s = i === "fixed", o = gu(r), a = e ? LT(e.floating) : !1;
        if (r === o || a && s) return n;
        let l = {
            scrollLeft: 0,
            scrollTop: 0
        }, c = ou(1);
        const u = ou(0), f = Zi(r);
        if ((f || !f && !s) && ((Th(r) !== "body" || Ew(o)) && (l = jT(r)), Zi(r))) {
            const m = Em(r);
            c = ey(r), u.x = m.x + r.clientLeft, u.y = m.y + r.clientTop;
        }
        const h = o && !f && !s ? q9(o, l, !0) : ou(0);
        return {
            width: n.width * c.x,
            height: n.height * c.y,
            x: n.x * c.x - l.scrollLeft * c.x + u.x + h.x,
            y: n.y * c.y - l.scrollTop * c.y + u.y + h.y
        };
    }
    function ere(t) {
        return Array.from(t.getClientRects());
    }
    function tre(t) {
        const e = gu(t), n = jT(t), r = t.ownerDocument.body, i = qa(e.scrollWidth, e.clientWidth, r.scrollWidth, r.clientWidth), s = qa(e.scrollHeight, e.clientHeight, r.scrollHeight, r.clientHeight);
        let o = -n.scrollLeft + $P(t);
        const a = -n.scrollTop;
        return Cl(r).direction === "rtl" && (o += qa(e.clientWidth, r.clientWidth) - i), {
            width: i,
            height: s,
            x: o,
            y: a
        };
    }
    function nre(t, e) {
        const n = wa(t), r = gu(t), i = n.visualViewport;
        let s = r.clientWidth, o = r.clientHeight, a = 0, l = 0;
        if (i) {
            s = i.width, o = i.height;
            const c = FT();
            (!c || c && e === "fixed") && (a = i.offsetLeft, l = i.offsetTop);
        }
        return {
            width: s,
            height: o,
            x: a,
            y: l
        };
    }
    function rre(t, e) {
        const n = Em(t, !0, e === "fixed"), r = n.top + t.clientTop, i = n.left + t.clientLeft, s = Zi(t) ? ey(t) : ou(1), o = t.clientWidth * s.x, a = t.clientHeight * s.y, l = i * s.x, c = r * s.y;
        return {
            width: o,
            height: a,
            x: l,
            y: c
        };
    }
    function NF(t, e, n) {
        let r;
        if (e === "viewport") r = nre(t, n);
        else if (e === "document") r = tre(gu(t));
        else if (zr(e)) r = rre(e, n);
        else {
            const i = W9(t);
            r = {
                x: e.x - i.x,
                y: e.y - i.y,
                width: e.width,
                height: e.height
            };
        }
        return GE(r);
    }
    function H9(t, e) {
        const n = Od(t);
        return n === e || !zr(n) || Ed(n) ? !1 : Cl(n).position === "fixed" || H9(n, e);
    }
    function ire(t, e) {
        const n = e.get(t);
        if (n) return n;
        let r = oh(t, [], !1).filter((a)=>zr(a) && Th(a) !== "body"), i = null;
        const s = Cl(t).position === "fixed";
        let o = s ? Od(t) : t;
        for(; zr(o) && !Ed(o);){
            const a = Cl(o), l = UP(o);
            !l && a.position === "fixed" && (i = null), (s ? !l && !i : !l && a.position === "static" && !!i && [
                "absolute",
                "fixed"
            ].includes(i.position) || Ew(o) && !l && H9(t, o)) ? r = r.filter((u)=>u !== o) : i = a, o = Od(o);
        }
        return e.set(t, r), r;
    }
    function sre(t) {
        let { element: e, boundary: n, rootBoundary: r, strategy: i } = t;
        const o = [
            ...n === "clippingAncestors" ? LT(e) ? [] : ire(e, this._c) : [].concat(n),
            r
        ], a = o[0], l = o.reduce((c, u)=>{
            const f = NF(e, u, i);
            return c.top = qa(f.top, c.top), c.right = fy(f.right, c.right), c.bottom = fy(f.bottom, c.bottom), c.left = qa(f.left, c.left), c;
        }, NF(e, a, i));
        return {
            width: l.right - l.left,
            height: l.bottom - l.top,
            x: l.left,
            y: l.top
        };
    }
    function ore(t) {
        const { width: e, height: n } = V9(t);
        return {
            width: e,
            height: n
        };
    }
    function are(t, e, n) {
        const r = Zi(e), i = gu(e), s = n === "fixed", o = Em(t, !0, s, e);
        let a = {
            scrollLeft: 0,
            scrollTop: 0
        };
        const l = ou(0);
        if (r || !r && !s) if ((Th(e) !== "body" || Ew(i)) && (a = jT(e)), r) {
            const h = Em(e, !0, s, e);
            l.x = h.x + e.clientLeft, l.y = h.y + e.clientTop;
        } else i && (l.x = $P(i));
        const c = i && !r && !s ? q9(i, a) : ou(0), u = o.left + a.scrollLeft - l.x - c.x, f = o.top + a.scrollTop - l.y - c.y;
        return {
            x: u,
            y: f,
            width: o.width,
            height: o.height
        };
    }
    function zR(t) {
        return Cl(t).position === "static";
    }
    function PF(t, e) {
        if (!Zi(t) || Cl(t).position === "fixed") return null;
        if (e) return e(t);
        let n = t.offsetParent;
        return gu(t) === n && (n = n.ownerDocument.body), n;
    }
    function $9(t, e) {
        const n = wa(t);
        if (LT(t)) return n;
        if (!Zi(t)) {
            let i = Od(t);
            for(; i && !Ed(i);){
                if (zr(i) && !zR(i)) return i;
                i = Od(i);
            }
            return n;
        }
        let r = PF(t, e);
        for(; r && dne(r) && zR(r);)r = PF(r, e);
        return r && Ed(r) && zR(r) && !UP(r) ? n : r || fne(t) || n;
    }
    const lre = async function(t) {
        const e = this.getOffsetParent || $9, n = this.getDimensions, r = await n(t.floating);
        return {
            reference: are(t.reference, await e(t.floating), t.strategy),
            floating: {
                x: 0,
                y: 0,
                width: r.width,
                height: r.height
            }
        };
    };
    function cre(t) {
        return Cl(t).direction === "rtl";
    }
    const ure = {
        convertOffsetParentRelativeRectToViewportRelativeRect: Qne,
        getDocumentElement: gu,
        getClippingRect: sre,
        getOffsetParent: $9,
        getElementRects: lre,
        getClientRects: ere,
        getDimensions: ore,
        getScale: ey,
        isElement: zr,
        isRTL: cre
    };
    function G9(t, e) {
        return t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height;
    }
    function dre(t, e) {
        let n = null, r;
        const i = gu(t);
        function s() {
            var a;
            clearTimeout(r), (a = n) == null || a.disconnect(), n = null;
        }
        function o(a, l) {
            a === void 0 && (a = !1), l === void 0 && (l = 1), s();
            const c = t.getBoundingClientRect(), { left: u, top: f, width: h, height: m } = c;
            if (a || e(), !h || !m) return;
            const v = A0(f), _ = A0(i.clientWidth - (u + h)), w = A0(i.clientHeight - (f + m)), b = A0(u), E = {
                rootMargin: -v + "px " + -_ + "px " + -w + "px " + -b + "px",
                threshold: qa(0, fy(1, l)) || 1
            };
            let T = !0;
            function P(A) {
                const O = A[0].intersectionRatio;
                if (O !== l) {
                    if (!T) return o();
                    O ? o(!1, O) : r = setTimeout(()=>{
                        o(!1, 1e-7);
                    }, 1e3);
                }
                O === 1 && !G9(c, t.getBoundingClientRect()) && o(), T = !1;
            }
            try {
                n = new IntersectionObserver(P, {
                    ...E,
                    root: i.ownerDocument
                });
            } catch  {
                n = new IntersectionObserver(P, E);
            }
            n.observe(t);
        }
        return o(!0), s;
    }
    function X9(t, e, n, r) {
        r === void 0 && (r = {});
        const { ancestorScroll: i = !0, ancestorResize: s = !0, elementResize: o = typeof ResizeObserver == "function", layoutShift: a = typeof IntersectionObserver == "function", animationFrame: l = !1 } = r, c = HP(t), u = i || s ? [
            ...c ? oh(c) : [],
            ...oh(e)
        ] : [];
        u.forEach((b)=>{
            i && b.addEventListener("scroll", n, {
                passive: !0
            }), s && b.addEventListener("resize", n);
        });
        const f = c && a ? dre(c, n) : null;
        let h = -1, m = null;
        o && (m = new ResizeObserver((b)=>{
            let [M] = b;
            M && M.target === c && m && (m.unobserve(e), cancelAnimationFrame(h), h = requestAnimationFrame(()=>{
                var E;
                (E = m) == null || E.observe(e);
            })), n();
        }), c && !l && m.observe(c), m.observe(e));
        let v, _ = l ? Em(t) : null;
        l && w();
        function w() {
            const b = Em(t);
            _ && !G9(_, b) && n(), _ = b, v = requestAnimationFrame(w);
        }
        return n(), ()=>{
            var b;
            u.forEach((M)=>{
                i && M.removeEventListener("scroll", n), s && M.removeEventListener("resize", n);
            }), f?.(), (b = m) == null || b.disconnect(), m = null, l && cancelAnimationFrame(v);
        };
    }
    const fre = Xne, hre = Kne, pre = $ne, mre = Yne, gre = (t, e, n)=>{
        const r = new Map, i = {
            platform: ure,
            ...n
        }, s = {
            ...i.platform,
            _c: r
        };
        return Hne(t, e, {
            ...i,
            platform: s
        });
    };
    var OS = typeof document < "u" ? J.useLayoutEffect : J.useEffect;
    function ZE(t, e) {
        if (t === e) return !0;
        if (typeof t != typeof e) return !1;
        if (typeof t == "function" && t.toString() === e.toString()) return !0;
        let n, r, i;
        if (t && e && typeof t == "object") {
            if (Array.isArray(t)) {
                if (n = t.length, n !== e.length) return !1;
                for(r = n; r-- !== 0;)if (!ZE(t[r], e[r])) return !1;
                return !0;
            }
            if (i = Object.keys(t), n = i.length, n !== Object.keys(e).length) return !1;
            for(r = n; r-- !== 0;)if (!{}.hasOwnProperty.call(e, i[r])) return !1;
            for(r = n; r-- !== 0;){
                const s = i[r];
                if (!(s === "_owner" && t.$$typeof) && !ZE(t[s], e[s])) return !1;
            }
            return !0;
        }
        return t !== t && e !== e;
    }
    function K9(t) {
        return typeof window > "u" ? 1 : (t.ownerDocument.defaultView || window).devicePixelRatio || 1;
    }
    function kF(t, e) {
        const n = K9(t);
        return Math.round(e * n) / n;
    }
    function VR(t) {
        const e = J.useRef(t);
        return OS(()=>{
            e.current = t;
        }), e;
    }
    function yre(t) {
        t === void 0 && (t = {});
        const { placement: e = "bottom", strategy: n = "absolute", middleware: r = [], platform: i, elements: { reference: s, floating: o } = {}, transform: a = !0, whileElementsMounted: l, open: c } = t, [u, f] = J.useState({
            x: 0,
            y: 0,
            strategy: n,
            placement: e,
            middlewareData: {},
            isPositioned: !1
        }), [h, m] = J.useState(r);
        ZE(h, r) || m(r);
        const [v, _] = J.useState(null), [w, b] = J.useState(null), M = J.useCallback((W)=>{
            W !== A.current && (A.current = W, _(W));
        }, []), E = J.useCallback((W)=>{
            W !== O.current && (O.current = W, b(W));
        }, []), T = s || v, P = o || w, A = J.useRef(null), O = J.useRef(null), D = J.useRef(u), R = l != null, N = VR(l), k = VR(i), U = VR(c), B = J.useCallback(()=>{
            if (!A.current || !O.current) return;
            const W = {
                placement: e,
                strategy: n,
                middleware: h
            };
            k.current && (W.platform = k.current), gre(A.current, O.current, W).then((Z)=>{
                const $ = {
                    ...Z,
                    isPositioned: U.current !== !1
                };
                j.current && !ZE(D.current, $) && (D.current = $, vT.flushSync(()=>{
                    f($);
                }));
            });
        }, [
            h,
            e,
            n,
            k,
            U
        ]);
        OS(()=>{
            c === !1 && D.current.isPositioned && (D.current.isPositioned = !1, f((W)=>({
                    ...W,
                    isPositioned: !1
                })));
        }, [
            c
        ]);
        const j = J.useRef(!1);
        OS(()=>(j.current = !0, ()=>{
                j.current = !1;
            }), []), OS(()=>{
            if (T && (A.current = T), P && (O.current = P), T && P) {
                if (N.current) return N.current(T, P, B);
                B();
            }
        }, [
            T,
            P,
            B,
            N,
            R
        ]);
        const K = J.useMemo(()=>({
                reference: A,
                floating: O,
                setReference: M,
                setFloating: E
            }), [
            M,
            E
        ]), q = J.useMemo(()=>({
                reference: T,
                floating: P
            }), [
            T,
            P
        ]), ee = J.useMemo(()=>{
            const W = {
                position: n,
                left: 0,
                top: 0
            };
            if (!q.floating) return W;
            const Z = kF(q.floating, u.x), $ = kF(q.floating, u.y);
            return a ? {
                ...W,
                transform: "translate(" + Z + "px, " + $ + "px)",
                ...K9(q.floating) >= 1.5 && {
                    willChange: "transform"
                }
            } : {
                position: n,
                left: Z,
                top: $
            };
        }, [
            n,
            a,
            q.floating,
            u.x,
            u.y
        ]);
        return J.useMemo(()=>({
                ...u,
                update: B,
                refs: K,
                elements: q,
                floatingStyles: ee
            }), [
            u,
            B,
            K,
            q,
            ee
        ]);
    }
    const Y9 = (t, e)=>({
            ...fre(t),
            options: [
                t,
                e
            ]
        }), vre = (t, e)=>({
            ...hre(t),
            options: [
                t,
                e
            ]
        }), Z9 = (t, e)=>({
            ...pre(t),
            options: [
                t,
                e
            ]
        }), xre = (t, e)=>({
            ...mre(t),
            options: [
                t,
                e
            ]
        });
    function OF(t) {
        return J.useMemo(()=>t.every((e)=>e == null) ? null : (e)=>{
                t.forEach((n)=>{
                    typeof n == "function" ? n(e) : n != null && (n.current = e);
                });
            }, t);
    }
    const J9 = {
        ...xG
    }, bre = J9.useInsertionEffect, wre = bre || ((t)=>t());
    function Uo(t) {
        const e = J.useRef(()=>{});
        return wre(()=>{
            e.current = t;
        }), J.useCallback(function() {
            for(var n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i];
            return e.current == null ? void 0 : e.current(...r);
        }, []);
    }
    const GP = "ArrowUp", Cw = "ArrowDown", ah = "ArrowLeft", lh = "ArrowRight";
    function o1(t, e, n) {
        return Math.floor(t / e) !== n;
    }
    function Hx(t, e) {
        return e < 0 || e >= t.current.length;
    }
    function WR(t, e) {
        return so(t, {
            disabledIndices: e
        });
    }
    function DF(t, e) {
        return so(t, {
            decrement: !0,
            startingIndex: t.current.length,
            disabledIndices: e
        });
    }
    function so(t, e) {
        let { startingIndex: n = -1, decrement: r = !1, disabledIndices: i, amount: s = 1 } = e === void 0 ? {} : e;
        const o = t.current;
        let a = n;
        do a += r ? -s : s;
        while (a >= 0 && a <= o.length - 1 && DS(o, a, i));
        return a;
    }
    function _re(t, e) {
        let { event: n, orientation: r, loop: i, rtl: s, cols: o, disabledIndices: a, minIndex: l, maxIndex: c, prevIndex: u, stopEvent: f = !1 } = e, h = u;
        if (n.key === GP) {
            if (f && Fo(n), u === -1) h = c;
            else if (h = so(t, {
                startingIndex: h,
                amount: o,
                decrement: !0,
                disabledIndices: a
            }), i && (u - o < l || h < 0)) {
                const m = u % o, v = c % o, _ = c - (v - m);
                v === m ? h = c : h = v > m ? _ : _ - o;
            }
            Hx(t, h) && (h = u);
        }
        if (n.key === Cw && (f && Fo(n), u === -1 ? h = l : (h = so(t, {
            startingIndex: u,
            amount: o,
            disabledIndices: a
        }), i && u + o > c && (h = so(t, {
            startingIndex: u % o - o,
            amount: o,
            disabledIndices: a
        }))), Hx(t, h) && (h = u)), r === "both") {
            const m = A0(u / o);
            n.key === (s ? ah : lh) && (f && Fo(n), u % o !== o - 1 ? (h = so(t, {
                startingIndex: u,
                disabledIndices: a
            }), i && o1(h, o, m) && (h = so(t, {
                startingIndex: u - u % o - 1,
                disabledIndices: a
            }))) : i && (h = so(t, {
                startingIndex: u - u % o - 1,
                disabledIndices: a
            })), o1(h, o, m) && (h = u)), n.key === (s ? lh : ah) && (f && Fo(n), u % o !== 0 ? (h = so(t, {
                startingIndex: u,
                decrement: !0,
                disabledIndices: a
            }), i && o1(h, o, m) && (h = so(t, {
                startingIndex: u + (o - u % o),
                decrement: !0,
                disabledIndices: a
            }))) : i && (h = so(t, {
                startingIndex: u + (o - u % o),
                decrement: !0,
                disabledIndices: a
            })), o1(h, o, m) && (h = u));
            const v = A0(c / o) === m;
            Hx(t, h) && (i && v ? h = n.key === (s ? lh : ah) ? c : so(t, {
                startingIndex: u - u % o - 1,
                disabledIndices: a
            }) : h = u);
        }
        return h;
    }
    function Sre(t, e, n) {
        const r = [];
        let i = 0;
        return t.forEach((s, o)=>{
            let { width: a, height: l } = s, c = !1;
            for(n && (i = 0); !c;){
                const u = [];
                for(let f = 0; f < a; f++)for(let h = 0; h < l; h++)u.push(i + f + h * e);
                i % e + a <= e && u.every((f)=>r[f] == null) ? (u.forEach((f)=>{
                    r[f] = o;
                }), c = !0) : i++;
            }
        }), [
            ...r
        ];
    }
    function Ere(t, e, n, r, i) {
        if (t === -1) return -1;
        const s = n.indexOf(t), o = e[t];
        switch(i){
            case "tl":
                return s;
            case "tr":
                return o ? s + o.width - 1 : s;
            case "bl":
                return o ? s + (o.height - 1) * r : s;
            case "br":
                return n.lastIndexOf(t);
        }
    }
    function Mre(t, e) {
        return e.flatMap((n, r)=>t.includes(n) ? [
                r
            ] : []);
    }
    function DS(t, e, n) {
        if (n) return n.includes(e);
        const r = t[e];
        return r == null || r.hasAttribute("disabled") || r.getAttribute("aria-disabled") === "true";
    }
    var Yr = typeof document < "u" ? J.useLayoutEffect : J.useEffect;
    let LF = !1, Tre = 0;
    const FF = ()=>"floating-ui-" + Math.random().toString(36).slice(2, 6) + Tre++;
    function Cre() {
        const [t, e] = J.useState(()=>LF ? FF() : void 0);
        return Yr(()=>{
            t == null && e(FF());
        }, []), J.useEffect(()=>{
            LF = !0;
        }, []), t;
    }
    const Rre = J9.useId, XP = Rre || Cre;
    function Q9() {
        const t = new Map;
        return {
            emit (e, n) {
                var r;
                (r = t.get(e)) == null || r.forEach((i)=>i(n));
            },
            on (e, n) {
                t.set(e, [
                    ...t.get(e) || [],
                    n
                ]);
            },
            off (e, n) {
                var r;
                t.set(e, ((r = t.get(e)) == null ? void 0 : r.filter((i)=>i !== n)) || []);
            }
        };
    }
    const ez = J.createContext(null), tz = J.createContext(null), Rw = ()=>{
        var t;
        return ((t = J.useContext(ez)) == null ? void 0 : t.id) || null;
    }, Fy = ()=>J.useContext(tz);
    function Ire(t) {
        const e = XP(), n = Fy(), i = Rw();
        return Yr(()=>{
            if (!e) return;
            const s = {
                id: e,
                parentId: i
            };
            return n?.addNode(s), ()=>{
                n?.removeNode(s);
            };
        }, [
            n,
            e,
            i
        ]), e;
    }
    function Are(t) {
        const { children: e, id: n } = t, r = Rw();
        return x.jsx(ez.Provider, {
            value: J.useMemo(()=>({
                    id: n,
                    parentId: r
                }), [
                n,
                r
            ]),
            children: e
        });
    }
    function Nre(t) {
        const { children: e } = t, n = J.useRef([]), r = J.useCallback((o)=>{
            n.current = [
                ...n.current,
                o
            ];
        }, []), i = J.useCallback((o)=>{
            n.current = n.current.filter((a)=>a !== o);
        }, []), s = J.useState(()=>Q9())[0];
        return x.jsx(tz.Provider, {
            value: J.useMemo(()=>({
                    nodesRef: n,
                    addNode: r,
                    removeNode: i,
                    events: s
                }), [
                r,
                i,
                s
            ]),
            children: e
        });
    }
    function Mm(t) {
        return "data-floating-ui-" + t;
    }
    function zo(t) {
        const e = J.useRef(t);
        return Yr(()=>{
            e.current = t;
        }), e;
    }
    const jF = Mm("safe-polygon");
    function qR(t, e, n) {
        return n && !Pb(n) ? 0 : typeof t == "number" ? t : t?.[e];
    }
    function Pre(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, dataRef: i, events: s, elements: o } = t, { enabled: a = !0, delay: l = 0, handleClose: c = null, mouseOnly: u = !1, restMs: f = 0, move: h = !0 } = e, m = Fy(), v = Rw(), _ = zo(c), w = zo(l), b = zo(n), M = J.useRef(), E = J.useRef(-1), T = J.useRef(), P = J.useRef(-1), A = J.useRef(!0), O = J.useRef(!1), D = J.useRef(()=>{}), R = J.useRef(!1), N = J.useCallback(()=>{
            var ee;
            const W = (ee = i.current.openEvent) == null ? void 0 : ee.type;
            return W?.includes("mouse") && W !== "mousedown";
        }, [
            i
        ]);
        J.useEffect(()=>{
            if (!a) return;
            function ee(W) {
                let { open: Z } = W;
                Z || (clearTimeout(E.current), clearTimeout(P.current), A.current = !0, R.current = !1);
            }
            return s.on("openchange", ee), ()=>{
                s.off("openchange", ee);
            };
        }, [
            a,
            s
        ]), J.useEffect(()=>{
            if (!a || !_.current || !n) return;
            function ee(Z) {
                N() && r(!1, Z, "hover");
            }
            const W = Vs(o.floating).documentElement;
            return W.addEventListener("mouseleave", ee), ()=>{
                W.removeEventListener("mouseleave", ee);
            };
        }, [
            o.floating,
            n,
            r,
            a,
            _,
            N
        ]);
        const k = J.useCallback(function(ee, W, Z) {
            W === void 0 && (W = !0), Z === void 0 && (Z = "hover");
            const $ = qR(w.current, "close", M.current);
            $ && !T.current ? (clearTimeout(E.current), E.current = window.setTimeout(()=>r(!1, ee, Z), $)) : W && (clearTimeout(E.current), r(!1, ee, Z));
        }, [
            w,
            r
        ]), U = Uo(()=>{
            D.current(), T.current = void 0;
        }), B = Uo(()=>{
            if (O.current) {
                const ee = Vs(o.floating).body;
                ee.style.pointerEvents = "", ee.removeAttribute(jF), O.current = !1;
            }
        }), j = Uo(()=>i.current.openEvent ? [
                "click",
                "mousedown"
            ].includes(i.current.openEvent.type) : !1);
        J.useEffect(()=>{
            if (!a) return;
            function ee(H) {
                if (clearTimeout(E.current), A.current = !1, u && !Pb(M.current) || f > 0 && !qR(w.current, "open")) return;
                const se = qR(w.current, "open", M.current);
                se ? E.current = window.setTimeout(()=>{
                    b.current || r(!0, H, "hover");
                }, se) : n || r(!0, H, "hover");
            }
            function W(H) {
                if (j()) return;
                D.current();
                const se = Vs(o.floating);
                if (clearTimeout(P.current), R.current = !1, _.current && i.current.floatingContext) {
                    n || clearTimeout(E.current), T.current = _.current({
                        ...i.current.floatingContext,
                        tree: m,
                        x: H.clientX,
                        y: H.clientY,
                        onClose () {
                            B(), U(), j() || k(H, !0, "safe-polygon");
                        }
                    });
                    const ne = T.current;
                    se.addEventListener("mousemove", ne), D.current = ()=>{
                        se.removeEventListener("mousemove", ne);
                    };
                    return;
                }
                (M.current === "touch" ? !zs(o.floating, H.relatedTarget) : !0) && k(H);
            }
            function Z(H) {
                j() || i.current.floatingContext && (_.current == null || _.current({
                    ...i.current.floatingContext,
                    tree: m,
                    x: H.clientX,
                    y: H.clientY,
                    onClose () {
                        B(), U(), j() || k(H);
                    }
                })(H));
            }
            if (zr(o.domReference)) {
                var $;
                const H = o.domReference;
                return n && H.addEventListener("mouseleave", Z), ($ = o.floating) == null || $.addEventListener("mouseleave", Z), h && H.addEventListener("mousemove", ee, {
                    once: !0
                }), H.addEventListener("mouseenter", ee), H.addEventListener("mouseleave", W), ()=>{
                    var se;
                    n && H.removeEventListener("mouseleave", Z), (se = o.floating) == null || se.removeEventListener("mouseleave", Z), h && H.removeEventListener("mousemove", ee), H.removeEventListener("mouseenter", ee), H.removeEventListener("mouseleave", W);
                };
            }
        }, [
            o,
            a,
            t,
            u,
            f,
            h,
            k,
            U,
            B,
            r,
            n,
            b,
            m,
            w,
            _,
            i,
            j
        ]), Yr(()=>{
            var ee;
            if (a && n && (ee = _.current) != null && ee.__options.blockPointerEvents && N()) {
                O.current = !0;
                const Z = o.floating;
                if (zr(o.domReference) && Z) {
                    var W;
                    const $ = Vs(o.floating).body;
                    $.setAttribute(jF, "");
                    const H = o.domReference, se = m == null || (W = m.nodesRef.current.find((le)=>le.id === v)) == null || (W = W.context) == null ? void 0 : W.elements.floating;
                    return se && (se.style.pointerEvents = ""), $.style.pointerEvents = "none", H.style.pointerEvents = "auto", Z.style.pointerEvents = "auto", ()=>{
                        $.style.pointerEvents = "", H.style.pointerEvents = "", Z.style.pointerEvents = "";
                    };
                }
            }
        }, [
            a,
            n,
            v,
            o,
            m,
            _,
            N
        ]), Yr(()=>{
            n || (M.current = void 0, R.current = !1, U(), B());
        }, [
            n,
            U,
            B
        ]), J.useEffect(()=>()=>{
                U(), clearTimeout(E.current), clearTimeout(P.current), B();
            }, [
            a,
            o.domReference,
            U,
            B
        ]);
        const K = J.useMemo(()=>{
            function ee(W) {
                M.current = W.pointerType;
            }
            return {
                onPointerDown: ee,
                onPointerEnter: ee,
                onMouseMove (W) {
                    const { nativeEvent: Z } = W;
                    function $() {
                        !A.current && !b.current && r(!0, Z, "hover");
                    }
                    u && !Pb(M.current) || n || f === 0 || R.current && W.movementX ** 2 + W.movementY ** 2 < 2 || (clearTimeout(P.current), M.current === "touch" ? $() : (R.current = !0, P.current = window.setTimeout($, f)));
                }
            };
        }, [
            u,
            r,
            n,
            b,
            f
        ]), q = J.useMemo(()=>({
                onMouseEnter () {
                    clearTimeout(E.current);
                },
                onMouseLeave (ee) {
                    j() || k(ee.nativeEvent, !1);
                }
            }), [
            k,
            j
        ]);
        return J.useMemo(()=>a ? {
                reference: K,
                floating: q
            } : {}, [
            a,
            K,
            q
        ]);
    }
    let BF = 0;
    function jp(t, e) {
        e === void 0 && (e = {});
        const { preventScroll: n = !1, cancelPrevious: r = !0, sync: i = !1 } = e;
        r && cancelAnimationFrame(BF);
        const s = ()=>t?.focus({
                preventScroll: n
            });
        i ? s() : BF = requestAnimationFrame(s);
    }
    function UF(t, e) {
        var n;
        let r = [], i = (n = t.find((s)=>s.id === e)) == null ? void 0 : n.parentId;
        for(; i;){
            const s = t.find((o)=>o.id === i);
            i = s?.parentId, s && (r = r.concat(s));
        }
        return r;
    }
    function ty(t, e) {
        let n = t.filter((i)=>{
            var s;
            return i.parentId === e && ((s = i.context) == null ? void 0 : s.open);
        }), r = n;
        for(; r.length;)r = t.filter((i)=>{
            var s;
            return (s = r) == null ? void 0 : s.some((o)=>{
                var a;
                return i.parentId === o.id && ((a = i.context) == null ? void 0 : a.open);
            });
        }), n = n.concat(r);
        return n;
    }
    function kre(t, e) {
        let n, r = -1;
        function i(s, o) {
            o > r && (n = s, r = o), ty(t, s).forEach((l)=>{
                i(l.id, o + 1);
            });
        }
        return i(e, 0), t.find((s)=>s.id === n);
    }
    let $g = new WeakMap, a1 = new WeakSet, l1 = {}, HR = 0;
    const Ore = ()=>typeof HTMLElement < "u" && "inert" in HTMLElement.prototype, nz = (t)=>t && (t.host || nz(t.parentNode)), Dre = (t, e)=>e.map((n)=>{
            if (t.contains(n)) return n;
            const r = nz(n);
            return t.contains(r) ? r : null;
        }).filter((n)=>n != null);
    function Lre(t, e, n, r) {
        const i = "data-floating-ui-inert", s = r ? "inert" : n ? "aria-hidden" : null, o = Dre(e, t), a = new Set, l = new Set(o), c = [];
        l1[i] || (l1[i] = new WeakMap);
        const u = l1[i];
        o.forEach(f), h(e), a.clear();
        function f(m) {
            !m || a.has(m) || (a.add(m), m.parentNode && f(m.parentNode));
        }
        function h(m) {
            !m || l.has(m) || [].forEach.call(m.children, (v)=>{
                if (Th(v) !== "script") if (a.has(v)) h(v);
                else {
                    const _ = s ? v.getAttribute(s) : null, w = _ !== null && _ !== "false", b = $g.get(v) || 0, M = s ? b + 1 : b, E = (u.get(v) || 0) + 1;
                    $g.set(v, M), u.set(v, E), c.push(v), M === 1 && w && a1.add(v), E === 1 && v.setAttribute(i, ""), !w && s && v.setAttribute(s, "true");
                }
            });
        }
        return HR++, ()=>{
            c.forEach((m)=>{
                const v = $g.get(m) || 0, _ = s ? v - 1 : v, w = (u.get(m) || 0) - 1;
                $g.set(m, _), u.set(m, w), _ || (!a1.has(m) && s && m.removeAttribute(s), a1.delete(m)), w || m.removeAttribute(i);
            }), HR--, HR || ($g = new WeakMap, $g = new WeakMap, a1 = new WeakSet, l1 = {});
        };
    }
    function zF(t, e, n) {
        e === void 0 && (e = !1), n === void 0 && (n = !1);
        const r = Vs(t[0]).body;
        return Lre(t.concat(Array.from(r.querySelectorAll("[aria-live]"))), r, e, n);
    }
    const UT = ()=>({
            getShadowRoot: !0,
            displayCheck: typeof ResizeObserver == "function" && ResizeObserver.toString().includes("[native code]") ? "full" : "none"
        });
    function rz(t, e) {
        const n = BT(t, UT());
        e === "prev" && n.reverse();
        const r = n.indexOf(cc(Vs(t)));
        return n.slice(r + 1)[0];
    }
    function iz() {
        return rz(document.body, "next");
    }
    function sz() {
        return rz(document.body, "prev");
    }
    function $x(t, e) {
        const n = e || t.currentTarget, r = t.relatedTarget;
        return !r || !zs(n, r);
    }
    function Fre(t) {
        BT(t, UT()).forEach((n)=>{
            n.dataset.tabindex = n.getAttribute("tabindex") || "", n.setAttribute("tabindex", "-1");
        });
    }
    function VF(t) {
        t.querySelectorAll("[data-tabindex]").forEach((n)=>{
            const r = n.dataset.tabindex;
            delete n.dataset.tabindex, r ? n.setAttribute("tabindex", r) : n.removeAttribute("tabindex");
        });
    }
    const zT = {
        border: 0,
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "fixed",
        whiteSpace: "nowrap",
        width: "1px",
        top: 0,
        left: 0
    };
    let jre;
    function WF(t) {
        t.key === "Tab" && (t.target, clearTimeout(jre));
    }
    const JE = J.forwardRef(function(e, n) {
        const [r, i] = J.useState();
        Yr(()=>(k9() && i("button"), document.addEventListener("keydown", WF), ()=>{
                document.removeEventListener("keydown", WF);
            }), []);
        const s = {
            ref: n,
            tabIndex: 0,
            role: r,
            "aria-hidden": r ? void 0 : !0,
            [Mm("focus-guard")]: "",
            style: zT
        };
        return x.jsx("span", {
            ...e,
            ...s
        });
    }), oz = J.createContext(null), qF = Mm("portal");
    function Bre(t) {
        t === void 0 && (t = {});
        const { id: e, root: n } = t, r = XP(), i = az(), [s, o] = J.useState(null), a = J.useRef(null);
        return Yr(()=>()=>{
                s?.remove(), queueMicrotask(()=>{
                    a.current = null;
                });
            }, [
            s
        ]), Yr(()=>{
            if (!r || a.current) return;
            const l = e ? document.getElementById(e) : null;
            if (!l) return;
            const c = document.createElement("div");
            c.id = r, c.setAttribute(qF, ""), l.appendChild(c), a.current = c, o(c);
        }, [
            e,
            r
        ]), Yr(()=>{
            if (n === null || !r || a.current) return;
            let l = n || i?.portalNode;
            l && !zr(l) && (l = l.current), l = l || document.body;
            let c = null;
            e && (c = document.createElement("div"), c.id = e, l.appendChild(c));
            const u = document.createElement("div");
            u.id = r, u.setAttribute(qF, ""), l = c || l, l.appendChild(u), a.current = u, o(u);
        }, [
            e,
            n,
            r,
            i
        ]), s;
    }
    function KP(t) {
        const { children: e, id: n, root: r, preserveTabOrder: i = !0 } = t, s = Bre({
            id: n,
            root: r
        }), [o, a] = J.useState(null), l = J.useRef(null), c = J.useRef(null), u = J.useRef(null), f = J.useRef(null), h = o?.modal, m = o?.open, v = !!o && !o.modal && o.open && i && !!(r || s);
        return J.useEffect(()=>{
            if (!s || !i || h) return;
            function _(w) {
                s && $x(w) && (w.type === "focusin" ? VF : Fre)(s);
            }
            return s.addEventListener("focusin", _, !0), s.addEventListener("focusout", _, !0), ()=>{
                s.removeEventListener("focusin", _, !0), s.removeEventListener("focusout", _, !0);
            };
        }, [
            s,
            i,
            h
        ]), J.useEffect(()=>{
            s && (m || VF(s));
        }, [
            m,
            s
        ]), x.jsxs(oz.Provider, {
            value: J.useMemo(()=>({
                    preserveTabOrder: i,
                    beforeOutsideRef: l,
                    afterOutsideRef: c,
                    beforeInsideRef: u,
                    afterInsideRef: f,
                    portalNode: s,
                    setFocusManagerState: a
                }), [
                i,
                s
            ]),
            children: [
                v && s && x.jsx(JE, {
                    "data-type": "outside",
                    ref: l,
                    onFocus: (_)=>{
                        if ($x(_, s)) {
                            var w;
                            (w = u.current) == null || w.focus();
                        } else {
                            const b = sz() || o?.domReference;
                            b?.focus();
                        }
                    }
                }),
                v && s && x.jsx("span", {
                    "aria-owns": s.id,
                    style: zT
                }),
                s && vT.createPortal(e, s),
                v && s && x.jsx(JE, {
                    "data-type": "outside",
                    ref: c,
                    onFocus: (_)=>{
                        if ($x(_, s)) {
                            var w;
                            (w = f.current) == null || w.focus();
                        } else {
                            const b = iz() || o?.domReference;
                            b?.focus(), o?.closeOnFocusOut && o?.onOpenChange(!1, _.nativeEvent, "focus-out");
                        }
                    }
                })
            ]
        });
    }
    const az = ()=>J.useContext(oz), o3 = "data-floating-ui-focusable";
    function a3(t) {
        return t ? t.hasAttribute(o3) ? t : t.querySelector("[" + o3 + "]") || t : null;
    }
    const Ure = 20;
    let Bp = [];
    function $R(t) {
        Bp = Bp.filter((e)=>e.isConnected), t && Th(t) !== "body" && (Bp.push(t), Bp.length > Ure && (Bp = Bp.slice(-20)));
    }
    function HF() {
        return Bp.slice().reverse().find((t)=>t.isConnected);
    }
    function zre(t) {
        const e = UT();
        return qne(t, e) ? t : BT(t, e)[0] || t;
    }
    const Vre = J.forwardRef(function(e, n) {
        return x.jsx("button", {
            ...e,
            type: "button",
            ref: n,
            tabIndex: -1,
            style: zT
        });
    });
    function lz(t) {
        const { context: e, children: n, disabled: r = !1, order: i = [
            "content"
        ], guards: s = !0, initialFocus: o = 0, returnFocus: a = !0, restoreFocus: l = !1, modal: c = !0, visuallyHiddenDismiss: u = !1, closeOnFocusOut: f = !0, outsideElementsInert: h = !1 } = t, { open: m, onOpenChange: v, events: _, dataRef: w, elements: { domReference: b, floating: M } } = e, E = Uo(()=>{
            var Te;
            return (Te = w.current.floatingContext) == null ? void 0 : Te.nodeId;
        }), T = typeof o == "number" && o < 0, P = O9(b) && T, A = Ore(), O = A ? s : !0, D = !O || A && h, R = zo(i), N = zo(o), k = zo(a), U = Fy(), B = az(), j = J.useRef(null), K = J.useRef(null), q = J.useRef(!1), ee = J.useRef(!1), W = J.useRef(-1), Z = B != null, $ = a3(M), H = Uo(function(Te) {
            return Te === void 0 && (Te = $), Te ? BT(Te, UT()) : [];
        }), se = Uo((Te)=>{
            const Re = H(Te);
            return R.current.map((Fe)=>b && Fe === "reference" ? b : $ && Fe === "floating" ? $ : Re).filter(Boolean).flat();
        });
        J.useEffect(()=>{
            if (r || !c) return;
            function Te(Fe) {
                if (Fe.key === "Tab") {
                    zs($, cc(Vs($))) && H().length === 0 && !P && Fo(Fe);
                    const be = se(), Me = Yf(Fe);
                    R.current[0] === "reference" && Me === b && (Fo(Fe), Fe.shiftKey ? jp(be[be.length - 1]) : jp(be[1])), R.current[1] === "floating" && Me === $ && Fe.shiftKey && (Fo(Fe), jp(be[0]));
                }
            }
            const Re = Vs($);
            return Re.addEventListener("keydown", Te), ()=>{
                Re.removeEventListener("keydown", Te);
            };
        }, [
            r,
            b,
            $,
            c,
            R,
            P,
            H,
            se
        ]), J.useEffect(()=>{
            if (r || !M) return;
            function Te(Re) {
                const Fe = Yf(Re), Me = H().indexOf(Fe);
                Me !== -1 && (W.current = Me);
            }
            return M.addEventListener("focusin", Te), ()=>{
                M.removeEventListener("focusin", Te);
            };
        }, [
            r,
            M,
            H
        ]), J.useEffect(()=>{
            if (r || !f) return;
            function Te() {
                ee.current = !0, setTimeout(()=>{
                    ee.current = !1;
                });
            }
            function Re(Fe) {
                const be = Fe.relatedTarget;
                queueMicrotask(()=>{
                    const Me = E(), oe = !(zs(b, be) || zs(M, be) || zs(be, M) || zs(B?.portalNode, be) || be != null && be.hasAttribute(Mm("focus-guard")) || U && (ty(U.nodesRef.current, Me).find((Ye)=>{
                        var Be, nt;
                        return zs((Be = Ye.context) == null ? void 0 : Be.elements.floating, be) || zs((nt = Ye.context) == null ? void 0 : nt.elements.domReference, be);
                    }) || UF(U.nodesRef.current, Me).find((Ye)=>{
                        var Be, nt, de;
                        return [
                            (Be = Ye.context) == null ? void 0 : Be.elements.floating,
                            a3((nt = Ye.context) == null ? void 0 : nt.elements.floating)
                        ].includes(be) || ((de = Ye.context) == null ? void 0 : de.elements.domReference) === be;
                    })));
                    if (l && oe && cc(Vs($)) === Vs($).body) {
                        Zi($) && $.focus();
                        const Ye = W.current, Be = H(), nt = Be[Ye] || Be[Be.length - 1] || $;
                        Zi(nt) && nt.focus();
                    }
                    (P || !c) && be && oe && !ee.current && be !== HF() && (q.current = !0, v(!1, Fe, "focus-out"));
                });
            }
            if (M && Zi(b)) return b.addEventListener("focusout", Re), b.addEventListener("pointerdown", Te), M.addEventListener("focusout", Re), ()=>{
                b.removeEventListener("focusout", Re), b.removeEventListener("pointerdown", Te), M.removeEventListener("focusout", Re);
            };
        }, [
            r,
            b,
            M,
            $,
            c,
            U,
            B,
            v,
            f,
            l,
            H,
            P,
            E
        ]);
        const le = J.useRef(null), ne = J.useRef(null), ue = OF([
            le,
            B?.beforeInsideRef
        ]), ge = OF([
            ne,
            B?.afterInsideRef
        ]);
        J.useEffect(()=>{
            var Te;
            if (r || !M) return;
            const Re = Array.from((B == null || (Te = B.portalNode) == null ? void 0 : Te.querySelectorAll("[" + Mm("portal") + "]")) || []), Fe = U && !c ? UF(U?.nodesRef.current, E()).map((oe)=>{
                var Ye;
                return (Ye = oe.context) == null ? void 0 : Ye.elements.floating;
            }) : [], be = [
                M,
                ...Re,
                ...Fe,
                j.current,
                K.current,
                le.current,
                ne.current,
                B?.beforeOutsideRef.current,
                B?.afterOutsideRef.current,
                R.current.includes("reference") || P ? b : null
            ].filter((oe)=>oe != null), Me = c || P ? zF(be, !D, D) : zF(be);
            return ()=>{
                Me();
            };
        }, [
            r,
            b,
            M,
            c,
            R,
            B,
            P,
            O,
            D,
            U,
            E
        ]), Yr(()=>{
            if (r || !Zi($)) return;
            const Te = Vs($), Re = cc(Te);
            queueMicrotask(()=>{
                const Fe = se($), be = N.current, Me = (typeof be == "number" ? Fe[be] : be.current) || $, oe = zs($, Re);
                !T && !oe && m && jp(Me, {
                    preventScroll: Me === $
                });
            });
        }, [
            r,
            m,
            $,
            T,
            se,
            N
        ]), Yr(()=>{
            if (r || !$) return;
            let Te = !1;
            const Re = Vs($), Fe = cc(Re);
            let Me = w.current.openEvent;
            $R(Fe);
            function oe(nt) {
                let { open: de, reason: ce, event: ae, nested: X } = nt;
                de && (Me = ae), ce === "escape-key" && b && $R(b), [
                    "hover",
                    "safe-polygon"
                ].includes(ce) && ae.type === "mouseleave" && (q.current = !0), ce === "outside-press" && (X ? (q.current = !1, Te = !0) : q.current = !(P9(ae) || VP(ae)));
            }
            _.on("openchange", oe);
            const Ye = Re.createElement("span");
            Ye.setAttribute("tabindex", "-1"), Ye.setAttribute("aria-hidden", "true"), Object.assign(Ye.style, zT), Z && b && b.insertAdjacentElement("afterend", Ye);
            function Be() {
                return typeof k.current == "boolean" ? HF() || Ye : k.current.current || Ye;
            }
            return ()=>{
                _.off("openchange", oe);
                const nt = cc(Re), de = zs(M, nt) || U && ty(U.nodesRef.current, E()).some((X)=>{
                    var G;
                    return zs((G = X.context) == null ? void 0 : G.elements.floating, nt);
                });
                (de || Me && [
                    "click",
                    "mousedown"
                ].includes(Me.type)) && b && $R(b);
                const ae = Be();
                queueMicrotask(()=>{
                    const X = zre(ae);
                    k.current && !q.current && Zi(X) && (!(X !== nt && nt !== Re.body) || de) && X.focus({
                        preventScroll: Te
                    }), Ye.remove();
                });
            };
        }, [
            r,
            M,
            $,
            k,
            w,
            _,
            U,
            Z,
            b,
            E
        ]), J.useEffect(()=>{
            queueMicrotask(()=>{
                q.current = !1;
            });
        }, [
            r
        ]), Yr(()=>{
            if (!r && B) return B.setFocusManagerState({
                modal: c,
                closeOnFocusOut: f,
                open: m,
                onOpenChange: v,
                domReference: b
            }), ()=>{
                B.setFocusManagerState(null);
            };
        }, [
            r,
            B,
            c,
            m,
            v,
            f,
            b
        ]), Yr(()=>{
            if (r || !$ || typeof MutationObserver != "function" || T) return;
            const Te = ()=>{
                const Fe = $.getAttribute("tabindex"), be = H(), Me = cc(Vs(M)), oe = be.indexOf(Me);
                oe !== -1 && (W.current = oe), R.current.includes("floating") || Me !== b && be.length === 0 ? Fe !== "0" && $.setAttribute("tabindex", "0") : Fe !== "-1" && $.setAttribute("tabindex", "-1");
            };
            Te();
            const Re = new MutationObserver(Te);
            return Re.observe($, {
                childList: !0,
                subtree: !0,
                attributes: !0
            }), ()=>{
                Re.disconnect();
            };
        }, [
            r,
            M,
            $,
            b,
            R,
            H,
            T
        ]);
        function ye(Te) {
            return r || !u || !c ? null : x.jsx(Vre, {
                ref: Te === "start" ? j : K,
                onClick: (Re)=>v(!1, Re.nativeEvent),
                children: typeof u == "string" ? u : "Dismiss"
            });
        }
        const _e = !r && O && (c ? !P : !0) && (Z || c);
        return x.jsxs(x.Fragment, {
            children: [
                _e && x.jsx(JE, {
                    "data-type": "inside",
                    ref: ue,
                    onFocus: (Te)=>{
                        if (c) {
                            const Fe = se();
                            jp(i[0] === "reference" ? Fe[0] : Fe[Fe.length - 1]);
                        } else if (B != null && B.preserveTabOrder && B.portalNode) if (q.current = !1, $x(Te, B.portalNode)) {
                            const Fe = iz() || b;
                            Fe?.focus();
                        } else {
                            var Re;
                            (Re = B.beforeOutsideRef.current) == null || Re.focus();
                        }
                    }
                }),
                !P && ye("start"),
                n,
                ye("end"),
                _e && x.jsx(JE, {
                    "data-type": "inside",
                    ref: ge,
                    onFocus: (Te)=>{
                        if (c) jp(se()[0]);
                        else if (B != null && B.preserveTabOrder && B.portalNode) if (f && (q.current = !0), $x(Te, B.portalNode)) {
                            const Fe = sz() || b;
                            Fe?.focus();
                        } else {
                            var Re;
                            (Re = B.afterOutsideRef.current) == null || Re.focus();
                        }
                    }
                })
            ]
        });
    }
    let c1 = 0;
    function Wre() {
        const t = /iP(hone|ad|od)|iOS/.test(zP()), e = document.body.style, r = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft ? "paddingLeft" : "paddingRight", i = window.innerWidth - document.documentElement.clientWidth, s = e.left ? parseFloat(e.left) : window.scrollX, o = e.top ? parseFloat(e.top) : window.scrollY;
        if (e.overflow = "hidden", i && (e[r] = i + "px"), t) {
            var a, l;
            const c = ((a = window.visualViewport) == null ? void 0 : a.offsetLeft) || 0, u = ((l = window.visualViewport) == null ? void 0 : l.offsetTop) || 0;
            Object.assign(e, {
                position: "fixed",
                top: -(o - Math.floor(u)) + "px",
                left: -(s - Math.floor(c)) + "px",
                right: "0"
            });
        }
        return ()=>{
            Object.assign(e, {
                overflow: "",
                [r]: ""
            }), t && (Object.assign(e, {
                position: "",
                top: "",
                left: "",
                right: ""
            }), window.scrollTo(s, o));
        };
    }
    let $F = ()=>{};
    const qre = J.forwardRef(function(e, n) {
        const { lockScroll: r = !1, ...i } = e;
        return Yr(()=>{
            if (r) return c1++, c1 === 1 && ($F = Wre()), ()=>{
                c1--, c1 === 0 && $F();
            };
        }, [
            r
        ]), x.jsx("div", {
            ref: n,
            ...i,
            style: {
                position: "fixed",
                overflow: "auto",
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                ...i.style
            }
        });
    });
    function GF(t) {
        return Zi(t.target) && t.target.tagName === "BUTTON";
    }
    function XF(t) {
        return WP(t);
    }
    function YP(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, dataRef: i, elements: { domReference: s } } = t, { enabled: o = !0, event: a = "click", toggle: l = !0, ignoreMouse: c = !1, keyboardHandlers: u = !0, stickIfOpen: f = !0 } = e, h = J.useRef(), m = J.useRef(!1), v = J.useMemo(()=>({
                onPointerDown (_) {
                    h.current = _.pointerType;
                },
                onMouseDown (_) {
                    const w = h.current;
                    _.button === 0 && a !== "click" && (Pb(w, !0) && c || (n && l && (!(i.current.openEvent && f) || i.current.openEvent.type === "mousedown") ? r(!1, _.nativeEvent, "click") : (_.preventDefault(), r(!0, _.nativeEvent, "click"))));
                },
                onClick (_) {
                    const w = h.current;
                    if (a === "mousedown" && h.current) {
                        h.current = void 0;
                        return;
                    }
                    Pb(w, !0) && c || (n && l && (!(i.current.openEvent && f) || i.current.openEvent.type === "click") ? r(!1, _.nativeEvent, "click") : r(!0, _.nativeEvent, "click"));
                },
                onKeyDown (_) {
                    h.current = void 0, !(_.defaultPrevented || !u || GF(_)) && (_.key === " " && !XF(s) && (_.preventDefault(), m.current = !0), _.key === "Enter" && r(!(n && l), _.nativeEvent, "click"));
                },
                onKeyUp (_) {
                    _.defaultPrevented || !u || GF(_) || XF(s) || _.key === " " && m.current && (m.current = !1, r(!(n && l), _.nativeEvent, "click"));
                }
            }), [
            i,
            s,
            a,
            c,
            u,
            r,
            n,
            f,
            l
        ]);
        return J.useMemo(()=>o ? {
                reference: v
            } : {}, [
            o,
            v
        ]);
    }
    const Hre = {
        pointerdown: "onPointerDown",
        mousedown: "onMouseDown",
        click: "onClick"
    }, $re = {
        pointerdown: "onPointerDownCapture",
        mousedown: "onMouseDownCapture",
        click: "onClickCapture"
    }, KF = (t)=>{
        var e, n;
        return {
            escapeKey: typeof t == "boolean" ? t : (e = t?.escapeKey) != null ? e : !1,
            outsidePress: typeof t == "boolean" ? t : (n = t?.outsidePress) != null ? n : !0
        };
    };
    function ZP(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, elements: i, dataRef: s } = t, { enabled: o = !0, escapeKey: a = !0, outsidePress: l = !0, outsidePressEvent: c = "pointerdown", referencePress: u = !1, referencePressEvent: f = "pointerdown", ancestorScroll: h = !1, bubbles: m, capture: v } = e, _ = Fy(), w = Uo(typeof l == "function" ? l : ()=>!1), b = typeof l == "function" ? w : l, M = J.useRef(!1), E = J.useRef(!1), { escapeKey: T, outsidePress: P } = KF(m), { escapeKey: A, outsidePress: O } = KF(v), D = J.useRef(!1), R = Uo((K)=>{
            var q;
            if (!n || !o || !a || K.key !== "Escape" || D.current) return;
            const ee = (q = s.current.floatingContext) == null ? void 0 : q.nodeId, W = _ ? ty(_.nodesRef.current, ee) : [];
            if (!T && (K.stopPropagation(), W.length > 0)) {
                let Z = !0;
                if (W.forEach(($)=>{
                    var H;
                    if ((H = $.context) != null && H.open && !$.context.dataRef.current.__escapeKeyBubbles) {
                        Z = !1;
                        return;
                    }
                }), !Z) return;
            }
            r(!1, mne(K) ? K.nativeEvent : K, "escape-key");
        }), N = Uo((K)=>{
            var q;
            const ee = ()=>{
                var W;
                R(K), (W = Yf(K)) == null || W.removeEventListener("keydown", ee);
            };
            (q = Yf(K)) == null || q.addEventListener("keydown", ee);
        }), k = Uo((K)=>{
            var q;
            const ee = M.current;
            M.current = !1;
            const W = E.current;
            if (E.current = !1, c === "click" && W || ee || typeof b == "function" && !b(K)) return;
            const Z = Yf(K), $ = "[" + Mm("inert") + "]", H = Vs(i.floating).querySelectorAll($);
            let se = zr(Z) ? Z : null;
            for(; se && !Ed(se);){
                const ge = Od(se);
                if (Ed(ge) || !zr(ge)) break;
                se = ge;
            }
            if (H.length && zr(Z) && !gne(Z) && !zs(Z, i.floating) && Array.from(H).every((ge)=>!zs(se, ge))) return;
            if (Zi(Z) && j) {
                const ge = Ed(Z), ye = Cl(Z), _e = /auto|scroll/, Te = ge || _e.test(ye.overflowX), Re = ge || _e.test(ye.overflowY), Fe = Te && Z.clientWidth > 0 && Z.scrollWidth > Z.clientWidth, be = Re && Z.clientHeight > 0 && Z.scrollHeight > Z.clientHeight, Me = ye.direction === "rtl", oe = be && (Me ? K.offsetX <= Z.offsetWidth - Z.clientWidth : K.offsetX > Z.clientWidth), Ye = Fe && K.offsetY > Z.clientHeight;
                if (oe || Ye) return;
            }
            const le = (q = s.current.floatingContext) == null ? void 0 : q.nodeId, ne = _ && ty(_.nodesRef.current, le).some((ge)=>{
                var ye;
                return UR(K, (ye = ge.context) == null ? void 0 : ye.elements.floating);
            });
            if (UR(K, i.floating) || UR(K, i.domReference) || ne) return;
            const ue = _ ? ty(_.nodesRef.current, le) : [];
            if (ue.length > 0) {
                let ge = !0;
                if (ue.forEach((ye)=>{
                    var _e;
                    if ((_e = ye.context) != null && _e.open && !ye.context.dataRef.current.__outsidePressBubbles) {
                        ge = !1;
                        return;
                    }
                }), !ge) return;
            }
            r(!1, K, "outside-press");
        }), U = Uo((K)=>{
            var q;
            const ee = ()=>{
                var W;
                k(K), (W = Yf(K)) == null || W.removeEventListener(c, ee);
            };
            (q = Yf(K)) == null || q.addEventListener(c, ee);
        });
        J.useEffect(()=>{
            if (!n || !o) return;
            s.current.__escapeKeyBubbles = T, s.current.__outsidePressBubbles = P;
            let K = -1;
            function q(H) {
                r(!1, H, "ancestor-scroll");
            }
            function ee() {
                window.clearTimeout(K), D.current = !0;
            }
            function W() {
                K = window.setTimeout(()=>{
                    D.current = !1;
                }, FT() ? 5 : 0);
            }
            const Z = Vs(i.floating);
            a && (Z.addEventListener("keydown", A ? N : R, A), Z.addEventListener("compositionstart", ee), Z.addEventListener("compositionend", W)), b && Z.addEventListener(c, O ? U : k, O);
            let $ = [];
            return h && (zr(i.domReference) && ($ = oh(i.domReference)), zr(i.floating) && ($ = $.concat(oh(i.floating))), !zr(i.reference) && i.reference && i.reference.contextElement && ($ = $.concat(oh(i.reference.contextElement)))), $ = $.filter((H)=>{
                var se;
                return H !== ((se = Z.defaultView) == null ? void 0 : se.visualViewport);
            }), $.forEach((H)=>{
                H.addEventListener("scroll", q, {
                    passive: !0
                });
            }), ()=>{
                a && (Z.removeEventListener("keydown", A ? N : R, A), Z.removeEventListener("compositionstart", ee), Z.removeEventListener("compositionend", W)), b && Z.removeEventListener(c, O ? U : k, O), $.forEach((H)=>{
                    H.removeEventListener("scroll", q);
                }), window.clearTimeout(K);
            };
        }, [
            s,
            i,
            a,
            b,
            c,
            n,
            r,
            h,
            o,
            T,
            P,
            R,
            A,
            N,
            k,
            O,
            U
        ]), J.useEffect(()=>{
            M.current = !1;
        }, [
            b,
            c
        ]);
        const B = J.useMemo(()=>({
                onKeyDown: R,
                ...u && {
                    [Hre[f]]: (K)=>{
                        r(!1, K.nativeEvent, "reference-press");
                    },
                    ...f !== "click" && {
                        onClick (K) {
                            r(!1, K.nativeEvent, "reference-press");
                        }
                    }
                }
            }), [
            R,
            r,
            u,
            f
        ]), j = J.useMemo(()=>({
                onKeyDown: R,
                onMouseDown () {
                    E.current = !0;
                },
                onMouseUp () {
                    E.current = !0;
                },
                [$re[c]]: ()=>{
                    M.current = !0;
                }
            }), [
            R,
            c
        ]);
        return J.useMemo(()=>o ? {
                reference: B,
                floating: j
            } : {}, [
            o,
            B,
            j
        ]);
    }
    function Gre(t) {
        const { open: e = !1, onOpenChange: n, elements: r } = t, i = XP(), s = J.useRef({}), [o] = J.useState(()=>Q9()), a = Rw() != null, [l, c] = J.useState(r.reference), u = Uo((m, v, _)=>{
            s.current.openEvent = m ? v : void 0, o.emit("openchange", {
                open: m,
                event: v,
                reason: _,
                nested: a
            }), n?.(m, v, _);
        }), f = J.useMemo(()=>({
                setPositionReference: c
            }), []), h = J.useMemo(()=>({
                reference: l || r.reference || null,
                floating: r.floating || null,
                domReference: r.reference
            }), [
            l,
            r.reference,
            r.floating
        ]);
        return J.useMemo(()=>({
                dataRef: s,
                open: e,
                onOpenChange: u,
                elements: h,
                events: o,
                floatingId: i,
                refs: f
            }), [
            e,
            u,
            h,
            o,
            i,
            f
        ]);
    }
    function JP(t) {
        t === void 0 && (t = {});
        const { nodeId: e } = t, n = Gre({
            ...t,
            elements: {
                reference: null,
                floating: null,
                ...t.elements
            }
        }), r = t.rootContext || n, i = r.elements, [s, o] = J.useState(null), [a, l] = J.useState(null), u = i?.domReference || s, f = J.useRef(null), h = Fy();
        Yr(()=>{
            u && (f.current = u);
        }, [
            u
        ]);
        const m = yre({
            ...t,
            elements: {
                ...i,
                ...a && {
                    reference: a
                }
            }
        }), v = J.useCallback((E)=>{
            const T = zr(E) ? {
                getBoundingClientRect: ()=>E.getBoundingClientRect(),
                contextElement: E
            } : E;
            l(T), m.refs.setReference(T);
        }, [
            m.refs
        ]), _ = J.useCallback((E)=>{
            (zr(E) || E === null) && (f.current = E, o(E)), (zr(m.refs.reference.current) || m.refs.reference.current === null || E !== null && !zr(E)) && m.refs.setReference(E);
        }, [
            m.refs
        ]), w = J.useMemo(()=>({
                ...m.refs,
                setReference: _,
                setPositionReference: v,
                domReference: f
            }), [
            m.refs,
            _,
            v
        ]), b = J.useMemo(()=>({
                ...m.elements,
                domReference: u
            }), [
            m.elements,
            u
        ]), M = J.useMemo(()=>({
                ...m,
                ...r,
                refs: w,
                elements: b,
                nodeId: e
            }), [
            m,
            w,
            b,
            e,
            r
        ]);
        return Yr(()=>{
            r.dataRef.current.floatingContext = M;
            const E = h?.nodesRef.current.find((T)=>T.id === e);
            E && (E.context = M);
        }), J.useMemo(()=>({
                ...m,
                context: M,
                refs: w,
                elements: b
            }), [
            m,
            w,
            b,
            M
        ]);
    }
    function Xre(t, e) {
        e === void 0 && (e = {});
        const { open: n, onOpenChange: r, events: i, dataRef: s, elements: o } = t, { enabled: a = !0, visibleOnly: l = !0 } = e, c = J.useRef(!1), u = J.useRef(), f = J.useRef(!0);
        J.useEffect(()=>{
            if (!a) return;
            const m = wa(o.domReference);
            function v() {
                !n && Zi(o.domReference) && o.domReference === cc(Vs(o.domReference)) && (c.current = !0);
            }
            function _() {
                f.current = !0;
            }
            return m.addEventListener("blur", v), m.addEventListener("keydown", _, !0), ()=>{
                m.removeEventListener("blur", v), m.removeEventListener("keydown", _, !0);
            };
        }, [
            o.domReference,
            n,
            a
        ]), J.useEffect(()=>{
            if (!a) return;
            function m(v) {
                let { reason: _ } = v;
                (_ === "reference-press" || _ === "escape-key") && (c.current = !0);
            }
            return i.on("openchange", m), ()=>{
                i.off("openchange", m);
            };
        }, [
            i,
            a
        ]), J.useEffect(()=>()=>{
                clearTimeout(u.current);
            }, []);
        const h = J.useMemo(()=>({
                onPointerDown (m) {
                    VP(m.nativeEvent) || (f.current = !1);
                },
                onMouseLeave () {
                    c.current = !1;
                },
                onFocus (m) {
                    if (c.current) return;
                    const v = Yf(m.nativeEvent);
                    if (l && zr(v)) try {
                        if (k9() && hne()) throw Error();
                        if (!v.matches(":focus-visible")) return;
                    } catch  {
                        if (!f.current && !WP(v)) return;
                    }
                    r(!0, m.nativeEvent, "focus");
                },
                onBlur (m) {
                    c.current = !1;
                    const v = m.relatedTarget, _ = m.nativeEvent, w = zr(v) && v.hasAttribute(Mm("focus-guard")) && v.getAttribute("data-type") === "outside";
                    u.current = window.setTimeout(()=>{
                        var b;
                        const M = cc(o.domReference ? o.domReference.ownerDocument : document);
                        !v && M === o.domReference || zs((b = s.current.floatingContext) == null ? void 0 : b.refs.floating.current, M) || zs(o.domReference, M) || w || r(!1, _, "focus");
                    });
                }
            }), [
            s,
            o.domReference,
            r,
            l
        ]);
        return J.useMemo(()=>a ? {
                reference: h
            } : {}, [
            a,
            h
        ]);
    }
    const YF = "active", ZF = "selected";
    function GR(t, e, n) {
        const r = new Map, i = n === "item";
        let s = t;
        if (i && t) {
            const { [YF]: o, [ZF]: a, ...l } = t;
            s = l;
        }
        return {
            ...n === "floating" && {
                tabIndex: -1,
                [o3]: ""
            },
            ...s,
            ...e.map((o)=>{
                const a = o ? o[n] : null;
                return typeof a == "function" ? t ? a(t) : null : a;
            }).concat(t).reduce((o, a)=>(a && Object.entries(a).forEach((l)=>{
                    let [c, u] = l;
                    if (!(i && [
                        YF,
                        ZF
                    ].includes(c))) if (c.indexOf("on") === 0) {
                        if (r.has(c) || r.set(c, []), typeof u == "function") {
                            var f;
                            (f = r.get(c)) == null || f.push(u), o[c] = function() {
                                for(var h, m = arguments.length, v = new Array(m), _ = 0; _ < m; _++)v[_] = arguments[_];
                                return (h = r.get(c)) == null ? void 0 : h.map((w)=>w(...v)).find((w)=>w !== void 0);
                            };
                        }
                    } else o[c] = u;
                }), o), {})
        };
    }
    function QP(t) {
        t === void 0 && (t = []);
        const e = t.map((a)=>a?.reference), n = t.map((a)=>a?.floating), r = t.map((a)=>a?.item), i = J.useCallback((a)=>GR(a, t, "reference"), e), s = J.useCallback((a)=>GR(a, t, "floating"), n), o = J.useCallback((a)=>GR(a, t, "item"), r);
        return J.useMemo(()=>({
                getReferenceProps: i,
                getFloatingProps: s,
                getItemProps: o
            }), [
            i,
            s,
            o
        ]);
    }
    const Kre = "Escape";
    function VT(t, e, n) {
        switch(t){
            case "vertical":
                return e;
            case "horizontal":
                return n;
            default:
                return e || n;
        }
    }
    function XR(t, e) {
        return VT(e, t === GP || t === Cw, t === ah || t === lh);
    }
    function KR(t, e, n) {
        return VT(e, t === Cw, n ? t === ah : t === lh) || t === "Enter" || t === " " || t === "";
    }
    function JF(t, e, n) {
        return VT(e, n ? t === ah : t === lh, t === Cw);
    }
    function QF(t, e, n, r) {
        const i = n ? t === lh : t === ah, s = t === GP;
        return e === "both" || e === "horizontal" && r && r > 1 ? t === Kre : VT(e, i, s);
    }
    function Yre(t, e) {
        const { open: n, onOpenChange: r, elements: i } = t, { listRef: s, activeIndex: o, onNavigate: a = ()=>{}, enabled: l = !0, selectedIndex: c = null, allowEscape: u = !1, loop: f = !1, nested: h = !1, rtl: m = !1, virtual: v = !1, focusItemOnOpen: _ = "auto", focusItemOnHover: w = !0, openOnArrowKeyDown: b = !0, disabledIndices: M = void 0, orientation: E = "vertical", cols: T = 1, scrollItemIntoView: P = !0, virtualItemRef: A, itemSizes: O, dense: D = !1 } = e, R = a3(i.floating), N = zo(R), k = Rw(), U = Fy();
        Yr(()=>{
            t.dataRef.current.orientation = E;
        }, [
            t,
            E
        ]);
        const B = Uo(()=>{
            a(q.current === -1 ? null : q.current);
        }), j = O9(i.domReference), K = J.useRef(_), q = J.useRef(c ?? -1), ee = J.useRef(null), W = J.useRef(!0), Z = J.useRef(B), $ = J.useRef(!!i.floating), H = J.useRef(n), se = J.useRef(!1), le = J.useRef(!1), ne = zo(M), ue = zo(n), ge = zo(P), ye = zo(c), [_e, Te] = J.useState(), [Re, Fe] = J.useState(), be = Uo(()=>{
            function ce(G) {
                v ? (Te(G.id), U?.events.emit("virtualfocus", G), A && (A.current = G)) : jp(G, {
                    sync: se.current,
                    preventScroll: !0
                });
            }
            const ae = s.current[q.current];
            ae && ce(ae), (se.current ? (G)=>G() : requestAnimationFrame)(()=>{
                const G = s.current[q.current] || ae;
                if (!G) return;
                ae || ce(G);
                const he = ge.current;
                he && oe && (le.current || !W.current) && (G.scrollIntoView == null || G.scrollIntoView(typeof he == "boolean" ? {
                    block: "nearest",
                    inline: "nearest"
                } : he));
            });
        });
        Yr(()=>{
            l && (n && i.floating ? K.current && c != null && (le.current = !0, q.current = c, B()) : $.current && (q.current = -1, Z.current()));
        }, [
            l,
            n,
            i.floating,
            c,
            B
        ]), Yr(()=>{
            if (l && n && i.floating) if (o == null) {
                if (se.current = !1, ye.current != null) return;
                if ($.current && (q.current = -1, be()), (!H.current || !$.current) && K.current && (ee.current != null || K.current === !0 && ee.current == null)) {
                    let ce = 0;
                    const ae = ()=>{
                        s.current[0] == null ? (ce < 2 && (ce ? requestAnimationFrame : queueMicrotask)(ae), ce++) : (q.current = ee.current == null || KR(ee.current, E, m) || h ? WR(s, ne.current) : DF(s, ne.current), ee.current = null, B());
                    };
                    ae();
                }
            } else Hx(s, o) || (q.current = o, be(), le.current = !1);
        }, [
            l,
            n,
            i.floating,
            o,
            ye,
            h,
            s,
            E,
            m,
            B,
            be,
            ne
        ]), Yr(()=>{
            var ce;
            if (!l || i.floating || !U || v || !$.current) return;
            const ae = U.nodesRef.current, X = (ce = ae.find((pe)=>pe.id === k)) == null || (ce = ce.context) == null ? void 0 : ce.elements.floating, G = cc(Vs(i.floating)), he = ae.some((pe)=>pe.context && zs(pe.context.elements.floating, G));
            X && !he && W.current && X.focus({
                preventScroll: !0
            });
        }, [
            l,
            i.floating,
            U,
            k,
            v
        ]), Yr(()=>{
            if (!l || !U || !v || k) return;
            function ce(ae) {
                Fe(ae.id), A && (A.current = ae);
            }
            return U.events.on("virtualfocus", ce), ()=>{
                U.events.off("virtualfocus", ce);
            };
        }, [
            l,
            U,
            v,
            k,
            A
        ]), Yr(()=>{
            Z.current = B, H.current = n, $.current = !!i.floating;
        }), Yr(()=>{
            n || (ee.current = null);
        }, [
            n
        ]);
        const Me = o != null, oe = J.useMemo(()=>{
            function ce(X) {
                if (!n) return;
                const G = s.current.indexOf(X);
                G !== -1 && q.current !== G && (q.current = G, B());
            }
            return {
                onFocus (X) {
                    let { currentTarget: G } = X;
                    se.current = !0, ce(G);
                },
                onClick: (X)=>{
                    let { currentTarget: G } = X;
                    return G.focus({
                        preventScroll: !0
                    });
                },
                ...w && {
                    onMouseMove (X) {
                        let { currentTarget: G } = X;
                        se.current = !0, le.current = !1, ce(G);
                    },
                    onPointerLeave (X) {
                        let { pointerType: G } = X;
                        if (!(!W.current || G === "touch") && (se.current = !0, q.current = -1, B(), !v)) {
                            var he;
                            (he = N.current) == null || he.focus({
                                preventScroll: !0
                            });
                        }
                    }
                }
            };
        }, [
            n,
            N,
            w,
            s,
            B,
            v
        ]), Ye = Uo((ce)=>{
            if (W.current = !1, se.current = !0, ce.which === 229 || !ue.current && ce.currentTarget === N.current) return;
            if (h && QF(ce.key, E, m, T)) {
                Fo(ce), r(!1, ce.nativeEvent, "list-navigation"), Zi(i.domReference) && (v ? U?.events.emit("virtualfocus", i.domReference) : i.domReference.focus());
                return;
            }
            const ae = q.current, X = WR(s, M), G = DF(s, M);
            if (j || (ce.key === "Home" && (Fo(ce), q.current = X, B()), ce.key === "End" && (Fo(ce), q.current = G, B())), T > 1) {
                const he = O || Array.from({
                    length: s.current.length
                }, ()=>({
                        width: 1,
                        height: 1
                    })), pe = Sre(he, T, D), me = pe.findIndex((Ze)=>Ze != null && !DS(s.current, Ze, M)), Ie = pe.reduce((Ze, at, Je)=>at != null && !DS(s.current, at, M) ? Je : Ze, -1), Xe = pe[_re({
                    current: pe.map((Ze)=>Ze != null ? s.current[Ze] : null)
                }, {
                    event: ce,
                    orientation: E,
                    loop: f,
                    rtl: m,
                    cols: T,
                    disabledIndices: Mre([
                        ...M || s.current.map((Ze, at)=>DS(s.current, at) ? at : void 0),
                        void 0
                    ], pe),
                    minIndex: me,
                    maxIndex: Ie,
                    prevIndex: Ere(q.current > G ? X : q.current, he, pe, T, ce.key === Cw ? "bl" : ce.key === (m ? ah : lh) ? "tr" : "tl"),
                    stopEvent: !0
                })];
                if (Xe != null && (q.current = Xe, B()), E === "both") return;
            }
            if (XR(ce.key, E)) {
                if (Fo(ce), n && !v && cc(ce.currentTarget.ownerDocument) === ce.currentTarget) {
                    q.current = KR(ce.key, E, m) ? X : G, B();
                    return;
                }
                KR(ce.key, E, m) ? f ? q.current = ae >= G ? u && ae !== s.current.length ? -1 : X : so(s, {
                    startingIndex: ae,
                    disabledIndices: M
                }) : q.current = Math.min(G, so(s, {
                    startingIndex: ae,
                    disabledIndices: M
                })) : f ? q.current = ae <= X ? u && ae !== -1 ? s.current.length : G : so(s, {
                    startingIndex: ae,
                    decrement: !0,
                    disabledIndices: M
                }) : q.current = Math.max(X, so(s, {
                    startingIndex: ae,
                    decrement: !0,
                    disabledIndices: M
                })), Hx(s, q.current) && (q.current = -1), B();
            }
        }), Be = J.useMemo(()=>v && n && Me && {
                "aria-activedescendant": Re || _e
            }, [
            v,
            n,
            Me,
            Re,
            _e
        ]), nt = J.useMemo(()=>({
                "aria-orientation": E === "both" ? void 0 : E,
                ...j ? {} : Be,
                onKeyDown: Ye,
                onPointerMove () {
                    W.current = !0;
                }
            }), [
            Be,
            Ye,
            E,
            j
        ]), de = J.useMemo(()=>{
            function ce(X) {
                _ === "auto" && P9(X.nativeEvent) && (K.current = !0);
            }
            function ae(X) {
                K.current = _, _ === "auto" && VP(X.nativeEvent) && (K.current = !0);
            }
            return {
                ...Be,
                onKeyDown (X) {
                    var G;
                    W.current = !1;
                    const he = X.key.startsWith("Arrow"), pe = [
                        "Home",
                        "End"
                    ].includes(X.key), me = he || pe, Ie = U == null || (G = U.nodesRef.current.find((st)=>st.id === k)) == null || (G = G.context) == null || (G = G.dataRef) == null ? void 0 : G.current.orientation, Xe = JF(X.key, E, m), Ze = QF(X.key, E, m, T), at = JF(X.key, Ie, m), Je = XR(X.key, E), Pe = (h ? at : Je) || X.key === "Enter" || X.key.trim() === "";
                    if (v && n) {
                        const st = U?.nodesRef.current.find(($e)=>$e.parentId == null), Se = U && st ? kre(U.nodesRef.current, st.id) : null;
                        if (me && Se && A) {
                            const $e = new KeyboardEvent("keydown", {
                                key: X.key,
                                bubbles: !0
                            });
                            if (Xe || Ze) {
                                var je, rt;
                                const ht = ((je = Se.context) == null ? void 0 : je.elements.domReference) === X.currentTarget, Ee = Ze && !ht ? (rt = Se.context) == null ? void 0 : rt.elements.domReference : Xe ? s.current.find((lt)=>lt?.id === _e) : null;
                                Ee && (Fo(X), Ee.dispatchEvent($e), Fe(void 0));
                            }
                            if ((Je || pe) && Se.context && Se.context.open && Se.parentId && X.currentTarget !== Se.context.elements.domReference) {
                                var ct;
                                Fo(X), (ct = Se.context.elements.domReference) == null || ct.dispatchEvent($e);
                                return;
                            }
                        }
                        return Ye(X);
                    }
                    if (!(!n && !b && he)) {
                        if (Pe) {
                            const st = XR(X.key, Ie);
                            ee.current = h && st ? null : X.key;
                        }
                        if (h) {
                            at && (Fo(X), n ? (q.current = WR(s, ne.current), B()) : r(!0, X.nativeEvent, "list-navigation"));
                            return;
                        }
                        Je && (c != null && (q.current = c), Fo(X), !n && b ? r(!0, X.nativeEvent, "list-navigation") : Ye(X), n && B());
                    }
                },
                onFocus () {
                    n && !v && (q.current = -1, B());
                },
                onPointerDown: ae,
                onPointerEnter: ae,
                onMouseDown: ce,
                onClick: ce
            };
        }, [
            _e,
            Be,
            T,
            Ye,
            ne,
            _,
            s,
            h,
            B,
            r,
            n,
            b,
            E,
            k,
            m,
            c,
            U,
            v,
            A
        ]);
        return J.useMemo(()=>l ? {
                reference: de,
                floating: nt,
                item: oe
            } : {}, [
            l,
            de,
            nt,
            oe
        ]);
    }
    const e4 = (t)=>t.replace(/[A-Z]+(?![a-z])|[A-Z]/g, (e, n)=>(n ? "-" : "") + e.toLowerCase());
    function Gg(t, e) {
        return typeof t == "function" ? t(e) : t;
    }
    function Zre(t, e) {
        const [n, r] = J.useState(t);
        return t && !n && r(!0), J.useEffect(()=>{
            if (!t && n) {
                const i = setTimeout(()=>r(!1), e);
                return ()=>clearTimeout(i);
            }
        }, [
            t,
            n,
            e
        ]), n;
    }
    function Jre(t, e) {
        e === void 0 && (e = {});
        const { open: n, elements: { floating: r } } = t, { duration: i = 250 } = e, o = (typeof i == "number" ? i : i.close) || 0, [a, l] = J.useState("unmounted"), c = Zre(n, o);
        return !c && a === "close" && l("unmounted"), Yr(()=>{
            if (r) {
                if (n) {
                    l("initial");
                    const u = requestAnimationFrame(()=>{
                        l("open");
                    });
                    return ()=>{
                        cancelAnimationFrame(u);
                    };
                }
                l("close");
            }
        }, [
            n,
            r
        ]), {
            isMounted: c,
            status: a
        };
    }
    function ek(t, e) {
        e === void 0 && (e = {});
        const { initial: n = {
            opacity: 0
        }, open: r, close: i, common: s, duration: o = 250 } = e, a = t.placement, l = a.split("-")[0], c = J.useMemo(()=>({
                side: l,
                placement: a
            }), [
            l,
            a
        ]), u = typeof o == "number", f = (u ? o : o.open) || 0, h = (u ? o : o.close) || 0, [m, v] = J.useState(()=>({
                ...Gg(s, c),
                ...Gg(n, c)
            })), { isMounted: _, status: w } = Jre(t, {
            duration: o
        }), b = zo(n), M = zo(r), E = zo(i), T = zo(s);
        return Yr(()=>{
            const P = Gg(b.current, c), A = Gg(E.current, c), O = Gg(T.current, c), D = Gg(M.current, c) || Object.keys(P).reduce((R, N)=>(R[N] = "", R), {});
            if (w === "initial" && v((R)=>({
                    transitionProperty: R.transitionProperty,
                    ...O,
                    ...P
                })), w === "open" && v({
                transitionProperty: Object.keys(D).map(e4).join(","),
                transitionDuration: f + "ms",
                ...O,
                ...D
            }), w === "close") {
                const R = A || P;
                v({
                    transitionProperty: Object.keys(R).map(e4).join(","),
                    transitionDuration: h + "ms",
                    ...O,
                    ...R
                });
            }
        }, [
            h,
            E,
            b,
            M,
            T,
            f,
            w,
            c
        ]), {
            isMounted: _,
            styles: m
        };
    }
    const Qre = J.createContext({
        close () {}
    }), eie = Nn({
        slot: {
            target: [
                "flex",
                "justify-center",
                "items-center"
            ],
            portal: []
        },
        variant: {
            mounted: {
                true: []
            }
        },
        match: [
            {
                if: {
                    mounted: !1
                },
                then: {
                    portal: [
                        "hidden"
                    ]
                }
            }
        ],
        defaults: {
            mounted: !1
        }
    }), tie = ({ target: t, action: e = "hover", disabled: n = !1, closeOnClick: r = !1, delay: i = 100, float: s, variant: o, tva: a = eie, css: l, children: c })=>{
        const [u, f] = J.useState(!1), { refs: h, floatingStyles: m, context: v } = JP({
            open: u,
            onOpenChange: f,
            placement: "top",
            whileElementsMounted: X9,
            middleware: [
                Y9(10),
                Z9({
                    fallbackAxisSideDirection: "start"
                }),
                vre()
            ],
            ...s
        }), { getReferenceProps: _, getFloatingProps: w } = QP([
            Pre(v, {
                enabled: e === "hover",
                delay: i
            }),
            YP(v, {
                enabled: e === "click"
            }),
            Xre(v),
            ZP(v)
        ]), { isMounted: b, styles: M } = ek(v), E = a({
            mounted: b,
            ...o,
            css: l
        }).slots;
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx("button", {
                    type: "button",
                    ref: h.setReference,
                    ..._(),
                    disabled: n,
                    className: E.target(),
                    children: t
                }),
                x.jsx(KP, {
                    children: x.jsx("div", {
                        ref: h.setFloating,
                        style: {
                            ...m,
                            ...M
                        },
                        className: E.portal(),
                        ...w(),
                        onClick: r ? ()=>{
                            f(!1);
                        } : void 0,
                        children: x.jsx(Qre.Provider, {
                            value: {
                                close () {
                                    f(!1);
                                }
                            },
                            children: c
                        })
                    })
                })
            ]
        });
    }, cz = "icon-[system-uicons--menu-hamburger]", uz = Nn({
        slot: {
            base: []
        },
        variant: {
            size: {
                xs: "text-sm",
                sm: "text-sm",
                md: "text-base",
                lg: "text-lg",
                xl: "text-xl",
                "2xl": "text-2xl",
                "3xl": "text-3xl",
                "4xl": "text-4xl",
                "5xl": "text-5xl",
                "6xl": "text-6xl",
                "7xl": "text-7xl",
                "8xl": "text-8xl"
            },
            disabled: {
                true: []
            }
        },
        match: [
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "pointer-events-none",
                        "cursor-not-allowed",
                        "text-gray-400",
                        "opacity-50"
                    ]
                }
            }
        ],
        defaults: {
            size: "xl",
            disabled: !1
        }
    }), _n = J.memo(({ icon: t, variant: e, tva: n = uz, css: r, ...i })=>{
        const s = n({
            ...e,
            css: r
        }).slots;
        return t ? x.jsx("div", {
            className: s.base({
                css: [
                    t
                ]
            }),
            ...i
        }) : null;
    }), nie = Nn({
        slot: {
            base: [
                "p-1",
                "bg-slate-50",
                "border",
                "border-slate-300",
                "rounded-sm",
                "shadow-md",
                "text-slate-500",
                "flex",
                "flex-col",
                "gap-2"
            ]
        },
        variant: {},
        defaults: {}
    }), Wr = ({ icon: t = cz, iconProps: e, children: n, variant: r, tva: i = nie, css: s, ...o })=>{
        const a = i({
            ...r,
            css: s
        }).slots;
        return x.jsx(Nre, {
            children: x.jsx(tie, {
                action: "click",
                target: x.jsx(_n, {
                    icon: t,
                    css: {
                        base: [
                            "cursor-pointer"
                        ]
                    },
                    ...e
                }),
                delay: 100,
                float: {
                    placement: "bottom-start"
                },
                closeOnClick: !0,
                ...o,
                children: x.jsx("div", {
                    className: a.base(),
                    children: n
                })
            })
        });
    }, dz = "icon-[svg-spinners--90-ring-with-bg]", rie = Nn({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-center",
                "gap-2",
                "group",
                "w-fit",
                "h-fit",
                "rounded-sm",
                "cursor-pointer",
                "hover:shadow-md",
                "hover:shadow-slate-200",
                "transition-all",
                "hover:bg-slate-200",
                "text-slate-600",
                "text-2xl",
                "p-1"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "pointer-events-none"
                ]
            },
            loading: {
                true: [
                    "cursor-not-allowed",
                    "pointer-events-none"
                ]
            }
        },
        match: [
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "hover:bg-blue-400"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            loading: !1
        }
    }), Iw = ({ iconEnabled: t, iconDisabled: e, iconLoading: n = dz, iconProps: r, disabled: i = !1, loading: s = !1, onClick: o, variant: a, tva: l = rie, css: c, children: u, ...f })=>{
        const h = l({
            disabled: i,
            loading: s,
            ...a,
            css: c
        }).slots;
        return x.jsxs("div", {
            className: h.base(),
            onClick: i ? void 0 : o,
            ...f,
            children: [
                i ? x.jsx(_n, {
                    icon: s ? n : e ?? t,
                    ...r
                }) : x.jsx(_n, {
                    icon: s ? n : t,
                    ...r
                }),
                u
            ]
        });
    }, tk = "icon-[iconamoon--close-light]", t4 = (t)=>{
        let e;
        const n = new Set, r = (c, u)=>{
            const f = typeof c == "function" ? c(e) : c;
            if (!Object.is(f, e)) {
                const h = e;
                e = u ?? (typeof f != "object" || f === null) ? f : Object.assign({}, e, f), n.forEach((m)=>m(e, h));
            }
        }, i = ()=>e, a = {
            setState: r,
            getState: i,
            getInitialState: ()=>l,
            subscribe: (c)=>(n.add(c), ()=>n.delete(c))
        }, l = e = t(r, i, a);
        return a;
    }, iie = (t)=>t ? t4(t) : t4, sie = (t)=>t;
    function oie(t, e = sie) {
        const n = lr.useSyncExternalStore(t.subscribe, ()=>e(t.getState()), ()=>e(t.getInitialState()));
        return lr.useDebugValue(n), n;
    }
    const n4 = (t)=>{
        const e = iie(t), n = (r)=>oie(e, r);
        return Object.assign(n, e), n;
    }, aie = (t)=>t ? n4(t) : n4, fz = ({ defaultOpen: t = !1 })=>aie((e)=>({
                isOpen: t,
                open () {
                    e({
                        isOpen: !0
                    });
                },
                close () {
                    e({
                        isOpen: !1
                    });
                },
                toggle (n) {
                    e({
                        isOpen: n
                    });
                }
            })), hz = J.createContext(fz({
        defaultOpen: !1
    })), lie = Nn({
        slot: {
            base: [
                "bg-slate-400/75",
                "backdrop-blur-xs",
                "flex",
                "justify-center",
                "py-12"
            ],
            target: [],
            modal: [
                "bg-white",
                "rounded-lg",
                "shadow-lg",
                "p-4",
                "w-fit",
                "h-fit",
                "max-h-full",
                "overflow-y-auto",
                "relative",
                "w-2/3"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "pointer-events-none"
                ]
            },
            loading: {
                true: []
            }
        },
        match: [
            {
                if: {
                    loading: !0
                },
                then: {
                    base: [
                        "pointer-events-none",
                        "opacity-50"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            loading: !1
        }
    }), Fm = ({ target: t, icon: e, textTitle: n, disabled: r = !1, defaultOpen: i = !1, outside: s = !1, variant: o, css: a, tva: l = lie, children: c })=>{
        const u = J.useMemo(()=>fz({
                defaultOpen: i
            }), []), f = u((A)=>A.close), h = Ire(), { refs: m, context: v } = JP({
            nodeId: h,
            open: u((A)=>A.isOpen),
            onOpenChange: u((A)=>A.toggle)
        }), _ = YP(v), w = ZP(v, {
            outsidePress: s
        }), { getReferenceProps: b, getFloatingProps: M } = QP([
            _,
            w
        ]), { isMounted: E, styles: T } = ek(v), P = l({
            disabled: r,
            ...o,
            css: a
        }).slots;
        return x.jsxs(hz.Provider, {
            value: u,
            children: [
                x.jsx("div", {
                    ref: m.setReference,
                    ...b({
                        disabled: r
                    }),
                    className: P.target(),
                    children: t
                }),
                x.jsx(Are, {
                    id: h,
                    children: E && x.jsx(x.Fragment, {
                        children: x.jsx(KP, {
                            children: x.jsx(qre, {
                                lockScroll: !0,
                                style: T,
                                className: P.base(),
                                children: x.jsx(lz, {
                                    context: v,
                                    children: x.jsxs("div", {
                                        ref: m.setFloating,
                                        ...M(),
                                        className: P.modal(),
                                        children: [
                                            x.jsxs("div", {
                                                className: "border-b border-slate-200 mb-2 py-1.5 flex flex-row items-center justify-between select-none",
                                                children: [
                                                    x.jsxs("div", {
                                                        className: "flex flex-row items-center gap-2 pr-4",
                                                        children: [
                                                            e && (mw(e) ? x.jsx(_n, {
                                                                icon: e,
                                                                variant: {
                                                                    size: "xl"
                                                                }
                                                            }) : e),
                                                            n && x.jsx("div", {
                                                                className: "text-lg font-semibold text-slate-700",
                                                                children: n
                                                            })
                                                        ]
                                                    }),
                                                    x.jsx(Iw, {
                                                        iconEnabled: tk,
                                                        onClick: ()=>f()
                                                    })
                                                ]
                                            }),
                                            tne(c) ? x.jsx(c, {
                                                close: f
                                            }) : c
                                        ]
                                    })
                                })
                            })
                        })
                    })
                })
            ]
        });
    }, cie = Nn({
        use: R9,
        slot: {},
        variant: {},
        defaults: {}
    }), Xn = ({ icon: t, iconProps: e, label: n, disabled: r = !1, hidden: i = !1, variant: s, tva: o = cie, css: a, ...l })=>{
        const c = o({
            ...s,
            disabled: r,
            css: a
        }).slots;
        return i ? null : x.jsxs("div", {
            className: c.base(),
            children: [
                mw(t) ? x.jsx(_n, {
                    icon: t,
                    ...e
                }) : t,
                x.jsx(Fm, {
                    icon: t,
                    target: n,
                    disabled: r,
                    css: {
                        modal: [
                            "w-1/2"
                        ]
                    },
                    ...l
                })
            ]
        });
    }, uie = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-2xl",
                "bg-blue-50",
                "border",
                "border-blue-200",
                "text-xs",
                "px-4",
                "py-0.5",
                "font-bold"
            ]
        },
        variant: {},
        defaults: {}
    }), uo = ({ variant: t, tva: e = uie, css: n, ...r })=>{
        const i = e({
            ...t,
            css: n
        }).slots;
        return x.jsx("div", {
            className: i.base(),
            ...r
        });
    }, die = "icon-[material-symbols-light--check-small]", fie = "icon-[material-symbols-light--close-small]", hie = "icon-[material-symbols-light--check-indeterminate-small]", pie = Nn({
        use: uz,
        slot: {},
        variant: {
            value: {
                true: "text-green-600",
                false: "text-amber-600"
            }
        },
        defaults: {
            value: !1
        }
    }), WT = ({ value: t, checkIcon: e = die, unCheckIcon: n = fie, undefinedIcon: r = hie, tva: i = pie, ...s })=>t == null ? x.jsx(_n, {
            icon: r,
            tva: i,
            ...s
        }) : x.jsx(_n, {
            icon: t ? e : n,
            tva: (o)=>i({
                    ...o,
                    value: t
                }),
            ...s
        }), mie = Nn({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-between",
                "text-sm",
                "font-medium",
                "text-slate-900",
                "w-full"
            ],
            switch: [
                "relative",
                "w-11",
                "h-6",
                "bg-gray-200",
                "peer-focus:outline-hidden",
                "peer-focus:ring-4",
                "peer-focus:ring-blue-300",
                "dark:peer-focus:ring-blue-800",
                "rounded-full",
                "peer",
                "dark:bg-gray-700",
                "peer-checked:after:translate-x-full",
                "peer-checked:rtl:after:-translate-x-full",
                "peer-checked:after:border-white",
                "after:content-['']",
                "after:absolute",
                "after:top-[2px]",
                "after:start-[2px]",
                "after:bg-white",
                "after:border-gray-300",
                "after:border",
                "after:rounded-full",
                "after:h-5",
                "after:w-5",
                "after:transition-all",
                "dark:border-gray-600",
                "peer-checked:bg-blue-600"
            ]
        },
        variant: {},
        defaults: {}
    }), pz = ({ value: t, onChange: e, variant: n, tva: r = mie, css: i, ...s })=>{
        const o = r({
            ...n,
            css: i
        }).slots;
        return x.jsx("div", {
            className: o.base(),
            children: x.jsxs("label", {
                children: [
                    x.jsx("input", {
                        type: "checkbox",
                        checked: !!t,
                        className: "sr-only peer",
                        onChange: (a)=>{
                            e(a.target.checked);
                        },
                        ...s
                    }),
                    x.jsx("div", {
                        className: o.switch()
                    })
                ]
            })
        });
    }, gie = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "items-center",
                "justify-center",
                "gap-2",
                "group",
                "rounded-sm",
                "transition-all",
                "cursor-pointer"
            ]
        },
        variant: {
            variant: {
                primary: [
                    "text-white"
                ],
                secondary: [
                    "text-slate-700"
                ],
                subtle: [
                    "text-slate-600"
                ],
                danger: [
                    "text-slate-50"
                ]
            },
            disabled: {
                true: "cursor-not-allowed"
            },
            size: {
                xs: [],
                sm: [],
                md: []
            }
        },
        match: [
            {
                if: {
                    variant: "primary"
                },
                then: {
                    base: [
                        "bg-blue-400",
                        "hover:bg-blue-500"
                    ]
                }
            },
            {
                if: {
                    variant: "primary",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-blue-600",
                        "hover:bg-blue-600",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "secondary"
                },
                then: {
                    base: [
                        "bg-amber-400",
                        "hover:bg-amber-500"
                    ]
                }
            },
            {
                if: {
                    variant: "secondary",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-amber-600",
                        "hover:bg-amber-600",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "subtle"
                },
                then: {
                    base: [
                        "border",
                        "bg-slate-50",
                        "border-slate-300",
                        "hover:border-slate-400",
                        "text-slate-600",
                        "hover:text-slate-800",
                        "hover:bg-slate-100"
                    ]
                }
            },
            {
                if: {
                    variant: "subtle",
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "bg-blue-50",
                        "hover:bg-blue-50",
                        "cursor-not-allowed"
                    ]
                }
            },
            {
                if: {
                    variant: "danger"
                },
                then: {
                    base: [
                        "bg-red-400",
                        "hover:bg-red-500",
                        "hover:text-white"
                    ]
                }
            },
            {
                if: {
                    size: "xs"
                },
                then: {
                    base: [
                        "py-0.5",
                        "px-1"
                    ]
                }
            },
            {
                if: {
                    size: "sm"
                },
                then: {
                    base: [
                        "py-1",
                        "px-2"
                    ]
                }
            },
            {
                if: {
                    size: "md"
                },
                then: {
                    base: [
                        "py-2",
                        "px-4"
                    ]
                }
            }
        ],
        defaults: {
            variant: "primary",
            disabled: !1,
            size: "md"
        }
    }), zn = J.memo(({ iconEnabled: t, iconDisabled: e, iconLoading: n = dz, iconProps: r, loading: i, variant: s, tva: o = gie, css: a, children: l, ...c })=>{
        const u = o({
            disabled: c.disabled,
            ...s,
            css: a
        }).slots, f = J.useMemo(()=>({
                size: "xl"
            }), []);
        return x.jsxs("button", {
            type: "button",
            className: u.base({
                disabled: c.disabled
            }),
            ...c,
            children: [
                c.disabled ? x.jsx(_n, {
                    icon: i === !0 ? n : e,
                    variant: f,
                    ...r
                }) : x.jsx(_n, {
                    icon: i === !0 ? n : t,
                    variant: f,
                    ...r
                }),
                l
            ]
        });
    }), nk = J.createContext({
        inline: !1
    }), yie = Nn({
        slot: {
            base: [
                "border",
                "border-slate-100",
                "px-2",
                "py-1",
                "rounded-md"
            ],
            label: [
                "text-sm",
                "font-semibold",
                "text-slate-600",
                "border-b",
                "mb-2"
            ],
            value: []
        },
        variant: {
            inline: {
                true: []
            },
            withBackground: {
                true: []
            }
        },
        match: [
            {
                if: {
                    inline: !0
                },
                then: {
                    base: [
                        "border-none",
                        "flex",
                        "flex-row",
                        "items-center",
                        "gap-2"
                    ],
                    label: [
                        "mb-0",
                        "font-light",
                        "text-md",
                        "text-slate-600",
                        "border-none"
                    ],
                    value: [
                        "text-md",
                        "text-slate-800"
                    ]
                }
            },
            {
                if: {
                    withBackground: !0
                },
                then: {
                    base: [
                        "bg-slate-50",
                        "hover:bg-slate-100"
                    ]
                }
            }
        ],
        defaults: {
            inline: !1,
            withBackground: !0
        }
    }), vie = ({ inline: t, label: e, value: n, variant: r, tva: i = yie, css: s })=>{
        const o = J.useContext(nk), a = t ?? o?.inline, l = i({
            inline: a,
            ...r,
            css: s
        }).slots;
        return x.jsxs("div", {
            className: l.base(),
            children: [
                e ? x.jsx("div", {
                    className: l.label(),
                    children: e
                }) : null,
                x.jsx("div", {
                    className: l.value(),
                    children: n
                })
            ]
        });
    }, xie = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4",
                "border",
                "border-slate-100",
                "p-4",
                "rounded-lg"
            ]
        },
        variant: {
            inline: {
                true: [
                    "flex-row",
                    "border-none",
                    "gap-1",
                    "p-0",
                    "flex-1"
                ]
            }
        },
        defaults: {
            inline: !1
        }
    }), mz = ({ items: t, hidden: e = [], valueOfProps: n, entity: r, variant: i, tva: s = xie, css: o, inline: a = !1 })=>{
        const l = s({
            inline: a,
            ...i,
            css: o
        }).slots;
        return x.jsx(nk.Provider, {
            value: {
                inline: a
            },
            children: x.jsx("div", {
                className: l.base(),
                children: t.filter(({ id: c })=>!e.includes(c)).map(({ id: c, render: u, ...f })=>x.jsx(vie, {
                        value: x.jsx(u, {
                            entity: r
                        }),
                        ...n,
                        ...f
                    }, c))
            })
        });
    }, bie = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2"
            ]
        },
        variant: {},
        defaults: {}
    }), r4 = "icon-[tabler--dots]", wie = Nn({
        slot: {
            base: [
                "flex",
                "items-center",
                "justify-between",
                "gap-2"
            ],
            sums: [
                "flex",
                "items-center",
                "gap-2",
                "text-sm"
            ]
        },
        variant: {},
        defaults: {}
    }), _ie = Nn({
        slot: {
            base: [
                "select-none"
            ],
            list: [
                "flex",
                "items-center",
                "-space-x-px",
                "text-xs",
                "gap-2"
            ],
            page: [
                "flex",
                "items-center",
                "justify-center",
                "w-12",
                "px-2",
                "py-1",
                "rounded-sm",
                "border",
                "border-slate-200",
                "hover:bg-slate-200",
                "cursor-pointer",
                "transition-all",
                "duration-200"
            ]
        },
        variant: {
            current: {
                true: []
            }
        },
        match: [
            {
                if: {
                    current: !0
                },
                then: {
                    page: [
                        "bg-slate-100",
                        "hover:bg-slate-200",
                        "text-slate-800",
                        "font-bold"
                    ]
                }
            }
        ],
        defaults: {
            current: !1
        }
    }), YR = ({ pages: t, page: e, onPage: n, variant: r, tva: i = _ie, css: s })=>{
        const o = i({
            ...r,
            css: s
        }).slots;
        return x.jsx("nav", {
            className: o.base(),
            children: x.jsx("ul", {
                className: o.list(),
                children: t.map((a, l)=>x.jsx("li", {
                        className: o.page({
                            current: e === a - 1
                        }),
                        onClick: ()=>n(a - 1),
                        children: a
                    }, `page-${a}-${l}`))
            })
        });
    }, Sie = Nn({
        slot: {
            base: [
                "cursor-pointer",
                "bg-slate-50",
                "text-slate-900",
                "text-sm",
                "border",
                "border-slate-300",
                "rounded-sm",
                "focus:border-sky-400",
                "focus:outline-hidden",
                "p-2.5",
                "hover:shadow-md",
                "transition-all",
                "group"
            ],
            input: [
                "flex",
                "flex-row",
                "items-center",
                "justify-between",
                "gap-2"
            ],
            popup: [
                "z-50",
                "cursor-pointer",
                "overflow-y-auto",
                "rounded-sm",
                "border",
                "border-slate-300",
                "bg-white",
                "shadow-lg",
                "focus:outline-hidden"
            ],
            item: [
                "focus:outline-hidden",
                "py-2",
                "px-2.5",
                "flex",
                "items-center",
                "justify-between"
            ]
        },
        variant: {
            disabled: {
                true: [
                    "cursor-not-allowed",
                    "hover:shadow-none",
                    "focus:border-slate-300",
                    "opacity-50"
                ]
            },
            active: {
                true: []
            },
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    selected: !0
                },
                then: {
                    item: [
                        "bg-slate-100"
                    ]
                }
            },
            {
                if: {
                    active: !0
                },
                then: {
                    item: [
                        "bg-slate-200"
                    ]
                }
            }
        ],
        defaults: {
            disabled: !1,
            selected: !1,
            active: !1
        }
    }), gz = ({ items: t, icon: e, defaultValue: n, render: r, textSelect: i, disabled: s = !1, onItem: o, onSelect: a, onChange: l, value: c, variant: u, tva: f = Sie, css: h })=>{
        const [m, v] = J.useState(!1), [_, w] = J.useState(null), [b, M] = J.useState(t.findIndex((Z)=>Z.id === n));
        J.useEffect(()=>{
            M(t.findIndex((Z)=>Z.id === c));
        }, [
            c
        ]);
        const { refs: E, floatingStyles: T, context: P } = JP({
            placement: "bottom-start",
            open: m,
            onOpenChange: v,
            whileElementsMounted: X9,
            middleware: [
                Y9(5),
                Z9({
                    padding: 10
                }),
                xre({
                    apply ({ rects: Z, elements: $, availableHeight: H }) {
                        Object.assign($.floating.style, {
                            maxHeight: `${H}px`,
                            minWidth: `${Z.reference.width}px`
                        });
                    },
                    padding: 10
                })
            ]
        }), A = J.useRef([]), O = J.useRef(!1), D = YP(P, {
            event: "mousedown"
        }), R = ZP(P), N = Yre(P, {
            listRef: A,
            activeIndex: _,
            selectedIndex: b,
            onNavigate: w,
            loop: !0
        }), { getReferenceProps: k, getFloatingProps: U, getItemProps: B } = QP([
            R,
            N,
            D
        ]), { isMounted: j, styles: K } = ek(P), q = (Z)=>{
            M(Z), v(!1);
            const $ = t[Z];
            $ && o?.($), a?.($), l?.($?.id);
        }, ee = b === null ? void 0 : t[b], W = f({
            disabled: s,
            ...u,
            css: h
        }).slots;
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx("div", {
                    tabIndex: s ? -1 : 0,
                    ref: s ? void 0 : E.setReference,
                    "aria-labelledby": "select-label",
                    "aria-autocomplete": "none",
                    ...s ? {} : k(),
                    className: W.base(),
                    children: x.jsxs("div", {
                        className: W.input(),
                        children: [
                            e ? x.jsx(_n, {
                                icon: e,
                                variant: {
                                    size: "xl"
                                },
                                css: {
                                    base: [
                                        "text-slate-400",
                                        "group-hover:text-slate-600"
                                    ]
                                }
                            }) : null,
                            ee ? x.jsx(r, {
                                entity: ee
                            }) : i || _a.rich("Select item"),
                            x.jsx(_n, {
                                icon: "icon-[gg--select]",
                                variant: {
                                    size: "xl"
                                },
                                css: {
                                    base: [
                                        !m && "text-slate-400",
                                        m && "text-slate-600",
                                        "group-hover:text-slate-600"
                                    ]
                                }
                            })
                        ]
                    })
                }),
                j && x.jsx(KP, {
                    children: x.jsx(lz, {
                        context: P,
                        modal: !1,
                        children: x.jsx("div", {
                            ref: E.setFloating,
                            style: {
                                ...T,
                                ...K
                            },
                            className: W.popup(),
                            ...U(),
                            children: t.map((Z, $)=>x.jsxs("div", {
                                    ref: (H)=>{
                                        A.current[$] = H;
                                    },
                                    role: "option",
                                    tabIndex: $ === _ ? 0 : -1,
                                    "aria-selected": $ === b && $ === _,
                                    className: W.item({
                                        selected: $ === b,
                                        active: $ === _
                                    }),
                                    ...B({
                                        onClick () {
                                            q($);
                                        },
                                        onKeyDown (H) {
                                            H.key === "Enter" && (H.preventDefault(), q($)), H.key === " " && !O.current && (H.preventDefault(), q($));
                                        }
                                    }),
                                    children: [
                                        x.jsx(r, {
                                            entity: Z
                                        }),
                                        $ === b && x.jsx(_n, {
                                            icon: "icon-[basil--check-outline]",
                                            variant: {
                                                size: "xl"
                                            }
                                        })
                                    ]
                                }, Z.id))
                        })
                    })
                })
            ]
        });
    }, Eie = ({ sizes: t = [
        5,
        15,
        30,
        50,
        100
    ], size: e, onSize: n, ...r })=>x.jsx(gz, {
            items: t.map((i)=>({
                    id: `${i}`,
                    size: i
                })),
            defaultValue: `${e}`,
            value: `${e}`,
            onItem: ({ size: i })=>n(i),
            render: ({ entity: { size: i } })=>i,
            css: {
                base: [
                    "px-8",
                    "py-1"
                ],
                item: [
                    "px-8",
                    "py-1"
                ]
            },
            ...r
        }), i4 = ({ cursor: t, count: e, textTotal: n, onPage: r, onSize: i, variant: s, tva: o = wie, css: a })=>{
        const l = J.useMemo(()=>qte({
                page: t.page,
                total: Math.ceil(e.filter / t.size),
                siblings: 1,
                boundaries: 1
            }), [
            t.page,
            e.filter,
            t.size
        ]), c = o({
            ...s,
            css: a
        }).slots;
        return x.jsxs("div", {
            className: c.base(),
            children: [
                l.total > 1 ? x.jsxs("div", {
                    className: "flex items-center justify-center gap-2 text-sm",
                    children: [
                        [
                            "both",
                            "start"
                        ].includes(l.type) && x.jsxs(x.Fragment, {
                            children: [
                                x.jsx(YR, {
                                    page: t.page,
                                    pages: l.start,
                                    onPage: r
                                }),
                                x.jsx(_n, {
                                    icon: r4
                                })
                            ]
                        }),
                        x.jsx(YR, {
                            page: t.page,
                            pages: l.pages,
                            onPage: r
                        }),
                        [
                            "both",
                            "end"
                        ].includes(l.type) && x.jsxs(x.Fragment, {
                            children: [
                                x.jsx(_n, {
                                    icon: r4
                                }),
                                x.jsx(YR, {
                                    page: t.page,
                                    pages: l.end,
                                    onPage: r
                                })
                            ]
                        })
                    ]
                }) : null,
                x.jsxs("div", {
                    className: c.sums(),
                    children: [
                        x.jsx("div", {
                            children: n
                        }),
                        x.jsx("div", {
                            className: "font-bold",
                            children: e.filter
                        }),
                        e.filter !== e.where && x.jsxs(x.Fragment, {
                            children: [
                                x.jsx("div", {
                                    children: "/"
                                }),
                                x.jsx("div", {
                                    className: "font-semibold",
                                    children: e.where
                                })
                            ]
                        })
                    ]
                }),
                x.jsx(Eie, {
                    size: t.size,
                    onSize: i
                })
            ]
        });
    }, s4 = "function", N0 = "64e10b34-2bf7-4616-9668-f99de5aa046e", Mie = "get", Tie = "has", Cie = "set", { isArray: LS } = Array;
    let { SharedArrayBuffer: QE, window: Rie } = globalThis, { notify: yz, wait: vz, waitAsync: eM } = Atomics, xz = null;
    eM || (eM = (t)=>({
            value: new Promise((e)=>{
                let n = new Worker("data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))");
                n.onmessage = e, n.postMessage(t);
            })
        }));
    try {
        new QE(4);
    } catch  {
        QE = ArrayBuffer;
        const e = new WeakMap;
        if (Rie) {
            const n = new Map, { prototype: { postMessage: r } } = Worker, i = (s)=>{
                const o = s.data?.[N0];
                if (!LS(o)) {
                    s.stopImmediatePropagation();
                    const { id: a, sb: l } = o;
                    n.get(a)(l);
                }
            };
            xz = function(s, ...o) {
                const a = s?.[N0];
                if (LS(a)) {
                    const [l, c] = a;
                    e.set(c, l), this.addEventListener("message", i);
                }
                return r.call(this, s, ...o);
            }, eM = (s)=>({
                    value: new Promise((o)=>{
                        n.set(e.get(s), o);
                    }).then((o)=>{
                        n.delete(e.get(s)), e.delete(s);
                        for(let a = 0; a < o.length; a++)s[a] = o[a];
                        return "ok";
                    })
                });
        } else {
            const n = (r, i)=>({
                    [N0]: {
                        id: r,
                        sb: i
                    }
                });
            yz = (r)=>{
                postMessage(n(e.get(r), r));
            }, addEventListener("message", (r)=>{
                const i = r.data?.[N0];
                if (LS(i)) {
                    const [s, o] = i;
                    e.set(o, s);
                }
            });
        }
    }
    const { Int32Array: l3, Map: o4, Uint16Array: c3 } = globalThis, { BYTES_PER_ELEMENT: a4 } = l3, { BYTES_PER_ELEMENT: Iie } = c3, Aie = (t, e, n)=>{
        for(; vz(t, 0, 0, e) === "timed-out";)n();
    }, u3 = new WeakSet, ZR = new WeakMap, Nie = {
        value: {
            then: (t)=>t()
        }
    };
    let Pie = 0;
    const rk = (t, { parse: e = JSON.parse, stringify: n = JSON.stringify, transform: r, interrupt: i } = JSON)=>{
        if (!ZR.has(t)) {
            const s = xz || t.postMessage, o = (h, ...m)=>s.call(t, {
                    [N0]: m
                }, {
                    transfer: h
                }), a = typeof i === s4 ? i : i?.handler, l = i?.delay || 42, c = new TextDecoder("utf-16"), u = (h, m)=>h ? eM(m, 0) : (a ? Aie(m, l, a) : vz(m, 0), Nie);
            let f = !1;
            ZR.set(t, new Proxy(new o4, {
                [Tie]: (h, m)=>typeof m == "string" && !m.startsWith("_"),
                [Mie]: (h, m)=>m === "then" ? null : (...v)=>{
                        const _ = Pie++;
                        let w = new l3(new QE(a4 * 2)), b = [];
                        u3.has(v.at(-1) || b) && u3.delete(b = v.pop()), o(b, _, w, m, r ? v.map(r) : v);
                        const M = t !== globalThis;
                        let E = 0;
                        return f && M && (E = setTimeout(console.warn, 1e3, `💀🔒 - Possible deadlock if proxy.${m}(...args) is awaited`)), u(M, w).value.then(()=>{
                            clearTimeout(E);
                            const T = w[1];
                            if (!T) return;
                            const P = Iie * T;
                            return w = new l3(new QE(P + P % a4)), o([], _, w), u(M, w).value.then(()=>e(c.decode(new c3(w.buffer).slice(0, T))));
                        });
                    },
                [Cie] (h, m, v) {
                    const _ = typeof v;
                    if (_ !== s4) throw new Error(`Unable to assign ${m} as ${_}`);
                    if (!h.size) {
                        const w = new o4;
                        t.addEventListener("message", async (b)=>{
                            const M = b.data?.[N0];
                            if (LS(M)) {
                                b.stopImmediatePropagation();
                                const [E, T, ...P] = M;
                                let A;
                                if (P.length) {
                                    const [O, D] = P;
                                    if (h.has(O)) {
                                        f = !0;
                                        try {
                                            const R = await h.get(O)(...D);
                                            if (R !== void 0) {
                                                const N = n(r ? r(R) : R);
                                                w.set(E, N), T[1] = N.length;
                                            }
                                        } catch (R) {
                                            A = R;
                                        } finally{
                                            f = !1;
                                        }
                                    } else A = new Error(`Unsupported action: ${O}`);
                                    T[0] = 1;
                                } else {
                                    const O = w.get(E);
                                    w.delete(E);
                                    for(let D = new c3(T.buffer), R = 0; R < O.length; R++)D[R] = O.charCodeAt(R);
                                }
                                if (yz(T, 0), A) throw A;
                            }
                        });
                    }
                    return !!h.set(m, v);
                }
            }));
        }
        return ZR.get(t);
    };
    rk.transfer = (...t)=>(u3.add(t), t);
    function l4() {
        let t, e;
        return {
            lock: async ()=>{
                for(; t;)await t;
                t = new Promise((i)=>{
                    e = i;
                });
            },
            unlock: async ()=>{
                const i = e;
                t = void 0, e = void 0, i?.();
            }
        };
    }
    const kie = "modulepreload", Oie = function(t) {
        return "/" + t;
    }, c4 = {}, tM = function(e, n, r) {
        let i = Promise.resolve();
        if (n && n.length > 0) {
            document.getElementsByTagName("link");
            const o = document.querySelector("meta[property=csp-nonce]"), a = o?.nonce || o?.getAttribute("nonce");
            i = Promise.allSettled(n.map((l)=>{
                if (l = Oie(l), l in c4) return;
                c4[l] = !0;
                const c = l.endsWith(".css"), u = c ? '[rel="stylesheet"]' : "";
                if (document.querySelector(`link[href="${l}"]${u}`)) return;
                const f = document.createElement("link");
                if (f.rel = c ? "stylesheet" : kie, c || (f.as = "script"), f.crossOrigin = "", f.href = l, a && f.setAttribute("nonce", a), document.head.appendChild(f), c) return new Promise((h, m)=>{
                    f.addEventListener("load", h), f.addEventListener("error", ()=>m(new Error(`Unable to preload CSS for ${l}`)));
                });
            }));
        }
        function s(o) {
            const a = new Event("vite:preloadError", {
                cancelable: !0
            });
            if (a.payload = o, window.dispatchEvent(a), !a.defaultPrevented) throw o;
        }
        return i.then((o)=>{
            for (const a of o || [])a.status === "rejected" && s(a.reason);
            return e().catch(s);
        });
    };
    async function bz(t, e) {
        let n;
        if (t instanceof Blob ? n = t.stream() : n = t, n instanceof ReadableStream && e) {
            const i = n.getReader();
            switch(e){
                case "callback":
                    return async ()=>(await i.read()).value;
                case "buffer":
                    const s = [];
                    let o = !1;
                    for(; !o;){
                        const u = await i.read();
                        u.value && s.push(u.value), o = u.done;
                    }
                    const a = s.reduce((u, f)=>u + f.length, 0), l = new Uint8Array(a);
                    let c = 0;
                    return s.forEach((u)=>{
                        l.set(u, c), c += u.length;
                    }), l;
            }
        } else return n;
    }
    class nM {
        constructor(e){
            Object.defineProperty(this, "sqlite3InitModule", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            }), Object.defineProperty(this, "sqlite3", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "db", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "pointers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: []
            }), Object.defineProperty(this, "storageType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "memory"
            });
        }
        async init(e) {
            const { databasePath: n } = e, r = this.getFlags(e);
            if (!this.sqlite3InitModule) {
                const { default: i } = await tM(async ()=>{
                    const { default: s } = await import("./index-itAQ-X7t.js");
                    return {
                        default: s
                    };
                }, []);
                this.sqlite3InitModule = i;
            }
            this.sqlite3 || (this.sqlite3 = await this.sqlite3InitModule()), this.db && await this.destroy(), this.db = new this.sqlite3.oo1.DB(n, r), this.config = e;
        }
        async exec(e) {
            if (!this.db) throw new Error("Driver not initialized");
            return this.execOnDb(this.db, e);
        }
        async execBatch(e) {
            if (!this.db) throw new Error("Driver not initialized");
            const n = [];
            return this.db.transaction((r)=>{
                for (let i of e){
                    const s = this.execOnDb(r, i);
                    n.push(s);
                }
            }), n;
        }
        async isDatabasePersisted() {
            return !1;
        }
        async getDatabaseSizeBytes() {
            const n = (await this.exec({
                sql: `SELECT page_count * page_size AS size 
				FROM pragma_page_count(), pragma_page_size()`,
                method: "get"
            }))?.rows?.[0];
            if (typeof n != "number") throw new Error("Failed to query database size");
            return n;
        }
        async createFunction(e) {
            if (!this.db) throw new Error("Driver not initialized");
            switch(e.type){
                case "callback":
                case "scalar":
                    this.db.createFunction({
                        name: e.name,
                        xFunc: (n, ...r)=>e.func(...r),
                        arity: -1
                    });
                    break;
                case "aggregate":
                    this.db.createFunction({
                        name: e.name,
                        xStep: (n, ...r)=>e.func.step(...r),
                        xFinal: (n, ...r)=>e.func.final(...r),
                        arity: -1
                    });
                    break;
            }
        }
        async import(e) {
            if (!this.sqlite3 || !this.db || !this.config) throw new Error("Driver not initialized");
            const n = await bz(e, "buffer"), r = this.sqlite3.wasm.allocFromTypedArray(n);
            this.pointers.push(r);
            const i = this.sqlite3.capi.sqlite3_deserialize(this.db, "main", r, n.byteLength, n.byteLength, this.config.readOnly ? this.sqlite3.capi.SQLITE_DESERIALIZE_READONLY : this.sqlite3.capi.SQLITE_DESERIALIZE_RESIZEABLE);
            this.db.checkRc(i);
        }
        async export() {
            if (!this.sqlite3 || !this.db) throw new Error("Driver not initialized");
            return {
                name: "database.sqlite3",
                data: this.sqlite3.capi.sqlite3_js_db_export(this.db)
            };
        }
        async clear() {}
        async destroy() {
            this.closeDb(), this.pointers.forEach((e)=>this.sqlite3?.wasm.dealloc(e)), this.pointers = [];
        }
        getFlags(e) {
            const { readOnly: n, verbose: r } = e;
            return [
                n === !0 ? "r" : "cw",
                r === !0 ? "t" : ""
            ].join("");
        }
        execOnDb(e, n) {
            const r = {
                rows: [],
                columns: []
            }, i = e.exec({
                sql: n.sql,
                bind: n.params,
                returnValue: "resultRows",
                rowMode: "array",
                columnNames: r.columns
            });
            switch(n.method){
                case "run":
                    break;
                case "get":
                    r.rows = i[0] ?? [];
                    break;
                case "all":
                default:
                    r.rows = i;
                    break;
            }
            return r;
        }
        closeDb() {
            this.db && (this.db.close(), this.db = void 0);
        }
    }
    class u1 {
        constructor(e){
            Object.defineProperty(this, "driver", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {}
            }), Object.defineProperty(this, "userFunctions", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "initMutex", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: l4()
            }), Object.defineProperty(this, "transactionMutex", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: l4()
            }), Object.defineProperty(this, "transactionKey", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            }), Object.defineProperty(this, "proxy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "reinitChannel", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "onmessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "init", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    if (this.config.databasePath) {
                        await this.initMutex.lock();
                        try {
                            try {
                                await this.driver.init(this.config);
                            } catch  {
                                console.warn(`Persistence failed, so ${this.config.databasePath} will not be saved. For origin private file system persistence, make sure your web server is configured to use the correct HTTP response headers (See https://sqlocal.dallashoffman.com/guide/setup#cross-origin-isolation).`), this.config.databasePath = ":memory:", this.driver = new nM, await this.driver.init(this.config);
                            }
                            this.driver.storageType !== "memory" && (this.reinitChannel = new BroadcastChannel(`_sqlocal_reinit_(${this.config.databasePath})`), this.reinitChannel.onmessage = (s)=>{
                                const o = s.data;
                                if (this.config.clientKey !== o.clientKey) switch(o.type){
                                    case "reinit":
                                        this.init(o.reason);
                                        break;
                                    case "close":
                                        this.driver.destroy();
                                        break;
                                }
                            }), await Promise.all(Array.from(this.userFunctions.values()).map((s)=>this.initUserFunction(s))), await this.execInitStatements(), this.emitMessage({
                                type: "event",
                                event: "connect",
                                reason: i
                            });
                        } catch (s) {
                            this.emitMessage({
                                type: "error",
                                error: s,
                                queryKey: null
                            }), await this.destroy();
                        } finally{
                            await this.initMutex.unlock();
                        }
                    }
                }
            }), Object.defineProperty(this, "postMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i, s)=>{
                    const o = i instanceof MessageEvent ? i.data : i;
                    switch(await this.initMutex.lock(), o.type){
                        case "config":
                            this.editConfig(o);
                            break;
                        case "query":
                        case "batch":
                        case "transaction":
                            this.exec(o);
                            break;
                        case "function":
                            this.createUserFunction(o);
                            break;
                        case "getinfo":
                            this.getDatabaseInfo(o);
                            break;
                        case "import":
                            this.importDb(o);
                            break;
                        case "export":
                            this.exportDb(o);
                            break;
                        case "delete":
                            this.deleteDb(o);
                            break;
                        case "destroy":
                            this.destroy(o);
                            break;
                    }
                    await this.initMutex.unlock();
                }
            }), Object.defineProperty(this, "emitMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (i, s = [])=>{
                    this.onmessage && this.onmessage(i, s);
                }
            }), Object.defineProperty(this, "editConfig", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (i)=>{
                    this.config = i.config, this.init("initial");
                }
            }), Object.defineProperty(this, "exec", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    try {
                        const s = {
                            type: "data",
                            queryKey: i.queryKey,
                            data: []
                        };
                        switch(i.type){
                            case "query":
                                const o = this.transactionKey !== null && this.transactionKey === i.transactionKey;
                                try {
                                    o || await this.transactionMutex.lock();
                                    const a = await this.driver.exec(i);
                                    s.data.push(a);
                                } finally{
                                    o || await this.transactionMutex.unlock();
                                }
                                break;
                            case "batch":
                                try {
                                    await this.transactionMutex.lock();
                                    const a = await this.driver.execBatch(i.statements);
                                    s.data.push(...a);
                                } finally{
                                    await this.transactionMutex.unlock();
                                }
                                break;
                            case "transaction":
                                if (i.action === "begin" && (await this.transactionMutex.lock(), this.transactionKey = i.transactionKey, await this.driver.exec({
                                    sql: "BEGIN"
                                })), (i.action === "commit" || i.action === "rollback") && this.transactionKey !== null && this.transactionKey === i.transactionKey) {
                                    const a = i.action === "commit" ? "COMMIT" : "ROLLBACK";
                                    await this.driver.exec({
                                        sql: a
                                    }), this.transactionKey = null, await this.transactionMutex.unlock();
                                }
                                break;
                        }
                        this.emitMessage(s);
                    } catch (s) {
                        this.emitMessage({
                            type: "error",
                            error: s,
                            queryKey: i.queryKey
                        });
                    }
                }
            }), Object.defineProperty(this, "execInitStatements", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    if (this.config.onInitStatements) for (let i of this.config.onInitStatements)await this.driver.exec(i);
                }
            }), Object.defineProperty(this, "getDatabaseInfo", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    try {
                        this.emitMessage({
                            type: "info",
                            queryKey: i.queryKey,
                            info: {
                                databasePath: this.config.databasePath,
                                storageType: this.driver.storageType,
                                databaseSizeBytes: await this.driver.getDatabaseSizeBytes(),
                                persisted: await this.driver.isDatabasePersisted()
                            }
                        });
                    } catch (s) {
                        this.emitMessage({
                            type: "error",
                            queryKey: i.queryKey,
                            error: s
                        });
                    }
                }
            }), Object.defineProperty(this, "createUserFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { functionName: s, functionType: o, queryKey: a } = i;
                    let l;
                    if (this.userFunctions.has(s)) {
                        this.emitMessage({
                            type: "error",
                            error: new Error(`A user-defined function with the name "${s}" has already been created for this SQLocal instance.`),
                            queryKey: a
                        });
                        return;
                    }
                    switch(o){
                        case "callback":
                            l = {
                                type: o,
                                name: s,
                                func: (...c)=>{
                                    this.emitMessage({
                                        type: "callback",
                                        name: s,
                                        args: c
                                    });
                                }
                            };
                            break;
                        case "scalar":
                            l = {
                                type: o,
                                name: s,
                                func: this.proxy[`_sqlocal_func_${s}`]
                            };
                            break;
                        case "aggregate":
                            l = {
                                type: o,
                                name: s,
                                func: {
                                    step: this.proxy[`_sqlocal_func_${s}_step`],
                                    final: this.proxy[`_sqlocal_func_${s}_final`]
                                }
                            };
                            break;
                    }
                    try {
                        await this.initUserFunction(l), this.emitMessage({
                            type: "success",
                            queryKey: a
                        });
                    } catch (c) {
                        this.emitMessage({
                            type: "error",
                            error: c,
                            queryKey: a
                        });
                    }
                }
            }), Object.defineProperty(this, "initUserFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    await this.driver.createFunction(i), this.userFunctions.set(i.name, i);
                }
            }), Object.defineProperty(this, "importDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: s, database: o } = i;
                    let a = !1;
                    try {
                        await this.driver.import(o), this.driver.storageType === "memory" && await this.execInitStatements();
                    } catch (l) {
                        this.emitMessage({
                            type: "error",
                            error: l,
                            queryKey: s
                        }), a = !0;
                    } finally{
                        this.driver.storageType !== "memory" && await this.init("overwrite");
                    }
                    a || this.emitMessage({
                        type: "success",
                        queryKey: s
                    });
                }
            }), Object.defineProperty(this, "exportDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: s } = i;
                    try {
                        const { name: o, data: a } = await this.driver.export();
                        this.emitMessage({
                            type: "buffer",
                            queryKey: s,
                            bufferName: o,
                            buffer: a
                        }, [
                            a
                        ]);
                    } catch (o) {
                        this.emitMessage({
                            type: "error",
                            error: o,
                            queryKey: s
                        });
                    }
                }
            }), Object.defineProperty(this, "deleteDb", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    const { queryKey: s } = i;
                    let o = !1;
                    try {
                        await this.driver.clear();
                    } catch (a) {
                        this.emitMessage({
                            type: "error",
                            error: a,
                            queryKey: s
                        }), o = !0;
                    } finally{
                        await this.init("delete");
                    }
                    o || this.emitMessage({
                        type: "success",
                        queryKey: s
                    });
                }
            }), Object.defineProperty(this, "destroy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (i)=>{
                    await this.driver.exec({
                        sql: "PRAGMA optimize"
                    }), await this.driver.destroy(), this.reinitChannel && (this.reinitChannel.close(), this.reinitChannel = void 0), i && this.emitMessage({
                        type: "success",
                        queryKey: i.queryKey
                    });
                }
            });
            const r = typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope ? rk(globalThis) : globalThis;
            this.proxy = r, this.driver = e;
        }
    }
    function rM(t, ...e) {
        return {
            sql: t.join("?"),
            params: e
        };
    }
    function Die(t) {
        return !t.some((e)=>!Array.isArray(e));
    }
    function JR(t, e) {
        let n;
        return Die(t) ? n = t : n = [
            t
        ], n.map((r)=>{
            const i = {};
            return e.forEach((s, o)=>{
                i[s] = r[o];
            }), i;
        });
    }
    function Lie(t) {
        return typeof t == "object" && t !== null && "getSQL" in t && typeof t.getSQL == "function";
    }
    function Fie(t) {
        return typeof t == "object" && t !== null && "sql" in t && typeof t.sql == "string" && "params" in t;
    }
    function jie(t) {
        if (typeof t == "function" && (t = t(rM)), Lie(t)) try {
            if (!("toSQL" in t && typeof t.toSQL == "function")) throw 1;
            const r = t.toSQL();
            if (!Fie(r)) throw 2;
            return r;
        } catch  {
            throw new Error("The passed statement could not be parsed.");
        }
        const e = t.sql;
        let n = [];
        return "params" in t ? n = t.params : "parameters" in t && (n = t.parameters), {
            sql: e,
            params: n
        };
    }
    function QR() {
        return crypto.randomUUID();
    }
    function u4(t, e) {
        let n;
        return typeof t == "string" ? n = {
            sql: t,
            params: e
        } : n = rM(t, ...e), n;
    }
    async function d1(t, e, n, r) {
        return !e && "locks" in navigator ? navigator.locks.request(`_sqlocal_mutation_(${n.databasePath})`, {
            mode: t
        }, r) : r();
    }
    class d4 extends nM {
        constructor(e, n){
            super(n), Object.defineProperty(this, "storageType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            });
        }
        async init(e) {
            const n = this.getFlags(e);
            if (e.readOnly) throw new Error(`SQLite storage type "${this.storageType}" does not support read-only mode.`);
            if (!this.sqlite3InitModule) {
                const { default: r } = await tM(async ()=>{
                    const { default: i } = await import("./index-itAQ-X7t.js");
                    return {
                        default: i
                    };
                }, []);
                this.sqlite3InitModule = r;
            }
            this.sqlite3 || (this.sqlite3 = await this.sqlite3InitModule()), this.db && await this.destroy(), this.db = new this.sqlite3.oo1.JsStorageDb({
                filename: this.storageType,
                flags: n
            }), this.config = e;
        }
        async isDatabasePersisted() {
            return navigator.storage?.persisted();
        }
        async getDatabaseSizeBytes() {
            if (!this.db) throw new Error("Driver not initialized");
            return this.db.storageSize();
        }
        async import(e) {
            const n = new nM;
            await n.init({}), await n.import(e), await this.clear(), await n.exec({
                sql: `VACUUM INTO 'file:${this.storageType}?vfs=kvvfs'`
            }), await n.destroy();
        }
        async clear() {
            if (!this.db) throw new Error("Driver not initialized");
            this.db.clearStorage();
        }
        async destroy() {
            this.closeDb();
        }
    }
    class Bie {
        constructor(e){
            Object.defineProperty(this, "config", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "clientKey", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "processor", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "isDestroyed", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: !1
            }), Object.defineProperty(this, "bypassMutationLock", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: !1
            }), Object.defineProperty(this, "userCallbacks", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "queriesInProgress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new Map
            }), Object.defineProperty(this, "proxy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "reinitChannel", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "processMessageEvent", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (l)=>{
                    const c = l instanceof MessageEvent ? l.data : l, u = this.queriesInProgress;
                    switch(c.type){
                        case "success":
                        case "data":
                        case "buffer":
                        case "info":
                        case "error":
                            if (c.queryKey && u.has(c.queryKey)) {
                                const [h, m] = u.get(c.queryKey);
                                c.type === "error" ? m(c.error) : h(c), u.delete(c.queryKey);
                            } else if (c.type === "error") throw c.error;
                            break;
                        case "callback":
                            const f = this.userCallbacks.get(c.name);
                            f && f(...c.args ?? []);
                            break;
                        case "event":
                            this.config.onConnect?.(c.reason);
                            break;
                    }
                }
            }), Object.defineProperty(this, "createQuery", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>d1("shared", this.bypassMutationLock || l.type === "import" || l.type === "delete", this.config, async ()=>{
                        if (this.isDestroyed === !0) throw new Error("This SQLocal client has been destroyed. You will need to initialize a new client in order to make further queries.");
                        const c = QR();
                        switch(l.type){
                            case "import":
                                this.processor.postMessage({
                                    ...l,
                                    queryKey: c
                                }, [
                                    l.database
                                ]);
                                break;
                            default:
                                this.processor.postMessage({
                                    ...l,
                                    queryKey: c
                                });
                                break;
                        }
                        return new Promise((u, f)=>{
                            this.queriesInProgress.set(c, [
                                u,
                                f
                            ]);
                        });
                    })
            }), Object.defineProperty(this, "broadcast", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (l)=>{
                    this.reinitChannel.postMessage(l);
                }
            }), Object.defineProperty(this, "exec", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c, u = "all", f)=>{
                    const h = await this.createQuery({
                        type: "query",
                        transactionKey: f,
                        sql: l,
                        params: c,
                        method: u
                    }), m = {
                        rows: [],
                        columns: []
                    };
                    return h.type === "data" && (m.rows = h.data[0]?.rows ?? [], m.columns = h.data[0]?.columns ?? []), m;
                }
            }), Object.defineProperty(this, "execBatch", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>{
                    const c = await this.createQuery({
                        type: "batch",
                        statements: l
                    }), u = new Array(l.length).fill({
                        rows: [],
                        columns: []
                    });
                    return c.type === "data" && c.data.forEach((f, h)=>{
                        u[h] = f;
                    }), u;
                }
            }), Object.defineProperty(this, "sql", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, ...c)=>{
                    const u = u4(l, c), { rows: f, columns: h } = await this.exec(u.sql, u.params, "all");
                    return JR(f, h);
                }
            }), Object.defineProperty(this, "batch", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>{
                    const c = l(rM);
                    return (await this.execBatch(c)).map(({ rows: f, columns: h })=>JR(f, h));
                }
            }), Object.defineProperty(this, "beginTransaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const l = QR();
                    await this.createQuery({
                        type: "transaction",
                        transactionKey: l,
                        action: "begin"
                    });
                    const c = async (m)=>{
                        const v = jie(m), { rows: _, columns: w } = await this.exec(v.sql, v.params, "all", l);
                        return JR(_, w);
                    };
                    return {
                        query: c,
                        sql: async (m, ...v)=>{
                            const _ = u4(m, v);
                            return await c(_);
                        },
                        commit: async ()=>{
                            await this.createQuery({
                                type: "transaction",
                                transactionKey: l,
                                action: "commit"
                            });
                        },
                        rollback: async ()=>{
                            await this.createQuery({
                                type: "transaction",
                                transactionKey: l,
                                action: "rollback"
                            });
                        }
                    };
                }
            }), Object.defineProperty(this, "transaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>d1("exclusive", !1, this.config, async ()=>{
                        let c;
                        this.bypassMutationLock = !0;
                        try {
                            c = await this.beginTransaction();
                            const u = await l({
                                sql: c.sql,
                                query: c.query
                            });
                            return await c.commit(), u;
                        } catch (u) {
                            throw await c?.rollback(), u;
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    })
            }), Object.defineProperty(this, "createCallbackFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    await this.createQuery({
                        type: "function",
                        functionName: l,
                        functionType: "callback"
                    }), this.userCallbacks.set(l, c);
                }
            }), Object.defineProperty(this, "createScalarFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    const u = `_sqlocal_func_${l}`, f = ()=>{
                        this.proxy[u] = c;
                    };
                    this.proxy === globalThis && f(), await this.createQuery({
                        type: "function",
                        functionName: l,
                        functionType: "scalar"
                    }), this.proxy !== globalThis && f();
                }
            }), Object.defineProperty(this, "createAggregateFunction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    const u = `_sqlocal_func_${l}`, f = ()=>{
                        this.proxy[`${u}_step`] = c.step, this.proxy[`${u}_final`] = c.final;
                    };
                    this.proxy === globalThis && f(), await this.createQuery({
                        type: "function",
                        functionName: l,
                        functionType: "aggregate"
                    }), this.proxy !== globalThis && f();
                }
            }), Object.defineProperty(this, "getDatabaseInfo", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const l = await this.createQuery({
                        type: "getinfo"
                    });
                    if (l.type === "info") return l.info;
                    throw new Error("The database failed to return valid information.");
                }
            }), Object.defineProperty(this, "getDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    const l = await this.createQuery({
                        type: "export"
                    });
                    if (l.type === "buffer") return new File([
                        l.buffer
                    ], l.bufferName, {
                        type: "application/x-sqlite3"
                    });
                    throw new Error("The database failed to export.");
                }
            }), Object.defineProperty(this, "overwriteDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l, c)=>{
                    await d1("exclusive", !1, this.config, async ()=>{
                        try {
                            this.broadcast({
                                type: "close",
                                clientKey: this.clientKey
                            });
                            const u = await bz(l);
                            await this.createQuery({
                                type: "import",
                                database: u
                            }), typeof c == "function" && (this.bypassMutationLock = !0, await c()), this.broadcast({
                                type: "reinit",
                                clientKey: this.clientKey,
                                reason: "overwrite"
                            });
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    });
                }
            }), Object.defineProperty(this, "deleteDatabaseFile", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async (l)=>{
                    await d1("exclusive", !1, this.config, async ()=>{
                        try {
                            this.broadcast({
                                type: "close",
                                clientKey: this.clientKey
                            }), await this.createQuery({
                                type: "delete"
                            }), typeof l == "function" && (this.bypassMutationLock = !0, await l()), this.broadcast({
                                type: "reinit",
                                clientKey: this.clientKey,
                                reason: "delete"
                            });
                        } finally{
                            this.bypassMutationLock = !1;
                        }
                    });
                }
            }), Object.defineProperty(this, "destroy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: async ()=>{
                    await this.createQuery({
                        type: "destroy"
                    }), typeof globalThis.Worker < "u" && this.processor instanceof Worker && (this.processor.removeEventListener("message", this.processMessageEvent), this.processor.terminate()), this.queriesInProgress.clear(), this.userCallbacks.clear(), this.reinitChannel.close(), this.isDestroyed = !0;
                }
            });
            const n = typeof e == "string" ? {
                databasePath: e
            } : e, { onInit: r, onConnect: i, processor: s, ...o } = n, { databasePath: a } = o;
            if (this.config = n, this.clientKey = QR(), this.reinitChannel = new BroadcastChannel(`_sqlocal_reinit_(${a})`), typeof s < "u") this.processor = s;
            else if (a === "local" || a === ":localStorage:") {
                const l = new d4("local");
                this.processor = new u1(l);
            } else if (a === "session" || a === ":sessionStorage:") {
                const l = new d4("session");
                this.processor = new u1(l);
            } else if (typeof globalThis.Worker < "u" && a !== ":memory:") this.processor = new Worker(new URL("/assets/worker-ChjnweQB.js", import.meta.url), {
                type: "module"
            });
            else {
                const l = new nM;
                this.processor = new u1(l);
            }
            this.processor instanceof u1 ? (this.processor.onmessage = (l)=>this.processMessageEvent(l), this.proxy = globalThis) : (this.processor.addEventListener("message", this.processMessageEvent), this.proxy = rk(this.processor)), this.processor.postMessage({
                type: "config",
                config: {
                    ...o,
                    clientKey: this.clientKey,
                    onInitStatements: r?.(rM) ?? []
                }
            });
        }
    }
    class Uie extends Bie {
        constructor(){
            super(...arguments), Object.defineProperty(this, "dialect", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {
                    createAdapter: ()=>new Ree,
                    createDriver: ()=>new zie(this),
                    createIntrospector: (e)=>new Cee(e),
                    createQueryCompiler: ()=>new Eee
                }
            });
        }
    }
    class zie {
        constructor(e){
            Object.defineProperty(this, "client", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            });
        }
        async init() {}
        async acquireConnection() {
            return new Vie(this.client);
        }
        async releaseConnection() {}
        async beginTransaction(e) {
            e.transaction = await this.client.beginTransaction();
        }
        async commitTransaction(e) {
            await e.transaction?.commit(), e.transaction = null;
        }
        async rollbackTransaction(e) {
            await e.transaction?.rollback(), e.transaction = null;
        }
        async destroy() {
            await this.client.destroy();
        }
    }
    class Vie {
        constructor(e){
            Object.defineProperty(this, "client", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: e
            }), Object.defineProperty(this, "transaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: null
            });
        }
        async executeQuery(e) {
            let n;
            return this.transaction === null ? n = await this.client.sql(e.sql, ...e.parameters) : n = await this.transaction.query(e), {
                rows: n
            };
        }
        async *streamQuery() {
            throw new Error("SQLite3 does not support streaming.");
        }
    }
    const Wie = ({ database: t, bootstrap: e })=>{
        const { dialect: n } = new Uie({
            databasePath: `${t}.sqlite3`,
            onInit (i) {
                return [
                    i`PRAGMA foreign_keys = ON;`,
                    i`PRAGMA journal_mode = WAL;`
                ];
            }
        }), r = new DP({
            dialect: n,
            log: [
                "error"
            ]
        });
        return {
            kysely: r,
            async bootstrap () {
                return e({
                    kysely: r
                });
            }
        };
    };
    function qie(t, e, n, r = {
        leading: !1
    }) {
        const [i, s] = J.useState(t), [o, a] = J.useState(t), l = J.useRef(null), c = J.useRef(!0), u = ()=>window.clearTimeout(l.current || void 0);
        J.useEffect(()=>u, []), J.useEffect(()=>{
            e(i);
        }, [
            i
        ]), J.useEffect(()=>{
            a(t), s(t);
        }, [
            t
        ]);
        const f = J.useCallback((h)=>{
            a(h), u(), c.current && r.leading ? s(h) : l.current = window.setTimeout(()=>{
                c.current = !0, s(h);
            }, n), c.current = !1;
        }, [
            r.leading
        ]);
        return [
            o,
            f
        ];
    }
    const Hie = ({ eventBus: t, event: e, callback: n, deps: r = [] })=>{
        J.useEffect(()=>(console.info(`[useEvent]	Subscribing event [${e}]`), t.on(e, n), ()=>{
                console.info(`[useEvent]	Unsubscribing from event [${e}]`), t.off(e, n);
            }), r);
    }, Ts = Nn({
        slot: {
            base: [
                "border",
                "border-gray-300",
                "rounded-md",
                "p-4",
                "flex",
                "flex-col",
                "gap-2",
                "items-center"
            ],
            fieldset: [
                "flex",
                "flex-col",
                "gap-4",
                "w-full",
                "p-4"
            ],
            legend: [
                "font-bold",
                "text-lg",
                "p-1",
                "border-b",
                "border-slate-400",
                "w-full"
            ],
            input: [
                "w-full",
                "border",
                "border-gray-300",
                "rounded-md",
                "p-2",
                "focus:outline-hidden",
                "focus:ring-2",
                "focus:ring-blue-500",
                "focus:border-transparent"
            ]
        },
        variant: {
            isLoading: {
                true: []
            },
            isSubmitting: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isSubmitting: !0
                },
                then: {
                    base: [
                        "opacity-50",
                        "pointer-events-none",
                        "select-none"
                    ]
                }
            }
        ],
        defaults: {
            isLoading: !1,
            isSubmitting: !1
        }
    }), $ie = "icon-[material-symbols--error-outline]", Gie = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-1",
                "items-center",
                "text-red-600",
                "p-2"
            ]
        },
        variant: {
            highlight: {
                true: []
            },
            compact: {
                true: []
            }
        },
        match: [
            {
                if: {
                    highlight: !0
                },
                then: {
                    base: [
                        "bg-red-100",
                        "p-2",
                        "font-bold",
                        "border",
                        "border-red-200",
                        "rounded-md",
                        "w-full"
                    ]
                }
            },
            {
                if: {
                    compact: !0
                },
                then: {
                    base: [
                        "p-0"
                    ]
                }
            }
        ],
        defaults: {
            highlight: !1,
            compact: !1
        }
    }), ps = ({ error: t, variant: e, tva: n = Gie, css: r })=>{
        const i = n({
            ...e,
            css: r
        }).slots;
        return t?.message ? x.jsxs("div", {
            className: i.base(),
            children: [
                x.jsx(_n, {
                    icon: $ie
                }),
                x.jsx("span", {
                    children: _a.rich(t.message)
                })
            ]
        }) : null;
    }, Xie = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-1",
                "w-full"
            ],
            input: []
        },
        variant: {
            required: {
                true: []
            },
            disabled: {
                true: []
            },
            isSubmitting: {
                true: []
            },
            isLoading: {
                true: []
            },
            isError: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isError: !0
                },
                then: {
                    base: [
                        "text-red-600"
                    ]
                }
            },
            {
                if: {
                    required: !0
                },
                then: {
                    base: [
                        "text-emerald-600",
                        "font-bold"
                    ]
                }
            },
            {
                if: {
                    disabled: !0
                },
                then: {
                    base: [
                        "opacity-75",
                        "cursor-not-allowed"
                    ],
                    input: [
                        "pointer-events-none"
                    ]
                }
            }
        ],
        defaults: {
            required: !1,
            disabled: !1,
            isSubmitting: !1,
            isLoading: !1,
            isError: !1
        }
    }), wn = ({ label: t, hint: e, required: n = !1, formState: r, name: i, disabled: s, children: o, variant: a, tva: l = Xie, css: c })=>{
        const u = l({
            isSubmitting: r.isSubmitting,
            isLoading: r.isLoading,
            isError: !!r.errors[i],
            required: n,
            disabled: s,
            ...a,
            css: c
        }).slots;
        return x.jsxs("div", {
            className: u.base(),
            children: [
                x.jsxs("div", {
                    className: "flex flex-row justify-between",
                    children: [
                        t ? x.jsx("label", {
                            htmlFor: i,
                            children: t
                        }) : null,
                        x.jsx(ps, {
                            variant: {
                                compact: !0
                            },
                            error: r.errors[i]
                        })
                    ]
                }),
                e ? x.jsx("div", {
                    className: "text-sm italic",
                    children: e
                }) : null,
                x.jsx("div", {
                    className: u.input(),
                    children: o
                })
            ]
        });
    }, xo = ({ form: t, mutation: e, map: n = ({ cleanup: r })=>r() })=>{
        const r = t.handleSubmit(async (i)=>e.mutateAsync(await n({
                values: i,
                cleanup () {
                    return Wte(M9(i));
                }
            }), {
                onError: (s)=>{
                    jP({
                        error: s,
                        errors: [
                            gP({
                                error: s,
                                schema: FP,
                                onError: ({ data: o })=>{
                                    t.setError("root", {
                                        message: o.message
                                    });
                                }
                            })
                        ],
                        onError: (o)=>{
                            t.setError("root", {
                                message: o.message
                            });
                        }
                    });
                }
            }).catch(()=>{}));
        return (i)=>{
            i.stopPropagation(), r(i);
        };
    }, Kie = Nn({
        slot: {
            base: [
                "relative",
                "w-full"
            ],
            search: [
                "absolute",
                "inset-y-0",
                "left-2",
                "flex",
                "items-center",
                "pointer-events-none",
                "text-slate-500"
            ],
            input: [
                "pl-8",
                "py-1",
                "w-full",
                "bg-slate-50",
                "text-slate-900",
                "text-sm",
                "border",
                "border-slate-300",
                "rounded-sm",
                "focus:border-sky-400",
                "focus:outline-hidden",
                "block"
            ],
            clear: [
                "absolute",
                "inset-y-0",
                "right-2",
                "flex",
                "items-center",
                "cursor-pointer",
                "text-slate-300",
                "hover:text-slate-500"
            ]
        },
        variant: {},
        defaults: {}
    }), wz = ({ value: t = "", onFulltext: e, textPlaceholder: n, variant: r, tva: i = Kie, css: s })=>{
        const o = i({
            ...r,
            css: s
        }).slots, [a, l] = qie(t, e, 500);
        return x.jsxs("div", {
            className: o.base(),
            children: [
                x.jsx("div", {
                    className: o.search(),
                    children: x.jsx(_n, {
                        icon: "icon-[material-symbols-light--search]",
                        variant: {
                            size: "xl"
                        }
                    })
                }),
                x.jsx("input", {
                    value: a || "",
                    className: o.input(),
                    type: "text",
                    placeholder: n || _a.text("Fulltext (placeholder)"),
                    onChange: (c)=>{
                        l(c.target.value);
                    }
                }),
                t && x.jsx("div", {
                    className: o.clear(),
                    onClick: ()=>{
                        e("");
                    },
                    children: x.jsx(_n, {
                        icon: "icon-[gridicons--cross]",
                        variant: {
                            size: "md"
                        }
                    })
                })
            ]
        });
    }, _z = "icon-[fluent--arrow-down-12-regular]", Sz = "icon-[fluent--arrow-up-12-regular]", Ja = "icon-[pajamas--go-back]", iM = "icon-[line-md--confirm-circle]", Ez = "icon-[mage--edit]", Yie = "icon-[arcticons--nothing-x]", Zie = "icon-[tabler--filter-plus]", f4 = "icon-[tabler--filter-minus]", qT = "icon-[ph--list-dashes-thin]", ik = "icon-[svg-spinners--3-dots-scale]", sk = "icon-[material-symbols-light--logout-sharp]", Jie = "icon-[fluent--shape-intersect-20-regular]", HT = "icon-[fluent--checkbox-unchecked-20-regular]", $T = "icon-[fluent--checkbox-checked-20-regular]", kb = "icon-[teenyicons--tag-outline]", Bi = "icon-[ph--trash]", Qie = "icon-[clarity--upload-cloud-line]", ok = "icon-[ph--user]", ese = async ({ queryClient: t, keys: e })=>{
        for await (const n of e)await t.invalidateQueries({
            queryKey: n,
            refetchType: "all"
        });
    }, Vr = (t)=>{
        const e = pT(), n = Il();
        return async ()=>{
            await ese({
                keys: t,
                queryClient: e
            }), await n.invalidate();
        };
    }, tse = Nn({
        slot: {
            base: []
        },
        variant: {},
        defaults: {}
    }), re = J.memo(({ label: t, fallback: e, variant: n, tva: r = tse, css: i })=>{
        const s = r({
            ...n,
            css: i
        }).slots;
        return x.jsx("div", {
            className: s.base(),
            children: _a.rich(t, e)
        });
    }), nse = Nn({
        slot: {
            base: [
                "h-full",
                "w-full",
                "bg-slate-200",
                "rounded-sm",
                "transition-all"
            ],
            progress: [
                "h-full",
                "bg-blue-400",
                "rounded-sm",
                "leading-none",
                "transition-all"
            ]
        },
        variant: {
            size: {
                xs: "h-0.5",
                sm: "h-1",
                md: "h-2",
                lg: "h-4"
            }
        },
        defaults: {
            size: "md"
        }
    }), GT = J.memo(({ value: t, variant: e, tva: n = nse, css: r })=>{
        const i = n({
            ...e,
            css: r
        }).slots;
        return x.jsx("div", {
            className: i.base(),
            children: x.jsx("div", {
                style: {
                    width: `${Math.max(0, Math.min(100, t))}%`
                },
                className: i.progress()
            })
        });
    }), js = [];
    for(let t = 0; t < 256; ++t)js.push((t + 256).toString(16).slice(1));
    function rse(t, e = 0) {
        return (js[t[e + 0]] + js[t[e + 1]] + js[t[e + 2]] + js[t[e + 3]] + "-" + js[t[e + 4]] + js[t[e + 5]] + "-" + js[t[e + 6]] + js[t[e + 7]] + "-" + js[t[e + 8]] + js[t[e + 9]] + "-" + js[t[e + 10]] + js[t[e + 11]] + js[t[e + 12]] + js[t[e + 13]] + js[t[e + 14]] + js[t[e + 15]]).toLowerCase();
    }
    let eI;
    const ise = new Uint8Array(16);
    function sse() {
        if (!eI) {
            if (typeof crypto > "u" || !crypto.getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
            eI = crypto.getRandomValues.bind(crypto);
        }
        return eI(ise);
    }
    const ose = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), h4 = {
        randomUUID: ose
    };
    function p4(t, e, n) {
        if (h4.randomUUID && !t) return h4.randomUUID();
        t = t || {};
        const r = t.random ?? t.rng?.() ?? sse();
        if (r.length < 16) throw new Error("Random bytes length must be >= 16");
        return r[6] = r[6] & 15 | 64, r[8] = r[8] & 63 | 128, rse(r);
    }
    var tI = {
        exports: {}
    }, nI, m4;
    function ase() {
        if (m4) return nI;
        m4 = 1;
        var t = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        return nI = t, nI;
    }
    var rI, g4;
    function lse() {
        if (g4) return rI;
        g4 = 1;
        var t = ase();
        function e() {}
        function n() {}
        return n.resetWarningCache = e, rI = function() {
            function r(o, a, l, c, u, f) {
                if (f !== t) {
                    var h = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                    throw h.name = "Invariant Violation", h;
                }
            }
            r.isRequired = r;
            function i() {
                return r;
            }
            var s = {
                array: r,
                bigint: r,
                bool: r,
                func: r,
                number: r,
                object: r,
                string: r,
                symbol: r,
                any: r,
                arrayOf: i,
                element: r,
                elementType: r,
                instanceOf: i,
                node: r,
                objectOf: i,
                oneOf: i,
                oneOfType: i,
                shape: i,
                exact: i,
                checkPropTypes: n,
                resetWarningCache: e
            };
            return s.PropTypes = s, s;
        }, rI;
    }
    var y4;
    function cse() {
        return y4 || (y4 = 1, tI.exports = lse()()), tI.exports;
    }
    var use = cse();
    const Nr = Go(use);
    function jm(t, e, n, r) {
        function i(s) {
            return s instanceof n ? s : new n(function(o) {
                o(s);
            });
        }
        return new (n || (n = Promise))(function(s, o) {
            function a(u) {
                try {
                    c(r.next(u));
                } catch (f) {
                    o(f);
                }
            }
            function l(u) {
                try {
                    c(r.throw(u));
                } catch (f) {
                    o(f);
                }
            }
            function c(u) {
                u.done ? s(u.value) : i(u.value).then(a, l);
            }
            c((r = r.apply(t, e || [])).next());
        });
    }
    const dse = new Map([
        [
            "1km",
            "application/vnd.1000minds.decision-model+xml"
        ],
        [
            "3dml",
            "text/vnd.in3d.3dml"
        ],
        [
            "3ds",
            "image/x-3ds"
        ],
        [
            "3g2",
            "video/3gpp2"
        ],
        [
            "3gp",
            "video/3gp"
        ],
        [
            "3gpp",
            "video/3gpp"
        ],
        [
            "3mf",
            "model/3mf"
        ],
        [
            "7z",
            "application/x-7z-compressed"
        ],
        [
            "7zip",
            "application/x-7z-compressed"
        ],
        [
            "123",
            "application/vnd.lotus-1-2-3"
        ],
        [
            "aab",
            "application/x-authorware-bin"
        ],
        [
            "aac",
            "audio/x-acc"
        ],
        [
            "aam",
            "application/x-authorware-map"
        ],
        [
            "aas",
            "application/x-authorware-seg"
        ],
        [
            "abw",
            "application/x-abiword"
        ],
        [
            "ac",
            "application/vnd.nokia.n-gage.ac+xml"
        ],
        [
            "ac3",
            "audio/ac3"
        ],
        [
            "acc",
            "application/vnd.americandynamics.acc"
        ],
        [
            "ace",
            "application/x-ace-compressed"
        ],
        [
            "acu",
            "application/vnd.acucobol"
        ],
        [
            "acutc",
            "application/vnd.acucorp"
        ],
        [
            "adp",
            "audio/adpcm"
        ],
        [
            "aep",
            "application/vnd.audiograph"
        ],
        [
            "afm",
            "application/x-font-type1"
        ],
        [
            "afp",
            "application/vnd.ibm.modcap"
        ],
        [
            "ahead",
            "application/vnd.ahead.space"
        ],
        [
            "ai",
            "application/pdf"
        ],
        [
            "aif",
            "audio/x-aiff"
        ],
        [
            "aifc",
            "audio/x-aiff"
        ],
        [
            "aiff",
            "audio/x-aiff"
        ],
        [
            "air",
            "application/vnd.adobe.air-application-installer-package+zip"
        ],
        [
            "ait",
            "application/vnd.dvb.ait"
        ],
        [
            "ami",
            "application/vnd.amiga.ami"
        ],
        [
            "amr",
            "audio/amr"
        ],
        [
            "apk",
            "application/vnd.android.package-archive"
        ],
        [
            "apng",
            "image/apng"
        ],
        [
            "appcache",
            "text/cache-manifest"
        ],
        [
            "application",
            "application/x-ms-application"
        ],
        [
            "apr",
            "application/vnd.lotus-approach"
        ],
        [
            "arc",
            "application/x-freearc"
        ],
        [
            "arj",
            "application/x-arj"
        ],
        [
            "asc",
            "application/pgp-signature"
        ],
        [
            "asf",
            "video/x-ms-asf"
        ],
        [
            "asm",
            "text/x-asm"
        ],
        [
            "aso",
            "application/vnd.accpac.simply.aso"
        ],
        [
            "asx",
            "video/x-ms-asf"
        ],
        [
            "atc",
            "application/vnd.acucorp"
        ],
        [
            "atom",
            "application/atom+xml"
        ],
        [
            "atomcat",
            "application/atomcat+xml"
        ],
        [
            "atomdeleted",
            "application/atomdeleted+xml"
        ],
        [
            "atomsvc",
            "application/atomsvc+xml"
        ],
        [
            "atx",
            "application/vnd.antix.game-component"
        ],
        [
            "au",
            "audio/x-au"
        ],
        [
            "avi",
            "video/x-msvideo"
        ],
        [
            "avif",
            "image/avif"
        ],
        [
            "aw",
            "application/applixware"
        ],
        [
            "azf",
            "application/vnd.airzip.filesecure.azf"
        ],
        [
            "azs",
            "application/vnd.airzip.filesecure.azs"
        ],
        [
            "azv",
            "image/vnd.airzip.accelerator.azv"
        ],
        [
            "azw",
            "application/vnd.amazon.ebook"
        ],
        [
            "b16",
            "image/vnd.pco.b16"
        ],
        [
            "bat",
            "application/x-msdownload"
        ],
        [
            "bcpio",
            "application/x-bcpio"
        ],
        [
            "bdf",
            "application/x-font-bdf"
        ],
        [
            "bdm",
            "application/vnd.syncml.dm+wbxml"
        ],
        [
            "bdoc",
            "application/x-bdoc"
        ],
        [
            "bed",
            "application/vnd.realvnc.bed"
        ],
        [
            "bh2",
            "application/vnd.fujitsu.oasysprs"
        ],
        [
            "bin",
            "application/octet-stream"
        ],
        [
            "blb",
            "application/x-blorb"
        ],
        [
            "blorb",
            "application/x-blorb"
        ],
        [
            "bmi",
            "application/vnd.bmi"
        ],
        [
            "bmml",
            "application/vnd.balsamiq.bmml+xml"
        ],
        [
            "bmp",
            "image/bmp"
        ],
        [
            "book",
            "application/vnd.framemaker"
        ],
        [
            "box",
            "application/vnd.previewsystems.box"
        ],
        [
            "boz",
            "application/x-bzip2"
        ],
        [
            "bpk",
            "application/octet-stream"
        ],
        [
            "bpmn",
            "application/octet-stream"
        ],
        [
            "bsp",
            "model/vnd.valve.source.compiled-map"
        ],
        [
            "btif",
            "image/prs.btif"
        ],
        [
            "buffer",
            "application/octet-stream"
        ],
        [
            "bz",
            "application/x-bzip"
        ],
        [
            "bz2",
            "application/x-bzip2"
        ],
        [
            "c",
            "text/x-c"
        ],
        [
            "c4d",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4f",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4g",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4p",
            "application/vnd.clonk.c4group"
        ],
        [
            "c4u",
            "application/vnd.clonk.c4group"
        ],
        [
            "c11amc",
            "application/vnd.cluetrust.cartomobile-config"
        ],
        [
            "c11amz",
            "application/vnd.cluetrust.cartomobile-config-pkg"
        ],
        [
            "cab",
            "application/vnd.ms-cab-compressed"
        ],
        [
            "caf",
            "audio/x-caf"
        ],
        [
            "cap",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "car",
            "application/vnd.curl.car"
        ],
        [
            "cat",
            "application/vnd.ms-pki.seccat"
        ],
        [
            "cb7",
            "application/x-cbr"
        ],
        [
            "cba",
            "application/x-cbr"
        ],
        [
            "cbr",
            "application/x-cbr"
        ],
        [
            "cbt",
            "application/x-cbr"
        ],
        [
            "cbz",
            "application/x-cbr"
        ],
        [
            "cc",
            "text/x-c"
        ],
        [
            "cco",
            "application/x-cocoa"
        ],
        [
            "cct",
            "application/x-director"
        ],
        [
            "ccxml",
            "application/ccxml+xml"
        ],
        [
            "cdbcmsg",
            "application/vnd.contact.cmsg"
        ],
        [
            "cda",
            "application/x-cdf"
        ],
        [
            "cdf",
            "application/x-netcdf"
        ],
        [
            "cdfx",
            "application/cdfx+xml"
        ],
        [
            "cdkey",
            "application/vnd.mediastation.cdkey"
        ],
        [
            "cdmia",
            "application/cdmi-capability"
        ],
        [
            "cdmic",
            "application/cdmi-container"
        ],
        [
            "cdmid",
            "application/cdmi-domain"
        ],
        [
            "cdmio",
            "application/cdmi-object"
        ],
        [
            "cdmiq",
            "application/cdmi-queue"
        ],
        [
            "cdr",
            "application/cdr"
        ],
        [
            "cdx",
            "chemical/x-cdx"
        ],
        [
            "cdxml",
            "application/vnd.chemdraw+xml"
        ],
        [
            "cdy",
            "application/vnd.cinderella"
        ],
        [
            "cer",
            "application/pkix-cert"
        ],
        [
            "cfs",
            "application/x-cfs-compressed"
        ],
        [
            "cgm",
            "image/cgm"
        ],
        [
            "chat",
            "application/x-chat"
        ],
        [
            "chm",
            "application/vnd.ms-htmlhelp"
        ],
        [
            "chrt",
            "application/vnd.kde.kchart"
        ],
        [
            "cif",
            "chemical/x-cif"
        ],
        [
            "cii",
            "application/vnd.anser-web-certificate-issue-initiation"
        ],
        [
            "cil",
            "application/vnd.ms-artgalry"
        ],
        [
            "cjs",
            "application/node"
        ],
        [
            "cla",
            "application/vnd.claymore"
        ],
        [
            "class",
            "application/octet-stream"
        ],
        [
            "clkk",
            "application/vnd.crick.clicker.keyboard"
        ],
        [
            "clkp",
            "application/vnd.crick.clicker.palette"
        ],
        [
            "clkt",
            "application/vnd.crick.clicker.template"
        ],
        [
            "clkw",
            "application/vnd.crick.clicker.wordbank"
        ],
        [
            "clkx",
            "application/vnd.crick.clicker"
        ],
        [
            "clp",
            "application/x-msclip"
        ],
        [
            "cmc",
            "application/vnd.cosmocaller"
        ],
        [
            "cmdf",
            "chemical/x-cmdf"
        ],
        [
            "cml",
            "chemical/x-cml"
        ],
        [
            "cmp",
            "application/vnd.yellowriver-custom-menu"
        ],
        [
            "cmx",
            "image/x-cmx"
        ],
        [
            "cod",
            "application/vnd.rim.cod"
        ],
        [
            "coffee",
            "text/coffeescript"
        ],
        [
            "com",
            "application/x-msdownload"
        ],
        [
            "conf",
            "text/plain"
        ],
        [
            "cpio",
            "application/x-cpio"
        ],
        [
            "cpp",
            "text/x-c"
        ],
        [
            "cpt",
            "application/mac-compactpro"
        ],
        [
            "crd",
            "application/x-mscardfile"
        ],
        [
            "crl",
            "application/pkix-crl"
        ],
        [
            "crt",
            "application/x-x509-ca-cert"
        ],
        [
            "crx",
            "application/x-chrome-extension"
        ],
        [
            "cryptonote",
            "application/vnd.rig.cryptonote"
        ],
        [
            "csh",
            "application/x-csh"
        ],
        [
            "csl",
            "application/vnd.citationstyles.style+xml"
        ],
        [
            "csml",
            "chemical/x-csml"
        ],
        [
            "csp",
            "application/vnd.commonspace"
        ],
        [
            "csr",
            "application/octet-stream"
        ],
        [
            "css",
            "text/css"
        ],
        [
            "cst",
            "application/x-director"
        ],
        [
            "csv",
            "text/csv"
        ],
        [
            "cu",
            "application/cu-seeme"
        ],
        [
            "curl",
            "text/vnd.curl"
        ],
        [
            "cww",
            "application/prs.cww"
        ],
        [
            "cxt",
            "application/x-director"
        ],
        [
            "cxx",
            "text/x-c"
        ],
        [
            "dae",
            "model/vnd.collada+xml"
        ],
        [
            "daf",
            "application/vnd.mobius.daf"
        ],
        [
            "dart",
            "application/vnd.dart"
        ],
        [
            "dataless",
            "application/vnd.fdsn.seed"
        ],
        [
            "davmount",
            "application/davmount+xml"
        ],
        [
            "dbf",
            "application/vnd.dbf"
        ],
        [
            "dbk",
            "application/docbook+xml"
        ],
        [
            "dcr",
            "application/x-director"
        ],
        [
            "dcurl",
            "text/vnd.curl.dcurl"
        ],
        [
            "dd2",
            "application/vnd.oma.dd2+xml"
        ],
        [
            "ddd",
            "application/vnd.fujixerox.ddd"
        ],
        [
            "ddf",
            "application/vnd.syncml.dmddf+xml"
        ],
        [
            "dds",
            "image/vnd.ms-dds"
        ],
        [
            "deb",
            "application/x-debian-package"
        ],
        [
            "def",
            "text/plain"
        ],
        [
            "deploy",
            "application/octet-stream"
        ],
        [
            "der",
            "application/x-x509-ca-cert"
        ],
        [
            "dfac",
            "application/vnd.dreamfactory"
        ],
        [
            "dgc",
            "application/x-dgc-compressed"
        ],
        [
            "dic",
            "text/x-c"
        ],
        [
            "dir",
            "application/x-director"
        ],
        [
            "dis",
            "application/vnd.mobius.dis"
        ],
        [
            "disposition-notification",
            "message/disposition-notification"
        ],
        [
            "dist",
            "application/octet-stream"
        ],
        [
            "distz",
            "application/octet-stream"
        ],
        [
            "djv",
            "image/vnd.djvu"
        ],
        [
            "djvu",
            "image/vnd.djvu"
        ],
        [
            "dll",
            "application/octet-stream"
        ],
        [
            "dmg",
            "application/x-apple-diskimage"
        ],
        [
            "dmn",
            "application/octet-stream"
        ],
        [
            "dmp",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "dms",
            "application/octet-stream"
        ],
        [
            "dna",
            "application/vnd.dna"
        ],
        [
            "doc",
            "application/msword"
        ],
        [
            "docm",
            "application/vnd.ms-word.template.macroEnabled.12"
        ],
        [
            "docx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        ],
        [
            "dot",
            "application/msword"
        ],
        [
            "dotm",
            "application/vnd.ms-word.template.macroEnabled.12"
        ],
        [
            "dotx",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.template"
        ],
        [
            "dp",
            "application/vnd.osgi.dp"
        ],
        [
            "dpg",
            "application/vnd.dpgraph"
        ],
        [
            "dra",
            "audio/vnd.dra"
        ],
        [
            "drle",
            "image/dicom-rle"
        ],
        [
            "dsc",
            "text/prs.lines.tag"
        ],
        [
            "dssc",
            "application/dssc+der"
        ],
        [
            "dtb",
            "application/x-dtbook+xml"
        ],
        [
            "dtd",
            "application/xml-dtd"
        ],
        [
            "dts",
            "audio/vnd.dts"
        ],
        [
            "dtshd",
            "audio/vnd.dts.hd"
        ],
        [
            "dump",
            "application/octet-stream"
        ],
        [
            "dvb",
            "video/vnd.dvb.file"
        ],
        [
            "dvi",
            "application/x-dvi"
        ],
        [
            "dwd",
            "application/atsc-dwd+xml"
        ],
        [
            "dwf",
            "model/vnd.dwf"
        ],
        [
            "dwg",
            "image/vnd.dwg"
        ],
        [
            "dxf",
            "image/vnd.dxf"
        ],
        [
            "dxp",
            "application/vnd.spotfire.dxp"
        ],
        [
            "dxr",
            "application/x-director"
        ],
        [
            "ear",
            "application/java-archive"
        ],
        [
            "ecelp4800",
            "audio/vnd.nuera.ecelp4800"
        ],
        [
            "ecelp7470",
            "audio/vnd.nuera.ecelp7470"
        ],
        [
            "ecelp9600",
            "audio/vnd.nuera.ecelp9600"
        ],
        [
            "ecma",
            "application/ecmascript"
        ],
        [
            "edm",
            "application/vnd.novadigm.edm"
        ],
        [
            "edx",
            "application/vnd.novadigm.edx"
        ],
        [
            "efif",
            "application/vnd.picsel"
        ],
        [
            "ei6",
            "application/vnd.pg.osasli"
        ],
        [
            "elc",
            "application/octet-stream"
        ],
        [
            "emf",
            "image/emf"
        ],
        [
            "eml",
            "message/rfc822"
        ],
        [
            "emma",
            "application/emma+xml"
        ],
        [
            "emotionml",
            "application/emotionml+xml"
        ],
        [
            "emz",
            "application/x-msmetafile"
        ],
        [
            "eol",
            "audio/vnd.digital-winds"
        ],
        [
            "eot",
            "application/vnd.ms-fontobject"
        ],
        [
            "eps",
            "application/postscript"
        ],
        [
            "epub",
            "application/epub+zip"
        ],
        [
            "es",
            "application/ecmascript"
        ],
        [
            "es3",
            "application/vnd.eszigno3+xml"
        ],
        [
            "esa",
            "application/vnd.osgi.subsystem"
        ],
        [
            "esf",
            "application/vnd.epson.esf"
        ],
        [
            "et3",
            "application/vnd.eszigno3+xml"
        ],
        [
            "etx",
            "text/x-setext"
        ],
        [
            "eva",
            "application/x-eva"
        ],
        [
            "evy",
            "application/x-envoy"
        ],
        [
            "exe",
            "application/octet-stream"
        ],
        [
            "exi",
            "application/exi"
        ],
        [
            "exp",
            "application/express"
        ],
        [
            "exr",
            "image/aces"
        ],
        [
            "ext",
            "application/vnd.novadigm.ext"
        ],
        [
            "ez",
            "application/andrew-inset"
        ],
        [
            "ez2",
            "application/vnd.ezpix-album"
        ],
        [
            "ez3",
            "application/vnd.ezpix-package"
        ],
        [
            "f",
            "text/x-fortran"
        ],
        [
            "f4v",
            "video/mp4"
        ],
        [
            "f77",
            "text/x-fortran"
        ],
        [
            "f90",
            "text/x-fortran"
        ],
        [
            "fbs",
            "image/vnd.fastbidsheet"
        ],
        [
            "fcdt",
            "application/vnd.adobe.formscentral.fcdt"
        ],
        [
            "fcs",
            "application/vnd.isac.fcs"
        ],
        [
            "fdf",
            "application/vnd.fdf"
        ],
        [
            "fdt",
            "application/fdt+xml"
        ],
        [
            "fe_launch",
            "application/vnd.denovo.fcselayout-link"
        ],
        [
            "fg5",
            "application/vnd.fujitsu.oasysgp"
        ],
        [
            "fgd",
            "application/x-director"
        ],
        [
            "fh",
            "image/x-freehand"
        ],
        [
            "fh4",
            "image/x-freehand"
        ],
        [
            "fh5",
            "image/x-freehand"
        ],
        [
            "fh7",
            "image/x-freehand"
        ],
        [
            "fhc",
            "image/x-freehand"
        ],
        [
            "fig",
            "application/x-xfig"
        ],
        [
            "fits",
            "image/fits"
        ],
        [
            "flac",
            "audio/x-flac"
        ],
        [
            "fli",
            "video/x-fli"
        ],
        [
            "flo",
            "application/vnd.micrografx.flo"
        ],
        [
            "flv",
            "video/x-flv"
        ],
        [
            "flw",
            "application/vnd.kde.kivio"
        ],
        [
            "flx",
            "text/vnd.fmi.flexstor"
        ],
        [
            "fly",
            "text/vnd.fly"
        ],
        [
            "fm",
            "application/vnd.framemaker"
        ],
        [
            "fnc",
            "application/vnd.frogans.fnc"
        ],
        [
            "fo",
            "application/vnd.software602.filler.form+xml"
        ],
        [
            "for",
            "text/x-fortran"
        ],
        [
            "fpx",
            "image/vnd.fpx"
        ],
        [
            "frame",
            "application/vnd.framemaker"
        ],
        [
            "fsc",
            "application/vnd.fsc.weblaunch"
        ],
        [
            "fst",
            "image/vnd.fst"
        ],
        [
            "ftc",
            "application/vnd.fluxtime.clip"
        ],
        [
            "fti",
            "application/vnd.anser-web-funds-transfer-initiation"
        ],
        [
            "fvt",
            "video/vnd.fvt"
        ],
        [
            "fxp",
            "application/vnd.adobe.fxp"
        ],
        [
            "fxpl",
            "application/vnd.adobe.fxp"
        ],
        [
            "fzs",
            "application/vnd.fuzzysheet"
        ],
        [
            "g2w",
            "application/vnd.geoplan"
        ],
        [
            "g3",
            "image/g3fax"
        ],
        [
            "g3w",
            "application/vnd.geospace"
        ],
        [
            "gac",
            "application/vnd.groove-account"
        ],
        [
            "gam",
            "application/x-tads"
        ],
        [
            "gbr",
            "application/rpki-ghostbusters"
        ],
        [
            "gca",
            "application/x-gca-compressed"
        ],
        [
            "gdl",
            "model/vnd.gdl"
        ],
        [
            "gdoc",
            "application/vnd.google-apps.document"
        ],
        [
            "geo",
            "application/vnd.dynageo"
        ],
        [
            "geojson",
            "application/geo+json"
        ],
        [
            "gex",
            "application/vnd.geometry-explorer"
        ],
        [
            "ggb",
            "application/vnd.geogebra.file"
        ],
        [
            "ggt",
            "application/vnd.geogebra.tool"
        ],
        [
            "ghf",
            "application/vnd.groove-help"
        ],
        [
            "gif",
            "image/gif"
        ],
        [
            "gim",
            "application/vnd.groove-identity-message"
        ],
        [
            "glb",
            "model/gltf-binary"
        ],
        [
            "gltf",
            "model/gltf+json"
        ],
        [
            "gml",
            "application/gml+xml"
        ],
        [
            "gmx",
            "application/vnd.gmx"
        ],
        [
            "gnumeric",
            "application/x-gnumeric"
        ],
        [
            "gpg",
            "application/gpg-keys"
        ],
        [
            "gph",
            "application/vnd.flographit"
        ],
        [
            "gpx",
            "application/gpx+xml"
        ],
        [
            "gqf",
            "application/vnd.grafeq"
        ],
        [
            "gqs",
            "application/vnd.grafeq"
        ],
        [
            "gram",
            "application/srgs"
        ],
        [
            "gramps",
            "application/x-gramps-xml"
        ],
        [
            "gre",
            "application/vnd.geometry-explorer"
        ],
        [
            "grv",
            "application/vnd.groove-injector"
        ],
        [
            "grxml",
            "application/srgs+xml"
        ],
        [
            "gsf",
            "application/x-font-ghostscript"
        ],
        [
            "gsheet",
            "application/vnd.google-apps.spreadsheet"
        ],
        [
            "gslides",
            "application/vnd.google-apps.presentation"
        ],
        [
            "gtar",
            "application/x-gtar"
        ],
        [
            "gtm",
            "application/vnd.groove-tool-message"
        ],
        [
            "gtw",
            "model/vnd.gtw"
        ],
        [
            "gv",
            "text/vnd.graphviz"
        ],
        [
            "gxf",
            "application/gxf"
        ],
        [
            "gxt",
            "application/vnd.geonext"
        ],
        [
            "gz",
            "application/gzip"
        ],
        [
            "gzip",
            "application/gzip"
        ],
        [
            "h",
            "text/x-c"
        ],
        [
            "h261",
            "video/h261"
        ],
        [
            "h263",
            "video/h263"
        ],
        [
            "h264",
            "video/h264"
        ],
        [
            "hal",
            "application/vnd.hal+xml"
        ],
        [
            "hbci",
            "application/vnd.hbci"
        ],
        [
            "hbs",
            "text/x-handlebars-template"
        ],
        [
            "hdd",
            "application/x-virtualbox-hdd"
        ],
        [
            "hdf",
            "application/x-hdf"
        ],
        [
            "heic",
            "image/heic"
        ],
        [
            "heics",
            "image/heic-sequence"
        ],
        [
            "heif",
            "image/heif"
        ],
        [
            "heifs",
            "image/heif-sequence"
        ],
        [
            "hej2",
            "image/hej2k"
        ],
        [
            "held",
            "application/atsc-held+xml"
        ],
        [
            "hh",
            "text/x-c"
        ],
        [
            "hjson",
            "application/hjson"
        ],
        [
            "hlp",
            "application/winhlp"
        ],
        [
            "hpgl",
            "application/vnd.hp-hpgl"
        ],
        [
            "hpid",
            "application/vnd.hp-hpid"
        ],
        [
            "hps",
            "application/vnd.hp-hps"
        ],
        [
            "hqx",
            "application/mac-binhex40"
        ],
        [
            "hsj2",
            "image/hsj2"
        ],
        [
            "htc",
            "text/x-component"
        ],
        [
            "htke",
            "application/vnd.kenameaapp"
        ],
        [
            "htm",
            "text/html"
        ],
        [
            "html",
            "text/html"
        ],
        [
            "hvd",
            "application/vnd.yamaha.hv-dic"
        ],
        [
            "hvp",
            "application/vnd.yamaha.hv-voice"
        ],
        [
            "hvs",
            "application/vnd.yamaha.hv-script"
        ],
        [
            "i2g",
            "application/vnd.intergeo"
        ],
        [
            "icc",
            "application/vnd.iccprofile"
        ],
        [
            "ice",
            "x-conference/x-cooltalk"
        ],
        [
            "icm",
            "application/vnd.iccprofile"
        ],
        [
            "ico",
            "image/x-icon"
        ],
        [
            "ics",
            "text/calendar"
        ],
        [
            "ief",
            "image/ief"
        ],
        [
            "ifb",
            "text/calendar"
        ],
        [
            "ifm",
            "application/vnd.shana.informed.formdata"
        ],
        [
            "iges",
            "model/iges"
        ],
        [
            "igl",
            "application/vnd.igloader"
        ],
        [
            "igm",
            "application/vnd.insors.igm"
        ],
        [
            "igs",
            "model/iges"
        ],
        [
            "igx",
            "application/vnd.micrografx.igx"
        ],
        [
            "iif",
            "application/vnd.shana.informed.interchange"
        ],
        [
            "img",
            "application/octet-stream"
        ],
        [
            "imp",
            "application/vnd.accpac.simply.imp"
        ],
        [
            "ims",
            "application/vnd.ms-ims"
        ],
        [
            "in",
            "text/plain"
        ],
        [
            "ini",
            "text/plain"
        ],
        [
            "ink",
            "application/inkml+xml"
        ],
        [
            "inkml",
            "application/inkml+xml"
        ],
        [
            "install",
            "application/x-install-instructions"
        ],
        [
            "iota",
            "application/vnd.astraea-software.iota"
        ],
        [
            "ipfix",
            "application/ipfix"
        ],
        [
            "ipk",
            "application/vnd.shana.informed.package"
        ],
        [
            "irm",
            "application/vnd.ibm.rights-management"
        ],
        [
            "irp",
            "application/vnd.irepository.package+xml"
        ],
        [
            "iso",
            "application/x-iso9660-image"
        ],
        [
            "itp",
            "application/vnd.shana.informed.formtemplate"
        ],
        [
            "its",
            "application/its+xml"
        ],
        [
            "ivp",
            "application/vnd.immervision-ivp"
        ],
        [
            "ivu",
            "application/vnd.immervision-ivu"
        ],
        [
            "jad",
            "text/vnd.sun.j2me.app-descriptor"
        ],
        [
            "jade",
            "text/jade"
        ],
        [
            "jam",
            "application/vnd.jam"
        ],
        [
            "jar",
            "application/java-archive"
        ],
        [
            "jardiff",
            "application/x-java-archive-diff"
        ],
        [
            "java",
            "text/x-java-source"
        ],
        [
            "jhc",
            "image/jphc"
        ],
        [
            "jisp",
            "application/vnd.jisp"
        ],
        [
            "jls",
            "image/jls"
        ],
        [
            "jlt",
            "application/vnd.hp-jlyt"
        ],
        [
            "jng",
            "image/x-jng"
        ],
        [
            "jnlp",
            "application/x-java-jnlp-file"
        ],
        [
            "joda",
            "application/vnd.joost.joda-archive"
        ],
        [
            "jp2",
            "image/jp2"
        ],
        [
            "jpe",
            "image/jpeg"
        ],
        [
            "jpeg",
            "image/jpeg"
        ],
        [
            "jpf",
            "image/jpx"
        ],
        [
            "jpg",
            "image/jpeg"
        ],
        [
            "jpg2",
            "image/jp2"
        ],
        [
            "jpgm",
            "video/jpm"
        ],
        [
            "jpgv",
            "video/jpeg"
        ],
        [
            "jph",
            "image/jph"
        ],
        [
            "jpm",
            "video/jpm"
        ],
        [
            "jpx",
            "image/jpx"
        ],
        [
            "js",
            "application/javascript"
        ],
        [
            "json",
            "application/json"
        ],
        [
            "json5",
            "application/json5"
        ],
        [
            "jsonld",
            "application/ld+json"
        ],
        [
            "jsonl",
            "application/jsonl"
        ],
        [
            "jsonml",
            "application/jsonml+json"
        ],
        [
            "jsx",
            "text/jsx"
        ],
        [
            "jxr",
            "image/jxr"
        ],
        [
            "jxra",
            "image/jxra"
        ],
        [
            "jxrs",
            "image/jxrs"
        ],
        [
            "jxs",
            "image/jxs"
        ],
        [
            "jxsc",
            "image/jxsc"
        ],
        [
            "jxsi",
            "image/jxsi"
        ],
        [
            "jxss",
            "image/jxss"
        ],
        [
            "kar",
            "audio/midi"
        ],
        [
            "karbon",
            "application/vnd.kde.karbon"
        ],
        [
            "kdb",
            "application/octet-stream"
        ],
        [
            "kdbx",
            "application/x-keepass2"
        ],
        [
            "key",
            "application/x-iwork-keynote-sffkey"
        ],
        [
            "kfo",
            "application/vnd.kde.kformula"
        ],
        [
            "kia",
            "application/vnd.kidspiration"
        ],
        [
            "kml",
            "application/vnd.google-earth.kml+xml"
        ],
        [
            "kmz",
            "application/vnd.google-earth.kmz"
        ],
        [
            "kne",
            "application/vnd.kinar"
        ],
        [
            "knp",
            "application/vnd.kinar"
        ],
        [
            "kon",
            "application/vnd.kde.kontour"
        ],
        [
            "kpr",
            "application/vnd.kde.kpresenter"
        ],
        [
            "kpt",
            "application/vnd.kde.kpresenter"
        ],
        [
            "kpxx",
            "application/vnd.ds-keypoint"
        ],
        [
            "ksp",
            "application/vnd.kde.kspread"
        ],
        [
            "ktr",
            "application/vnd.kahootz"
        ],
        [
            "ktx",
            "image/ktx"
        ],
        [
            "ktx2",
            "image/ktx2"
        ],
        [
            "ktz",
            "application/vnd.kahootz"
        ],
        [
            "kwd",
            "application/vnd.kde.kword"
        ],
        [
            "kwt",
            "application/vnd.kde.kword"
        ],
        [
            "lasxml",
            "application/vnd.las.las+xml"
        ],
        [
            "latex",
            "application/x-latex"
        ],
        [
            "lbd",
            "application/vnd.llamagraphics.life-balance.desktop"
        ],
        [
            "lbe",
            "application/vnd.llamagraphics.life-balance.exchange+xml"
        ],
        [
            "les",
            "application/vnd.hhe.lesson-player"
        ],
        [
            "less",
            "text/less"
        ],
        [
            "lgr",
            "application/lgr+xml"
        ],
        [
            "lha",
            "application/octet-stream"
        ],
        [
            "link66",
            "application/vnd.route66.link66+xml"
        ],
        [
            "list",
            "text/plain"
        ],
        [
            "list3820",
            "application/vnd.ibm.modcap"
        ],
        [
            "listafp",
            "application/vnd.ibm.modcap"
        ],
        [
            "litcoffee",
            "text/coffeescript"
        ],
        [
            "lnk",
            "application/x-ms-shortcut"
        ],
        [
            "log",
            "text/plain"
        ],
        [
            "lostxml",
            "application/lost+xml"
        ],
        [
            "lrf",
            "application/octet-stream"
        ],
        [
            "lrm",
            "application/vnd.ms-lrm"
        ],
        [
            "ltf",
            "application/vnd.frogans.ltf"
        ],
        [
            "lua",
            "text/x-lua"
        ],
        [
            "luac",
            "application/x-lua-bytecode"
        ],
        [
            "lvp",
            "audio/vnd.lucent.voice"
        ],
        [
            "lwp",
            "application/vnd.lotus-wordpro"
        ],
        [
            "lzh",
            "application/octet-stream"
        ],
        [
            "m1v",
            "video/mpeg"
        ],
        [
            "m2a",
            "audio/mpeg"
        ],
        [
            "m2v",
            "video/mpeg"
        ],
        [
            "m3a",
            "audio/mpeg"
        ],
        [
            "m3u",
            "text/plain"
        ],
        [
            "m3u8",
            "application/vnd.apple.mpegurl"
        ],
        [
            "m4a",
            "audio/x-m4a"
        ],
        [
            "m4p",
            "application/mp4"
        ],
        [
            "m4s",
            "video/iso.segment"
        ],
        [
            "m4u",
            "application/vnd.mpegurl"
        ],
        [
            "m4v",
            "video/x-m4v"
        ],
        [
            "m13",
            "application/x-msmediaview"
        ],
        [
            "m14",
            "application/x-msmediaview"
        ],
        [
            "m21",
            "application/mp21"
        ],
        [
            "ma",
            "application/mathematica"
        ],
        [
            "mads",
            "application/mads+xml"
        ],
        [
            "maei",
            "application/mmt-aei+xml"
        ],
        [
            "mag",
            "application/vnd.ecowin.chart"
        ],
        [
            "maker",
            "application/vnd.framemaker"
        ],
        [
            "man",
            "text/troff"
        ],
        [
            "manifest",
            "text/cache-manifest"
        ],
        [
            "map",
            "application/json"
        ],
        [
            "mar",
            "application/octet-stream"
        ],
        [
            "markdown",
            "text/markdown"
        ],
        [
            "mathml",
            "application/mathml+xml"
        ],
        [
            "mb",
            "application/mathematica"
        ],
        [
            "mbk",
            "application/vnd.mobius.mbk"
        ],
        [
            "mbox",
            "application/mbox"
        ],
        [
            "mc1",
            "application/vnd.medcalcdata"
        ],
        [
            "mcd",
            "application/vnd.mcd"
        ],
        [
            "mcurl",
            "text/vnd.curl.mcurl"
        ],
        [
            "md",
            "text/markdown"
        ],
        [
            "mdb",
            "application/x-msaccess"
        ],
        [
            "mdi",
            "image/vnd.ms-modi"
        ],
        [
            "mdx",
            "text/mdx"
        ],
        [
            "me",
            "text/troff"
        ],
        [
            "mesh",
            "model/mesh"
        ],
        [
            "meta4",
            "application/metalink4+xml"
        ],
        [
            "metalink",
            "application/metalink+xml"
        ],
        [
            "mets",
            "application/mets+xml"
        ],
        [
            "mfm",
            "application/vnd.mfmp"
        ],
        [
            "mft",
            "application/rpki-manifest"
        ],
        [
            "mgp",
            "application/vnd.osgeo.mapguide.package"
        ],
        [
            "mgz",
            "application/vnd.proteus.magazine"
        ],
        [
            "mid",
            "audio/midi"
        ],
        [
            "midi",
            "audio/midi"
        ],
        [
            "mie",
            "application/x-mie"
        ],
        [
            "mif",
            "application/vnd.mif"
        ],
        [
            "mime",
            "message/rfc822"
        ],
        [
            "mj2",
            "video/mj2"
        ],
        [
            "mjp2",
            "video/mj2"
        ],
        [
            "mjs",
            "application/javascript"
        ],
        [
            "mk3d",
            "video/x-matroska"
        ],
        [
            "mka",
            "audio/x-matroska"
        ],
        [
            "mkd",
            "text/x-markdown"
        ],
        [
            "mks",
            "video/x-matroska"
        ],
        [
            "mkv",
            "video/x-matroska"
        ],
        [
            "mlp",
            "application/vnd.dolby.mlp"
        ],
        [
            "mmd",
            "application/vnd.chipnuts.karaoke-mmd"
        ],
        [
            "mmf",
            "application/vnd.smaf"
        ],
        [
            "mml",
            "text/mathml"
        ],
        [
            "mmr",
            "image/vnd.fujixerox.edmics-mmr"
        ],
        [
            "mng",
            "video/x-mng"
        ],
        [
            "mny",
            "application/x-msmoney"
        ],
        [
            "mobi",
            "application/x-mobipocket-ebook"
        ],
        [
            "mods",
            "application/mods+xml"
        ],
        [
            "mov",
            "video/quicktime"
        ],
        [
            "movie",
            "video/x-sgi-movie"
        ],
        [
            "mp2",
            "audio/mpeg"
        ],
        [
            "mp2a",
            "audio/mpeg"
        ],
        [
            "mp3",
            "audio/mpeg"
        ],
        [
            "mp4",
            "video/mp4"
        ],
        [
            "mp4a",
            "audio/mp4"
        ],
        [
            "mp4s",
            "application/mp4"
        ],
        [
            "mp4v",
            "video/mp4"
        ],
        [
            "mp21",
            "application/mp21"
        ],
        [
            "mpc",
            "application/vnd.mophun.certificate"
        ],
        [
            "mpd",
            "application/dash+xml"
        ],
        [
            "mpe",
            "video/mpeg"
        ],
        [
            "mpeg",
            "video/mpeg"
        ],
        [
            "mpg",
            "video/mpeg"
        ],
        [
            "mpg4",
            "video/mp4"
        ],
        [
            "mpga",
            "audio/mpeg"
        ],
        [
            "mpkg",
            "application/vnd.apple.installer+xml"
        ],
        [
            "mpm",
            "application/vnd.blueice.multipass"
        ],
        [
            "mpn",
            "application/vnd.mophun.application"
        ],
        [
            "mpp",
            "application/vnd.ms-project"
        ],
        [
            "mpt",
            "application/vnd.ms-project"
        ],
        [
            "mpy",
            "application/vnd.ibm.minipay"
        ],
        [
            "mqy",
            "application/vnd.mobius.mqy"
        ],
        [
            "mrc",
            "application/marc"
        ],
        [
            "mrcx",
            "application/marcxml+xml"
        ],
        [
            "ms",
            "text/troff"
        ],
        [
            "mscml",
            "application/mediaservercontrol+xml"
        ],
        [
            "mseed",
            "application/vnd.fdsn.mseed"
        ],
        [
            "mseq",
            "application/vnd.mseq"
        ],
        [
            "msf",
            "application/vnd.epson.msf"
        ],
        [
            "msg",
            "application/vnd.ms-outlook"
        ],
        [
            "msh",
            "model/mesh"
        ],
        [
            "msi",
            "application/x-msdownload"
        ],
        [
            "msl",
            "application/vnd.mobius.msl"
        ],
        [
            "msm",
            "application/octet-stream"
        ],
        [
            "msp",
            "application/octet-stream"
        ],
        [
            "msty",
            "application/vnd.muvee.style"
        ],
        [
            "mtl",
            "model/mtl"
        ],
        [
            "mts",
            "model/vnd.mts"
        ],
        [
            "mus",
            "application/vnd.musician"
        ],
        [
            "musd",
            "application/mmt-usd+xml"
        ],
        [
            "musicxml",
            "application/vnd.recordare.musicxml+xml"
        ],
        [
            "mvb",
            "application/x-msmediaview"
        ],
        [
            "mvt",
            "application/vnd.mapbox-vector-tile"
        ],
        [
            "mwf",
            "application/vnd.mfer"
        ],
        [
            "mxf",
            "application/mxf"
        ],
        [
            "mxl",
            "application/vnd.recordare.musicxml"
        ],
        [
            "mxmf",
            "audio/mobile-xmf"
        ],
        [
            "mxml",
            "application/xv+xml"
        ],
        [
            "mxs",
            "application/vnd.triscape.mxs"
        ],
        [
            "mxu",
            "video/vnd.mpegurl"
        ],
        [
            "n-gage",
            "application/vnd.nokia.n-gage.symbian.install"
        ],
        [
            "n3",
            "text/n3"
        ],
        [
            "nb",
            "application/mathematica"
        ],
        [
            "nbp",
            "application/vnd.wolfram.player"
        ],
        [
            "nc",
            "application/x-netcdf"
        ],
        [
            "ncx",
            "application/x-dtbncx+xml"
        ],
        [
            "nfo",
            "text/x-nfo"
        ],
        [
            "ngdat",
            "application/vnd.nokia.n-gage.data"
        ],
        [
            "nitf",
            "application/vnd.nitf"
        ],
        [
            "nlu",
            "application/vnd.neurolanguage.nlu"
        ],
        [
            "nml",
            "application/vnd.enliven"
        ],
        [
            "nnd",
            "application/vnd.noblenet-directory"
        ],
        [
            "nns",
            "application/vnd.noblenet-sealer"
        ],
        [
            "nnw",
            "application/vnd.noblenet-web"
        ],
        [
            "npx",
            "image/vnd.net-fpx"
        ],
        [
            "nq",
            "application/n-quads"
        ],
        [
            "nsc",
            "application/x-conference"
        ],
        [
            "nsf",
            "application/vnd.lotus-notes"
        ],
        [
            "nt",
            "application/n-triples"
        ],
        [
            "ntf",
            "application/vnd.nitf"
        ],
        [
            "numbers",
            "application/x-iwork-numbers-sffnumbers"
        ],
        [
            "nzb",
            "application/x-nzb"
        ],
        [
            "oa2",
            "application/vnd.fujitsu.oasys2"
        ],
        [
            "oa3",
            "application/vnd.fujitsu.oasys3"
        ],
        [
            "oas",
            "application/vnd.fujitsu.oasys"
        ],
        [
            "obd",
            "application/x-msbinder"
        ],
        [
            "obgx",
            "application/vnd.openblox.game+xml"
        ],
        [
            "obj",
            "model/obj"
        ],
        [
            "oda",
            "application/oda"
        ],
        [
            "odb",
            "application/vnd.oasis.opendocument.database"
        ],
        [
            "odc",
            "application/vnd.oasis.opendocument.chart"
        ],
        [
            "odf",
            "application/vnd.oasis.opendocument.formula"
        ],
        [
            "odft",
            "application/vnd.oasis.opendocument.formula-template"
        ],
        [
            "odg",
            "application/vnd.oasis.opendocument.graphics"
        ],
        [
            "odi",
            "application/vnd.oasis.opendocument.image"
        ],
        [
            "odm",
            "application/vnd.oasis.opendocument.text-master"
        ],
        [
            "odp",
            "application/vnd.oasis.opendocument.presentation"
        ],
        [
            "ods",
            "application/vnd.oasis.opendocument.spreadsheet"
        ],
        [
            "odt",
            "application/vnd.oasis.opendocument.text"
        ],
        [
            "oga",
            "audio/ogg"
        ],
        [
            "ogex",
            "model/vnd.opengex"
        ],
        [
            "ogg",
            "audio/ogg"
        ],
        [
            "ogv",
            "video/ogg"
        ],
        [
            "ogx",
            "application/ogg"
        ],
        [
            "omdoc",
            "application/omdoc+xml"
        ],
        [
            "onepkg",
            "application/onenote"
        ],
        [
            "onetmp",
            "application/onenote"
        ],
        [
            "onetoc",
            "application/onenote"
        ],
        [
            "onetoc2",
            "application/onenote"
        ],
        [
            "opf",
            "application/oebps-package+xml"
        ],
        [
            "opml",
            "text/x-opml"
        ],
        [
            "oprc",
            "application/vnd.palm"
        ],
        [
            "opus",
            "audio/ogg"
        ],
        [
            "org",
            "text/x-org"
        ],
        [
            "osf",
            "application/vnd.yamaha.openscoreformat"
        ],
        [
            "osfpvg",
            "application/vnd.yamaha.openscoreformat.osfpvg+xml"
        ],
        [
            "osm",
            "application/vnd.openstreetmap.data+xml"
        ],
        [
            "otc",
            "application/vnd.oasis.opendocument.chart-template"
        ],
        [
            "otf",
            "font/otf"
        ],
        [
            "otg",
            "application/vnd.oasis.opendocument.graphics-template"
        ],
        [
            "oth",
            "application/vnd.oasis.opendocument.text-web"
        ],
        [
            "oti",
            "application/vnd.oasis.opendocument.image-template"
        ],
        [
            "otp",
            "application/vnd.oasis.opendocument.presentation-template"
        ],
        [
            "ots",
            "application/vnd.oasis.opendocument.spreadsheet-template"
        ],
        [
            "ott",
            "application/vnd.oasis.opendocument.text-template"
        ],
        [
            "ova",
            "application/x-virtualbox-ova"
        ],
        [
            "ovf",
            "application/x-virtualbox-ovf"
        ],
        [
            "owl",
            "application/rdf+xml"
        ],
        [
            "oxps",
            "application/oxps"
        ],
        [
            "oxt",
            "application/vnd.openofficeorg.extension"
        ],
        [
            "p",
            "text/x-pascal"
        ],
        [
            "p7a",
            "application/x-pkcs7-signature"
        ],
        [
            "p7b",
            "application/x-pkcs7-certificates"
        ],
        [
            "p7c",
            "application/pkcs7-mime"
        ],
        [
            "p7m",
            "application/pkcs7-mime"
        ],
        [
            "p7r",
            "application/x-pkcs7-certreqresp"
        ],
        [
            "p7s",
            "application/pkcs7-signature"
        ],
        [
            "p8",
            "application/pkcs8"
        ],
        [
            "p10",
            "application/x-pkcs10"
        ],
        [
            "p12",
            "application/x-pkcs12"
        ],
        [
            "pac",
            "application/x-ns-proxy-autoconfig"
        ],
        [
            "pages",
            "application/x-iwork-pages-sffpages"
        ],
        [
            "pas",
            "text/x-pascal"
        ],
        [
            "paw",
            "application/vnd.pawaafile"
        ],
        [
            "pbd",
            "application/vnd.powerbuilder6"
        ],
        [
            "pbm",
            "image/x-portable-bitmap"
        ],
        [
            "pcap",
            "application/vnd.tcpdump.pcap"
        ],
        [
            "pcf",
            "application/x-font-pcf"
        ],
        [
            "pcl",
            "application/vnd.hp-pcl"
        ],
        [
            "pclxl",
            "application/vnd.hp-pclxl"
        ],
        [
            "pct",
            "image/x-pict"
        ],
        [
            "pcurl",
            "application/vnd.curl.pcurl"
        ],
        [
            "pcx",
            "image/x-pcx"
        ],
        [
            "pdb",
            "application/x-pilot"
        ],
        [
            "pde",
            "text/x-processing"
        ],
        [
            "pdf",
            "application/pdf"
        ],
        [
            "pem",
            "application/x-x509-user-cert"
        ],
        [
            "pfa",
            "application/x-font-type1"
        ],
        [
            "pfb",
            "application/x-font-type1"
        ],
        [
            "pfm",
            "application/x-font-type1"
        ],
        [
            "pfr",
            "application/font-tdpfr"
        ],
        [
            "pfx",
            "application/x-pkcs12"
        ],
        [
            "pgm",
            "image/x-portable-graymap"
        ],
        [
            "pgn",
            "application/x-chess-pgn"
        ],
        [
            "pgp",
            "application/pgp"
        ],
        [
            "php",
            "application/x-httpd-php"
        ],
        [
            "php3",
            "application/x-httpd-php"
        ],
        [
            "php4",
            "application/x-httpd-php"
        ],
        [
            "phps",
            "application/x-httpd-php-source"
        ],
        [
            "phtml",
            "application/x-httpd-php"
        ],
        [
            "pic",
            "image/x-pict"
        ],
        [
            "pkg",
            "application/octet-stream"
        ],
        [
            "pki",
            "application/pkixcmp"
        ],
        [
            "pkipath",
            "application/pkix-pkipath"
        ],
        [
            "pkpass",
            "application/vnd.apple.pkpass"
        ],
        [
            "pl",
            "application/x-perl"
        ],
        [
            "plb",
            "application/vnd.3gpp.pic-bw-large"
        ],
        [
            "plc",
            "application/vnd.mobius.plc"
        ],
        [
            "plf",
            "application/vnd.pocketlearn"
        ],
        [
            "pls",
            "application/pls+xml"
        ],
        [
            "pm",
            "application/x-perl"
        ],
        [
            "pml",
            "application/vnd.ctc-posml"
        ],
        [
            "png",
            "image/png"
        ],
        [
            "pnm",
            "image/x-portable-anymap"
        ],
        [
            "portpkg",
            "application/vnd.macports.portpkg"
        ],
        [
            "pot",
            "application/vnd.ms-powerpoint"
        ],
        [
            "potm",
            "application/vnd.ms-powerpoint.presentation.macroEnabled.12"
        ],
        [
            "potx",
            "application/vnd.openxmlformats-officedocument.presentationml.template"
        ],
        [
            "ppa",
            "application/vnd.ms-powerpoint"
        ],
        [
            "ppam",
            "application/vnd.ms-powerpoint.addin.macroEnabled.12"
        ],
        [
            "ppd",
            "application/vnd.cups-ppd"
        ],
        [
            "ppm",
            "image/x-portable-pixmap"
        ],
        [
            "pps",
            "application/vnd.ms-powerpoint"
        ],
        [
            "ppsm",
            "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"
        ],
        [
            "ppsx",
            "application/vnd.openxmlformats-officedocument.presentationml.slideshow"
        ],
        [
            "ppt",
            "application/powerpoint"
        ],
        [
            "pptm",
            "application/vnd.ms-powerpoint.presentation.macroEnabled.12"
        ],
        [
            "pptx",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation"
        ],
        [
            "pqa",
            "application/vnd.palm"
        ],
        [
            "prc",
            "application/x-pilot"
        ],
        [
            "pre",
            "application/vnd.lotus-freelance"
        ],
        [
            "prf",
            "application/pics-rules"
        ],
        [
            "provx",
            "application/provenance+xml"
        ],
        [
            "ps",
            "application/postscript"
        ],
        [
            "psb",
            "application/vnd.3gpp.pic-bw-small"
        ],
        [
            "psd",
            "application/x-photoshop"
        ],
        [
            "psf",
            "application/x-font-linux-psf"
        ],
        [
            "pskcxml",
            "application/pskc+xml"
        ],
        [
            "pti",
            "image/prs.pti"
        ],
        [
            "ptid",
            "application/vnd.pvi.ptid1"
        ],
        [
            "pub",
            "application/x-mspublisher"
        ],
        [
            "pvb",
            "application/vnd.3gpp.pic-bw-var"
        ],
        [
            "pwn",
            "application/vnd.3m.post-it-notes"
        ],
        [
            "pya",
            "audio/vnd.ms-playready.media.pya"
        ],
        [
            "pyv",
            "video/vnd.ms-playready.media.pyv"
        ],
        [
            "qam",
            "application/vnd.epson.quickanime"
        ],
        [
            "qbo",
            "application/vnd.intu.qbo"
        ],
        [
            "qfx",
            "application/vnd.intu.qfx"
        ],
        [
            "qps",
            "application/vnd.publishare-delta-tree"
        ],
        [
            "qt",
            "video/quicktime"
        ],
        [
            "qwd",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qwt",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxb",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxd",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxl",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "qxt",
            "application/vnd.quark.quarkxpress"
        ],
        [
            "ra",
            "audio/x-realaudio"
        ],
        [
            "ram",
            "audio/x-pn-realaudio"
        ],
        [
            "raml",
            "application/raml+yaml"
        ],
        [
            "rapd",
            "application/route-apd+xml"
        ],
        [
            "rar",
            "application/x-rar"
        ],
        [
            "ras",
            "image/x-cmu-raster"
        ],
        [
            "rcprofile",
            "application/vnd.ipunplugged.rcprofile"
        ],
        [
            "rdf",
            "application/rdf+xml"
        ],
        [
            "rdz",
            "application/vnd.data-vision.rdz"
        ],
        [
            "relo",
            "application/p2p-overlay+xml"
        ],
        [
            "rep",
            "application/vnd.businessobjects"
        ],
        [
            "res",
            "application/x-dtbresource+xml"
        ],
        [
            "rgb",
            "image/x-rgb"
        ],
        [
            "rif",
            "application/reginfo+xml"
        ],
        [
            "rip",
            "audio/vnd.rip"
        ],
        [
            "ris",
            "application/x-research-info-systems"
        ],
        [
            "rl",
            "application/resource-lists+xml"
        ],
        [
            "rlc",
            "image/vnd.fujixerox.edmics-rlc"
        ],
        [
            "rld",
            "application/resource-lists-diff+xml"
        ],
        [
            "rm",
            "audio/x-pn-realaudio"
        ],
        [
            "rmi",
            "audio/midi"
        ],
        [
            "rmp",
            "audio/x-pn-realaudio-plugin"
        ],
        [
            "rms",
            "application/vnd.jcp.javame.midlet-rms"
        ],
        [
            "rmvb",
            "application/vnd.rn-realmedia-vbr"
        ],
        [
            "rnc",
            "application/relax-ng-compact-syntax"
        ],
        [
            "rng",
            "application/xml"
        ],
        [
            "roa",
            "application/rpki-roa"
        ],
        [
            "roff",
            "text/troff"
        ],
        [
            "rp9",
            "application/vnd.cloanto.rp9"
        ],
        [
            "rpm",
            "audio/x-pn-realaudio-plugin"
        ],
        [
            "rpss",
            "application/vnd.nokia.radio-presets"
        ],
        [
            "rpst",
            "application/vnd.nokia.radio-preset"
        ],
        [
            "rq",
            "application/sparql-query"
        ],
        [
            "rs",
            "application/rls-services+xml"
        ],
        [
            "rsa",
            "application/x-pkcs7"
        ],
        [
            "rsat",
            "application/atsc-rsat+xml"
        ],
        [
            "rsd",
            "application/rsd+xml"
        ],
        [
            "rsheet",
            "application/urc-ressheet+xml"
        ],
        [
            "rss",
            "application/rss+xml"
        ],
        [
            "rtf",
            "text/rtf"
        ],
        [
            "rtx",
            "text/richtext"
        ],
        [
            "run",
            "application/x-makeself"
        ],
        [
            "rusd",
            "application/route-usd+xml"
        ],
        [
            "rv",
            "video/vnd.rn-realvideo"
        ],
        [
            "s",
            "text/x-asm"
        ],
        [
            "s3m",
            "audio/s3m"
        ],
        [
            "saf",
            "application/vnd.yamaha.smaf-audio"
        ],
        [
            "sass",
            "text/x-sass"
        ],
        [
            "sbml",
            "application/sbml+xml"
        ],
        [
            "sc",
            "application/vnd.ibm.secure-container"
        ],
        [
            "scd",
            "application/x-msschedule"
        ],
        [
            "scm",
            "application/vnd.lotus-screencam"
        ],
        [
            "scq",
            "application/scvp-cv-request"
        ],
        [
            "scs",
            "application/scvp-cv-response"
        ],
        [
            "scss",
            "text/x-scss"
        ],
        [
            "scurl",
            "text/vnd.curl.scurl"
        ],
        [
            "sda",
            "application/vnd.stardivision.draw"
        ],
        [
            "sdc",
            "application/vnd.stardivision.calc"
        ],
        [
            "sdd",
            "application/vnd.stardivision.impress"
        ],
        [
            "sdkd",
            "application/vnd.solent.sdkm+xml"
        ],
        [
            "sdkm",
            "application/vnd.solent.sdkm+xml"
        ],
        [
            "sdp",
            "application/sdp"
        ],
        [
            "sdw",
            "application/vnd.stardivision.writer"
        ],
        [
            "sea",
            "application/octet-stream"
        ],
        [
            "see",
            "application/vnd.seemail"
        ],
        [
            "seed",
            "application/vnd.fdsn.seed"
        ],
        [
            "sema",
            "application/vnd.sema"
        ],
        [
            "semd",
            "application/vnd.semd"
        ],
        [
            "semf",
            "application/vnd.semf"
        ],
        [
            "senmlx",
            "application/senml+xml"
        ],
        [
            "sensmlx",
            "application/sensml+xml"
        ],
        [
            "ser",
            "application/java-serialized-object"
        ],
        [
            "setpay",
            "application/set-payment-initiation"
        ],
        [
            "setreg",
            "application/set-registration-initiation"
        ],
        [
            "sfd-hdstx",
            "application/vnd.hydrostatix.sof-data"
        ],
        [
            "sfs",
            "application/vnd.spotfire.sfs"
        ],
        [
            "sfv",
            "text/x-sfv"
        ],
        [
            "sgi",
            "image/sgi"
        ],
        [
            "sgl",
            "application/vnd.stardivision.writer-global"
        ],
        [
            "sgm",
            "text/sgml"
        ],
        [
            "sgml",
            "text/sgml"
        ],
        [
            "sh",
            "application/x-sh"
        ],
        [
            "shar",
            "application/x-shar"
        ],
        [
            "shex",
            "text/shex"
        ],
        [
            "shf",
            "application/shf+xml"
        ],
        [
            "shtml",
            "text/html"
        ],
        [
            "sid",
            "image/x-mrsid-image"
        ],
        [
            "sieve",
            "application/sieve"
        ],
        [
            "sig",
            "application/pgp-signature"
        ],
        [
            "sil",
            "audio/silk"
        ],
        [
            "silo",
            "model/mesh"
        ],
        [
            "sis",
            "application/vnd.symbian.install"
        ],
        [
            "sisx",
            "application/vnd.symbian.install"
        ],
        [
            "sit",
            "application/x-stuffit"
        ],
        [
            "sitx",
            "application/x-stuffitx"
        ],
        [
            "siv",
            "application/sieve"
        ],
        [
            "skd",
            "application/vnd.koan"
        ],
        [
            "skm",
            "application/vnd.koan"
        ],
        [
            "skp",
            "application/vnd.koan"
        ],
        [
            "skt",
            "application/vnd.koan"
        ],
        [
            "sldm",
            "application/vnd.ms-powerpoint.slide.macroenabled.12"
        ],
        [
            "sldx",
            "application/vnd.openxmlformats-officedocument.presentationml.slide"
        ],
        [
            "slim",
            "text/slim"
        ],
        [
            "slm",
            "text/slim"
        ],
        [
            "sls",
            "application/route-s-tsid+xml"
        ],
        [
            "slt",
            "application/vnd.epson.salt"
        ],
        [
            "sm",
            "application/vnd.stepmania.stepchart"
        ],
        [
            "smf",
            "application/vnd.stardivision.math"
        ],
        [
            "smi",
            "application/smil"
        ],
        [
            "smil",
            "application/smil"
        ],
        [
            "smv",
            "video/x-smv"
        ],
        [
            "smzip",
            "application/vnd.stepmania.package"
        ],
        [
            "snd",
            "audio/basic"
        ],
        [
            "snf",
            "application/x-font-snf"
        ],
        [
            "so",
            "application/octet-stream"
        ],
        [
            "spc",
            "application/x-pkcs7-certificates"
        ],
        [
            "spdx",
            "text/spdx"
        ],
        [
            "spf",
            "application/vnd.yamaha.smaf-phrase"
        ],
        [
            "spl",
            "application/x-futuresplash"
        ],
        [
            "spot",
            "text/vnd.in3d.spot"
        ],
        [
            "spp",
            "application/scvp-vp-response"
        ],
        [
            "spq",
            "application/scvp-vp-request"
        ],
        [
            "spx",
            "audio/ogg"
        ],
        [
            "sql",
            "application/x-sql"
        ],
        [
            "src",
            "application/x-wais-source"
        ],
        [
            "srt",
            "application/x-subrip"
        ],
        [
            "sru",
            "application/sru+xml"
        ],
        [
            "srx",
            "application/sparql-results+xml"
        ],
        [
            "ssdl",
            "application/ssdl+xml"
        ],
        [
            "sse",
            "application/vnd.kodak-descriptor"
        ],
        [
            "ssf",
            "application/vnd.epson.ssf"
        ],
        [
            "ssml",
            "application/ssml+xml"
        ],
        [
            "sst",
            "application/octet-stream"
        ],
        [
            "st",
            "application/vnd.sailingtracker.track"
        ],
        [
            "stc",
            "application/vnd.sun.xml.calc.template"
        ],
        [
            "std",
            "application/vnd.sun.xml.draw.template"
        ],
        [
            "stf",
            "application/vnd.wt.stf"
        ],
        [
            "sti",
            "application/vnd.sun.xml.impress.template"
        ],
        [
            "stk",
            "application/hyperstudio"
        ],
        [
            "stl",
            "model/stl"
        ],
        [
            "stpx",
            "model/step+xml"
        ],
        [
            "stpxz",
            "model/step-xml+zip"
        ],
        [
            "stpz",
            "model/step+zip"
        ],
        [
            "str",
            "application/vnd.pg.format"
        ],
        [
            "stw",
            "application/vnd.sun.xml.writer.template"
        ],
        [
            "styl",
            "text/stylus"
        ],
        [
            "stylus",
            "text/stylus"
        ],
        [
            "sub",
            "text/vnd.dvb.subtitle"
        ],
        [
            "sus",
            "application/vnd.sus-calendar"
        ],
        [
            "susp",
            "application/vnd.sus-calendar"
        ],
        [
            "sv4cpio",
            "application/x-sv4cpio"
        ],
        [
            "sv4crc",
            "application/x-sv4crc"
        ],
        [
            "svc",
            "application/vnd.dvb.service"
        ],
        [
            "svd",
            "application/vnd.svd"
        ],
        [
            "svg",
            "image/svg+xml"
        ],
        [
            "svgz",
            "image/svg+xml"
        ],
        [
            "swa",
            "application/x-director"
        ],
        [
            "swf",
            "application/x-shockwave-flash"
        ],
        [
            "swi",
            "application/vnd.aristanetworks.swi"
        ],
        [
            "swidtag",
            "application/swid+xml"
        ],
        [
            "sxc",
            "application/vnd.sun.xml.calc"
        ],
        [
            "sxd",
            "application/vnd.sun.xml.draw"
        ],
        [
            "sxg",
            "application/vnd.sun.xml.writer.global"
        ],
        [
            "sxi",
            "application/vnd.sun.xml.impress"
        ],
        [
            "sxm",
            "application/vnd.sun.xml.math"
        ],
        [
            "sxw",
            "application/vnd.sun.xml.writer"
        ],
        [
            "t",
            "text/troff"
        ],
        [
            "t3",
            "application/x-t3vm-image"
        ],
        [
            "t38",
            "image/t38"
        ],
        [
            "taglet",
            "application/vnd.mynfc"
        ],
        [
            "tao",
            "application/vnd.tao.intent-module-archive"
        ],
        [
            "tap",
            "image/vnd.tencent.tap"
        ],
        [
            "tar",
            "application/x-tar"
        ],
        [
            "tcap",
            "application/vnd.3gpp2.tcap"
        ],
        [
            "tcl",
            "application/x-tcl"
        ],
        [
            "td",
            "application/urc-targetdesc+xml"
        ],
        [
            "teacher",
            "application/vnd.smart.teacher"
        ],
        [
            "tei",
            "application/tei+xml"
        ],
        [
            "teicorpus",
            "application/tei+xml"
        ],
        [
            "tex",
            "application/x-tex"
        ],
        [
            "texi",
            "application/x-texinfo"
        ],
        [
            "texinfo",
            "application/x-texinfo"
        ],
        [
            "text",
            "text/plain"
        ],
        [
            "tfi",
            "application/thraud+xml"
        ],
        [
            "tfm",
            "application/x-tex-tfm"
        ],
        [
            "tfx",
            "image/tiff-fx"
        ],
        [
            "tga",
            "image/x-tga"
        ],
        [
            "tgz",
            "application/x-tar"
        ],
        [
            "thmx",
            "application/vnd.ms-officetheme"
        ],
        [
            "tif",
            "image/tiff"
        ],
        [
            "tiff",
            "image/tiff"
        ],
        [
            "tk",
            "application/x-tcl"
        ],
        [
            "tmo",
            "application/vnd.tmobile-livetv"
        ],
        [
            "toml",
            "application/toml"
        ],
        [
            "torrent",
            "application/x-bittorrent"
        ],
        [
            "tpl",
            "application/vnd.groove-tool-template"
        ],
        [
            "tpt",
            "application/vnd.trid.tpt"
        ],
        [
            "tr",
            "text/troff"
        ],
        [
            "tra",
            "application/vnd.trueapp"
        ],
        [
            "trig",
            "application/trig"
        ],
        [
            "trm",
            "application/x-msterminal"
        ],
        [
            "ts",
            "video/mp2t"
        ],
        [
            "tsd",
            "application/timestamped-data"
        ],
        [
            "tsv",
            "text/tab-separated-values"
        ],
        [
            "ttc",
            "font/collection"
        ],
        [
            "ttf",
            "font/ttf"
        ],
        [
            "ttl",
            "text/turtle"
        ],
        [
            "ttml",
            "application/ttml+xml"
        ],
        [
            "twd",
            "application/vnd.simtech-mindmapper"
        ],
        [
            "twds",
            "application/vnd.simtech-mindmapper"
        ],
        [
            "txd",
            "application/vnd.genomatix.tuxedo"
        ],
        [
            "txf",
            "application/vnd.mobius.txf"
        ],
        [
            "txt",
            "text/plain"
        ],
        [
            "u8dsn",
            "message/global-delivery-status"
        ],
        [
            "u8hdr",
            "message/global-headers"
        ],
        [
            "u8mdn",
            "message/global-disposition-notification"
        ],
        [
            "u8msg",
            "message/global"
        ],
        [
            "u32",
            "application/x-authorware-bin"
        ],
        [
            "ubj",
            "application/ubjson"
        ],
        [
            "udeb",
            "application/x-debian-package"
        ],
        [
            "ufd",
            "application/vnd.ufdl"
        ],
        [
            "ufdl",
            "application/vnd.ufdl"
        ],
        [
            "ulx",
            "application/x-glulx"
        ],
        [
            "umj",
            "application/vnd.umajin"
        ],
        [
            "unityweb",
            "application/vnd.unity"
        ],
        [
            "uoml",
            "application/vnd.uoml+xml"
        ],
        [
            "uri",
            "text/uri-list"
        ],
        [
            "uris",
            "text/uri-list"
        ],
        [
            "urls",
            "text/uri-list"
        ],
        [
            "usdz",
            "model/vnd.usdz+zip"
        ],
        [
            "ustar",
            "application/x-ustar"
        ],
        [
            "utz",
            "application/vnd.uiq.theme"
        ],
        [
            "uu",
            "text/x-uuencode"
        ],
        [
            "uva",
            "audio/vnd.dece.audio"
        ],
        [
            "uvd",
            "application/vnd.dece.data"
        ],
        [
            "uvf",
            "application/vnd.dece.data"
        ],
        [
            "uvg",
            "image/vnd.dece.graphic"
        ],
        [
            "uvh",
            "video/vnd.dece.hd"
        ],
        [
            "uvi",
            "image/vnd.dece.graphic"
        ],
        [
            "uvm",
            "video/vnd.dece.mobile"
        ],
        [
            "uvp",
            "video/vnd.dece.pd"
        ],
        [
            "uvs",
            "video/vnd.dece.sd"
        ],
        [
            "uvt",
            "application/vnd.dece.ttml+xml"
        ],
        [
            "uvu",
            "video/vnd.uvvu.mp4"
        ],
        [
            "uvv",
            "video/vnd.dece.video"
        ],
        [
            "uvva",
            "audio/vnd.dece.audio"
        ],
        [
            "uvvd",
            "application/vnd.dece.data"
        ],
        [
            "uvvf",
            "application/vnd.dece.data"
        ],
        [
            "uvvg",
            "image/vnd.dece.graphic"
        ],
        [
            "uvvh",
            "video/vnd.dece.hd"
        ],
        [
            "uvvi",
            "image/vnd.dece.graphic"
        ],
        [
            "uvvm",
            "video/vnd.dece.mobile"
        ],
        [
            "uvvp",
            "video/vnd.dece.pd"
        ],
        [
            "uvvs",
            "video/vnd.dece.sd"
        ],
        [
            "uvvt",
            "application/vnd.dece.ttml+xml"
        ],
        [
            "uvvu",
            "video/vnd.uvvu.mp4"
        ],
        [
            "uvvv",
            "video/vnd.dece.video"
        ],
        [
            "uvvx",
            "application/vnd.dece.unspecified"
        ],
        [
            "uvvz",
            "application/vnd.dece.zip"
        ],
        [
            "uvx",
            "application/vnd.dece.unspecified"
        ],
        [
            "uvz",
            "application/vnd.dece.zip"
        ],
        [
            "vbox",
            "application/x-virtualbox-vbox"
        ],
        [
            "vbox-extpack",
            "application/x-virtualbox-vbox-extpack"
        ],
        [
            "vcard",
            "text/vcard"
        ],
        [
            "vcd",
            "application/x-cdlink"
        ],
        [
            "vcf",
            "text/x-vcard"
        ],
        [
            "vcg",
            "application/vnd.groove-vcard"
        ],
        [
            "vcs",
            "text/x-vcalendar"
        ],
        [
            "vcx",
            "application/vnd.vcx"
        ],
        [
            "vdi",
            "application/x-virtualbox-vdi"
        ],
        [
            "vds",
            "model/vnd.sap.vds"
        ],
        [
            "vhd",
            "application/x-virtualbox-vhd"
        ],
        [
            "vis",
            "application/vnd.visionary"
        ],
        [
            "viv",
            "video/vnd.vivo"
        ],
        [
            "vlc",
            "application/videolan"
        ],
        [
            "vmdk",
            "application/x-virtualbox-vmdk"
        ],
        [
            "vob",
            "video/x-ms-vob"
        ],
        [
            "vor",
            "application/vnd.stardivision.writer"
        ],
        [
            "vox",
            "application/x-authorware-bin"
        ],
        [
            "vrml",
            "model/vrml"
        ],
        [
            "vsd",
            "application/vnd.visio"
        ],
        [
            "vsf",
            "application/vnd.vsf"
        ],
        [
            "vss",
            "application/vnd.visio"
        ],
        [
            "vst",
            "application/vnd.visio"
        ],
        [
            "vsw",
            "application/vnd.visio"
        ],
        [
            "vtf",
            "image/vnd.valve.source.texture"
        ],
        [
            "vtt",
            "text/vtt"
        ],
        [
            "vtu",
            "model/vnd.vtu"
        ],
        [
            "vxml",
            "application/voicexml+xml"
        ],
        [
            "w3d",
            "application/x-director"
        ],
        [
            "wad",
            "application/x-doom"
        ],
        [
            "wadl",
            "application/vnd.sun.wadl+xml"
        ],
        [
            "war",
            "application/java-archive"
        ],
        [
            "wasm",
            "application/wasm"
        ],
        [
            "wav",
            "audio/x-wav"
        ],
        [
            "wax",
            "audio/x-ms-wax"
        ],
        [
            "wbmp",
            "image/vnd.wap.wbmp"
        ],
        [
            "wbs",
            "application/vnd.criticaltools.wbs+xml"
        ],
        [
            "wbxml",
            "application/wbxml"
        ],
        [
            "wcm",
            "application/vnd.ms-works"
        ],
        [
            "wdb",
            "application/vnd.ms-works"
        ],
        [
            "wdp",
            "image/vnd.ms-photo"
        ],
        [
            "weba",
            "audio/webm"
        ],
        [
            "webapp",
            "application/x-web-app-manifest+json"
        ],
        [
            "webm",
            "video/webm"
        ],
        [
            "webmanifest",
            "application/manifest+json"
        ],
        [
            "webp",
            "image/webp"
        ],
        [
            "wg",
            "application/vnd.pmi.widget"
        ],
        [
            "wgt",
            "application/widget"
        ],
        [
            "wks",
            "application/vnd.ms-works"
        ],
        [
            "wm",
            "video/x-ms-wm"
        ],
        [
            "wma",
            "audio/x-ms-wma"
        ],
        [
            "wmd",
            "application/x-ms-wmd"
        ],
        [
            "wmf",
            "image/wmf"
        ],
        [
            "wml",
            "text/vnd.wap.wml"
        ],
        [
            "wmlc",
            "application/wmlc"
        ],
        [
            "wmls",
            "text/vnd.wap.wmlscript"
        ],
        [
            "wmlsc",
            "application/vnd.wap.wmlscriptc"
        ],
        [
            "wmv",
            "video/x-ms-wmv"
        ],
        [
            "wmx",
            "video/x-ms-wmx"
        ],
        [
            "wmz",
            "application/x-msmetafile"
        ],
        [
            "woff",
            "font/woff"
        ],
        [
            "woff2",
            "font/woff2"
        ],
        [
            "word",
            "application/msword"
        ],
        [
            "wpd",
            "application/vnd.wordperfect"
        ],
        [
            "wpl",
            "application/vnd.ms-wpl"
        ],
        [
            "wps",
            "application/vnd.ms-works"
        ],
        [
            "wqd",
            "application/vnd.wqd"
        ],
        [
            "wri",
            "application/x-mswrite"
        ],
        [
            "wrl",
            "model/vrml"
        ],
        [
            "wsc",
            "message/vnd.wfa.wsc"
        ],
        [
            "wsdl",
            "application/wsdl+xml"
        ],
        [
            "wspolicy",
            "application/wspolicy+xml"
        ],
        [
            "wtb",
            "application/vnd.webturbo"
        ],
        [
            "wvx",
            "video/x-ms-wvx"
        ],
        [
            "x3d",
            "model/x3d+xml"
        ],
        [
            "x3db",
            "model/x3d+fastinfoset"
        ],
        [
            "x3dbz",
            "model/x3d+binary"
        ],
        [
            "x3dv",
            "model/x3d-vrml"
        ],
        [
            "x3dvz",
            "model/x3d+vrml"
        ],
        [
            "x3dz",
            "model/x3d+xml"
        ],
        [
            "x32",
            "application/x-authorware-bin"
        ],
        [
            "x_b",
            "model/vnd.parasolid.transmit.binary"
        ],
        [
            "x_t",
            "model/vnd.parasolid.transmit.text"
        ],
        [
            "xaml",
            "application/xaml+xml"
        ],
        [
            "xap",
            "application/x-silverlight-app"
        ],
        [
            "xar",
            "application/vnd.xara"
        ],
        [
            "xav",
            "application/xcap-att+xml"
        ],
        [
            "xbap",
            "application/x-ms-xbap"
        ],
        [
            "xbd",
            "application/vnd.fujixerox.docuworks.binder"
        ],
        [
            "xbm",
            "image/x-xbitmap"
        ],
        [
            "xca",
            "application/xcap-caps+xml"
        ],
        [
            "xcs",
            "application/calendar+xml"
        ],
        [
            "xdf",
            "application/xcap-diff+xml"
        ],
        [
            "xdm",
            "application/vnd.syncml.dm+xml"
        ],
        [
            "xdp",
            "application/vnd.adobe.xdp+xml"
        ],
        [
            "xdssc",
            "application/dssc+xml"
        ],
        [
            "xdw",
            "application/vnd.fujixerox.docuworks"
        ],
        [
            "xel",
            "application/xcap-el+xml"
        ],
        [
            "xenc",
            "application/xenc+xml"
        ],
        [
            "xer",
            "application/patch-ops-error+xml"
        ],
        [
            "xfdf",
            "application/vnd.adobe.xfdf"
        ],
        [
            "xfdl",
            "application/vnd.xfdl"
        ],
        [
            "xht",
            "application/xhtml+xml"
        ],
        [
            "xhtml",
            "application/xhtml+xml"
        ],
        [
            "xhvml",
            "application/xv+xml"
        ],
        [
            "xif",
            "image/vnd.xiff"
        ],
        [
            "xl",
            "application/excel"
        ],
        [
            "xla",
            "application/vnd.ms-excel"
        ],
        [
            "xlam",
            "application/vnd.ms-excel.addin.macroEnabled.12"
        ],
        [
            "xlc",
            "application/vnd.ms-excel"
        ],
        [
            "xlf",
            "application/xliff+xml"
        ],
        [
            "xlm",
            "application/vnd.ms-excel"
        ],
        [
            "xls",
            "application/vnd.ms-excel"
        ],
        [
            "xlsb",
            "application/vnd.ms-excel.sheet.binary.macroEnabled.12"
        ],
        [
            "xlsm",
            "application/vnd.ms-excel.sheet.macroEnabled.12"
        ],
        [
            "xlsx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        ],
        [
            "xlt",
            "application/vnd.ms-excel"
        ],
        [
            "xltm",
            "application/vnd.ms-excel.template.macroEnabled.12"
        ],
        [
            "xltx",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.template"
        ],
        [
            "xlw",
            "application/vnd.ms-excel"
        ],
        [
            "xm",
            "audio/xm"
        ],
        [
            "xml",
            "application/xml"
        ],
        [
            "xns",
            "application/xcap-ns+xml"
        ],
        [
            "xo",
            "application/vnd.olpc-sugar"
        ],
        [
            "xop",
            "application/xop+xml"
        ],
        [
            "xpi",
            "application/x-xpinstall"
        ],
        [
            "xpl",
            "application/xproc+xml"
        ],
        [
            "xpm",
            "image/x-xpixmap"
        ],
        [
            "xpr",
            "application/vnd.is-xpr"
        ],
        [
            "xps",
            "application/vnd.ms-xpsdocument"
        ],
        [
            "xpw",
            "application/vnd.intercon.formnet"
        ],
        [
            "xpx",
            "application/vnd.intercon.formnet"
        ],
        [
            "xsd",
            "application/xml"
        ],
        [
            "xsl",
            "application/xml"
        ],
        [
            "xslt",
            "application/xslt+xml"
        ],
        [
            "xsm",
            "application/vnd.syncml+xml"
        ],
        [
            "xspf",
            "application/xspf+xml"
        ],
        [
            "xul",
            "application/vnd.mozilla.xul+xml"
        ],
        [
            "xvm",
            "application/xv+xml"
        ],
        [
            "xvml",
            "application/xv+xml"
        ],
        [
            "xwd",
            "image/x-xwindowdump"
        ],
        [
            "xyz",
            "chemical/x-xyz"
        ],
        [
            "xz",
            "application/x-xz"
        ],
        [
            "yaml",
            "text/yaml"
        ],
        [
            "yang",
            "application/yang"
        ],
        [
            "yin",
            "application/yin+xml"
        ],
        [
            "yml",
            "text/yaml"
        ],
        [
            "ymp",
            "text/x-suse-ymp"
        ],
        [
            "z",
            "application/x-compress"
        ],
        [
            "z1",
            "application/x-zmachine"
        ],
        [
            "z2",
            "application/x-zmachine"
        ],
        [
            "z3",
            "application/x-zmachine"
        ],
        [
            "z4",
            "application/x-zmachine"
        ],
        [
            "z5",
            "application/x-zmachine"
        ],
        [
            "z6",
            "application/x-zmachine"
        ],
        [
            "z7",
            "application/x-zmachine"
        ],
        [
            "z8",
            "application/x-zmachine"
        ],
        [
            "zaz",
            "application/vnd.zzazz.deck+xml"
        ],
        [
            "zip",
            "application/zip"
        ],
        [
            "zir",
            "application/vnd.zul"
        ],
        [
            "zirz",
            "application/vnd.zul"
        ],
        [
            "zmm",
            "application/vnd.handheld-entertainment+xml"
        ],
        [
            "zsh",
            "text/x-scriptzsh"
        ]
    ]);
    function py(t, e, n) {
        const r = fse(t), { webkitRelativePath: i } = t, s = typeof e == "string" ? e : typeof i == "string" && i.length > 0 ? i : `./${t.name}`;
        return typeof r.path != "string" && v4(r, "path", s), v4(r, "relativePath", s), r;
    }
    function fse(t) {
        const { name: e } = t;
        if (e && e.lastIndexOf(".") !== -1 && !t.type) {
            const r = e.split(".").pop().toLowerCase(), i = dse.get(r);
            i && Object.defineProperty(t, "type", {
                value: i,
                writable: !1,
                configurable: !1,
                enumerable: !0
            });
        }
        return t;
    }
    function v4(t, e, n) {
        Object.defineProperty(t, e, {
            value: n,
            writable: !1,
            configurable: !1,
            enumerable: !0
        });
    }
    const hse = [
        ".DS_Store",
        "Thumbs.db"
    ];
    function pse(t) {
        return jm(this, void 0, void 0, function*() {
            return sM(t) && mse(t.dataTransfer) ? xse(t.dataTransfer, t.type) : gse(t) ? yse(t) : Array.isArray(t) && t.every((e)=>"getFile" in e && typeof e.getFile == "function") ? vse(t) : [];
        });
    }
    function mse(t) {
        return sM(t);
    }
    function gse(t) {
        return sM(t) && sM(t.target);
    }
    function sM(t) {
        return typeof t == "object" && t !== null;
    }
    function yse(t) {
        return d3(t.target.files).map((e)=>py(e));
    }
    function vse(t) {
        return jm(this, void 0, void 0, function*() {
            return (yield Promise.all(t.map((n)=>n.getFile()))).map((n)=>py(n));
        });
    }
    function xse(t, e) {
        return jm(this, void 0, void 0, function*() {
            if (t.items) {
                const n = d3(t.items).filter((i)=>i.kind === "file");
                if (e !== "drop") return n;
                const r = yield Promise.all(n.map(bse));
                return x4(Mz(r));
            }
            return x4(d3(t.files).map((n)=>py(n)));
        });
    }
    function x4(t) {
        return t.filter((e)=>hse.indexOf(e.name) === -1);
    }
    function d3(t) {
        if (t === null) return [];
        const e = [];
        for(let n = 0; n < t.length; n++){
            const r = t[n];
            e.push(r);
        }
        return e;
    }
    function bse(t) {
        if (typeof t.webkitGetAsEntry != "function") return b4(t);
        const e = t.webkitGetAsEntry();
        return e && e.isDirectory ? Tz(e) : b4(t, e);
    }
    function Mz(t) {
        return t.reduce((e, n)=>[
                ...e,
                ...Array.isArray(n) ? Mz(n) : [
                    n
                ]
            ], []);
    }
    function b4(t, e) {
        return jm(this, void 0, void 0, function*() {
            var n;
            if (globalThis.isSecureContext && typeof t.getAsFileSystemHandle == "function") {
                const s = yield t.getAsFileSystemHandle();
                if (s === null) throw new Error(`${t} is not a File`);
                if (s !== void 0) {
                    const o = yield s.getFile();
                    return o.handle = s, py(o);
                }
            }
            const r = t.getAsFile();
            if (!r) throw new Error(`${t} is not a File`);
            return py(r, (n = e?.fullPath) !== null && n !== void 0 ? n : void 0);
        });
    }
    function wse(t) {
        return jm(this, void 0, void 0, function*() {
            return t.isDirectory ? Tz(t) : _se(t);
        });
    }
    function Tz(t) {
        const e = t.createReader();
        return new Promise((n, r)=>{
            const i = [];
            function s() {
                e.readEntries((o)=>jm(this, void 0, void 0, function*() {
                        if (o.length) {
                            const a = Promise.all(o.map(wse));
                            i.push(a), s();
                        } else try {
                            const a = yield Promise.all(i);
                            n(a);
                        } catch (a) {
                            r(a);
                        }
                    }), (o)=>{
                    r(o);
                });
            }
            s();
        });
    }
    function _se(t) {
        return jm(this, void 0, void 0, function*() {
            return new Promise((e, n)=>{
                t.file((r)=>{
                    const i = py(r, t.fullPath);
                    e(i);
                }, (r)=>{
                    n(r);
                });
            });
        });
    }
    var f1 = {}, w4;
    function Sse() {
        return w4 || (w4 = 1, f1.__esModule = !0, f1.default = function(t, e) {
            if (t && e) {
                var n = Array.isArray(e) ? e : e.split(",");
                if (n.length === 0) return !0;
                var r = t.name || "", i = (t.type || "").toLowerCase(), s = i.replace(/\/.*$/, "");
                return n.some(function(o) {
                    var a = o.trim().toLowerCase();
                    return a.charAt(0) === "." ? r.toLowerCase().endsWith(a) : a.endsWith("/*") ? s === a.replace(/\/.*$/, "") : i === a;
                });
            }
            return !0;
        }), f1;
    }
    var Ese = Sse();
    const iI = Go(Ese);
    function _4(t) {
        return Cse(t) || Tse(t) || Rz(t) || Mse();
    }
    function Mse() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function Tse(t) {
        if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
    }
    function Cse(t) {
        if (Array.isArray(t)) return f3(t);
    }
    function S4(t, e) {
        var n = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(t);
            e && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(t, i).enumerable;
            })), n.push.apply(n, r);
        }
        return n;
    }
    function E4(t) {
        for(var e = 1; e < arguments.length; e++){
            var n = arguments[e] != null ? arguments[e] : {};
            e % 2 ? S4(Object(n), !0).forEach(function(r) {
                Cz(t, r, n[r]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : S4(Object(n)).forEach(function(r) {
                Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
            });
        }
        return t;
    }
    function Cz(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n, t;
    }
    function Ob(t, e) {
        return Ase(t) || Ise(t, e) || Rz(t, e) || Rse();
    }
    function Rse() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function Rz(t, e) {
        if (t) {
            if (typeof t == "string") return f3(t, e);
            var n = Object.prototype.toString.call(t).slice(8, -1);
            if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set") return Array.from(t);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return f3(t, e);
        }
    }
    function f3(t, e) {
        (e == null || e > t.length) && (e = t.length);
        for(var n = 0, r = new Array(e); n < e; n++)r[n] = t[n];
        return r;
    }
    function Ise(t, e) {
        var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
        if (n != null) {
            var r = [], i = !0, s = !1, o, a;
            try {
                for(n = n.call(t); !(i = (o = n.next()).done) && (r.push(o.value), !(e && r.length === e)); i = !0);
            } catch (l) {
                s = !0, a = l;
            } finally{
                try {
                    !i && n.return != null && n.return();
                } finally{
                    if (s) throw a;
                }
            }
            return r;
        }
    }
    function Ase(t) {
        if (Array.isArray(t)) return t;
    }
    var Nse = typeof iI == "function" ? iI : iI.default, Iz = "file-invalid-type", Az = "file-too-large", Nz = "file-too-small", Pz = "too-many-files", Pse = {
        FileInvalidType: Iz,
        FileTooLarge: Az,
        FileTooSmall: Nz,
        TooManyFiles: Pz
    }, kse = function() {
        var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = e.split(","), r = n.length > 1 ? "one of ".concat(n.join(", ")) : n[0];
        return {
            code: Iz,
            message: "File type must be ".concat(r)
        };
    }, M4 = function(e) {
        return {
            code: Az,
            message: "File is larger than ".concat(e, " ").concat(e === 1 ? "byte" : "bytes")
        };
    }, T4 = function(e) {
        return {
            code: Nz,
            message: "File is smaller than ".concat(e, " ").concat(e === 1 ? "byte" : "bytes")
        };
    }, Ose = {
        code: Pz,
        message: "Too many files"
    };
    function kz(t, e) {
        var n = t.type === "application/x-moz-file" || Nse(t, e);
        return [
            n,
            n ? null : kse(e)
        ];
    }
    function Oz(t, e, n) {
        if (Hp(t.size)) if (Hp(e) && Hp(n)) {
            if (t.size > n) return [
                !1,
                M4(n)
            ];
            if (t.size < e) return [
                !1,
                T4(e)
            ];
        } else {
            if (Hp(e) && t.size < e) return [
                !1,
                T4(e)
            ];
            if (Hp(n) && t.size > n) return [
                !1,
                M4(n)
            ];
        }
        return [
            !0,
            null
        ];
    }
    function Hp(t) {
        return t != null;
    }
    function Dse(t) {
        var e = t.files, n = t.accept, r = t.minSize, i = t.maxSize, s = t.multiple, o = t.maxFiles, a = t.validator;
        return !s && e.length > 1 || s && o >= 1 && e.length > o ? !1 : e.every(function(l) {
            var c = kz(l, n), u = Ob(c, 1), f = u[0], h = Oz(l, r, i), m = Ob(h, 1), v = m[0], _ = a ? a(l) : null;
            return f && v && !_;
        });
    }
    function oM(t) {
        return typeof t.isPropagationStopped == "function" ? t.isPropagationStopped() : typeof t.cancelBubble < "u" ? t.cancelBubble : !1;
    }
    function h1(t) {
        return t.dataTransfer ? Array.prototype.some.call(t.dataTransfer.types, function(e) {
            return e === "Files" || e === "application/x-moz-file";
        }) : !!t.target && !!t.target.files;
    }
    function C4(t) {
        t.preventDefault();
    }
    function Lse(t) {
        return t.indexOf("MSIE") !== -1 || t.indexOf("Trident/") !== -1;
    }
    function Fse(t) {
        return t.indexOf("Edge/") !== -1;
    }
    function jse() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
        return Lse(t) || Fse(t);
    }
    function $c() {
        for(var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n];
        return function(r) {
            for(var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)s[o - 1] = arguments[o];
            return e.some(function(a) {
                return !oM(r) && a && a.apply(void 0, [
                    r
                ].concat(s)), oM(r);
            });
        };
    }
    function Bse() {
        return "showOpenFilePicker" in window;
    }
    function Use(t) {
        if (Hp(t)) {
            var e = Object.entries(t).filter(function(n) {
                var r = Ob(n, 2), i = r[0], s = r[1], o = !0;
                return Dz(i) || (console.warn('Skipped "'.concat(i, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')), o = !1), (!Array.isArray(s) || !s.every(Lz)) && (console.warn('Skipped "'.concat(i, '" because an invalid file extension was provided.')), o = !1), o;
            }).reduce(function(n, r) {
                var i = Ob(r, 2), s = i[0], o = i[1];
                return E4(E4({}, n), {}, Cz({}, s, o));
            }, {});
            return [
                {
                    description: "Files",
                    accept: e
                }
            ];
        }
        return t;
    }
    function zse(t) {
        if (Hp(t)) return Object.entries(t).reduce(function(e, n) {
            var r = Ob(n, 2), i = r[0], s = r[1];
            return [].concat(_4(e), [
                i
            ], _4(s));
        }, []).filter(function(e) {
            return Dz(e) || Lz(e);
        }).join(",");
    }
    function Vse(t) {
        return t instanceof DOMException && (t.name === "AbortError" || t.code === t.ABORT_ERR);
    }
    function Wse(t) {
        return t instanceof DOMException && (t.name === "SecurityError" || t.code === t.SECURITY_ERR);
    }
    function Dz(t) {
        return t === "audio/*" || t === "video/*" || t === "image/*" || t === "text/*" || t === "application/*" || /\w+\/[-+.\w]+/g.test(t);
    }
    function Lz(t) {
        return /^.*\.[\w]+$/.test(t);
    }
    var qse = [
        "children"
    ], Hse = [
        "open"
    ], $se = [
        "refKey",
        "role",
        "onKeyDown",
        "onFocus",
        "onBlur",
        "onClick",
        "onDragEnter",
        "onDragOver",
        "onDragLeave",
        "onDrop"
    ], Gse = [
        "refKey",
        "onChange",
        "onClick"
    ];
    function Xse(t) {
        return Zse(t) || Yse(t) || Fz(t) || Kse();
    }
    function Kse() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function Yse(t) {
        if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
    }
    function Zse(t) {
        if (Array.isArray(t)) return h3(t);
    }
    function sI(t, e) {
        return eoe(t) || Qse(t, e) || Fz(t, e) || Jse();
    }
    function Jse() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function Fz(t, e) {
        if (t) {
            if (typeof t == "string") return h3(t, e);
            var n = Object.prototype.toString.call(t).slice(8, -1);
            if (n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set") return Array.from(t);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return h3(t, e);
        }
    }
    function h3(t, e) {
        (e == null || e > t.length) && (e = t.length);
        for(var n = 0, r = new Array(e); n < e; n++)r[n] = t[n];
        return r;
    }
    function Qse(t, e) {
        var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
        if (n != null) {
            var r = [], i = !0, s = !1, o, a;
            try {
                for(n = n.call(t); !(i = (o = n.next()).done) && (r.push(o.value), !(e && r.length === e)); i = !0);
            } catch (l) {
                s = !0, a = l;
            } finally{
                try {
                    !i && n.return != null && n.return();
                } finally{
                    if (s) throw a;
                }
            }
            return r;
        }
    }
    function eoe(t) {
        if (Array.isArray(t)) return t;
    }
    function R4(t, e) {
        var n = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(t);
            e && (r = r.filter(function(i) {
                return Object.getOwnPropertyDescriptor(t, i).enumerable;
            })), n.push.apply(n, r);
        }
        return n;
    }
    function ui(t) {
        for(var e = 1; e < arguments.length; e++){
            var n = arguments[e] != null ? arguments[e] : {};
            e % 2 ? R4(Object(n), !0).forEach(function(r) {
                p3(t, r, n[r]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : R4(Object(n)).forEach(function(r) {
                Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
            });
        }
        return t;
    }
    function p3(t, e, n) {
        return e in t ? Object.defineProperty(t, e, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = n, t;
    }
    function aM(t, e) {
        if (t == null) return {};
        var n = toe(t, e), r, i;
        if (Object.getOwnPropertySymbols) {
            var s = Object.getOwnPropertySymbols(t);
            for(i = 0; i < s.length; i++)r = s[i], !(e.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }
    function toe(t, e) {
        if (t == null) return {};
        var n = {}, r = Object.keys(t), i, s;
        for(s = 0; s < r.length; s++)i = r[s], !(e.indexOf(i) >= 0) && (n[i] = t[i]);
        return n;
    }
    var XT = J.forwardRef(function(t, e) {
        var n = t.children, r = aM(t, qse), i = Bz(r), s = i.open, o = aM(i, Hse);
        return J.useImperativeHandle(e, function() {
            return {
                open: s
            };
        }, [
            s
        ]), lr.createElement(J.Fragment, null, n(ui(ui({}, o), {}, {
            open: s
        })));
    });
    XT.displayName = "Dropzone";
    var jz = {
        disabled: !1,
        getFilesFromEvent: pse,
        maxSize: 1 / 0,
        minSize: 0,
        multiple: !0,
        maxFiles: 0,
        preventDropOnDocument: !0,
        noClick: !1,
        noKeyboard: !1,
        noDrag: !1,
        noDragEventsBubbling: !1,
        validator: null,
        useFsAccessApi: !1,
        autoFocus: !1
    };
    XT.defaultProps = jz;
    XT.propTypes = {
        children: Nr.func,
        accept: Nr.objectOf(Nr.arrayOf(Nr.string)),
        multiple: Nr.bool,
        preventDropOnDocument: Nr.bool,
        noClick: Nr.bool,
        noKeyboard: Nr.bool,
        noDrag: Nr.bool,
        noDragEventsBubbling: Nr.bool,
        minSize: Nr.number,
        maxSize: Nr.number,
        maxFiles: Nr.number,
        disabled: Nr.bool,
        getFilesFromEvent: Nr.func,
        onFileDialogCancel: Nr.func,
        onFileDialogOpen: Nr.func,
        useFsAccessApi: Nr.bool,
        autoFocus: Nr.bool,
        onDragEnter: Nr.func,
        onDragLeave: Nr.func,
        onDragOver: Nr.func,
        onDrop: Nr.func,
        onDropAccepted: Nr.func,
        onDropRejected: Nr.func,
        onError: Nr.func,
        validator: Nr.func
    };
    var m3 = {
        isFocused: !1,
        isFileDialogActive: !1,
        isDragActive: !1,
        isDragAccept: !1,
        isDragReject: !1,
        acceptedFiles: [],
        fileRejections: []
    };
    function Bz() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = ui(ui({}, jz), t), n = e.accept, r = e.disabled, i = e.getFilesFromEvent, s = e.maxSize, o = e.minSize, a = e.multiple, l = e.maxFiles, c = e.onDragEnter, u = e.onDragLeave, f = e.onDragOver, h = e.onDrop, m = e.onDropAccepted, v = e.onDropRejected, _ = e.onFileDialogCancel, w = e.onFileDialogOpen, b = e.useFsAccessApi, M = e.autoFocus, E = e.preventDropOnDocument, T = e.noClick, P = e.noKeyboard, A = e.noDrag, O = e.noDragEventsBubbling, D = e.onError, R = e.validator, N = J.useMemo(function() {
            return zse(n);
        }, [
            n
        ]), k = J.useMemo(function() {
            return Use(n);
        }, [
            n
        ]), U = J.useMemo(function() {
            return typeof w == "function" ? w : I4;
        }, [
            w
        ]), B = J.useMemo(function() {
            return typeof _ == "function" ? _ : I4;
        }, [
            _
        ]), j = J.useRef(null), K = J.useRef(null), q = J.useReducer(noe, m3), ee = sI(q, 2), W = ee[0], Z = ee[1], $ = W.isFocused, H = W.isFileDialogActive, se = J.useRef(typeof window < "u" && window.isSecureContext && b && Bse()), le = function() {
            !se.current && H && setTimeout(function() {
                if (K.current) {
                    var me = K.current.files;
                    me.length || (Z({
                        type: "closeDialog"
                    }), B());
                }
            }, 300);
        };
        J.useEffect(function() {
            return window.addEventListener("focus", le, !1), function() {
                window.removeEventListener("focus", le, !1);
            };
        }, [
            K,
            H,
            B,
            se
        ]);
        var ne = J.useRef([]), ue = function(me) {
            j.current && j.current.contains(me.target) || (me.preventDefault(), ne.current = []);
        };
        J.useEffect(function() {
            return E && (document.addEventListener("dragover", C4, !1), document.addEventListener("drop", ue, !1)), function() {
                E && (document.removeEventListener("dragover", C4), document.removeEventListener("drop", ue));
            };
        }, [
            j,
            E
        ]), J.useEffect(function() {
            return !r && M && j.current && j.current.focus(), function() {};
        }, [
            j,
            M,
            r
        ]);
        var ge = J.useCallback(function(pe) {
            D ? D(pe) : console.error(pe);
        }, [
            D
        ]), ye = J.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), ae(pe), ne.current = [].concat(Xse(ne.current), [
                pe.target
            ]), h1(pe) && Promise.resolve(i(pe)).then(function(me) {
                if (!(oM(pe) && !O)) {
                    var Ie = me.length, Xe = Ie > 0 && Dse({
                        files: me,
                        accept: N,
                        minSize: o,
                        maxSize: s,
                        multiple: a,
                        maxFiles: l,
                        validator: R
                    }), Ze = Ie > 0 && !Xe;
                    Z({
                        isDragAccept: Xe,
                        isDragReject: Ze,
                        isDragActive: !0,
                        type: "setDraggedFiles"
                    }), c && c(pe);
                }
            }).catch(function(me) {
                return ge(me);
            });
        }, [
            i,
            c,
            ge,
            O,
            N,
            o,
            s,
            a,
            l,
            R
        ]), _e = J.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), ae(pe);
            var me = h1(pe);
            if (me && pe.dataTransfer) try {
                pe.dataTransfer.dropEffect = "copy";
            } catch  {}
            return me && f && f(pe), !1;
        }, [
            f,
            O
        ]), Te = J.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), ae(pe);
            var me = ne.current.filter(function(Xe) {
                return j.current && j.current.contains(Xe);
            }), Ie = me.indexOf(pe.target);
            Ie !== -1 && me.splice(Ie, 1), ne.current = me, !(me.length > 0) && (Z({
                type: "setDraggedFiles",
                isDragActive: !1,
                isDragAccept: !1,
                isDragReject: !1
            }), h1(pe) && u && u(pe));
        }, [
            j,
            u,
            O
        ]), Re = J.useCallback(function(pe, me) {
            var Ie = [], Xe = [];
            pe.forEach(function(Ze) {
                var at = kz(Ze, N), Je = sI(at, 2), Pe = Je[0], je = Je[1], rt = Oz(Ze, o, s), ct = sI(rt, 2), st = ct[0], Se = ct[1], $e = R ? R(Ze) : null;
                if (Pe && st && !$e) Ie.push(Ze);
                else {
                    var ht = [
                        je,
                        Se
                    ];
                    $e && (ht = ht.concat($e)), Xe.push({
                        file: Ze,
                        errors: ht.filter(function(Ee) {
                            return Ee;
                        })
                    });
                }
            }), (!a && Ie.length > 1 || a && l >= 1 && Ie.length > l) && (Ie.forEach(function(Ze) {
                Xe.push({
                    file: Ze,
                    errors: [
                        Ose
                    ]
                });
            }), Ie.splice(0)), Z({
                acceptedFiles: Ie,
                fileRejections: Xe,
                isDragReject: Xe.length > 0,
                type: "setFiles"
            }), h && h(Ie, Xe, me), Xe.length > 0 && v && v(Xe, me), Ie.length > 0 && m && m(Ie, me);
        }, [
            Z,
            a,
            N,
            o,
            s,
            l,
            h,
            m,
            v,
            R
        ]), Fe = J.useCallback(function(pe) {
            pe.preventDefault(), pe.persist(), ae(pe), ne.current = [], h1(pe) && Promise.resolve(i(pe)).then(function(me) {
                oM(pe) && !O || Re(me, pe);
            }).catch(function(me) {
                return ge(me);
            }), Z({
                type: "reset"
            });
        }, [
            i,
            Re,
            ge,
            O
        ]), be = J.useCallback(function() {
            if (se.current) {
                Z({
                    type: "openDialog"
                }), U();
                var pe = {
                    multiple: a,
                    types: k
                };
                window.showOpenFilePicker(pe).then(function(me) {
                    return i(me);
                }).then(function(me) {
                    Re(me, null), Z({
                        type: "closeDialog"
                    });
                }).catch(function(me) {
                    Vse(me) ? (B(me), Z({
                        type: "closeDialog"
                    })) : Wse(me) ? (se.current = !1, K.current ? (K.current.value = null, K.current.click()) : ge(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."))) : ge(me);
                });
                return;
            }
            K.current && (Z({
                type: "openDialog"
            }), U(), K.current.value = null, K.current.click());
        }, [
            Z,
            U,
            B,
            b,
            Re,
            ge,
            k,
            a
        ]), Me = J.useCallback(function(pe) {
            !j.current || !j.current.isEqualNode(pe.target) || (pe.key === " " || pe.key === "Enter" || pe.keyCode === 32 || pe.keyCode === 13) && (pe.preventDefault(), be());
        }, [
            j,
            be
        ]), oe = J.useCallback(function() {
            Z({
                type: "focus"
            });
        }, []), Ye = J.useCallback(function() {
            Z({
                type: "blur"
            });
        }, []), Be = J.useCallback(function() {
            T || (jse() ? setTimeout(be, 0) : be());
        }, [
            T,
            be
        ]), nt = function(me) {
            return r ? null : me;
        }, de = function(me) {
            return P ? null : nt(me);
        }, ce = function(me) {
            return A ? null : nt(me);
        }, ae = function(me) {
            O && me.stopPropagation();
        }, X = J.useMemo(function() {
            return function() {
                var pe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, me = pe.refKey, Ie = me === void 0 ? "ref" : me, Xe = pe.role, Ze = pe.onKeyDown, at = pe.onFocus, Je = pe.onBlur, Pe = pe.onClick, je = pe.onDragEnter, rt = pe.onDragOver, ct = pe.onDragLeave, st = pe.onDrop, Se = aM(pe, $se);
                return ui(ui(p3({
                    onKeyDown: de($c(Ze, Me)),
                    onFocus: de($c(at, oe)),
                    onBlur: de($c(Je, Ye)),
                    onClick: nt($c(Pe, Be)),
                    onDragEnter: ce($c(je, ye)),
                    onDragOver: ce($c(rt, _e)),
                    onDragLeave: ce($c(ct, Te)),
                    onDrop: ce($c(st, Fe)),
                    role: typeof Xe == "string" && Xe !== "" ? Xe : "presentation"
                }, Ie, j), !r && !P ? {
                    tabIndex: 0
                } : {}), Se);
            };
        }, [
            j,
            Me,
            oe,
            Ye,
            Be,
            ye,
            _e,
            Te,
            Fe,
            P,
            A,
            r
        ]), G = J.useCallback(function(pe) {
            pe.stopPropagation();
        }, []), he = J.useMemo(function() {
            return function() {
                var pe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, me = pe.refKey, Ie = me === void 0 ? "ref" : me, Xe = pe.onChange, Ze = pe.onClick, at = aM(pe, Gse), Je = p3({
                    accept: N,
                    multiple: a,
                    type: "file",
                    style: {
                        border: 0,
                        clip: "rect(0, 0, 0, 0)",
                        clipPath: "inset(50%)",
                        height: "1px",
                        margin: "0 -1px -1px 0",
                        overflow: "hidden",
                        padding: 0,
                        position: "absolute",
                        width: "1px",
                        whiteSpace: "nowrap"
                    },
                    onChange: nt($c(Xe, Fe)),
                    onClick: nt($c(Ze, G)),
                    tabIndex: -1
                }, Ie, K);
                return ui(ui({}, Je), at);
            };
        }, [
            K,
            n,
            a,
            Fe,
            r
        ]);
        return ui(ui({}, W), {}, {
            isFocused: $ && !r,
            getRootProps: X,
            getInputProps: he,
            rootRef: j,
            inputRef: K,
            open: nt(be)
        });
    }
    function noe(t, e) {
        switch(e.type){
            case "focus":
                return ui(ui({}, t), {}, {
                    isFocused: !0
                });
            case "blur":
                return ui(ui({}, t), {}, {
                    isFocused: !1
                });
            case "openDialog":
                return ui(ui({}, m3), {}, {
                    isFileDialogActive: !0
                });
            case "closeDialog":
                return ui(ui({}, t), {}, {
                    isFileDialogActive: !1
                });
            case "setDraggedFiles":
                return ui(ui({}, t), {}, {
                    isDragActive: e.isDragActive,
                    isDragAccept: e.isDragAccept,
                    isDragReject: e.isDragReject
                });
            case "setFiles":
                return ui(ui({}, t), {}, {
                    acceptedFiles: e.acceptedFiles,
                    fileRejections: e.fileRejections,
                    isDragReject: e.isDragReject
                });
            case "reset":
                return ui({}, m3);
            default:
                return t;
        }
    }
    function I4() {}
    const roe = Object.freeze(Object.defineProperty({
        __proto__: null,
        ErrorCode: Pse,
        default: XT,
        useDropzone: Bz
    }, Symbol.toStringTag, {
        value: "Module"
    })), ioe = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-center",
                "w-full"
            ],
            label: [
                "flex",
                "flex-col",
                "items-center",
                "justify-center",
                "w-full",
                "h-64",
                "border-2",
                "border-gray-300",
                "border-dashed",
                "rounded-lg",
                "cursor-pointer",
                "bg-gray-50",
                "hover:bg-gray-100"
            ],
            zone: [
                "flex",
                "flex-col",
                "items-center",
                "justify-center",
                "pt-5",
                "pb-6",
                "text-slate-500"
            ],
            content: []
        },
        variant: {
            active: {
                true: []
            },
            rejected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    active: !0
                },
                then: {
                    label: [
                        "text-blue-400"
                    ],
                    zone: [
                        "text-blue-400"
                    ]
                }
            },
            {
                if: {
                    rejected: !0
                },
                then: {
                    label: [
                        "text-red-400"
                    ],
                    zone: [
                        "text-red-400"
                    ]
                }
            }
        ],
        defaults: {
            active: !1,
            rejected: !1
        }
    }), { useDropzone: soe } = roe, ooe = ({ id: t, accept: e, textTile: n, textMessage: r, variant: i, tva: s = ioe, css: o, children: a, onDropAccepted: l, ...c })=>{
        const [u, f] = J.useState([]), { getRootProps: h, getInputProps: m, isDragActive: v, isDragReject: _ } = soe({
            noClick: !0,
            multiple: !1,
            accept: e,
            maxFiles: 1,
            minSize: 0,
            maxSize: 8 * 1024 ** 2,
            onDropAccepted (b, M) {
                f(b), l?.(b, M);
            },
            onError (b) {
                console.error(b);
            },
            ...c
        }), w = s({
            active: v,
            rejected: _,
            ...i,
            css: o
        }).slots;
        return x.jsx("div", {
            ...h(),
            className: w.base(),
            children: a && u && u.length > 0 ? x.jsx("div", {
                className: w.content(),
                children: x.jsx(a, {
                    files: u,
                    clear: ()=>{
                        f([]);
                    },
                    remove: (b)=>{
                        f(u.filter((M)=>M !== b));
                    }
                })
            }) : x.jsxs("label", {
                htmlFor: t,
                className: w.label(),
                children: [
                    x.jsxs("div", {
                        className: w.zone(),
                        children: [
                            x.jsx(_n, {
                                icon: Qie,
                                variant: {
                                    size: "4xl"
                                }
                            }),
                            x.jsx("div", {
                                className: "mb-2 text-sm font-semibold",
                                children: n || _a.rich("Drag 'n' drop a file here")
                            }),
                            r ? x.jsx("div", {
                                className: "text-xs",
                                children: r
                            }) : null
                        ]
                    }),
                    x.jsx("input", {
                        id: t,
                        type: "file",
                        className: "hidden",
                        ...m()
                    })
                ]
            })
        });
    }, aoe = Nn({
        slot: {
            base: [
                "min-h-screen",
                "flex",
                "flex-col"
            ],
            header: [
                "flex",
                "flex-row",
                "items-center",
                "bg-slate-50",
                "shadow-xs",
                "border-b",
                "border-b-slate-200",
                "w-full",
                "gap-4",
                "p-4"
            ],
            content: [
                "grow",
                "h-full",
                "border-b",
                "border-b-slate-200",
                "p-2"
            ]
        },
        variant: {},
        defaults: {}
    }), Uz = ({ logo: t, menu: e, actions: n, variant: r, tva: i = aoe, css: s, children: o })=>{
        const a = i({
            ...r,
            css: s
        }).slots;
        return x.jsxs("div", {
            className: a.base(),
            children: [
                x.jsx(BB, {
                    position: "top-right"
                }),
                x.jsxs("div", {
                    className: a.header(),
                    children: [
                        x.jsx("div", {
                            children: t
                        }),
                        x.jsx("div", {
                            className: "grow",
                            children: e
                        }),
                        x.jsx("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: n
                        })
                    ]
                }),
                x.jsx("div", {
                    className: a.content(),
                    children: o ?? x.jsx(Al, {})
                })
            ]
        });
    }, loe = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "text-blue-500",
                "rounded-sm",
                "px-1",
                "py-0.5",
                "hover:text-blue-700",
                "focus:outline-hidden",
                "w-fit"
            ]
        },
        variant: {},
        defaults: {}
    }), coe = J.forwardRef(({ icon: t, iconProps: e, variant: n, tva: r = loe, css: i, children: s, ...o }, a)=>{
        const l = r({
            ...n,
            css: i
        }).slots;
        return x.jsxs("a", {
            ...o,
            ref: a,
            className: l.base(),
            children: [
                mw(t) ? x.jsx(_n, {
                    icon: t,
                    ...e
                }) : t,
                s
            ]
        });
    }), uoe = kB(coe), It = (t)=>x.jsx(uoe, {
            preload: "intent",
            ...t
        }), doe = Nn({
        slot: {
            base: [
                "fixed",
                "inset-0",
                "h-full",
                "items-center",
                "justify-center",
                "bg-slate-100",
                "flex",
                "transition-all",
                "duration-200",
                "z-10",
                "pointer-events-none",
                "bg-opacity-0",
                "backdrop-blur-none"
            ]
        },
        variant: {
            show: {
                true: [
                    "bg-opacity-50",
                    "backdrop-blur-xs",
                    "pointer-events-auto"
                ]
            }
        },
        defaults: {
            show: !0
        }
    }), foe = ({ show: t = !0, variant: e, tva: n = doe, css: r })=>{
        const i = n({
            show: t,
            ...e,
            css: r
        }).slots;
        return t ? x.jsx("div", {
            className: i.base(),
            children: x.jsx(_n, {
                icon: "icon-[svg-spinners--pulse-rings-multiple]",
                variant: {
                    size: "8xl"
                },
                css: {
                    base: [
                        "text-sky-400"
                    ]
                }
            })
        }) : null;
    };
    var FS = {
        exports: {}
    }, hoe = FS.exports, A4;
    function poe() {
        return A4 || (A4 = 1, function(t, e) {
            (function(n, r) {
                t.exports = r();
            })(hoe, ()=>(()=>{
                    var n = {
                        d: (v, _)=>{
                            for(var w in _)n.o(_, w) && !n.o(v, w) && Object.defineProperty(v, w, {
                                enumerable: !0,
                                get: _[w]
                            });
                        },
                        o: (v, _)=>Object.prototype.hasOwnProperty.call(v, _)
                    }, r = {};
                    n.d(r, {
                        default: ()=>m
                    });
                    const i = (...v)=>{}, s = (v)=>v !== null && v?.constructor.name === "Object";
                    let o, a;
                    const l = ()=>{
                        if (!o) {
                            o = !0;
                            try {
                                a = f.storage || localStorage, a.getItem("");
                            } catch  {
                                a = (()=>{
                                    const v = {
                                        getItem: (w)=>_[w] || null,
                                        setItem: (w, b)=>{
                                            _[w] = b;
                                        },
                                        removeItem: (w)=>{
                                            _[w] = void 0;
                                        },
                                        clear: ()=>{
                                            _ = {
                                                __proto__: v
                                            };
                                        }
                                    };
                                    let _ = {
                                        __proto__: v
                                    };
                                    return _;
                                })();
                            }
                            h();
                        }
                    }, c = "\0", u = (v, _, w = !0)=>w ? [
                            ...JSON.stringify(v)
                        ].map((b)=>String.fromCharCode(b.charCodeAt(0) + _)).join("") : JSON.parse([
                            ...v
                        ].map((b)=>String.fromCharCode(b.charCodeAt(0) - _)).join("")), f = {
                        ttl: null,
                        encrypt: !1,
                        encrypter: u,
                        decrypter: (v, _)=>u(v, _, !1),
                        secret: 75,
                        storage: void 0
                    };
                    Object.seal(f);
                    const h = (v = !1)=>{
                        l();
                        for (const _ of Object.keys(a)){
                            const w = a.getItem(_);
                            let b;
                            try {
                                b = JSON.parse(w || "");
                            } catch  {
                                continue;
                            }
                            s(b) && c in b && (Date.now() > b.ttl || v) && a.removeItem(_);
                        }
                    }, m = {
                        config: f,
                        set: (v, _, w = {})=>{
                            l();
                            const b = {
                                ...f,
                                ...w,
                                encrypt: w.encrypt !== !1 && (w.encrypt || f.encrypt),
                                ttl: w.ttl === null ? null : w.ttl || f.ttl
                            };
                            try {
                                const M = b.ttl && !isNaN(b.ttl) && b.ttl > 0;
                                let E = M ? {
                                    [c]: _,
                                    ttl: Date.now() + 1e3 * b.ttl
                                } : _;
                                b.encrypt && (M ? E[c] = (b.encrypter || i)(E[c], b.secret) : E = (b.encrypter || i)(E, b.secret)), a.setItem(v, JSON.stringify(E));
                            } catch  {
                                return !1;
                            }
                        },
                        get: (v, _ = {})=>{
                            l();
                            const w = a.getItem(v), b = {
                                ...f,
                                ..._,
                                encrypt: _.encrypt !== !1 && (_.encrypt || f.encrypt),
                                ttl: _.ttl === null ? null : _.ttl || f.ttl
                            };
                            let M, E;
                            try {
                                M = JSON.parse(w || ""), E = s(M) && c in M, (b.decrypt || b.encrypt) && (E ? M[c] = (b.decrypter || i)(M[c], b.secret) : M = (b.decrypter || i)(M, b.secret));
                            } catch  {}
                            return E ? Date.now() > M.ttl ? (a.removeItem(v), null) : M[c] : M !== void 0 ? M : w;
                        },
                        flush: h,
                        clear: ()=>{
                            l(), a.clear();
                        },
                        remove: (v)=>{
                            l(), a.removeItem(v);
                        }
                    };
                    return r.default;
                })());
        }(FS)), FS.exports;
    }
    var moe = poe();
    const goe = Go(moe), jy = goe, yoe = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center"
            ]
        },
        variant: {},
        defaults: {}
    }), Bm = J.memo(({ variant: t, tva: e = yoe, css: n, children: r })=>{
        const i = e({
            ...t,
            css: n
        }).slots;
        return x.jsx("div", {
            className: i.base(),
            children: r
        });
    }), zz = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "rounded-sm",
                "px-2",
                "py-1",
                "border",
                "border-b-2",
                "border-transparent",
                "hover:text-slate-500"
            ]
        },
        variant: {
            active: {
                true: []
            },
            inner: {
                true: []
            },
            subtle: {
                true: []
            }
        },
        match: [
            {
                if: {
                    active: !0,
                    inner: !1
                },
                then: {
                    base: [
                        "border",
                        "border-b-2",
                        "border-blue-400",
                        "bg-blue-50",
                        "hover:border-blue-500",
                        "text-slate-800",
                        "hover:text-blue-800"
                    ]
                }
            },
            {
                if: {
                    active: !0,
                    inner: !0
                },
                then: {
                    base: [
                        "border-none",
                        "text-blue-600",
                        "hover:text-blue-800"
                    ]
                }
            },
            {
                if: {
                    subtle: !0
                },
                then: {
                    base: [
                        "hover:bg-slate-50",
                        "hover:border-slate-300",
                        "hover:text-slate-600"
                    ]
                }
            },
            {
                if: {
                    active: !0,
                    subtle: !0
                },
                then: {
                    base: [
                        "bg-slate-100",
                        "border-slate-400"
                    ]
                }
            }
        ],
        defaults: {
            active: !1,
            inner: !1,
            subtle: !1
        }
    }), voe = J.forwardRef(({ icon: t = null, variant: e, tva: n = zz, css: r, children: i, ...s }, o)=>{
        const a = n({
            ...e,
            css: r
        }).slots;
        return x.jsxs("a", {
            ...s,
            className: a.base(),
            ref: o,
            children: [
                mw(t) ? x.jsx(_n, {
                    icon: t
                }) : t,
                i
            ]
        });
    }), xoe = kB(voe), Or = ({ match: t = [], variant: e, tva: n = zz, css: r, ...i })=>{
        const s = LX(), o = t.some((a)=>!!s(a));
        return x.jsx(xoe, {
            preload: "intent",
            variant: {
                active: !!s({
                    to: i.to,
                    params: i.params
                }) || o,
                ...e
            },
            tva: n,
            css: r,
            ...i
        });
    }, boe = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "flex-wrap",
                "items-center",
                "gap-2",
                "text-sm",
                "font-semibold"
            ],
            item: [
                "border",
                "border-blue-200",
                "bg-blue-50",
                "rounded-md",
                "px-2",
                "py-1"
            ]
        },
        variant: {},
        defaults: {}
    }), wh = ({ icon: t = cz, iconProps: e, textTitle: n, textEmpty: r, items: i, render: s, limit: o, variant: a, tva: l = boe, css: c })=>{
        const u = o === void 0 ? i : i.slice(0, o), f = l({
            ...a,
            css: c
        }).slots;
        return x.jsxs("div", {
            className: f.base(),
            children: [
                i.length ? null : r,
                u.map((h)=>x.jsx(s, {
                        entity: h
                    }, `items-${h.id}`)),
                o !== void 0 && i.length > o && x.jsx(Fm, {
                    textTitle: n,
                    target: x.jsx(Iw, {
                        iconEnabled: t,
                        iconProps: e
                    }),
                    outside: !0,
                    children: x.jsx("div", {
                        className: "flex flex-col gap-2",
                        children: i.map((h)=>x.jsx(s, {
                                entity: h
                            }, `items-${h.id}`))
                    })
                })
            ]
        });
    }, Vz = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2"
            ],
            input: [
                "py-2",
                "px-2",
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "cursor-pointer",
                "hover:bg-slate-50",
                "border",
                "border-gray-300",
                "rounded-md",
                "text-slate-400",
                "hover:text-slate-700",
                "focus:outline-hidden",
                "focus:ring-2",
                "focus:ring-blue-500",
                "focus:border-transparent"
            ],
            content: [],
            footer: [
                "flex",
                "items-center",
                "justify-between",
                "gap-2",
                "border-t-2",
                "border-slate-100",
                "mt-4",
                "pt-2"
            ]
        },
        variant: {
            loading: {
                true: []
            },
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    loading: !0
                },
                then: {
                    input: [
                        "text-slate-300"
                    ]
                }
            },
            {
                if: {
                    selected: !0
                },
                then: {
                    input: [
                        "bg-slate-50",
                        "text-slate-700",
                        "hover:bg-slate-100",
                        "hover:text-slate-800"
                    ]
                }
            }
        ],
        defaults: {
            loading: !1,
            selected: !1
        }
    }), woe = Nn({
        use: Vz,
        slot: {},
        variant: {},
        defaults: {}
    }), Wz = ({ icon: t, textTitle: e, textSelect: n, modalProps: r, table: i, render: s, allowEmpty: o = !1, queryKey: a, queryHash: l, query: c, value: u, onChange: f, onSelect: h, variant: m, tva: v = woe, css: _ })=>{
        const w = v({
            ...m,
            css: _
        }).slots, [b, M] = J.useState(0), [E, T] = J.useState(15), [P, A] = J.useState(u || []), [O, D] = J.useState(""), R = yE({
            queryKey: [
                a,
                "PopupMultiSelect",
                "data",
                {
                    fulltext: O,
                    page: b,
                    size: E,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        fulltext: O
                    },
                    cursor: {
                        page: b,
                        size: E
                    }
                });
            }
        }), N = (u?.length || 0) > 0, k = yE({
            queryKey: [
                a,
                "PopupMultiSelect",
                "selected",
                {
                    value: u,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        idIn: u || void 0
                    }
                });
            },
            enabled: N
        });
        return J.useEffect(()=>{
            A(u || []);
        }, [
            u
        ]), x.jsx(Fm, {
            icon: t,
            target: x.jsxs("label", {
                className: w.input({
                    loading: k.isLoading,
                    selected: !!k.data?.data.length
                }),
                children: [
                    x.jsx(_n, {
                        icon: k.isLoading ? ik : N && k.data?.data?.[0] ? $T : HT
                    }),
                    N && k.data && k.data.data.length ? x.jsx(s, {
                        entities: k.data.data
                    }) : n || x.jsx(re, {
                        label: "Select item (label)"
                    })
                ]
            }),
            textTitle: e,
            variant: {
                loading: R.isLoading
            },
            disabled: R.isLoading,
            css: {
                modal: [
                    "w-2/3"
                ]
            },
            ...r,
            children: ({ close: U })=>x.jsxs("div", {
                    className: w.base(),
                    children: [
                        x.jsx("div", {
                            className: w.content(),
                            children: x.jsx(i, {
                                cursor: {
                                    cursor: {
                                        page: b,
                                        size: E
                                    },
                                    count: R.data?.count ? R.data.count : {
                                        filter: -1,
                                        total: -1,
                                        where: -1
                                    },
                                    textTotal: x.jsx(re, {
                                        label: "Total count of items (label)"
                                    }),
                                    onPage (B) {
                                        M(B);
                                    },
                                    onSize (B) {
                                        T(B), M(0);
                                    }
                                },
                                fulltext: {
                                    value: O,
                                    set (B) {
                                        D(B), M(0);
                                    }
                                },
                                table: {
                                    data: R.data?.data ?? [],
                                    selection: {
                                        type: "multi",
                                        value: P,
                                        set (B) {
                                            A(B);
                                        }
                                    }
                                }
                            })
                        }),
                        x.jsxs("div", {
                            className: w.footer(),
                            children: [
                                x.jsx(zn, {
                                    iconEnabled: Ja,
                                    iconDisabled: Ja,
                                    onClick: ()=>{
                                        U(), A(u || []);
                                    },
                                    variant: {
                                        variant: "subtle"
                                    },
                                    children: x.jsx(re, {
                                        label: "Close (label)"
                                    })
                                }),
                                x.jsx(zn, {
                                    iconEnabled: iM,
                                    iconDisabled: iM,
                                    disabled: !P.length && !o,
                                    onClick: ()=>{
                                        f(P), h?.(R.data?.data?.filter((B)=>P.includes(B.id)) || []), U();
                                    },
                                    children: x.jsx(re, {
                                        label: "Confirm selection (label)"
                                    })
                                })
                            ]
                        })
                    ]
                })
        });
    }, qz = ({ icon: t, textTitle: e, textSelect: n, modalProps: r, table: i, render: s, allowEmpty: o = !1, queryKey: a, queryHash: l, query: c, value: u, onChange: f, onSelect: h, variant: m, tva: v = Vz, css: _ })=>{
        const w = v({
            ...m,
            css: _
        }).slots, [b, M] = J.useState(0), [E, T] = J.useState(15), [P, A] = J.useState(u ? [
            u
        ] : []), [O, D] = J.useState(""), R = yE({
            queryKey: [
                a,
                "PopupSelect",
                "data",
                {
                    fulltext: O,
                    page: b,
                    size: E,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        fulltext: O
                    },
                    cursor: {
                        page: b,
                        size: E
                    }
                });
            }
        }), N = !!u, k = yE({
            queryKey: [
                a,
                "PopupSelect",
                "selected",
                {
                    value: u,
                    ...l
                }
            ],
            async queryFn () {
                return c({
                    filter: {
                        id: u ?? void 0
                    }
                });
            },
            enabled: N
        });
        return J.useEffect(()=>{
            A(u ? [
                u
            ] : []);
        }, [
            u
        ]), x.jsx(Fm, {
            icon: t,
            target: x.jsxs("label", {
                className: w.input({
                    loading: k.isLoading,
                    selected: !!k.data?.data.length
                }),
                children: [
                    x.jsx(_n, {
                        icon: k.isLoading ? ik : N && k.data?.data?.[0] ? $T : HT
                    }),
                    N && k.data?.data?.[0] ? x.jsx(s, {
                        entity: k.data?.data?.[0]
                    }) : n || x.jsx(re, {
                        label: "Select item (label)"
                    })
                ]
            }),
            textTitle: e,
            variant: {
                loading: R.isLoading
            },
            disabled: R.isLoading,
            css: {
                modal: [
                    "w-2/3"
                ]
            },
            ...r,
            children: ({ close: U })=>x.jsxs("div", {
                    className: w.base(),
                    children: [
                        x.jsx("div", {
                            className: w.content(),
                            children: x.jsx(i, {
                                cursor: {
                                    cursor: {
                                        page: b,
                                        size: E
                                    },
                                    count: R.data?.count ? R.data.count : {
                                        filter: -1,
                                        total: -1,
                                        where: -1
                                    },
                                    textTotal: x.jsx(re, {
                                        label: "Total count of items (label)"
                                    }),
                                    onPage (B) {
                                        M(B);
                                    },
                                    onSize (B) {
                                        T(B), M(0);
                                    }
                                },
                                fulltext: {
                                    value: O,
                                    set (B) {
                                        D(B), M(0);
                                    }
                                },
                                table: {
                                    data: R.data?.data ?? [],
                                    selection: {
                                        type: "single",
                                        value: P,
                                        set (B) {
                                            A(B);
                                        }
                                    }
                                }
                            })
                        }),
                        x.jsxs("div", {
                            className: w.footer(),
                            children: [
                                x.jsx(zn, {
                                    iconEnabled: Ja,
                                    iconDisabled: Ja,
                                    onClick: ()=>{
                                        U(), A(u ? [
                                            u
                                        ] : []);
                                    },
                                    variant: {
                                        variant: "subtle"
                                    },
                                    children: x.jsx(re, {
                                        label: "Close (label)"
                                    })
                                }),
                                x.jsx(zn, {
                                    iconEnabled: iM,
                                    iconDisabled: iM,
                                    disabled: !P.length && !o,
                                    onClick: ()=>{
                                        f(P?.[0] || null), h?.(R.data?.data?.find((B)=>B.id === P?.[0]) ?? null), U();
                                    },
                                    children: x.jsx(re, {
                                        label: "Confirm selection (label)"
                                    })
                                })
                            ]
                        })
                    ]
                })
        });
    }, _oe = Nn({
        slot: {
            base: [
                "bg-blue-50",
                "p-2",
                "rounded-md",
                "border",
                "border-blue-200"
            ],
            container: [
                "grid",
                "grid-cols-2",
                "grid-rows-2",
                "gap-1"
            ],
            title: [
                "col-span-1",
                "row-span-1",
                "border-b",
                "border-b-slate-300",
                "pb-2"
            ],
            links: [
                "col-span-1",
                "row-span-1",
                "border-b",
                "border-b-slate-300",
                "pb-2",
                "flex",
                "flex-row",
                "items-center",
                "gap-4",
                "justify-end"
            ],
            actions: [
                "col-span-1",
                "row-span-1",
                "flex",
                "flex-row",
                "items-center",
                "gap-4"
            ],
            extra: [
                "col-span-1",
                "row-span-1",
                "flex",
                "flex-row",
                "gap-4",
                "justify-end"
            ]
        },
        variant: {},
        defaults: {}
    }), By = ({ entity: t, title: e = ()=>null, links: n = ()=>null, actions: r = ()=>null, extra: i = ()=>null, variant: s, tva: o = _oe, css: a })=>{
        const l = o({
            ...s,
            css: a
        }).slots;
        return x.jsx(nk.Provider, {
            value: {
                inline: !0
            },
            children: x.jsx("div", {
                className: l.base(),
                children: x.jsxs("div", {
                    className: l.container(),
                    children: [
                        x.jsx("div", {
                            className: l.title(),
                            children: x.jsx(e, {
                                entity: t
                            })
                        }),
                        x.jsx("div", {
                            className: l.links(),
                            children: x.jsx(n, {
                                entity: t
                            })
                        }),
                        x.jsx("div", {
                            className: l.actions(),
                            children: x.jsx(r, {
                                entity: t
                            })
                        }),
                        x.jsx("div", {
                            className: l.extra(),
                            children: x.jsx(i, {
                                entity: t
                            })
                        })
                    ]
                })
            })
        });
    }, Soe = (t)=>(e)=>{
            t({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        cursor: {
                            ...n,
                            page: e
                        }
                    })
            });
        }, Eoe = (t)=>(e)=>{
            t({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        cursor: {
                            ...n,
                            size: e,
                            page: 0
                        }
                    })
            });
        }, _i = (t)=>({
            onPage: Soe(t),
            onSize: Eoe(t)
        }), Si = (t)=>(e)=>t({
                search: ({ cursor: n, ...r })=>({
                        ...r,
                        filter: e,
                        cursor: {
                            ...n,
                            page: 0
                        }
                    })
            }), Ei = (t, e)=>(n)=>{
            (n ?? "") !== (t ?? "") && e({
                search: ({ cursor: r, filter: i, ...s })=>({
                        ...s,
                        filter: {
                            ...i,
                            fulltext: n
                        },
                        cursor: {
                            ...r,
                            page: n ? 0 : r.page
                        }
                    }),
                replace: !1
            });
        }, Ea = (t)=>(e)=>{
            t({
                search (n) {
                    return {
                        ...n,
                        selection: e
                    };
                }
            });
        }, mo = (t)=>({
            loading: x.jsx(re, {
                label: `${t} - Loading (label)`
            }),
            success: x.jsx(re, {
                label: `${t} - Success (label)`
            }),
            error: x.jsx(re, {
                label: `${t} - Error (label)`
            })
        }), Moe = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4"
            ],
            content: [
                "text-bold",
                "text-red-500",
                "font-bold"
            ],
            footer: [
                "flex",
                "flex-row",
                "items-center",
                "justify-between",
                "gap-4"
            ]
        },
        variant: {},
        defaults: {}
    }), Ma = ({ textContent: t, textToast: e, callback: n, onCancel: r, invalidator: i, variant: s, tva: o = Moe, css: a })=>{
        const l = o({
            ...s,
            css: a
        }).slots, u = J.useContext(hz)((h)=>h.close), f = dn({
            async mutationFn () {
                return kK.promise(n(), mo(e));
            },
            async onSuccess () {
                await i?.(), u();
            }
        });
        return x.jsxs("div", {
            className: l.base(),
            children: [
                x.jsx("div", {
                    className: l.content(),
                    children: t
                }),
                x.jsxs("div", {
                    className: l.footer(),
                    children: [
                        x.jsx(zn, {
                            variant: {
                                variant: "subtle",
                                size: "sm"
                            },
                            iconEnabled: Ja,
                            onClick: ()=>{
                                u(), r?.();
                            },
                            children: x.jsx(re, {
                                label: "Cancel (button)"
                            })
                        }),
                        x.jsx(zn, {
                            variant: {
                                variant: "danger",
                                size: "md"
                            },
                            iconEnabled: Bi,
                            onClick: ()=>{
                                f.mutate();
                            },
                            children: x.jsx(re, {
                                label: "Delete (button)"
                            })
                        })
                    ]
                })
            ]
        });
    }, Toe = async ({ select: t, query: e = ()=>t, filter: n, where: r })=>({
            total: (await t.clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count,
            filter: (await e({
                select: e({
                    select: t,
                    where: r
                }),
                where: n
            }).clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count,
            where: (await e({
                select: t,
                where: r
            }).clearSelect().select((i)=>i.fn.countAll().as("count")).executeTakeFirstOrThrow()).count
        }), Mc = async ({ select: t, query: e = ()=>t, output: n, filter: r, where: i })=>n.parse(await e({
            select: e({
                select: t,
                where: i
            }),
            where: r
        }).executeTakeFirstOrThrow()), $s = async ({ select: t, query: e = ()=>t, output: n, filter: r, where: i, cursor: s })=>{
        const o = (a)=>{
            let l = a;
            return s && (l = a.limit(s.size).offset(s.page * s.size)), l;
        };
        return Y.array(n).parse(await o(e({
            select: e({
                select: t,
                where: i
            }),
            where: r
        })).execute());
    }, Hr = async ({ select: t, query: e = ()=>t, output: n, filter: r, where: i, cursor: s })=>({
            data: await $s({
                select: t,
                output: n,
                where: i,
                filter: r,
                query: e,
                cursor: s
            }),
            count: await Toe({
                select: t,
                where: i,
                filter: r,
                query: e
            })
        }), Zr = (t)=>{
        const e = "input" in t ? t.input : "input", n = "output" in t ? t.output : "output", r = "schema" in t ? t.schema._input : t._input, i = "schema" in t ? t.schema._output : t._output;
        return {
            types: {
                input: e === "output" ? i : r,
                output: n === "input" ? r : i
            },
            parse: (s)=>"schema" in t ? t.schema.parse(s) : t.parse(s)
        };
    }, p1 = (t, e)=>Y.custom().pipe(t.catch(e)), Mi = ({ filter: t }, { size: e = 30 } = {
        size: 30
    })=>Y.object({
            filter: p1(t.default({
                fulltext: ""
            }), {
                fulltext: ""
            }),
            cursor: p1(Fte, {
                page: 0,
                size: e
            }).default({
                page: 0,
                size: e
            }),
            sort: p1(Y.array(Y.any()).default([]), []),
            selection: p1(Y.array(Y.string()).default([]), [])
        }), Coe = Nn({
        slot: {
            base: [
                "w-full",
                "flex",
                "flex-col",
                "items-center",
                "justify-center"
            ],
            title: [
                "text-xl",
                "text-bold",
                "w-full",
                "text-center"
            ],
            message: [
                "text-base",
                "text-slate-500",
                "w-full",
                "text-center"
            ],
            body: [
                "pt-2",
                "w-full"
            ]
        },
        variant: {},
        defaults: {}
    }), Hz = ({ textTitle: t, textMessage: e, icon: n, iconProps: r, variant: i, tva: s = Coe, css: o, children: a })=>{
        const l = s({
            ...i,
            css: o
        }).slots;
        return x.jsxs("div", {
            className: l.base(),
            children: [
                n ? x.jsx(_n, {
                    icon: n,
                    variant: {
                        size: "6xl"
                    },
                    css: {
                        base: [
                            "text-slate-500",
                            "opacity-50"
                        ]
                    },
                    ...r
                }) : null,
                x.jsx("div", {
                    className: l.title(),
                    children: t
                }),
                x.jsx("div", {
                    className: l.message(),
                    children: e
                }),
                x.jsx("div", {
                    className: l.body(),
                    children: a
                })
            ]
        });
    }, ak = Nn({
        slot: {
            base: [
                "min-w-full",
                "flex",
                "flex-col",
                "gap-2",
                "text-sm"
            ],
            table: [
                "min-w-full",
                "w-max",
                "table-fixed"
            ],
            thead: [
                "border",
                "border-slate-200",
                "bg-slate-100"
            ],
            th: [
                "text-left",
                "px-2",
                "py-1",
                "border-t",
                "border-b",
                "border-slate-300"
            ],
            tbody: [],
            tr: [
                "border-b",
                "border-b-slate-200",
                "odd:bg-slate-50",
                "hover:bg-purple-100",
                "hover:border-purple-300"
            ],
            td: [
                "px-2",
                "py-1"
            ],
            tfoot: [],
            select: [
                "cursor-pointer",
                "text-slate-400",
                "hover:text-slate-600"
            ]
        },
        variant: {
            selected: {
                true: []
            }
        },
        match: [
            {
                if: {
                    selected: !0
                },
                then: {
                    tr: [
                        "bg-blue-100",
                        "odd:bg-blue-50",
                        "border-blue-300"
                    ],
                    select: [
                        "text-slate-600"
                    ]
                }
            }
        ],
        defaults: {
            selected: !1
        }
    }), Roe = ({ table: t, cell: { column: e, data: n, value: r }, variant: i, tva: s = ak, css: o })=>{
        const a = e.def.render, l = s({
            ...i,
            css: o
        }).slots;
        return x.jsx("td", {
            className: l.td(),
            children: x.jsxs("div", {
                className: "group flex flex-row items-center gap-2 justify-between",
                children: [
                    x.jsx(a, {
                        table: t,
                        data: n,
                        value: r,
                        context: t.context
                    }),
                    e.filter && !e.filter.is() ? x.jsx(_n, {
                        icon: Zie,
                        css: {
                            base: [
                                "group-hover:visible",
                                "invisible",
                                "opacity-50 hover:opacity-100",
                                "cursor-pointer"
                            ]
                        },
                        variant: {
                            size: "xl"
                        },
                        onClick: ()=>{
                            e.filter && (e.def.filter?.onFilter({
                                data: n,
                                filter: e.filter
                            }), window.scrollTo({
                                top: 0,
                                behavior: "smooth"
                            }));
                        }
                    }) : null
                ]
            })
        });
    }, Ioe = ({ table: t, row: e, action: n, variant: r, tva: i = ak, css: s })=>{
        const o = i({
            ...r,
            css: s
        }).slots, a = n?.table, l = n?.row;
        return x.jsxs("tr", {
            className: o.tr({
                css: t.rowCss?.({
                    data: e.data
                }),
                selected: t.selection.isSelected(e)
            }),
            children: [
                a || l || t.selection.enabled ? x.jsx("td", {
                    className: "w-0",
                    children: x.jsxs("div", {
                        className: "flex flex-row items-center gap-2",
                        children: [
                            t.selection.enabled ? x.jsx(_n, {
                                icon: t.selection.isSelected(e) ? $T : HT,
                                css: {
                                    base: o.select({
                                        selected: t.selection.isSelected(e)
                                    })
                                },
                                variant: {
                                    size: "2xl"
                                },
                                onClick: t.selection.withRowHandler(e)
                            }) : null,
                            l ? x.jsx(l, {
                                table: t,
                                data: e.data
                            }) : null
                        ]
                    })
                }) : null,
                e.cells.map((c)=>x.jsx(Roe, {
                        table: t,
                        cell: c,
                        variant: r,
                        tva: i,
                        css: s
                    }, `${e.id}-${c.column.id}`)),
                x.jsx("td", {})
            ]
        });
    }, Ti = ({ table: t, fulltext: e, toolbar: n = ()=>null, cursor: r, empty: i = ()=>x.jsx(Hz, {
            icon: Yie,
            textTitle: x.jsx(re, {
                label: "Nothing here"
            }),
            textMessage: x.jsx(re, {
                label: "There is nothing to see right now."
            })
        }), action: s, variant: o, tva: a = ak, css: l })=>{
        const c = a({
            ...o,
            css: l
        }).slots, u = s?.table, f = s?.row;
        return x.jsxs("div", {
            className: c.base(),
            children: [
                x.jsxs("div", {
                    className: "flex items-center justify-between",
                    children: [
                        x.jsxs("div", {
                            className: "flex flex-row items-center gap-2 w-1/3",
                            children: [
                                x.jsx("div", {
                                    className: "flex items-center gap-6 flex-grow",
                                    children: e ? x.jsx(wz, {
                                        value: e.value,
                                        onFulltext: e.set
                                    }) : null
                                }),
                                x.jsx("div", {
                                    className: "flex flex-row items-center gap-2",
                                    children: x.jsx(n, {
                                        table: t
                                    })
                                })
                            ]
                        }),
                        x.jsxs("div", {
                            className: "flex flex-row items-center justify-center gap-2",
                            children: [
                                x.jsx(i4, {
                                    ...r
                                }),
                                t.filter.is() && x.jsx(Iw, {
                                    iconEnabled: f4,
                                    css: {
                                        base: [
                                            "text-amber-500"
                                        ]
                                    },
                                    onClick: ()=>t.filter.reset()
                                })
                            ]
                        })
                    ]
                }),
                x.jsx("div", {
                    className: "relative overflow-x-auto",
                    children: x.jsxs("table", {
                        className: c.table(),
                        children: [
                            x.jsx("thead", {
                                className: c.thead(),
                                children: x.jsxs("tr", {
                                    children: [
                                        u || f || t.selection.enabled ? x.jsx("th", {
                                            className: "w-0",
                                            children: x.jsxs("div", {
                                                className: "flex flex-row items-center gap-2",
                                                children: [
                                                    t.selection.enabled ? x.jsx(_n, {
                                                        icon: t.selection.isAll() ? $T : t.selection.isAny() ? Jie : HT,
                                                        variant: {
                                                            disabled: t.selection.isSingle,
                                                            size: "2xl"
                                                        },
                                                        css: {
                                                            base: c.select({
                                                                selected: t.selection.isAny()
                                                            })
                                                        },
                                                        onClick: t.selection.withAllHandler()
                                                    }) : null,
                                                    u ? x.jsx(u, {
                                                        table: t
                                                    }) : null
                                                ]
                                            })
                                        }) : null,
                                        t.visible.map((h)=>{
                                            const m = h.def.header || (()=>null);
                                            return x.jsx("th", {
                                                className: c.th(),
                                                style: h.def.size ? {
                                                    width: `${h.def.size}rem`
                                                } : void 0,
                                                children: x.jsxs("div", {
                                                    className: "flex flex-row items-center justify-between",
                                                    children: [
                                                        x.jsx(m, {
                                                            table: t
                                                        }),
                                                        x.jsx("div", {
                                                            className: "flex flex-row items-center gap-2",
                                                            children: h.filter?.is() && x.jsx(_n, {
                                                                icon: f4,
                                                                variant: {
                                                                    size: "md"
                                                                },
                                                                css: {
                                                                    base: [
                                                                        "opacity-50",
                                                                        "hover:opacity-100",
                                                                        "cursor-pointer"
                                                                    ]
                                                                },
                                                                onClick: ()=>{
                                                                    h.filter?.reset();
                                                                }
                                                            })
                                                        })
                                                    ]
                                                })
                                            }, h.id);
                                        }),
                                        x.jsx("th", {})
                                    ]
                                })
                            }),
                            t.isEmpty ? null : x.jsx("tbody", {
                                className: c.tbody(),
                                children: t.rows?.map((h)=>x.jsx(Ioe, {
                                        row: h,
                                        table: t,
                                        action: s,
                                        variant: o,
                                        tva: a,
                                        css: l
                                    }, h.id))
                            })
                        ]
                    })
                }),
                t.isEmpty ? x.jsx(i, {}) : null,
                x.jsxs("div", {
                    className: "flex flex-row items-center justify-end gap-2",
                    children: [
                        x.jsx("div", {}),
                        x.jsx(i4, {
                            ...r
                        })
                    ]
                })
            ]
        });
    }, Ci = ({ columns: t, order: e = t.map((c)=>c.name), hidden: n = [], visible: r = t.map((c)=>c.name), data: i, filter: s, selection: o, context: a, rowCss: l })=>{
        const c = {
            ...s?.value || {}
        }, u = MF(c || {}), f = new Set(o?.value), h = t.map((v)=>({
                id: p4(),
                def: v,
                filter: v.filter ? {
                    is () {
                        return v.filter ? u.get(v.filter.path) !== void 0 : !1;
                    },
                    reset () {
                        v.filter && u.set(v.filter.path, void 0), s?.set({
                            ...c
                        });
                    },
                    shallow (_, w) {
                        v.filter && u.set(_, w), s?.set({
                            ...c
                        });
                    },
                    set (_) {
                        s?.set({
                            ..._
                        });
                    }
                } : void 0
            })), m = h.filter((v)=>r.includes(v.def.name) && !n.includes(v.def.name)).sort((v, _)=>{
            const w = e.indexOf(v.def.name), b = e.indexOf(_.def.name);
            return (w === -1 ? 1 / 0 : w) - (b === -1 ? 1 / 0 : b);
        });
        return {
            data: i,
            columns: h,
            visible: m,
            rowCss: l,
            rows: i?.map((v)=>({
                    id: p4(),
                    data: v,
                    cells: m.map((_)=>({
                            column: _,
                            data: v,
                            value: MF(v).get(_.def.name)
                        }))
                })),
            isEmpty: i.length === 0,
            filter: {
                is () {
                    return h.some((v)=>v.filter?.is());
                },
                reset () {
                    s?.set({});
                },
                set (v) {
                    s?.set({
                        ...v
                    });
                },
                shallow (v, _) {
                    u.set(v, _);
                }
            },
            selection: {
                enabled: !!o && i.length > 0,
                selection: Array.from(f),
                isSingle: o?.type === "single",
                isMulti: o?.type === "multi",
                isSelected ({ data: v }) {
                    return f.has(v.id) || !1;
                },
                isAll () {
                    return i.every((v)=>f.has(v.id));
                },
                isAny () {
                    return i.some((v)=>f.has(v.id));
                },
                withRowHandler ({ data: v }) {
                    return ()=>{
                        if (o?.type === "single") {
                            const _ = f.has(v.id);
                            f.clear(), _ ? f.delete(v.id) : f.add(v.id);
                        } else f.has(v.id) ? f.delete(v.id) : f.add(v.id);
                        o?.set(Array.from(f));
                    };
                },
                withAllHandler () {
                    return ()=>{
                        i.every((v)=>f.has(v.id)) ? f.clear() : i.forEach(({ id: v })=>f.add(v)), o?.set(Array.from(f));
                    };
                }
            },
            context: a
        };
    }, Ri = ()=>(t)=>t, $z = ({ tags: t = [], render: e = ({ tag: i })=>i.label, onClick: n, textEmpty: r })=>{
        const i = t.filter(Boolean).sort((s, o)=>s.sort - o.sort);
        return x.jsx("div", {
            className: "flex flex-wrap flex-row gap-2 items-center",
            children: i.length ? i.map((s)=>x.jsx(uo, {
                    onClick: ()=>n?.(s),
                    children: x.jsx(e, {
                        tag: s
                    })
                }, s.id)) : r || x.jsx(re, {
                label: "No tags (label)"
            })
        });
    }, Aoe = Nn({
        slot: {
            base: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center"
            ],
            title: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "text-lg",
                "text-slate-500",
                "font-bold"
            ],
            subtitle: [
                "flex",
                "flex-row",
                "gap-4",
                "items-center",
                "text-lg"
            ]
        },
        variant: {
            withSubtitle: {
                true: []
            }
        },
        match: [
            {
                if: {
                    withSubtitle: !0
                },
                then: {
                    title: [
                        "border-r",
                        "border-r-slate-300",
                        "pr-2"
                    ]
                }
            }
        ],
        defaults: {
            withSubtitle: !1
        }
    }), Uy = ({ icon: t, title: e, subtitle: n, variant: r, tva: i = Aoe, css: s })=>{
        const o = i({
            withSubtitle: !!n,
            ...r,
            css: s
        }).slots;
        return x.jsxs("div", {
            className: o.base(),
            children: [
                x.jsxs("div", {
                    className: o.title(),
                    children: [
                        t ? x.jsx(_n, {
                            icon: t
                        }) : null,
                        e
                    ]
                }),
                n ? x.jsx("div", {
                    className: o.subtitle(),
                    children: n
                }) : null
            ]
        });
    };
    var m1 = {}, N4;
    function Noe() {
        if (N4) return m1;
        N4 = 1;
        var t = PB();
        return m1.createRoot = t.createRoot, m1.hydrateRoot = t.hydrateRoot, m1;
    }
    var Poe = Noe();
    const koe = Go(Poe), lk = fX()({}), Ooe = Bt("/$locale")({
        component: Al,
        loader: async ({ params: { locale: t } })=>{
            try {
                _a.push((await Doe(`../translation/${t}.yaml`)).default);
            } catch (e) {
                console.error(e);
            }
        }
    });
    function Doe(t) {
        switch(t){
            case "../translation/cs":
            case "../translation/cs.yaml":
                return tM(()=>import("./cs-BUpUyNKP.js"), []);
            case "../translation/en":
            case "../translation/en.yaml":
                return tM(()=>import("./en-CvMFGEQe.js"), []);
            default:
                return new Promise(function(e, n) {
                    (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(n.bind(null, new Error("Unknown variable dynamic import: " + t)));
                });
        }
    }
    const Gz = "cs", Loe = [
        Gz,
        "en"
    ], Foe = Bt("/")({
        loader: async ()=>{
            throw dw({
                to: "/$locale",
                params: {
                    locale: FJ({
                        available: Loe,
                        fallback: Gz
                    })
                }
            });
        }
    }), joe = Bt("/$locale/")({
        component: ()=>{
            const { locale: t } = sn({
                from: "/$locale"
            });
            return x.jsx("div", {
                className: "flex flex-col items-center justify-center h-screen w-screen",
                children: x.jsxs("div", {
                    className: "rounded-sm bg-slate-50 p-4 shadow-md border border-slate-300",
                    children: [
                        x.jsx("h1", {
                            className: "text-3xl text-center",
                            children: "Apps"
                        }),
                        x.jsx("ul", {
                            children: x.jsx("li", {
                                children: x.jsx(It, {
                                    icon: "icon-[bx--game]",
                                    to: "/$locale/apps/derivean/public/login",
                                    params: {
                                        locale: t
                                    },
                                    children: "DeRivean"
                                })
                            })
                        })
                    ]
                })
            });
        }
    }), { kysely: At, bootstrap: Boe } = Wie({
        database: "derivean",
        async bootstrap ({ kysely: t }) {
            const e = "varchar(36)";
            try {
                await t.selectFrom("User").select((n)=>n.fn.countAll().as("count")).executeTakeFirstOrThrow();
            } catch  {
                await t.schema.createTable("User").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("login", "varchar(128)", (r)=>r.notNull()).addColumn("password", "varchar(256)", (r)=>r.notNull()).addUniqueConstraint("[User] login", [
                    "login"
                ]).execute(), await t.schema.createTable("Tag").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("code", "varchar(64)", (r)=>r.notNull()).addColumn("label", "varchar(128)", (r)=>r.notNull()).addColumn("group", "varchar(64)").addColumn("sort", "integer", (r)=>r.notNull().defaultTo(0)).addUniqueConstraint("Tag_code_group", [
                    "code",
                    "group"
                ]).execute(), await t.schema.createTable("Resource").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("weight", "integer", (r)=>r.notNull().defaultTo(1)).addColumn("image", "text").addUniqueConstraint("[Resource] name", [
                    "name"
                ]).execute(), await t.schema.createTable("Resource_Tag").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Resource_Tag] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("tagId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Resource_Tag] tagId", [
                    "tagId"
                ], "Tag", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Resource_Tag] resourceId-tagId", [
                    "resourceId",
                    "tagId"
                ]).execute();
                for await (const r of [
                    "resourceId",
                    "tagId"
                ])await t.schema.createIndex(`[Resource_Tag] ${r}`).on("Resource_Tag").columns([
                    r
                ]).execute();
                await t.schema.createTable("Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Inventory] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("limit", "float4", (r)=>r.notNull()).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).execute(), await t.schema.createIndex("[Inventory] resourceId").on("Inventory").columns([
                    "resourceId"
                ]).execute(), await t.schema.createTable("Region").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(128)", (r)=>r.notNull()).addColumn("probability", "integer", (r)=>r.notNull()).addColumn("limit", "integer", (r)=>r.notNull()).addColumn("image", "text").execute(), await t.schema.createTable("Region_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("regionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Region_Inventory] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Region_Inventory] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("minAmount", "float4", (r)=>r.notNull()).addColumn("maxAmount", "float4", (r)=>r.notNull()).addColumn("minLimit", "float4", (r)=>r.notNull()).addColumn("maxLimit", "float4", (r)=>r.notNull()).addUniqueConstraint("[Region_Inventory] regionId-resourceId", [
                    "regionId",
                    "resourceId"
                ]).execute();
                for await (const r of [
                    "regionId",
                    "resourceId"
                ])await t.schema.createIndex(`[Region_Inventory] ${r}`).on("Region_Inventory").columns([
                    r
                ]).execute();
                await t.schema.createTable("Map").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Map] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("name", "varchar(128)", (r)=>r.notNull()).addUniqueConstraint("[Map] userId-name", [
                    "userId",
                    "name"
                ]).execute(), await t.schema.createIndex("[Map] userId").on("Map").columns([
                    "userId"
                ]).execute(), await t.schema.createTable("Cycle").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Cycle] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Cycle] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("stamp", "datetime", (r)=>r.defaultTo(xi`CURRENT_TIMESTAMP`).notNull()).execute();
                for await (const r of [
                    "userId",
                    "mapId"
                ])await t.schema.createIndex(`[Cycle] ${r}`).on("Cycle").columns([
                    r
                ]).execute();
                await t.schema.createTable("Land").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("regionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("position", "integer", (r)=>r.notNull()).execute();
                for await (const r of [
                    "mapId",
                    "regionId"
                ])await t.schema.createIndex(`[Land] ${r}`).on("Land").columns([
                    r
                ]).execute();
                await t.schema.createTable("Land_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("landId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land_Inventory] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Land_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Land_Inventory] landId-inventoryId", [
                    "landId",
                    "inventoryId"
                ]).execute();
                for await (const r of [
                    "landId",
                    "inventoryId"
                ])await t.schema.createIndex(`[Land_Inventory] ${r}`).on("Land_Inventory").columns([
                    r
                ]).execute();
                await t.schema.createTable("Blueprint").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("name", "varchar(64)", (r)=>r.notNull()).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("sort", "integer", (r)=>r.notNull()).addColumn("limit", "integer", (r)=>r.notNull().defaultTo(1)).addColumn("image", "text").addUniqueConstraint("[Blueprint] name", [
                    "name"
                ]).execute(), await t.schema.createTable("Blueprint_Region").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Region] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("regionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Region] regionId", [
                    "regionId"
                ], "Region", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Region] blueprintId-regionId", [
                    "blueprintId",
                    "regionId"
                ]).execute(), await t.schema.createTable("Blueprint_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Inventory] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Inventory] blueprintId-inventoryId", [
                    "blueprintId",
                    "inventoryId"
                ]).execute(), await t.schema.createTable("Blueprint_Production").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("cycles", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Blueprint_Requirement").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Requirement] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Requirement] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("passive", "boolean", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Requirement] blueprintId-requirementId", [
                    "blueprintId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Blueprint_Dependency").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Dependency] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("dependencyId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Dependency] dependencyId", [
                    "dependencyId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Dependency] blueprintId-dependencyId", [
                    "blueprintId",
                    "dependencyId"
                ]).execute(), await t.schema.createTable("Blueprint_Conflict").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Conflict] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("conflictId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Conflict] conflictId", [
                    "conflictId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Conflict] blueprintId-conflictId", [
                    "blueprintId",
                    "conflictId"
                ]).execute(), await t.schema.createTable("Blueprint_Production_Requirement").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Requirement] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Requirement] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("passive", "boolean", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Production_Requirement] blueprintProductionId-resourceId", [
                    "blueprintProductionId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Blueprint_Production_Dependency").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Blueprint_Production_Dependency] blueprintProductionId-blueprintId", [
                    "blueprintProductionId",
                    "blueprintId"
                ]).execute(), await t.schema.createTable("Blueprint_Production_Resource").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Blueprint_Production_Dependency] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addUniqueConstraint("[Blueprint_Production_Dependency] blueprintProductionId-resourceId", [
                    "blueprintProductionId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Production").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Production] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Production] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintProductionId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Production] blueprintProductionId", [
                    "blueprintProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("cycle", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Construction").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Construction] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("plan", "boolean", (r)=>r.notNull().defaultTo(!0)).addColumn("cycles", "integer", (r)=>r.notNull()).addColumn("cycle", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Plot").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("landId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Plot] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("position", "integer", (r)=>r.notNull()).execute(), await t.schema.createTable("Building").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("plotId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] plotId", [
                    "plotId"
                ], "Plot", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("blueprintId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] blueprintId", [
                    "blueprintId"
                ], "Blueprint", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("constructionId", e).addForeignKeyConstraint("[Building] constructionId", [
                    "constructionId"
                ], "Construction", [
                    "id"
                ], (r)=>r.onDelete("set null").onUpdate("set null")).addColumn("landId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building] landId", [
                    "landId"
                ], "Land", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("productionId", e).addForeignKeyConstraint("[Building] productionId", [
                    "productionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("recurringProductionId", e).addForeignKeyConstraint("[Building] recurringProductionId", [
                    "recurringProductionId"
                ], "Blueprint_Production", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("valid", "boolean", (r)=>r.notNull().defaultTo(!0)).execute();
                for await (const r of [
                    "userId",
                    "blueprintId",
                    "constructionId",
                    "landId",
                    "productionId",
                    "recurringProductionId"
                ])await t.schema.createIndex(`[Building] ${r}`).on("Building").columns([
                    r
                ]).execute();
                await t.schema.createTable("Building_Inventory").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_Inventory] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("inventoryId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_Inventory] inventoryId", [
                    "inventoryId"
                ], "Inventory", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Building_Inventory] buildingId-inventoryId", [
                    "buildingId",
                    "inventoryId"
                ]).execute(), await t.schema.createTable("Building_To_Building").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("linkId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Building_To_Building] linkId", [
                    "linkId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Building_To_Building] buildingId-linkId", [
                    "buildingId",
                    "linkId"
                ]).execute();
                for await (const r of [
                    "userId",
                    "mapId",
                    "buildingId",
                    "linkId"
                ])await t.schema.createIndex(`[Building_To_Building] ${r}`).on("Building_To_Building").columns([
                    r
                ]).execute();
                await t.schema.createTable("Road").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("plotId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Road] plotId", [
                    "plotId"
                ], "Plot", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).execute(), await t.schema.createTable("Supply").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Supply] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addUniqueConstraint("[Supply] buildingId-resourceId", [
                    "buildingId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Demand").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("buildingId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Demand] buildingId", [
                    "buildingId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Demand] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("priority", "integer", (r)=>r.notNull().defaultTo(0)).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).addUniqueConstraint("[Demand] buildingId-resourceId", [
                    "buildingId",
                    "resourceId"
                ]).execute(), await t.schema.createTable("Transport").ifNotExists().addColumn("id", e, (r)=>r.primaryKey()).addColumn("userId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] userId", [
                    "userId"
                ], "User", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("mapId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] mapId", [
                    "mapId"
                ], "Map", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("resourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] resourceId", [
                    "resourceId"
                ], "Resource", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("roadId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] roadId", [
                    "roadId"
                ], "Road", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("sourceId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] sourceId", [
                    "sourceId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("targetId", e, (r)=>r.notNull()).addForeignKeyConstraint("[Transport] targetId", [
                    "targetId"
                ], "Building", [
                    "id"
                ], (r)=>r.onDelete("cascade").onUpdate("cascade")).addColumn("amount", "float4", (r)=>r.notNull()).addColumn("type", "varchar(16)", (r)=>r.notNull().defaultTo("storage")).execute();
                for await (const r of [
                    "userId",
                    "mapId",
                    "resourceId",
                    "roadId",
                    "sourceId",
                    "targetId"
                ])await t.schema.createIndex(`[Transport] ${r}`).on("Transport").columns([
                    r
                ]).execute();
            }
        }
    }), Uoe = Bt("/$locale/apps/derivean")({
        async loader ({ context: { queryClient: t, kysely: e } }) {
            return await Boe(), {
                image: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "image"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (n)=>$s({
                                select: n.selectFrom("Blueprint as b").select([
                                    "b.id",
                                    "b.image"
                                ]).where("b.image", "is not", null).union(n.selectFrom("Region as r").select([
                                    "r.id",
                                    "r.image"
                                ]).where("r.image", "is not", null)).union(n.selectFrom("Resource as r").select([
                                    "r.id",
                                    "r.image"
                                ]).where("r.image", "is not", null)),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    image: Y.string()
                                })
                            }));
                    }
                })
            };
        }
    }), Xz = "icon-[proicons--game]", zoe = Nn({
        slot: {
            base: [
                "text-orange-500",
                "font-bold",
                "text-2xl",
                "shadow-md",
                "hover:shadow-lg",
                "hover:text-orange-600",
                "rounded-sm",
                "px-2",
                "py-1",
                "bg-slate-100"
            ]
        },
        variant: {},
        defaults: {}
    }), Kz = ({ variant: t, tva: e = zoe, css: n })=>{
        const r = e({
            ...t,
            css: n
        }).slots;
        return x.jsx("div", {
            className: r.base(),
            children: "DeRivean"
        });
    }, Qa = "icon-[fluent--building-shop-20-regular]", lM = "icon-[oui--vis-map-region]", ii = "icon-[hugeicons--resources-add]", Voe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsxs(Bm, {
            ...t,
            children: [
                x.jsx(Or, {
                    icon: "icon-[ph--graph-light]",
                    to: "/$locale/apps/derivean/root/editor",
                    params: {
                        locale: e
                    },
                    children: x.jsx(re, {
                        label: "Editor (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Qa,
                    to: "/$locale/apps/derivean/root/blueprint/list",
                    params: {
                        locale: e
                    },
                    match: [
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/view"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/dependencies"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/production"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/requirements"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/$id/edit"
                        },
                        {
                            to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements"
                        }
                    ],
                    children: x.jsx(re, {
                        label: "Blueprint list (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: lM,
                    to: "/$locale/apps/derivean/root/region/list",
                    params: {
                        locale: e
                    },
                    children: x.jsx(re, {
                        label: "Region list (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: ii,
                    to: "/$locale/apps/derivean/root/resource/list",
                    params: {
                        locale: e
                    },
                    children: x.jsx(re, {
                        label: "Resource list (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: ok,
                    to: "/$locale/apps/derivean/root/user/list",
                    params: {
                        locale: e
                    },
                    match: [
                        {
                            to: "/$locale/apps/derivean/root/user/$id/view"
                        },
                        {
                            to: "/$locale/apps/derivean/root/user/$id/building/list"
                        }
                    ],
                    children: x.jsx(re, {
                        label: "User list (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: kb,
                    to: "/$locale/apps/derivean/root/tag/list",
                    params: {
                        locale: e
                    },
                    children: x.jsx(re, {
                        label: "Tag list (menu)"
                    })
                })
            ]
        });
    }, Aw = Y.object({
        id: Y.string(),
        name: Y.string(),
        login: Y.string()
    }), Woe = Bt("/$locale/apps/derivean/root")({
        async beforeLoad ({ context: t, params: { locale: e } }) {
            return {
                ...t,
                async session () {
                    try {
                        return Aw.parse(jy.get("session"));
                    } catch  {
                        throw dw({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: e
                            }
                        });
                    }
                }
            };
        },
        async loader ({ context: { session: t } }) {
            return {
                session: await t()
            };
        },
        component: ()=>{
            const { locale: t } = sn({
                from: "/$locale"
            }), { session: e } = es({
                from: "/$locale/apps/derivean/root"
            });
            return x.jsx(Uz, {
                logo: x.jsx(It, {
                    to: "/$locale/apps/derivean/root",
                    params: {
                        locale: t
                    },
                    children: x.jsx(Kz, {})
                }),
                menu: x.jsx(Voe, {}),
                actions: x.jsxs(x.Fragment, {
                    children: [
                        e.name,
                        x.jsx(It, {
                            icon: Xz,
                            to: "/$locale/apps/derivean/game",
                            params: {
                                locale: t
                            }
                        }),
                        x.jsx(It, {
                            icon: sk,
                            to: "/$locale/apps/derivean/public/logout",
                            params: {
                                locale: t
                            },
                            preload: !1
                        })
                    ]
                })
            });
        }
    }), qoe = Bt("/$locale/apps/derivean/map")({
        async beforeLoad ({ context: t, params: { locale: e } }) {
            return {
                ...t,
                async session () {
                    try {
                        return Aw.parse(jy.get("session"));
                    } catch  {
                        throw dw({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: e
                            }
                        });
                    }
                }
            };
        },
        component () {
            return x.jsxs(x.Fragment, {
                children: [
                    x.jsx(BB, {
                        position: "top-right"
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), Hoe = Bt("/$locale/apps/derivean/game")({
        async beforeLoad ({ context: t, params: { locale: e } }) {
            return {
                ...t,
                async session () {
                    try {
                        return Aw.parse(jy.get("session"));
                    } catch  {
                        throw dw({
                            to: "/$locale/apps/derivean/public/login",
                            params: {
                                locale: e
                            }
                        });
                    }
                }
            };
        },
        async loader ({ context: { queryClient: t, kysely: e, session: n } }) {
            const r = await n();
            return {
                session: r,
                cycle: await t.ensureQueryData({
                    queryKey: [
                        "Cycle"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>(await i.selectFrom("Cycle as c").select((s)=>s.fn.count("c.id").as("count")).where("c.userId", "=", r.id).executeTakeFirstOrThrow()).count);
                    }
                })
            };
        },
        component () {
            const { locale: t } = sn({
                from: "/$locale"
            }), { session: e } = es({
                from: "/$locale/apps/derivean/game"
            }), n = PG({
                filters: {
                    status: "pending",
                    mutationKey: [
                        "useCycleMutation"
                    ]
                },
                select (r) {
                    return r.state.status;
                }
            });
            return x.jsx(Uz, {
                logo: x.jsx(It, {
                    to: "/$locale/apps/derivean/game",
                    params: {
                        locale: t
                    },
                    children: x.jsx(Kz, {})
                }),
                actions: x.jsxs(x.Fragment, {
                    children: [
                        e.name,
                        x.jsx(It, {
                            icon: "icon-[clarity--crown-line]",
                            to: "/$locale/apps/derivean/root",
                            params: {
                                locale: t
                            }
                        }),
                        x.jsx(It, {
                            icon: sk,
                            to: "/$locale/apps/derivean/public/logout",
                            params: {
                                locale: t
                            },
                            preload: !1
                        })
                    ]
                }),
                css: {
                    base: n.length ? [
                        "select-none",
                        "pointer-events-none",
                        "opacity-50"
                    ] : void 0
                },
                children: x.jsx(Al, {})
            });
        }
    });
    var jS = {
        exports: {}
    }, $oe = jS.exports, P4;
    function Goe() {
        return P4 || (P4 = 1, function(t, e) {
            (function(n, r) {
                r();
            })($oe, function() {
                function n(c, u) {
                    return typeof u > "u" ? u = {
                        autoBom: !1
                    } : typeof u != "object" && (console.warn("Deprecated: Expected third argument to be a object"), u = {
                        autoBom: !u
                    }), u.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type) ? new Blob([
                        "\uFEFF",
                        c
                    ], {
                        type: c.type
                    }) : c;
                }
                function r(c, u, f) {
                    var h = new XMLHttpRequest;
                    h.open("GET", c), h.responseType = "blob", h.onload = function() {
                        l(h.response, u, f);
                    }, h.onerror = function() {
                        console.error("could not download file");
                    }, h.send();
                }
                function i(c) {
                    var u = new XMLHttpRequest;
                    u.open("HEAD", c, !1);
                    try {
                        u.send();
                    } catch  {}
                    return 200 <= u.status && 299 >= u.status;
                }
                function s(c) {
                    try {
                        c.dispatchEvent(new MouseEvent("click"));
                    } catch  {
                        var u = document.createEvent("MouseEvents");
                        u.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), c.dispatchEvent(u);
                    }
                }
                var o = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof Gp == "object" && Gp.global === Gp ? Gp : void 0, a = o.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), l = o.saveAs || (typeof window != "object" || window !== o ? function() {} : "download" in HTMLAnchorElement.prototype && !a ? function(c, u, f) {
                    var h = o.URL || o.webkitURL, m = document.createElement("a");
                    u = u || c.name || "download", m.download = u, m.rel = "noopener", typeof c == "string" ? (m.href = c, m.origin === location.origin ? s(m) : i(m.href) ? r(c, u, f) : s(m, m.target = "_blank")) : (m.href = h.createObjectURL(c), setTimeout(function() {
                        h.revokeObjectURL(m.href);
                    }, 4e4), setTimeout(function() {
                        s(m);
                    }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(c, u, f) {
                    if (u = u || c.name || "download", typeof c != "string") navigator.msSaveOrOpenBlob(n(c, f), u);
                    else if (i(c)) r(c, u, f);
                    else {
                        var h = document.createElement("a");
                        h.href = c, h.target = "_blank", setTimeout(function() {
                            s(h);
                        });
                    }
                } : function(c, u, f, h) {
                    if (h = h || open("", "_blank"), h && (h.document.title = h.document.body.innerText = "downloading..."), typeof c == "string") return r(c, u, f);
                    var m = c.type === "application/octet-stream", v = /constructor/i.test(o.HTMLElement) || o.safari, _ = /CriOS\/[\d]+/.test(navigator.userAgent);
                    if ((_ || m && v || a) && typeof FileReader < "u") {
                        var w = new FileReader;
                        w.onloadend = function() {
                            var E = w.result;
                            E = _ ? E : E.replace(/^data:[^;]*;/, "data:attachment/file;"), h ? h.location.href = E : location = E, h = null;
                        }, w.readAsDataURL(c);
                    } else {
                        var b = o.URL || o.webkitURL, M = b.createObjectURL(c);
                        h ? h.location = M : location.href = M, h = null, setTimeout(function() {
                            b.revokeObjectURL(M);
                        }, 4e4);
                    }
                });
                o.saveAs = l.saveAs = l, t.exports = l;
            });
        }(jS)), jS.exports;
    }
    var Xoe = Goe();
    const Koe = Go(Xoe), oI = [
        "Tag",
        "Resource",
        "Resource_Tag",
        "Blueprint",
        "Inventory",
        "Region",
        "Region_Inventory",
        "Blueprint_Inventory",
        "Blueprint_Region",
        "Blueprint_Dependency",
        "Blueprint_Conflict",
        "Blueprint_Requirement",
        "Blueprint_Production",
        "Blueprint_Production_Requirement",
        "Blueprint_Production_Dependency",
        "Blueprint_Production_Resource"
    ], Yoe = Bt("/$locale/apps/derivean/root/")({
        component () {
            const t = dn({
                mutationKey: [
                    "export"
                ],
                async mutationFn () {
                    return fr.promise((async ()=>{
                        const e = [];
                        await At.transaction().execute(async (n)=>{
                            for await (const r of oI)e.push({
                                source: r,
                                entities: await n.selectFrom(r).selectAll().execute()
                            });
                        }), Koe.saveAs(new Blob([
                            JSON.stringify(e)
                        ], {
                            type: "application/json;charset=utf-8"
                        }), "export.json");
                    })(), mo("Export game files"));
                }
            });
            return x.jsxs("div", {
                className: "flex flex-col gap-4 w-2/3 mx-auto",
                children: [
                    x.jsx(ooe, {
                        maxSize: 250 * 1024 ** 2,
                        onDrop: async (e)=>{
                            const [n] = e;
                            if (!n) return;
                            const r = JSON.parse(await n.text());
                            await xi`PRAGMA foreign_keys = OFF`.execute(At), await fr.promise(At.transaction().execute(async (i)=>{
                                for await (const { source: s } of r){
                                    const o = oI.find((a)=>a === s);
                                    o && await i.deleteFrom(o).execute();
                                }
                                for await (const { source: s, entities: o } of r){
                                    const a = oI.find((l)=>l === s);
                                    if (a) for await (const l of Object.values(o))await i.insertInto(a).values(l).execute();
                                }
                                await xi`
                                    DELETE FROM Inventory
                                    WHERE NOT EXISTS (
                                        SELECT 1 FROM Blueprint_Inventory 
                                        WHERE Blueprint_Inventory.inventoryId = Inventory.id
                                    )
                                `.execute(i);
                            }), mo("Import game files")), await xi`PRAGMA foreign_keys = ON`.execute(At);
                        }
                    }),
                    x.jsx("div", {
                        className: "flex items-center justify-center mt-10 gap-4",
                        children: x.jsx(zn, {
                            iconEnabled: Xz,
                            loading: t.isPending,
                            onClick: ()=>t.mutate(),
                            variant: {
                                variant: "subtle"
                            },
                            children: x.jsx(re, {
                                label: "Export game files (label)"
                            })
                        })
                    }),
                    x.jsx("h2", {
                        children: "TODO"
                    }),
                    x.jsxs("ul", {
                        className: "flex flex-col gap-2",
                        children: [
                            x.jsx("li", {
                                children: "Add notification center like inventory is full, production is full and so on."
                            }),
                            x.jsx("li", {
                                children: 'Upgrades: Put everything into the building, drive upgrades by passive "Research" points'
                            }),
                            x.jsx("li", {
                                children: "Bundle default gameplay as exported json (put into public); add button to root to load default/selected gameplay; idea is a few buttons: Settler like, Fantasy, AoE and so on."
                            }),
                            x.jsx("li", {
                                children: "Define game ending rules: amount of resources in (individual resourece per required cycle), required building in a cycle. When a player fail, game end with the ability to reset. Each game rule may have an ending message to show."
                            }),
                            x.jsx("li", {
                                children: "Define winning rules: amount of resources / building built in specific cycle. When rules are not met, it's like a fail."
                            }),
                            x.jsx("li", {
                                children: "Add something like world available resources + the ability to drain and add resources to the world. Something like Wolrd_Inventory where 0 means unlimited resources."
                            }),
                            x.jsx("li", {
                                children: "World renewal resources: a list of resources with cycles and amount when they got renewed (world_renewal_queue)."
                            }),
                            x.jsx("li", {
                                children: "Defines seasons: list of cyclic seasons with their length; resource production may be bound to specific season(s)."
                            }),
                            x.jsx("li", {
                                children: "Add maintenance cost for a building: when a cycle ends, cost is deducted from the inventory. If there is not enough resources, building will be marked as offline (closed for production)."
                            }),
                            x.jsx("li", {
                                children: "Dispaly resources per season (some resources will be available only in specific season)"
                            }),
                            x.jsx("li", {
                                children: "Add resource probability drop: some resources may have not be produces (like a crop). This should be thinked out."
                            })
                        ]
                    })
                ]
            });
        }
    });
    var Nw = (t)=>t.type === "checkbox", Qp = (t)=>t instanceof Date, jo = (t)=>t == null;
    const Yz = (t)=>typeof t == "object";
    var Li = (t)=>!jo(t) && !Array.isArray(t) && Yz(t) && !Qp(t), Zz = (t)=>Li(t) && t.target ? Nw(t.target) ? t.target.checked : t.target.value : t, Zoe = (t)=>t.substring(0, t.search(/\.\d+(\.|$)/)) || t, Jz = (t, e)=>t.has(Zoe(e)), Joe = (t)=>{
        const e = t.constructor && t.constructor.prototype;
        return Li(e) && e.hasOwnProperty("isPrototypeOf");
    }, ck = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
    function da(t) {
        let e;
        const n = Array.isArray(t), r = typeof FileList < "u" ? t instanceof FileList : !1;
        if (t instanceof Date) e = new Date(t);
        else if (t instanceof Set) e = new Set(t);
        else if (!(ck && (t instanceof Blob || r)) && (n || Li(t))) if (e = n ? [] : {}, !n && !Joe(t)) e = t;
        else for(const i in t)t.hasOwnProperty(i) && (e[i] = da(t[i]));
        else return t;
        return e;
    }
    var KT = (t)=>Array.isArray(t) ? t.filter(Boolean) : [], ki = (t)=>t === void 0, St = (t, e, n)=>{
        if (!e || !Li(t)) return n;
        const r = KT(e.split(/[,[\].]+?/)).reduce((i, s)=>jo(i) ? i : i[s], t);
        return ki(r) || r === t ? ki(t[e]) ? n : t[e] : r;
    }, El = (t)=>typeof t == "boolean", uk = (t)=>/^\w*$/.test(t), Qz = (t)=>KT(t.replace(/["|']|\]/g, "").split(/\.|\[/)), yr = (t, e, n)=>{
        let r = -1;
        const i = uk(e) ? [
            e
        ] : Qz(e), s = i.length, o = s - 1;
        for(; ++r < s;){
            const a = i[r];
            let l = n;
            if (r !== o) {
                const c = t[a];
                l = Li(c) || Array.isArray(c) ? c : isNaN(+i[r + 1]) ? {} : [];
            }
            if (a === "__proto__" || a === "constructor" || a === "prototype") return;
            t[a] = l, t = t[a];
        }
        return t;
    };
    const cM = {
        BLUR: "blur",
        FOCUS_OUT: "focusout",
        CHANGE: "change"
    }, dc = {
        onBlur: "onBlur",
        onChange: "onChange",
        onSubmit: "onSubmit",
        onTouched: "onTouched",
        all: "all"
    }, rd = {
        max: "max",
        min: "min",
        maxLength: "maxLength",
        minLength: "minLength",
        pattern: "pattern",
        required: "required",
        validate: "validate"
    }, Qoe = lr.createContext(null), dk = ()=>lr.useContext(Qoe);
    var e7 = (t, e, n, r = !0)=>{
        const i = {
            defaultValues: e._defaultValues
        };
        for(const s in t)Object.defineProperty(i, s, {
            get: ()=>{
                const o = s;
                return e._proxyFormState[o] !== dc.all && (e._proxyFormState[o] = !r || dc.all), n && (n[o] = !0), t[o];
            }
        });
        return i;
    }, fa = (t)=>Li(t) && !Object.keys(t).length, t7 = (t, e, n, r)=>{
        n(t);
        const { name: i, ...s } = t;
        return fa(s) || Object.keys(s).length >= Object.keys(e).length || Object.keys(s).find((o)=>e[o] === (!r || dc.all));
    }, Gx = (t)=>Array.isArray(t) ? t : [
            t
        ], n7 = (t, e, n)=>!t || !e || t === e || Gx(t).some((r)=>r && (n ? r === e : r.startsWith(e) || e.startsWith(r)));
    function fk(t) {
        const e = lr.useRef(t);
        e.current = t, lr.useEffect(()=>{
            const n = !t.disabled && e.current.subject && e.current.subject.subscribe({
                next: e.current.next
            });
            return ()=>{
                n && n.unsubscribe();
            };
        }, [
            t.disabled
        ]);
    }
    function eae(t) {
        const e = dk(), { control: n = e.control, disabled: r, name: i, exact: s } = t || {}, [o, a] = lr.useState(n._formState), l = lr.useRef(!0), c = lr.useRef({
            isDirty: !1,
            isLoading: !1,
            dirtyFields: !1,
            touchedFields: !1,
            validatingFields: !1,
            isValidating: !1,
            isValid: !1,
            errors: !1
        }), u = lr.useRef(i);
        return u.current = i, fk({
            disabled: r,
            next: (f)=>l.current && n7(u.current, f.name, s) && t7(f, c.current, n._updateFormState) && a({
                    ...n._formState,
                    ...f
                }),
            subject: n._subjects.state
        }), lr.useEffect(()=>(l.current = !0, c.current.isValid && n._updateValid(!0), ()=>{
                l.current = !1;
            }), [
            n
        ]), lr.useMemo(()=>e7(o, n, c.current, !1), [
            o,
            n
        ]);
    }
    var nu = (t)=>typeof t == "string", r7 = (t, e, n, r, i)=>nu(t) ? (r && e.watch.add(t), St(n, t, i)) : Array.isArray(t) ? t.map((s)=>(r && e.watch.add(s), St(n, s))) : (r && (e.watchAll = !0), n);
    function tae(t) {
        const e = dk(), { control: n = e.control, name: r, defaultValue: i, disabled: s, exact: o } = t || {}, a = lr.useRef(r);
        a.current = r, fk({
            disabled: s,
            subject: n._subjects.values,
            next: (u)=>{
                n7(a.current, u.name, o) && c(da(r7(a.current, n._names, u.values || n._formValues, !1, i)));
            }
        });
        const [l, c] = lr.useState(n._getWatch(r, i));
        return lr.useEffect(()=>n._removeUnmounted()), l;
    }
    function nae(t) {
        const e = dk(), { name: n, disabled: r, control: i = e.control, shouldUnregister: s } = t, o = Jz(i._names.array, n), a = tae({
            control: i,
            name: n,
            defaultValue: St(i._formValues, n, St(i._defaultValues, n, t.defaultValue)),
            exact: !0
        }), l = eae({
            control: i,
            name: n,
            exact: !0
        }), c = lr.useRef(i.register(n, {
            ...t.rules,
            value: a,
            ...El(t.disabled) ? {
                disabled: t.disabled
            } : {}
        })), u = lr.useMemo(()=>Object.defineProperties({}, {
                invalid: {
                    enumerable: !0,
                    get: ()=>!!St(l.errors, n)
                },
                isDirty: {
                    enumerable: !0,
                    get: ()=>!!St(l.dirtyFields, n)
                },
                isTouched: {
                    enumerable: !0,
                    get: ()=>!!St(l.touchedFields, n)
                },
                isValidating: {
                    enumerable: !0,
                    get: ()=>!!St(l.validatingFields, n)
                },
                error: {
                    enumerable: !0,
                    get: ()=>St(l.errors, n)
                }
            }), [
            l,
            n
        ]), f = lr.useMemo(()=>({
                name: n,
                value: a,
                ...El(r) || l.disabled ? {
                    disabled: l.disabled || r
                } : {},
                onChange: (h)=>c.current.onChange({
                        target: {
                            value: Zz(h),
                            name: n
                        },
                        type: cM.CHANGE
                    }),
                onBlur: ()=>c.current.onBlur({
                        target: {
                            value: St(i._formValues, n),
                            name: n
                        },
                        type: cM.BLUR
                    }),
                ref: (h)=>{
                    const m = St(i._fields, n);
                    m && h && (m._f.ref = {
                        focus: ()=>h.focus(),
                        select: ()=>h.select(),
                        setCustomValidity: (v)=>h.setCustomValidity(v),
                        reportValidity: ()=>h.reportValidity()
                    });
                }
            }), [
            n,
            i._formValues,
            r,
            l.disabled,
            a,
            i._fields
        ]);
        return lr.useEffect(()=>{
            const h = i._options.shouldUnregister || s, m = (v, _)=>{
                const w = St(i._fields, v);
                w && w._f && (w._f.mount = _);
            };
            if (m(n, !0), h) {
                const v = da(St(i._options.defaultValues, n));
                yr(i._defaultValues, n, v), ki(St(i._formValues, n)) && yr(i._formValues, n, v);
            }
            return !o && i.register(n), ()=>{
                (o ? h && !i._state.action : h) ? i.unregister(n) : m(n, !1);
            };
        }, [
            n,
            i,
            o,
            s
        ]), lr.useEffect(()=>{
            i._updateDisabledField({
                disabled: r,
                fields: i._fields,
                name: n
            });
        }, [
            r,
            n,
            i
        ]), lr.useMemo(()=>({
                field: f,
                formState: l,
                fieldState: u
            }), [
            f,
            l,
            u
        ]);
    }
    const $o = (t)=>t.render(nae(t));
    var i7 = (t, e, n, r, i)=>e ? {
            ...n[t],
            types: {
                ...n[t] && n[t].types ? n[t].types : {},
                [r]: i || !0
            }
        } : {}, k4 = (t)=>({
            isOnSubmit: !t || t === dc.onSubmit,
            isOnBlur: t === dc.onBlur,
            isOnChange: t === dc.onChange,
            isOnAll: t === dc.all,
            isOnTouch: t === dc.onTouched
        }), O4 = (t, e, n)=>!n && (e.watchAll || e.watch.has(t) || [
            ...e.watch
        ].some((r)=>t.startsWith(r) && /^\.\w+/.test(t.slice(r.length))));
    const Xx = (t, e, n, r)=>{
        for (const i of n || Object.keys(t)){
            const s = St(t, i);
            if (s) {
                const { _f: o, ...a } = s;
                if (o) {
                    if (o.refs && o.refs[0] && e(o.refs[0], i) && !r) return !0;
                    if (o.ref && e(o.ref, o.name) && !r) return !0;
                    if (Xx(a, e)) break;
                } else if (Li(a) && Xx(a, e)) break;
            }
        }
    };
    var rae = (t, e, n)=>{
        const r = Gx(St(t, n));
        return yr(r, "root", e[n]), yr(t, n, r), t;
    }, hk = (t)=>t.type === "file", Qc = (t)=>typeof t == "function", uM = (t)=>{
        if (!ck) return !1;
        const e = t ? t.ownerDocument : 0;
        return t instanceof (e && e.defaultView ? e.defaultView.HTMLElement : HTMLElement);
    }, BS = (t)=>nu(t), pk = (t)=>t.type === "radio", dM = (t)=>t instanceof RegExp;
    const D4 = {
        value: !1,
        isValid: !1
    }, L4 = {
        value: !0,
        isValid: !0
    };
    var s7 = (t)=>{
        if (Array.isArray(t)) {
            if (t.length > 1) {
                const e = t.filter((n)=>n && n.checked && !n.disabled).map((n)=>n.value);
                return {
                    value: e,
                    isValid: !!e.length
                };
            }
            return t[0].checked && !t[0].disabled ? t[0].attributes && !ki(t[0].attributes.value) ? ki(t[0].value) || t[0].value === "" ? L4 : {
                value: t[0].value,
                isValid: !0
            } : L4 : D4;
        }
        return D4;
    };
    const F4 = {
        isValid: !1,
        value: null
    };
    var o7 = (t)=>Array.isArray(t) ? t.reduce((e, n)=>n && n.checked && !n.disabled ? {
                isValid: !0,
                value: n.value
            } : e, F4) : F4;
    function j4(t, e, n = "validate") {
        if (BS(t) || Array.isArray(t) && t.every(BS) || El(t) && !t) return {
            type: n,
            message: BS(t) ? t : "",
            ref: e
        };
    }
    var Xg = (t)=>Li(t) && !dM(t) ? t : {
            value: t,
            message: ""
        }, B4 = async (t, e, n, r, i, s)=>{
        const { ref: o, refs: a, required: l, maxLength: c, minLength: u, min: f, max: h, pattern: m, validate: v, name: _, valueAsNumber: w, mount: b } = t._f, M = St(n, _);
        if (!b || e.has(_)) return {};
        const E = a ? a[0] : o, T = (U)=>{
            i && E.reportValidity && (E.setCustomValidity(El(U) ? "" : U || ""), E.reportValidity());
        }, P = {}, A = pk(o), O = Nw(o), D = A || O, R = (w || hk(o)) && ki(o.value) && ki(M) || uM(o) && o.value === "" || M === "" || Array.isArray(M) && !M.length, N = i7.bind(null, _, r, P), k = (U, B, j, K = rd.maxLength, q = rd.minLength)=>{
            const ee = U ? B : j;
            P[_] = {
                type: U ? K : q,
                message: ee,
                ref: o,
                ...N(U ? K : q, ee)
            };
        };
        if (s ? !Array.isArray(M) || !M.length : l && (!D && (R || jo(M)) || El(M) && !M || O && !s7(a).isValid || A && !o7(a).isValid)) {
            const { value: U, message: B } = BS(l) ? {
                value: !!l,
                message: l
            } : Xg(l);
            if (U && (P[_] = {
                type: rd.required,
                message: B,
                ref: E,
                ...N(rd.required, B)
            }, !r)) return T(B), P;
        }
        if (!R && (!jo(f) || !jo(h))) {
            let U, B;
            const j = Xg(h), K = Xg(f);
            if (!jo(M) && !isNaN(M)) {
                const q = o.valueAsNumber || M && +M;
                jo(j.value) || (U = q > j.value), jo(K.value) || (B = q < K.value);
            } else {
                const q = o.valueAsDate || new Date(M), ee = ($)=>new Date(new Date().toDateString() + " " + $), W = o.type == "time", Z = o.type == "week";
                nu(j.value) && M && (U = W ? ee(M) > ee(j.value) : Z ? M > j.value : q > new Date(j.value)), nu(K.value) && M && (B = W ? ee(M) < ee(K.value) : Z ? M < K.value : q < new Date(K.value));
            }
            if ((U || B) && (k(!!U, j.message, K.message, rd.max, rd.min), !r)) return T(P[_].message), P;
        }
        if ((c || u) && !R && (nu(M) || s && Array.isArray(M))) {
            const U = Xg(c), B = Xg(u), j = !jo(U.value) && M.length > +U.value, K = !jo(B.value) && M.length < +B.value;
            if ((j || K) && (k(j, U.message, B.message), !r)) return T(P[_].message), P;
        }
        if (m && !R && nu(M)) {
            const { value: U, message: B } = Xg(m);
            if (dM(U) && !M.match(U) && (P[_] = {
                type: rd.pattern,
                message: B,
                ref: o,
                ...N(rd.pattern, B)
            }, !r)) return T(B), P;
        }
        if (v) {
            if (Qc(v)) {
                const U = await v(M, n), B = j4(U, E);
                if (B && (P[_] = {
                    ...B,
                    ...N(rd.validate, B.message)
                }, !r)) return T(B.message), P;
            } else if (Li(v)) {
                let U = {};
                for(const B in v){
                    if (!fa(U) && !r) break;
                    const j = j4(await v[B](M, n), E, B);
                    j && (U = {
                        ...j,
                        ...N(B, j.message)
                    }, T(j.message), r && (P[_] = U));
                }
                if (!fa(U) && (P[_] = {
                    ref: E,
                    ...U
                }, !r)) return P;
            }
        }
        return T(!0), P;
    };
    function iae(t, e) {
        const n = e.slice(0, -1).length;
        let r = 0;
        for(; r < n;)t = ki(t) ? r++ : t[e[r++]];
        return t;
    }
    function sae(t) {
        for(const e in t)if (t.hasOwnProperty(e) && !ki(t[e])) return !1;
        return !0;
    }
    function us(t, e) {
        const n = Array.isArray(e) ? e : uk(e) ? [
            e
        ] : Qz(e), r = n.length === 1 ? t : iae(t, n), i = n.length - 1, s = n[i];
        return r && delete r[s], i !== 0 && (Li(r) && fa(r) || Array.isArray(r) && sae(r)) && us(t, n.slice(0, -1)), t;
    }
    var aI = ()=>{
        let t = [];
        return {
            get observers () {
                return t;
            },
            next: (i)=>{
                for (const s of t)s.next && s.next(i);
            },
            subscribe: (i)=>(t.push(i), {
                    unsubscribe: ()=>{
                        t = t.filter((s)=>s !== i);
                    }
                }),
            unsubscribe: ()=>{
                t = [];
            }
        };
    }, g3 = (t)=>jo(t) || !Yz(t);
    function Zf(t, e) {
        if (g3(t) || g3(e)) return t === e;
        if (Qp(t) && Qp(e)) return t.getTime() === e.getTime();
        const n = Object.keys(t), r = Object.keys(e);
        if (n.length !== r.length) return !1;
        for (const i of n){
            const s = t[i];
            if (!r.includes(i)) return !1;
            if (i !== "ref") {
                const o = e[i];
                if (Qp(s) && Qp(o) || Li(s) && Li(o) || Array.isArray(s) && Array.isArray(o) ? !Zf(s, o) : s !== o) return !1;
            }
        }
        return !0;
    }
    var a7 = (t)=>t.type === "select-multiple", oae = (t)=>pk(t) || Nw(t), lI = (t)=>uM(t) && t.isConnected, l7 = (t)=>{
        for(const e in t)if (Qc(t[e])) return !0;
        return !1;
    };
    function fM(t, e = {}) {
        const n = Array.isArray(t);
        if (Li(t) || n) for(const r in t)Array.isArray(t[r]) || Li(t[r]) && !l7(t[r]) ? (e[r] = Array.isArray(t[r]) ? [] : {}, fM(t[r], e[r])) : jo(t[r]) || (e[r] = !0);
        return e;
    }
    function c7(t, e, n) {
        const r = Array.isArray(t);
        if (Li(t) || r) for(const i in t)Array.isArray(t[i]) || Li(t[i]) && !l7(t[i]) ? ki(e) || g3(n[i]) ? n[i] = Array.isArray(t[i]) ? fM(t[i], []) : {
            ...fM(t[i])
        } : c7(t[i], jo(e) ? {} : e[i], n[i]) : n[i] = !Zf(t[i], e[i]);
        return n;
    }
    var Gv = (t, e)=>c7(t, e, fM(e)), u7 = (t, { valueAsNumber: e, valueAsDate: n, setValueAs: r })=>ki(t) ? t : e ? t === "" ? NaN : t && +t : n && nu(t) ? new Date(t) : r ? r(t) : t;
    function cI(t) {
        const e = t.ref;
        return hk(e) ? e.files : pk(e) ? o7(t.refs).value : a7(e) ? [
            ...e.selectedOptions
        ].map(({ value: n })=>n) : Nw(e) ? s7(t.refs).value : u7(ki(e.value) ? t.ref.value : e.value, t);
    }
    var aae = (t, e, n, r)=>{
        const i = {};
        for (const s of t){
            const o = St(e, s);
            o && yr(i, s, o._f);
        }
        return {
            criteriaMode: n,
            names: [
                ...t
            ],
            fields: i,
            shouldUseNativeValidation: r
        };
    }, Xv = (t)=>ki(t) ? t : dM(t) ? t.source : Li(t) ? dM(t.value) ? t.value.source : t.value : t;
    const U4 = "AsyncFunction";
    var lae = (t)=>!!t && !!t.validate && !!(Qc(t.validate) && t.validate.constructor.name === U4 || Li(t.validate) && Object.values(t.validate).find((e)=>e.constructor.name === U4)), cae = (t)=>t.mount && (t.required || t.min || t.max || t.maxLength || t.minLength || t.pattern || t.validate);
    function z4(t, e, n) {
        const r = St(t, n);
        if (r || uk(n)) return {
            error: r,
            name: n
        };
        const i = n.split(".");
        for(; i.length;){
            const s = i.join("."), o = St(e, s), a = St(t, s);
            if (o && !Array.isArray(o) && n !== s) return {
                name: n
            };
            if (a && a.type) return {
                name: s,
                error: a
            };
            i.pop();
        }
        return {
            name: n
        };
    }
    var uae = (t, e, n, r, i)=>i.isOnAll ? !1 : !n && i.isOnTouch ? !(e || t) : (n ? r.isOnBlur : i.isOnBlur) ? !t : (n ? r.isOnChange : i.isOnChange) ? t : !0, dae = (t, e)=>!KT(St(t, e)).length && us(t, e);
    const fae = {
        mode: dc.onSubmit,
        reValidateMode: dc.onChange,
        shouldFocusError: !0
    };
    function hae(t = {}) {
        let e = {
            ...fae,
            ...t
        }, n = {
            submitCount: 0,
            isDirty: !1,
            isLoading: Qc(e.defaultValues),
            isValidating: !1,
            isSubmitted: !1,
            isSubmitting: !1,
            isSubmitSuccessful: !1,
            isValid: !1,
            touchedFields: {},
            dirtyFields: {},
            validatingFields: {},
            errors: e.errors || {},
            disabled: e.disabled || !1
        }, r = {}, i = Li(e.defaultValues) || Li(e.values) ? da(e.defaultValues || e.values) || {} : {}, s = e.shouldUnregister ? {} : da(i), o = {
            action: !1,
            mount: !1,
            watch: !1
        }, a = {
            mount: new Set,
            disabled: new Set,
            unMount: new Set,
            array: new Set,
            watch: new Set
        }, l, c = 0;
        const u = {
            isDirty: !1,
            dirtyFields: !1,
            validatingFields: !1,
            touchedFields: !1,
            isValidating: !1,
            isValid: !1,
            errors: !1
        }, f = {
            values: aI(),
            array: aI(),
            state: aI()
        }, h = k4(e.mode), m = k4(e.reValidateMode), v = e.criteriaMode === dc.all, _ = (de)=>(ce)=>{
                clearTimeout(c), c = setTimeout(de, ce);
            }, w = async (de)=>{
            if (!e.disabled && (u.isValid || de)) {
                const ce = e.resolver ? fa((await D()).errors) : await N(r, !0);
                ce !== n.isValid && f.state.next({
                    isValid: ce
                });
            }
        }, b = (de, ce)=>{
            !e.disabled && (u.isValidating || u.validatingFields) && ((de || Array.from(a.mount)).forEach((ae)=>{
                ae && (ce ? yr(n.validatingFields, ae, ce) : us(n.validatingFields, ae));
            }), f.state.next({
                validatingFields: n.validatingFields,
                isValidating: !fa(n.validatingFields)
            }));
        }, M = (de, ce = [], ae, X, G = !0, he = !0)=>{
            if (X && ae && !e.disabled) {
                if (o.action = !0, he && Array.isArray(St(r, de))) {
                    const pe = ae(St(r, de), X.argA, X.argB);
                    G && yr(r, de, pe);
                }
                if (he && Array.isArray(St(n.errors, de))) {
                    const pe = ae(St(n.errors, de), X.argA, X.argB);
                    G && yr(n.errors, de, pe), dae(n.errors, de);
                }
                if (u.touchedFields && he && Array.isArray(St(n.touchedFields, de))) {
                    const pe = ae(St(n.touchedFields, de), X.argA, X.argB);
                    G && yr(n.touchedFields, de, pe);
                }
                u.dirtyFields && (n.dirtyFields = Gv(i, s)), f.state.next({
                    name: de,
                    isDirty: U(de, ce),
                    dirtyFields: n.dirtyFields,
                    errors: n.errors,
                    isValid: n.isValid
                });
            } else yr(s, de, ce);
        }, E = (de, ce)=>{
            yr(n.errors, de, ce), f.state.next({
                errors: n.errors
            });
        }, T = (de)=>{
            n.errors = de, f.state.next({
                errors: n.errors,
                isValid: !1
            });
        }, P = (de, ce, ae, X)=>{
            const G = St(r, de);
            if (G) {
                const he = St(s, de, ki(ae) ? St(i, de) : ae);
                ki(he) || X && X.defaultChecked || ce ? yr(s, de, ce ? he : cI(G._f)) : K(de, he), o.mount && w();
            }
        }, A = (de, ce, ae, X, G)=>{
            let he = !1, pe = !1;
            const me = {
                name: de
            };
            if (!e.disabled) {
                const Ie = !!(St(r, de) && St(r, de)._f && St(r, de)._f.disabled);
                if (!ae || X) {
                    u.isDirty && (pe = n.isDirty, n.isDirty = me.isDirty = U(), he = pe !== me.isDirty);
                    const Xe = Ie || Zf(St(i, de), ce);
                    pe = !!(!Ie && St(n.dirtyFields, de)), Xe || Ie ? us(n.dirtyFields, de) : yr(n.dirtyFields, de, !0), me.dirtyFields = n.dirtyFields, he = he || u.dirtyFields && pe !== !Xe;
                }
                if (ae) {
                    const Xe = St(n.touchedFields, de);
                    Xe || (yr(n.touchedFields, de, ae), me.touchedFields = n.touchedFields, he = he || u.touchedFields && Xe !== ae);
                }
                he && G && f.state.next(me);
            }
            return he ? me : {};
        }, O = (de, ce, ae, X)=>{
            const G = St(n.errors, de), he = u.isValid && El(ce) && n.isValid !== ce;
            if (e.delayError && ae ? (l = _(()=>E(de, ae)), l(e.delayError)) : (clearTimeout(c), l = null, ae ? yr(n.errors, de, ae) : us(n.errors, de)), (ae ? !Zf(G, ae) : G) || !fa(X) || he) {
                const pe = {
                    ...X,
                    ...he && El(ce) ? {
                        isValid: ce
                    } : {},
                    errors: n.errors,
                    name: de
                };
                n = {
                    ...n,
                    ...pe
                }, f.state.next(pe);
            }
        }, D = async (de)=>{
            b(de, !0);
            const ce = await e.resolver(s, e.context, aae(de || a.mount, r, e.criteriaMode, e.shouldUseNativeValidation));
            return b(de), ce;
        }, R = async (de)=>{
            const { errors: ce } = await D(de);
            if (de) for (const ae of de){
                const X = St(ce, ae);
                X ? yr(n.errors, ae, X) : us(n.errors, ae);
            }
            else n.errors = ce;
            return ce;
        }, N = async (de, ce, ae = {
            valid: !0
        })=>{
            for(const X in de){
                const G = de[X];
                if (G) {
                    const { _f: he, ...pe } = G;
                    if (he) {
                        const me = a.array.has(he.name), Ie = G._f && lae(G._f);
                        Ie && u.validatingFields && b([
                            X
                        ], !0);
                        const Xe = await B4(G, a.disabled, s, v, e.shouldUseNativeValidation && !ce, me);
                        if (Ie && u.validatingFields && b([
                            X
                        ]), Xe[he.name] && (ae.valid = !1, ce)) break;
                        !ce && (St(Xe, he.name) ? me ? rae(n.errors, Xe, he.name) : yr(n.errors, he.name, Xe[he.name]) : us(n.errors, he.name));
                    }
                    !fa(pe) && await N(pe, ce, ae);
                }
            }
            return ae.valid;
        }, k = ()=>{
            for (const de of a.unMount){
                const ce = St(r, de);
                ce && (ce._f.refs ? ce._f.refs.every((ae)=>!lI(ae)) : !lI(ce._f.ref)) && ge(de);
            }
            a.unMount = new Set;
        }, U = (de, ce)=>!e.disabled && (de && ce && yr(s, de, ce), !Zf(H(), i)), B = (de, ce, ae)=>r7(de, a, {
                ...o.mount ? s : ki(ce) ? i : nu(de) ? {
                    [de]: ce
                } : ce
            }, ae, ce), j = (de)=>KT(St(o.mount ? s : i, de, e.shouldUnregister ? St(i, de, []) : [])), K = (de, ce, ae = {})=>{
            const X = St(r, de);
            let G = ce;
            if (X) {
                const he = X._f;
                he && (!he.disabled && yr(s, de, u7(ce, he)), G = uM(he.ref) && jo(ce) ? "" : ce, a7(he.ref) ? [
                    ...he.ref.options
                ].forEach((pe)=>pe.selected = G.includes(pe.value)) : he.refs ? Nw(he.ref) ? he.refs.length > 1 ? he.refs.forEach((pe)=>(!pe.defaultChecked || !pe.disabled) && (pe.checked = Array.isArray(G) ? !!G.find((me)=>me === pe.value) : G === pe.value)) : he.refs[0] && (he.refs[0].checked = !!G) : he.refs.forEach((pe)=>pe.checked = pe.value === G) : hk(he.ref) ? he.ref.value = "" : (he.ref.value = G, he.ref.type || f.values.next({
                    name: de,
                    values: {
                        ...s
                    }
                })));
            }
            (ae.shouldDirty || ae.shouldTouch) && A(de, G, ae.shouldTouch, ae.shouldDirty, !0), ae.shouldValidate && $(de);
        }, q = (de, ce, ae)=>{
            for(const X in ce){
                const G = ce[X], he = `${de}.${X}`, pe = St(r, he);
                (a.array.has(de) || Li(G) || pe && !pe._f) && !Qp(G) ? q(he, G, ae) : K(he, G, ae);
            }
        }, ee = (de, ce, ae = {})=>{
            const X = St(r, de), G = a.array.has(de), he = da(ce);
            yr(s, de, he), G ? (f.array.next({
                name: de,
                values: {
                    ...s
                }
            }), (u.isDirty || u.dirtyFields) && ae.shouldDirty && f.state.next({
                name: de,
                dirtyFields: Gv(i, s),
                isDirty: U(de, he)
            })) : X && !X._f && !jo(he) ? q(de, he, ae) : K(de, he, ae), O4(de, a) && f.state.next({
                ...n
            }), f.values.next({
                name: o.mount ? de : void 0,
                values: {
                    ...s
                }
            });
        }, W = async (de)=>{
            o.mount = !0;
            const ce = de.target;
            let ae = ce.name, X = !0;
            const G = St(r, ae), he = ()=>ce.type ? cI(G._f) : Zz(de), pe = (me)=>{
                X = Number.isNaN(me) || Qp(me) && isNaN(me.getTime()) || Zf(me, St(s, ae, me));
            };
            if (G) {
                let me, Ie;
                const Xe = he(), Ze = de.type === cM.BLUR || de.type === cM.FOCUS_OUT, at = !cae(G._f) && !e.resolver && !St(n.errors, ae) && !G._f.deps || uae(Ze, St(n.touchedFields, ae), n.isSubmitted, m, h), Je = O4(ae, a, Ze);
                yr(s, ae, Xe), Ze ? (G._f.onBlur && G._f.onBlur(de), l && l(0)) : G._f.onChange && G._f.onChange(de);
                const Pe = A(ae, Xe, Ze, !1), je = !fa(Pe) || Je;
                if (!Ze && f.values.next({
                    name: ae,
                    type: de.type,
                    values: {
                        ...s
                    }
                }), at) return u.isValid && (e.mode === "onBlur" && Ze ? w() : Ze || w()), je && f.state.next({
                    name: ae,
                    ...Je ? {} : Pe
                });
                if (!Ze && Je && f.state.next({
                    ...n
                }), e.resolver) {
                    const { errors: rt } = await D([
                        ae
                    ]);
                    if (pe(Xe), X) {
                        const ct = z4(n.errors, r, ae), st = z4(rt, r, ct.name || ae);
                        me = st.error, ae = st.name, Ie = fa(rt);
                    }
                } else b([
                    ae
                ], !0), me = (await B4(G, a.disabled, s, v, e.shouldUseNativeValidation))[ae], b([
                    ae
                ]), pe(Xe), X && (me ? Ie = !1 : u.isValid && (Ie = await N(r, !0)));
                X && (G._f.deps && $(G._f.deps), O(ae, Ie, me, Pe));
            }
        }, Z = (de, ce)=>{
            if (St(n.errors, ce) && de.focus) return de.focus(), 1;
        }, $ = async (de, ce = {})=>{
            let ae, X;
            const G = Gx(de);
            if (e.resolver) {
                const he = await R(ki(de) ? de : G);
                ae = fa(he), X = de ? !G.some((pe)=>St(he, pe)) : ae;
            } else de ? (X = (await Promise.all(G.map(async (he)=>{
                const pe = St(r, he);
                return await N(pe && pe._f ? {
                    [he]: pe
                } : pe);
            }))).every(Boolean), !(!X && !n.isValid) && w()) : X = ae = await N(r);
            return f.state.next({
                ...!nu(de) || u.isValid && ae !== n.isValid ? {} : {
                    name: de
                },
                ...e.resolver || !de ? {
                    isValid: ae
                } : {},
                errors: n.errors
            }), ce.shouldFocus && !X && Xx(r, Z, de ? G : a.mount), X;
        }, H = (de)=>{
            const ce = {
                ...o.mount ? s : i
            };
            return ki(de) ? ce : nu(de) ? St(ce, de) : de.map((ae)=>St(ce, ae));
        }, se = (de, ce)=>({
                invalid: !!St((ce || n).errors, de),
                isDirty: !!St((ce || n).dirtyFields, de),
                error: St((ce || n).errors, de),
                isValidating: !!St(n.validatingFields, de),
                isTouched: !!St((ce || n).touchedFields, de)
            }), le = (de)=>{
            de && Gx(de).forEach((ce)=>us(n.errors, ce)), f.state.next({
                errors: de ? n.errors : {}
            });
        }, ne = (de, ce, ae)=>{
            const X = (St(r, de, {
                _f: {}
            })._f || {}).ref, G = St(n.errors, de) || {}, { ref: he, message: pe, type: me, ...Ie } = G;
            yr(n.errors, de, {
                ...Ie,
                ...ce,
                ref: X
            }), f.state.next({
                name: de,
                errors: n.errors,
                isValid: !1
            }), ae && ae.shouldFocus && X && X.focus && X.focus();
        }, ue = (de, ce)=>Qc(de) ? f.values.subscribe({
                next: (ae)=>de(B(void 0, ce), ae)
            }) : B(de, ce, !0), ge = (de, ce = {})=>{
            for (const ae of de ? Gx(de) : a.mount)a.mount.delete(ae), a.array.delete(ae), ce.keepValue || (us(r, ae), us(s, ae)), !ce.keepError && us(n.errors, ae), !ce.keepDirty && us(n.dirtyFields, ae), !ce.keepTouched && us(n.touchedFields, ae), !ce.keepIsValidating && us(n.validatingFields, ae), !e.shouldUnregister && !ce.keepDefaultValue && us(i, ae);
            f.values.next({
                values: {
                    ...s
                }
            }), f.state.next({
                ...n,
                ...ce.keepDirty ? {
                    isDirty: U()
                } : {}
            }), !ce.keepIsValid && w();
        }, ye = ({ disabled: de, name: ce, field: ae, fields: X })=>{
            (El(de) && o.mount || de || a.disabled.has(ce)) && (de ? a.disabled.add(ce) : a.disabled.delete(ce), A(ce, cI(ae ? ae._f : St(X, ce)._f), !1, !1, !0));
        }, _e = (de, ce = {})=>{
            let ae = St(r, de);
            const X = El(ce.disabled) || El(e.disabled);
            return yr(r, de, {
                ...ae || {},
                _f: {
                    ...ae && ae._f ? ae._f : {
                        ref: {
                            name: de
                        }
                    },
                    name: de,
                    mount: !0,
                    ...ce
                }
            }), a.mount.add(de), ae ? ye({
                field: ae,
                disabled: El(ce.disabled) ? ce.disabled : e.disabled,
                name: de
            }) : P(de, !0, ce.value), {
                ...X ? {
                    disabled: ce.disabled || e.disabled
                } : {},
                ...e.progressive ? {
                    required: !!ce.required,
                    min: Xv(ce.min),
                    max: Xv(ce.max),
                    minLength: Xv(ce.minLength),
                    maxLength: Xv(ce.maxLength),
                    pattern: Xv(ce.pattern)
                } : {},
                name: de,
                onChange: W,
                onBlur: W,
                ref: (G)=>{
                    if (G) {
                        _e(de, ce), ae = St(r, de);
                        const he = ki(G.value) && G.querySelectorAll && G.querySelectorAll("input,select,textarea")[0] || G, pe = oae(he), me = ae._f.refs || [];
                        if (pe ? me.find((Ie)=>Ie === he) : he === ae._f.ref) return;
                        yr(r, de, {
                            _f: {
                                ...ae._f,
                                ...pe ? {
                                    refs: [
                                        ...me.filter(lI),
                                        he,
                                        ...Array.isArray(St(i, de)) ? [
                                            {}
                                        ] : []
                                    ],
                                    ref: {
                                        type: he.type,
                                        name: de
                                    }
                                } : {
                                    ref: he
                                }
                            }
                        }), P(de, !1, void 0, he);
                    } else ae = St(r, de, {}), ae._f && (ae._f.mount = !1), (e.shouldUnregister || ce.shouldUnregister) && !(Jz(a.array, de) && o.action) && a.unMount.add(de);
                }
            };
        }, Te = ()=>e.shouldFocusError && Xx(r, Z, a.mount), Re = (de)=>{
            El(de) && (f.state.next({
                disabled: de
            }), Xx(r, (ce, ae)=>{
                const X = St(r, ae);
                X && (ce.disabled = X._f.disabled || de, Array.isArray(X._f.refs) && X._f.refs.forEach((G)=>{
                    G.disabled = X._f.disabled || de;
                }));
            }, 0, !1));
        }, Fe = (de, ce)=>async (ae)=>{
                let X;
                ae && (ae.preventDefault && ae.preventDefault(), ae.persist && ae.persist());
                let G = da(s);
                if (a.disabled.size) for (const he of a.disabled)yr(G, he, void 0);
                if (f.state.next({
                    isSubmitting: !0
                }), e.resolver) {
                    const { errors: he, values: pe } = await D();
                    n.errors = he, G = pe;
                } else await N(r);
                if (us(n.errors, "root"), fa(n.errors)) {
                    f.state.next({
                        errors: {}
                    });
                    try {
                        await de(G, ae);
                    } catch (he) {
                        X = he;
                    }
                } else ce && await ce({
                    ...n.errors
                }, ae), Te(), setTimeout(Te);
                if (f.state.next({
                    isSubmitted: !0,
                    isSubmitting: !1,
                    isSubmitSuccessful: fa(n.errors) && !X,
                    submitCount: n.submitCount + 1,
                    errors: n.errors
                }), X) throw X;
            }, be = (de, ce = {})=>{
            St(r, de) && (ki(ce.defaultValue) ? ee(de, da(St(i, de))) : (ee(de, ce.defaultValue), yr(i, de, da(ce.defaultValue))), ce.keepTouched || us(n.touchedFields, de), ce.keepDirty || (us(n.dirtyFields, de), n.isDirty = ce.defaultValue ? U(de, da(St(i, de))) : U()), ce.keepError || (us(n.errors, de), u.isValid && w()), f.state.next({
                ...n
            }));
        }, Me = (de, ce = {})=>{
            const ae = de ? da(de) : i, X = da(ae), G = fa(de), he = G ? i : X;
            if (ce.keepDefaultValues || (i = ae), !ce.keepValues) {
                if (ce.keepDirtyValues) {
                    const pe = new Set([
                        ...a.mount,
                        ...Object.keys(Gv(i, s))
                    ]);
                    for (const me of Array.from(pe))St(n.dirtyFields, me) ? yr(he, me, St(s, me)) : ee(me, St(he, me));
                } else {
                    if (ck && ki(de)) for (const pe of a.mount){
                        const me = St(r, pe);
                        if (me && me._f) {
                            const Ie = Array.isArray(me._f.refs) ? me._f.refs[0] : me._f.ref;
                            if (uM(Ie)) {
                                const Xe = Ie.closest("form");
                                if (Xe) {
                                    Xe.reset();
                                    break;
                                }
                            }
                        }
                    }
                    r = {};
                }
                s = e.shouldUnregister ? ce.keepDefaultValues ? da(i) : {} : da(he), f.array.next({
                    values: {
                        ...he
                    }
                }), f.values.next({
                    values: {
                        ...he
                    }
                });
            }
            a = {
                mount: ce.keepDirtyValues ? a.mount : new Set,
                unMount: new Set,
                array: new Set,
                disabled: new Set,
                watch: new Set,
                watchAll: !1,
                focus: ""
            }, o.mount = !u.isValid || !!ce.keepIsValid || !!ce.keepDirtyValues, o.watch = !!e.shouldUnregister, f.state.next({
                submitCount: ce.keepSubmitCount ? n.submitCount : 0,
                isDirty: G ? !1 : ce.keepDirty ? n.isDirty : !!(ce.keepDefaultValues && !Zf(de, i)),
                isSubmitted: ce.keepIsSubmitted ? n.isSubmitted : !1,
                dirtyFields: G ? {} : ce.keepDirtyValues ? ce.keepDefaultValues && s ? Gv(i, s) : n.dirtyFields : ce.keepDefaultValues && de ? Gv(i, de) : ce.keepDirty ? n.dirtyFields : {},
                touchedFields: ce.keepTouched ? n.touchedFields : {},
                errors: ce.keepErrors ? n.errors : {},
                isSubmitSuccessful: ce.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
                isSubmitting: !1
            });
        }, oe = (de, ce)=>Me(Qc(de) ? de(s) : de, ce);
        return {
            control: {
                register: _e,
                unregister: ge,
                getFieldState: se,
                handleSubmit: Fe,
                setError: ne,
                _executeSchema: D,
                _getWatch: B,
                _getDirty: U,
                _updateValid: w,
                _removeUnmounted: k,
                _updateFieldArray: M,
                _updateDisabledField: ye,
                _getFieldArray: j,
                _reset: Me,
                _resetDefaultValues: ()=>Qc(e.defaultValues) && e.defaultValues().then((de)=>{
                        oe(de, e.resetOptions), f.state.next({
                            isLoading: !1
                        });
                    }),
                _updateFormState: (de)=>{
                    n = {
                        ...n,
                        ...de
                    };
                },
                _disableForm: Re,
                _subjects: f,
                _proxyFormState: u,
                _setErrors: T,
                get _fields () {
                    return r;
                },
                get _formValues () {
                    return s;
                },
                get _state () {
                    return o;
                },
                set _state (de){
                    o = de;
                },
                get _defaultValues () {
                    return i;
                },
                get _names () {
                    return a;
                },
                set _names (de){
                    a = de;
                },
                get _formState () {
                    return n;
                },
                set _formState (de){
                    n = de;
                },
                get _options () {
                    return e;
                },
                set _options (de){
                    e = {
                        ...e,
                        ...de
                    };
                }
            },
            trigger: $,
            register: _e,
            handleSubmit: Fe,
            watch: ue,
            setValue: ee,
            getValues: H,
            reset: oe,
            resetField: be,
            clearErrors: le,
            unregister: ge,
            setError: ne,
            setFocus: (de, ce = {})=>{
                const ae = St(r, de), X = ae && ae._f;
                if (X) {
                    const G = X.refs ? X.refs[0] : X.ref;
                    G.focus && (G.focus(), ce.shouldSelect && Qc(G.select) && G.select());
                }
            },
            getFieldState: se
        };
    }
    function Cs(t = {}) {
        const e = lr.useRef(void 0), n = lr.useRef(void 0), [r, i] = lr.useState({
            isDirty: !1,
            isValidating: !1,
            isLoading: Qc(t.defaultValues),
            isSubmitted: !1,
            isSubmitting: !1,
            isSubmitSuccessful: !1,
            isValid: !1,
            submitCount: 0,
            dirtyFields: {},
            touchedFields: {},
            validatingFields: {},
            errors: t.errors || {},
            disabled: t.disabled || !1,
            defaultValues: Qc(t.defaultValues) ? void 0 : t.defaultValues
        });
        e.current || (e.current = {
            ...hae(t),
            formState: r
        });
        const s = e.current.control;
        return s._options = t, fk({
            subject: s._subjects.state,
            next: (o)=>{
                t7(o, s._proxyFormState, s._updateFormState, !0) && i({
                    ...s._formState
                });
            }
        }), lr.useEffect(()=>s._disableForm(t.disabled), [
            s,
            t.disabled
        ]), lr.useEffect(()=>{
            if (s._proxyFormState.isDirty) {
                const o = s._getDirty();
                o !== r.isDirty && s._subjects.state.next({
                    isDirty: o
                });
            }
        }, [
            s,
            r.isDirty
        ]), lr.useEffect(()=>{
            t.values && !Zf(t.values, n.current) ? (s._reset(t.values, s._options.resetOptions), n.current = t.values, i((o)=>({
                    ...o
                }))) : s._resetDefaultValues();
        }, [
            t.values,
            s
        ]), lr.useEffect(()=>{
            t.errors && s._setErrors(t.errors);
        }, [
            t.errors,
            s
        ]), lr.useEffect(()=>{
            s._state.mount || (s._updateValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({
                ...s._formState
            })), s._removeUnmounted();
        }), lr.useEffect(()=>{
            t.shouldUnregister && s._subjects.values.next({
                values: s._getWatch()
            });
        }, [
            t.shouldUnregister,
            s
        ]), e.current.formState = e7(r, s), e.current;
    }
    const V4 = (t, e, n)=>{
        if (t && "reportValidity" in t) {
            const r = St(n, e);
            t.setCustomValidity(r && r.message || ""), t.reportValidity();
        }
    }, d7 = (t, e)=>{
        for(const n in e.fields){
            const r = e.fields[n];
            r && r.ref && "reportValidity" in r.ref ? V4(r.ref, n, t) : r && r.refs && r.refs.forEach((i)=>V4(i, n, t));
        }
    }, pae = (t, e)=>{
        e.shouldUseNativeValidation && d7(t, e);
        const n = {};
        for(const r in t){
            const i = St(e.fields, r), s = Object.assign(t[r] || {}, {
                ref: i && i.ref
            });
            if (mae(e.names || Object.keys(t), r)) {
                const o = Object.assign({}, St(n, r));
                yr(o, "root", s), yr(n, r, o);
            } else yr(n, r, s);
        }
        return n;
    }, mae = (t, e)=>t.some((n)=>n.match(`^${e}\\.\\d+`));
    function gae(t, e) {
        for(var n = {}; t.length;){
            var r = t[0], i = r.code, s = r.message, o = r.path.join(".");
            if (!n[o]) if ("unionErrors" in r) {
                var a = r.unionErrors[0].errors[0];
                n[o] = {
                    message: a.message,
                    type: a.code
                };
            } else n[o] = {
                message: s,
                type: i
            };
            if ("unionErrors" in r && r.unionErrors.forEach(function(u) {
                return u.errors.forEach(function(f) {
                    return t.push(f);
                });
            }), e) {
                var l = n[o].types, c = l && l[r.code];
                n[o] = i7(o, e, n, i, c ? [].concat(c, r.message) : r.message);
            }
            t.shift();
        }
        return n;
    }
    function Rs(t, e, n) {
        return n === void 0 && (n = {}), function(r, i, s) {
            try {
                return Promise.resolve(function(o, a) {
                    try {
                        var l = Promise.resolve(t[n.mode === "sync" ? "parse" : "parseAsync"](r, e)).then(function(c) {
                            return s.shouldUseNativeValidation && d7({}, s), {
                                errors: {},
                                values: n.raw ? Object.assign({}, r) : c
                            };
                        });
                    } catch (c) {
                        return a(c);
                    }
                    return l && l.then ? l.then(void 0, a) : l;
                }(0, function(o) {
                    if (function(a) {
                        return Array.isArray(a?.errors);
                    }(o)) return {
                        values: {},
                        errors: pae(gae(o.errors, !s.shouldUseNativeValidation && s.criteriaMode === "all"), s)
                    };
                    throw o;
                }));
            } catch (o) {
                return Promise.reject(o);
            }
        };
    }
    var f7 = (t)=>{
        throw TypeError(t);
    }, h7 = (t, e, n)=>e.has(t) || f7("Cannot " + n), vr = (t, e, n)=>(h7(t, e, "read from private field"), n ? n.call(t) : e.get(t)), sc = (t, e, n)=>e.has(t) ? f7("Cannot add the same private member more than once") : e instanceof WeakSet ? e.add(t) : e.set(t, n), bl = (t, e, n, r)=>(h7(t, e, "write to private field"), e.set(t, n), n);
    const p7 = "KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHUobil7aWYobj09PSIvIilyZXR1cm57cGFyZW50Om51bGwsbmFtZToiIn07Y29uc3QgZT1uLnNwbGl0KCIvIikuZmlsdGVyKGk9PmkubGVuZ3RoPjApO2lmKGUubGVuZ3RoPT09MCl0aHJvdyBFcnJvcigiSW52YWxpZCBwYXRoIik7Y29uc3QgYT1lW2UubGVuZ3RoLTFdLHI9Ii8iK2Uuc2xpY2UoMCwtMSkuam9pbigiLyIpO3JldHVybntuYW1lOmEscGFyZW50OnJ9fWFzeW5jIGZ1bmN0aW9uIHcobixlKXtjb25zdHtwYXJlbnQ6YSxuYW1lOnJ9PXUobik7aWYoYT09bnVsbClyZXR1cm4gYXdhaXQgbmF2aWdhdG9yLnN0b3JhZ2UuZ2V0RGlyZWN0b3J5KCk7Y29uc3QgaT1hLnNwbGl0KCIvIikuZmlsdGVyKHQ9PnQubGVuZ3RoPjApO3RyeXtsZXQgdD1hd2FpdCBuYXZpZ2F0b3Iuc3RvcmFnZS5nZXREaXJlY3RvcnkoKTtmb3IoY29uc3QgcyBvZiBpKXQ9YXdhaXQgdC5nZXREaXJlY3RvcnlIYW5kbGUocyx7Y3JlYXRlOmUuY3JlYXRlfSk7aWYoZS5pc0ZpbGUpcmV0dXJuIGF3YWl0IHQuZ2V0RmlsZUhhbmRsZShyLHtjcmVhdGU6ZS5jcmVhdGV9KX1jYXRjaCh0KXtpZih0Lm5hbWU9PT0iTm90Rm91bmRFcnJvciIpcmV0dXJuIG51bGw7dGhyb3cgdH19Y29uc3QgZj17fTtzZWxmLm9ubWVzc2FnZT1hc3luYyBuPT57dmFyIGk7Y29uc3R7ZXZ0VHlwZTplLGFyZ3M6YX09bi5kYXRhO2xldCByPWZbYS5maWxlSWRdO3RyeXtsZXQgdDtjb25zdCBzPVtdO2lmKGU9PT0icmVnaXN0ZXIiKXtjb25zdCBsPWF3YWl0IHcoYS5maWxlUGF0aCx7Y3JlYXRlOiEwLGlzRmlsZTohMH0pO2lmKGw9PW51bGwpdGhyb3cgRXJyb3IoYG5vdCBmb3VuZCBmaWxlOiAke2EuZmlsZUlkfWApO3I9YXdhaXQgbC5jcmVhdGVTeW5jQWNjZXNzSGFuZGxlKHttb2RlOmEubW9kZX0pLGZbYS5maWxlSWRdPXJ9ZWxzZSBpZihlPT09ImNsb3NlIilhd2FpdCByLmNsb3NlKCksZGVsZXRlIGZbYS5maWxlSWRdO2Vsc2UgaWYoZT09PSJ0cnVuY2F0ZSIpYXdhaXQgci50cnVuY2F0ZShhLm5ld1NpemUpO2Vsc2UgaWYoZT09PSJ3cml0ZSIpe2NvbnN0e2RhdGE6bCxvcHRzOm99PW4uZGF0YS5hcmdzO3Q9YXdhaXQgci53cml0ZShsLG8pfWVsc2UgaWYoZT09PSJyZWFkIil7Y29uc3R7b2Zmc2V0Omwsc2l6ZTpvfT1uLmRhdGEuYXJncyxnPW5ldyBVaW50OEFycmF5KG8pLGQ9YXdhaXQgci5yZWFkKGcse2F0Omx9KSxjPWcuYnVmZmVyO3Q9ZD09PW8/YzooKGk9Yy50cmFuc2Zlcik9PW51bGw/dm9pZCAwOmkuY2FsbChjLGQpKT8/Yy5zbGljZSgwLGQpLHMucHVzaCh0KX1lbHNlIGU9PT0iZ2V0U2l6ZSI/dD1hd2FpdCByLmdldFNpemUoKTplPT09ImZsdXNoIiYmYXdhaXQgci5mbHVzaCgpO3NlbGYucG9zdE1lc3NhZ2Uoe2V2dFR5cGU6ImNhbGxiYWNrIixjYklkOm4uZGF0YS5jYklkLHJldHVyblZhbDp0fSxzKX1jYXRjaCh0KXtjb25zdCBzPXQ7c2VsZi5wb3N0TWVzc2FnZSh7ZXZ0VHlwZToidGhyb3dFcnJvciIsY2JJZDpuLmRhdGEuY2JJZCxlcnJNc2c6cy5uYW1lKyI6ICIrcy5tZXNzYWdlK2AKYCtKU09OLnN0cmluZ2lmeShuLmRhdGEpfSl9fX0pKCk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPW9wZnMtd29ya2VyLUY0UldscWNfLmpzLm1hcAo=", yae = (t)=>Uint8Array.from(atob(t), (e)=>e.charCodeAt(0)), W4 = typeof self < "u" && self.Blob && new Blob([
        yae(p7)
    ], {
        type: "text/javascript;charset=utf-8"
    });
    function vae(t) {
        let e;
        try {
            if (e = W4 && (self.URL || self.webkitURL).createObjectURL(W4), !e) throw "";
            const n = new Worker(e, {
                name: t?.name
            });
            return n.addEventListener("error", ()=>{
                (self.URL || self.webkitURL).revokeObjectURL(e);
            }), n;
        } catch  {
            return new Worker("data:text/javascript;base64," + p7, {
                name: t?.name
            });
        } finally{
            e && (self.URL || self.webkitURL).revokeObjectURL(e);
        }
    }
    async function xae(t, e, n) {
        const r = bae();
        return await r("register", {
            fileId: t,
            filePath: e,
            mode: n
        }), {
            read: async (i, s)=>await r("read", {
                    fileId: t,
                    offset: i,
                    size: s
                }),
            write: async (i, s)=>await r("write", {
                    fileId: t,
                    data: i,
                    opts: s
                }, [
                    ArrayBuffer.isView(i) ? i.buffer : i
                ]),
            close: async ()=>await r("close", {
                    fileId: t
                }),
            truncate: async (i)=>await r("truncate", {
                    fileId: t,
                    newSize: i
                }),
            getSize: async ()=>await r("getSize", {
                    fileId: t
                }),
            flush: async ()=>await r("flush", {
                    fileId: t
                })
        };
    }
    const g1 = [];
    let uI = 0;
    function bae() {
        if (g1.length < 3) {
            const e = t();
            return g1.push(e), e;
        } else {
            const e = g1[uI];
            return uI = (uI + 1) % g1.length, e;
        }
        function t() {
            const e = new vae;
            let n = 0, r = {};
            return e.onmessage = ({ data: i })=>{
                var s, o;
                i.evtType === "callback" ? (s = r[i.cbId]) == null || s.resolve(i.returnVal) : i.evtType === "throwError" && ((o = r[i.cbId]) == null || o.reject(Error(i.errMsg))), delete r[i.cbId];
            }, async function(i, s, o = []) {
                n += 1;
                const a = new Promise((l, c)=>{
                    r[n] = {
                        resolve: l,
                        reject: c
                    };
                });
                return e.postMessage({
                    cbId: n,
                    evtType: i,
                    args: s
                }, o), a;
            };
        }
    }
    function YT(t) {
        if (t === "/") return {
            parent: null,
            name: ""
        };
        const e = t.split("/").filter((i)=>i.length > 0);
        if (e.length === 0) throw Error("Invalid path");
        const n = e[e.length - 1], r = "/" + e.slice(0, -1).join("/");
        return {
            name: n,
            parent: r
        };
    }
    async function eh(t, e) {
        const { parent: n, name: r } = YT(t);
        if (n == null) return await navigator.storage.getDirectory();
        const i = n.split("/").filter((s)=>s.length > 0);
        try {
            let s = await navigator.storage.getDirectory();
            for (const o of i)s = await s.getDirectoryHandle(o, {
                create: e.create
            });
            return e.isFile ? await s.getFileHandle(r, {
                create: e.create
            }) : await s.getDirectoryHandle(r, {
                create: e.create
            });
        } catch (s) {
            if (s.name === "NotFoundError") return null;
            throw s;
        }
    }
    async function m7(t) {
        const { parent: e, name: n } = YT(t);
        if (e == null) {
            const i = await navigator.storage.getDirectory();
            for await (const s of i.keys())await i.removeEntry(s, {
                recursive: !0
            });
            return;
        }
        const r = await eh(e, {
            create: !1,
            isFile: !1
        });
        r != null && await r.removeEntry(n, {
            recursive: !0
        });
    }
    function y3(t, e) {
        return `${t}/${e}`.replace("//", "/");
    }
    function em(t) {
        return new y7(t);
    }
    var Xc, US, vx;
    const wae = class g7 {
        constructor(e){
            sc(this, Xc), sc(this, US), sc(this, vx), bl(this, Xc, e);
            const { parent: n, name: r } = YT(e);
            bl(this, US, r), bl(this, vx, n);
        }
        get kind() {
            return "dir";
        }
        get name() {
            return vr(this, US);
        }
        get path() {
            return vr(this, Xc);
        }
        get parent() {
            return vr(this, vx) == null ? null : em(vr(this, vx));
        }
        async create() {
            return await eh(vr(this, Xc), {
                create: !0,
                isFile: !1
            }), em(vr(this, Xc));
        }
        async exists() {
            return await eh(vr(this, Xc), {
                create: !1,
                isFile: !1
            }) instanceof FileSystemDirectoryHandle;
        }
        async remove() {
            for (const e of await this.children())try {
                await e.remove();
            } catch (n) {
                console.warn(n);
            }
            try {
                await m7(vr(this, Xc));
            } catch (e) {
                console.warn(e);
            }
        }
        async children() {
            const e = await eh(vr(this, Xc), {
                create: !1,
                isFile: !1
            });
            if (e == null) return [];
            const n = [];
            for await (const r of e.values())n.push((r.kind === "file" ? ZT : em)(y3(vr(this, Xc), r.name)));
            return n;
        }
        async copyTo(e) {
            if (!await this.exists()) throw Error(`dir ${this.path} not exists`);
            if (e instanceof g7) {
                const n = await e.exists() ? em(y3(e.path, this.name)) : e;
                await n.create(), await Promise.all((await this.children()).map((r)=>r.copyTo(n)));
                return;
            } else if (e instanceof FileSystemDirectoryHandle) {
                await Promise.all((await this.children()).map(async (n)=>{
                    n.kind === "file" ? await n.copyTo(await e.getFileHandle(n.name, {
                        create: !0
                    })) : await n.copyTo(await e.getDirectoryHandle(n.name, {
                        create: !0
                    }));
                }));
                return;
            }
            throw Error("Illegal target type");
        }
        async moveTo(e) {
            await this.copyTo(e), await this.remove();
        }
    };
    Xc = new WeakMap, US = new WeakMap, vx = new WeakMap;
    let y7 = wae;
    const q4 = new Map;
    function ZT(t, e = "rw") {
        if (e === "rw") {
            const n = q4.get(t) ?? new hM(t, e);
            return q4.set(t, n), n;
        }
        return new hM(t, e);
    }
    async function v7(t, e, n = {
        overwrite: !0
    }) {
        if (e instanceof hM) {
            await v7(t, await e.stream(), n);
            return;
        }
        const r = await (t instanceof hM ? t : ZT(t, "rw")).createWriter();
        try {
            if (n.overwrite && await r.truncate(0), e instanceof ReadableStream) {
                const i = e.getReader();
                for(;;){
                    const { done: s, value: o } = await i.read();
                    if (s) break;
                    await r.write(o);
                }
            } else await r.write(e);
        } catch (i) {
            throw i;
        } finally{
            await r.close();
        }
    }
    let _ae = 0;
    const Sae = ()=>++_ae;
    var Kc, xx, zS, bx, VS, Uf, WS, wx;
    const Eae = class x7 {
        constructor(e, n){
            sc(this, Kc), sc(this, xx), sc(this, zS), sc(this, bx), sc(this, VS), sc(this, Uf, 0), sc(this, WS, (()=>{
                let s = null;
                return ()=>(bl(this, Uf, vr(this, Uf) + 1), s ?? (s = new Promise(async (o, a)=>{
                        try {
                            const l = await xae(vr(this, VS), vr(this, Kc), vr(this, bx));
                            o([
                                l,
                                async ()=>{
                                    bl(this, Uf, vr(this, Uf) - 1), !(vr(this, Uf) > 0) && (s = null, await l.close());
                                }
                            ]);
                        } catch (l) {
                            a(l);
                        }
                    })));
            })()), sc(this, wx, !1), bl(this, VS, Sae()), bl(this, Kc, e), bl(this, bx, {
                r: "read-only",
                rw: "readwrite",
                "rw-unsafe": "readwrite-unsafe"
            }[n]);
            const { parent: r, name: i } = YT(e);
            if (r == null) throw Error("Invalid path");
            bl(this, zS, i), bl(this, xx, r);
        }
        get kind() {
            return "file";
        }
        get path() {
            return vr(this, Kc);
        }
        get name() {
            return vr(this, zS);
        }
        get parent() {
            return vr(this, xx) == null ? null : em(vr(this, xx));
        }
        async createWriter() {
            if (vr(this, bx) === "read-only") throw Error("file is read-only");
            if (vr(this, wx)) throw Error("Other writer have not been closed");
            bl(this, wx, !0);
            const e = new TextEncoder, [n, r] = await vr(this, WS).call(this);
            let i = await n.getSize(), s = !1;
            return {
                write: async (o, a = {})=>{
                    if (s) throw Error("Writer is closed");
                    const l = typeof o == "string" ? e.encode(o) : o, c = a.at ?? i, u = l.byteLength;
                    return i = c + u, await n.write(l, {
                        at: c
                    });
                },
                truncate: async (o)=>{
                    if (s) throw Error("Writer is closed");
                    await n.truncate(o), i > o && (i = o);
                },
                flush: async ()=>{
                    if (s) throw Error("Writer is closed");
                    await n.flush();
                },
                close: async ()=>{
                    if (s) throw Error("Writer is closed");
                    s = !0, bl(this, wx, !1), await r();
                }
            };
        }
        async createReader() {
            const [e, n] = await vr(this, WS).call(this);
            let r = !1, i = 0;
            return {
                read: async (s, o = {})=>{
                    if (r) throw Error("Reader is closed");
                    const a = o.at ?? i, l = await e.read(a, s);
                    return i = a + l.byteLength, l;
                },
                getSize: async ()=>{
                    if (r) throw Error("Reader is closed");
                    return await e.getSize();
                },
                close: async ()=>{
                    r || (r = !0, await n());
                }
            };
        }
        async text() {
            return new TextDecoder().decode(await this.arrayBuffer());
        }
        async arrayBuffer() {
            const e = await eh(vr(this, Kc), {
                create: !1,
                isFile: !0
            });
            return e == null ? new ArrayBuffer(0) : (await e.getFile()).arrayBuffer();
        }
        async stream() {
            const e = await this.getOriginFile();
            return e == null ? new ReadableStream({
                pull: (n)=>{
                    n.close();
                }
            }) : e.stream();
        }
        async getOriginFile() {
            var e;
            return (e = await eh(vr(this, Kc), {
                create: !1,
                isFile: !0
            })) == null ? void 0 : e.getFile();
        }
        async getSize() {
            const e = await eh(vr(this, Kc), {
                create: !1,
                isFile: !0
            });
            return e == null ? 0 : (await e.getFile()).size;
        }
        async exists() {
            return await eh(vr(this, Kc), {
                create: !1,
                isFile: !0
            }) instanceof FileSystemFileHandle;
        }
        async remove() {
            if (vr(this, Uf)) throw Error("exists unclosed reader/writer");
            await m7(vr(this, Kc));
        }
        async copyTo(e) {
            if (e instanceof x7) {
                if (e.path === this.path) return;
                await v7(e.path, this);
                return;
            } else if (e instanceof y7) {
                if (!await this.exists()) throw Error(`file ${this.path} not exists`);
                return await this.copyTo(ZT(y3(e.path, this.name)));
            } else if (e instanceof FileSystemFileHandle) {
                await (await this.stream()).pipeTo(await e.createWritable());
                return;
            }
            throw Error("Illegal target type");
        }
        async moveTo(e) {
            await this.copyTo(e), await this.remove();
        }
    };
    Kc = new WeakMap, xx = new WeakMap, zS = new WeakMap, bx = new WeakMap, VS = new WeakMap, Uf = new WeakMap, WS = new WeakMap, wx = new WeakMap;
    let hM = Eae;
    const b7 = "/.opfs-tools-temp-dir";
    async function w7(t) {
        try {
            if (t.kind === "file") {
                if (!await t.exists()) return !0;
                const e = await t.createWriter();
                await e.truncate(0), await e.close(), await t.remove();
            } else await t.remove();
            return !0;
        } catch (e) {
            return console.warn(e), !1;
        }
    }
    function Mae() {
        setInterval(async ()=>{
            for (const t of await em(b7).children()){
                const e = /^\d+-(\d+)$/.exec(t.name);
                (e == null || Date.now() - Number(e[1]) > 2592e5) && await w7(t);
            }
        }, 60 * 1e3);
    }
    const H4 = [];
    let $4 = !1;
    async function Tae() {
        if (globalThis.localStorage == null) return;
        const t = "OPFS_TOOLS_EXPIRES_TMP_FILES";
        $4 || ($4 = !0, globalThis.addEventListener("unload", ()=>{
            H4.length !== 0 && localStorage.setItem(t, `${localStorage.getItem(t) ?? ""},${H4.join(",")}`);
        }));
        let e = localStorage.getItem(t) ?? "";
        for (const n of e.split(","))n.length !== 0 && await w7(ZT(`${b7}/${n}`)) && (e = e.replace(n, ""));
        localStorage.setItem(t, e.replace(/,{2,}/g, ","));
    }
    (async function() {
        var t;
        globalThis.__opfs_tools_tmpfile_init__ !== !0 && (globalThis.__opfs_tools_tmpfile_init__ = !0, !(globalThis.FileSystemDirectoryHandle == null || globalThis.FileSystemFileHandle == null || ((t = globalThis.navigator) == null ? void 0 : t.storage.getDirectory) == null) && (Mae(), await Tae()));
    })();
    const Cae = "icon-[cil--arrow-right]", _7 = "icon-[et--map]", Rae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                name: Y.string().min(1),
                cycles: Y.number().int(),
                sort: Y.number().int(),
                limit: Y.number().int(),
                image: Y.string().nullish()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "cycles",
                "sort",
                "limit",
                "image"
            ]
        }), Iae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintId: Y.string().min(1),
                conflictId: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "conflictId"
            ]
        }), Aae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintId: Y.string().min(1),
                dependencyId: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "dependencyId"
            ]
        }), Nae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintId: Y.string().min(1),
                inventoryId: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "inventoryId"
            ]
        }), Pae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintId: Y.string().min(1),
                resourceId: Y.string().min(1),
                amount: Y.number(),
                cycles: Y.number().int()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "resourceId",
                "amount",
                "cycles"
            ]
        }), kae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintProductionId: Y.string().min(1),
                blueprintId: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintProductionId",
                "blueprintId"
            ]
        }), Oae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintProductionId: Y.string().min(1),
                resourceId: Y.string().min(1),
                amount: Y.number(),
                passive: Nl()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintProductionId",
                "resourceId",
                "amount",
                "passive"
            ]
        }), Dae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintProductionId: Y.string().min(1),
                resourceId: Y.string().min(1),
                amount: Y.number()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintProductionId",
                "resourceId",
                "amount"
            ]
        }), Lae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                blueprintId: Y.string().min(1),
                resourceId: Y.string().min(1),
                amount: Y.number(),
                passive: Nl()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "blueprintId",
                "resourceId",
                "amount",
                "passive"
            ]
        }), Fae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                userId: Y.string().min(1),
                plotId: Y.string().min(1),
                blueprintId: Y.string().min(1),
                constructionId: Y.string().nullish(),
                landId: Y.string().min(1),
                productionId: Y.string().nullish(),
                recurringProductionId: Y.string().nullish(),
                valid: Nl()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "userId",
                "plotId",
                "blueprintId",
                "constructionId",
                "landId",
                "productionId",
                "recurringProductionId",
                "valid"
            ]
        }), jae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                resourceId: Y.string().min(1),
                amount: Y.number(),
                limit: Y.number(),
                type: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "resourceId",
                "amount",
                "limit",
                "type"
            ]
        }), Bae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                userId: Y.string().min(1),
                name: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "userId",
                "name"
            ]
        }), Uae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                name: Y.string().min(1),
                probability: Y.number().int(),
                limit: Y.number().int(),
                image: Y.string().nullish()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "probability",
                "limit",
                "image"
            ]
        }), zae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                name: Y.string().min(1),
                weight: Y.number().int(),
                image: Y.string().nullish()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "weight",
                "image"
            ]
        }), Vae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                code: Y.string().min(1),
                label: Y.string().min(1),
                group: Y.string().nullish(),
                sort: Y.number().int()
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "code",
                "label",
                "group",
                "sort"
            ]
        }), Wae = ({ shape: t, filter: e })=>vo({
            entity: go.merge(Y.object({
                name: Y.string().min(1),
                login: Y.string().min(1),
                password: Y.string().min(1)
            })),
            shape: t,
            filter: e,
            sort: [
                "id",
                "name",
                "login",
                "password"
            ]
        }), qae = Bae({
        shape: Y.object({
            name: Y.string().min(1)
        }),
        filter: yo
    }), Hae = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(qae.shape),
            defaultValues: {
                name: "",
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "name",
                    label: x.jsx(re, {
                        label: "Map name (label)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("name")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: _7,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Create map (submit)"
                        })
                    })
                })
            ]
        });
    }, S7 = Bt("/$locale/apps/derivean/game/")({
        async loader ({ context: { queryClient: t, kysely: e, session: n } }) {
            const r = await n();
            return {
                user: r,
                map: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "map",
                        r.id
                    ],
                    async queryFn () {
                        return e.transaction().execute((i)=>$s({
                                select: i.selectFrom("Map as m").select([
                                    "m.id",
                                    "m.name"
                                ]).where("m.userId", "=", r.id),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { user: t, map: e } = S7.useLoaderData(), { tva: n } = qr({
                from: "__root__"
            }), r = n().slots, i = Vr([
                [
                    "GameMap"
                ]
            ]), { locale: s } = sn({
                from: "/$locale"
            }), o = Om(), a = dn({
                async mutationFn ({ id: l }) {
                    return At.transaction().execute(async (c)=>Promise.all([
                            c.deleteFrom("Map").where("id", "=", l).where("userId", "=", t.id).execute(),
                            em(`/chunk/${l}`).remove()
                        ]));
                },
                async onSuccess () {
                    await i();
                }
            });
            return x.jsxs("div", {
                className: r.base({
                    css: [
                        "w-1/2",
                        "mx-auto",
                        "mt-24",
                        "flex",
                        "flex-col",
                        "gap-6"
                    ]
                }),
                children: [
                    x.jsx("div", {
                        className: "font-bold text-lg border-b border-slate-300",
                        children: x.jsx(re, {
                            label: "Map list (label)"
                        })
                    }),
                    e.length > 0 ? e.map((l)=>x.jsxs("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "justify-between",
                                "p-4",
                                "border",
                                "rounded-sm",
                                "border-slate-200",
                                "hover:border-slate-300",
                                "hover:bg-slate-100"
                            ]),
                            children: [
                                x.jsx(It, {
                                    icon: Cae,
                                    to: "/$locale/apps/derivean/map/$mapId/view",
                                    params: {
                                        locale: s,
                                        mapId: l.id
                                    },
                                    children: l.name
                                }),
                                x.jsx("div", {
                                    children: x.jsx(zn, {
                                        iconEnabled: Bi,
                                        variant: {
                                            variant: "danger"
                                        },
                                        loading: a.isPending,
                                        onClick: ()=>{
                                            a.mutate({
                                                id: l.id
                                            });
                                        }
                                    })
                                })
                            ]
                        }, l.id)) : x.jsx("div", {
                        className: mn([
                            "flex",
                            "items-center",
                            "justify-center",
                            "rounded-sm",
                            "border",
                            "border-amber-400",
                            "p-4",
                            "bg-amber-200",
                            "font-bold"
                        ]),
                        children: x.jsx(re, {
                            label: "There are no maps (label)"
                        })
                    }),
                    x.jsx("div", {
                        className: "font-bold text-lg border-b border-slate-300",
                        children: x.jsx(re, {
                            label: "New map (label)"
                        })
                    }),
                    x.jsx("div", {
                        children: x.jsx(Hae, {
                            mutation: dn({
                                async mutationFn (l) {
                                    return At.transaction().execute((c)=>c.insertInto("Map").values({
                                            id: tr(),
                                            userId: t.id,
                                            ...l
                                        }).returning("id").executeTakeFirstOrThrow());
                                },
                                async onSuccess (l) {
                                    o({
                                        to: "/$locale/apps/derivean/map/$mapId/view",
                                        params: {
                                            locale: s,
                                            mapId: l.id
                                        }
                                    }), await i();
                                }
                            })
                        })
                    })
                ]
            });
        }
    });
    var dI, G4;
    function mk() {
        if (G4) return dI;
        G4 = 1;
        var t = "\0", e = "\0", n = "";
        class r {
            _isDirected = !0;
            _isMultigraph = !1;
            _isCompound = !1;
            _label;
            _defaultNodeLabelFn = ()=>{};
            _defaultEdgeLabelFn = ()=>{};
            _nodes = {};
            _in = {};
            _preds = {};
            _out = {};
            _sucs = {};
            _edgeObjs = {};
            _edgeLabels = {};
            _nodeCount = 0;
            _edgeCount = 0;
            _parent;
            _children;
            constructor(u){
                u && (this._isDirected = Object.hasOwn(u, "directed") ? u.directed : !0, this._isMultigraph = Object.hasOwn(u, "multigraph") ? u.multigraph : !1, this._isCompound = Object.hasOwn(u, "compound") ? u.compound : !1), this._isCompound && (this._parent = {}, this._children = {}, this._children[e] = {});
            }
            isDirected() {
                return this._isDirected;
            }
            isMultigraph() {
                return this._isMultigraph;
            }
            isCompound() {
                return this._isCompound;
            }
            setGraph(u) {
                return this._label = u, this;
            }
            graph() {
                return this._label;
            }
            setDefaultNodeLabel(u) {
                return this._defaultNodeLabelFn = u, typeof u != "function" && (this._defaultNodeLabelFn = ()=>u), this;
            }
            nodeCount() {
                return this._nodeCount;
            }
            nodes() {
                return Object.keys(this._nodes);
            }
            sources() {
                var u = this;
                return this.nodes().filter((f)=>Object.keys(u._in[f]).length === 0);
            }
            sinks() {
                var u = this;
                return this.nodes().filter((f)=>Object.keys(u._out[f]).length === 0);
            }
            setNodes(u, f) {
                var h = arguments, m = this;
                return u.forEach(function(v) {
                    h.length > 1 ? m.setNode(v, f) : m.setNode(v);
                }), this;
            }
            setNode(u, f) {
                return Object.hasOwn(this._nodes, u) ? (arguments.length > 1 && (this._nodes[u] = f), this) : (this._nodes[u] = arguments.length > 1 ? f : this._defaultNodeLabelFn(u), this._isCompound && (this._parent[u] = e, this._children[u] = {}, this._children[e][u] = !0), this._in[u] = {}, this._preds[u] = {}, this._out[u] = {}, this._sucs[u] = {}, ++this._nodeCount, this);
            }
            node(u) {
                return this._nodes[u];
            }
            hasNode(u) {
                return Object.hasOwn(this._nodes, u);
            }
            removeNode(u) {
                var f = this;
                if (Object.hasOwn(this._nodes, u)) {
                    var h = (m)=>f.removeEdge(f._edgeObjs[m]);
                    delete this._nodes[u], this._isCompound && (this._removeFromParentsChildList(u), delete this._parent[u], this.children(u).forEach(function(m) {
                        f.setParent(m);
                    }), delete this._children[u]), Object.keys(this._in[u]).forEach(h), delete this._in[u], delete this._preds[u], Object.keys(this._out[u]).forEach(h), delete this._out[u], delete this._sucs[u], --this._nodeCount;
                }
                return this;
            }
            setParent(u, f) {
                if (!this._isCompound) throw new Error("Cannot set parent in a non-compound graph");
                if (f === void 0) f = e;
                else {
                    f += "";
                    for(var h = f; h !== void 0; h = this.parent(h))if (h === u) throw new Error("Setting " + f + " as parent of " + u + " would create a cycle");
                    this.setNode(f);
                }
                return this.setNode(u), this._removeFromParentsChildList(u), this._parent[u] = f, this._children[f][u] = !0, this;
            }
            _removeFromParentsChildList(u) {
                delete this._children[this._parent[u]][u];
            }
            parent(u) {
                if (this._isCompound) {
                    var f = this._parent[u];
                    if (f !== e) return f;
                }
            }
            children(u = e) {
                if (this._isCompound) {
                    var f = this._children[u];
                    if (f) return Object.keys(f);
                } else {
                    if (u === e) return this.nodes();
                    if (this.hasNode(u)) return [];
                }
            }
            predecessors(u) {
                var f = this._preds[u];
                if (f) return Object.keys(f);
            }
            successors(u) {
                var f = this._sucs[u];
                if (f) return Object.keys(f);
            }
            neighbors(u) {
                var f = this.predecessors(u);
                if (f) {
                    const m = new Set(f);
                    for (var h of this.successors(u))m.add(h);
                    return Array.from(m.values());
                }
            }
            isLeaf(u) {
                var f;
                return this.isDirected() ? f = this.successors(u) : f = this.neighbors(u), f.length === 0;
            }
            filterNodes(u) {
                var f = new this.constructor({
                    directed: this._isDirected,
                    multigraph: this._isMultigraph,
                    compound: this._isCompound
                });
                f.setGraph(this.graph());
                var h = this;
                Object.entries(this._nodes).forEach(function([_, w]) {
                    u(_) && f.setNode(_, w);
                }), Object.values(this._edgeObjs).forEach(function(_) {
                    f.hasNode(_.v) && f.hasNode(_.w) && f.setEdge(_, h.edge(_));
                });
                var m = {};
                function v(_) {
                    var w = h.parent(_);
                    return w === void 0 || f.hasNode(w) ? (m[_] = w, w) : w in m ? m[w] : v(w);
                }
                return this._isCompound && f.nodes().forEach((_)=>f.setParent(_, v(_))), f;
            }
            setDefaultEdgeLabel(u) {
                return this._defaultEdgeLabelFn = u, typeof u != "function" && (this._defaultEdgeLabelFn = ()=>u), this;
            }
            edgeCount() {
                return this._edgeCount;
            }
            edges() {
                return Object.values(this._edgeObjs);
            }
            setPath(u, f) {
                var h = this, m = arguments;
                return u.reduce(function(v, _) {
                    return m.length > 1 ? h.setEdge(v, _, f) : h.setEdge(v, _), _;
                }), this;
            }
            setEdge() {
                var u, f, h, m, v = !1, _ = arguments[0];
                typeof _ == "object" && _ !== null && "v" in _ ? (u = _.v, f = _.w, h = _.name, arguments.length === 2 && (m = arguments[1], v = !0)) : (u = _, f = arguments[1], h = arguments[3], arguments.length > 2 && (m = arguments[2], v = !0)), u = "" + u, f = "" + f, h !== void 0 && (h = "" + h);
                var w = o(this._isDirected, u, f, h);
                if (Object.hasOwn(this._edgeLabels, w)) return v && (this._edgeLabels[w] = m), this;
                if (h !== void 0 && !this._isMultigraph) throw new Error("Cannot set a named edge when isMultigraph = false");
                this.setNode(u), this.setNode(f), this._edgeLabels[w] = v ? m : this._defaultEdgeLabelFn(u, f, h);
                var b = a(this._isDirected, u, f, h);
                return u = b.v, f = b.w, Object.freeze(b), this._edgeObjs[w] = b, i(this._preds[f], u), i(this._sucs[u], f), this._in[f][w] = b, this._out[u][w] = b, this._edgeCount++, this;
            }
            edge(u, f, h) {
                var m = arguments.length === 1 ? l(this._isDirected, arguments[0]) : o(this._isDirected, u, f, h);
                return this._edgeLabels[m];
            }
            edgeAsObj() {
                const u = this.edge(...arguments);
                return typeof u != "object" ? {
                    label: u
                } : u;
            }
            hasEdge(u, f, h) {
                var m = arguments.length === 1 ? l(this._isDirected, arguments[0]) : o(this._isDirected, u, f, h);
                return Object.hasOwn(this._edgeLabels, m);
            }
            removeEdge(u, f, h) {
                var m = arguments.length === 1 ? l(this._isDirected, arguments[0]) : o(this._isDirected, u, f, h), v = this._edgeObjs[m];
                return v && (u = v.v, f = v.w, delete this._edgeLabels[m], delete this._edgeObjs[m], s(this._preds[f], u), s(this._sucs[u], f), delete this._in[f][m], delete this._out[u][m], this._edgeCount--), this;
            }
            inEdges(u, f) {
                var h = this._in[u];
                if (h) {
                    var m = Object.values(h);
                    return f ? m.filter((v)=>v.v === f) : m;
                }
            }
            outEdges(u, f) {
                var h = this._out[u];
                if (h) {
                    var m = Object.values(h);
                    return f ? m.filter((v)=>v.w === f) : m;
                }
            }
            nodeEdges(u, f) {
                var h = this.inEdges(u, f);
                if (h) return h.concat(this.outEdges(u, f));
            }
        }
        function i(c, u) {
            c[u] ? c[u]++ : c[u] = 1;
        }
        function s(c, u) {
            --c[u] || delete c[u];
        }
        function o(c, u, f, h) {
            var m = "" + u, v = "" + f;
            if (!c && m > v) {
                var _ = m;
                m = v, v = _;
            }
            return m + n + v + n + (h === void 0 ? t : h);
        }
        function a(c, u, f, h) {
            var m = "" + u, v = "" + f;
            if (!c && m > v) {
                var _ = m;
                m = v, v = _;
            }
            var w = {
                v: m,
                w: v
            };
            return h && (w.name = h), w;
        }
        function l(c, u) {
            return o(c, u.v, u.w, u.name);
        }
        return dI = r, dI;
    }
    var fI, X4;
    function $ae() {
        return X4 || (X4 = 1, fI = "2.2.4"), fI;
    }
    var hI, K4;
    function Gae() {
        return K4 || (K4 = 1, hI = {
            Graph: mk(),
            version: $ae()
        }), hI;
    }
    var pI, Y4;
    function Xae() {
        if (Y4) return pI;
        Y4 = 1;
        var t = mk();
        pI = {
            write: e,
            read: i
        };
        function e(s) {
            var o = {
                options: {
                    directed: s.isDirected(),
                    multigraph: s.isMultigraph(),
                    compound: s.isCompound()
                },
                nodes: n(s),
                edges: r(s)
            };
            return s.graph() !== void 0 && (o.value = structuredClone(s.graph())), o;
        }
        function n(s) {
            return s.nodes().map(function(o) {
                var a = s.node(o), l = s.parent(o), c = {
                    v: o
                };
                return a !== void 0 && (c.value = a), l !== void 0 && (c.parent = l), c;
            });
        }
        function r(s) {
            return s.edges().map(function(o) {
                var a = s.edge(o), l = {
                    v: o.v,
                    w: o.w
                };
                return o.name !== void 0 && (l.name = o.name), a !== void 0 && (l.value = a), l;
            });
        }
        function i(s) {
            var o = new t(s.options).setGraph(s.value);
            return s.nodes.forEach(function(a) {
                o.setNode(a.v, a.value), a.parent && o.setParent(a.v, a.parent);
            }), s.edges.forEach(function(a) {
                o.setEdge({
                    v: a.v,
                    w: a.w,
                    name: a.name
                }, a.value);
            }), o;
        }
        return pI;
    }
    var mI, Z4;
    function Kae() {
        if (Z4) return mI;
        Z4 = 1, mI = t;
        function t(e) {
            var n = {}, r = [], i;
            function s(o) {
                Object.hasOwn(n, o) || (n[o] = !0, i.push(o), e.successors(o).forEach(s), e.predecessors(o).forEach(s));
            }
            return e.nodes().forEach(function(o) {
                i = [], s(o), i.length && r.push(i);
            }), r;
        }
        return mI;
    }
    var gI, J4;
    function E7() {
        if (J4) return gI;
        J4 = 1;
        class t {
            _arr = [];
            _keyIndices = {};
            size() {
                return this._arr.length;
            }
            keys() {
                return this._arr.map(function(n) {
                    return n.key;
                });
            }
            has(n) {
                return Object.hasOwn(this._keyIndices, n);
            }
            priority(n) {
                var r = this._keyIndices[n];
                if (r !== void 0) return this._arr[r].priority;
            }
            min() {
                if (this.size() === 0) throw new Error("Queue underflow");
                return this._arr[0].key;
            }
            add(n, r) {
                var i = this._keyIndices;
                if (n = String(n), !Object.hasOwn(i, n)) {
                    var s = this._arr, o = s.length;
                    return i[n] = o, s.push({
                        key: n,
                        priority: r
                    }), this._decrease(o), !0;
                }
                return !1;
            }
            removeMin() {
                this._swap(0, this._arr.length - 1);
                var n = this._arr.pop();
                return delete this._keyIndices[n.key], this._heapify(0), n.key;
            }
            decrease(n, r) {
                var i = this._keyIndices[n];
                if (r > this._arr[i].priority) throw new Error("New priority is greater than current priority. Key: " + n + " Old: " + this._arr[i].priority + " New: " + r);
                this._arr[i].priority = r, this._decrease(i);
            }
            _heapify(n) {
                var r = this._arr, i = 2 * n, s = i + 1, o = n;
                i < r.length && (o = r[i].priority < r[o].priority ? i : o, s < r.length && (o = r[s].priority < r[o].priority ? s : o), o !== n && (this._swap(n, o), this._heapify(o)));
            }
            _decrease(n) {
                for(var r = this._arr, i = r[n].priority, s; n !== 0 && (s = n >> 1, !(r[s].priority < i));)this._swap(n, s), n = s;
            }
            _swap(n, r) {
                var i = this._arr, s = this._keyIndices, o = i[n], a = i[r];
                i[n] = a, i[r] = o, s[a.key] = n, s[o.key] = r;
            }
        }
        return gI = t, gI;
    }
    var yI, Q4;
    function M7() {
        if (Q4) return yI;
        Q4 = 1;
        var t = E7();
        yI = n;
        var e = ()=>1;
        function n(i, s, o, a) {
            return r(i, String(s), o || e, a || function(l) {
                return i.outEdges(l);
            });
        }
        function r(i, s, o, a) {
            var l = {}, c = new t, u, f, h = function(m) {
                var v = m.v !== u ? m.v : m.w, _ = l[v], w = o(m), b = f.distance + w;
                if (w < 0) throw new Error("dijkstra does not allow negative edge weights. Bad edge: " + m + " Weight: " + w);
                b < _.distance && (_.distance = b, _.predecessor = u, c.decrease(v, b));
            };
            for(i.nodes().forEach(function(m) {
                var v = m === s ? 0 : Number.POSITIVE_INFINITY;
                l[m] = {
                    distance: v
                }, c.add(m, v);
            }); c.size() > 0 && (u = c.removeMin(), f = l[u], f.distance !== Number.POSITIVE_INFINITY);)a(u).forEach(h);
            return l;
        }
        return yI;
    }
    var vI, e5;
    function Yae() {
        if (e5) return vI;
        e5 = 1;
        var t = M7();
        vI = e;
        function e(n, r, i) {
            return n.nodes().reduce(function(s, o) {
                return s[o] = t(n, o, r, i), s;
            }, {});
        }
        return vI;
    }
    var xI, t5;
    function T7() {
        if (t5) return xI;
        t5 = 1, xI = t;
        function t(e) {
            var n = 0, r = [], i = {}, s = [];
            function o(a) {
                var l = i[a] = {
                    onStack: !0,
                    lowlink: n,
                    index: n++
                };
                if (r.push(a), e.successors(a).forEach(function(f) {
                    Object.hasOwn(i, f) ? i[f].onStack && (l.lowlink = Math.min(l.lowlink, i[f].index)) : (o(f), l.lowlink = Math.min(l.lowlink, i[f].lowlink));
                }), l.lowlink === l.index) {
                    var c = [], u;
                    do u = r.pop(), i[u].onStack = !1, c.push(u);
                    while (a !== u);
                    s.push(c);
                }
            }
            return e.nodes().forEach(function(a) {
                Object.hasOwn(i, a) || o(a);
            }), s;
        }
        return xI;
    }
    var bI, n5;
    function Zae() {
        if (n5) return bI;
        n5 = 1;
        var t = T7();
        bI = e;
        function e(n) {
            return t(n).filter(function(r) {
                return r.length > 1 || r.length === 1 && n.hasEdge(r[0], r[0]);
            });
        }
        return bI;
    }
    var wI, r5;
    function Jae() {
        if (r5) return wI;
        r5 = 1, wI = e;
        var t = ()=>1;
        function e(r, i, s) {
            return n(r, i || t, s || function(o) {
                return r.outEdges(o);
            });
        }
        function n(r, i, s) {
            var o = {}, a = r.nodes();
            return a.forEach(function(l) {
                o[l] = {}, o[l][l] = {
                    distance: 0
                }, a.forEach(function(c) {
                    l !== c && (o[l][c] = {
                        distance: Number.POSITIVE_INFINITY
                    });
                }), s(l).forEach(function(c) {
                    var u = c.v === l ? c.w : c.v, f = i(c);
                    o[l][u] = {
                        distance: f,
                        predecessor: l
                    };
                });
            }), a.forEach(function(l) {
                var c = o[l];
                a.forEach(function(u) {
                    var f = o[u];
                    a.forEach(function(h) {
                        var m = f[l], v = c[h], _ = f[h], w = m.distance + v.distance;
                        w < _.distance && (_.distance = w, _.predecessor = v.predecessor);
                    });
                });
            }), o;
        }
        return wI;
    }
    var _I, i5;
    function C7() {
        if (i5) return _I;
        i5 = 1;
        function t(n) {
            var r = {}, i = {}, s = [];
            function o(a) {
                if (Object.hasOwn(i, a)) throw new e;
                Object.hasOwn(r, a) || (i[a] = !0, r[a] = !0, n.predecessors(a).forEach(o), delete i[a], s.push(a));
            }
            if (n.sinks().forEach(o), Object.keys(r).length !== n.nodeCount()) throw new e;
            return s;
        }
        class e extends Error {
            constructor(){
                super(...arguments);
            }
        }
        return _I = t, t.CycleException = e, _I;
    }
    var SI, s5;
    function Qae() {
        if (s5) return SI;
        s5 = 1;
        var t = C7();
        SI = e;
        function e(n) {
            try {
                t(n);
            } catch (r) {
                if (r instanceof t.CycleException) return !1;
                throw r;
            }
            return !0;
        }
        return SI;
    }
    var EI, o5;
    function R7() {
        if (o5) return EI;
        o5 = 1, EI = t;
        function t(i, s, o) {
            Array.isArray(s) || (s = [
                s
            ]);
            var a = i.isDirected() ? (f)=>i.successors(f) : (f)=>i.neighbors(f), l = o === "post" ? e : n, c = [], u = {};
            return s.forEach((f)=>{
                if (!i.hasNode(f)) throw new Error("Graph does not have node: " + f);
                l(f, a, u, c);
            }), c;
        }
        function e(i, s, o, a) {
            for(var l = [
                [
                    i,
                    !1
                ]
            ]; l.length > 0;){
                var c = l.pop();
                c[1] ? a.push(c[0]) : Object.hasOwn(o, c[0]) || (o[c[0]] = !0, l.push([
                    c[0],
                    !0
                ]), r(s(c[0]), (u)=>l.push([
                        u,
                        !1
                    ])));
            }
        }
        function n(i, s, o, a) {
            for(var l = [
                i
            ]; l.length > 0;){
                var c = l.pop();
                Object.hasOwn(o, c) || (o[c] = !0, a.push(c), r(s(c), (u)=>l.push(u)));
            }
        }
        function r(i, s) {
            for(var o = i.length; o--;)s(i[o], o, i);
            return i;
        }
        return EI;
    }
    var MI, a5;
    function ele() {
        if (a5) return MI;
        a5 = 1;
        var t = R7();
        MI = e;
        function e(n, r) {
            return t(n, r, "post");
        }
        return MI;
    }
    var TI, l5;
    function tle() {
        if (l5) return TI;
        l5 = 1;
        var t = R7();
        TI = e;
        function e(n, r) {
            return t(n, r, "pre");
        }
        return TI;
    }
    var CI, c5;
    function nle() {
        if (c5) return CI;
        c5 = 1;
        var t = mk(), e = E7();
        CI = n;
        function n(r, i) {
            var s = new t, o = {}, a = new e, l;
            function c(f) {
                var h = f.v === l ? f.w : f.v, m = a.priority(h);
                if (m !== void 0) {
                    var v = i(f);
                    v < m && (o[h] = l, a.decrease(h, v));
                }
            }
            if (r.nodeCount() === 0) return s;
            r.nodes().forEach(function(f) {
                a.add(f, Number.POSITIVE_INFINITY), s.setNode(f);
            }), a.decrease(r.nodes()[0], 0);
            for(var u = !1; a.size() > 0;){
                if (l = a.removeMin(), Object.hasOwn(o, l)) s.setEdge(l, o[l]);
                else {
                    if (u) throw new Error("Input graph is not connected: " + r);
                    u = !0;
                }
                r.nodeEdges(l).forEach(c);
            }
            return s;
        }
        return CI;
    }
    var RI, u5;
    function rle() {
        return u5 || (u5 = 1, RI = {
            components: Kae(),
            dijkstra: M7(),
            dijkstraAll: Yae(),
            findCycles: Zae(),
            floydWarshall: Jae(),
            isAcyclic: Qae(),
            postorder: ele(),
            preorder: tle(),
            prim: nle(),
            tarjan: T7(),
            topsort: C7()
        }), RI;
    }
    var II, d5;
    function wc() {
        if (d5) return II;
        d5 = 1;
        var t = Gae();
        return II = {
            Graph: t.Graph,
            json: Xae(),
            alg: rle(),
            version: t.version
        }, II;
    }
    var AI, f5;
    function ile() {
        if (f5) return AI;
        f5 = 1;
        class t {
            constructor(){
                let i = {};
                i._next = i._prev = i, this._sentinel = i;
            }
            dequeue() {
                let i = this._sentinel, s = i._prev;
                if (s !== i) return e(s), s;
            }
            enqueue(i) {
                let s = this._sentinel;
                i._prev && i._next && e(i), i._next = s._next, s._next._prev = i, s._next = i, i._prev = s;
            }
            toString() {
                let i = [], s = this._sentinel, o = s._prev;
                for(; o !== s;)i.push(JSON.stringify(o, n)), o = o._prev;
                return "[" + i.join(", ") + "]";
            }
        }
        function e(r) {
            r._prev._next = r._next, r._next._prev = r._prev, delete r._next, delete r._prev;
        }
        function n(r, i) {
            if (r !== "_next" && r !== "_prev") return i;
        }
        return AI = t, AI;
    }
    var NI, h5;
    function sle() {
        if (h5) return NI;
        h5 = 1;
        let t = wc().Graph, e = ile();
        NI = r;
        let n = ()=>1;
        function r(c, u) {
            if (c.nodeCount() <= 1) return [];
            let f = o(c, u || n);
            return i(f.graph, f.buckets, f.zeroIdx).flatMap((m)=>c.outEdges(m.v, m.w));
        }
        function i(c, u, f) {
            let h = [], m = u[u.length - 1], v = u[0], _;
            for(; c.nodeCount();){
                for(; _ = v.dequeue();)s(c, u, f, _);
                for(; _ = m.dequeue();)s(c, u, f, _);
                if (c.nodeCount()) {
                    for(let w = u.length - 2; w > 0; --w)if (_ = u[w].dequeue(), _) {
                        h = h.concat(s(c, u, f, _, !0));
                        break;
                    }
                }
            }
            return h;
        }
        function s(c, u, f, h, m) {
            let v = m ? [] : void 0;
            return c.inEdges(h.v).forEach((_)=>{
                let w = c.edge(_), b = c.node(_.v);
                m && v.push({
                    v: _.v,
                    w: _.w
                }), b.out -= w, a(u, f, b);
            }), c.outEdges(h.v).forEach((_)=>{
                let w = c.edge(_), b = _.w, M = c.node(b);
                M.in -= w, a(u, f, M);
            }), c.removeNode(h.v), v;
        }
        function o(c, u) {
            let f = new t, h = 0, m = 0;
            c.nodes().forEach((w)=>{
                f.setNode(w, {
                    v: w,
                    in: 0,
                    out: 0
                });
            }), c.edges().forEach((w)=>{
                let b = f.edge(w.v, w.w) || 0, M = u(w), E = b + M;
                f.setEdge(w.v, w.w, E), m = Math.max(m, f.node(w.v).out += M), h = Math.max(h, f.node(w.w).in += M);
            });
            let v = l(m + h + 3).map(()=>new e), _ = h + 1;
            return f.nodes().forEach((w)=>{
                a(v, _, f.node(w));
            }), {
                graph: f,
                buckets: v,
                zeroIdx: _
            };
        }
        function a(c, u, f) {
            f.out ? f.in ? c[f.out - f.in + u].enqueue(f) : c[c.length - 1].enqueue(f) : c[0].enqueue(f);
        }
        function l(c) {
            const u = [];
            for(let f = 0; f < c; f++)u.push(f);
            return u;
        }
        return NI;
    }
    var PI, p5;
    function Qi() {
        if (p5) return PI;
        p5 = 1;
        let t = wc().Graph;
        PI = {
            addBorderNode: u,
            addDummyNode: e,
            applyWithChunking: m,
            asNonCompoundGraph: r,
            buildLayerMatrix: a,
            intersectRect: o,
            mapValues: A,
            maxRank: v,
            normalizeRanks: l,
            notime: b,
            partition: _,
            pick: P,
            predecessorWeights: s,
            range: T,
            removeEmptyRanks: c,
            simplify: n,
            successorWeights: i,
            time: w,
            uniqueId: E,
            zipObject: O
        };
        function e(D, R, N, k) {
            let U;
            do U = E(k);
            while (D.hasNode(U));
            return N.dummy = R, D.setNode(U, N), U;
        }
        function n(D) {
            let R = new t().setGraph(D.graph());
            return D.nodes().forEach((N)=>R.setNode(N, D.node(N))), D.edges().forEach((N)=>{
                let k = R.edge(N.v, N.w) || {
                    weight: 0,
                    minlen: 1
                }, U = D.edge(N);
                R.setEdge(N.v, N.w, {
                    weight: k.weight + U.weight,
                    minlen: Math.max(k.minlen, U.minlen)
                });
            }), R;
        }
        function r(D) {
            let R = new t({
                multigraph: D.isMultigraph()
            }).setGraph(D.graph());
            return D.nodes().forEach((N)=>{
                D.children(N).length || R.setNode(N, D.node(N));
            }), D.edges().forEach((N)=>{
                R.setEdge(N, D.edge(N));
            }), R;
        }
        function i(D) {
            let R = D.nodes().map((N)=>{
                let k = {};
                return D.outEdges(N).forEach((U)=>{
                    k[U.w] = (k[U.w] || 0) + D.edge(U).weight;
                }), k;
            });
            return O(D.nodes(), R);
        }
        function s(D) {
            let R = D.nodes().map((N)=>{
                let k = {};
                return D.inEdges(N).forEach((U)=>{
                    k[U.v] = (k[U.v] || 0) + D.edge(U).weight;
                }), k;
            });
            return O(D.nodes(), R);
        }
        function o(D, R) {
            let N = D.x, k = D.y, U = R.x - N, B = R.y - k, j = D.width / 2, K = D.height / 2;
            if (!U && !B) throw new Error("Not possible to find intersection inside of the rectangle");
            let q, ee;
            return Math.abs(B) * j > Math.abs(U) * K ? (B < 0 && (K = -K), q = K * U / B, ee = K) : (U < 0 && (j = -j), q = j, ee = j * B / U), {
                x: N + q,
                y: k + ee
            };
        }
        function a(D) {
            let R = T(v(D) + 1).map(()=>[]);
            return D.nodes().forEach((N)=>{
                let k = D.node(N), U = k.rank;
                U !== void 0 && (R[U][k.order] = N);
            }), R;
        }
        function l(D) {
            let R = D.nodes().map((k)=>{
                let U = D.node(k).rank;
                return U === void 0 ? Number.MAX_VALUE : U;
            }), N = m(Math.min, R);
            D.nodes().forEach((k)=>{
                let U = D.node(k);
                Object.hasOwn(U, "rank") && (U.rank -= N);
            });
        }
        function c(D) {
            let R = D.nodes().map((j)=>D.node(j).rank), N = m(Math.min, R), k = [];
            D.nodes().forEach((j)=>{
                let K = D.node(j).rank - N;
                k[K] || (k[K] = []), k[K].push(j);
            });
            let U = 0, B = D.graph().nodeRankFactor;
            Array.from(k).forEach((j, K)=>{
                j === void 0 && K % B !== 0 ? --U : j !== void 0 && U && j.forEach((q)=>D.node(q).rank += U);
            });
        }
        function u(D, R, N, k) {
            let U = {
                width: 0,
                height: 0
            };
            return arguments.length >= 4 && (U.rank = N, U.order = k), e(D, "border", U, R);
        }
        function f(D, R = h) {
            const N = [];
            for(let k = 0; k < D.length; k += R){
                const U = D.slice(k, k + R);
                N.push(U);
            }
            return N;
        }
        const h = 65535;
        function m(D, R) {
            if (R.length > h) {
                const N = f(R);
                return D.apply(null, N.map((k)=>D.apply(null, k)));
            } else return D.apply(null, R);
        }
        function v(D) {
            const N = D.nodes().map((k)=>{
                let U = D.node(k).rank;
                return U === void 0 ? Number.MIN_VALUE : U;
            });
            return m(Math.max, N);
        }
        function _(D, R) {
            let N = {
                lhs: [],
                rhs: []
            };
            return D.forEach((k)=>{
                R(k) ? N.lhs.push(k) : N.rhs.push(k);
            }), N;
        }
        function w(D, R) {
            let N = Date.now();
            try {
                return R();
            } finally{
                console.log(D + " time: " + (Date.now() - N) + "ms");
            }
        }
        function b(D, R) {
            return R();
        }
        let M = 0;
        function E(D) {
            var R = ++M;
            return toString(D) + R;
        }
        function T(D, R, N = 1) {
            R == null && (R = D, D = 0);
            let k = (B)=>B < R;
            N < 0 && (k = (B)=>R < B);
            const U = [];
            for(let B = D; k(B); B += N)U.push(B);
            return U;
        }
        function P(D, R) {
            const N = {};
            for (const k of R)D[k] !== void 0 && (N[k] = D[k]);
            return N;
        }
        function A(D, R) {
            let N = R;
            return typeof R == "string" && (N = (k)=>k[R]), Object.entries(D).reduce((k, [U, B])=>(k[U] = N(B, U), k), {});
        }
        function O(D, R) {
            return D.reduce((N, k, U)=>(N[k] = R[U], N), {});
        }
        return PI;
    }
    var kI, m5;
    function ole() {
        if (m5) return kI;
        m5 = 1;
        let t = sle(), e = Qi().uniqueId;
        kI = {
            run: n,
            undo: i
        };
        function n(s) {
            (s.graph().acyclicer === "greedy" ? t(s, a(s)) : r(s)).forEach((l)=>{
                let c = s.edge(l);
                s.removeEdge(l), c.forwardName = l.name, c.reversed = !0, s.setEdge(l.w, l.v, c, e("rev"));
            });
            function a(l) {
                return (c)=>l.edge(c).weight;
            }
        }
        function r(s) {
            let o = [], a = {}, l = {};
            function c(u) {
                Object.hasOwn(l, u) || (l[u] = !0, a[u] = !0, s.outEdges(u).forEach((f)=>{
                    Object.hasOwn(a, f.w) ? o.push(f) : c(f.w);
                }), delete a[u]);
            }
            return s.nodes().forEach(c), o;
        }
        function i(s) {
            s.edges().forEach((o)=>{
                let a = s.edge(o);
                if (a.reversed) {
                    s.removeEdge(o);
                    let l = a.forwardName;
                    delete a.reversed, delete a.forwardName, s.setEdge(o.w, o.v, a, l);
                }
            });
        }
        return kI;
    }
    var OI, g5;
    function ale() {
        if (g5) return OI;
        g5 = 1;
        let t = Qi();
        OI = {
            run: e,
            undo: r
        };
        function e(i) {
            i.graph().dummyChains = [], i.edges().forEach((s)=>n(i, s));
        }
        function n(i, s) {
            let o = s.v, a = i.node(o).rank, l = s.w, c = i.node(l).rank, u = s.name, f = i.edge(s), h = f.labelRank;
            if (c === a + 1) return;
            i.removeEdge(s);
            let m, v, _;
            for(_ = 0, ++a; a < c; ++_, ++a)f.points = [], v = {
                width: 0,
                height: 0,
                edgeLabel: f,
                edgeObj: s,
                rank: a
            }, m = t.addDummyNode(i, "edge", v, "_d"), a === h && (v.width = f.width, v.height = f.height, v.dummy = "edge-label", v.labelpos = f.labelpos), i.setEdge(o, m, {
                weight: f.weight
            }, u), _ === 0 && i.graph().dummyChains.push(m), o = m;
            i.setEdge(o, l, {
                weight: f.weight
            }, u);
        }
        function r(i) {
            i.graph().dummyChains.forEach((s)=>{
                let o = i.node(s), a = o.edgeLabel, l;
                for(i.setEdge(o.edgeObj, a); o.dummy;)l = i.successors(s)[0], i.removeNode(s), a.points.push({
                    x: o.x,
                    y: o.y
                }), o.dummy === "edge-label" && (a.x = o.x, a.y = o.y, a.width = o.width, a.height = o.height), s = l, o = i.node(s);
            });
        }
        return OI;
    }
    var DI, y5;
    function pM() {
        if (y5) return DI;
        y5 = 1;
        const { applyWithChunking: t } = Qi();
        DI = {
            longestPath: e,
            slack: n
        };
        function e(r) {
            var i = {};
            function s(o) {
                var a = r.node(o);
                if (Object.hasOwn(i, o)) return a.rank;
                i[o] = !0;
                let l = r.outEdges(o).map((u)=>u == null ? Number.POSITIVE_INFINITY : s(u.w) - r.edge(u).minlen);
                var c = t(Math.min, l);
                return c === Number.POSITIVE_INFINITY && (c = 0), a.rank = c;
            }
            r.sources().forEach(s);
        }
        function n(r, i) {
            return r.node(i.w).rank - r.node(i.v).rank - r.edge(i).minlen;
        }
        return DI;
    }
    var LI, v5;
    function I7() {
        if (v5) return LI;
        v5 = 1;
        var t = wc().Graph, e = pM().slack;
        LI = n;
        function n(o) {
            var a = new t({
                directed: !1
            }), l = o.nodes()[0], c = o.nodeCount();
            a.setNode(l, {});
            for(var u, f; r(a, o) < c;)u = i(a, o), f = a.hasNode(u.v) ? e(o, u) : -e(o, u), s(a, o, f);
            return a;
        }
        function r(o, a) {
            function l(c) {
                a.nodeEdges(c).forEach((u)=>{
                    var f = u.v, h = c === f ? u.w : f;
                    !o.hasNode(h) && !e(a, u) && (o.setNode(h, {}), o.setEdge(c, h, {}), l(h));
                });
            }
            return o.nodes().forEach(l), o.nodeCount();
        }
        function i(o, a) {
            return a.edges().reduce((c, u)=>{
                let f = Number.POSITIVE_INFINITY;
                return o.hasNode(u.v) !== o.hasNode(u.w) && (f = e(a, u)), f < c[0] ? [
                    f,
                    u
                ] : c;
            }, [
                Number.POSITIVE_INFINITY,
                null
            ])[1];
        }
        function s(o, a, l) {
            o.nodes().forEach((c)=>a.node(c).rank += l);
        }
        return LI;
    }
    var FI, x5;
    function lle() {
        if (x5) return FI;
        x5 = 1;
        var t = I7(), e = pM().slack, n = pM().longestPath, r = wc().alg.preorder, i = wc().alg.postorder, s = Qi().simplify;
        FI = o, o.initLowLimValues = u, o.initCutValues = a, o.calcCutValue = c, o.leaveEdge = h, o.enterEdge = m, o.exchangeEdges = v;
        function o(M) {
            M = s(M), n(M);
            var E = t(M);
            u(E), a(E, M);
            for(var T, P; T = h(E);)P = m(E, M, T), v(E, M, T, P);
        }
        function a(M, E) {
            var T = i(M, M.nodes());
            T = T.slice(0, T.length - 1), T.forEach((P)=>l(M, E, P));
        }
        function l(M, E, T) {
            var P = M.node(T), A = P.parent;
            M.edge(T, A).cutvalue = c(M, E, T);
        }
        function c(M, E, T) {
            var P = M.node(T), A = P.parent, O = !0, D = E.edge(T, A), R = 0;
            return D || (O = !1, D = E.edge(A, T)), R = D.weight, E.nodeEdges(T).forEach((N)=>{
                var k = N.v === T, U = k ? N.w : N.v;
                if (U !== A) {
                    var B = k === O, j = E.edge(N).weight;
                    if (R += B ? j : -j, w(M, T, U)) {
                        var K = M.edge(T, U).cutvalue;
                        R += B ? -K : K;
                    }
                }
            }), R;
        }
        function u(M, E) {
            arguments.length < 2 && (E = M.nodes()[0]), f(M, {}, 1, E);
        }
        function f(M, E, T, P, A) {
            var O = T, D = M.node(P);
            return E[P] = !0, M.neighbors(P).forEach((R)=>{
                Object.hasOwn(E, R) || (T = f(M, E, T, R, P));
            }), D.low = O, D.lim = T++, A ? D.parent = A : delete D.parent, T;
        }
        function h(M) {
            return M.edges().find((E)=>M.edge(E).cutvalue < 0);
        }
        function m(M, E, T) {
            var P = T.v, A = T.w;
            E.hasEdge(P, A) || (P = T.w, A = T.v);
            var O = M.node(P), D = M.node(A), R = O, N = !1;
            O.lim > D.lim && (R = D, N = !0);
            var k = E.edges().filter((U)=>N === b(M, M.node(U.v), R) && N !== b(M, M.node(U.w), R));
            return k.reduce((U, B)=>e(E, B) < e(E, U) ? B : U);
        }
        function v(M, E, T, P) {
            var A = T.v, O = T.w;
            M.removeEdge(A, O), M.setEdge(P.v, P.w, {}), u(M), a(M, E), _(M, E);
        }
        function _(M, E) {
            var T = M.nodes().find((A)=>!E.node(A).parent), P = r(M, T);
            P = P.slice(1), P.forEach((A)=>{
                var O = M.node(A).parent, D = E.edge(A, O), R = !1;
                D || (D = E.edge(O, A), R = !0), E.node(A).rank = E.node(O).rank + (R ? D.minlen : -D.minlen);
            });
        }
        function w(M, E, T) {
            return M.hasEdge(E, T);
        }
        function b(M, E, T) {
            return T.low <= E.lim && E.lim <= T.lim;
        }
        return FI;
    }
    var jI, b5;
    function cle() {
        if (b5) return jI;
        b5 = 1;
        var t = pM(), e = t.longestPath, n = I7(), r = lle();
        jI = i;
        function i(l) {
            switch(l.graph().ranker){
                case "network-simplex":
                    a(l);
                    break;
                case "tight-tree":
                    o(l);
                    break;
                case "longest-path":
                    s(l);
                    break;
                default:
                    a(l);
            }
        }
        var s = e;
        function o(l) {
            e(l), n(l);
        }
        function a(l) {
            r(l);
        }
        return jI;
    }
    var BI, w5;
    function ule() {
        if (w5) return BI;
        w5 = 1, BI = t;
        function t(r) {
            let i = n(r);
            r.graph().dummyChains.forEach((s)=>{
                let o = r.node(s), a = o.edgeObj, l = e(r, i, a.v, a.w), c = l.path, u = l.lca, f = 0, h = c[f], m = !0;
                for(; s !== a.w;){
                    if (o = r.node(s), m) {
                        for(; (h = c[f]) !== u && r.node(h).maxRank < o.rank;)f++;
                        h === u && (m = !1);
                    }
                    if (!m) {
                        for(; f < c.length - 1 && r.node(h = c[f + 1]).minRank <= o.rank;)f++;
                        h = c[f];
                    }
                    r.setParent(s, h), s = r.successors(s)[0];
                }
            });
        }
        function e(r, i, s, o) {
            let a = [], l = [], c = Math.min(i[s].low, i[o].low), u = Math.max(i[s].lim, i[o].lim), f, h;
            f = s;
            do f = r.parent(f), a.push(f);
            while (f && (i[f].low > c || u > i[f].lim));
            for(h = f, f = o; (f = r.parent(f)) !== h;)l.push(f);
            return {
                path: a.concat(l.reverse()),
                lca: h
            };
        }
        function n(r) {
            let i = {}, s = 0;
            function o(a) {
                let l = s;
                r.children(a).forEach(o), i[a] = {
                    low: l,
                    lim: s++
                };
            }
            return r.children().forEach(o), i;
        }
        return BI;
    }
    var UI, _5;
    function dle() {
        if (_5) return UI;
        _5 = 1;
        let t = Qi();
        UI = {
            run: e,
            cleanup: s
        };
        function e(o) {
            let a = t.addDummyNode(o, "root", {}, "_root"), l = r(o), c = Object.values(l), u = t.applyWithChunking(Math.max, c) - 1, f = 2 * u + 1;
            o.graph().nestingRoot = a, o.edges().forEach((m)=>o.edge(m).minlen *= f);
            let h = i(o) + 1;
            o.children().forEach((m)=>n(o, a, f, h, u, l, m)), o.graph().nodeRankFactor = f;
        }
        function n(o, a, l, c, u, f, h) {
            let m = o.children(h);
            if (!m.length) {
                h !== a && o.setEdge(a, h, {
                    weight: 0,
                    minlen: l
                });
                return;
            }
            let v = t.addBorderNode(o, "_bt"), _ = t.addBorderNode(o, "_bb"), w = o.node(h);
            o.setParent(v, h), w.borderTop = v, o.setParent(_, h), w.borderBottom = _, m.forEach((b)=>{
                n(o, a, l, c, u, f, b);
                let M = o.node(b), E = M.borderTop ? M.borderTop : b, T = M.borderBottom ? M.borderBottom : b, P = M.borderTop ? c : 2 * c, A = E !== T ? 1 : u - f[h] + 1;
                o.setEdge(v, E, {
                    weight: P,
                    minlen: A,
                    nestingEdge: !0
                }), o.setEdge(T, _, {
                    weight: P,
                    minlen: A,
                    nestingEdge: !0
                });
            }), o.parent(h) || o.setEdge(a, v, {
                weight: 0,
                minlen: u + f[h]
            });
        }
        function r(o) {
            var a = {};
            function l(c, u) {
                var f = o.children(c);
                f && f.length && f.forEach((h)=>l(h, u + 1)), a[c] = u;
            }
            return o.children().forEach((c)=>l(c, 1)), a;
        }
        function i(o) {
            return o.edges().reduce((a, l)=>a + o.edge(l).weight, 0);
        }
        function s(o) {
            var a = o.graph();
            o.removeNode(a.nestingRoot), delete a.nestingRoot, o.edges().forEach((l)=>{
                var c = o.edge(l);
                c.nestingEdge && o.removeEdge(l);
            });
        }
        return UI;
    }
    var zI, S5;
    function fle() {
        if (S5) return zI;
        S5 = 1;
        let t = Qi();
        zI = e;
        function e(r) {
            function i(s) {
                let o = r.children(s), a = r.node(s);
                if (o.length && o.forEach(i), Object.hasOwn(a, "minRank")) {
                    a.borderLeft = [], a.borderRight = [];
                    for(let l = a.minRank, c = a.maxRank + 1; l < c; ++l)n(r, "borderLeft", "_bl", s, a, l), n(r, "borderRight", "_br", s, a, l);
                }
            }
            r.children().forEach(i);
        }
        function n(r, i, s, o, a, l) {
            let c = {
                width: 0,
                height: 0,
                rank: l,
                borderType: i
            }, u = a[i][l - 1], f = t.addDummyNode(r, "border", c, s);
            a[i][l] = f, r.setParent(f, o), u && r.setEdge(u, f, {
                weight: 1
            });
        }
        return zI;
    }
    var VI, E5;
    function hle() {
        if (E5) return VI;
        E5 = 1, VI = {
            adjust: t,
            undo: e
        };
        function t(l) {
            let c = l.graph().rankdir.toLowerCase();
            (c === "lr" || c === "rl") && n(l);
        }
        function e(l) {
            let c = l.graph().rankdir.toLowerCase();
            (c === "bt" || c === "rl") && i(l), (c === "lr" || c === "rl") && (o(l), n(l));
        }
        function n(l) {
            l.nodes().forEach((c)=>r(l.node(c))), l.edges().forEach((c)=>r(l.edge(c)));
        }
        function r(l) {
            let c = l.width;
            l.width = l.height, l.height = c;
        }
        function i(l) {
            l.nodes().forEach((c)=>s(l.node(c))), l.edges().forEach((c)=>{
                let u = l.edge(c);
                u.points.forEach(s), Object.hasOwn(u, "y") && s(u);
            });
        }
        function s(l) {
            l.y = -l.y;
        }
        function o(l) {
            l.nodes().forEach((c)=>a(l.node(c))), l.edges().forEach((c)=>{
                let u = l.edge(c);
                u.points.forEach(a), Object.hasOwn(u, "x") && a(u);
            });
        }
        function a(l) {
            let c = l.x;
            l.x = l.y, l.y = c;
        }
        return VI;
    }
    var WI, M5;
    function ple() {
        if (M5) return WI;
        M5 = 1;
        let t = Qi();
        WI = e;
        function e(n) {
            let r = {}, i = n.nodes().filter((u)=>!n.children(u).length), s = i.map((u)=>n.node(u).rank), o = t.applyWithChunking(Math.max, s), a = t.range(o + 1).map(()=>[]);
            function l(u) {
                if (r[u]) return;
                r[u] = !0;
                let f = n.node(u);
                a[f.rank].push(u), n.successors(u).forEach(l);
            }
            return i.sort((u, f)=>n.node(u).rank - n.node(f).rank).forEach(l), a;
        }
        return WI;
    }
    var qI, T5;
    function mle() {
        if (T5) return qI;
        T5 = 1;
        let t = Qi().zipObject;
        qI = e;
        function e(r, i) {
            let s = 0;
            for(let o = 1; o < i.length; ++o)s += n(r, i[o - 1], i[o]);
            return s;
        }
        function n(r, i, s) {
            let o = t(s, s.map((h, m)=>m)), a = i.flatMap((h)=>r.outEdges(h).map((m)=>({
                        pos: o[m.w],
                        weight: r.edge(m).weight
                    })).sort((m, v)=>m.pos - v.pos)), l = 1;
            for(; l < s.length;)l <<= 1;
            let c = 2 * l - 1;
            l -= 1;
            let u = new Array(c).fill(0), f = 0;
            return a.forEach((h)=>{
                let m = h.pos + l;
                u[m] += h.weight;
                let v = 0;
                for(; m > 0;)m % 2 && (v += u[m + 1]), m = m - 1 >> 1, u[m] += h.weight;
                f += h.weight * v;
            }), f;
        }
        return qI;
    }
    var HI, C5;
    function gle() {
        if (C5) return HI;
        C5 = 1, HI = t;
        function t(e, n = []) {
            return n.map((r)=>{
                let i = e.inEdges(r);
                if (i.length) {
                    let s = i.reduce((o, a)=>{
                        let l = e.edge(a), c = e.node(a.v);
                        return {
                            sum: o.sum + l.weight * c.order,
                            weight: o.weight + l.weight
                        };
                    }, {
                        sum: 0,
                        weight: 0
                    });
                    return {
                        v: r,
                        barycenter: s.sum / s.weight,
                        weight: s.weight
                    };
                } else return {
                    v: r
                };
            });
        }
        return HI;
    }
    var $I, R5;
    function yle() {
        if (R5) return $I;
        R5 = 1;
        let t = Qi();
        $I = e;
        function e(i, s) {
            let o = {};
            i.forEach((l, c)=>{
                let u = o[l.v] = {
                    indegree: 0,
                    in: [],
                    out: [],
                    vs: [
                        l.v
                    ],
                    i: c
                };
                l.barycenter !== void 0 && (u.barycenter = l.barycenter, u.weight = l.weight);
            }), s.edges().forEach((l)=>{
                let c = o[l.v], u = o[l.w];
                c !== void 0 && u !== void 0 && (u.indegree++, c.out.push(o[l.w]));
            });
            let a = Object.values(o).filter((l)=>!l.indegree);
            return n(a);
        }
        function n(i) {
            let s = [];
            function o(l) {
                return (c)=>{
                    c.merged || (c.barycenter === void 0 || l.barycenter === void 0 || c.barycenter >= l.barycenter) && r(l, c);
                };
            }
            function a(l) {
                return (c)=>{
                    c.in.push(l), --c.indegree === 0 && i.push(c);
                };
            }
            for(; i.length;){
                let l = i.pop();
                s.push(l), l.in.reverse().forEach(o(l)), l.out.forEach(a(l));
            }
            return s.filter((l)=>!l.merged).map((l)=>t.pick(l, [
                    "vs",
                    "i",
                    "barycenter",
                    "weight"
                ]));
        }
        function r(i, s) {
            let o = 0, a = 0;
            i.weight && (o += i.barycenter * i.weight, a += i.weight), s.weight && (o += s.barycenter * s.weight, a += s.weight), i.vs = s.vs.concat(i.vs), i.barycenter = o / a, i.weight = a, i.i = Math.min(s.i, i.i), s.merged = !0;
        }
        return $I;
    }
    var GI, I5;
    function vle() {
        if (I5) return GI;
        I5 = 1;
        let t = Qi();
        GI = e;
        function e(i, s) {
            let o = t.partition(i, (v)=>Object.hasOwn(v, "barycenter")), a = o.lhs, l = o.rhs.sort((v, _)=>_.i - v.i), c = [], u = 0, f = 0, h = 0;
            a.sort(r(!!s)), h = n(c, l, h), a.forEach((v)=>{
                h += v.vs.length, c.push(v.vs), u += v.barycenter * v.weight, f += v.weight, h = n(c, l, h);
            });
            let m = {
                vs: c.flat(!0)
            };
            return f && (m.barycenter = u / f, m.weight = f), m;
        }
        function n(i, s, o) {
            let a;
            for(; s.length && (a = s[s.length - 1]).i <= o;)s.pop(), i.push(a.vs), o++;
            return o;
        }
        function r(i) {
            return (s, o)=>s.barycenter < o.barycenter ? -1 : s.barycenter > o.barycenter ? 1 : i ? o.i - s.i : s.i - o.i;
        }
        return GI;
    }
    var XI, A5;
    function xle() {
        if (A5) return XI;
        A5 = 1;
        let t = gle(), e = yle(), n = vle();
        XI = r;
        function r(o, a, l, c) {
            let u = o.children(a), f = o.node(a), h = f ? f.borderLeft : void 0, m = f ? f.borderRight : void 0, v = {};
            h && (u = u.filter((M)=>M !== h && M !== m));
            let _ = t(o, u);
            _.forEach((M)=>{
                if (o.children(M.v).length) {
                    let E = r(o, M.v, l, c);
                    v[M.v] = E, Object.hasOwn(E, "barycenter") && s(M, E);
                }
            });
            let w = e(_, l);
            i(w, v);
            let b = n(w, c);
            if (h && (b.vs = [
                h,
                b.vs,
                m
            ].flat(!0), o.predecessors(h).length)) {
                let M = o.node(o.predecessors(h)[0]), E = o.node(o.predecessors(m)[0]);
                Object.hasOwn(b, "barycenter") || (b.barycenter = 0, b.weight = 0), b.barycenter = (b.barycenter * b.weight + M.order + E.order) / (b.weight + 2), b.weight += 2;
            }
            return b;
        }
        function i(o, a) {
            o.forEach((l)=>{
                l.vs = l.vs.flatMap((c)=>a[c] ? a[c].vs : c);
            });
        }
        function s(o, a) {
            o.barycenter !== void 0 ? (o.barycenter = (o.barycenter * o.weight + a.barycenter * a.weight) / (o.weight + a.weight), o.weight += a.weight) : (o.barycenter = a.barycenter, o.weight = a.weight);
        }
        return XI;
    }
    var KI, N5;
    function ble() {
        if (N5) return KI;
        N5 = 1;
        let t = wc().Graph, e = Qi();
        KI = n;
        function n(i, s, o) {
            let a = r(i), l = new t({
                compound: !0
            }).setGraph({
                root: a
            }).setDefaultNodeLabel((c)=>i.node(c));
            return i.nodes().forEach((c)=>{
                let u = i.node(c), f = i.parent(c);
                (u.rank === s || u.minRank <= s && s <= u.maxRank) && (l.setNode(c), l.setParent(c, f || a), i[o](c).forEach((h)=>{
                    let m = h.v === c ? h.w : h.v, v = l.edge(m, c), _ = v !== void 0 ? v.weight : 0;
                    l.setEdge(m, c, {
                        weight: i.edge(h).weight + _
                    });
                }), Object.hasOwn(u, "minRank") && l.setNode(c, {
                    borderLeft: u.borderLeft[s],
                    borderRight: u.borderRight[s]
                }));
            }), l;
        }
        function r(i) {
            for(var s; i.hasNode(s = e.uniqueId("_root")););
            return s;
        }
        return KI;
    }
    var YI, P5;
    function wle() {
        if (P5) return YI;
        P5 = 1, YI = t;
        function t(e, n, r) {
            let i = {}, s;
            r.forEach((o)=>{
                let a = e.parent(o), l, c;
                for(; a;){
                    if (l = e.parent(a), l ? (c = i[l], i[l] = a) : (c = s, s = a), c && c !== a) {
                        n.setEdge(c, a);
                        return;
                    }
                    a = l;
                }
            });
        }
        return YI;
    }
    var ZI, k5;
    function _le() {
        if (k5) return ZI;
        k5 = 1;
        let t = ple(), e = mle(), n = xle(), r = ble(), i = wle(), s = wc().Graph, o = Qi();
        ZI = a;
        function a(f, h) {
            if (h && typeof h.customOrder == "function") {
                h.customOrder(f, a);
                return;
            }
            let m = o.maxRank(f), v = l(f, o.range(1, m + 1), "inEdges"), _ = l(f, o.range(m - 1, -1, -1), "outEdges"), w = t(f);
            if (u(f, w), h && h.disableOptimalOrderHeuristic) return;
            let b = Number.POSITIVE_INFINITY, M;
            for(let E = 0, T = 0; T < 4; ++E, ++T){
                c(E % 2 ? v : _, E % 4 >= 2), w = o.buildLayerMatrix(f);
                let P = e(f, w);
                P < b && (T = 0, M = Object.assign({}, w), b = P);
            }
            u(f, M);
        }
        function l(f, h, m) {
            return h.map(function(v) {
                return r(f, v, m);
            });
        }
        function c(f, h) {
            let m = new s;
            f.forEach(function(v) {
                let _ = v.graph().root, w = n(v, _, m, h);
                w.vs.forEach((b, M)=>v.node(b).order = M), i(v, m, w.vs);
            });
        }
        function u(f, h) {
            Object.values(h).forEach((m)=>m.forEach((v, _)=>f.node(v).order = _));
        }
        return ZI;
    }
    var JI, O5;
    function Sle() {
        if (O5) return JI;
        O5 = 1;
        let t = wc().Graph, e = Qi();
        JI = {
            positionX: m,
            findType1Conflicts: n,
            findType2Conflicts: r,
            addConflict: s,
            hasConflict: o,
            verticalAlignment: a,
            horizontalCompaction: l,
            alignCoordinates: f,
            findSmallestWidthAlignment: u,
            balance: h
        };
        function n(w, b) {
            let M = {};
            function E(T, P) {
                let A = 0, O = 0, D = T.length, R = P[P.length - 1];
                return P.forEach((N, k)=>{
                    let U = i(w, N), B = U ? w.node(U).order : D;
                    (U || N === R) && (P.slice(O, k + 1).forEach((j)=>{
                        w.predecessors(j).forEach((K)=>{
                            let q = w.node(K), ee = q.order;
                            (ee < A || B < ee) && !(q.dummy && w.node(j).dummy) && s(M, K, j);
                        });
                    }), O = k + 1, A = B);
                }), P;
            }
            return b.length && b.reduce(E), M;
        }
        function r(w, b) {
            let M = {};
            function E(P, A, O, D, R) {
                let N;
                e.range(A, O).forEach((k)=>{
                    N = P[k], w.node(N).dummy && w.predecessors(N).forEach((U)=>{
                        let B = w.node(U);
                        B.dummy && (B.order < D || B.order > R) && s(M, U, N);
                    });
                });
            }
            function T(P, A) {
                let O = -1, D, R = 0;
                return A.forEach((N, k)=>{
                    if (w.node(N).dummy === "border") {
                        let U = w.predecessors(N);
                        U.length && (D = w.node(U[0]).order, E(A, R, k, O, D), R = k, O = D);
                    }
                    E(A, R, A.length, D, P.length);
                }), A;
            }
            return b.length && b.reduce(T), M;
        }
        function i(w, b) {
            if (w.node(b).dummy) return w.predecessors(b).find((M)=>w.node(M).dummy);
        }
        function s(w, b, M) {
            if (b > M) {
                let T = b;
                b = M, M = T;
            }
            let E = w[b];
            E || (w[b] = E = {}), E[M] = !0;
        }
        function o(w, b, M) {
            if (b > M) {
                let E = b;
                b = M, M = E;
            }
            return !!w[b] && Object.hasOwn(w[b], M);
        }
        function a(w, b, M, E) {
            let T = {}, P = {}, A = {};
            return b.forEach((O)=>{
                O.forEach((D, R)=>{
                    T[D] = D, P[D] = D, A[D] = R;
                });
            }), b.forEach((O)=>{
                let D = -1;
                O.forEach((R)=>{
                    let N = E(R);
                    if (N.length) {
                        N = N.sort((U, B)=>A[U] - A[B]);
                        let k = (N.length - 1) / 2;
                        for(let U = Math.floor(k), B = Math.ceil(k); U <= B; ++U){
                            let j = N[U];
                            P[R] === R && D < A[j] && !o(M, R, j) && (P[j] = R, P[R] = T[R] = T[j], D = A[j]);
                        }
                    }
                });
            }), {
                root: T,
                align: P
            };
        }
        function l(w, b, M, E, T) {
            let P = {}, A = c(w, b, M, T), O = T ? "borderLeft" : "borderRight";
            function D(k, U) {
                let B = A.nodes(), j = B.pop(), K = {};
                for(; j;)K[j] ? k(j) : (K[j] = !0, B.push(j), B = B.concat(U(j))), j = B.pop();
            }
            function R(k) {
                P[k] = A.inEdges(k).reduce((U, B)=>Math.max(U, P[B.v] + A.edge(B)), 0);
            }
            function N(k) {
                let U = A.outEdges(k).reduce((j, K)=>Math.min(j, P[K.w] - A.edge(K)), Number.POSITIVE_INFINITY), B = w.node(k);
                U !== Number.POSITIVE_INFINITY && B.borderType !== O && (P[k] = Math.max(P[k], U));
            }
            return D(R, A.predecessors.bind(A)), D(N, A.successors.bind(A)), Object.keys(E).forEach((k)=>P[k] = P[M[k]]), P;
        }
        function c(w, b, M, E) {
            let T = new t, P = w.graph(), A = v(P.nodesep, P.edgesep, E);
            return b.forEach((O)=>{
                let D;
                O.forEach((R)=>{
                    let N = M[R];
                    if (T.setNode(N), D) {
                        var k = M[D], U = T.edge(k, N);
                        T.setEdge(k, N, Math.max(A(w, R, D), U || 0));
                    }
                    D = R;
                });
            }), T;
        }
        function u(w, b) {
            return Object.values(b).reduce((M, E)=>{
                let T = Number.NEGATIVE_INFINITY, P = Number.POSITIVE_INFINITY;
                Object.entries(E).forEach(([O, D])=>{
                    let R = _(w, O) / 2;
                    T = Math.max(D + R, T), P = Math.min(D - R, P);
                });
                const A = T - P;
                return A < M[0] && (M = [
                    A,
                    E
                ]), M;
            }, [
                Number.POSITIVE_INFINITY,
                null
            ])[1];
        }
        function f(w, b) {
            let M = Object.values(b), E = e.applyWithChunking(Math.min, M), T = e.applyWithChunking(Math.max, M);
            [
                "u",
                "d"
            ].forEach((P)=>{
                [
                    "l",
                    "r"
                ].forEach((A)=>{
                    let O = P + A, D = w[O];
                    if (D === b) return;
                    let R = Object.values(D), N = E - e.applyWithChunking(Math.min, R);
                    A !== "l" && (N = T - e.applyWithChunking(Math.max, R)), N && (w[O] = e.mapValues(D, (k)=>k + N));
                });
            });
        }
        function h(w, b) {
            return e.mapValues(w.ul, (M, E)=>{
                if (b) return w[b.toLowerCase()][E];
                {
                    let T = Object.values(w).map((P)=>P[E]).sort((P, A)=>P - A);
                    return (T[1] + T[2]) / 2;
                }
            });
        }
        function m(w) {
            let b = e.buildLayerMatrix(w), M = Object.assign(n(w, b), r(w, b)), E = {}, T;
            [
                "u",
                "d"
            ].forEach((A)=>{
                T = A === "u" ? b : Object.values(b).reverse(), [
                    "l",
                    "r"
                ].forEach((O)=>{
                    O === "r" && (T = T.map((k)=>Object.values(k).reverse()));
                    let D = (A === "u" ? w.predecessors : w.successors).bind(w), R = a(w, T, M, D), N = l(w, T, R.root, R.align, O === "r");
                    O === "r" && (N = e.mapValues(N, (k)=>-k)), E[A + O] = N;
                });
            });
            let P = u(w, E);
            return f(E, P), h(E, w.graph().align);
        }
        function v(w, b, M) {
            return (E, T, P)=>{
                let A = E.node(T), O = E.node(P), D = 0, R;
                if (D += A.width / 2, Object.hasOwn(A, "labelpos")) switch(A.labelpos.toLowerCase()){
                    case "l":
                        R = -A.width / 2;
                        break;
                    case "r":
                        R = A.width / 2;
                        break;
                }
                if (R && (D += M ? R : -R), R = 0, D += (A.dummy ? b : w) / 2, D += (O.dummy ? b : w) / 2, D += O.width / 2, Object.hasOwn(O, "labelpos")) switch(O.labelpos.toLowerCase()){
                    case "l":
                        R = O.width / 2;
                        break;
                    case "r":
                        R = -O.width / 2;
                        break;
                }
                return R && (D += M ? R : -R), R = 0, D;
            };
        }
        function _(w, b) {
            return w.node(b).width;
        }
        return JI;
    }
    var QI, D5;
    function Ele() {
        if (D5) return QI;
        D5 = 1;
        let t = Qi(), e = Sle().positionX;
        QI = n;
        function n(i) {
            i = t.asNonCompoundGraph(i), r(i), Object.entries(e(i)).forEach(([s, o])=>i.node(s).x = o);
        }
        function r(i) {
            let s = t.buildLayerMatrix(i), o = i.graph().ranksep, a = 0;
            s.forEach((l)=>{
                const c = l.reduce((u, f)=>{
                    const h = i.node(f).height;
                    return u > h ? u : h;
                }, 0);
                l.forEach((u)=>i.node(u).y = a + c / 2), a += c + o;
            });
        }
        return QI;
    }
    var eA, L5;
    function Mle() {
        if (L5) return eA;
        L5 = 1;
        let t = ole(), e = ale(), n = cle(), r = Qi().normalizeRanks, i = ule(), s = Qi().removeEmptyRanks, o = dle(), a = fle(), l = hle(), c = _le(), u = Ele(), f = Qi(), h = wc().Graph;
        eA = m;
        function m(le, ne) {
            let ue = ne && ne.debugTiming ? f.time : f.notime;
            ue("layout", ()=>{
                let ge = ue("  buildLayoutGraph", ()=>D(le));
                ue("  runLayout", ()=>v(ge, ue, ne)), ue("  updateInputGraph", ()=>_(le, ge));
            });
        }
        function v(le, ne, ue) {
            ne("    makeSpaceForEdgeLabels", ()=>R(le)), ne("    removeSelfEdges", ()=>W(le)), ne("    acyclic", ()=>t.run(le)), ne("    nestingGraph.run", ()=>o.run(le)), ne("    rank", ()=>n(f.asNonCompoundGraph(le))), ne("    injectEdgeLabelProxies", ()=>N(le)), ne("    removeEmptyRanks", ()=>s(le)), ne("    nestingGraph.cleanup", ()=>o.cleanup(le)), ne("    normalizeRanks", ()=>r(le)), ne("    assignRankMinMax", ()=>k(le)), ne("    removeEdgeLabelProxies", ()=>U(le)), ne("    normalize.run", ()=>e.run(le)), ne("    parentDummyChains", ()=>i(le)), ne("    addBorderSegments", ()=>a(le)), ne("    order", ()=>c(le, ue)), ne("    insertSelfEdges", ()=>Z(le)), ne("    adjustCoordinateSystem", ()=>l.adjust(le)), ne("    position", ()=>u(le)), ne("    positionSelfEdges", ()=>$(le)), ne("    removeBorderNodes", ()=>ee(le)), ne("    normalize.undo", ()=>e.undo(le)), ne("    fixupEdgeLabelCoords", ()=>K(le)), ne("    undoCoordinateSystem", ()=>l.undo(le)), ne("    translateGraph", ()=>B(le)), ne("    assignNodeIntersects", ()=>j(le)), ne("    reversePoints", ()=>q(le)), ne("    acyclic.undo", ()=>t.undo(le));
        }
        function _(le, ne) {
            le.nodes().forEach((ue)=>{
                let ge = le.node(ue), ye = ne.node(ue);
                ge && (ge.x = ye.x, ge.y = ye.y, ge.rank = ye.rank, ne.children(ue).length && (ge.width = ye.width, ge.height = ye.height));
            }), le.edges().forEach((ue)=>{
                let ge = le.edge(ue), ye = ne.edge(ue);
                ge.points = ye.points, Object.hasOwn(ye, "x") && (ge.x = ye.x, ge.y = ye.y);
            }), le.graph().width = ne.graph().width, le.graph().height = ne.graph().height;
        }
        let w = [
            "nodesep",
            "edgesep",
            "ranksep",
            "marginx",
            "marginy"
        ], b = {
            ranksep: 50,
            edgesep: 20,
            nodesep: 50,
            rankdir: "tb"
        }, M = [
            "acyclicer",
            "ranker",
            "rankdir",
            "align"
        ], E = [
            "width",
            "height"
        ], T = {
            width: 0,
            height: 0
        }, P = [
            "minlen",
            "weight",
            "width",
            "height",
            "labeloffset"
        ], A = {
            minlen: 1,
            weight: 1,
            width: 0,
            height: 0,
            labeloffset: 10,
            labelpos: "r"
        }, O = [
            "labelpos"
        ];
        function D(le) {
            let ne = new h({
                multigraph: !0,
                compound: !0
            }), ue = se(le.graph());
            return ne.setGraph(Object.assign({}, b, H(ue, w), f.pick(ue, M))), le.nodes().forEach((ge)=>{
                let ye = se(le.node(ge));
                const _e = H(ye, E);
                Object.keys(T).forEach((Te)=>{
                    _e[Te] === void 0 && (_e[Te] = T[Te]);
                }), ne.setNode(ge, _e), ne.setParent(ge, le.parent(ge));
            }), le.edges().forEach((ge)=>{
                let ye = se(le.edge(ge));
                ne.setEdge(ge, Object.assign({}, A, H(ye, P), f.pick(ye, O)));
            }), ne;
        }
        function R(le) {
            let ne = le.graph();
            ne.ranksep /= 2, le.edges().forEach((ue)=>{
                let ge = le.edge(ue);
                ge.minlen *= 2, ge.labelpos.toLowerCase() !== "c" && (ne.rankdir === "TB" || ne.rankdir === "BT" ? ge.width += ge.labeloffset : ge.height += ge.labeloffset);
            });
        }
        function N(le) {
            le.edges().forEach((ne)=>{
                let ue = le.edge(ne);
                if (ue.width && ue.height) {
                    let ge = le.node(ne.v), _e = {
                        rank: (le.node(ne.w).rank - ge.rank) / 2 + ge.rank,
                        e: ne
                    };
                    f.addDummyNode(le, "edge-proxy", _e, "_ep");
                }
            });
        }
        function k(le) {
            let ne = 0;
            le.nodes().forEach((ue)=>{
                let ge = le.node(ue);
                ge.borderTop && (ge.minRank = le.node(ge.borderTop).rank, ge.maxRank = le.node(ge.borderBottom).rank, ne = Math.max(ne, ge.maxRank));
            }), le.graph().maxRank = ne;
        }
        function U(le) {
            le.nodes().forEach((ne)=>{
                let ue = le.node(ne);
                ue.dummy === "edge-proxy" && (le.edge(ue.e).labelRank = ue.rank, le.removeNode(ne));
            });
        }
        function B(le) {
            let ne = Number.POSITIVE_INFINITY, ue = 0, ge = Number.POSITIVE_INFINITY, ye = 0, _e = le.graph(), Te = _e.marginx || 0, Re = _e.marginy || 0;
            function Fe(be) {
                let Me = be.x, oe = be.y, Ye = be.width, Be = be.height;
                ne = Math.min(ne, Me - Ye / 2), ue = Math.max(ue, Me + Ye / 2), ge = Math.min(ge, oe - Be / 2), ye = Math.max(ye, oe + Be / 2);
            }
            le.nodes().forEach((be)=>Fe(le.node(be))), le.edges().forEach((be)=>{
                let Me = le.edge(be);
                Object.hasOwn(Me, "x") && Fe(Me);
            }), ne -= Te, ge -= Re, le.nodes().forEach((be)=>{
                let Me = le.node(be);
                Me.x -= ne, Me.y -= ge;
            }), le.edges().forEach((be)=>{
                let Me = le.edge(be);
                Me.points.forEach((oe)=>{
                    oe.x -= ne, oe.y -= ge;
                }), Object.hasOwn(Me, "x") && (Me.x -= ne), Object.hasOwn(Me, "y") && (Me.y -= ge);
            }), _e.width = ue - ne + Te, _e.height = ye - ge + Re;
        }
        function j(le) {
            le.edges().forEach((ne)=>{
                let ue = le.edge(ne), ge = le.node(ne.v), ye = le.node(ne.w), _e, Te;
                ue.points ? (_e = ue.points[0], Te = ue.points[ue.points.length - 1]) : (ue.points = [], _e = ye, Te = ge), ue.points.unshift(f.intersectRect(ge, _e)), ue.points.push(f.intersectRect(ye, Te));
            });
        }
        function K(le) {
            le.edges().forEach((ne)=>{
                let ue = le.edge(ne);
                if (Object.hasOwn(ue, "x")) switch((ue.labelpos === "l" || ue.labelpos === "r") && (ue.width -= ue.labeloffset), ue.labelpos){
                    case "l":
                        ue.x -= ue.width / 2 + ue.labeloffset;
                        break;
                    case "r":
                        ue.x += ue.width / 2 + ue.labeloffset;
                        break;
                }
            });
        }
        function q(le) {
            le.edges().forEach((ne)=>{
                let ue = le.edge(ne);
                ue.reversed && ue.points.reverse();
            });
        }
        function ee(le) {
            le.nodes().forEach((ne)=>{
                if (le.children(ne).length) {
                    let ue = le.node(ne), ge = le.node(ue.borderTop), ye = le.node(ue.borderBottom), _e = le.node(ue.borderLeft[ue.borderLeft.length - 1]), Te = le.node(ue.borderRight[ue.borderRight.length - 1]);
                    ue.width = Math.abs(Te.x - _e.x), ue.height = Math.abs(ye.y - ge.y), ue.x = _e.x + ue.width / 2, ue.y = ge.y + ue.height / 2;
                }
            }), le.nodes().forEach((ne)=>{
                le.node(ne).dummy === "border" && le.removeNode(ne);
            });
        }
        function W(le) {
            le.edges().forEach((ne)=>{
                if (ne.v === ne.w) {
                    var ue = le.node(ne.v);
                    ue.selfEdges || (ue.selfEdges = []), ue.selfEdges.push({
                        e: ne,
                        label: le.edge(ne)
                    }), le.removeEdge(ne);
                }
            });
        }
        function Z(le) {
            var ne = f.buildLayerMatrix(le);
            ne.forEach((ue)=>{
                var ge = 0;
                ue.forEach((ye, _e)=>{
                    var Te = le.node(ye);
                    Te.order = _e + ge, (Te.selfEdges || []).forEach((Re)=>{
                        f.addDummyNode(le, "selfedge", {
                            width: Re.label.width,
                            height: Re.label.height,
                            rank: Te.rank,
                            order: _e + ++ge,
                            e: Re.e,
                            label: Re.label
                        }, "_se");
                    }), delete Te.selfEdges;
                });
            });
        }
        function $(le) {
            le.nodes().forEach((ne)=>{
                var ue = le.node(ne);
                if (ue.dummy === "selfedge") {
                    var ge = le.node(ue.e.v), ye = ge.x + ge.width / 2, _e = ge.y, Te = ue.x - ye, Re = ge.height / 2;
                    le.setEdge(ue.e, ue.label), le.removeNode(ne), ue.label.points = [
                        {
                            x: ye + 2 * Te / 3,
                            y: _e - Re
                        },
                        {
                            x: ye + 5 * Te / 6,
                            y: _e - Re
                        },
                        {
                            x: ye + Te,
                            y: _e
                        },
                        {
                            x: ye + 5 * Te / 6,
                            y: _e + Re
                        },
                        {
                            x: ye + 2 * Te / 3,
                            y: _e + Re
                        }
                    ], ue.label.x = ue.x, ue.label.y = ue.y;
                }
            });
        }
        function H(le, ne) {
            return f.mapValues(f.pick(le, ne), Number);
        }
        function se(le) {
            var ne = {};
            return le && Object.entries(le).forEach(([ue, ge])=>{
                typeof ue == "string" && (ue = ue.toLowerCase()), ne[ue] = ge;
            }), ne;
        }
        return eA;
    }
    var tA, F5;
    function Tle() {
        if (F5) return tA;
        F5 = 1;
        let t = Qi(), e = wc().Graph;
        tA = {
            debugOrdering: n
        };
        function n(r) {
            let i = t.buildLayerMatrix(r), s = new e({
                compound: !0,
                multigraph: !0
            }).setGraph({});
            return r.nodes().forEach((o)=>{
                s.setNode(o, {
                    label: o
                }), s.setParent(o, "layer" + r.node(o).rank);
            }), r.edges().forEach((o)=>s.setEdge(o.v, o.w, {}, o.name)), i.forEach((o, a)=>{
                let l = "layer" + a;
                s.setNode(l, {
                    rank: "same"
                }), o.reduce((c, u)=>(s.setEdge(c, u, {
                        style: "invis"
                    }), u));
            }), s;
        }
        return tA;
    }
    var nA, j5;
    function Cle() {
        return j5 || (j5 = 1, nA = "1.1.4"), nA;
    }
    var rA, B5;
    function Rle() {
        return B5 || (B5 = 1, rA = {
            graphlib: wc(),
            layout: Mle(),
            debug: Tle(),
            util: {
                time: Qi().time,
                notime: Qi().notime
            },
            version: Cle()
        }), rA;
    }
    var Ile = Rle();
    const A7 = Go(Ile);
    function ts(t) {
        if (typeof t == "string" || typeof t == "number") return "" + t;
        let e = "";
        if (Array.isArray(t)) for(let n = 0, r; n < t.length; n++)(r = ts(t[n])) !== "" && (e += (e && " ") + r);
        else for(let n in t)t[n] && (e += (e && " ") + n);
        return e;
    }
    var Ale = {
        value: ()=>{}
    };
    function JT() {
        for(var t = 0, e = arguments.length, n = {}, r; t < e; ++t){
            if (!(r = arguments[t] + "") || r in n || /[\s.]/.test(r)) throw new Error("illegal type: " + r);
            n[r] = [];
        }
        return new qS(n);
    }
    function qS(t) {
        this._ = t;
    }
    function Nle(t, e) {
        return t.trim().split(/^|\s+/).map(function(n) {
            var r = "", i = n.indexOf(".");
            if (i >= 0 && (r = n.slice(i + 1), n = n.slice(0, i)), n && !e.hasOwnProperty(n)) throw new Error("unknown type: " + n);
            return {
                type: n,
                name: r
            };
        });
    }
    qS.prototype = JT.prototype = {
        constructor: qS,
        on: function(t, e) {
            var n = this._, r = Nle(t + "", n), i, s = -1, o = r.length;
            if (arguments.length < 2) {
                for(; ++s < o;)if ((i = (t = r[s]).type) && (i = Ple(n[i], t.name))) return i;
                return;
            }
            if (e != null && typeof e != "function") throw new Error("invalid callback: " + e);
            for(; ++s < o;)if (i = (t = r[s]).type) n[i] = U5(n[i], t.name, e);
            else if (e == null) for(i in n)n[i] = U5(n[i], t.name, null);
            return this;
        },
        copy: function() {
            var t = {}, e = this._;
            for(var n in e)t[n] = e[n].slice();
            return new qS(t);
        },
        call: function(t, e) {
            if ((i = arguments.length - 2) > 0) for(var n = new Array(i), r = 0, i, s; r < i; ++r)n[r] = arguments[r + 2];
            if (!this._.hasOwnProperty(t)) throw new Error("unknown type: " + t);
            for(s = this._[t], r = 0, i = s.length; r < i; ++r)s[r].value.apply(e, n);
        },
        apply: function(t, e, n) {
            if (!this._.hasOwnProperty(t)) throw new Error("unknown type: " + t);
            for(var r = this._[t], i = 0, s = r.length; i < s; ++i)r[i].value.apply(e, n);
        }
    };
    function Ple(t, e) {
        for(var n = 0, r = t.length, i; n < r; ++n)if ((i = t[n]).name === e) return i.value;
    }
    function U5(t, e, n) {
        for(var r = 0, i = t.length; r < i; ++r)if (t[r].name === e) {
            t[r] = Ale, t = t.slice(0, r).concat(t.slice(r + 1));
            break;
        }
        return n != null && t.push({
            name: e,
            value: n
        }), t;
    }
    var v3 = "http://www.w3.org/1999/xhtml";
    const z5 = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: v3,
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
    };
    function QT(t) {
        var e = t += "", n = e.indexOf(":");
        return n >= 0 && (e = t.slice(0, n)) !== "xmlns" && (t = t.slice(n + 1)), z5.hasOwnProperty(e) ? {
            space: z5[e],
            local: t
        } : t;
    }
    function kle(t) {
        return function() {
            var e = this.ownerDocument, n = this.namespaceURI;
            return n === v3 && e.documentElement.namespaceURI === v3 ? e.createElement(t) : e.createElementNS(n, t);
        };
    }
    function Ole(t) {
        return function() {
            return this.ownerDocument.createElementNS(t.space, t.local);
        };
    }
    function N7(t) {
        var e = QT(t);
        return (e.local ? Ole : kle)(e);
    }
    function Dle() {}
    function gk(t) {
        return t == null ? Dle : function() {
            return this.querySelector(t);
        };
    }
    function Lle(t) {
        typeof t != "function" && (t = gk(t));
        for(var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)for(var s = e[i], o = s.length, a = r[i] = new Array(o), l, c, u = 0; u < o; ++u)(l = s[u]) && (c = t.call(l, l.__data__, u, s)) && ("__data__" in l && (c.__data__ = l.__data__), a[u] = c);
        return new el(r, this._parents);
    }
    function Fle(t) {
        return t == null ? [] : Array.isArray(t) ? t : Array.from(t);
    }
    function jle() {
        return [];
    }
    function P7(t) {
        return t == null ? jle : function() {
            return this.querySelectorAll(t);
        };
    }
    function Ble(t) {
        return function() {
            return Fle(t.apply(this, arguments));
        };
    }
    function Ule(t) {
        typeof t == "function" ? t = Ble(t) : t = P7(t);
        for(var e = this._groups, n = e.length, r = [], i = [], s = 0; s < n; ++s)for(var o = e[s], a = o.length, l, c = 0; c < a; ++c)(l = o[c]) && (r.push(t.call(l, l.__data__, c, o)), i.push(l));
        return new el(r, i);
    }
    function k7(t) {
        return function() {
            return this.matches(t);
        };
    }
    function O7(t) {
        return function(e) {
            return e.matches(t);
        };
    }
    var zle = Array.prototype.find;
    function Vle(t) {
        return function() {
            return zle.call(this.children, t);
        };
    }
    function Wle() {
        return this.firstElementChild;
    }
    function qle(t) {
        return this.select(t == null ? Wle : Vle(typeof t == "function" ? t : O7(t)));
    }
    var Hle = Array.prototype.filter;
    function $le() {
        return Array.from(this.children);
    }
    function Gle(t) {
        return function() {
            return Hle.call(this.children, t);
        };
    }
    function Xle(t) {
        return this.selectAll(t == null ? $le : Gle(typeof t == "function" ? t : O7(t)));
    }
    function Kle(t) {
        typeof t != "function" && (t = k7(t));
        for(var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)for(var s = e[i], o = s.length, a = r[i] = [], l, c = 0; c < o; ++c)(l = s[c]) && t.call(l, l.__data__, c, s) && a.push(l);
        return new el(r, this._parents);
    }
    function D7(t) {
        return new Array(t.length);
    }
    function Yle() {
        return new el(this._enter || this._groups.map(D7), this._parents);
    }
    function mM(t, e) {
        this.ownerDocument = t.ownerDocument, this.namespaceURI = t.namespaceURI, this._next = null, this._parent = t, this.__data__ = e;
    }
    mM.prototype = {
        constructor: mM,
        appendChild: function(t) {
            return this._parent.insertBefore(t, this._next);
        },
        insertBefore: function(t, e) {
            return this._parent.insertBefore(t, e);
        },
        querySelector: function(t) {
            return this._parent.querySelector(t);
        },
        querySelectorAll: function(t) {
            return this._parent.querySelectorAll(t);
        }
    };
    function Zle(t) {
        return function() {
            return t;
        };
    }
    function Jle(t, e, n, r, i, s) {
        for(var o = 0, a, l = e.length, c = s.length; o < c; ++o)(a = e[o]) ? (a.__data__ = s[o], r[o] = a) : n[o] = new mM(t, s[o]);
        for(; o < l; ++o)(a = e[o]) && (i[o] = a);
    }
    function Qle(t, e, n, r, i, s, o) {
        var a, l, c = new Map, u = e.length, f = s.length, h = new Array(u), m;
        for(a = 0; a < u; ++a)(l = e[a]) && (h[a] = m = o.call(l, l.__data__, a, e) + "", c.has(m) ? i[a] = l : c.set(m, l));
        for(a = 0; a < f; ++a)m = o.call(t, s[a], a, s) + "", (l = c.get(m)) ? (r[a] = l, l.__data__ = s[a], c.delete(m)) : n[a] = new mM(t, s[a]);
        for(a = 0; a < u; ++a)(l = e[a]) && c.get(h[a]) === l && (i[a] = l);
    }
    function ece(t) {
        return t.__data__;
    }
    function tce(t, e) {
        if (!arguments.length) return Array.from(this, ece);
        var n = e ? Qle : Jle, r = this._parents, i = this._groups;
        typeof t != "function" && (t = Zle(t));
        for(var s = i.length, o = new Array(s), a = new Array(s), l = new Array(s), c = 0; c < s; ++c){
            var u = r[c], f = i[c], h = f.length, m = nce(t.call(u, u && u.__data__, c, r)), v = m.length, _ = a[c] = new Array(v), w = o[c] = new Array(v), b = l[c] = new Array(h);
            n(u, f, _, w, b, m, e);
            for(var M = 0, E = 0, T, P; M < v; ++M)if (T = _[M]) {
                for(M >= E && (E = M + 1); !(P = w[E]) && ++E < v;);
                T._next = P || null;
            }
        }
        return o = new el(o, r), o._enter = a, o._exit = l, o;
    }
    function nce(t) {
        return typeof t == "object" && "length" in t ? t : Array.from(t);
    }
    function rce() {
        return new el(this._exit || this._groups.map(D7), this._parents);
    }
    function ice(t, e, n) {
        var r = this.enter(), i = this, s = this.exit();
        return typeof t == "function" ? (r = t(r), r && (r = r.selection())) : r = r.append(t + ""), e != null && (i = e(i), i && (i = i.selection())), n == null ? s.remove() : n(s), r && i ? r.merge(i).order() : i;
    }
    function sce(t) {
        for(var e = t.selection ? t.selection() : t, n = this._groups, r = e._groups, i = n.length, s = r.length, o = Math.min(i, s), a = new Array(i), l = 0; l < o; ++l)for(var c = n[l], u = r[l], f = c.length, h = a[l] = new Array(f), m, v = 0; v < f; ++v)(m = c[v] || u[v]) && (h[v] = m);
        for(; l < i; ++l)a[l] = n[l];
        return new el(a, this._parents);
    }
    function oce() {
        for(var t = this._groups, e = -1, n = t.length; ++e < n;)for(var r = t[e], i = r.length - 1, s = r[i], o; --i >= 0;)(o = r[i]) && (s && o.compareDocumentPosition(s) ^ 4 && s.parentNode.insertBefore(o, s), s = o);
        return this;
    }
    function ace(t) {
        t || (t = lce);
        function e(f, h) {
            return f && h ? t(f.__data__, h.__data__) : !f - !h;
        }
        for(var n = this._groups, r = n.length, i = new Array(r), s = 0; s < r; ++s){
            for(var o = n[s], a = o.length, l = i[s] = new Array(a), c, u = 0; u < a; ++u)(c = o[u]) && (l[u] = c);
            l.sort(e);
        }
        return new el(i, this._parents).order();
    }
    function lce(t, e) {
        return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
    }
    function cce() {
        var t = arguments[0];
        return arguments[0] = this, t.apply(null, arguments), this;
    }
    function uce() {
        return Array.from(this);
    }
    function dce() {
        for(var t = this._groups, e = 0, n = t.length; e < n; ++e)for(var r = t[e], i = 0, s = r.length; i < s; ++i){
            var o = r[i];
            if (o) return o;
        }
        return null;
    }
    function fce() {
        let t = 0;
        for (const e of this)++t;
        return t;
    }
    function hce() {
        return !this.node();
    }
    function pce(t) {
        for(var e = this._groups, n = 0, r = e.length; n < r; ++n)for(var i = e[n], s = 0, o = i.length, a; s < o; ++s)(a = i[s]) && t.call(a, a.__data__, s, i);
        return this;
    }
    function mce(t) {
        return function() {
            this.removeAttribute(t);
        };
    }
    function gce(t) {
        return function() {
            this.removeAttributeNS(t.space, t.local);
        };
    }
    function yce(t, e) {
        return function() {
            this.setAttribute(t, e);
        };
    }
    function vce(t, e) {
        return function() {
            this.setAttributeNS(t.space, t.local, e);
        };
    }
    function xce(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            n == null ? this.removeAttribute(t) : this.setAttribute(t, n);
        };
    }
    function bce(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            n == null ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, n);
        };
    }
    function wce(t, e) {
        var n = QT(t);
        if (arguments.length < 2) {
            var r = this.node();
            return n.local ? r.getAttributeNS(n.space, n.local) : r.getAttribute(n);
        }
        return this.each((e == null ? n.local ? gce : mce : typeof e == "function" ? n.local ? bce : xce : n.local ? vce : yce)(n, e));
    }
    function L7(t) {
        return t.ownerDocument && t.ownerDocument.defaultView || t.document && t || t.defaultView;
    }
    function _ce(t) {
        return function() {
            this.style.removeProperty(t);
        };
    }
    function Sce(t, e, n) {
        return function() {
            this.style.setProperty(t, e, n);
        };
    }
    function Ece(t, e, n) {
        return function() {
            var r = e.apply(this, arguments);
            r == null ? this.style.removeProperty(t) : this.style.setProperty(t, r, n);
        };
    }
    function Mce(t, e, n) {
        return arguments.length > 1 ? this.each((e == null ? _ce : typeof e == "function" ? Ece : Sce)(t, e, n ?? "")) : my(this.node(), t);
    }
    function my(t, e) {
        return t.style.getPropertyValue(e) || L7(t).getComputedStyle(t, null).getPropertyValue(e);
    }
    function Tce(t) {
        return function() {
            delete this[t];
        };
    }
    function Cce(t, e) {
        return function() {
            this[t] = e;
        };
    }
    function Rce(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            n == null ? delete this[t] : this[t] = n;
        };
    }
    function Ice(t, e) {
        return arguments.length > 1 ? this.each((e == null ? Tce : typeof e == "function" ? Rce : Cce)(t, e)) : this.node()[t];
    }
    function F7(t) {
        return t.trim().split(/^|\s+/);
    }
    function yk(t) {
        return t.classList || new j7(t);
    }
    function j7(t) {
        this._node = t, this._names = F7(t.getAttribute("class") || "");
    }
    j7.prototype = {
        add: function(t) {
            var e = this._names.indexOf(t);
            e < 0 && (this._names.push(t), this._node.setAttribute("class", this._names.join(" ")));
        },
        remove: function(t) {
            var e = this._names.indexOf(t);
            e >= 0 && (this._names.splice(e, 1), this._node.setAttribute("class", this._names.join(" ")));
        },
        contains: function(t) {
            return this._names.indexOf(t) >= 0;
        }
    };
    function B7(t, e) {
        for(var n = yk(t), r = -1, i = e.length; ++r < i;)n.add(e[r]);
    }
    function U7(t, e) {
        for(var n = yk(t), r = -1, i = e.length; ++r < i;)n.remove(e[r]);
    }
    function Ace(t) {
        return function() {
            B7(this, t);
        };
    }
    function Nce(t) {
        return function() {
            U7(this, t);
        };
    }
    function Pce(t, e) {
        return function() {
            (e.apply(this, arguments) ? B7 : U7)(this, t);
        };
    }
    function kce(t, e) {
        var n = F7(t + "");
        if (arguments.length < 2) {
            for(var r = yk(this.node()), i = -1, s = n.length; ++i < s;)if (!r.contains(n[i])) return !1;
            return !0;
        }
        return this.each((typeof e == "function" ? Pce : e ? Ace : Nce)(n, e));
    }
    function Oce() {
        this.textContent = "";
    }
    function Dce(t) {
        return function() {
            this.textContent = t;
        };
    }
    function Lce(t) {
        return function() {
            var e = t.apply(this, arguments);
            this.textContent = e ?? "";
        };
    }
    function Fce(t) {
        return arguments.length ? this.each(t == null ? Oce : (typeof t == "function" ? Lce : Dce)(t)) : this.node().textContent;
    }
    function jce() {
        this.innerHTML = "";
    }
    function Bce(t) {
        return function() {
            this.innerHTML = t;
        };
    }
    function Uce(t) {
        return function() {
            var e = t.apply(this, arguments);
            this.innerHTML = e ?? "";
        };
    }
    function zce(t) {
        return arguments.length ? this.each(t == null ? jce : (typeof t == "function" ? Uce : Bce)(t)) : this.node().innerHTML;
    }
    function Vce() {
        this.nextSibling && this.parentNode.appendChild(this);
    }
    function Wce() {
        return this.each(Vce);
    }
    function qce() {
        this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }
    function Hce() {
        return this.each(qce);
    }
    function $ce(t) {
        var e = typeof t == "function" ? t : N7(t);
        return this.select(function() {
            return this.appendChild(e.apply(this, arguments));
        });
    }
    function Gce() {
        return null;
    }
    function Xce(t, e) {
        var n = typeof t == "function" ? t : N7(t), r = e == null ? Gce : typeof e == "function" ? e : gk(e);
        return this.select(function() {
            return this.insertBefore(n.apply(this, arguments), r.apply(this, arguments) || null);
        });
    }
    function Kce() {
        var t = this.parentNode;
        t && t.removeChild(this);
    }
    function Yce() {
        return this.each(Kce);
    }
    function Zce() {
        var t = this.cloneNode(!1), e = this.parentNode;
        return e ? e.insertBefore(t, this.nextSibling) : t;
    }
    function Jce() {
        var t = this.cloneNode(!0), e = this.parentNode;
        return e ? e.insertBefore(t, this.nextSibling) : t;
    }
    function Qce(t) {
        return this.select(t ? Jce : Zce);
    }
    function eue(t) {
        return arguments.length ? this.property("__data__", t) : this.node().__data__;
    }
    function tue(t) {
        return function(e) {
            t.call(this, e, this.__data__);
        };
    }
    function nue(t) {
        return t.trim().split(/^|\s+/).map(function(e) {
            var n = "", r = e.indexOf(".");
            return r >= 0 && (n = e.slice(r + 1), e = e.slice(0, r)), {
                type: e,
                name: n
            };
        });
    }
    function rue(t) {
        return function() {
            var e = this.__on;
            if (e) {
                for(var n = 0, r = -1, i = e.length, s; n < i; ++n)s = e[n], (!t.type || s.type === t.type) && s.name === t.name ? this.removeEventListener(s.type, s.listener, s.options) : e[++r] = s;
                ++r ? e.length = r : delete this.__on;
            }
        };
    }
    function iue(t, e, n) {
        return function() {
            var r = this.__on, i, s = tue(e);
            if (r) {
                for(var o = 0, a = r.length; o < a; ++o)if ((i = r[o]).type === t.type && i.name === t.name) {
                    this.removeEventListener(i.type, i.listener, i.options), this.addEventListener(i.type, i.listener = s, i.options = n), i.value = e;
                    return;
                }
            }
            this.addEventListener(t.type, s, n), i = {
                type: t.type,
                name: t.name,
                value: e,
                listener: s,
                options: n
            }, r ? r.push(i) : this.__on = [
                i
            ];
        };
    }
    function sue(t, e, n) {
        var r = nue(t + ""), i, s = r.length, o;
        if (arguments.length < 2) {
            var a = this.node().__on;
            if (a) {
                for(var l = 0, c = a.length, u; l < c; ++l)for(i = 0, u = a[l]; i < s; ++i)if ((o = r[i]).type === u.type && o.name === u.name) return u.value;
            }
            return;
        }
        for(a = e ? iue : rue, i = 0; i < s; ++i)this.each(a(r[i], e, n));
        return this;
    }
    function z7(t, e, n) {
        var r = L7(t), i = r.CustomEvent;
        typeof i == "function" ? i = new i(e, n) : (i = r.document.createEvent("Event"), n ? (i.initEvent(e, n.bubbles, n.cancelable), i.detail = n.detail) : i.initEvent(e, !1, !1)), t.dispatchEvent(i);
    }
    function oue(t, e) {
        return function() {
            return z7(this, t, e);
        };
    }
    function aue(t, e) {
        return function() {
            return z7(this, t, e.apply(this, arguments));
        };
    }
    function lue(t, e) {
        return this.each((typeof e == "function" ? aue : oue)(t, e));
    }
    function* cue() {
        for(var t = this._groups, e = 0, n = t.length; e < n; ++e)for(var r = t[e], i = 0, s = r.length, o; i < s; ++i)(o = r[i]) && (yield o);
    }
    var V7 = [
        null
    ];
    function el(t, e) {
        this._groups = t, this._parents = e;
    }
    function Pw() {
        return new el([
            [
                document.documentElement
            ]
        ], V7);
    }
    function uue() {
        return this;
    }
    el.prototype = Pw.prototype = {
        constructor: el,
        select: Lle,
        selectAll: Ule,
        selectChild: qle,
        selectChildren: Xle,
        filter: Kle,
        data: tce,
        enter: Yle,
        exit: rce,
        join: ice,
        merge: sce,
        selection: uue,
        order: oce,
        sort: ace,
        call: cce,
        nodes: uce,
        node: dce,
        size: fce,
        empty: hce,
        each: pce,
        attr: wce,
        style: Mce,
        property: Ice,
        classed: kce,
        text: Fce,
        html: zce,
        raise: Wce,
        lower: Hce,
        append: $ce,
        insert: Xce,
        remove: Yce,
        clone: Qce,
        datum: eue,
        on: sue,
        dispatch: lue,
        [Symbol.iterator]: cue
    };
    function Ga(t) {
        return typeof t == "string" ? new el([
            [
                document.querySelector(t)
            ]
        ], [
            document.documentElement
        ]) : new el([
            [
                t
            ]
        ], V7);
    }
    function due(t) {
        let e;
        for(; e = t.sourceEvent;)t = e;
        return t;
    }
    function ac(t, e) {
        if (t = due(t), e === void 0 && (e = t.currentTarget), e) {
            var n = e.ownerSVGElement || e;
            if (n.createSVGPoint) {
                var r = n.createSVGPoint();
                return r.x = t.clientX, r.y = t.clientY, r = r.matrixTransform(e.getScreenCTM().inverse()), [
                    r.x,
                    r.y
                ];
            }
            if (e.getBoundingClientRect) {
                var i = e.getBoundingClientRect();
                return [
                    t.clientX - i.left - e.clientLeft,
                    t.clientY - i.top - e.clientTop
                ];
            }
        }
        return [
            t.pageX,
            t.pageY
        ];
    }
    const fue = {
        passive: !1
    }, Db = {
        capture: !0,
        passive: !1
    };
    function iA(t) {
        t.stopImmediatePropagation();
    }
    function ny(t) {
        t.preventDefault(), t.stopImmediatePropagation();
    }
    function W7(t) {
        var e = t.document.documentElement, n = Ga(t).on("dragstart.drag", ny, Db);
        "onselectstart" in e ? n.on("selectstart.drag", ny, Db) : (e.__noselect = e.style.MozUserSelect, e.style.MozUserSelect = "none");
    }
    function q7(t, e) {
        var n = t.document.documentElement, r = Ga(t).on("dragstart.drag", null);
        e && (r.on("click.drag", ny, Db), setTimeout(function() {
            r.on("click.drag", null);
        }, 0)), "onselectstart" in n ? r.on("selectstart.drag", null) : (n.style.MozUserSelect = n.__noselect, delete n.__noselect);
    }
    const y1 = (t)=>()=>t;
    function x3(t, { sourceEvent: e, subject: n, target: r, identifier: i, active: s, x: o, y: a, dx: l, dy: c, dispatch: u }) {
        Object.defineProperties(this, {
            type: {
                value: t,
                enumerable: !0,
                configurable: !0
            },
            sourceEvent: {
                value: e,
                enumerable: !0,
                configurable: !0
            },
            subject: {
                value: n,
                enumerable: !0,
                configurable: !0
            },
            target: {
                value: r,
                enumerable: !0,
                configurable: !0
            },
            identifier: {
                value: i,
                enumerable: !0,
                configurable: !0
            },
            active: {
                value: s,
                enumerable: !0,
                configurable: !0
            },
            x: {
                value: o,
                enumerable: !0,
                configurable: !0
            },
            y: {
                value: a,
                enumerable: !0,
                configurable: !0
            },
            dx: {
                value: l,
                enumerable: !0,
                configurable: !0
            },
            dy: {
                value: c,
                enumerable: !0,
                configurable: !0
            },
            _: {
                value: u
            }
        });
    }
    x3.prototype.on = function() {
        var t = this._.on.apply(this._, arguments);
        return t === this._ ? this : t;
    };
    function hue(t) {
        return !t.ctrlKey && !t.button;
    }
    function pue() {
        return this.parentNode;
    }
    function mue(t, e) {
        return e ?? {
            x: t.x,
            y: t.y
        };
    }
    function gue() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
    }
    function H7() {
        var t = hue, e = pue, n = mue, r = gue, i = {}, s = JT("start", "drag", "end"), o = 0, a, l, c, u, f = 0;
        function h(T) {
            T.on("mousedown.drag", m).filter(r).on("touchstart.drag", w).on("touchmove.drag", b, fue).on("touchend.drag touchcancel.drag", M).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        function m(T, P) {
            if (!(u || !t.call(this, T, P))) {
                var A = E(this, e.call(this, T, P), T, P, "mouse");
                A && (Ga(T.view).on("mousemove.drag", v, Db).on("mouseup.drag", _, Db), W7(T.view), iA(T), c = !1, a = T.clientX, l = T.clientY, A("start", T));
            }
        }
        function v(T) {
            if (ny(T), !c) {
                var P = T.clientX - a, A = T.clientY - l;
                c = P * P + A * A > f;
            }
            i.mouse("drag", T);
        }
        function _(T) {
            Ga(T.view).on("mousemove.drag mouseup.drag", null), q7(T.view, c), ny(T), i.mouse("end", T);
        }
        function w(T, P) {
            if (t.call(this, T, P)) {
                var A = T.changedTouches, O = e.call(this, T, P), D = A.length, R, N;
                for(R = 0; R < D; ++R)(N = E(this, O, T, P, A[R].identifier, A[R])) && (iA(T), N("start", T, A[R]));
            }
        }
        function b(T) {
            var P = T.changedTouches, A = P.length, O, D;
            for(O = 0; O < A; ++O)(D = i[P[O].identifier]) && (ny(T), D("drag", T, P[O]));
        }
        function M(T) {
            var P = T.changedTouches, A = P.length, O, D;
            for(u && clearTimeout(u), u = setTimeout(function() {
                u = null;
            }, 500), O = 0; O < A; ++O)(D = i[P[O].identifier]) && (iA(T), D("end", T, P[O]));
        }
        function E(T, P, A, O, D, R) {
            var N = s.copy(), k = ac(R || A, P), U, B, j;
            if ((j = n.call(T, new x3("beforestart", {
                sourceEvent: A,
                target: h,
                identifier: D,
                active: o,
                x: k[0],
                y: k[1],
                dx: 0,
                dy: 0,
                dispatch: N
            }), O)) != null) return U = j.x - k[0] || 0, B = j.y - k[1] || 0, function K(q, ee, W) {
                var Z = k, $;
                switch(q){
                    case "start":
                        i[D] = K, $ = o++;
                        break;
                    case "end":
                        delete i[D], --o;
                    case "drag":
                        k = ac(W || ee, P), $ = o;
                        break;
                }
                N.call(q, T, new x3(q, {
                    sourceEvent: ee,
                    subject: j,
                    target: h,
                    identifier: D,
                    active: $,
                    x: k[0] + U,
                    y: k[1] + B,
                    dx: k[0] - Z[0],
                    dy: k[1] - Z[1],
                    dispatch: N
                }), O);
            };
        }
        return h.filter = function(T) {
            return arguments.length ? (t = typeof T == "function" ? T : y1(!!T), h) : t;
        }, h.container = function(T) {
            return arguments.length ? (e = typeof T == "function" ? T : y1(T), h) : e;
        }, h.subject = function(T) {
            return arguments.length ? (n = typeof T == "function" ? T : y1(T), h) : n;
        }, h.touchable = function(T) {
            return arguments.length ? (r = typeof T == "function" ? T : y1(!!T), h) : r;
        }, h.on = function() {
            var T = s.on.apply(s, arguments);
            return T === s ? h : T;
        }, h.clickDistance = function(T) {
            return arguments.length ? (f = (T = +T) * T, h) : Math.sqrt(f);
        }, h;
    }
    function vk(t, e, n) {
        t.prototype = e.prototype = n, n.constructor = t;
    }
    function $7(t, e) {
        var n = Object.create(t.prototype);
        for(var r in e)n[r] = e[r];
        return n;
    }
    function kw() {}
    var Lb = .7, gM = 1 / Lb, ry = "\\s*([+-]?\\d+)\\s*", Fb = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", au = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", yue = /^#([0-9a-f]{3,8})$/, vue = new RegExp(`^rgb\\(${ry},${ry},${ry}\\)$`), xue = new RegExp(`^rgb\\(${au},${au},${au}\\)$`), bue = new RegExp(`^rgba\\(${ry},${ry},${ry},${Fb}\\)$`), wue = new RegExp(`^rgba\\(${au},${au},${au},${Fb}\\)$`), _ue = new RegExp(`^hsl\\(${Fb},${au},${au}\\)$`), Sue = new RegExp(`^hsla\\(${Fb},${au},${au},${Fb}\\)$`), V5 = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    };
    vk(kw, jb, {
        copy (t) {
            return Object.assign(new this.constructor, this, t);
        },
        displayable () {
            return this.rgb().displayable();
        },
        hex: W5,
        formatHex: W5,
        formatHex8: Eue,
        formatHsl: Mue,
        formatRgb: q5,
        toString: q5
    });
    function W5() {
        return this.rgb().formatHex();
    }
    function Eue() {
        return this.rgb().formatHex8();
    }
    function Mue() {
        return G7(this).formatHsl();
    }
    function q5() {
        return this.rgb().formatRgb();
    }
    function jb(t) {
        var e, n;
        return t = (t + "").trim().toLowerCase(), (e = yue.exec(t)) ? (n = e[1].length, e = parseInt(e[1], 16), n === 6 ? H5(e) : n === 3 ? new va(e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, (e & 15) << 4 | e & 15, 1) : n === 8 ? v1(e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, (e & 255) / 255) : n === 4 ? v1(e >> 12 & 15 | e >> 8 & 240, e >> 8 & 15 | e >> 4 & 240, e >> 4 & 15 | e & 240, ((e & 15) << 4 | e & 15) / 255) : null) : (e = vue.exec(t)) ? new va(e[1], e[2], e[3], 1) : (e = xue.exec(t)) ? new va(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, 1) : (e = bue.exec(t)) ? v1(e[1], e[2], e[3], e[4]) : (e = wue.exec(t)) ? v1(e[1] * 255 / 100, e[2] * 255 / 100, e[3] * 255 / 100, e[4]) : (e = _ue.exec(t)) ? X5(e[1], e[2] / 100, e[3] / 100, 1) : (e = Sue.exec(t)) ? X5(e[1], e[2] / 100, e[3] / 100, e[4]) : V5.hasOwnProperty(t) ? H5(V5[t]) : t === "transparent" ? new va(NaN, NaN, NaN, 0) : null;
    }
    function H5(t) {
        return new va(t >> 16 & 255, t >> 8 & 255, t & 255, 1);
    }
    function v1(t, e, n, r) {
        return r <= 0 && (t = e = n = NaN), new va(t, e, n, r);
    }
    function Tue(t) {
        return t instanceof kw || (t = jb(t)), t ? (t = t.rgb(), new va(t.r, t.g, t.b, t.opacity)) : new va;
    }
    function b3(t, e, n, r) {
        return arguments.length === 1 ? Tue(t) : new va(t, e, n, r ?? 1);
    }
    function va(t, e, n, r) {
        this.r = +t, this.g = +e, this.b = +n, this.opacity = +r;
    }
    vk(va, b3, $7(kw, {
        brighter (t) {
            return t = t == null ? gM : Math.pow(gM, t), new va(this.r * t, this.g * t, this.b * t, this.opacity);
        },
        darker (t) {
            return t = t == null ? Lb : Math.pow(Lb, t), new va(this.r * t, this.g * t, this.b * t, this.opacity);
        },
        rgb () {
            return this;
        },
        clamp () {
            return new va(lm(this.r), lm(this.g), lm(this.b), yM(this.opacity));
        },
        displayable () {
            return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
        },
        hex: $5,
        formatHex: $5,
        formatHex8: Cue,
        formatRgb: G5,
        toString: G5
    }));
    function $5() {
        return `#${tm(this.r)}${tm(this.g)}${tm(this.b)}`;
    }
    function Cue() {
        return `#${tm(this.r)}${tm(this.g)}${tm(this.b)}${tm((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
    }
    function G5() {
        const t = yM(this.opacity);
        return `${t === 1 ? "rgb(" : "rgba("}${lm(this.r)}, ${lm(this.g)}, ${lm(this.b)}${t === 1 ? ")" : `, ${t})`}`;
    }
    function yM(t) {
        return isNaN(t) ? 1 : Math.max(0, Math.min(1, t));
    }
    function lm(t) {
        return Math.max(0, Math.min(255, Math.round(t) || 0));
    }
    function tm(t) {
        return t = lm(t), (t < 16 ? "0" : "") + t.toString(16);
    }
    function X5(t, e, n, r) {
        return r <= 0 ? t = e = n = NaN : n <= 0 || n >= 1 ? t = e = NaN : e <= 0 && (t = NaN), new fc(t, e, n, r);
    }
    function G7(t) {
        if (t instanceof fc) return new fc(t.h, t.s, t.l, t.opacity);
        if (t instanceof kw || (t = jb(t)), !t) return new fc;
        if (t instanceof fc) return t;
        t = t.rgb();
        var e = t.r / 255, n = t.g / 255, r = t.b / 255, i = Math.min(e, n, r), s = Math.max(e, n, r), o = NaN, a = s - i, l = (s + i) / 2;
        return a ? (e === s ? o = (n - r) / a + (n < r) * 6 : n === s ? o = (r - e) / a + 2 : o = (e - n) / a + 4, a /= l < .5 ? s + i : 2 - s - i, o *= 60) : a = l > 0 && l < 1 ? 0 : o, new fc(o, a, l, t.opacity);
    }
    function Rue(t, e, n, r) {
        return arguments.length === 1 ? G7(t) : new fc(t, e, n, r ?? 1);
    }
    function fc(t, e, n, r) {
        this.h = +t, this.s = +e, this.l = +n, this.opacity = +r;
    }
    vk(fc, Rue, $7(kw, {
        brighter (t) {
            return t = t == null ? gM : Math.pow(gM, t), new fc(this.h, this.s, this.l * t, this.opacity);
        },
        darker (t) {
            return t = t == null ? Lb : Math.pow(Lb, t), new fc(this.h, this.s, this.l * t, this.opacity);
        },
        rgb () {
            var t = this.h % 360 + (this.h < 0) * 360, e = isNaN(t) || isNaN(this.s) ? 0 : this.s, n = this.l, r = n + (n < .5 ? n : 1 - n) * e, i = 2 * n - r;
            return new va(sA(t >= 240 ? t - 240 : t + 120, i, r), sA(t, i, r), sA(t < 120 ? t + 240 : t - 120, i, r), this.opacity);
        },
        clamp () {
            return new fc(K5(this.h), x1(this.s), x1(this.l), yM(this.opacity));
        },
        displayable () {
            return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
        },
        formatHsl () {
            const t = yM(this.opacity);
            return `${t === 1 ? "hsl(" : "hsla("}${K5(this.h)}, ${x1(this.s) * 100}%, ${x1(this.l) * 100}%${t === 1 ? ")" : `, ${t})`}`;
        }
    }));
    function K5(t) {
        return t = (t || 0) % 360, t < 0 ? t + 360 : t;
    }
    function x1(t) {
        return Math.max(0, Math.min(1, t || 0));
    }
    function sA(t, e, n) {
        return (t < 60 ? e + (n - e) * t / 60 : t < 180 ? n : t < 240 ? e + (n - e) * (240 - t) / 60 : e) * 255;
    }
    const X7 = (t)=>()=>t;
    function Iue(t, e) {
        return function(n) {
            return t + n * e;
        };
    }
    function Aue(t, e, n) {
        return t = Math.pow(t, n), e = Math.pow(e, n) - t, n = 1 / n, function(r) {
            return Math.pow(t + r * e, n);
        };
    }
    function Nue(t) {
        return (t = +t) == 1 ? K7 : function(e, n) {
            return n - e ? Aue(e, n, t) : X7(isNaN(e) ? n : e);
        };
    }
    function K7(t, e) {
        var n = e - t;
        return n ? Iue(t, n) : X7(isNaN(t) ? e : t);
    }
    const Y5 = function t(e) {
        var n = Nue(e);
        function r(i, s) {
            var o = n((i = b3(i)).r, (s = b3(s)).r), a = n(i.g, s.g), l = n(i.b, s.b), c = K7(i.opacity, s.opacity);
            return function(u) {
                return i.r = o(u), i.g = a(u), i.b = l(u), i.opacity = c(u), i + "";
            };
        }
        return r.gamma = t, r;
    }(1);
    function qf(t, e) {
        return t = +t, e = +e, function(n) {
            return t * (1 - n) + e * n;
        };
    }
    var w3 = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, oA = new RegExp(w3.source, "g");
    function Pue(t) {
        return function() {
            return t;
        };
    }
    function kue(t) {
        return function(e) {
            return t(e) + "";
        };
    }
    function Oue(t, e) {
        var n = w3.lastIndex = oA.lastIndex = 0, r, i, s, o = -1, a = [], l = [];
        for(t = t + "", e = e + ""; (r = w3.exec(t)) && (i = oA.exec(e));)(s = i.index) > n && (s = e.slice(n, s), a[o] ? a[o] += s : a[++o] = s), (r = r[0]) === (i = i[0]) ? a[o] ? a[o] += i : a[++o] = i : (a[++o] = null, l.push({
            i: o,
            x: qf(r, i)
        })), n = oA.lastIndex;
        return n < e.length && (s = e.slice(n), a[o] ? a[o] += s : a[++o] = s), a.length < 2 ? l[0] ? kue(l[0].x) : Pue(e) : (e = l.length, function(c) {
            for(var u = 0, f; u < e; ++u)a[(f = l[u]).i] = f.x(c);
            return a.join("");
        });
    }
    var Z5 = 180 / Math.PI, _3 = {
        translateX: 0,
        translateY: 0,
        rotate: 0,
        skewX: 0,
        scaleX: 1,
        scaleY: 1
    };
    function Y7(t, e, n, r, i, s) {
        var o, a, l;
        return (o = Math.sqrt(t * t + e * e)) && (t /= o, e /= o), (l = t * n + e * r) && (n -= t * l, r -= e * l), (a = Math.sqrt(n * n + r * r)) && (n /= a, r /= a, l /= a), t * r < e * n && (t = -t, e = -e, l = -l, o = -o), {
            translateX: i,
            translateY: s,
            rotate: Math.atan2(e, t) * Z5,
            skewX: Math.atan(l) * Z5,
            scaleX: o,
            scaleY: a
        };
    }
    var b1;
    function Due(t) {
        const e = new (typeof DOMMatrix == "function" ? DOMMatrix : WebKitCSSMatrix)(t + "");
        return e.isIdentity ? _3 : Y7(e.a, e.b, e.c, e.d, e.e, e.f);
    }
    function Lue(t) {
        return t == null || (b1 || (b1 = document.createElementNS("http://www.w3.org/2000/svg", "g")), b1.setAttribute("transform", t), !(t = b1.transform.baseVal.consolidate())) ? _3 : (t = t.matrix, Y7(t.a, t.b, t.c, t.d, t.e, t.f));
    }
    function Z7(t, e, n, r) {
        function i(c) {
            return c.length ? c.pop() + " " : "";
        }
        function s(c, u, f, h, m, v) {
            if (c !== f || u !== h) {
                var _ = m.push("translate(", null, e, null, n);
                v.push({
                    i: _ - 4,
                    x: qf(c, f)
                }, {
                    i: _ - 2,
                    x: qf(u, h)
                });
            } else (f || h) && m.push("translate(" + f + e + h + n);
        }
        function o(c, u, f, h) {
            c !== u ? (c - u > 180 ? u += 360 : u - c > 180 && (c += 360), h.push({
                i: f.push(i(f) + "rotate(", null, r) - 2,
                x: qf(c, u)
            })) : u && f.push(i(f) + "rotate(" + u + r);
        }
        function a(c, u, f, h) {
            c !== u ? h.push({
                i: f.push(i(f) + "skewX(", null, r) - 2,
                x: qf(c, u)
            }) : u && f.push(i(f) + "skewX(" + u + r);
        }
        function l(c, u, f, h, m, v) {
            if (c !== f || u !== h) {
                var _ = m.push(i(m) + "scale(", null, ",", null, ")");
                v.push({
                    i: _ - 4,
                    x: qf(c, f)
                }, {
                    i: _ - 2,
                    x: qf(u, h)
                });
            } else (f !== 1 || h !== 1) && m.push(i(m) + "scale(" + f + "," + h + ")");
        }
        return function(c, u) {
            var f = [], h = [];
            return c = t(c), u = t(u), s(c.translateX, c.translateY, u.translateX, u.translateY, f, h), o(c.rotate, u.rotate, f, h), a(c.skewX, u.skewX, f, h), l(c.scaleX, c.scaleY, u.scaleX, u.scaleY, f, h), c = u = null, function(m) {
                for(var v = -1, _ = h.length, w; ++v < _;)f[(w = h[v]).i] = w.x(m);
                return f.join("");
            };
        };
    }
    var Fue = Z7(Due, "px, ", "px)", "deg)"), jue = Z7(Lue, ", ", ")", ")"), Bue = 1e-12;
    function J5(t) {
        return ((t = Math.exp(t)) + 1 / t) / 2;
    }
    function Uue(t) {
        return ((t = Math.exp(t)) - 1 / t) / 2;
    }
    function zue(t) {
        return ((t = Math.exp(2 * t)) - 1) / (t + 1);
    }
    const Vue = function t(e, n, r) {
        function i(s, o) {
            var a = s[0], l = s[1], c = s[2], u = o[0], f = o[1], h = o[2], m = u - a, v = f - l, _ = m * m + v * v, w, b;
            if (_ < Bue) b = Math.log(h / c) / e, w = function(O) {
                return [
                    a + O * m,
                    l + O * v,
                    c * Math.exp(e * O * b)
                ];
            };
            else {
                var M = Math.sqrt(_), E = (h * h - c * c + r * _) / (2 * c * n * M), T = (h * h - c * c - r * _) / (2 * h * n * M), P = Math.log(Math.sqrt(E * E + 1) - E), A = Math.log(Math.sqrt(T * T + 1) - T);
                b = (A - P) / e, w = function(O) {
                    var D = O * b, R = J5(P), N = c / (n * M) * (R * zue(e * D + P) - Uue(P));
                    return [
                        a + N * m,
                        l + N * v,
                        c * R / J5(e * D + P)
                    ];
                };
            }
            return w.duration = b * 1e3 * e / Math.SQRT2, w;
        }
        return i.rho = function(s) {
            var o = Math.max(.001, +s), a = o * o, l = a * a;
            return t(o, a, l);
        }, i;
    }(Math.SQRT2, 2, 4);
    var gy = 0, _x = 0, Kv = 0, J7 = 1e3, vM, Sx, xM = 0, Tm = 0, e2 = 0, Bb = typeof performance == "object" && performance.now ? performance : Date, Q7 = typeof window == "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(t) {
        setTimeout(t, 17);
    };
    function xk() {
        return Tm || (Q7(Wue), Tm = Bb.now() + e2);
    }
    function Wue() {
        Tm = 0;
    }
    function bM() {
        this._call = this._time = this._next = null;
    }
    bM.prototype = eV.prototype = {
        constructor: bM,
        restart: function(t, e, n) {
            if (typeof t != "function") throw new TypeError("callback is not a function");
            n = (n == null ? xk() : +n) + (e == null ? 0 : +e), !this._next && Sx !== this && (Sx ? Sx._next = this : vM = this, Sx = this), this._call = t, this._time = n, S3();
        },
        stop: function() {
            this._call && (this._call = null, this._time = 1 / 0, S3());
        }
    };
    function eV(t, e, n) {
        var r = new bM;
        return r.restart(t, e, n), r;
    }
    function que() {
        xk(), ++gy;
        for(var t = vM, e; t;)(e = Tm - t._time) >= 0 && t._call.call(void 0, e), t = t._next;
        --gy;
    }
    function Q5() {
        Tm = (xM = Bb.now()) + e2, gy = _x = 0;
        try {
            que();
        } finally{
            gy = 0, $ue(), Tm = 0;
        }
    }
    function Hue() {
        var t = Bb.now(), e = t - xM;
        e > J7 && (e2 -= e, xM = t);
    }
    function $ue() {
        for(var t, e = vM, n, r = 1 / 0; e;)e._call ? (r > e._time && (r = e._time), t = e, e = e._next) : (n = e._next, e._next = null, e = t ? t._next = n : vM = n);
        Sx = t, S3(r);
    }
    function S3(t) {
        if (!gy) {
            _x && (_x = clearTimeout(_x));
            var e = t - Tm;
            e > 24 ? (t < 1 / 0 && (_x = setTimeout(Q5, t - Bb.now() - e2)), Kv && (Kv = clearInterval(Kv))) : (Kv || (xM = Bb.now(), Kv = setInterval(Hue, J7)), gy = 1, Q7(Q5));
        }
    }
    function e6(t, e, n) {
        var r = new bM;
        return e = e == null ? 0 : +e, r.restart((i)=>{
            r.stop(), t(i + e);
        }, e, n), r;
    }
    var Gue = JT("start", "end", "cancel", "interrupt"), Xue = [], tV = 0, t6 = 1, E3 = 2, HS = 3, n6 = 4, M3 = 5, $S = 6;
    function t2(t, e, n, r, i, s) {
        var o = t.__transition;
        if (!o) t.__transition = {};
        else if (n in o) return;
        Kue(t, n, {
            name: e,
            index: r,
            group: i,
            on: Gue,
            tween: Xue,
            time: s.time,
            delay: s.delay,
            duration: s.duration,
            ease: s.ease,
            timer: null,
            state: tV
        });
    }
    function bk(t, e) {
        var n = Tc(t, e);
        if (n.state > tV) throw new Error("too late; already scheduled");
        return n;
    }
    function yu(t, e) {
        var n = Tc(t, e);
        if (n.state > HS) throw new Error("too late; already running");
        return n;
    }
    function Tc(t, e) {
        var n = t.__transition;
        if (!n || !(n = n[e])) throw new Error("transition not found");
        return n;
    }
    function Kue(t, e, n) {
        var r = t.__transition, i;
        r[e] = n, n.timer = eV(s, 0, n.time);
        function s(c) {
            n.state = t6, n.timer.restart(o, n.delay, n.time), n.delay <= c && o(c - n.delay);
        }
        function o(c) {
            var u, f, h, m;
            if (n.state !== t6) return l();
            for(u in r)if (m = r[u], m.name === n.name) {
                if (m.state === HS) return e6(o);
                m.state === n6 ? (m.state = $S, m.timer.stop(), m.on.call("interrupt", t, t.__data__, m.index, m.group), delete r[u]) : +u < e && (m.state = $S, m.timer.stop(), m.on.call("cancel", t, t.__data__, m.index, m.group), delete r[u]);
            }
            if (e6(function() {
                n.state === HS && (n.state = n6, n.timer.restart(a, n.delay, n.time), a(c));
            }), n.state = E3, n.on.call("start", t, t.__data__, n.index, n.group), n.state === E3) {
                for(n.state = HS, i = new Array(h = n.tween.length), u = 0, f = -1; u < h; ++u)(m = n.tween[u].value.call(t, t.__data__, n.index, n.group)) && (i[++f] = m);
                i.length = f + 1;
            }
        }
        function a(c) {
            for(var u = c < n.duration ? n.ease.call(null, c / n.duration) : (n.timer.restart(l), n.state = M3, 1), f = -1, h = i.length; ++f < h;)i[f].call(t, u);
            n.state === M3 && (n.on.call("end", t, t.__data__, n.index, n.group), l());
        }
        function l() {
            n.state = $S, n.timer.stop(), delete r[e];
            for(var c in r)return;
            delete t.__transition;
        }
    }
    function GS(t, e) {
        var n = t.__transition, r, i, s = !0, o;
        if (n) {
            e = e == null ? null : e + "";
            for(o in n){
                if ((r = n[o]).name !== e) {
                    s = !1;
                    continue;
                }
                i = r.state > E3 && r.state < M3, r.state = $S, r.timer.stop(), r.on.call(i ? "interrupt" : "cancel", t, t.__data__, r.index, r.group), delete n[o];
            }
            s && delete t.__transition;
        }
    }
    function Yue(t) {
        return this.each(function() {
            GS(this, t);
        });
    }
    function Zue(t, e) {
        var n, r;
        return function() {
            var i = yu(this, t), s = i.tween;
            if (s !== n) {
                r = n = s;
                for(var o = 0, a = r.length; o < a; ++o)if (r[o].name === e) {
                    r = r.slice(), r.splice(o, 1);
                    break;
                }
            }
            i.tween = r;
        };
    }
    function Jue(t, e, n) {
        var r, i;
        if (typeof n != "function") throw new Error;
        return function() {
            var s = yu(this, t), o = s.tween;
            if (o !== r) {
                i = (r = o).slice();
                for(var a = {
                    name: e,
                    value: n
                }, l = 0, c = i.length; l < c; ++l)if (i[l].name === e) {
                    i[l] = a;
                    break;
                }
                l === c && i.push(a);
            }
            s.tween = i;
        };
    }
    function Que(t, e) {
        var n = this._id;
        if (t += "", arguments.length < 2) {
            for(var r = Tc(this.node(), n).tween, i = 0, s = r.length, o; i < s; ++i)if ((o = r[i]).name === t) return o.value;
            return null;
        }
        return this.each((e == null ? Zue : Jue)(n, t, e));
    }
    function wk(t, e, n) {
        var r = t._id;
        return t.each(function() {
            var i = yu(this, r);
            (i.value || (i.value = {}))[e] = n.apply(this, arguments);
        }), function(i) {
            return Tc(i, r).value[e];
        };
    }
    function nV(t, e) {
        var n;
        return (typeof e == "number" ? qf : e instanceof jb ? Y5 : (n = jb(e)) ? (e = n, Y5) : Oue)(t, e);
    }
    function ede(t) {
        return function() {
            this.removeAttribute(t);
        };
    }
    function tde(t) {
        return function() {
            this.removeAttributeNS(t.space, t.local);
        };
    }
    function nde(t, e, n) {
        var r, i = n + "", s;
        return function() {
            var o = this.getAttribute(t);
            return o === i ? null : o === r ? s : s = e(r = o, n);
        };
    }
    function rde(t, e, n) {
        var r, i = n + "", s;
        return function() {
            var o = this.getAttributeNS(t.space, t.local);
            return o === i ? null : o === r ? s : s = e(r = o, n);
        };
    }
    function ide(t, e, n) {
        var r, i, s;
        return function() {
            var o, a = n(this), l;
            return a == null ? void this.removeAttribute(t) : (o = this.getAttribute(t), l = a + "", o === l ? null : o === r && l === i ? s : (i = l, s = e(r = o, a)));
        };
    }
    function sde(t, e, n) {
        var r, i, s;
        return function() {
            var o, a = n(this), l;
            return a == null ? void this.removeAttributeNS(t.space, t.local) : (o = this.getAttributeNS(t.space, t.local), l = a + "", o === l ? null : o === r && l === i ? s : (i = l, s = e(r = o, a)));
        };
    }
    function ode(t, e) {
        var n = QT(t), r = n === "transform" ? jue : nV;
        return this.attrTween(t, typeof e == "function" ? (n.local ? sde : ide)(n, r, wk(this, "attr." + t, e)) : e == null ? (n.local ? tde : ede)(n) : (n.local ? rde : nde)(n, r, e));
    }
    function ade(t, e) {
        return function(n) {
            this.setAttribute(t, e.call(this, n));
        };
    }
    function lde(t, e) {
        return function(n) {
            this.setAttributeNS(t.space, t.local, e.call(this, n));
        };
    }
    function cde(t, e) {
        var n, r;
        function i() {
            var s = e.apply(this, arguments);
            return s !== r && (n = (r = s) && lde(t, s)), n;
        }
        return i._value = e, i;
    }
    function ude(t, e) {
        var n, r;
        function i() {
            var s = e.apply(this, arguments);
            return s !== r && (n = (r = s) && ade(t, s)), n;
        }
        return i._value = e, i;
    }
    function dde(t, e) {
        var n = "attr." + t;
        if (arguments.length < 2) return (n = this.tween(n)) && n._value;
        if (e == null) return this.tween(n, null);
        if (typeof e != "function") throw new Error;
        var r = QT(t);
        return this.tween(n, (r.local ? cde : ude)(r, e));
    }
    function fde(t, e) {
        return function() {
            bk(this, t).delay = +e.apply(this, arguments);
        };
    }
    function hde(t, e) {
        return e = +e, function() {
            bk(this, t).delay = e;
        };
    }
    function pde(t) {
        var e = this._id;
        return arguments.length ? this.each((typeof t == "function" ? fde : hde)(e, t)) : Tc(this.node(), e).delay;
    }
    function mde(t, e) {
        return function() {
            yu(this, t).duration = +e.apply(this, arguments);
        };
    }
    function gde(t, e) {
        return e = +e, function() {
            yu(this, t).duration = e;
        };
    }
    function yde(t) {
        var e = this._id;
        return arguments.length ? this.each((typeof t == "function" ? mde : gde)(e, t)) : Tc(this.node(), e).duration;
    }
    function vde(t, e) {
        if (typeof e != "function") throw new Error;
        return function() {
            yu(this, t).ease = e;
        };
    }
    function xde(t) {
        var e = this._id;
        return arguments.length ? this.each(vde(e, t)) : Tc(this.node(), e).ease;
    }
    function bde(t, e) {
        return function() {
            var n = e.apply(this, arguments);
            if (typeof n != "function") throw new Error;
            yu(this, t).ease = n;
        };
    }
    function wde(t) {
        if (typeof t != "function") throw new Error;
        return this.each(bde(this._id, t));
    }
    function _de(t) {
        typeof t != "function" && (t = k7(t));
        for(var e = this._groups, n = e.length, r = new Array(n), i = 0; i < n; ++i)for(var s = e[i], o = s.length, a = r[i] = [], l, c = 0; c < o; ++c)(l = s[c]) && t.call(l, l.__data__, c, s) && a.push(l);
        return new Dd(r, this._parents, this._name, this._id);
    }
    function Sde(t) {
        if (t._id !== this._id) throw new Error;
        for(var e = this._groups, n = t._groups, r = e.length, i = n.length, s = Math.min(r, i), o = new Array(r), a = 0; a < s; ++a)for(var l = e[a], c = n[a], u = l.length, f = o[a] = new Array(u), h, m = 0; m < u; ++m)(h = l[m] || c[m]) && (f[m] = h);
        for(; a < r; ++a)o[a] = e[a];
        return new Dd(o, this._parents, this._name, this._id);
    }
    function Ede(t) {
        return (t + "").trim().split(/^|\s+/).every(function(e) {
            var n = e.indexOf(".");
            return n >= 0 && (e = e.slice(0, n)), !e || e === "start";
        });
    }
    function Mde(t, e, n) {
        var r, i, s = Ede(e) ? bk : yu;
        return function() {
            var o = s(this, t), a = o.on;
            a !== r && (i = (r = a).copy()).on(e, n), o.on = i;
        };
    }
    function Tde(t, e) {
        var n = this._id;
        return arguments.length < 2 ? Tc(this.node(), n).on.on(t) : this.each(Mde(n, t, e));
    }
    function Cde(t) {
        return function() {
            var e = this.parentNode;
            for(var n in this.__transition)if (+n !== t) return;
            e && e.removeChild(this);
        };
    }
    function Rde() {
        return this.on("end.remove", Cde(this._id));
    }
    function Ide(t) {
        var e = this._name, n = this._id;
        typeof t != "function" && (t = gk(t));
        for(var r = this._groups, i = r.length, s = new Array(i), o = 0; o < i; ++o)for(var a = r[o], l = a.length, c = s[o] = new Array(l), u, f, h = 0; h < l; ++h)(u = a[h]) && (f = t.call(u, u.__data__, h, a)) && ("__data__" in u && (f.__data__ = u.__data__), c[h] = f, t2(c[h], e, n, h, c, Tc(u, n)));
        return new Dd(s, this._parents, e, n);
    }
    function Ade(t) {
        var e = this._name, n = this._id;
        typeof t != "function" && (t = P7(t));
        for(var r = this._groups, i = r.length, s = [], o = [], a = 0; a < i; ++a)for(var l = r[a], c = l.length, u, f = 0; f < c; ++f)if (u = l[f]) {
            for(var h = t.call(u, u.__data__, f, l), m, v = Tc(u, n), _ = 0, w = h.length; _ < w; ++_)(m = h[_]) && t2(m, e, n, _, h, v);
            s.push(h), o.push(u);
        }
        return new Dd(s, o, e, n);
    }
    var Nde = Pw.prototype.constructor;
    function Pde() {
        return new Nde(this._groups, this._parents);
    }
    function kde(t, e) {
        var n, r, i;
        return function() {
            var s = my(this, t), o = (this.style.removeProperty(t), my(this, t));
            return s === o ? null : s === n && o === r ? i : i = e(n = s, r = o);
        };
    }
    function rV(t) {
        return function() {
            this.style.removeProperty(t);
        };
    }
    function Ode(t, e, n) {
        var r, i = n + "", s;
        return function() {
            var o = my(this, t);
            return o === i ? null : o === r ? s : s = e(r = o, n);
        };
    }
    function Dde(t, e, n) {
        var r, i, s;
        return function() {
            var o = my(this, t), a = n(this), l = a + "";
            return a == null && (l = a = (this.style.removeProperty(t), my(this, t))), o === l ? null : o === r && l === i ? s : (i = l, s = e(r = o, a));
        };
    }
    function Lde(t, e) {
        var n, r, i, s = "style." + e, o = "end." + s, a;
        return function() {
            var l = yu(this, t), c = l.on, u = l.value[s] == null ? a || (a = rV(e)) : void 0;
            (c !== n || i !== u) && (r = (n = c).copy()).on(o, i = u), l.on = r;
        };
    }
    function Fde(t, e, n) {
        var r = (t += "") == "transform" ? Fue : nV;
        return e == null ? this.styleTween(t, kde(t, r)).on("end.style." + t, rV(t)) : typeof e == "function" ? this.styleTween(t, Dde(t, r, wk(this, "style." + t, e))).each(Lde(this._id, t)) : this.styleTween(t, Ode(t, r, e), n).on("end.style." + t, null);
    }
    function jde(t, e, n) {
        return function(r) {
            this.style.setProperty(t, e.call(this, r), n);
        };
    }
    function Bde(t, e, n) {
        var r, i;
        function s() {
            var o = e.apply(this, arguments);
            return o !== i && (r = (i = o) && jde(t, o, n)), r;
        }
        return s._value = e, s;
    }
    function Ude(t, e, n) {
        var r = "style." + (t += "");
        if (arguments.length < 2) return (r = this.tween(r)) && r._value;
        if (e == null) return this.tween(r, null);
        if (typeof e != "function") throw new Error;
        return this.tween(r, Bde(t, e, n ?? ""));
    }
    function zde(t) {
        return function() {
            this.textContent = t;
        };
    }
    function Vde(t) {
        return function() {
            var e = t(this);
            this.textContent = e ?? "";
        };
    }
    function Wde(t) {
        return this.tween("text", typeof t == "function" ? Vde(wk(this, "text", t)) : zde(t == null ? "" : t + ""));
    }
    function qde(t) {
        return function(e) {
            this.textContent = t.call(this, e);
        };
    }
    function Hde(t) {
        var e, n;
        function r() {
            var i = t.apply(this, arguments);
            return i !== n && (e = (n = i) && qde(i)), e;
        }
        return r._value = t, r;
    }
    function $de(t) {
        var e = "text";
        if (arguments.length < 1) return (e = this.tween(e)) && e._value;
        if (t == null) return this.tween(e, null);
        if (typeof t != "function") throw new Error;
        return this.tween(e, Hde(t));
    }
    function Gde() {
        for(var t = this._name, e = this._id, n = iV(), r = this._groups, i = r.length, s = 0; s < i; ++s)for(var o = r[s], a = o.length, l, c = 0; c < a; ++c)if (l = o[c]) {
            var u = Tc(l, e);
            t2(l, t, n, c, o, {
                time: u.time + u.delay + u.duration,
                delay: 0,
                duration: u.duration,
                ease: u.ease
            });
        }
        return new Dd(r, this._parents, t, n);
    }
    function Xde() {
        var t, e, n = this, r = n._id, i = n.size();
        return new Promise(function(s, o) {
            var a = {
                value: o
            }, l = {
                value: function() {
                    --i === 0 && s();
                }
            };
            n.each(function() {
                var c = yu(this, r), u = c.on;
                u !== t && (e = (t = u).copy(), e._.cancel.push(a), e._.interrupt.push(a), e._.end.push(l)), c.on = e;
            }), i === 0 && s();
        });
    }
    var Kde = 0;
    function Dd(t, e, n, r) {
        this._groups = t, this._parents = e, this._name = n, this._id = r;
    }
    function iV() {
        return ++Kde;
    }
    var id = Pw.prototype;
    Dd.prototype = {
        constructor: Dd,
        select: Ide,
        selectAll: Ade,
        selectChild: id.selectChild,
        selectChildren: id.selectChildren,
        filter: _de,
        merge: Sde,
        selection: Pde,
        transition: Gde,
        call: id.call,
        nodes: id.nodes,
        node: id.node,
        size: id.size,
        empty: id.empty,
        each: id.each,
        on: Tde,
        attr: ode,
        attrTween: dde,
        style: Fde,
        styleTween: Ude,
        text: Wde,
        textTween: $de,
        remove: Rde,
        tween: Que,
        delay: pde,
        duration: yde,
        ease: xde,
        easeVarying: wde,
        end: Xde,
        [Symbol.iterator]: id[Symbol.iterator]
    };
    function Yde(t) {
        return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }
    var Zde = {
        time: null,
        delay: 0,
        duration: 250,
        ease: Yde
    };
    function Jde(t, e) {
        for(var n; !(n = t.__transition) || !(n = n[e]);)if (!(t = t.parentNode)) throw new Error(`transition ${e} not found`);
        return n;
    }
    function Qde(t) {
        var e, n;
        t instanceof Dd ? (e = t._id, t = t._name) : (e = iV(), (n = Zde).time = xk(), t = t == null ? null : t + "");
        for(var r = this._groups, i = r.length, s = 0; s < i; ++s)for(var o = r[s], a = o.length, l, c = 0; c < a; ++c)(l = o[c]) && t2(l, t, e, c, o, n || Jde(l, e));
        return new Dd(r, this._parents, t, e);
    }
    Pw.prototype.interrupt = Yue;
    Pw.prototype.transition = Qde;
    const w1 = (t)=>()=>t;
    function efe(t, { sourceEvent: e, target: n, transform: r, dispatch: i }) {
        Object.defineProperties(this, {
            type: {
                value: t,
                enumerable: !0,
                configurable: !0
            },
            sourceEvent: {
                value: e,
                enumerable: !0,
                configurable: !0
            },
            target: {
                value: n,
                enumerable: !0,
                configurable: !0
            },
            transform: {
                value: r,
                enumerable: !0,
                configurable: !0
            },
            _: {
                value: i
            }
        });
    }
    function wd(t, e, n) {
        this.k = t, this.x = e, this.y = n;
    }
    wd.prototype = {
        constructor: wd,
        scale: function(t) {
            return t === 1 ? this : new wd(this.k * t, this.x, this.y);
        },
        translate: function(t, e) {
            return t === 0 & e === 0 ? this : new wd(this.k, this.x + this.k * t, this.y + this.k * e);
        },
        apply: function(t) {
            return [
                t[0] * this.k + this.x,
                t[1] * this.k + this.y
            ];
        },
        applyX: function(t) {
            return t * this.k + this.x;
        },
        applyY: function(t) {
            return t * this.k + this.y;
        },
        invert: function(t) {
            return [
                (t[0] - this.x) / this.k,
                (t[1] - this.y) / this.k
            ];
        },
        invertX: function(t) {
            return (t - this.x) / this.k;
        },
        invertY: function(t) {
            return (t - this.y) / this.k;
        },
        rescaleX: function(t) {
            return t.copy().domain(t.range().map(this.invertX, this).map(t.invert, t));
        },
        rescaleY: function(t) {
            return t.copy().domain(t.range().map(this.invertY, this).map(t.invert, t));
        },
        toString: function() {
            return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
        }
    };
    var n2 = new wd(1, 0, 0);
    sV.prototype = wd.prototype;
    function sV(t) {
        for(; !t.__zoom;)if (!(t = t.parentNode)) return n2;
        return t.__zoom;
    }
    function aA(t) {
        t.stopImmediatePropagation();
    }
    function Yv(t) {
        t.preventDefault(), t.stopImmediatePropagation();
    }
    function tfe(t) {
        return (!t.ctrlKey || t.type === "wheel") && !t.button;
    }
    function nfe() {
        var t = this;
        return t instanceof SVGElement ? (t = t.ownerSVGElement || t, t.hasAttribute("viewBox") ? (t = t.viewBox.baseVal, [
            [
                t.x,
                t.y
            ],
            [
                t.x + t.width,
                t.y + t.height
            ]
        ]) : [
            [
                0,
                0
            ],
            [
                t.width.baseVal.value,
                t.height.baseVal.value
            ]
        ]) : [
            [
                0,
                0
            ],
            [
                t.clientWidth,
                t.clientHeight
            ]
        ];
    }
    function r6() {
        return this.__zoom || n2;
    }
    function rfe(t) {
        return -t.deltaY * (t.deltaMode === 1 ? .05 : t.deltaMode ? 1 : .002) * (t.ctrlKey ? 10 : 1);
    }
    function ife() {
        return navigator.maxTouchPoints || "ontouchstart" in this;
    }
    function sfe(t, e, n) {
        var r = t.invertX(e[0][0]) - n[0][0], i = t.invertX(e[1][0]) - n[1][0], s = t.invertY(e[0][1]) - n[0][1], o = t.invertY(e[1][1]) - n[1][1];
        return t.translate(i > r ? (r + i) / 2 : Math.min(0, r) || Math.max(0, i), o > s ? (s + o) / 2 : Math.min(0, s) || Math.max(0, o));
    }
    function oV() {
        var t = tfe, e = nfe, n = sfe, r = rfe, i = ife, s = [
            0,
            1 / 0
        ], o = [
            [
                -1 / 0,
                -1 / 0
            ],
            [
                1 / 0,
                1 / 0
            ]
        ], a = 250, l = Vue, c = JT("start", "zoom", "end"), u, f, h, m = 500, v = 150, _ = 0, w = 10;
        function b(j) {
            j.property("__zoom", r6).on("wheel.zoom", D, {
                passive: !1
            }).on("mousedown.zoom", R).on("dblclick.zoom", N).filter(i).on("touchstart.zoom", k).on("touchmove.zoom", U).on("touchend.zoom touchcancel.zoom", B).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        b.transform = function(j, K, q, ee) {
            var W = j.selection ? j.selection() : j;
            W.property("__zoom", r6), j !== W ? P(j, K, q, ee) : W.interrupt().each(function() {
                A(this, arguments).event(ee).start().zoom(null, typeof K == "function" ? K.apply(this, arguments) : K).end();
            });
        }, b.scaleBy = function(j, K, q, ee) {
            b.scaleTo(j, function() {
                var W = this.__zoom.k, Z = typeof K == "function" ? K.apply(this, arguments) : K;
                return W * Z;
            }, q, ee);
        }, b.scaleTo = function(j, K, q, ee) {
            b.transform(j, function() {
                var W = e.apply(this, arguments), Z = this.__zoom, $ = q == null ? T(W) : typeof q == "function" ? q.apply(this, arguments) : q, H = Z.invert($), se = typeof K == "function" ? K.apply(this, arguments) : K;
                return n(E(M(Z, se), $, H), W, o);
            }, q, ee);
        }, b.translateBy = function(j, K, q, ee) {
            b.transform(j, function() {
                return n(this.__zoom.translate(typeof K == "function" ? K.apply(this, arguments) : K, typeof q == "function" ? q.apply(this, arguments) : q), e.apply(this, arguments), o);
            }, null, ee);
        }, b.translateTo = function(j, K, q, ee, W) {
            b.transform(j, function() {
                var Z = e.apply(this, arguments), $ = this.__zoom, H = ee == null ? T(Z) : typeof ee == "function" ? ee.apply(this, arguments) : ee;
                return n(n2.translate(H[0], H[1]).scale($.k).translate(typeof K == "function" ? -K.apply(this, arguments) : -K, typeof q == "function" ? -q.apply(this, arguments) : -q), Z, o);
            }, ee, W);
        };
        function M(j, K) {
            return K = Math.max(s[0], Math.min(s[1], K)), K === j.k ? j : new wd(K, j.x, j.y);
        }
        function E(j, K, q) {
            var ee = K[0] - q[0] * j.k, W = K[1] - q[1] * j.k;
            return ee === j.x && W === j.y ? j : new wd(j.k, ee, W);
        }
        function T(j) {
            return [
                (+j[0][0] + +j[1][0]) / 2,
                (+j[0][1] + +j[1][1]) / 2
            ];
        }
        function P(j, K, q, ee) {
            j.on("start.zoom", function() {
                A(this, arguments).event(ee).start();
            }).on("interrupt.zoom end.zoom", function() {
                A(this, arguments).event(ee).end();
            }).tween("zoom", function() {
                var W = this, Z = arguments, $ = A(W, Z).event(ee), H = e.apply(W, Z), se = q == null ? T(H) : typeof q == "function" ? q.apply(W, Z) : q, le = Math.max(H[1][0] - H[0][0], H[1][1] - H[0][1]), ne = W.__zoom, ue = typeof K == "function" ? K.apply(W, Z) : K, ge = l(ne.invert(se).concat(le / ne.k), ue.invert(se).concat(le / ue.k));
                return function(ye) {
                    if (ye === 1) ye = ue;
                    else {
                        var _e = ge(ye), Te = le / _e[2];
                        ye = new wd(Te, se[0] - _e[0] * Te, se[1] - _e[1] * Te);
                    }
                    $.zoom(null, ye);
                };
            });
        }
        function A(j, K, q) {
            return !q && j.__zooming || new O(j, K);
        }
        function O(j, K) {
            this.that = j, this.args = K, this.active = 0, this.sourceEvent = null, this.extent = e.apply(j, K), this.taps = 0;
        }
        O.prototype = {
            event: function(j) {
                return j && (this.sourceEvent = j), this;
            },
            start: function() {
                return ++this.active === 1 && (this.that.__zooming = this, this.emit("start")), this;
            },
            zoom: function(j, K) {
                return this.mouse && j !== "mouse" && (this.mouse[1] = K.invert(this.mouse[0])), this.touch0 && j !== "touch" && (this.touch0[1] = K.invert(this.touch0[0])), this.touch1 && j !== "touch" && (this.touch1[1] = K.invert(this.touch1[0])), this.that.__zoom = K, this.emit("zoom"), this;
            },
            end: function() {
                return --this.active === 0 && (delete this.that.__zooming, this.emit("end")), this;
            },
            emit: function(j) {
                var K = Ga(this.that).datum();
                c.call(j, this.that, new efe(j, {
                    sourceEvent: this.sourceEvent,
                    target: b,
                    transform: this.that.__zoom,
                    dispatch: c
                }), K);
            }
        };
        function D(j, ...K) {
            if (!t.apply(this, arguments)) return;
            var q = A(this, K).event(j), ee = this.__zoom, W = Math.max(s[0], Math.min(s[1], ee.k * Math.pow(2, r.apply(this, arguments)))), Z = ac(j);
            if (q.wheel) (q.mouse[0][0] !== Z[0] || q.mouse[0][1] !== Z[1]) && (q.mouse[1] = ee.invert(q.mouse[0] = Z)), clearTimeout(q.wheel);
            else {
                if (ee.k === W) return;
                q.mouse = [
                    Z,
                    ee.invert(Z)
                ], GS(this), q.start();
            }
            Yv(j), q.wheel = setTimeout($, v), q.zoom("mouse", n(E(M(ee, W), q.mouse[0], q.mouse[1]), q.extent, o));
            function $() {
                q.wheel = null, q.end();
            }
        }
        function R(j, ...K) {
            if (h || !t.apply(this, arguments)) return;
            var q = j.currentTarget, ee = A(this, K, !0).event(j), W = Ga(j.view).on("mousemove.zoom", se, !0).on("mouseup.zoom", le, !0), Z = ac(j, q), $ = j.clientX, H = j.clientY;
            W7(j.view), aA(j), ee.mouse = [
                Z,
                this.__zoom.invert(Z)
            ], GS(this), ee.start();
            function se(ne) {
                if (Yv(ne), !ee.moved) {
                    var ue = ne.clientX - $, ge = ne.clientY - H;
                    ee.moved = ue * ue + ge * ge > _;
                }
                ee.event(ne).zoom("mouse", n(E(ee.that.__zoom, ee.mouse[0] = ac(ne, q), ee.mouse[1]), ee.extent, o));
            }
            function le(ne) {
                W.on("mousemove.zoom mouseup.zoom", null), q7(ne.view, ee.moved), Yv(ne), ee.event(ne).end();
            }
        }
        function N(j, ...K) {
            if (t.apply(this, arguments)) {
                var q = this.__zoom, ee = ac(j.changedTouches ? j.changedTouches[0] : j, this), W = q.invert(ee), Z = q.k * (j.shiftKey ? .5 : 2), $ = n(E(M(q, Z), ee, W), e.apply(this, K), o);
                Yv(j), a > 0 ? Ga(this).transition().duration(a).call(P, $, ee, j) : Ga(this).call(b.transform, $, ee, j);
            }
        }
        function k(j, ...K) {
            if (t.apply(this, arguments)) {
                var q = j.touches, ee = q.length, W = A(this, K, j.changedTouches.length === ee).event(j), Z, $, H, se;
                for(aA(j), $ = 0; $ < ee; ++$)H = q[$], se = ac(H, this), se = [
                    se,
                    this.__zoom.invert(se),
                    H.identifier
                ], W.touch0 ? !W.touch1 && W.touch0[2] !== se[2] && (W.touch1 = se, W.taps = 0) : (W.touch0 = se, Z = !0, W.taps = 1 + !!u);
                u && (u = clearTimeout(u)), Z && (W.taps < 2 && (f = se[0], u = setTimeout(function() {
                    u = null;
                }, m)), GS(this), W.start());
            }
        }
        function U(j, ...K) {
            if (this.__zooming) {
                var q = A(this, K).event(j), ee = j.changedTouches, W = ee.length, Z, $, H, se;
                for(Yv(j), Z = 0; Z < W; ++Z)$ = ee[Z], H = ac($, this), q.touch0 && q.touch0[2] === $.identifier ? q.touch0[0] = H : q.touch1 && q.touch1[2] === $.identifier && (q.touch1[0] = H);
                if ($ = q.that.__zoom, q.touch1) {
                    var le = q.touch0[0], ne = q.touch0[1], ue = q.touch1[0], ge = q.touch1[1], ye = (ye = ue[0] - le[0]) * ye + (ye = ue[1] - le[1]) * ye, _e = (_e = ge[0] - ne[0]) * _e + (_e = ge[1] - ne[1]) * _e;
                    $ = M($, Math.sqrt(ye / _e)), H = [
                        (le[0] + ue[0]) / 2,
                        (le[1] + ue[1]) / 2
                    ], se = [
                        (ne[0] + ge[0]) / 2,
                        (ne[1] + ge[1]) / 2
                    ];
                } else if (q.touch0) H = q.touch0[0], se = q.touch0[1];
                else return;
                q.zoom("touch", n(E($, H, se), q.extent, o));
            }
        }
        function B(j, ...K) {
            if (this.__zooming) {
                var q = A(this, K).event(j), ee = j.changedTouches, W = ee.length, Z, $;
                for(aA(j), h && clearTimeout(h), h = setTimeout(function() {
                    h = null;
                }, m), Z = 0; Z < W; ++Z)$ = ee[Z], q.touch0 && q.touch0[2] === $.identifier ? delete q.touch0 : q.touch1 && q.touch1[2] === $.identifier && delete q.touch1;
                if (q.touch1 && !q.touch0 && (q.touch0 = q.touch1, delete q.touch1), q.touch0) q.touch0[1] = this.__zoom.invert(q.touch0[0]);
                else if (q.end(), q.taps === 2 && ($ = ac($, this), Math.hypot(f[0] - $[0], f[1] - $[1]) < w)) {
                    var H = Ga(this).on("dblclick.zoom");
                    H && H.apply(this, arguments);
                }
            }
        }
        return b.wheelDelta = function(j) {
            return arguments.length ? (r = typeof j == "function" ? j : w1(+j), b) : r;
        }, b.filter = function(j) {
            return arguments.length ? (t = typeof j == "function" ? j : w1(!!j), b) : t;
        }, b.touchable = function(j) {
            return arguments.length ? (i = typeof j == "function" ? j : w1(!!j), b) : i;
        }, b.extent = function(j) {
            return arguments.length ? (e = typeof j == "function" ? j : w1([
                [
                    +j[0][0],
                    +j[0][1]
                ],
                [
                    +j[1][0],
                    +j[1][1]
                ]
            ]), b) : e;
        }, b.scaleExtent = function(j) {
            return arguments.length ? (s[0] = +j[0], s[1] = +j[1], b) : [
                s[0],
                s[1]
            ];
        }, b.translateExtent = function(j) {
            return arguments.length ? (o[0][0] = +j[0][0], o[1][0] = +j[1][0], o[0][1] = +j[0][1], o[1][1] = +j[1][1], b) : [
                [
                    o[0][0],
                    o[0][1]
                ],
                [
                    o[1][0],
                    o[1][1]
                ]
            ];
        }, b.constrain = function(j) {
            return arguments.length ? (n = j, b) : n;
        }, b.duration = function(j) {
            return arguments.length ? (a = +j, b) : a;
        }, b.interpolate = function(j) {
            return arguments.length ? (l = j, b) : l;
        }, b.on = function() {
            var j = c.on.apply(c, arguments);
            return j === c ? b : j;
        }, b.clickDistance = function(j) {
            return arguments.length ? (_ = (j = +j) * j, b) : Math.sqrt(_);
        }, b.tapDistance = function(j) {
            return arguments.length ? (w = +j, b) : w;
        }, b;
    }
    const Ud = {
        error001: ()=>"[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001",
        error002: ()=>"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.",
        error003: (t)=>`Node type "${t}" not found. Using fallback type "default".`,
        error004: ()=>"The React Flow parent container needs a width and a height to render the graph.",
        error005: ()=>"Only child nodes can use a parent extent.",
        error006: ()=>"Can't create edge. An edge needs a source and a target.",
        error007: (t)=>`The old edge with id=${t} does not exist.`,
        error009: (t)=>`Marker type "${t}" doesn't exist.`,
        error008: (t, { id: e, sourceHandle: n, targetHandle: r })=>`Couldn't create edge for ${t} handle id: "${t === "source" ? n : r}", edge id: ${e}.`,
        error010: ()=>"Handle: No node id found. Make sure to only use a Handle inside a custom Node.",
        error011: (t)=>`Edge type "${t}" not found. Using fallback type "default".`,
        error012: (t)=>`Node with id "${t}" does not exist, it may have been removed. This can happen when a node is deleted before the "onNodeClick" handler is called.`,
        error013: (t = "react")=>`It seems that you haven't loaded the styles. Please import '@xyflow/${t}/dist/style.css' or base.css to make sure everything is working properly.`,
        error014: ()=>"useNodeConnections: No node ID found. Call useNodeConnections inside a custom Node or provide a node ID."
    }, Ub = [
        [
            Number.NEGATIVE_INFINITY,
            Number.NEGATIVE_INFINITY
        ],
        [
            Number.POSITIVE_INFINITY,
            Number.POSITIVE_INFINITY
        ]
    ], aV = [
        "Enter",
        " ",
        "Escape"
    ];
    var yy;
    (function(t) {
        t.Strict = "strict", t.Loose = "loose";
    })(yy || (yy = {}));
    var cm;
    (function(t) {
        t.Free = "free", t.Vertical = "vertical", t.Horizontal = "horizontal";
    })(cm || (cm = {}));
    var zb;
    (function(t) {
        t.Partial = "partial", t.Full = "full";
    })(zb || (zb = {}));
    const lV = {
        inProgress: !1,
        isValid: null,
        from: null,
        fromHandle: null,
        fromPosition: null,
        fromNode: null,
        to: null,
        toHandle: null,
        toPosition: null,
        toNode: null
    };
    var Jf;
    (function(t) {
        t.Bezier = "default", t.Straight = "straight", t.Step = "step", t.SmoothStep = "smoothstep", t.SimpleBezier = "simplebezier";
    })(Jf || (Jf = {}));
    var wM;
    (function(t) {
        t.Arrow = "arrow", t.ArrowClosed = "arrowclosed";
    })(wM || (wM = {}));
    var nn;
    (function(t) {
        t.Left = "left", t.Top = "top", t.Right = "right", t.Bottom = "bottom";
    })(nn || (nn = {}));
    const i6 = {
        [nn.Left]: nn.Right,
        [nn.Right]: nn.Left,
        [nn.Top]: nn.Bottom,
        [nn.Bottom]: nn.Top
    };
    function cV(t) {
        return t === null ? null : t ? "valid" : "invalid";
    }
    const uV = (t)=>"id" in t && "source" in t && "target" in t, ofe = (t)=>"id" in t && "position" in t && !("source" in t) && !("target" in t), _k = (t)=>"id" in t && "internals" in t && !("source" in t) && !("target" in t), Ow = (t, e = [
        0,
        0
    ])=>{
        const { width: n, height: r } = zd(t), i = t.origin ?? e, s = n * i[0], o = r * i[1];
        return {
            x: t.position.x - s,
            y: t.position.y - o
        };
    }, afe = (t, e = {
        nodeOrigin: [
            0,
            0
        ],
        nodeLookup: void 0
    })=>{
        if (t.length === 0) return {
            x: 0,
            y: 0,
            width: 0,
            height: 0
        };
        const n = t.reduce((r, i)=>{
            const s = typeof i == "string";
            let o = !e.nodeLookup && !s ? i : void 0;
            e.nodeLookup && (o = s ? e.nodeLookup.get(i) : _k(i) ? i : e.nodeLookup.get(i.id));
            const a = o ? _M(o, e.nodeOrigin) : {
                x: 0,
                y: 0,
                x2: 0,
                y2: 0
            };
            return r2(r, a);
        }, {
            x: 1 / 0,
            y: 1 / 0,
            x2: -1 / 0,
            y2: -1 / 0
        });
        return i2(n);
    }, Dw = (t, e = {})=>{
        if (t.size === 0) return {
            x: 0,
            y: 0,
            width: 0,
            height: 0
        };
        let n = {
            x: 1 / 0,
            y: 1 / 0,
            x2: -1 / 0,
            y2: -1 / 0
        };
        return t.forEach((r)=>{
            if (e.filter === void 0 || e.filter(r)) {
                const i = _M(r);
                n = r2(n, i);
            }
        }), i2(n);
    }, dV = (t, e, [n, r, i] = [
        0,
        0,
        1
    ], s = !1, o = !1)=>{
        const a = {
            ...Lw(e, [
                n,
                r,
                i
            ]),
            width: e.width / i,
            height: e.height / i
        }, l = [];
        for (const c of t.values()){
            const { measured: u, selectable: f = !0, hidden: h = !1 } = c;
            if (o && !f || h) continue;
            const m = u.width ?? c.width ?? c.initialWidth ?? null, v = u.height ?? c.height ?? c.initialHeight ?? null, _ = Vb(a, xy(c)), w = (m ?? 0) * (v ?? 0), b = s && _ > 0;
            (!c.internals.handleBounds || b || _ >= w || c.dragging) && l.push(c);
        }
        return l;
    }, lfe = (t, e)=>{
        const n = new Set;
        return t.forEach((r)=>{
            n.add(r.id);
        }), e.filter((r)=>n.has(r.source) || n.has(r.target));
    };
    function T3(t, e) {
        const n = new Map, r = e?.nodes ? new Set(e.nodes.map((i)=>i.id)) : null;
        return t.forEach((i)=>{
            i.measured.width && i.measured.height && (e?.includeHiddenNodes || !i.hidden) && (!r || r.has(i.id)) && n.set(i.id, i);
        }), n;
    }
    async function C3({ nodes: t, width: e, height: n, panZoom: r, minZoom: i, maxZoom: s }, o) {
        if (t.size === 0) return Promise.resolve(!1);
        const a = Dw(t), l = Sk(a, e, n, o?.minZoom ?? i, o?.maxZoom ?? s, o?.padding ?? .1);
        return await r.setViewport(l, {
            duration: o?.duration
        }), Promise.resolve(!0);
    }
    function fV({ nodeId: t, nextPosition: e, nodeLookup: n, nodeOrigin: r = [
        0,
        0
    ], nodeExtent: i, onError: s }) {
        const o = n.get(t), a = o.parentId ? n.get(o.parentId) : void 0, { x: l, y: c } = a ? a.internals.positionAbsolute : {
            x: 0,
            y: 0
        }, u = o.origin ?? r;
        let f = i;
        if (o.extent === "parent" && !o.expandParent) if (!a) s?.("005", Ud.error005());
        else {
            const m = a.measured.width, v = a.measured.height;
            m && v && (f = [
                [
                    l,
                    c
                ],
                [
                    l + m,
                    c + v
                ]
            ]);
        }
        else a && by(o.extent) && (f = [
            [
                o.extent[0][0] + l,
                o.extent[0][1] + c
            ],
            [
                o.extent[1][0] + l,
                o.extent[1][1] + c
            ]
        ]);
        const h = by(f) ? Cm(e, f, o.measured) : e;
        return {
            position: {
                x: h.x - l + o.measured.width * u[0],
                y: h.y - c + o.measured.height * u[1]
            },
            positionAbsolute: h
        };
    }
    async function cfe({ nodesToRemove: t = [], edgesToRemove: e = [], nodes: n, edges: r, onBeforeDelete: i }) {
        const s = new Set(t.map((h)=>h.id)), o = [];
        for (const h of n){
            if (h.deletable === !1) continue;
            const m = s.has(h.id), v = !m && h.parentId && o.find((_)=>_.id === h.parentId);
            (m || v) && o.push(h);
        }
        const a = new Set(e.map((h)=>h.id)), l = r.filter((h)=>h.deletable !== !1), u = lfe(o, l);
        for (const h of l)a.has(h.id) && !u.find((v)=>v.id === h.id) && u.push(h);
        if (!i) return {
            edges: u,
            nodes: o
        };
        const f = await i({
            nodes: o,
            edges: u
        });
        return typeof f == "boolean" ? f ? {
            edges: u,
            nodes: o
        } : {
            edges: [],
            nodes: []
        } : f;
    }
    const vy = (t, e = 0, n = 1)=>Math.min(Math.max(t, e), n), Cm = (t = {
        x: 0,
        y: 0
    }, e, n)=>({
            x: vy(t.x, e[0][0], e[1][0] - (n?.width ?? 0)),
            y: vy(t.y, e[0][1], e[1][1] - (n?.height ?? 0))
        });
    function hV(t, e, n) {
        const { width: r, height: i } = zd(n), { x: s, y: o } = n.internals.positionAbsolute;
        return Cm(t, [
            [
                s,
                o
            ],
            [
                s + r,
                o + i
            ]
        ], e);
    }
    const s6 = (t, e, n)=>t < e ? vy(Math.abs(t - e), 1, e) / e : t > n ? -vy(Math.abs(t - n), 1, e) / e : 0, pV = (t, e, n = 15, r = 40)=>{
        const i = s6(t.x, r, e.width - r) * n, s = s6(t.y, r, e.height - r) * n;
        return [
            i,
            s
        ];
    }, r2 = (t, e)=>({
            x: Math.min(t.x, e.x),
            y: Math.min(t.y, e.y),
            x2: Math.max(t.x2, e.x2),
            y2: Math.max(t.y2, e.y2)
        }), R3 = ({ x: t, y: e, width: n, height: r })=>({
            x: t,
            y: e,
            x2: t + n,
            y2: e + r
        }), i2 = ({ x: t, y: e, x2: n, y2: r })=>({
            x: t,
            y: e,
            width: n - t,
            height: r - e
        }), xy = (t, e = [
        0,
        0
    ])=>{
        const { x: n, y: r } = _k(t) ? t.internals.positionAbsolute : Ow(t, e);
        return {
            x: n,
            y: r,
            width: t.measured?.width ?? t.width ?? t.initialWidth ?? 0,
            height: t.measured?.height ?? t.height ?? t.initialHeight ?? 0
        };
    }, _M = (t, e = [
        0,
        0
    ])=>{
        const { x: n, y: r } = _k(t) ? t.internals.positionAbsolute : Ow(t, e);
        return {
            x: n,
            y: r,
            x2: n + (t.measured?.width ?? t.width ?? t.initialWidth ?? 0),
            y2: r + (t.measured?.height ?? t.height ?? t.initialHeight ?? 0)
        };
    }, mV = (t, e)=>i2(r2(R3(t), R3(e))), Vb = (t, e)=>{
        const n = Math.max(0, Math.min(t.x + t.width, e.x + e.width) - Math.max(t.x, e.x)), r = Math.max(0, Math.min(t.y + t.height, e.y + e.height) - Math.max(t.y, e.y));
        return Math.ceil(n * r);
    }, o6 = (t)=>mc(t.width) && mc(t.height) && mc(t.x) && mc(t.y), mc = (t)=>!isNaN(t) && isFinite(t), ufe = (t, e)=>{}, s2 = (t, e = [
        1,
        1
    ])=>({
            x: e[0] * Math.round(t.x / e[0]),
            y: e[1] * Math.round(t.y / e[1])
        }), Lw = ({ x: t, y: e }, [n, r, i], s = !1, o = [
        1,
        1
    ])=>{
        const a = {
            x: (t - n) / i,
            y: (e - r) / i
        };
        return s ? s2(a, o) : a;
    }, gV = ({ x: t, y: e }, [n, r, i])=>({
            x: t * i + n,
            y: e * i + r
        }), Sk = (t, e, n, r, i, s)=>{
        const o = e / (t.width * (1 + s)), a = n / (t.height * (1 + s)), l = Math.min(o, a), c = vy(l, r, i), u = t.x + t.width / 2, f = t.y + t.height / 2, h = e / 2 - u * c, m = n / 2 - f * c;
        return {
            x: h,
            y: m,
            zoom: c
        };
    }, SM = ()=>typeof navigator < "u" && navigator?.userAgent?.indexOf("Mac") >= 0;
    function by(t) {
        return t !== void 0 && t !== "parent";
    }
    function zd(t) {
        return {
            width: t.measured?.width ?? t.width ?? t.initialWidth ?? 0,
            height: t.measured?.height ?? t.height ?? t.initialHeight ?? 0
        };
    }
    function yV(t) {
        return (t.measured?.width ?? t.width ?? t.initialWidth) !== void 0 && (t.measured?.height ?? t.height ?? t.initialHeight) !== void 0;
    }
    function vV(t, e = {
        width: 0,
        height: 0
    }, n, r, i) {
        const s = {
            ...t
        }, o = r.get(n);
        if (o) {
            const a = o.origin || i;
            s.x += o.internals.positionAbsolute.x - (e.width ?? 0) * a[0], s.y += o.internals.positionAbsolute.y - (e.height ?? 0) * a[1];
        }
        return s;
    }
    function a6(t, e) {
        if (t.size !== e.size) return !1;
        for (const n of t)if (!e.has(n)) return !1;
        return !0;
    }
    function Kx(t, { snapGrid: e = [
        0,
        0
    ], snapToGrid: n = !1, transform: r, containerBounds: i }) {
        const { x: s, y: o } = Md(t), a = Lw({
            x: s - (i?.left ?? 0),
            y: o - (i?.top ?? 0)
        }, r), { x: l, y: c } = n ? s2(a, e) : a;
        return {
            xSnapped: l,
            ySnapped: c,
            ...a
        };
    }
    const o2 = (t)=>({
            width: t.offsetWidth,
            height: t.offsetHeight
        }), xV = (t)=>t?.getRootNode?.() || window?.document, dfe = [
        "INPUT",
        "SELECT",
        "TEXTAREA"
    ];
    function I3(t) {
        const e = t.composedPath?.()?.[0] || t.target;
        return e?.nodeType !== 1 ? !1 : dfe.includes(e.nodeName) || e.hasAttribute("contenteditable") || !!e.closest(".nokey");
    }
    const bV = (t)=>"clientX" in t, Md = (t, e)=>{
        const n = bV(t), r = n ? t.clientX : t.touches?.[0].clientX, i = n ? t.clientY : t.touches?.[0].clientY;
        return {
            x: r - (e?.left ?? 0),
            y: i - (e?.top ?? 0)
        };
    }, l6 = (t, e, n, r, i)=>{
        const s = e.querySelectorAll(`.${t}`);
        return !s || !s.length ? null : Array.from(s).map((o)=>{
            const a = o.getBoundingClientRect();
            return {
                id: o.getAttribute("data-handleid"),
                type: t,
                nodeId: i,
                position: o.getAttribute("data-handlepos"),
                x: (a.left - n.left) / r,
                y: (a.top - n.top) / r,
                ...o2(o)
            };
        });
    };
    function wV({ sourceX: t, sourceY: e, targetX: n, targetY: r, sourceControlX: i, sourceControlY: s, targetControlX: o, targetControlY: a }) {
        const l = t * .125 + i * .375 + o * .375 + n * .125, c = e * .125 + s * .375 + a * .375 + r * .125, u = Math.abs(l - t), f = Math.abs(c - e);
        return [
            l,
            c,
            u,
            f
        ];
    }
    function _1(t, e) {
        return t >= 0 ? .5 * t : e * 25 * Math.sqrt(-t);
    }
    function c6({ pos: t, x1: e, y1: n, x2: r, y2: i, c: s }) {
        switch(t){
            case nn.Left:
                return [
                    e - _1(e - r, s),
                    n
                ];
            case nn.Right:
                return [
                    e + _1(r - e, s),
                    n
                ];
            case nn.Top:
                return [
                    e,
                    n - _1(n - i, s)
                ];
            case nn.Bottom:
                return [
                    e,
                    n + _1(i - n, s)
                ];
        }
    }
    function Ek({ sourceX: t, sourceY: e, sourcePosition: n = nn.Bottom, targetX: r, targetY: i, targetPosition: s = nn.Top, curvature: o = .25 }) {
        const [a, l] = c6({
            pos: n,
            x1: t,
            y1: e,
            x2: r,
            y2: i,
            c: o
        }), [c, u] = c6({
            pos: s,
            x1: r,
            y1: i,
            x2: t,
            y2: e,
            c: o
        }), [f, h, m, v] = wV({
            sourceX: t,
            sourceY: e,
            targetX: r,
            targetY: i,
            sourceControlX: a,
            sourceControlY: l,
            targetControlX: c,
            targetControlY: u
        });
        return [
            `M${t},${e} C${a},${l} ${c},${u} ${r},${i}`,
            f,
            h,
            m,
            v
        ];
    }
    function _V({ sourceX: t, sourceY: e, targetX: n, targetY: r }) {
        const i = Math.abs(n - t) / 2, s = n < t ? n + i : n - i, o = Math.abs(r - e) / 2, a = r < e ? r + o : r - o;
        return [
            s,
            a,
            i,
            o
        ];
    }
    function ffe({ sourceNode: t, targetNode: e, selected: n = !1, zIndex: r = 0, elevateOnSelect: i = !1 }) {
        if (!i) return r;
        const s = n || e.selected || t.selected, o = Math.max(t.internals.z || 0, e.internals.z || 0, 1e3);
        return r + (s ? o : 0);
    }
    function hfe({ sourceNode: t, targetNode: e, width: n, height: r, transform: i }) {
        const s = r2(_M(t), _M(e));
        s.x === s.x2 && (s.x2 += 1), s.y === s.y2 && (s.y2 += 1);
        const o = {
            x: -i[0] / i[2],
            y: -i[1] / i[2],
            width: n / i[2],
            height: r / i[2]
        };
        return Vb(o, i2(s)) > 0;
    }
    const pfe = ({ source: t, sourceHandle: e, target: n, targetHandle: r })=>`xy-edge__${t}${e || ""}-${n}${r || ""}`, mfe = (t, e)=>e.some((n)=>n.source === t.source && n.target === t.target && (n.sourceHandle === t.sourceHandle || !n.sourceHandle && !t.sourceHandle) && (n.targetHandle === t.targetHandle || !n.targetHandle && !t.targetHandle)), gfe = (t, e)=>{
        if (!t.source || !t.target) return e;
        let n;
        return uV(t) ? n = {
            ...t
        } : n = {
            ...t,
            id: pfe(t)
        }, mfe(n, e) ? e : (n.sourceHandle === null && delete n.sourceHandle, n.targetHandle === null && delete n.targetHandle, e.concat(n));
    };
    function SV({ sourceX: t, sourceY: e, targetX: n, targetY: r }) {
        const [i, s, o, a] = _V({
            sourceX: t,
            sourceY: e,
            targetX: n,
            targetY: r
        });
        return [
            `M ${t},${e}L ${n},${r}`,
            i,
            s,
            o,
            a
        ];
    }
    const u6 = {
        [nn.Left]: {
            x: -1,
            y: 0
        },
        [nn.Right]: {
            x: 1,
            y: 0
        },
        [nn.Top]: {
            x: 0,
            y: -1
        },
        [nn.Bottom]: {
            x: 0,
            y: 1
        }
    }, yfe = ({ source: t, sourcePosition: e = nn.Bottom, target: n })=>e === nn.Left || e === nn.Right ? t.x < n.x ? {
            x: 1,
            y: 0
        } : {
            x: -1,
            y: 0
        } : t.y < n.y ? {
            x: 0,
            y: 1
        } : {
            x: 0,
            y: -1
        }, d6 = (t, e)=>Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
    function vfe({ source: t, sourcePosition: e = nn.Bottom, target: n, targetPosition: r = nn.Top, center: i, offset: s }) {
        const o = u6[e], a = u6[r], l = {
            x: t.x + o.x * s,
            y: t.y + o.y * s
        }, c = {
            x: n.x + a.x * s,
            y: n.y + a.y * s
        }, u = yfe({
            source: l,
            sourcePosition: e,
            target: c
        }), f = u.x !== 0 ? "x" : "y", h = u[f];
        let m = [], v, _;
        const w = {
            x: 0,
            y: 0
        }, b = {
            x: 0,
            y: 0
        }, [M, E, T, P] = _V({
            sourceX: t.x,
            sourceY: t.y,
            targetX: n.x,
            targetY: n.y
        });
        if (o[f] * a[f] === -1) {
            v = i.x ?? M, _ = i.y ?? E;
            const O = [
                {
                    x: v,
                    y: l.y
                },
                {
                    x: v,
                    y: c.y
                }
            ], D = [
                {
                    x: l.x,
                    y: _
                },
                {
                    x: c.x,
                    y: _
                }
            ];
            o[f] === h ? m = f === "x" ? O : D : m = f === "x" ? D : O;
        } else {
            const O = [
                {
                    x: l.x,
                    y: c.y
                }
            ], D = [
                {
                    x: c.x,
                    y: l.y
                }
            ];
            if (f === "x" ? m = o.x === h ? D : O : m = o.y === h ? O : D, e === r) {
                const B = Math.abs(t[f] - n[f]);
                if (B <= s) {
                    const j = Math.min(s - 1, s - B);
                    o[f] === h ? w[f] = (l[f] > t[f] ? -1 : 1) * j : b[f] = (c[f] > n[f] ? -1 : 1) * j;
                }
            }
            if (e !== r) {
                const B = f === "x" ? "y" : "x", j = o[f] === a[B], K = l[B] > c[B], q = l[B] < c[B];
                (o[f] === 1 && (!j && K || j && q) || o[f] !== 1 && (!j && q || j && K)) && (m = f === "x" ? O : D);
            }
            const R = {
                x: l.x + w.x,
                y: l.y + w.y
            }, N = {
                x: c.x + b.x,
                y: c.y + b.y
            }, k = Math.max(Math.abs(R.x - m[0].x), Math.abs(N.x - m[0].x)), U = Math.max(Math.abs(R.y - m[0].y), Math.abs(N.y - m[0].y));
            k >= U ? (v = (R.x + N.x) / 2, _ = m[0].y) : (v = m[0].x, _ = (R.y + N.y) / 2);
        }
        return [
            [
                t,
                {
                    x: l.x + w.x,
                    y: l.y + w.y
                },
                ...m,
                {
                    x: c.x + b.x,
                    y: c.y + b.y
                },
                n
            ],
            v,
            _,
            T,
            P
        ];
    }
    function xfe(t, e, n, r) {
        const i = Math.min(d6(t, e) / 2, d6(e, n) / 2, r), { x: s, y: o } = e;
        if (t.x === s && s === n.x || t.y === o && o === n.y) return `L${s} ${o}`;
        if (t.y === o) {
            const c = t.x < n.x ? -1 : 1, u = t.y < n.y ? 1 : -1;
            return `L ${s + i * c},${o}Q ${s},${o} ${s},${o + i * u}`;
        }
        const a = t.x < n.x ? 1 : -1, l = t.y < n.y ? -1 : 1;
        return `L ${s},${o + i * l}Q ${s},${o} ${s + i * a},${o}`;
    }
    function A3({ sourceX: t, sourceY: e, sourcePosition: n = nn.Bottom, targetX: r, targetY: i, targetPosition: s = nn.Top, borderRadius: o = 5, centerX: a, centerY: l, offset: c = 20 }) {
        const [u, f, h, m, v] = vfe({
            source: {
                x: t,
                y: e
            },
            sourcePosition: n,
            target: {
                x: r,
                y: i
            },
            targetPosition: s,
            center: {
                x: a,
                y: l
            },
            offset: c
        });
        return [
            u.reduce((w, b, M)=>{
                let E = "";
                return M > 0 && M < u.length - 1 ? E = xfe(u[M - 1], b, u[M + 1], o) : E = `${M === 0 ? "M" : "L"}${b.x} ${b.y}`, w += E, w;
            }, ""),
            f,
            h,
            m,
            v
        ];
    }
    function f6(t) {
        return t && !!(t.internals.handleBounds || t.handles?.length) && !!(t.measured.width || t.width || t.initialWidth);
    }
    function bfe(t) {
        const { sourceNode: e, targetNode: n } = t;
        if (!f6(e) || !f6(n)) return null;
        const r = e.internals.handleBounds || h6(e.handles), i = n.internals.handleBounds || h6(n.handles), s = p6(r?.source ?? [], t.sourceHandle), o = p6(t.connectionMode === yy.Strict ? i?.target ?? [] : (i?.target ?? []).concat(i?.source ?? []), t.targetHandle);
        if (!s || !o) return t.onError?.("008", Ud.error008(s ? "target" : "source", {
            id: t.id,
            sourceHandle: t.sourceHandle,
            targetHandle: t.targetHandle
        })), null;
        const a = s?.position || nn.Bottom, l = o?.position || nn.Top, c = Wb(e, s, a), u = Wb(n, o, l);
        return {
            sourceX: c.x,
            sourceY: c.y,
            targetX: u.x,
            targetY: u.y,
            sourcePosition: a,
            targetPosition: l
        };
    }
    function h6(t) {
        if (!t) return null;
        const e = [], n = [];
        for (const r of t)r.width = r.width ?? 1, r.height = r.height ?? 1, r.type === "source" ? e.push(r) : r.type === "target" && n.push(r);
        return {
            source: e,
            target: n
        };
    }
    function Wb(t, e, n = nn.Left, r = !1) {
        const i = (e?.x ?? 0) + t.internals.positionAbsolute.x, s = (e?.y ?? 0) + t.internals.positionAbsolute.y, { width: o, height: a } = e ?? zd(t);
        if (r) return {
            x: i + o / 2,
            y: s + a / 2
        };
        switch(e?.position ?? n){
            case nn.Top:
                return {
                    x: i + o / 2,
                    y: s
                };
            case nn.Right:
                return {
                    x: i + o,
                    y: s + a / 2
                };
            case nn.Bottom:
                return {
                    x: i + o / 2,
                    y: s + a
                };
            case nn.Left:
                return {
                    x: i,
                    y: s + a / 2
                };
        }
    }
    function p6(t, e) {
        return t && (e ? t.find((n)=>n.id === e) : t[0]) || null;
    }
    function N3(t, e) {
        return t ? typeof t == "string" ? t : `${e ? `${e}__` : ""}${Object.keys(t).sort().map((r)=>`${r}=${t[r]}`).join("&")}` : "";
    }
    function wfe(t, { id: e, defaultColor: n, defaultMarkerStart: r, defaultMarkerEnd: i }) {
        const s = new Set;
        return t.reduce((o, a)=>([
                a.markerStart || r,
                a.markerEnd || i
            ].forEach((l)=>{
                if (l && typeof l == "object") {
                    const c = N3(l, e);
                    s.has(c) || (o.push({
                        id: c,
                        color: l.color || n,
                        ...l
                    }), s.add(c));
                }
            }), o), []).sort((o, a)=>o.id.localeCompare(a.id));
    }
    const Mk = {
        nodeOrigin: [
            0,
            0
        ],
        nodeExtent: Ub,
        elevateNodesOnSelect: !0,
        defaults: {}
    }, _fe = {
        ...Mk,
        checkEquality: !0
    };
    function Tk(t, e) {
        const n = {
            ...t
        };
        for(const r in e)e[r] !== void 0 && (n[r] = e[r]);
        return n;
    }
    function Sfe(t, e, n) {
        const r = Tk(Mk, n);
        for (const i of t.values())if (i.parentId) Ck(i, t, e, r);
        else {
            const s = Ow(i, r.nodeOrigin), o = by(i.extent) ? i.extent : r.nodeExtent, a = Cm(s, o, zd(i));
            i.internals.positionAbsolute = a;
        }
    }
    function P3(t, e, n, r) {
        const i = Tk(_fe, r), s = new Map(e), o = i?.elevateNodesOnSelect ? 1e3 : 0;
        e.clear(), n.clear();
        for (const a of t){
            let l = s.get(a.id);
            if (i.checkEquality && a === l?.internals.userNode) e.set(a.id, l);
            else {
                const c = Ow(a, i.nodeOrigin), u = by(a.extent) ? a.extent : i.nodeExtent, f = Cm(c, u, zd(a));
                l = {
                    ...i.defaults,
                    ...a,
                    measured: {
                        width: a.measured?.width,
                        height: a.measured?.height
                    },
                    internals: {
                        positionAbsolute: f,
                        handleBounds: a.measured ? l?.internals.handleBounds : void 0,
                        z: EV(a, o),
                        userNode: a
                    }
                }, e.set(a.id, l);
            }
            a.parentId && Ck(l, e, n, r);
        }
    }
    function Efe(t, e) {
        if (!t.parentId) return;
        const n = e.get(t.parentId);
        n ? n.set(t.id, t) : e.set(t.parentId, new Map([
            [
                t.id,
                t
            ]
        ]));
    }
    function Ck(t, e, n, r) {
        const { elevateNodesOnSelect: i, nodeOrigin: s, nodeExtent: o } = Tk(Mk, r), a = t.parentId, l = e.get(a);
        if (!l) {
            console.warn(`Parent node ${a} not found. Please make sure that parent nodes are in front of their child nodes in the nodes array.`);
            return;
        }
        Efe(t, n);
        const c = i ? 1e3 : 0, { x: u, y: f, z: h } = Mfe(t, l, s, o, c), { positionAbsolute: m } = t.internals, v = u !== m.x || f !== m.y;
        (v || h !== t.internals.z) && e.set(t.id, {
            ...t,
            internals: {
                ...t.internals,
                positionAbsolute: v ? {
                    x: u,
                    y: f
                } : m,
                z: h
            }
        });
    }
    function EV(t, e) {
        return (mc(t.zIndex) ? t.zIndex : 0) + (t.selected ? e : 0);
    }
    function Mfe(t, e, n, r, i) {
        const { x: s, y: o } = e.internals.positionAbsolute, a = zd(t), l = Ow(t, n), c = by(t.extent) ? Cm(l, t.extent, a) : l;
        let u = Cm({
            x: s + c.x,
            y: o + c.y
        }, r, a);
        t.extent === "parent" && (u = hV(u, a, e));
        const f = EV(t, i), h = e.internals.z ?? 0;
        return {
            x: u.x,
            y: u.y,
            z: h > f ? h : f
        };
    }
    function Rk(t, e, n, r = [
        0,
        0
    ]) {
        const i = [], s = new Map;
        for (const o of t){
            const a = e.get(o.parentId);
            if (!a) continue;
            const l = s.get(o.parentId)?.expandedRect ?? xy(a), c = mV(l, o.rect);
            s.set(o.parentId, {
                expandedRect: c,
                parent: a
            });
        }
        return s.size > 0 && s.forEach(({ expandedRect: o, parent: a }, l)=>{
            const c = a.internals.positionAbsolute, u = zd(a), f = a.origin ?? r, h = o.x < c.x ? Math.round(Math.abs(c.x - o.x)) : 0, m = o.y < c.y ? Math.round(Math.abs(c.y - o.y)) : 0, v = Math.max(u.width, Math.round(o.width)), _ = Math.max(u.height, Math.round(o.height)), w = (v - u.width) * f[0], b = (_ - u.height) * f[1];
            (h > 0 || m > 0 || w || b) && (i.push({
                id: l,
                type: "position",
                position: {
                    x: a.position.x - h + w,
                    y: a.position.y - m + b
                }
            }), n.get(l)?.forEach((M)=>{
                t.some((E)=>E.id === M.id) || i.push({
                    id: M.id,
                    type: "position",
                    position: {
                        x: M.position.x + h,
                        y: M.position.y + m
                    }
                });
            })), (u.width < o.width || u.height < o.height || h || m) && i.push({
                id: l,
                type: "dimensions",
                setAttributes: !0,
                dimensions: {
                    width: v + (h ? f[0] * h - w : 0),
                    height: _ + (m ? f[1] * m - b : 0)
                }
            });
        }), i;
    }
    function Tfe(t, e, n, r, i, s) {
        const o = r?.querySelector(".xyflow__viewport");
        let a = !1;
        if (!o) return {
            changes: [],
            updatedInternals: a
        };
        const l = [], c = window.getComputedStyle(o), { m22: u } = new window.DOMMatrixReadOnly(c.transform), f = [];
        for (const h of t.values()){
            const m = e.get(h.id);
            if (!m) continue;
            if (m.hidden) {
                e.set(m.id, {
                    ...m,
                    internals: {
                        ...m.internals,
                        handleBounds: void 0
                    }
                }), a = !0;
                continue;
            }
            const v = o2(h.nodeElement), _ = m.measured.width !== v.width || m.measured.height !== v.height;
            if (!!(v.width && v.height && (_ || !m.internals.handleBounds || h.force))) {
                const b = h.nodeElement.getBoundingClientRect(), M = by(m.extent) ? m.extent : s;
                let { positionAbsolute: E } = m.internals;
                m.parentId && m.extent === "parent" ? E = hV(E, v, e.get(m.parentId)) : M && (E = Cm(E, M, v));
                const T = {
                    ...m,
                    measured: v,
                    internals: {
                        ...m.internals,
                        positionAbsolute: E,
                        handleBounds: {
                            source: l6("source", h.nodeElement, b, u, m.id),
                            target: l6("target", h.nodeElement, b, u, m.id)
                        }
                    }
                };
                e.set(m.id, T), m.parentId && Ck(T, e, n, {
                    nodeOrigin: i
                }), a = !0, _ && (l.push({
                    id: m.id,
                    type: "dimensions",
                    dimensions: v
                }), m.expandParent && m.parentId && f.push({
                    id: m.id,
                    parentId: m.parentId,
                    rect: xy(T, i)
                }));
            }
        }
        if (f.length > 0) {
            const h = Rk(f, e, n, i);
            l.push(...h);
        }
        return {
            changes: l,
            updatedInternals: a
        };
    }
    async function Cfe({ delta: t, panZoom: e, transform: n, translateExtent: r, width: i, height: s }) {
        if (!e || !t.x && !t.y) return Promise.resolve(!1);
        const o = await e.setViewportConstrained({
            x: n[0] + t.x,
            y: n[1] + t.y,
            zoom: n[2]
        }, [
            [
                0,
                0
            ],
            [
                i,
                s
            ]
        ], r), a = !!o && (o.x !== n[0] || o.y !== n[1] || o.k !== n[2]);
        return Promise.resolve(a);
    }
    function m6(t, e, n, r, i, s) {
        let o = i;
        const a = r.get(o) || new Map;
        r.set(o, a.set(n, e)), o = `${i}-${t}`;
        const l = r.get(o) || new Map;
        if (r.set(o, l.set(n, e)), s) {
            o = `${i}-${t}-${s}`;
            const c = r.get(o) || new Map;
            r.set(o, c.set(n, e));
        }
    }
    function MV(t, e, n) {
        t.clear(), e.clear();
        for (const r of n){
            const { source: i, target: s, sourceHandle: o = null, targetHandle: a = null } = r, l = {
                edgeId: r.id,
                source: i,
                target: s,
                sourceHandle: o,
                targetHandle: a
            }, c = `${i}-${o}--${s}-${a}`, u = `${s}-${a}--${i}-${o}`;
            m6("source", l, u, t, i, o), m6("target", l, c, t, s, a), e.set(r.id, r);
        }
    }
    function TV(t, e) {
        if (!t.parentId) return !1;
        const n = e.get(t.parentId);
        return n ? n.selected ? !0 : TV(n, e) : !1;
    }
    function g6(t, e, n) {
        let r = t;
        do {
            if (r?.matches?.(e)) return !0;
            if (r === n) return !1;
            r = r?.parentElement;
        }while (r);
        return !1;
    }
    function Rfe(t, e, n, r) {
        const i = new Map;
        for (const [s, o] of t)if ((o.selected || o.id === r) && (!o.parentId || !TV(o, t)) && (o.draggable || e && typeof o.draggable > "u")) {
            const a = t.get(s);
            a && i.set(s, {
                id: s,
                position: a.position || {
                    x: 0,
                    y: 0
                },
                distance: {
                    x: n.x - a.internals.positionAbsolute.x,
                    y: n.y - a.internals.positionAbsolute.y
                },
                extent: a.extent,
                parentId: a.parentId,
                origin: a.origin,
                expandParent: a.expandParent,
                internals: {
                    positionAbsolute: a.internals.positionAbsolute || {
                        x: 0,
                        y: 0
                    }
                },
                measured: {
                    width: a.measured.width ?? 0,
                    height: a.measured.height ?? 0
                }
            });
        }
        return i;
    }
    function lA({ nodeId: t, dragItems: e, nodeLookup: n, dragging: r = !0 }) {
        const i = [];
        for (const [o, a] of e){
            const l = n.get(o)?.internals.userNode;
            l && i.push({
                ...l,
                position: a.position,
                dragging: r
            });
        }
        if (!t) return [
            i[0],
            i
        ];
        const s = n.get(t)?.internals.userNode;
        return [
            s ? {
                ...s,
                position: e.get(t)?.position || s.position,
                dragging: r
            } : i[0],
            i
        ];
    }
    function Ife({ onNodeMouseDown: t, getStoreItems: e, onDragStart: n, onDrag: r, onDragStop: i }) {
        let s = {
            x: null,
            y: null
        }, o = 0, a = new Map, l = !1, c = {
            x: 0,
            y: 0
        }, u = null, f = !1, h = null, m = !1;
        function v({ noDragClassName: w, handleSelector: b, domNode: M, isSelectable: E, nodeId: T, nodeClickDistance: P = 0 }) {
            h = Ga(M);
            function A({ x: N, y: k }, U) {
                const { nodeLookup: B, nodeExtent: j, snapGrid: K, snapToGrid: q, nodeOrigin: ee, onNodeDrag: W, onSelectionDrag: Z, onError: $, updateNodePositions: H } = e();
                s = {
                    x: N,
                    y: k
                };
                let se = !1, le = {
                    x: 0,
                    y: 0,
                    x2: 0,
                    y2: 0
                };
                if (a.size > 1 && j) {
                    const ne = Dw(a);
                    le = R3(ne);
                }
                for (const [ne, ue] of a){
                    if (!B.has(ne)) continue;
                    let ge = {
                        x: N - ue.distance.x,
                        y: k - ue.distance.y
                    };
                    q && (ge = s2(ge, K));
                    let ye = [
                        [
                            j[0][0],
                            j[0][1]
                        ],
                        [
                            j[1][0],
                            j[1][1]
                        ]
                    ];
                    if (a.size > 1 && j && !ue.extent) {
                        const { positionAbsolute: Re } = ue.internals, Fe = Re.x - le.x + j[0][0], be = Re.x + ue.measured.width - le.x2 + j[1][0], Me = Re.y - le.y + j[0][1], oe = Re.y + ue.measured.height - le.y2 + j[1][1];
                        ye = [
                            [
                                Fe,
                                Me
                            ],
                            [
                                be,
                                oe
                            ]
                        ];
                    }
                    const { position: _e, positionAbsolute: Te } = fV({
                        nodeId: ne,
                        nextPosition: ge,
                        nodeLookup: B,
                        nodeExtent: ye,
                        nodeOrigin: ee,
                        onError: $
                    });
                    se = se || ue.position.x !== _e.x || ue.position.y !== _e.y, ue.position = _e, ue.internals.positionAbsolute = Te;
                }
                if (se && (H(a, !0), U && (r || W || !T && Z))) {
                    const [ne, ue] = lA({
                        nodeId: T,
                        dragItems: a,
                        nodeLookup: B
                    });
                    r?.(U, a, ne, ue), W?.(U, ne, ue), T || Z?.(U, ue);
                }
            }
            async function O() {
                if (!u) return;
                const { transform: N, panBy: k, autoPanSpeed: U, autoPanOnNodeDrag: B } = e();
                if (!B) {
                    l = !1, cancelAnimationFrame(o);
                    return;
                }
                const [j, K] = pV(c, u, U);
                (j !== 0 || K !== 0) && (s.x = (s.x ?? 0) - j / N[2], s.y = (s.y ?? 0) - K / N[2], await k({
                    x: j,
                    y: K
                }) && A(s, null)), o = requestAnimationFrame(O);
            }
            function D(N) {
                const { nodeLookup: k, multiSelectionActive: U, nodesDraggable: B, transform: j, snapGrid: K, snapToGrid: q, selectNodesOnDrag: ee, onNodeDragStart: W, onSelectionDragStart: Z, unselectNodesAndEdges: $ } = e();
                f = !0, (!ee || !E) && !U && T && (k.get(T)?.selected || $()), E && ee && T && t?.(T);
                const H = Kx(N.sourceEvent, {
                    transform: j,
                    snapGrid: K,
                    snapToGrid: q,
                    containerBounds: u
                });
                if (s = H, a = Rfe(k, B, H, T), a.size > 0 && (n || W || !T && Z)) {
                    const [se, le] = lA({
                        nodeId: T,
                        dragItems: a,
                        nodeLookup: k
                    });
                    n?.(N.sourceEvent, a, se, le), W?.(N.sourceEvent, se, le), T || Z?.(N.sourceEvent, le);
                }
            }
            const R = H7().clickDistance(P).on("start", (N)=>{
                const { domNode: k, nodeDragThreshold: U, transform: B, snapGrid: j, snapToGrid: K } = e();
                u = k?.getBoundingClientRect() || null, m = !1, U === 0 && D(N), s = Kx(N.sourceEvent, {
                    transform: B,
                    snapGrid: j,
                    snapToGrid: K,
                    containerBounds: u
                }), c = Md(N.sourceEvent, u);
            }).on("drag", (N)=>{
                const { autoPanOnNodeDrag: k, transform: U, snapGrid: B, snapToGrid: j, nodeDragThreshold: K, nodeLookup: q } = e(), ee = Kx(N.sourceEvent, {
                    transform: U,
                    snapGrid: B,
                    snapToGrid: j,
                    containerBounds: u
                });
                if ((N.sourceEvent.type === "touchmove" && N.sourceEvent.touches.length > 1 || T && !q.has(T)) && (m = !0), !m) {
                    if (!l && k && f && (l = !0, O()), !f) {
                        const W = ee.xSnapped - (s.x ?? 0), Z = ee.ySnapped - (s.y ?? 0);
                        Math.sqrt(W * W + Z * Z) > K && D(N);
                    }
                    (s.x !== ee.xSnapped || s.y !== ee.ySnapped) && a && f && (c = Md(N.sourceEvent, u), A(ee, N.sourceEvent));
                }
            }).on("end", (N)=>{
                if (!(!f || m) && (l = !1, f = !1, cancelAnimationFrame(o), a.size > 0)) {
                    const { nodeLookup: k, updateNodePositions: U, onNodeDragStop: B, onSelectionDragStop: j } = e();
                    if (U(a, !1), i || B || !T && j) {
                        const [K, q] = lA({
                            nodeId: T,
                            dragItems: a,
                            nodeLookup: k,
                            dragging: !1
                        });
                        i?.(N.sourceEvent, a, K, q), B?.(N.sourceEvent, K, q), T || j?.(N.sourceEvent, q);
                    }
                }
            }).filter((N)=>{
                const k = N.target;
                return !N.button && (!w || !g6(k, `.${w}`, M)) && (!b || g6(k, b, M));
            });
            h.call(R);
        }
        function _() {
            h?.on(".drag", null);
        }
        return {
            update: v,
            destroy: _
        };
    }
    function Afe(t, e, n) {
        const r = [], i = {
            x: t.x - n,
            y: t.y - n,
            width: n * 2,
            height: n * 2
        };
        for (const s of e.values())Vb(i, xy(s)) > 0 && r.push(s);
        return r;
    }
    const Nfe = 250;
    function Pfe(t, e, n, r) {
        let i = [], s = 1 / 0;
        const o = Afe(t, n, e + Nfe);
        for (const a of o){
            const l = [
                ...a.internals.handleBounds?.source ?? [],
                ...a.internals.handleBounds?.target ?? []
            ];
            for (const c of l){
                if (r.nodeId === c.nodeId && r.type === c.type && r.id === c.id) continue;
                const { x: u, y: f } = Wb(a, c, c.position, !0), h = Math.sqrt(Math.pow(u - t.x, 2) + Math.pow(f - t.y, 2));
                h > e || (h < s ? (i = [
                    {
                        ...c,
                        x: u,
                        y: f
                    }
                ], s = h) : h === s && i.push({
                    ...c,
                    x: u,
                    y: f
                }));
            }
        }
        if (!i.length) return null;
        if (i.length > 1) {
            const a = r.type === "source" ? "target" : "source";
            return i.find((l)=>l.type === a) ?? i[0];
        }
        return i[0];
    }
    function CV(t, e, n, r, i, s = !1) {
        const o = r.get(t);
        if (!o) return null;
        const a = i === "strict" ? o.internals.handleBounds?.[e] : [
            ...o.internals.handleBounds?.source ?? [],
            ...o.internals.handleBounds?.target ?? []
        ], l = (n ? a?.find((c)=>c.id === n) : a?.[0]) ?? null;
        return l && s ? {
            ...l,
            ...Wb(o, l, l.position, !0)
        } : l;
    }
    function RV(t, e) {
        return t || (e?.classList.contains("target") ? "target" : e?.classList.contains("source") ? "source" : null);
    }
    function kfe(t, e) {
        let n = null;
        return e ? n = !0 : t && !e && (n = !1), n;
    }
    const IV = ()=>!0;
    function Ofe(t, { connectionMode: e, connectionRadius: n, handleId: r, nodeId: i, edgeUpdaterType: s, isTarget: o, domNode: a, nodeLookup: l, lib: c, autoPanOnConnect: u, flowId: f, panBy: h, cancelConnection: m, onConnectStart: v, onConnect: _, onConnectEnd: w, isValidConnection: b = IV, onReconnectEnd: M, updateConnection: E, getTransform: T, getFromHandle: P, autoPanSpeed: A }) {
        const O = xV(t.target);
        let D = 0, R;
        const { x: N, y: k } = Md(t), U = O?.elementFromPoint(N, k), B = RV(s, U), j = a?.getBoundingClientRect();
        if (!j || !B) return;
        const K = CV(i, B, r, l, e);
        if (!K) return;
        let q = Md(t, j), ee = !1, W = null, Z = !1, $ = null;
        function H() {
            if (!u || !j) return;
            const [Te, Re] = pV(q, j, A);
            h({
                x: Te,
                y: Re
            }), D = requestAnimationFrame(H);
        }
        const se = {
            ...K,
            nodeId: i,
            type: B,
            position: K.position
        }, le = l.get(i), ue = {
            inProgress: !0,
            isValid: null,
            from: Wb(le, se, nn.Left, !0),
            fromHandle: se,
            fromPosition: se.position,
            fromNode: le,
            to: q,
            toHandle: null,
            toPosition: i6[se.position],
            toNode: null
        };
        E(ue);
        let ge = ue;
        v?.(t, {
            nodeId: i,
            handleId: r,
            handleType: B
        });
        function ye(Te) {
            if (!P() || !se) {
                _e(Te);
                return;
            }
            const Re = T();
            q = Md(Te, j), R = Pfe(Lw(q, Re, !1, [
                1,
                1
            ]), n, l, se), ee || (H(), ee = !0);
            const Fe = AV(Te, {
                handle: R,
                connectionMode: e,
                fromNodeId: i,
                fromHandleId: r,
                fromType: o ? "target" : "source",
                isValidConnection: b,
                doc: O,
                lib: c,
                flowId: f,
                nodeLookup: l
            });
            $ = Fe.handleDomNode, W = Fe.connection, Z = kfe(!!R, Fe.isValid);
            const be = {
                ...ge,
                isValid: Z,
                to: R && Z ? gV({
                    x: R.x,
                    y: R.y
                }, Re) : q,
                toHandle: Fe.toHandle,
                toPosition: Z && Fe.toHandle ? Fe.toHandle.position : i6[se.position],
                toNode: Fe.toHandle ? l.get(Fe.toHandle.nodeId) : null
            };
            Z && R && ge.toHandle && be.toHandle && ge.toHandle.type === be.toHandle.type && ge.toHandle.nodeId === be.toHandle.nodeId && ge.toHandle.id === be.toHandle.id && ge.to.x === be.to.x && ge.to.y === be.to.y || (E(be), ge = be);
        }
        function _e(Te) {
            (R || $) && W && Z && _?.(W);
            const { inProgress: Re, ...Fe } = ge, be = {
                ...Fe,
                toPosition: ge.toHandle ? ge.toPosition : null
            };
            w?.(Te, be), s && M?.(Te, be), m(), cancelAnimationFrame(D), ee = !1, Z = !1, W = null, $ = null, O.removeEventListener("mousemove", ye), O.removeEventListener("mouseup", _e), O.removeEventListener("touchmove", ye), O.removeEventListener("touchend", _e);
        }
        O.addEventListener("mousemove", ye), O.addEventListener("mouseup", _e), O.addEventListener("touchmove", ye), O.addEventListener("touchend", _e);
    }
    function AV(t, { handle: e, connectionMode: n, fromNodeId: r, fromHandleId: i, fromType: s, doc: o, lib: a, flowId: l, isValidConnection: c = IV, nodeLookup: u }) {
        const f = s === "target", h = e ? o.querySelector(`.${a}-flow__handle[data-id="${l}-${e?.nodeId}-${e?.id}-${e?.type}"]`) : null, { x: m, y: v } = Md(t), _ = o.elementFromPoint(m, v), w = _?.classList.contains(`${a}-flow__handle`) ? _ : h, b = {
            handleDomNode: w,
            isValid: !1,
            connection: null,
            toHandle: null
        };
        if (w) {
            const M = RV(void 0, w), E = w.getAttribute("data-nodeid"), T = w.getAttribute("data-handleid"), P = w.classList.contains("connectable"), A = w.classList.contains("connectableend");
            if (!E || !M) return b;
            const O = {
                source: f ? E : r,
                sourceHandle: f ? T : i,
                target: f ? r : E,
                targetHandle: f ? i : T
            };
            b.connection = O;
            const R = P && A && (n === yy.Strict ? f && M === "source" || !f && M === "target" : E !== r || T !== i);
            b.isValid = R && c(O), b.toHandle = CV(E, M, T, u, n, !1);
        }
        return b;
    }
    const k3 = {
        onPointerDown: Ofe,
        isValid: AV
    };
    function Dfe({ domNode: t, panZoom: e, getTransform: n, getViewScale: r }) {
        const i = Ga(t);
        function s({ translateExtent: a, width: l, height: c, zoomStep: u = 10, pannable: f = !0, zoomable: h = !0, inversePan: m = !1 }) {
            const v = (E)=>{
                const T = n();
                if (E.sourceEvent.type !== "wheel" || !e) return;
                const P = -E.sourceEvent.deltaY * (E.sourceEvent.deltaMode === 1 ? .05 : E.sourceEvent.deltaMode ? 1 : .002) * u, A = T[2] * Math.pow(2, P);
                e.scaleTo(A);
            };
            let _ = [
                0,
                0
            ];
            const w = (E)=>{
                (E.sourceEvent.type === "mousedown" || E.sourceEvent.type === "touchstart") && (_ = [
                    E.sourceEvent.clientX ?? E.sourceEvent.touches[0].clientX,
                    E.sourceEvent.clientY ?? E.sourceEvent.touches[0].clientY
                ]);
            }, b = (E)=>{
                const T = n();
                if (E.sourceEvent.type !== "mousemove" && E.sourceEvent.type !== "touchmove" || !e) return;
                const P = [
                    E.sourceEvent.clientX ?? E.sourceEvent.touches[0].clientX,
                    E.sourceEvent.clientY ?? E.sourceEvent.touches[0].clientY
                ], A = [
                    P[0] - _[0],
                    P[1] - _[1]
                ];
                _ = P;
                const O = r() * Math.max(T[2], Math.log(T[2])) * (m ? -1 : 1), D = {
                    x: T[0] - A[0] * O,
                    y: T[1] - A[1] * O
                }, R = [
                    [
                        0,
                        0
                    ],
                    [
                        l,
                        c
                    ]
                ];
                e.setViewportConstrained({
                    x: D.x,
                    y: D.y,
                    zoom: T[2]
                }, R, a);
            }, M = oV().on("start", w).on("zoom", f ? b : null).on("zoom.wheel", h ? v : null);
            i.call(M, {});
        }
        function o() {
            i.on("zoom", null);
        }
        return {
            update: s,
            destroy: o,
            pointer: ac
        };
    }
    const Lfe = (t, e)=>t.x !== e.x || t.y !== e.y || t.zoom !== e.k, a2 = (t)=>({
            x: t.x,
            y: t.y,
            zoom: t.k
        }), cA = ({ x: t, y: e, zoom: n })=>n2.translate(t, e).scale(n), P0 = (t, e)=>t.target.closest(`.${e}`), NV = (t, e)=>e === 2 && Array.isArray(t) && t.includes(2), uA = (t, e = 0, n = ()=>{})=>{
        const r = typeof e == "number" && e > 0;
        return r || n(), r ? t.transition().duration(e).on("end", n) : t;
    }, PV = (t)=>{
        const e = t.ctrlKey && SM() ? 10 : 1;
        return -t.deltaY * (t.deltaMode === 1 ? .05 : t.deltaMode ? 1 : .002) * e;
    };
    function Ffe({ zoomPanValues: t, noWheelClassName: e, d3Selection: n, d3Zoom: r, panOnScrollMode: i, panOnScrollSpeed: s, zoomOnPinch: o, onPanZoomStart: a, onPanZoom: l, onPanZoomEnd: c }) {
        return (u)=>{
            if (P0(u, e)) return !1;
            u.preventDefault(), u.stopImmediatePropagation();
            const f = n.property("__zoom").k || 1;
            if (u.ctrlKey && o) {
                const w = ac(u), b = PV(u), M = f * Math.pow(2, b);
                r.scaleTo(n, M, w, u);
                return;
            }
            const h = u.deltaMode === 1 ? 20 : 1;
            let m = i === cm.Vertical ? 0 : u.deltaX * h, v = i === cm.Horizontal ? 0 : u.deltaY * h;
            !SM() && u.shiftKey && i !== cm.Vertical && (m = u.deltaY * h, v = 0), r.translateBy(n, -(m / f) * s, -(v / f) * s, {
                internal: !0
            });
            const _ = a2(n.property("__zoom"));
            clearTimeout(t.panScrollTimeout), t.isPanScrolling || (t.isPanScrolling = !0, a?.(u, _)), t.isPanScrolling && (l?.(u, _), t.panScrollTimeout = setTimeout(()=>{
                c?.(u, _), t.isPanScrolling = !1;
            }, 150));
        };
    }
    function jfe({ noWheelClassName: t, preventScrolling: e, d3ZoomHandler: n }) {
        return function(r, i) {
            if (!e && r.type === "wheel" && !r.ctrlKey || P0(r, t)) return null;
            r.preventDefault(), n.call(this, r, i);
        };
    }
    function Bfe({ zoomPanValues: t, onDraggingChange: e, onPanZoomStart: n }) {
        return (r)=>{
            if (r.sourceEvent?.internal) return;
            const i = a2(r.transform);
            t.mouseButton = r.sourceEvent?.button || 0, t.isZoomingOrPanning = !0, t.prevViewport = i, r.sourceEvent?.type === "mousedown" && e(!0), n && n?.(r.sourceEvent, i);
        };
    }
    function Ufe({ zoomPanValues: t, panOnDrag: e, onPaneContextMenu: n, onTransformChange: r, onPanZoom: i }) {
        return (s)=>{
            t.usedRightMouseButton = !!(n && NV(e, t.mouseButton ?? 0)), s.sourceEvent?.sync || r([
                s.transform.x,
                s.transform.y,
                s.transform.k
            ]), i && !s.sourceEvent?.internal && i?.(s.sourceEvent, a2(s.transform));
        };
    }
    function zfe({ zoomPanValues: t, panOnDrag: e, panOnScroll: n, onDraggingChange: r, onPanZoomEnd: i, onPaneContextMenu: s }) {
        return (o)=>{
            if (!o.sourceEvent?.internal && (t.isZoomingOrPanning = !1, s && NV(e, t.mouseButton ?? 0) && !t.usedRightMouseButton && o.sourceEvent && s(o.sourceEvent), t.usedRightMouseButton = !1, r(!1), i && Lfe(t.prevViewport, o.transform))) {
                const a = a2(o.transform);
                t.prevViewport = a, clearTimeout(t.timerId), t.timerId = setTimeout(()=>{
                    i?.(o.sourceEvent, a);
                }, n ? 150 : 0);
            }
        };
    }
    function Vfe({ zoomActivationKeyPressed: t, zoomOnScroll: e, zoomOnPinch: n, panOnDrag: r, panOnScroll: i, zoomOnDoubleClick: s, userSelectionActive: o, noWheelClassName: a, noPanClassName: l, lib: c }) {
        return (u)=>{
            const f = t || e, h = n && u.ctrlKey;
            if (u.button === 1 && u.type === "mousedown" && (P0(u, `${c}-flow__node`) || P0(u, `${c}-flow__edge`))) return !0;
            if (!r && !f && !i && !s && !n || o || P0(u, a) && u.type === "wheel" || P0(u, l) && (u.type !== "wheel" || i && u.type === "wheel" && !t) || !n && u.ctrlKey && u.type === "wheel") return !1;
            if (!n && u.type === "touchstart" && u.touches?.length > 1) return u.preventDefault(), !1;
            if (!f && !i && !h && u.type === "wheel" || !r && (u.type === "mousedown" || u.type === "touchstart") || Array.isArray(r) && !r.includes(u.button) && u.type === "mousedown") return !1;
            const m = Array.isArray(r) && r.includes(u.button) || !u.button || u.button <= 1;
            return (!u.ctrlKey || u.type === "wheel") && m;
        };
    }
    function Wfe({ domNode: t, minZoom: e, maxZoom: n, paneClickDistance: r, translateExtent: i, viewport: s, onPanZoom: o, onPanZoomStart: a, onPanZoomEnd: l, onDraggingChange: c }) {
        const u = {
            isZoomingOrPanning: !1,
            usedRightMouseButton: !1,
            prevViewport: {
                x: 0,
                y: 0,
                zoom: 0
            },
            mouseButton: 0,
            timerId: void 0,
            panScrollTimeout: void 0,
            isPanScrolling: !1
        }, f = t.getBoundingClientRect(), h = oV().clickDistance(!mc(r) || r < 0 ? 0 : r).scaleExtent([
            e,
            n
        ]).translateExtent(i), m = Ga(t).call(h);
        E({
            x: s.x,
            y: s.y,
            zoom: vy(s.zoom, e, n)
        }, [
            [
                0,
                0
            ],
            [
                f.width,
                f.height
            ]
        ], i);
        const v = m.on("wheel.zoom"), _ = m.on("dblclick.zoom");
        h.wheelDelta(PV);
        function w(U, B) {
            return m ? new Promise((j)=>{
                h?.transform(uA(m, B?.duration, ()=>j(!0)), U);
            }) : Promise.resolve(!1);
        }
        function b({ noWheelClassName: U, noPanClassName: B, onPaneContextMenu: j, userSelectionActive: K, panOnScroll: q, panOnDrag: ee, panOnScrollMode: W, panOnScrollSpeed: Z, preventScrolling: $, zoomOnPinch: H, zoomOnScroll: se, zoomOnDoubleClick: le, zoomActivationKeyPressed: ne, lib: ue, onTransformChange: ge }) {
            K && !u.isZoomingOrPanning && M();
            const _e = q && !ne && !K ? Ffe({
                zoomPanValues: u,
                noWheelClassName: U,
                d3Selection: m,
                d3Zoom: h,
                panOnScrollMode: W,
                panOnScrollSpeed: Z,
                zoomOnPinch: H,
                onPanZoomStart: a,
                onPanZoom: o,
                onPanZoomEnd: l
            }) : jfe({
                noWheelClassName: U,
                preventScrolling: $,
                d3ZoomHandler: v
            });
            if (m.on("wheel.zoom", _e, {
                passive: !1
            }), !K) {
                const Re = Bfe({
                    zoomPanValues: u,
                    onDraggingChange: c,
                    onPanZoomStart: a
                });
                h.on("start", Re);
                const Fe = Ufe({
                    zoomPanValues: u,
                    panOnDrag: ee,
                    onPaneContextMenu: !!j,
                    onPanZoom: o,
                    onTransformChange: ge
                });
                h.on("zoom", Fe);
                const be = zfe({
                    zoomPanValues: u,
                    panOnDrag: ee,
                    panOnScroll: q,
                    onPaneContextMenu: j,
                    onPanZoomEnd: l,
                    onDraggingChange: c
                });
                h.on("end", be);
            }
            const Te = Vfe({
                zoomActivationKeyPressed: ne,
                panOnDrag: ee,
                zoomOnScroll: se,
                panOnScroll: q,
                zoomOnDoubleClick: le,
                zoomOnPinch: H,
                userSelectionActive: K,
                noPanClassName: B,
                noWheelClassName: U,
                lib: ue
            });
            h.filter(Te), le ? m.on("dblclick.zoom", _) : m.on("dblclick.zoom", null);
        }
        function M() {
            h.on("zoom", null);
        }
        async function E(U, B, j) {
            const K = cA(U), q = h?.constrain()(K, B, j);
            return q && await w(q), new Promise((ee)=>ee(q));
        }
        async function T(U, B) {
            const j = cA(U);
            return await w(j, B), new Promise((K)=>K(j));
        }
        function P(U) {
            if (m) {
                const B = cA(U), j = m.property("__zoom");
                (j.k !== U.zoom || j.x !== U.x || j.y !== U.y) && h?.transform(m, B, null, {
                    sync: !0
                });
            }
        }
        function A() {
            const U = m ? sV(m.node()) : {
                x: 0,
                y: 0,
                k: 1
            };
            return {
                x: U.x,
                y: U.y,
                zoom: U.k
            };
        }
        function O(U, B) {
            return m ? new Promise((j)=>{
                h?.scaleTo(uA(m, B?.duration, ()=>j(!0)), U);
            }) : Promise.resolve(!1);
        }
        function D(U, B) {
            return m ? new Promise((j)=>{
                h?.scaleBy(uA(m, B?.duration, ()=>j(!0)), U);
            }) : Promise.resolve(!1);
        }
        function R(U) {
            h?.scaleExtent(U);
        }
        function N(U) {
            h?.translateExtent(U);
        }
        function k(U) {
            const B = !mc(U) || U < 0 ? 0 : U;
            h?.clickDistance(B);
        }
        return {
            update: b,
            destroy: M,
            setViewport: T,
            setViewportConstrained: E,
            getViewport: A,
            scaleTo: O,
            scaleBy: D,
            setScaleExtent: R,
            setTranslateExtent: N,
            syncViewport: P,
            setClickDistance: k
        };
    }
    var Yx;
    (function(t) {
        t.Line = "line", t.Handle = "handle";
    })(Yx || (Yx = {}));
    function qfe({ width: t, prevWidth: e, height: n, prevHeight: r, affectsX: i, affectsY: s }) {
        const o = t - e, a = n - r, l = [
            o > 0 ? 1 : o < 0 ? -1 : 0,
            a > 0 ? 1 : a < 0 ? -1 : 0
        ];
        return o && i && (l[0] = l[0] * -1), a && s && (l[1] = l[1] * -1), l;
    }
    function Hfe(t) {
        const e = t.includes("right") || t.includes("left"), n = t.includes("bottom") || t.includes("top"), r = t.includes("left"), i = t.includes("top");
        return {
            isHorizontal: e,
            isVertical: n,
            affectsX: r,
            affectsY: i
        };
    }
    function Af(t, e) {
        return Math.max(0, e - t);
    }
    function Nf(t, e) {
        return Math.max(0, t - e);
    }
    function S1(t, e, n) {
        return Math.max(0, e - t, t - n);
    }
    function y6(t, e) {
        return t ? !e : e;
    }
    function $fe(t, e, n, r, i, s, o, a) {
        let { affectsX: l, affectsY: c } = e;
        const { isHorizontal: u, isVertical: f } = e, h = u && f, { xSnapped: m, ySnapped: v } = n, { minWidth: _, maxWidth: w, minHeight: b, maxHeight: M } = r, { x: E, y: T, width: P, height: A, aspectRatio: O } = t;
        let D = Math.floor(u ? m - t.pointerX : 0), R = Math.floor(f ? v - t.pointerY : 0);
        const N = P + (l ? -D : D), k = A + (c ? -R : R), U = -s[0] * P, B = -s[1] * A;
        let j = S1(N, _, w), K = S1(k, b, M);
        if (o) {
            let W = 0, Z = 0;
            l && D < 0 ? W = Af(E + D + U, o[0][0]) : !l && D > 0 && (W = Nf(E + N + U, o[1][0])), c && R < 0 ? Z = Af(T + R + B, o[0][1]) : !c && R > 0 && (Z = Nf(T + k + B, o[1][1])), j = Math.max(j, W), K = Math.max(K, Z);
        }
        if (a) {
            let W = 0, Z = 0;
            l && D > 0 ? W = Nf(E + D, a[0][0]) : !l && D < 0 && (W = Af(E + N, a[1][0])), c && R > 0 ? Z = Nf(T + R, a[0][1]) : !c && R < 0 && (Z = Af(T + k, a[1][1])), j = Math.max(j, W), K = Math.max(K, Z);
        }
        if (i) {
            if (u) {
                const W = S1(N / O, b, M) * O;
                if (j = Math.max(j, W), o) {
                    let Z = 0;
                    !l && !c || l && !c && h ? Z = Nf(T + B + N / O, o[1][1]) * O : Z = Af(T + B + (l ? D : -D) / O, o[0][1]) * O, j = Math.max(j, Z);
                }
                if (a) {
                    let Z = 0;
                    !l && !c || l && !c && h ? Z = Af(T + N / O, a[1][1]) * O : Z = Nf(T + (l ? D : -D) / O, a[0][1]) * O, j = Math.max(j, Z);
                }
            }
            if (f) {
                const W = S1(k * O, _, w) / O;
                if (K = Math.max(K, W), o) {
                    let Z = 0;
                    !l && !c || c && !l && h ? Z = Nf(E + k * O + U, o[1][0]) / O : Z = Af(E + (c ? R : -R) * O + U, o[0][0]) / O, K = Math.max(K, Z);
                }
                if (a) {
                    let Z = 0;
                    !l && !c || c && !l && h ? Z = Af(E + k * O, a[1][0]) / O : Z = Nf(E + (c ? R : -R) * O, a[0][0]) / O, K = Math.max(K, Z);
                }
            }
        }
        R = R + (R < 0 ? K : -K), D = D + (D < 0 ? j : -j), i && (h ? N > k * O ? R = (y6(l, c) ? -D : D) / O : D = (y6(l, c) ? -R : R) * O : u ? (R = D / O, c = l) : (D = R * O, l = c));
        const q = l ? E + D : E, ee = c ? T + R : T;
        return {
            width: P + (l ? -D : D),
            height: A + (c ? -R : R),
            x: s[0] * D * (l ? -1 : 1) + q,
            y: s[1] * R * (c ? -1 : 1) + ee
        };
    }
    const kV = {
        width: 0,
        height: 0,
        x: 0,
        y: 0
    }, Gfe = {
        ...kV,
        pointerX: 0,
        pointerY: 0,
        aspectRatio: 1
    };
    function Xfe(t) {
        return [
            [
                0,
                0
            ],
            [
                t.measured.width,
                t.measured.height
            ]
        ];
    }
    function Kfe(t, e, n) {
        const r = e.position.x + t.position.x, i = e.position.y + t.position.y, s = t.measured.width ?? 0, o = t.measured.height ?? 0, a = n[0] * s, l = n[1] * o;
        return [
            [
                r - a,
                i - l
            ],
            [
                r + s - a,
                i + o - l
            ]
        ];
    }
    function Yfe({ domNode: t, nodeId: e, getStoreItems: n, onChange: r, onEnd: i }) {
        const s = Ga(t);
        function o({ controlPosition: l, boundaries: c, keepAspectRatio: u, onResizeStart: f, onResize: h, onResizeEnd: m, shouldResize: v }) {
            let _ = {
                ...kV
            }, w = {
                ...Gfe
            };
            const b = Hfe(l);
            let M, E = null, T = [], P, A, O;
            const D = H7().on("start", (R)=>{
                const { nodeLookup: N, transform: k, snapGrid: U, snapToGrid: B, nodeOrigin: j, paneDomNode: K } = n();
                if (M = N.get(e), !M) return;
                E = K?.getBoundingClientRect() ?? null;
                const { xSnapped: q, ySnapped: ee } = Kx(R.sourceEvent, {
                    transform: k,
                    snapGrid: U,
                    snapToGrid: B,
                    containerBounds: E
                });
                _ = {
                    width: M.measured.width ?? 0,
                    height: M.measured.height ?? 0,
                    x: M.position.x ?? 0,
                    y: M.position.y ?? 0
                }, w = {
                    ..._,
                    pointerX: q,
                    pointerY: ee,
                    aspectRatio: _.width / _.height
                }, P = void 0, M.parentId && (M.extent === "parent" || M.expandParent) && (P = N.get(M.parentId), A = P && M.extent === "parent" ? Xfe(P) : void 0), T = [], O = void 0;
                for (const [W, Z] of N)if (Z.parentId === e && (T.push({
                    id: W,
                    position: {
                        ...Z.position
                    },
                    extent: Z.extent
                }), Z.extent === "parent" || Z.expandParent)) {
                    const $ = Kfe(Z, M, Z.origin ?? j);
                    O ? O = [
                        [
                            Math.min($[0][0], O[0][0]),
                            Math.min($[0][1], O[0][1])
                        ],
                        [
                            Math.max($[1][0], O[1][0]),
                            Math.max($[1][1], O[1][1])
                        ]
                    ] : O = $;
                }
                f?.(R, {
                    ..._
                });
            }).on("drag", (R)=>{
                const { transform: N, snapGrid: k, snapToGrid: U, nodeOrigin: B } = n(), j = Kx(R.sourceEvent, {
                    transform: N,
                    snapGrid: k,
                    snapToGrid: U,
                    containerBounds: E
                }), K = [];
                if (!M) return;
                const { x: q, y: ee, width: W, height: Z } = _, $ = {}, H = M.origin ?? B, { width: se, height: le, x: ne, y: ue } = $fe(w, b, j, c, u, H, A, O), ge = se !== W, ye = le !== Z, _e = ne !== q && ge, Te = ue !== ee && ye;
                if (!_e && !Te && !ge && !ye) return;
                if ((_e || Te || H[0] === 1 || H[1] === 1) && ($.x = _e ? ne : _.x, $.y = Te ? ue : _.y, _.x = $.x, _.y = $.y, T.length > 0)) {
                    const Me = ne - q, oe = ue - ee;
                    for (const Ye of T)Ye.position = {
                        x: Ye.position.x - Me + H[0] * (se - W),
                        y: Ye.position.y - oe + H[1] * (le - Z)
                    }, K.push(Ye);
                }
                if ((ge || ye) && ($.width = ge ? se : _.width, $.height = ye ? le : _.height, _.width = $.width, _.height = $.height), P && M.expandParent) {
                    const Me = H[0] * ($.width ?? 0);
                    $.x && $.x < Me && (_.x = Me, w.x = w.x - ($.x - Me));
                    const oe = H[1] * ($.height ?? 0);
                    $.y && $.y < oe && (_.y = oe, w.y = w.y - ($.y - oe));
                }
                const Re = qfe({
                    width: _.width,
                    prevWidth: W,
                    height: _.height,
                    prevHeight: Z,
                    affectsX: b.affectsX,
                    affectsY: b.affectsY
                }), Fe = {
                    ..._,
                    direction: Re
                };
                v?.(R, Fe) !== !1 && (h?.(R, Fe), r($, K));
            }).on("end", (R)=>{
                m?.(R, {
                    ..._
                }), i?.();
            });
            s.call(D);
        }
        function a() {
            s.on(".drag", null);
        }
        return {
            update: o,
            destroy: a
        };
    }
    const Zfe = {}, v6 = (t)=>{
        let e;
        const n = new Set, r = (u, f)=>{
            const h = typeof u == "function" ? u(e) : u;
            if (!Object.is(h, e)) {
                const m = e;
                e = f ?? (typeof h != "object" || h === null) ? h : Object.assign({}, e, h), n.forEach((v)=>v(e, m));
            }
        }, i = ()=>e, l = {
            setState: r,
            getState: i,
            getInitialState: ()=>c,
            subscribe: (u)=>(n.add(u), ()=>n.delete(u)),
            destroy: ()=>{
                (Zfe ? "production" : void 0) !== "production" && console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), n.clear();
            }
        }, c = e = t(r, i, l);
        return l;
    }, Jfe = (t)=>t ? v6(t) : v6, { useDebugValue: Qfe } = lr, { useSyncExternalStoreWithSelector: ehe } = tX, the = (t)=>t;
    function OV(t, e = the, n) {
        const r = ehe(t.subscribe, t.getState, t.getServerState || t.getInitialState, e, n);
        return Qfe(r), r;
    }
    const x6 = (t, e)=>{
        const n = Jfe(t), r = (i, s = e)=>OV(n, i, s);
        return Object.assign(r, n), r;
    }, nhe = (t, e)=>t ? x6(t, e) : x6;
    function wi(t, e) {
        if (Object.is(t, e)) return !0;
        if (typeof t != "object" || t === null || typeof e != "object" || e === null) return !1;
        if (t instanceof Map && e instanceof Map) {
            if (t.size !== e.size) return !1;
            for (const [r, i] of t)if (!Object.is(i, e.get(r))) return !1;
            return !0;
        }
        if (t instanceof Set && e instanceof Set) {
            if (t.size !== e.size) return !1;
            for (const r of t)if (!e.has(r)) return !1;
            return !0;
        }
        const n = Object.keys(t);
        if (n.length !== Object.keys(e).length) return !1;
        for (const r of n)if (!Object.prototype.hasOwnProperty.call(e, r) || !Object.is(t[r], e[r])) return !1;
        return !0;
    }
    const l2 = J.createContext(null), rhe = l2.Provider, DV = Ud.error001();
    function sr(t, e) {
        const n = J.useContext(l2);
        if (n === null) throw new Error(DV);
        return OV(n, t, e);
    }
    function si() {
        const t = J.useContext(l2);
        if (t === null) throw new Error(DV);
        return J.useMemo(()=>({
                getState: t.getState,
                setState: t.setState,
                subscribe: t.subscribe
            }), [
            t
        ]);
    }
    const b6 = {
        display: "none"
    }, ihe = {
        position: "absolute",
        width: 1,
        height: 1,
        margin: -1,
        border: 0,
        padding: 0,
        overflow: "hidden",
        clip: "rect(0px, 0px, 0px, 0px)",
        clipPath: "inset(100%)"
    }, LV = "react-flow__node-desc", FV = "react-flow__edge-desc", she = "react-flow__aria-live", ohe = (t)=>t.ariaLiveMessage;
    function ahe({ rfId: t }) {
        const e = sr(ohe);
        return x.jsx("div", {
            id: `${she}-${t}`,
            "aria-live": "assertive",
            "aria-atomic": "true",
            style: ihe,
            children: e
        });
    }
    function lhe({ rfId: t, disableKeyboardA11y: e }) {
        return x.jsxs(x.Fragment, {
            children: [
                x.jsxs("div", {
                    id: `${LV}-${t}`,
                    style: b6,
                    children: [
                        "Press enter or space to select a node.",
                        !e && "You can then use the arrow keys to move the node around.",
                        " Press delete to remove it and escape to cancel.",
                        " "
                    ]
                }),
                x.jsx("div", {
                    id: `${FV}-${t}`,
                    style: b6,
                    children: "Press enter or space to select an edge. You can then press delete to remove it or escape to cancel."
                }),
                !e && x.jsx(ahe, {
                    rfId: t
                })
            ]
        });
    }
    const che = (t)=>t.userSelectionActive ? "none" : "all", c2 = J.forwardRef(({ position: t = "top-left", children: e, className: n, style: r, ...i }, s)=>{
        const o = sr(che), a = `${t}`.split("-");
        return x.jsx("div", {
            className: ts([
                "react-flow__panel",
                n,
                ...a
            ]),
            style: {
                ...r,
                pointerEvents: o
            },
            ref: s,
            ...i,
            children: e
        });
    });
    c2.displayName = "Panel";
    function uhe({ proOptions: t, position: e = "bottom-right" }) {
        return t?.hideAttribution ? null : x.jsx(c2, {
            position: e,
            className: "react-flow__attribution",
            "data-message": "Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev",
            children: x.jsx("a", {
                href: "https://reactflow.dev",
                target: "_blank",
                rel: "noopener noreferrer",
                "aria-label": "React Flow attribution",
                children: "React Flow"
            })
        });
    }
    const dhe = (t)=>{
        const e = [], n = [];
        for (const [, r] of t.nodeLookup)r.selected && e.push(r.internals.userNode);
        for (const [, r] of t.edgeLookup)r.selected && n.push(r);
        return {
            selectedNodes: e,
            selectedEdges: n
        };
    }, E1 = (t)=>t.id;
    function fhe(t, e) {
        return wi(t.selectedNodes.map(E1), e.selectedNodes.map(E1)) && wi(t.selectedEdges.map(E1), e.selectedEdges.map(E1));
    }
    function hhe({ onSelectionChange: t }) {
        const e = si(), { selectedNodes: n, selectedEdges: r } = sr(dhe, fhe);
        return J.useEffect(()=>{
            const i = {
                nodes: n,
                edges: r
            };
            t?.(i), e.getState().onSelectionChangeHandlers.forEach((s)=>s(i));
        }, [
            n,
            r,
            t
        ]), null;
    }
    const phe = (t)=>!!t.onSelectionChangeHandlers;
    function mhe({ onSelectionChange: t }) {
        const e = sr(phe);
        return t || e ? x.jsx(hhe, {
            onSelectionChange: t
        }) : null;
    }
    const jV = [
        0,
        0
    ], ghe = {
        x: 0,
        y: 0,
        zoom: 1
    }, yhe = [
        "nodes",
        "edges",
        "defaultNodes",
        "defaultEdges",
        "onConnect",
        "onConnectStart",
        "onConnectEnd",
        "onClickConnectStart",
        "onClickConnectEnd",
        "nodesDraggable",
        "nodesConnectable",
        "nodesFocusable",
        "edgesFocusable",
        "edgesReconnectable",
        "elevateNodesOnSelect",
        "elevateEdgesOnSelect",
        "minZoom",
        "maxZoom",
        "nodeExtent",
        "onNodesChange",
        "onEdgesChange",
        "elementsSelectable",
        "connectionMode",
        "snapGrid",
        "snapToGrid",
        "translateExtent",
        "connectOnClick",
        "defaultEdgeOptions",
        "fitView",
        "fitViewOptions",
        "onNodesDelete",
        "onEdgesDelete",
        "onDelete",
        "onNodeDrag",
        "onNodeDragStart",
        "onNodeDragStop",
        "onSelectionDrag",
        "onSelectionDragStart",
        "onSelectionDragStop",
        "onMoveStart",
        "onMove",
        "onMoveEnd",
        "noPanClassName",
        "nodeOrigin",
        "autoPanOnConnect",
        "autoPanOnNodeDrag",
        "onError",
        "connectionRadius",
        "isValidConnection",
        "selectNodesOnDrag",
        "nodeDragThreshold",
        "onBeforeDelete",
        "debug",
        "autoPanSpeed",
        "paneClickDistance"
    ], w6 = [
        ...yhe,
        "rfId"
    ], vhe = (t)=>({
            setNodes: t.setNodes,
            setEdges: t.setEdges,
            setMinZoom: t.setMinZoom,
            setMaxZoom: t.setMaxZoom,
            setTranslateExtent: t.setTranslateExtent,
            setNodeExtent: t.setNodeExtent,
            reset: t.reset,
            setDefaultNodesAndEdges: t.setDefaultNodesAndEdges,
            setPaneClickDistance: t.setPaneClickDistance
        }), _6 = {
        translateExtent: Ub,
        nodeOrigin: jV,
        minZoom: .5,
        maxZoom: 2,
        elementsSelectable: !0,
        noPanClassName: "nopan",
        rfId: "1",
        paneClickDistance: 0
    };
    function xhe(t) {
        const { setNodes: e, setEdges: n, setMinZoom: r, setMaxZoom: i, setTranslateExtent: s, setNodeExtent: o, reset: a, setDefaultNodesAndEdges: l, setPaneClickDistance: c } = sr(vhe, wi), u = si();
        J.useEffect(()=>(l(t.defaultNodes, t.defaultEdges), ()=>{
                f.current = _6, a();
            }), []);
        const f = J.useRef(_6);
        return J.useEffect(()=>{
            for (const h of w6){
                const m = t[h], v = f.current[h];
                m !== v && (typeof t[h] > "u" || (h === "nodes" ? e(m) : h === "edges" ? n(m) : h === "minZoom" ? r(m) : h === "maxZoom" ? i(m) : h === "translateExtent" ? s(m) : h === "nodeExtent" ? o(m) : h === "paneClickDistance" ? c(m) : h === "fitView" ? u.setState({
                    fitViewOnInit: m
                }) : h === "fitViewOptions" ? u.setState({
                    fitViewOnInitOptions: m
                }) : u.setState({
                    [h]: m
                })));
            }
            f.current = t;
        }, w6.map((h)=>t[h])), null;
    }
    function S6() {
        return typeof window > "u" || !window.matchMedia ? null : window.matchMedia("(prefers-color-scheme: dark)");
    }
    function bhe(t) {
        const [e, n] = J.useState(t === "system" ? null : t);
        return J.useEffect(()=>{
            if (t !== "system") {
                n(t);
                return;
            }
            const r = S6(), i = ()=>n(r?.matches ? "dark" : "light");
            return i(), r?.addEventListener("change", i), ()=>{
                r?.removeEventListener("change", i);
            };
        }, [
            t
        ]), e !== null ? e : S6()?.matches ? "dark" : "light";
    }
    const E6 = typeof document < "u" ? document : null;
    function qb(t = null, e = {
        target: E6,
        actInsideInputWithModifier: !0
    }) {
        const [n, r] = J.useState(!1), i = J.useRef(!1), s = J.useRef(new Set([])), [o, a] = J.useMemo(()=>{
            if (t !== null) {
                const c = (Array.isArray(t) ? t : [
                    t
                ]).filter((f)=>typeof f == "string").map((f)=>f.replace("+", `
`).replace(`

`, `
+`).split(`
`)), u = c.reduce((f, h)=>f.concat(...h), []);
                return [
                    c,
                    u
                ];
            }
            return [
                [],
                []
            ];
        }, [
            t
        ]);
        return J.useEffect(()=>{
            const l = e?.target || E6;
            if (t !== null) {
                const c = (h)=>{
                    if (i.current = h.ctrlKey || h.metaKey || h.shiftKey, (!i.current || i.current && !e.actInsideInputWithModifier) && I3(h)) return !1;
                    const v = T6(h.code, a);
                    s.current.add(h[v]), M6(o, s.current, !1) && (h.preventDefault(), r(!0));
                }, u = (h)=>{
                    if ((!i.current || i.current && !e.actInsideInputWithModifier) && I3(h)) return !1;
                    const v = T6(h.code, a);
                    M6(o, s.current, !0) ? (r(!1), s.current.clear()) : s.current.delete(h[v]), h.key === "Meta" && s.current.clear(), i.current = !1;
                }, f = ()=>{
                    s.current.clear(), r(!1);
                };
                return l?.addEventListener("keydown", c), l?.addEventListener("keyup", u), window.addEventListener("blur", f), window.addEventListener("contextmenu", f), ()=>{
                    l?.removeEventListener("keydown", c), l?.removeEventListener("keyup", u), window.removeEventListener("blur", f), window.removeEventListener("contextmenu", f);
                };
            }
        }, [
            t,
            r
        ]), n;
    }
    function M6(t, e, n) {
        return t.filter((r)=>n || r.length === e.size).some((r)=>r.every((i)=>e.has(i)));
    }
    function T6(t, e) {
        return e.includes(t) ? "code" : "key";
    }
    const whe = ()=>{
        const t = si();
        return J.useMemo(()=>({
                zoomIn: (e)=>{
                    const { panZoom: n } = t.getState();
                    return n ? n.scaleBy(1.2, {
                        duration: e?.duration
                    }) : Promise.resolve(!1);
                },
                zoomOut: (e)=>{
                    const { panZoom: n } = t.getState();
                    return n ? n.scaleBy(1 / 1.2, {
                        duration: e?.duration
                    }) : Promise.resolve(!1);
                },
                zoomTo: (e, n)=>{
                    const { panZoom: r } = t.getState();
                    return r ? r.scaleTo(e, {
                        duration: n?.duration
                    }) : Promise.resolve(!1);
                },
                getZoom: ()=>t.getState().transform[2],
                setViewport: async (e, n)=>{
                    const { transform: [r, i, s], panZoom: o } = t.getState();
                    return o ? (await o.setViewport({
                        x: e.x ?? r,
                        y: e.y ?? i,
                        zoom: e.zoom ?? s
                    }, {
                        duration: n?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                getViewport: ()=>{
                    const [e, n, r] = t.getState().transform;
                    return {
                        x: e,
                        y: n,
                        zoom: r
                    };
                },
                fitView: (e)=>{
                    const { nodeLookup: n, minZoom: r, maxZoom: i, panZoom: s, domNode: o } = t.getState();
                    if (!s || !o) return Promise.resolve(!1);
                    const a = T3(n, e), { width: l, height: c } = o2(o);
                    return C3({
                        nodes: a,
                        width: l,
                        height: c,
                        minZoom: r,
                        maxZoom: i,
                        panZoom: s
                    }, e);
                },
                setCenter: async (e, n, r)=>{
                    const { width: i, height: s, maxZoom: o, panZoom: a } = t.getState(), l = typeof r?.zoom < "u" ? r.zoom : o, c = i / 2 - e * l, u = s / 2 - n * l;
                    return a ? (await a.setViewport({
                        x: c,
                        y: u,
                        zoom: l
                    }, {
                        duration: r?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                fitBounds: async (e, n)=>{
                    const { width: r, height: i, minZoom: s, maxZoom: o, panZoom: a } = t.getState(), l = Sk(e, r, i, s, o, n?.padding ?? .1);
                    return a ? (await a.setViewport(l, {
                        duration: n?.duration
                    }), Promise.resolve(!0)) : Promise.resolve(!1);
                },
                screenToFlowPosition: (e, n = {})=>{
                    const { transform: r, snapGrid: i, snapToGrid: s, domNode: o } = t.getState();
                    if (!o) return e;
                    const { x: a, y: l } = o.getBoundingClientRect(), c = {
                        x: e.x - a,
                        y: e.y - l
                    }, u = n.snapGrid ?? i, f = n.snapToGrid ?? s;
                    return Lw(c, r, f, u);
                },
                flowToScreenPosition: (e)=>{
                    const { transform: n, domNode: r } = t.getState();
                    if (!r) return e;
                    const { x: i, y: s } = r.getBoundingClientRect(), o = gV(e, n);
                    return {
                        x: o.x + i,
                        y: o.y + s
                    };
                }
            }), []);
    };
    function BV(t, e) {
        const n = [], r = new Map, i = [];
        for (const s of t)if (s.type === "add") {
            i.push(s);
            continue;
        } else if (s.type === "remove" || s.type === "replace") r.set(s.id, [
            s
        ]);
        else {
            const o = r.get(s.id);
            o ? o.push(s) : r.set(s.id, [
                s
            ]);
        }
        for (const s of e){
            const o = r.get(s.id);
            if (!o) {
                n.push(s);
                continue;
            }
            if (o[0].type === "remove") continue;
            if (o[0].type === "replace") {
                n.push({
                    ...o[0].item
                });
                continue;
            }
            const a = {
                ...s
            };
            for (const l of o)_he(l, a);
            n.push(a);
        }
        return i.length && i.forEach((s)=>{
            s.index !== void 0 ? n.splice(s.index, 0, {
                ...s.item
            }) : n.push({
                ...s.item
            });
        }), n;
    }
    function _he(t, e) {
        switch(t.type){
            case "select":
                {
                    e.selected = t.selected;
                    break;
                }
            case "position":
                {
                    typeof t.position < "u" && (e.position = t.position), typeof t.dragging < "u" && (e.dragging = t.dragging);
                    break;
                }
            case "dimensions":
                {
                    typeof t.dimensions < "u" && (e.measured ??= {}, e.measured.width = t.dimensions.width, e.measured.height = t.dimensions.height, t.setAttributes && (e.width = t.dimensions.width, e.height = t.dimensions.height)), typeof t.resizing == "boolean" && (e.resizing = t.resizing);
                    break;
                }
        }
    }
    function She(t, e) {
        return BV(t, e);
    }
    function Ehe(t, e) {
        return BV(t, e);
    }
    function Up(t, e) {
        return {
            id: t,
            type: "select",
            selected: e
        };
    }
    function k0(t, e = new Set, n = !1) {
        const r = [];
        for (const [i, s] of t){
            const o = e.has(i);
            !(s.selected === void 0 && !o) && s.selected !== o && (n && (s.selected = o), r.push(Up(s.id, o)));
        }
        return r;
    }
    function C6({ items: t = [], lookup: e }) {
        const n = [], r = new Map(t.map((i)=>[
                i.id,
                i
            ]));
        for (const [i, s] of t.entries()){
            const o = e.get(s.id), a = o?.internals?.userNode ?? o;
            a !== void 0 && a !== s && n.push({
                id: s.id,
                item: s,
                type: "replace"
            }), a === void 0 && n.push({
                item: s,
                type: "add",
                index: i
            });
        }
        for (const [i] of e)r.get(i) === void 0 && n.push({
            id: i,
            type: "remove"
        });
        return n;
    }
    function R6(t) {
        return {
            id: t.id,
            type: "remove"
        };
    }
    const I6 = (t)=>ofe(t), Mhe = (t)=>uV(t);
    function UV(t) {
        return J.forwardRef(t);
    }
    const The = typeof window < "u" ? J.useLayoutEffect : J.useEffect;
    function A6(t) {
        const [e, n] = J.useState(BigInt(0)), [r] = J.useState(()=>Che(()=>n((i)=>i + BigInt(1))));
        return The(()=>{
            const i = r.get();
            i.length && (t(i), r.reset());
        }, [
            e
        ]), r;
    }
    function Che(t) {
        let e = [];
        return {
            get: ()=>e,
            reset: ()=>{
                e = [];
            },
            push: (n)=>{
                e.push(n), t();
            }
        };
    }
    const zV = J.createContext(null);
    function Rhe({ children: t }) {
        const e = si(), n = J.useCallback((a)=>{
            const { nodes: l = [], setNodes: c, hasDefaultNodes: u, onNodesChange: f, nodeLookup: h } = e.getState();
            let m = l;
            for (const v of a)m = typeof v == "function" ? v(m) : v;
            u ? c(m) : f && f(C6({
                items: m,
                lookup: h
            }));
        }, []), r = A6(n), i = J.useCallback((a)=>{
            const { edges: l = [], setEdges: c, hasDefaultEdges: u, onEdgesChange: f, edgeLookup: h } = e.getState();
            let m = l;
            for (const v of a)m = typeof v == "function" ? v(m) : v;
            u ? c(m) : f && f(C6({
                items: m,
                lookup: h
            }));
        }, []), s = A6(i), o = J.useMemo(()=>({
                nodeQueue: r,
                edgeQueue: s
            }), []);
        return x.jsx(zV.Provider, {
            value: o,
            children: t
        });
    }
    function Ihe() {
        const t = J.useContext(zV);
        if (!t) throw new Error("useBatchContext must be used within a BatchProvider");
        return t;
    }
    const Ahe = (t)=>!!t.panZoom;
    function Fw() {
        const t = whe(), e = si(), n = Ihe(), r = sr(Ahe), i = J.useMemo(()=>{
            const s = (f)=>e.getState().nodeLookup.get(f), o = (f)=>{
                n.nodeQueue.push(f);
            }, a = (f)=>{
                n.edgeQueue.push(f);
            }, l = (f)=>{
                const { nodeLookup: h, nodeOrigin: m } = e.getState(), v = I6(f) ? f : h.get(f.id), _ = v.parentId ? vV(v.position, v.measured, v.parentId, h, m) : v.position, w = {
                    ...v,
                    position: _,
                    width: v.measured?.width ?? v.width,
                    height: v.measured?.height ?? v.height
                };
                return xy(w);
            }, c = (f, h, m = {
                replace: !1
            })=>{
                o((v)=>v.map((_)=>{
                        if (_.id === f) {
                            const w = typeof h == "function" ? h(_) : h;
                            return m.replace && I6(w) ? w : {
                                ..._,
                                ...w
                            };
                        }
                        return _;
                    }));
            }, u = (f, h, m = {
                replace: !1
            })=>{
                a((v)=>v.map((_)=>{
                        if (_.id === f) {
                            const w = typeof h == "function" ? h(_) : h;
                            return m.replace && Mhe(w) ? w : {
                                ..._,
                                ...w
                            };
                        }
                        return _;
                    }));
            };
            return {
                getNodes: ()=>e.getState().nodes.map((f)=>({
                            ...f
                        })),
                getNode: (f)=>s(f)?.internals.userNode,
                getInternalNode: s,
                getEdges: ()=>{
                    const { edges: f = [] } = e.getState();
                    return f.map((h)=>({
                            ...h
                        }));
                },
                getEdge: (f)=>e.getState().edgeLookup.get(f),
                setNodes: o,
                setEdges: a,
                addNodes: (f)=>{
                    const h = Array.isArray(f) ? f : [
                        f
                    ];
                    n.nodeQueue.push((m)=>[
                            ...m,
                            ...h
                        ]);
                },
                addEdges: (f)=>{
                    const h = Array.isArray(f) ? f : [
                        f
                    ];
                    n.edgeQueue.push((m)=>[
                            ...m,
                            ...h
                        ]);
                },
                toObject: ()=>{
                    const { nodes: f = [], edges: h = [], transform: m } = e.getState(), [v, _, w] = m;
                    return {
                        nodes: f.map((b)=>({
                                ...b
                            })),
                        edges: h.map((b)=>({
                                ...b
                            })),
                        viewport: {
                            x: v,
                            y: _,
                            zoom: w
                        }
                    };
                },
                deleteElements: async ({ nodes: f = [], edges: h = [] })=>{
                    const { nodes: m, edges: v, onNodesDelete: _, onEdgesDelete: w, triggerNodeChanges: b, triggerEdgeChanges: M, onDelete: E, onBeforeDelete: T } = e.getState(), { nodes: P, edges: A } = await cfe({
                        nodesToRemove: f,
                        edgesToRemove: h,
                        nodes: m,
                        edges: v,
                        onBeforeDelete: T
                    }), O = A.length > 0, D = P.length > 0;
                    if (O) {
                        const R = A.map(R6);
                        w?.(A), M(R);
                    }
                    if (D) {
                        const R = P.map(R6);
                        _?.(P), b(R);
                    }
                    return (D || O) && E?.({
                        nodes: P,
                        edges: A
                    }), {
                        deletedNodes: P,
                        deletedEdges: A
                    };
                },
                getIntersectingNodes: (f, h = !0, m)=>{
                    const v = o6(f), _ = v ? f : l(f), w = m !== void 0;
                    return _ ? (m || e.getState().nodes).filter((b)=>{
                        const M = e.getState().nodeLookup.get(b.id);
                        if (M && !v && (b.id === f.id || !M.internals.positionAbsolute)) return !1;
                        const E = xy(w ? b : M), T = Vb(E, _);
                        return h && T > 0 || T >= _.width * _.height;
                    }) : [];
                },
                isNodeIntersecting: (f, h, m = !0)=>{
                    const _ = o6(f) ? f : l(f);
                    if (!_) return !1;
                    const w = Vb(_, h);
                    return m && w > 0 || w >= _.width * _.height;
                },
                updateNode: c,
                updateNodeData: (f, h, m = {
                    replace: !1
                })=>{
                    c(f, (v)=>{
                        const _ = typeof h == "function" ? h(v) : h;
                        return m.replace ? {
                            ...v,
                            data: _
                        } : {
                            ...v,
                            data: {
                                ...v.data,
                                ..._
                            }
                        };
                    }, m);
                },
                updateEdge: u,
                updateEdgeData: (f, h, m = {
                    replace: !1
                })=>{
                    u(f, (v)=>{
                        const _ = typeof h == "function" ? h(v) : h;
                        return m.replace ? {
                            ...v,
                            data: _
                        } : {
                            ...v,
                            data: {
                                ...v.data,
                                ..._
                            }
                        };
                    }, m);
                },
                getNodesBounds: (f)=>{
                    const { nodeLookup: h, nodeOrigin: m } = e.getState();
                    return afe(f, {
                        nodeLookup: h,
                        nodeOrigin: m
                    });
                },
                getHandleConnections: ({ type: f, id: h, nodeId: m })=>Array.from(e.getState().connectionLookup.get(`${m}-${f}${h ? `-${h}` : ""}`)?.values() ?? []),
                getNodeConnections: ({ type: f, handleId: h, nodeId: m })=>Array.from(e.getState().connectionLookup.get(`${m}${f ? h ? `-${f}-${h}` : `-${f}` : ""}`)?.values() ?? [])
            };
        }, []);
        return J.useMemo(()=>({
                ...i,
                ...t,
                viewportInitialized: r
            }), [
            r
        ]);
    }
    const N6 = (t)=>t.selected, Nhe = {
        actInsideInputWithModifier: !1
    }, Phe = typeof window < "u" ? window : void 0;
    function khe({ deleteKeyCode: t, multiSelectionKeyCode: e }) {
        const n = si(), { deleteElements: r } = Fw(), i = qb(t, Nhe), s = qb(e, {
            target: Phe
        });
        J.useEffect(()=>{
            if (i) {
                const { edges: o, nodes: a } = n.getState();
                r({
                    nodes: a.filter(N6),
                    edges: o.filter(N6)
                }), n.setState({
                    nodesSelectionActive: !1
                });
            }
        }, [
            i
        ]), J.useEffect(()=>{
            n.setState({
                multiSelectionActive: s
            });
        }, [
            s
        ]);
    }
    function Ohe(t) {
        const e = si();
        J.useEffect(()=>{
            const n = ()=>{
                if (!t.current) return !1;
                const r = o2(t.current);
                (r.height === 0 || r.width === 0) && e.getState().onError?.("004", Ud.error004()), e.setState({
                    width: r.width || 500,
                    height: r.height || 500
                });
            };
            if (t.current) {
                n(), window.addEventListener("resize", n);
                const r = new ResizeObserver(()=>n());
                return r.observe(t.current), ()=>{
                    window.removeEventListener("resize", n), r && t.current && r.unobserve(t.current);
                };
            }
        }, []);
    }
    const u2 = {
        position: "absolute",
        width: "100%",
        height: "100%",
        top: 0,
        left: 0
    }, Dhe = (t)=>({
            userSelectionActive: t.userSelectionActive,
            lib: t.lib
        });
    function Lhe({ onPaneContextMenu: t, zoomOnScroll: e = !0, zoomOnPinch: n = !0, panOnScroll: r = !1, panOnScrollSpeed: i = .5, panOnScrollMode: s = cm.Free, zoomOnDoubleClick: o = !0, panOnDrag: a = !0, defaultViewport: l, translateExtent: c, minZoom: u, maxZoom: f, zoomActivationKeyCode: h, preventScrolling: m = !0, children: v, noWheelClassName: _, noPanClassName: w, onViewportChange: b, isControlledViewport: M, paneClickDistance: E }) {
        const T = si(), P = J.useRef(null), { userSelectionActive: A, lib: O } = sr(Dhe, wi), D = qb(h), R = J.useRef();
        Ohe(P);
        const N = J.useCallback((k)=>{
            b?.({
                x: k[0],
                y: k[1],
                zoom: k[2]
            }), M || T.setState({
                transform: k
            });
        }, [
            b,
            M
        ]);
        return J.useEffect(()=>{
            if (P.current) {
                R.current = Wfe({
                    domNode: P.current,
                    minZoom: u,
                    maxZoom: f,
                    translateExtent: c,
                    viewport: l,
                    paneClickDistance: E,
                    onDraggingChange: (j)=>T.setState({
                            paneDragging: j
                        }),
                    onPanZoomStart: (j, K)=>{
                        const { onViewportChangeStart: q, onMoveStart: ee } = T.getState();
                        ee?.(j, K), q?.(K);
                    },
                    onPanZoom: (j, K)=>{
                        const { onViewportChange: q, onMove: ee } = T.getState();
                        ee?.(j, K), q?.(K);
                    },
                    onPanZoomEnd: (j, K)=>{
                        const { onViewportChangeEnd: q, onMoveEnd: ee } = T.getState();
                        ee?.(j, K), q?.(K);
                    }
                });
                const { x: k, y: U, zoom: B } = R.current.getViewport();
                return T.setState({
                    panZoom: R.current,
                    transform: [
                        k,
                        U,
                        B
                    ],
                    domNode: P.current.closest(".react-flow")
                }), ()=>{
                    R.current?.destroy();
                };
            }
        }, []), J.useEffect(()=>{
            R.current?.update({
                onPaneContextMenu: t,
                zoomOnScroll: e,
                zoomOnPinch: n,
                panOnScroll: r,
                panOnScrollSpeed: i,
                panOnScrollMode: s,
                zoomOnDoubleClick: o,
                panOnDrag: a,
                zoomActivationKeyPressed: D,
                preventScrolling: m,
                noPanClassName: w,
                userSelectionActive: A,
                noWheelClassName: _,
                lib: O,
                onTransformChange: N
            });
        }, [
            t,
            e,
            n,
            r,
            i,
            s,
            o,
            a,
            D,
            m,
            w,
            A,
            _,
            O,
            N
        ]), x.jsx("div", {
            className: "react-flow__renderer",
            ref: P,
            style: u2,
            children: v
        });
    }
    const Fhe = (t)=>({
            userSelectionActive: t.userSelectionActive,
            userSelectionRect: t.userSelectionRect
        });
    function jhe() {
        const { userSelectionActive: t, userSelectionRect: e } = sr(Fhe, wi);
        return t && e ? x.jsx("div", {
            className: "react-flow__selection react-flow__container",
            style: {
                width: e.width,
                height: e.height,
                transform: `translate(${e.x}px, ${e.y}px)`
            }
        }) : null;
    }
    const dA = (t, e)=>(n)=>{
            n.target === e.current && t?.(n);
        }, Bhe = (t)=>({
            userSelectionActive: t.userSelectionActive,
            elementsSelectable: t.elementsSelectable,
            dragging: t.paneDragging
        });
    function Uhe({ isSelecting: t, selectionKeyPressed: e, selectionMode: n = zb.Full, panOnDrag: r, selectionOnDrag: i, onSelectionStart: s, onSelectionEnd: o, onPaneClick: a, onPaneContextMenu: l, onPaneScroll: c, onPaneMouseEnter: u, onPaneMouseMove: f, onPaneMouseLeave: h, children: m }) {
        const v = si(), { userSelectionActive: _, elementsSelectable: w, dragging: b } = sr(Bhe, wi), M = w && (t || _), E = J.useRef(null), T = J.useRef(), P = J.useRef(new Set), A = J.useRef(new Set), O = J.useRef(!1), D = J.useRef(!1), R = (q)=>{
            if (O.current) {
                O.current = !1;
                return;
            }
            a?.(q), v.getState().resetSelectedElements(), v.setState({
                nodesSelectionActive: !1
            });
        }, N = (q)=>{
            if (Array.isArray(r) && r?.includes(2)) {
                q.preventDefault();
                return;
            }
            l?.(q);
        }, k = c ? (q)=>c(q) : void 0, U = (q)=>{
            const { resetSelectedElements: ee, domNode: W } = v.getState();
            if (T.current = W?.getBoundingClientRect(), !w || !t || q.button !== 0 || q.target !== E.current || !T.current) return;
            q.target?.setPointerCapture?.(q.pointerId), D.current = !0, O.current = !1;
            const { x: Z, y: $ } = Md(q.nativeEvent, T.current);
            ee(), v.setState({
                userSelectionRect: {
                    width: 0,
                    height: 0,
                    startX: Z,
                    startY: $,
                    x: Z,
                    y: $
                }
            }), s?.(q);
        }, B = (q)=>{
            const { userSelectionRect: ee, transform: W, nodeLookup: Z, edgeLookup: $, connectionLookup: H, triggerNodeChanges: se, triggerEdgeChanges: le, defaultEdgeOptions: ne } = v.getState();
            if (!T.current || !ee) return;
            O.current = !0;
            const { x: ue, y: ge } = Md(q.nativeEvent, T.current), { startX: ye, startY: _e } = ee, Te = {
                startX: ye,
                startY: _e,
                x: ue < ye ? ue : ye,
                y: ge < _e ? ge : _e,
                width: Math.abs(ue - ye),
                height: Math.abs(ge - _e)
            }, Re = P.current, Fe = A.current;
            P.current = new Set(dV(Z, Te, W, n === zb.Partial, !0).map((Me)=>Me.id)), A.current = new Set;
            const be = ne?.selectable ?? !0;
            for (const Me of P.current){
                const oe = H.get(Me);
                if (oe) for (const { edgeId: Ye } of oe.values()){
                    const Be = $.get(Ye);
                    Be && (Be.selectable ?? be) && A.current.add(Ye);
                }
            }
            if (!a6(Re, P.current)) {
                const Me = k0(Z, P.current, !0);
                se(Me);
            }
            if (!a6(Fe, A.current)) {
                const Me = k0($, A.current);
                le(Me);
            }
            v.setState({
                userSelectionRect: Te,
                userSelectionActive: !0,
                nodesSelectionActive: !1
            });
        }, j = (q)=>{
            if (q.button !== 0 || !D.current) return;
            q.target?.releasePointerCapture?.(q.pointerId);
            const { userSelectionRect: ee } = v.getState();
            !_ && ee && q.target === E.current && R?.(q), v.setState({
                userSelectionActive: !1,
                userSelectionRect: null,
                nodesSelectionActive: P.current.size > 0
            }), o?.(q), (e || i) && (O.current = !1), D.current = !1;
        }, K = r === !0 || Array.isArray(r) && r.includes(0);
        return x.jsxs("div", {
            className: ts([
                "react-flow__pane",
                {
                    draggable: K,
                    dragging: b,
                    selection: t
                }
            ]),
            onClick: M ? void 0 : dA(R, E),
            onContextMenu: dA(N, E),
            onWheel: dA(k, E),
            onPointerEnter: M ? void 0 : u,
            onPointerDown: M ? U : f,
            onPointerMove: M ? B : f,
            onPointerUp: M ? j : void 0,
            onPointerLeave: h,
            ref: E,
            style: u2,
            children: [
                m,
                x.jsx(jhe, {})
            ]
        });
    }
    function O3({ id: t, store: e, unselect: n = !1, nodeRef: r }) {
        const { addSelectedNodes: i, unselectNodesAndEdges: s, multiSelectionActive: o, nodeLookup: a, onError: l } = e.getState(), c = a.get(t);
        if (!c) {
            l?.("012", Ud.error012(t));
            return;
        }
        e.setState({
            nodesSelectionActive: !1
        }), c.selected ? (n || c.selected && o) && (s({
            nodes: [
                c
            ],
            edges: []
        }), requestAnimationFrame(()=>r?.current?.blur())) : i([
            t
        ]);
    }
    function VV({ nodeRef: t, disabled: e = !1, noDragClassName: n, handleSelector: r, nodeId: i, isSelectable: s, nodeClickDistance: o }) {
        const a = si(), [l, c] = J.useState(!1), u = J.useRef();
        return J.useEffect(()=>{
            u.current = Ife({
                getStoreItems: ()=>a.getState(),
                onNodeMouseDown: (f)=>{
                    O3({
                        id: f,
                        store: a,
                        nodeRef: t
                    });
                },
                onDragStart: ()=>{
                    c(!0);
                },
                onDragStop: ()=>{
                    c(!1);
                }
            });
        }, []), J.useEffect(()=>{
            if (e) u.current?.destroy();
            else if (t.current) return u.current?.update({
                noDragClassName: n,
                handleSelector: r,
                domNode: t.current,
                isSelectable: s,
                nodeId: i,
                nodeClickDistance: o
            }), ()=>{
                u.current?.destroy();
            };
        }, [
            n,
            r,
            e,
            s,
            t,
            i
        ]), l;
    }
    const zhe = (t)=>(e)=>e.selected && (e.draggable || t && typeof e.draggable > "u");
    function WV() {
        const t = si();
        return J.useCallback((n)=>{
            const { nodeExtent: r, snapToGrid: i, snapGrid: s, nodesDraggable: o, onError: a, updateNodePositions: l, nodeLookup: c, nodeOrigin: u } = t.getState(), f = new Map, h = zhe(o), m = i ? s[0] : 5, v = i ? s[1] : 5, _ = n.direction.x * m * n.factor, w = n.direction.y * v * n.factor;
            for (const [, b] of c){
                if (!h(b)) continue;
                let M = {
                    x: b.internals.positionAbsolute.x + _,
                    y: b.internals.positionAbsolute.y + w
                };
                i && (M = s2(M, s));
                const { position: E, positionAbsolute: T } = fV({
                    nodeId: b.id,
                    nextPosition: M,
                    nodeLookup: c,
                    nodeExtent: r,
                    nodeOrigin: u,
                    onError: a
                });
                b.position = E, b.internals.positionAbsolute = T, f.set(b.id, b);
            }
            l(f);
        }, []);
    }
    const Ik = J.createContext(null), Vhe = Ik.Provider;
    Ik.Consumer;
    const qV = ()=>J.useContext(Ik), Whe = (t)=>({
            connectOnClick: t.connectOnClick,
            noPanClassName: t.noPanClassName,
            rfId: t.rfId
        }), qhe = (t, e, n)=>(r)=>{
            const { connectionClickStartHandle: i, connectionMode: s, connection: o } = r, { fromHandle: a, toHandle: l, isValid: c } = o, u = l?.nodeId === t && l?.id === e && l?.type === n;
            return {
                connectingFrom: a?.nodeId === t && a?.id === e && a?.type === n,
                connectingTo: u,
                clickConnecting: i?.nodeId === t && i?.id === e && i?.type === n,
                isPossibleEndHandle: s === yy.Strict ? a?.type !== n : t !== a?.nodeId || e !== a?.id,
                connectionInProcess: !!a,
                valid: u && c
            };
        };
    function Hhe({ type: t = "source", position: e = nn.Top, isValidConnection: n, isConnectable: r = !0, isConnectableStart: i = !0, isConnectableEnd: s = !0, id: o, onConnect: a, children: l, className: c, onMouseDown: u, onTouchStart: f, ...h }, m) {
        const v = o || null, _ = t === "target", w = si(), b = qV(), { connectOnClick: M, noPanClassName: E, rfId: T } = sr(Whe, wi), { connectingFrom: P, connectingTo: A, clickConnecting: O, isPossibleEndHandle: D, connectionInProcess: R, valid: N } = sr(qhe(b, v, t), wi);
        b || w.getState().onError?.("010", Ud.error010());
        const k = (j)=>{
            const { defaultEdgeOptions: K, onConnect: q, hasDefaultEdges: ee } = w.getState(), W = {
                ...K,
                ...j
            };
            if (ee) {
                const { edges: Z, setEdges: $ } = w.getState();
                $(gfe(W, Z));
            }
            q?.(W), a?.(W);
        }, U = (j)=>{
            if (!b) return;
            const K = bV(j.nativeEvent);
            if (i && (K && j.button === 0 || !K)) {
                const q = w.getState();
                k3.onPointerDown(j.nativeEvent, {
                    autoPanOnConnect: q.autoPanOnConnect,
                    connectionMode: q.connectionMode,
                    connectionRadius: q.connectionRadius,
                    domNode: q.domNode,
                    nodeLookup: q.nodeLookup,
                    lib: q.lib,
                    isTarget: _,
                    handleId: v,
                    nodeId: b,
                    flowId: q.rfId,
                    panBy: q.panBy,
                    cancelConnection: q.cancelConnection,
                    onConnectStart: q.onConnectStart,
                    onConnectEnd: q.onConnectEnd,
                    updateConnection: q.updateConnection,
                    onConnect: k,
                    isValidConnection: n || q.isValidConnection,
                    getTransform: ()=>w.getState().transform,
                    getFromHandle: ()=>w.getState().connection.fromHandle,
                    autoPanSpeed: q.autoPanSpeed
                });
            }
            K ? u?.(j) : f?.(j);
        }, B = (j)=>{
            const { onClickConnectStart: K, onClickConnectEnd: q, connectionClickStartHandle: ee, connectionMode: W, isValidConnection: Z, lib: $, rfId: H, nodeLookup: se, connection: le } = w.getState();
            if (!b || !ee && !i) return;
            if (!ee) {
                K?.(j.nativeEvent, {
                    nodeId: b,
                    handleId: v,
                    handleType: t
                }), w.setState({
                    connectionClickStartHandle: {
                        nodeId: b,
                        type: t,
                        id: v
                    }
                });
                return;
            }
            const ne = xV(j.target), ue = n || Z, { connection: ge, isValid: ye } = k3.isValid(j.nativeEvent, {
                handle: {
                    nodeId: b,
                    id: v,
                    type: t
                },
                connectionMode: W,
                fromNodeId: ee.nodeId,
                fromHandleId: ee.id || null,
                fromType: ee.type,
                isValidConnection: ue,
                flowId: H,
                doc: ne,
                lib: $,
                nodeLookup: se
            });
            ye && ge && k(ge);
            const _e = structuredClone(le);
            delete _e.inProgress, _e.toPosition = _e.toHandle ? _e.toHandle.position : null, q?.(j, _e), w.setState({
                connectionClickStartHandle: null
            });
        };
        return x.jsx("div", {
            "data-handleid": v,
            "data-nodeid": b,
            "data-handlepos": e,
            "data-id": `${T}-${b}-${v}-${t}`,
            className: ts([
                "react-flow__handle",
                `react-flow__handle-${e}`,
                "nodrag",
                E,
                c,
                {
                    source: !_,
                    target: _,
                    connectable: r,
                    connectablestart: i,
                    connectableend: s,
                    clickconnecting: O,
                    connectingfrom: P,
                    connectingto: A,
                    valid: N,
                    connectionindicator: r && (!R || D) && (R ? s : i)
                }
            ]),
            onMouseDown: U,
            onTouchStart: U,
            onClick: M ? B : void 0,
            ref: m,
            ...h,
            children: l
        });
    }
    const wy = J.memo(UV(Hhe));
    function $he({ data: t, isConnectable: e, sourcePosition: n = nn.Bottom }) {
        return x.jsxs(x.Fragment, {
            children: [
                t?.label,
                x.jsx(wy, {
                    type: "source",
                    position: n,
                    isConnectable: e
                })
            ]
        });
    }
    function Ghe({ data: t, isConnectable: e, targetPosition: n = nn.Top, sourcePosition: r = nn.Bottom }) {
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx(wy, {
                    type: "target",
                    position: n,
                    isConnectable: e
                }),
                t?.label,
                x.jsx(wy, {
                    type: "source",
                    position: r,
                    isConnectable: e
                })
            ]
        });
    }
    function Xhe() {
        return null;
    }
    function Khe({ data: t, isConnectable: e, targetPosition: n = nn.Top }) {
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx(wy, {
                    type: "target",
                    position: n,
                    isConnectable: e
                }),
                t?.label
            ]
        });
    }
    const EM = {
        ArrowUp: {
            x: 0,
            y: -1
        },
        ArrowDown: {
            x: 0,
            y: 1
        },
        ArrowLeft: {
            x: -1,
            y: 0
        },
        ArrowRight: {
            x: 1,
            y: 0
        }
    }, P6 = {
        input: $he,
        default: Ghe,
        output: Khe,
        group: Xhe
    };
    function Yhe(t) {
        return t.internals.handleBounds === void 0 ? {
            width: t.width ?? t.initialWidth ?? t.style?.width,
            height: t.height ?? t.initialHeight ?? t.style?.height
        } : {
            width: t.width ?? t.style?.width,
            height: t.height ?? t.style?.height
        };
    }
    const Zhe = (t)=>{
        const { width: e, height: n, x: r, y: i } = Dw(t.nodeLookup, {
            filter: (s)=>!!s.selected
        });
        return {
            width: mc(e) ? e : null,
            height: mc(n) ? n : null,
            userSelectionActive: t.userSelectionActive,
            transformString: `translate(${t.transform[0]}px,${t.transform[1]}px) scale(${t.transform[2]}) translate(${r}px,${i}px)`
        };
    };
    function Jhe({ onSelectionContextMenu: t, noPanClassName: e, disableKeyboardA11y: n }) {
        const r = si(), { width: i, height: s, transformString: o, userSelectionActive: a } = sr(Zhe, wi), l = WV(), c = J.useRef(null);
        if (J.useEffect(()=>{
            n || c.current?.focus({
                preventScroll: !0
            });
        }, [
            n
        ]), VV({
            nodeRef: c
        }), a || !i || !s) return null;
        const u = t ? (h)=>{
            const m = r.getState().nodes.filter((v)=>v.selected);
            t(h, m);
        } : void 0, f = (h)=>{
            Object.prototype.hasOwnProperty.call(EM, h.key) && (h.preventDefault(), l({
                direction: EM[h.key],
                factor: h.shiftKey ? 4 : 1
            }));
        };
        return x.jsx("div", {
            className: ts([
                "react-flow__nodesselection",
                "react-flow__container",
                e
            ]),
            style: {
                transform: o
            },
            children: x.jsx("div", {
                ref: c,
                className: "react-flow__nodesselection-rect",
                onContextMenu: u,
                tabIndex: n ? void 0 : -1,
                onKeyDown: n ? void 0 : f,
                style: {
                    width: i,
                    height: s
                }
            })
        });
    }
    const k6 = typeof window < "u" ? window : void 0, Qhe = (t)=>({
            nodesSelectionActive: t.nodesSelectionActive,
            userSelectionActive: t.userSelectionActive
        });
    function HV({ children: t, onPaneClick: e, onPaneMouseEnter: n, onPaneMouseMove: r, onPaneMouseLeave: i, onPaneContextMenu: s, onPaneScroll: o, paneClickDistance: a, deleteKeyCode: l, selectionKeyCode: c, selectionOnDrag: u, selectionMode: f, onSelectionStart: h, onSelectionEnd: m, multiSelectionKeyCode: v, panActivationKeyCode: _, zoomActivationKeyCode: w, elementsSelectable: b, zoomOnScroll: M, zoomOnPinch: E, panOnScroll: T, panOnScrollSpeed: P, panOnScrollMode: A, zoomOnDoubleClick: O, panOnDrag: D, defaultViewport: R, translateExtent: N, minZoom: k, maxZoom: U, preventScrolling: B, onSelectionContextMenu: j, noWheelClassName: K, noPanClassName: q, disableKeyboardA11y: ee, onViewportChange: W, isControlledViewport: Z }) {
        const { nodesSelectionActive: $, userSelectionActive: H } = sr(Qhe), se = qb(c, {
            target: k6
        }), le = qb(_, {
            target: k6
        }), ne = le || D, ue = le || T, ge = u && ne !== !0, ye = se || H || ge;
        return khe({
            deleteKeyCode: l,
            multiSelectionKeyCode: v
        }), x.jsx(Lhe, {
            onPaneContextMenu: s,
            elementsSelectable: b,
            zoomOnScroll: M,
            zoomOnPinch: E,
            panOnScroll: ue,
            panOnScrollSpeed: P,
            panOnScrollMode: A,
            zoomOnDoubleClick: O,
            panOnDrag: !se && ne,
            defaultViewport: R,
            translateExtent: N,
            minZoom: k,
            maxZoom: U,
            zoomActivationKeyCode: w,
            preventScrolling: B,
            noWheelClassName: K,
            noPanClassName: q,
            onViewportChange: W,
            isControlledViewport: Z,
            paneClickDistance: a,
            children: x.jsxs(Uhe, {
                onSelectionStart: h,
                onSelectionEnd: m,
                onPaneClick: e,
                onPaneMouseEnter: n,
                onPaneMouseMove: r,
                onPaneMouseLeave: i,
                onPaneContextMenu: s,
                onPaneScroll: o,
                panOnDrag: ne,
                isSelecting: !!ye,
                selectionMode: f,
                selectionKeyPressed: se,
                selectionOnDrag: ge,
                children: [
                    t,
                    $ && x.jsx(Jhe, {
                        onSelectionContextMenu: j,
                        noPanClassName: q,
                        disableKeyboardA11y: ee
                    })
                ]
            })
        });
    }
    HV.displayName = "FlowRenderer";
    const epe = J.memo(HV), tpe = (t)=>(e)=>t ? dV(e.nodeLookup, {
                x: 0,
                y: 0,
                width: e.width,
                height: e.height
            }, e.transform, !0).map((n)=>n.id) : Array.from(e.nodeLookup.keys());
    function npe(t) {
        return sr(J.useCallback(tpe(t), [
            t
        ]), wi);
    }
    const rpe = (t)=>t.updateNodeInternals;
    function ipe() {
        const t = sr(rpe), [e] = J.useState(()=>typeof ResizeObserver > "u" ? null : new ResizeObserver((n)=>{
                const r = new Map;
                n.forEach((i)=>{
                    const s = i.target.getAttribute("data-id");
                    r.set(s, {
                        id: s,
                        nodeElement: i.target,
                        force: !0
                    });
                }), t(r);
            }));
        return J.useEffect(()=>()=>{
                e?.disconnect();
            }, [
            e
        ]), e;
    }
    function spe({ node: t, nodeType: e, hasDimensions: n, resizeObserver: r }) {
        const i = si(), s = J.useRef(null), o = J.useRef(null), a = J.useRef(t.sourcePosition), l = J.useRef(t.targetPosition), c = J.useRef(e), u = n && !!t.internals.handleBounds;
        return J.useEffect(()=>{
            s.current && !t.hidden && (!u || o.current !== s.current) && (o.current && r?.unobserve(o.current), r?.observe(s.current), o.current = s.current);
        }, [
            u,
            t.hidden
        ]), J.useEffect(()=>()=>{
                o.current && (r?.unobserve(o.current), o.current = null);
            }, []), J.useEffect(()=>{
            if (s.current) {
                const f = c.current !== e, h = a.current !== t.sourcePosition, m = l.current !== t.targetPosition;
                (f || h || m) && (c.current = e, a.current = t.sourcePosition, l.current = t.targetPosition, i.getState().updateNodeInternals(new Map([
                    [
                        t.id,
                        {
                            id: t.id,
                            nodeElement: s.current,
                            force: !0
                        }
                    ]
                ])));
            }
        }, [
            t.id,
            e,
            t.sourcePosition,
            t.targetPosition
        ]), s;
    }
    function ope({ id: t, onClick: e, onMouseEnter: n, onMouseMove: r, onMouseLeave: i, onContextMenu: s, onDoubleClick: o, nodesDraggable: a, elementsSelectable: l, nodesConnectable: c, nodesFocusable: u, resizeObserver: f, noDragClassName: h, noPanClassName: m, disableKeyboardA11y: v, rfId: _, nodeTypes: w, nodeClickDistance: b, onError: M }) {
        const { node: E, internals: T, isParent: P } = sr((ye)=>{
            const _e = ye.nodeLookup.get(t), Te = ye.parentLookup.has(t);
            return {
                node: _e,
                internals: _e.internals,
                isParent: Te
            };
        }, wi);
        let A = E.type || "default", O = w?.[A] || P6[A];
        O === void 0 && (M?.("003", Ud.error003(A)), A = "default", O = P6.default);
        const D = !!(E.draggable || a && typeof E.draggable > "u"), R = !!(E.selectable || l && typeof E.selectable > "u"), N = !!(E.connectable || c && typeof E.connectable > "u"), k = !!(E.focusable || u && typeof E.focusable > "u"), U = si(), B = yV(E), j = spe({
            node: E,
            nodeType: A,
            hasDimensions: B,
            resizeObserver: f
        }), K = VV({
            nodeRef: j,
            disabled: E.hidden || !D,
            noDragClassName: h,
            handleSelector: E.dragHandle,
            nodeId: t,
            isSelectable: R,
            nodeClickDistance: b
        }), q = WV();
        if (E.hidden) return null;
        const ee = zd(E), W = Yhe(E), Z = R || D || e || n || r || i, $ = n ? (ye)=>n(ye, {
                ...T.userNode
            }) : void 0, H = r ? (ye)=>r(ye, {
                ...T.userNode
            }) : void 0, se = i ? (ye)=>i(ye, {
                ...T.userNode
            }) : void 0, le = s ? (ye)=>s(ye, {
                ...T.userNode
            }) : void 0, ne = o ? (ye)=>o(ye, {
                ...T.userNode
            }) : void 0, ue = (ye)=>{
            const { selectNodesOnDrag: _e, nodeDragThreshold: Te } = U.getState();
            R && (!_e || !D || Te > 0) && O3({
                id: t,
                store: U,
                nodeRef: j
            }), e && e(ye, {
                ...T.userNode
            });
        }, ge = (ye)=>{
            if (!(I3(ye.nativeEvent) || v)) if (aV.includes(ye.key) && R) {
                const _e = ye.key === "Escape";
                O3({
                    id: t,
                    store: U,
                    unselect: _e,
                    nodeRef: j
                });
            } else D && E.selected && Object.prototype.hasOwnProperty.call(EM, ye.key) && (ye.preventDefault(), U.setState({
                ariaLiveMessage: `Moved selected node ${ye.key.replace("Arrow", "").toLowerCase()}. New position, x: ${~~T.positionAbsolute.x}, y: ${~~T.positionAbsolute.y}`
            }), q({
                direction: EM[ye.key],
                factor: ye.shiftKey ? 4 : 1
            }));
        };
        return x.jsx("div", {
            className: ts([
                "react-flow__node",
                `react-flow__node-${A}`,
                {
                    [m]: D
                },
                E.className,
                {
                    selected: E.selected,
                    selectable: R,
                    parent: P,
                    draggable: D,
                    dragging: K
                }
            ]),
            ref: j,
            style: {
                zIndex: T.z,
                transform: `translate(${T.positionAbsolute.x}px,${T.positionAbsolute.y}px)`,
                pointerEvents: Z ? "all" : "none",
                visibility: B ? "visible" : "hidden",
                ...E.style,
                ...W
            },
            "data-id": t,
            "data-testid": `rf__node-${t}`,
            onMouseEnter: $,
            onMouseMove: H,
            onMouseLeave: se,
            onContextMenu: le,
            onClick: ue,
            onDoubleClick: ne,
            onKeyDown: k ? ge : void 0,
            tabIndex: k ? 0 : void 0,
            role: k ? "button" : void 0,
            "aria-describedby": v ? void 0 : `${LV}-${_}`,
            "aria-label": E.ariaLabel,
            children: x.jsx(Vhe, {
                value: t,
                children: x.jsx(O, {
                    id: t,
                    data: E.data,
                    type: A,
                    positionAbsoluteX: T.positionAbsolute.x,
                    positionAbsoluteY: T.positionAbsolute.y,
                    selected: E.selected ?? !1,
                    selectable: R,
                    draggable: D,
                    deletable: E.deletable ?? !0,
                    isConnectable: N,
                    sourcePosition: E.sourcePosition,
                    targetPosition: E.targetPosition,
                    dragging: K,
                    dragHandle: E.dragHandle,
                    zIndex: T.z,
                    parentId: E.parentId,
                    ...ee
                })
            })
        });
    }
    const ape = (t)=>({
            nodesDraggable: t.nodesDraggable,
            nodesConnectable: t.nodesConnectable,
            nodesFocusable: t.nodesFocusable,
            elementsSelectable: t.elementsSelectable,
            onError: t.onError
        });
    function $V(t) {
        const { nodesDraggable: e, nodesConnectable: n, nodesFocusable: r, elementsSelectable: i, onError: s } = sr(ape, wi), o = npe(t.onlyRenderVisibleElements), a = ipe();
        return x.jsx("div", {
            className: "react-flow__nodes",
            style: u2,
            children: o.map((l)=>x.jsx(ope, {
                    id: l,
                    nodeTypes: t.nodeTypes,
                    nodeExtent: t.nodeExtent,
                    onClick: t.onNodeClick,
                    onMouseEnter: t.onNodeMouseEnter,
                    onMouseMove: t.onNodeMouseMove,
                    onMouseLeave: t.onNodeMouseLeave,
                    onContextMenu: t.onNodeContextMenu,
                    onDoubleClick: t.onNodeDoubleClick,
                    noDragClassName: t.noDragClassName,
                    noPanClassName: t.noPanClassName,
                    rfId: t.rfId,
                    disableKeyboardA11y: t.disableKeyboardA11y,
                    resizeObserver: a,
                    nodesDraggable: e,
                    nodesConnectable: n,
                    nodesFocusable: r,
                    elementsSelectable: i,
                    nodeClickDistance: t.nodeClickDistance,
                    onError: s
                }, l))
        });
    }
    $V.displayName = "NodeRenderer";
    const lpe = J.memo($V);
    function cpe(t) {
        return sr(J.useCallback((n)=>{
            if (!t) return n.edges.map((i)=>i.id);
            const r = [];
            if (n.width && n.height) for (const i of n.edges){
                const s = n.nodeLookup.get(i.source), o = n.nodeLookup.get(i.target);
                s && o && hfe({
                    sourceNode: s,
                    targetNode: o,
                    width: n.width,
                    height: n.height,
                    transform: n.transform
                }) && r.push(i.id);
            }
            return r;
        }, [
            t
        ]), wi);
    }
    const upe = ({ color: t = "none", strokeWidth: e = 1 })=>x.jsx("polyline", {
            style: {
                stroke: t,
                strokeWidth: e
            },
            strokeLinecap: "round",
            strokeLinejoin: "round",
            fill: "none",
            points: "-5,-4 0,0 -5,4"
        }), dpe = ({ color: t = "none", strokeWidth: e = 1 })=>x.jsx("polyline", {
            style: {
                stroke: t,
                fill: t,
                strokeWidth: e
            },
            strokeLinecap: "round",
            strokeLinejoin: "round",
            points: "-5,-4 0,0 -5,4 -5,-4"
        }), O6 = {
        [wM.Arrow]: upe,
        [wM.ArrowClosed]: dpe
    };
    function fpe(t) {
        const e = si();
        return J.useMemo(()=>Object.prototype.hasOwnProperty.call(O6, t) ? O6[t] : (e.getState().onError?.("009", Ud.error009(t)), null), [
            t
        ]);
    }
    const hpe = ({ id: t, type: e, color: n, width: r = 12.5, height: i = 12.5, markerUnits: s = "strokeWidth", strokeWidth: o, orient: a = "auto-start-reverse" })=>{
        const l = fpe(e);
        return l ? x.jsx("marker", {
            className: "react-flow__arrowhead",
            id: t,
            markerWidth: `${r}`,
            markerHeight: `${i}`,
            viewBox: "-10 -10 20 20",
            markerUnits: s,
            orient: a,
            refX: "0",
            refY: "0",
            children: x.jsx(l, {
                color: n,
                strokeWidth: o
            })
        }) : null;
    }, GV = ({ defaultColor: t, rfId: e })=>{
        const n = sr((s)=>s.edges), r = sr((s)=>s.defaultEdgeOptions), i = J.useMemo(()=>wfe(n, {
                id: e,
                defaultColor: t,
                defaultMarkerStart: r?.markerStart,
                defaultMarkerEnd: r?.markerEnd
            }), [
            n,
            r,
            e,
            t
        ]);
        return i.length ? x.jsx("svg", {
            className: "react-flow__marker",
            children: x.jsx("defs", {
                children: i.map((s)=>x.jsx(hpe, {
                        id: s.id,
                        type: s.type,
                        color: s.color,
                        width: s.width,
                        height: s.height,
                        markerUnits: s.markerUnits,
                        strokeWidth: s.strokeWidth,
                        orient: s.orient
                    }, s.id))
            })
        }) : null;
    };
    GV.displayName = "MarkerDefinitions";
    var ppe = J.memo(GV);
    function XV({ x: t, y: e, label: n, labelStyle: r = {}, labelShowBg: i = !0, labelBgStyle: s = {}, labelBgPadding: o = [
        2,
        4
    ], labelBgBorderRadius: a = 2, children: l, className: c, ...u }) {
        const [f, h] = J.useState({
            x: 1,
            y: 0,
            width: 0,
            height: 0
        }), m = ts([
            "react-flow__edge-textwrapper",
            c
        ]), v = J.useRef(null);
        return J.useEffect(()=>{
            if (v.current) {
                const _ = v.current.getBBox();
                h({
                    x: _.x,
                    y: _.y,
                    width: _.width,
                    height: _.height
                });
            }
        }, [
            n
        ]), typeof n > "u" || !n ? null : x.jsxs("g", {
            transform: `translate(${t - f.width / 2} ${e - f.height / 2})`,
            className: m,
            visibility: f.width ? "visible" : "hidden",
            ...u,
            children: [
                i && x.jsx("rect", {
                    width: f.width + 2 * o[0],
                    x: -o[0],
                    y: -o[1],
                    height: f.height + 2 * o[1],
                    className: "react-flow__edge-textbg",
                    style: s,
                    rx: a,
                    ry: a
                }),
                x.jsx("text", {
                    className: "react-flow__edge-text",
                    y: f.height / 2,
                    dy: "0.3em",
                    ref: v,
                    style: r,
                    children: n
                }),
                l
            ]
        });
    }
    XV.displayName = "EdgeText";
    const mpe = J.memo(XV);
    function jw({ path: t, labelX: e, labelY: n, label: r, labelStyle: i, labelShowBg: s, labelBgStyle: o, labelBgPadding: a, labelBgBorderRadius: l, interactionWidth: c = 20, ...u }) {
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx("path", {
                    ...u,
                    d: t,
                    fill: "none",
                    className: ts([
                        "react-flow__edge-path",
                        u.className
                    ])
                }),
                c && x.jsx("path", {
                    d: t,
                    fill: "none",
                    strokeOpacity: 0,
                    strokeWidth: c,
                    className: "react-flow__edge-interaction"
                }),
                r && mc(e) && mc(n) ? x.jsx(mpe, {
                    x: e,
                    y: n,
                    label: r,
                    labelStyle: i,
                    labelShowBg: s,
                    labelBgStyle: o,
                    labelBgPadding: a,
                    labelBgBorderRadius: l
                }) : null
            ]
        });
    }
    function D6({ pos: t, x1: e, y1: n, x2: r, y2: i }) {
        return t === nn.Left || t === nn.Right ? [
            .5 * (e + r),
            n
        ] : [
            e,
            .5 * (n + i)
        ];
    }
    function KV({ sourceX: t, sourceY: e, sourcePosition: n = nn.Bottom, targetX: r, targetY: i, targetPosition: s = nn.Top }) {
        const [o, a] = D6({
            pos: n,
            x1: t,
            y1: e,
            x2: r,
            y2: i
        }), [l, c] = D6({
            pos: s,
            x1: r,
            y1: i,
            x2: t,
            y2: e
        }), [u, f, h, m] = wV({
            sourceX: t,
            sourceY: e,
            targetX: r,
            targetY: i,
            sourceControlX: o,
            sourceControlY: a,
            targetControlX: l,
            targetControlY: c
        });
        return [
            `M${t},${e} C${o},${a} ${l},${c} ${r},${i}`,
            u,
            f,
            h,
            m
        ];
    }
    function YV(t) {
        return J.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, sourcePosition: o = nn.Bottom, targetPosition: a = nn.Top, label: l, labelStyle: c, labelShowBg: u, labelBgStyle: f, labelBgPadding: h, labelBgBorderRadius: m, style: v, markerEnd: _, markerStart: w, interactionWidth: b })=>{
            const [M, E, T] = KV({
                sourceX: n,
                sourceY: r,
                sourcePosition: o,
                targetX: i,
                targetY: s,
                targetPosition: a
            }), P = t.isInternal ? void 0 : e;
            return x.jsx(jw, {
                id: P,
                path: M,
                labelX: E,
                labelY: T,
                label: l,
                labelStyle: c,
                labelShowBg: u,
                labelBgStyle: f,
                labelBgPadding: h,
                labelBgBorderRadius: m,
                style: v,
                markerEnd: _,
                markerStart: w,
                interactionWidth: b
            });
        });
    }
    const gpe = YV({
        isInternal: !1
    }), ZV = YV({
        isInternal: !0
    });
    gpe.displayName = "SimpleBezierEdge";
    ZV.displayName = "SimpleBezierEdgeInternal";
    function JV(t) {
        return J.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, label: o, labelStyle: a, labelShowBg: l, labelBgStyle: c, labelBgPadding: u, labelBgBorderRadius: f, style: h, sourcePosition: m = nn.Bottom, targetPosition: v = nn.Top, markerEnd: _, markerStart: w, pathOptions: b, interactionWidth: M })=>{
            const [E, T, P] = A3({
                sourceX: n,
                sourceY: r,
                sourcePosition: m,
                targetX: i,
                targetY: s,
                targetPosition: v,
                borderRadius: b?.borderRadius,
                offset: b?.offset
            }), A = t.isInternal ? void 0 : e;
            return x.jsx(jw, {
                id: A,
                path: E,
                labelX: T,
                labelY: P,
                label: o,
                labelStyle: a,
                labelShowBg: l,
                labelBgStyle: c,
                labelBgPadding: u,
                labelBgBorderRadius: f,
                style: h,
                markerEnd: _,
                markerStart: w,
                interactionWidth: M
            });
        });
    }
    const QV = JV({
        isInternal: !1
    }), eW = JV({
        isInternal: !0
    });
    QV.displayName = "SmoothStepEdge";
    eW.displayName = "SmoothStepEdgeInternal";
    function tW(t) {
        return J.memo(({ id: e, ...n })=>{
            const r = t.isInternal ? void 0 : e;
            return x.jsx(QV, {
                ...n,
                id: r,
                pathOptions: J.useMemo(()=>({
                        borderRadius: 0,
                        offset: n.pathOptions?.offset
                    }), [
                    n.pathOptions?.offset
                ])
            });
        });
    }
    const ype = tW({
        isInternal: !1
    }), nW = tW({
        isInternal: !0
    });
    ype.displayName = "StepEdge";
    nW.displayName = "StepEdgeInternal";
    function rW(t) {
        return J.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, label: o, labelStyle: a, labelShowBg: l, labelBgStyle: c, labelBgPadding: u, labelBgBorderRadius: f, style: h, markerEnd: m, markerStart: v, interactionWidth: _ })=>{
            const [w, b, M] = SV({
                sourceX: n,
                sourceY: r,
                targetX: i,
                targetY: s
            }), E = t.isInternal ? void 0 : e;
            return x.jsx(jw, {
                id: E,
                path: w,
                labelX: b,
                labelY: M,
                label: o,
                labelStyle: a,
                labelShowBg: l,
                labelBgStyle: c,
                labelBgPadding: u,
                labelBgBorderRadius: f,
                style: h,
                markerEnd: m,
                markerStart: v,
                interactionWidth: _
            });
        });
    }
    const vpe = rW({
        isInternal: !1
    }), iW = rW({
        isInternal: !0
    });
    vpe.displayName = "StraightEdge";
    iW.displayName = "StraightEdgeInternal";
    function sW(t) {
        return J.memo(({ id: e, sourceX: n, sourceY: r, targetX: i, targetY: s, sourcePosition: o = nn.Bottom, targetPosition: a = nn.Top, label: l, labelStyle: c, labelShowBg: u, labelBgStyle: f, labelBgPadding: h, labelBgBorderRadius: m, style: v, markerEnd: _, markerStart: w, pathOptions: b, interactionWidth: M })=>{
            const [E, T, P] = Ek({
                sourceX: n,
                sourceY: r,
                sourcePosition: o,
                targetX: i,
                targetY: s,
                targetPosition: a,
                curvature: b?.curvature
            }), A = t.isInternal ? void 0 : e;
            return x.jsx(jw, {
                id: A,
                path: E,
                labelX: T,
                labelY: P,
                label: l,
                labelStyle: c,
                labelShowBg: u,
                labelBgStyle: f,
                labelBgPadding: h,
                labelBgBorderRadius: m,
                style: v,
                markerEnd: _,
                markerStart: w,
                interactionWidth: M
            });
        });
    }
    const xpe = sW({
        isInternal: !1
    }), oW = sW({
        isInternal: !0
    });
    xpe.displayName = "BezierEdge";
    oW.displayName = "BezierEdgeInternal";
    const L6 = {
        default: oW,
        straight: iW,
        step: nW,
        smoothstep: eW,
        simplebezier: ZV
    }, F6 = {
        sourceX: null,
        sourceY: null,
        targetX: null,
        targetY: null,
        sourcePosition: null,
        targetPosition: null
    }, bpe = (t, e, n)=>n === nn.Left ? t - e : n === nn.Right ? t + e : t, wpe = (t, e, n)=>n === nn.Top ? t - e : n === nn.Bottom ? t + e : t, j6 = "react-flow__edgeupdater";
    function B6({ position: t, centerX: e, centerY: n, radius: r = 10, onMouseDown: i, onMouseEnter: s, onMouseOut: o, type: a }) {
        return x.jsx("circle", {
            onMouseDown: i,
            onMouseEnter: s,
            onMouseOut: o,
            className: ts([
                j6,
                `${j6}-${a}`
            ]),
            cx: bpe(e, r, t),
            cy: wpe(n, r, t),
            r,
            stroke: "transparent",
            fill: "transparent"
        });
    }
    function _pe({ isReconnectable: t, reconnectRadius: e, edge: n, sourceX: r, sourceY: i, targetX: s, targetY: o, sourcePosition: a, targetPosition: l, onReconnect: c, onReconnectStart: u, onReconnectEnd: f, setReconnecting: h, setUpdateHover: m }) {
        const v = si(), _ = (T, P)=>{
            if (T.button !== 0) return;
            const { autoPanOnConnect: A, domNode: O, isValidConnection: D, connectionMode: R, connectionRadius: N, lib: k, onConnectStart: U, onConnectEnd: B, cancelConnection: j, nodeLookup: K, rfId: q, panBy: ee, updateConnection: W } = v.getState(), Z = P.type === "target";
            h(!0), u?.(T, n, P.type);
            const $ = (se, le)=>{
                h(!1), f?.(se, n, P.type, le);
            }, H = (se)=>c?.(n, se);
            k3.onPointerDown(T.nativeEvent, {
                autoPanOnConnect: A,
                connectionMode: R,
                connectionRadius: N,
                domNode: O,
                handleId: P.id,
                nodeId: P.nodeId,
                nodeLookup: K,
                isTarget: Z,
                edgeUpdaterType: P.type,
                lib: k,
                flowId: q,
                cancelConnection: j,
                panBy: ee,
                isValidConnection: D,
                onConnect: H,
                onConnectStart: U,
                onConnectEnd: B,
                onReconnectEnd: $,
                updateConnection: W,
                getTransform: ()=>v.getState().transform,
                getFromHandle: ()=>v.getState().connection.fromHandle
            });
        }, w = (T)=>_(T, {
                nodeId: n.target,
                id: n.targetHandle ?? null,
                type: "target"
            }), b = (T)=>_(T, {
                nodeId: n.source,
                id: n.sourceHandle ?? null,
                type: "source"
            }), M = ()=>m(!0), E = ()=>m(!1);
        return x.jsxs(x.Fragment, {
            children: [
                (t === !0 || t === "source") && x.jsx(B6, {
                    position: a,
                    centerX: r,
                    centerY: i,
                    radius: e,
                    onMouseDown: w,
                    onMouseEnter: M,
                    onMouseOut: E,
                    type: "source"
                }),
                (t === !0 || t === "target") && x.jsx(B6, {
                    position: l,
                    centerX: s,
                    centerY: o,
                    radius: e,
                    onMouseDown: b,
                    onMouseEnter: M,
                    onMouseOut: E,
                    type: "target"
                })
            ]
        });
    }
    function Spe({ id: t, edgesFocusable: e, edgesReconnectable: n, elementsSelectable: r, onClick: i, onDoubleClick: s, onContextMenu: o, onMouseEnter: a, onMouseMove: l, onMouseLeave: c, reconnectRadius: u, onReconnect: f, onReconnectStart: h, onReconnectEnd: m, rfId: v, edgeTypes: _, noPanClassName: w, onError: b, disableKeyboardA11y: M }) {
        let E = sr((be)=>be.edgeLookup.get(t));
        const T = sr((be)=>be.defaultEdgeOptions);
        E = T ? {
            ...T,
            ...E
        } : E;
        let P = E.type || "default", A = _?.[P] || L6[P];
        A === void 0 && (b?.("011", Ud.error011(P)), P = "default", A = L6.default);
        const O = !!(E.focusable || e && typeof E.focusable > "u"), D = typeof f < "u" && (E.reconnectable || n && typeof E.reconnectable > "u"), R = !!(E.selectable || r && typeof E.selectable > "u"), N = J.useRef(null), [k, U] = J.useState(!1), [B, j] = J.useState(!1), K = si(), { zIndex: q, sourceX: ee, sourceY: W, targetX: Z, targetY: $, sourcePosition: H, targetPosition: se } = sr(J.useCallback((be)=>{
            const Me = be.nodeLookup.get(E.source), oe = be.nodeLookup.get(E.target);
            if (!Me || !oe) return {
                zIndex: E.zIndex,
                ...F6
            };
            const Ye = bfe({
                id: t,
                sourceNode: Me,
                targetNode: oe,
                sourceHandle: E.sourceHandle || null,
                targetHandle: E.targetHandle || null,
                connectionMode: be.connectionMode,
                onError: b
            });
            return {
                zIndex: ffe({
                    selected: E.selected,
                    zIndex: E.zIndex,
                    sourceNode: Me,
                    targetNode: oe,
                    elevateOnSelect: be.elevateEdgesOnSelect
                }),
                ...Ye || F6
            };
        }, [
            E.source,
            E.target,
            E.sourceHandle,
            E.targetHandle,
            E.selected,
            E.zIndex
        ]), wi), le = J.useMemo(()=>E.markerStart ? `url('#${N3(E.markerStart, v)}')` : void 0, [
            E.markerStart,
            v
        ]), ne = J.useMemo(()=>E.markerEnd ? `url('#${N3(E.markerEnd, v)}')` : void 0, [
            E.markerEnd,
            v
        ]);
        if (E.hidden || ee === null || W === null || Z === null || $ === null) return null;
        const ue = (be)=>{
            const { addSelectedEdges: Me, unselectNodesAndEdges: oe, multiSelectionActive: Ye } = K.getState();
            R && (K.setState({
                nodesSelectionActive: !1
            }), E.selected && Ye ? (oe({
                nodes: [],
                edges: [
                    E
                ]
            }), N.current?.blur()) : Me([
                t
            ])), i && i(be, E);
        }, ge = s ? (be)=>{
            s(be, {
                ...E
            });
        } : void 0, ye = o ? (be)=>{
            o(be, {
                ...E
            });
        } : void 0, _e = a ? (be)=>{
            a(be, {
                ...E
            });
        } : void 0, Te = l ? (be)=>{
            l(be, {
                ...E
            });
        } : void 0, Re = c ? (be)=>{
            c(be, {
                ...E
            });
        } : void 0, Fe = (be)=>{
            if (!M && aV.includes(be.key) && R) {
                const { unselectNodesAndEdges: Me, addSelectedEdges: oe } = K.getState();
                be.key === "Escape" ? (N.current?.blur(), Me({
                    edges: [
                        E
                    ]
                })) : oe([
                    t
                ]);
            }
        };
        return x.jsx("svg", {
            style: {
                zIndex: q
            },
            children: x.jsxs("g", {
                className: ts([
                    "react-flow__edge",
                    `react-flow__edge-${P}`,
                    E.className,
                    w,
                    {
                        selected: E.selected,
                        animated: E.animated,
                        inactive: !R && !i,
                        updating: k,
                        selectable: R
                    }
                ]),
                onClick: ue,
                onDoubleClick: ge,
                onContextMenu: ye,
                onMouseEnter: _e,
                onMouseMove: Te,
                onMouseLeave: Re,
                onKeyDown: O ? Fe : void 0,
                tabIndex: O ? 0 : void 0,
                role: O ? "button" : "img",
                "data-id": t,
                "data-testid": `rf__edge-${t}`,
                "aria-label": E.ariaLabel === null ? void 0 : E.ariaLabel || `Edge from ${E.source} to ${E.target}`,
                "aria-describedby": O ? `${FV}-${v}` : void 0,
                ref: N,
                children: [
                    !B && x.jsx(A, {
                        id: t,
                        source: E.source,
                        target: E.target,
                        type: E.type,
                        selected: E.selected,
                        animated: E.animated,
                        selectable: R,
                        deletable: E.deletable ?? !0,
                        label: E.label,
                        labelStyle: E.labelStyle,
                        labelShowBg: E.labelShowBg,
                        labelBgStyle: E.labelBgStyle,
                        labelBgPadding: E.labelBgPadding,
                        labelBgBorderRadius: E.labelBgBorderRadius,
                        sourceX: ee,
                        sourceY: W,
                        targetX: Z,
                        targetY: $,
                        sourcePosition: H,
                        targetPosition: se,
                        data: E.data,
                        style: E.style,
                        sourceHandleId: E.sourceHandle,
                        targetHandleId: E.targetHandle,
                        markerStart: le,
                        markerEnd: ne,
                        pathOptions: "pathOptions" in E ? E.pathOptions : void 0,
                        interactionWidth: E.interactionWidth
                    }),
                    D && x.jsx(_pe, {
                        edge: E,
                        isReconnectable: D,
                        reconnectRadius: u,
                        onReconnect: f,
                        onReconnectStart: h,
                        onReconnectEnd: m,
                        sourceX: ee,
                        sourceY: W,
                        targetX: Z,
                        targetY: $,
                        sourcePosition: H,
                        targetPosition: se,
                        setUpdateHover: U,
                        setReconnecting: j
                    })
                ]
            })
        });
    }
    const Epe = (t)=>({
            edgesFocusable: t.edgesFocusable,
            edgesReconnectable: t.edgesReconnectable,
            elementsSelectable: t.elementsSelectable,
            connectionMode: t.connectionMode,
            onError: t.onError
        });
    function aW({ defaultMarkerColor: t, onlyRenderVisibleElements: e, rfId: n, edgeTypes: r, noPanClassName: i, onReconnect: s, onEdgeContextMenu: o, onEdgeMouseEnter: a, onEdgeMouseMove: l, onEdgeMouseLeave: c, onEdgeClick: u, reconnectRadius: f, onEdgeDoubleClick: h, onReconnectStart: m, onReconnectEnd: v, disableKeyboardA11y: _ }) {
        const { edgesFocusable: w, edgesReconnectable: b, elementsSelectable: M, onError: E } = sr(Epe, wi), T = cpe(e);
        return x.jsxs("div", {
            className: "react-flow__edges",
            children: [
                x.jsx(ppe, {
                    defaultColor: t,
                    rfId: n
                }),
                T.map((P)=>x.jsx(Spe, {
                        id: P,
                        edgesFocusable: w,
                        edgesReconnectable: b,
                        elementsSelectable: M,
                        noPanClassName: i,
                        onReconnect: s,
                        onContextMenu: o,
                        onMouseEnter: a,
                        onMouseMove: l,
                        onMouseLeave: c,
                        onClick: u,
                        reconnectRadius: f,
                        onDoubleClick: h,
                        onReconnectStart: m,
                        onReconnectEnd: v,
                        rfId: n,
                        onError: E,
                        edgeTypes: r,
                        disableKeyboardA11y: _
                    }, P))
            ]
        });
    }
    aW.displayName = "EdgeRenderer";
    const Mpe = J.memo(aW), Tpe = (t)=>`translate(${t.transform[0]}px,${t.transform[1]}px) scale(${t.transform[2]})`;
    function Cpe({ children: t }) {
        const e = sr(Tpe);
        return x.jsx("div", {
            className: "react-flow__viewport xyflow__viewport react-flow__container",
            style: {
                transform: e
            },
            children: t
        });
    }
    function Rpe(t) {
        const e = Fw(), n = J.useRef(!1);
        J.useEffect(()=>{
            !n.current && e.viewportInitialized && t && (setTimeout(()=>t(e), 1), n.current = !0);
        }, [
            t,
            e.viewportInitialized
        ]);
    }
    const Ipe = (t)=>t.panZoom?.syncViewport;
    function Ape(t) {
        const e = sr(Ipe), n = si();
        return J.useEffect(()=>{
            t && (e?.(t), n.setState({
                transform: [
                    t.x,
                    t.y,
                    t.zoom
                ]
            }));
        }, [
            t,
            e
        ]), null;
    }
    function Npe(t) {
        return t.connection.inProgress ? {
            ...t.connection,
            to: Lw(t.connection.to, t.transform)
        } : {
            ...t.connection
        };
    }
    function Ppe(t) {
        return Npe;
    }
    function kpe(t) {
        const e = Ppe();
        return sr(e, wi);
    }
    const Ope = (t)=>({
            nodesConnectable: t.nodesConnectable,
            isValid: t.connection.isValid,
            inProgress: t.connection.inProgress,
            width: t.width,
            height: t.height
        });
    function Dpe({ containerStyle: t, style: e, type: n, component: r }) {
        const { nodesConnectable: i, width: s, height: o, isValid: a, inProgress: l } = sr(Ope, wi);
        return !(s && i && l) ? null : x.jsx("svg", {
            style: t,
            width: s,
            height: o,
            className: "react-flow__connectionline react-flow__container",
            children: x.jsx("g", {
                className: ts([
                    "react-flow__connection",
                    cV(a)
                ]),
                children: x.jsx(lW, {
                    style: e,
                    type: n,
                    CustomComponent: r,
                    isValid: a
                })
            })
        });
    }
    const lW = ({ style: t, type: e = Jf.Bezier, CustomComponent: n, isValid: r })=>{
        const { inProgress: i, from: s, fromNode: o, fromHandle: a, fromPosition: l, to: c, toNode: u, toHandle: f, toPosition: h } = kpe();
        if (!i) return;
        if (n) return x.jsx(n, {
            connectionLineType: e,
            connectionLineStyle: t,
            fromNode: o,
            fromHandle: a,
            fromX: s.x,
            fromY: s.y,
            toX: c.x,
            toY: c.y,
            fromPosition: l,
            toPosition: h,
            connectionStatus: cV(r),
            toNode: u,
            toHandle: f
        });
        let m = "";
        const v = {
            sourceX: s.x,
            sourceY: s.y,
            sourcePosition: l,
            targetX: c.x,
            targetY: c.y,
            targetPosition: h
        };
        switch(e){
            case Jf.Bezier:
                [m] = Ek(v);
                break;
            case Jf.SimpleBezier:
                [m] = KV(v);
                break;
            case Jf.Step:
                [m] = A3({
                    ...v,
                    borderRadius: 0
                });
                break;
            case Jf.SmoothStep:
                [m] = A3(v);
                break;
            default:
                [m] = SV(v);
        }
        return x.jsx("path", {
            d: m,
            fill: "none",
            className: "react-flow__connection-path",
            style: t
        });
    };
    lW.displayName = "ConnectionLine";
    const Lpe = {};
    function U6(t = Lpe) {
        J.useRef(t), si(), J.useEffect(()=>{}, [
            t
        ]);
    }
    function Fpe() {
        si(), J.useRef(!1), J.useEffect(()=>{}, []);
    }
    function cW({ nodeTypes: t, edgeTypes: e, onInit: n, onNodeClick: r, onEdgeClick: i, onNodeDoubleClick: s, onEdgeDoubleClick: o, onNodeMouseEnter: a, onNodeMouseMove: l, onNodeMouseLeave: c, onNodeContextMenu: u, onSelectionContextMenu: f, onSelectionStart: h, onSelectionEnd: m, connectionLineType: v, connectionLineStyle: _, connectionLineComponent: w, connectionLineContainerStyle: b, selectionKeyCode: M, selectionOnDrag: E, selectionMode: T, multiSelectionKeyCode: P, panActivationKeyCode: A, zoomActivationKeyCode: O, deleteKeyCode: D, onlyRenderVisibleElements: R, elementsSelectable: N, defaultViewport: k, translateExtent: U, minZoom: B, maxZoom: j, preventScrolling: K, defaultMarkerColor: q, zoomOnScroll: ee, zoomOnPinch: W, panOnScroll: Z, panOnScrollSpeed: $, panOnScrollMode: H, zoomOnDoubleClick: se, panOnDrag: le, onPaneClick: ne, onPaneMouseEnter: ue, onPaneMouseMove: ge, onPaneMouseLeave: ye, onPaneScroll: _e, onPaneContextMenu: Te, paneClickDistance: Re, nodeClickDistance: Fe, onEdgeContextMenu: be, onEdgeMouseEnter: Me, onEdgeMouseMove: oe, onEdgeMouseLeave: Ye, reconnectRadius: Be, onReconnect: nt, onReconnectStart: de, onReconnectEnd: ce, noDragClassName: ae, noWheelClassName: X, noPanClassName: G, disableKeyboardA11y: he, nodeExtent: pe, rfId: me, viewport: Ie, onViewportChange: Xe }) {
        return U6(t), U6(e), Fpe(), Rpe(n), Ape(Ie), x.jsx(epe, {
            onPaneClick: ne,
            onPaneMouseEnter: ue,
            onPaneMouseMove: ge,
            onPaneMouseLeave: ye,
            onPaneContextMenu: Te,
            onPaneScroll: _e,
            paneClickDistance: Re,
            deleteKeyCode: D,
            selectionKeyCode: M,
            selectionOnDrag: E,
            selectionMode: T,
            onSelectionStart: h,
            onSelectionEnd: m,
            multiSelectionKeyCode: P,
            panActivationKeyCode: A,
            zoomActivationKeyCode: O,
            elementsSelectable: N,
            zoomOnScroll: ee,
            zoomOnPinch: W,
            zoomOnDoubleClick: se,
            panOnScroll: Z,
            panOnScrollSpeed: $,
            panOnScrollMode: H,
            panOnDrag: le,
            defaultViewport: k,
            translateExtent: U,
            minZoom: B,
            maxZoom: j,
            onSelectionContextMenu: f,
            preventScrolling: K,
            noDragClassName: ae,
            noWheelClassName: X,
            noPanClassName: G,
            disableKeyboardA11y: he,
            onViewportChange: Xe,
            isControlledViewport: !!Ie,
            children: x.jsxs(Cpe, {
                children: [
                    x.jsx(Mpe, {
                        edgeTypes: e,
                        onEdgeClick: i,
                        onEdgeDoubleClick: o,
                        onReconnect: nt,
                        onReconnectStart: de,
                        onReconnectEnd: ce,
                        onlyRenderVisibleElements: R,
                        onEdgeContextMenu: be,
                        onEdgeMouseEnter: Me,
                        onEdgeMouseMove: oe,
                        onEdgeMouseLeave: Ye,
                        reconnectRadius: Be,
                        defaultMarkerColor: q,
                        noPanClassName: G,
                        disableKeyboardA11y: he,
                        rfId: me
                    }),
                    x.jsx(Dpe, {
                        style: _,
                        type: v,
                        component: w,
                        containerStyle: b
                    }),
                    x.jsx("div", {
                        className: "react-flow__edgelabel-renderer"
                    }),
                    x.jsx(lpe, {
                        nodeTypes: t,
                        onNodeClick: r,
                        onNodeDoubleClick: s,
                        onNodeMouseEnter: a,
                        onNodeMouseMove: l,
                        onNodeMouseLeave: c,
                        onNodeContextMenu: u,
                        nodeClickDistance: Fe,
                        onlyRenderVisibleElements: R,
                        noPanClassName: G,
                        noDragClassName: ae,
                        disableKeyboardA11y: he,
                        nodeExtent: pe,
                        rfId: me
                    }),
                    x.jsx("div", {
                        className: "react-flow__viewport-portal"
                    })
                ]
            })
        });
    }
    cW.displayName = "GraphView";
    const jpe = J.memo(cW), z6 = ({ nodes: t, edges: e, defaultNodes: n, defaultEdges: r, width: i, height: s, fitView: o, nodeOrigin: a, nodeExtent: l } = {})=>{
        const c = new Map, u = new Map, f = new Map, h = new Map, m = r ?? e ?? [], v = n ?? t ?? [], _ = a ?? [
            0,
            0
        ], w = l ?? Ub;
        MV(f, h, m), P3(v, c, u, {
            nodeOrigin: _,
            nodeExtent: w,
            elevateNodesOnSelect: !1
        });
        let b = [
            0,
            0,
            1
        ];
        if (o && i && s) {
            const M = Dw(c, {
                filter: (A)=>!!((A.width || A.initialWidth) && (A.height || A.initialHeight))
            }), { x: E, y: T, zoom: P } = Sk(M, i, s, .5, 2, .1);
            b = [
                E,
                T,
                P
            ];
        }
        return {
            rfId: "1",
            width: 0,
            height: 0,
            transform: b,
            nodes: v,
            nodeLookup: c,
            parentLookup: u,
            edges: m,
            edgeLookup: h,
            connectionLookup: f,
            onNodesChange: null,
            onEdgesChange: null,
            hasDefaultNodes: n !== void 0,
            hasDefaultEdges: r !== void 0,
            panZoom: null,
            minZoom: .5,
            maxZoom: 2,
            translateExtent: Ub,
            nodeExtent: w,
            nodesSelectionActive: !1,
            userSelectionActive: !1,
            userSelectionRect: null,
            connectionMode: yy.Strict,
            domNode: null,
            paneDragging: !1,
            noPanClassName: "nopan",
            nodeOrigin: _,
            nodeDragThreshold: 1,
            snapGrid: [
                15,
                15
            ],
            snapToGrid: !1,
            nodesDraggable: !0,
            nodesConnectable: !0,
            nodesFocusable: !0,
            edgesFocusable: !0,
            edgesReconnectable: !0,
            elementsSelectable: !0,
            elevateNodesOnSelect: !0,
            elevateEdgesOnSelect: !1,
            fitViewOnInit: !1,
            fitViewDone: !1,
            fitViewOnInitOptions: void 0,
            selectNodesOnDrag: !0,
            multiSelectionActive: !1,
            connection: {
                ...lV
            },
            connectionClickStartHandle: null,
            connectOnClick: !0,
            ariaLiveMessage: "",
            autoPanOnConnect: !0,
            autoPanOnNodeDrag: !0,
            autoPanSpeed: 15,
            connectionRadius: 20,
            onError: ufe,
            isValidConnection: void 0,
            onSelectionChangeHandlers: [],
            lib: "react",
            debug: !1
        };
    }, Bpe = ({ nodes: t, edges: e, defaultNodes: n, defaultEdges: r, width: i, height: s, fitView: o, nodeOrigin: a, nodeExtent: l })=>nhe((c, u)=>({
                ...z6({
                    nodes: t,
                    edges: e,
                    width: i,
                    height: s,
                    fitView: o,
                    nodeOrigin: a,
                    nodeExtent: l,
                    defaultNodes: n,
                    defaultEdges: r
                }),
                setNodes: (f)=>{
                    const { nodeLookup: h, parentLookup: m, nodeOrigin: v, elevateNodesOnSelect: _ } = u();
                    P3(f, h, m, {
                        nodeOrigin: v,
                        nodeExtent: l,
                        elevateNodesOnSelect: _,
                        checkEquality: !0
                    }), c({
                        nodes: f
                    });
                },
                setEdges: (f)=>{
                    const { connectionLookup: h, edgeLookup: m } = u();
                    MV(h, m, f), c({
                        edges: f
                    });
                },
                setDefaultNodesAndEdges: (f, h)=>{
                    if (f) {
                        const { setNodes: m } = u();
                        m(f), c({
                            hasDefaultNodes: !0
                        });
                    }
                    if (h) {
                        const { setEdges: m } = u();
                        m(h), c({
                            hasDefaultEdges: !0
                        });
                    }
                },
                updateNodeInternals: (f, h = {
                    triggerFitView: !0
                })=>{
                    const { triggerNodeChanges: m, nodeLookup: v, parentLookup: _, fitViewOnInit: w, fitViewDone: b, fitViewOnInitOptions: M, domNode: E, nodeOrigin: T, nodeExtent: P, debug: A, fitViewSync: O } = u(), { changes: D, updatedInternals: R } = Tfe(f, v, _, E, T, P);
                    if (R) {
                        if (Sfe(v, _, {
                            nodeOrigin: T,
                            nodeExtent: P
                        }), h.triggerFitView) {
                            let N = b;
                            !b && w && (N = O({
                                ...M,
                                nodes: M?.nodes
                            })), c({
                                fitViewDone: N
                            });
                        } else c({});
                        D?.length > 0 && (A && console.log("React Flow: trigger node changes", D), m?.(D));
                    }
                },
                updateNodePositions: (f, h = !1)=>{
                    const m = [], v = [];
                    for (const [_, w] of f){
                        const b = !!(w?.expandParent && w?.parentId && w?.position), M = {
                            id: _,
                            type: "position",
                            position: b ? {
                                x: Math.max(0, w.position.x),
                                y: Math.max(0, w.position.y)
                            } : w.position,
                            dragging: h
                        };
                        b && m.push({
                            id: _,
                            parentId: w.parentId,
                            rect: {
                                ...w.internals.positionAbsolute,
                                width: w.measured.width,
                                height: w.measured.height
                            }
                        }), v.push(M);
                    }
                    if (m.length > 0) {
                        const { nodeLookup: _, parentLookup: w, nodeOrigin: b } = u(), M = Rk(m, _, w, b);
                        v.push(...M);
                    }
                    u().triggerNodeChanges(v);
                },
                triggerNodeChanges: (f)=>{
                    const { onNodesChange: h, setNodes: m, nodes: v, hasDefaultNodes: _, debug: w } = u();
                    if (f?.length) {
                        if (_) {
                            const b = She(f, v);
                            m(b);
                        }
                        w && console.log("React Flow: trigger node changes", f), h?.(f);
                    }
                },
                triggerEdgeChanges: (f)=>{
                    const { onEdgesChange: h, setEdges: m, edges: v, hasDefaultEdges: _, debug: w } = u();
                    if (f?.length) {
                        if (_) {
                            const b = Ehe(f, v);
                            m(b);
                        }
                        w && console.log("React Flow: trigger edge changes", f), h?.(f);
                    }
                },
                addSelectedNodes: (f)=>{
                    const { multiSelectionActive: h, edgeLookup: m, nodeLookup: v, triggerNodeChanges: _, triggerEdgeChanges: w } = u();
                    if (h) {
                        const b = f.map((M)=>Up(M, !0));
                        _(b);
                        return;
                    }
                    _(k0(v, new Set([
                        ...f
                    ]), !0)), w(k0(m));
                },
                addSelectedEdges: (f)=>{
                    const { multiSelectionActive: h, edgeLookup: m, nodeLookup: v, triggerNodeChanges: _, triggerEdgeChanges: w } = u();
                    if (h) {
                        const b = f.map((M)=>Up(M, !0));
                        w(b);
                        return;
                    }
                    w(k0(m, new Set([
                        ...f
                    ]))), _(k0(v, new Set, !0));
                },
                unselectNodesAndEdges: ({ nodes: f, edges: h } = {})=>{
                    const { edges: m, nodes: v, nodeLookup: _, triggerNodeChanges: w, triggerEdgeChanges: b } = u(), M = f || v, E = h || m, T = M.map((A)=>{
                        const O = _.get(A.id);
                        return O && (O.selected = !1), Up(A.id, !1);
                    }), P = E.map((A)=>Up(A.id, !1));
                    w(T), b(P);
                },
                setMinZoom: (f)=>{
                    const { panZoom: h, maxZoom: m } = u();
                    h?.setScaleExtent([
                        f,
                        m
                    ]), c({
                        minZoom: f
                    });
                },
                setMaxZoom: (f)=>{
                    const { panZoom: h, minZoom: m } = u();
                    h?.setScaleExtent([
                        m,
                        f
                    ]), c({
                        maxZoom: f
                    });
                },
                setTranslateExtent: (f)=>{
                    u().panZoom?.setTranslateExtent(f), c({
                        translateExtent: f
                    });
                },
                setPaneClickDistance: (f)=>{
                    u().panZoom?.setClickDistance(f);
                },
                resetSelectedElements: ()=>{
                    const { edges: f, nodes: h, triggerNodeChanges: m, triggerEdgeChanges: v } = u(), _ = h.reduce((b, M)=>M.selected ? [
                            ...b,
                            Up(M.id, !1)
                        ] : b, []), w = f.reduce((b, M)=>M.selected ? [
                            ...b,
                            Up(M.id, !1)
                        ] : b, []);
                    m(_), v(w);
                },
                setNodeExtent: (f)=>{
                    const { nodes: h, nodeLookup: m, parentLookup: v, nodeOrigin: _, elevateNodesOnSelect: w, nodeExtent: b } = u();
                    f[0][0] === b[0][0] && f[0][1] === b[0][1] && f[1][0] === b[1][0] && f[1][1] === b[1][1] || (P3(h, m, v, {
                        nodeOrigin: _,
                        nodeExtent: f,
                        elevateNodesOnSelect: w,
                        checkEquality: !1
                    }), c({
                        nodeExtent: f
                    }));
                },
                panBy: (f)=>{
                    const { transform: h, width: m, height: v, panZoom: _, translateExtent: w } = u();
                    return Cfe({
                        delta: f,
                        panZoom: _,
                        transform: h,
                        translateExtent: w,
                        width: m,
                        height: v
                    });
                },
                fitView: (f)=>{
                    const { panZoom: h, width: m, height: v, minZoom: _, maxZoom: w, nodeLookup: b } = u();
                    if (!h) return Promise.resolve(!1);
                    const M = T3(b, f);
                    return C3({
                        nodes: M,
                        width: m,
                        height: v,
                        panZoom: h,
                        minZoom: _,
                        maxZoom: w
                    }, f);
                },
                fitViewSync: (f)=>{
                    const { panZoom: h, width: m, height: v, minZoom: _, maxZoom: w, nodeLookup: b } = u();
                    if (!h) return !1;
                    const M = T3(b, f);
                    return C3({
                        nodes: M,
                        width: m,
                        height: v,
                        panZoom: h,
                        minZoom: _,
                        maxZoom: w
                    }, f), M.size > 0;
                },
                cancelConnection: ()=>{
                    c({
                        connection: {
                            ...lV
                        }
                    });
                },
                updateConnection: (f)=>{
                    c({
                        connection: f
                    });
                },
                reset: ()=>c({
                        ...z6()
                    })
            }), Object.is);
    function Upe({ initialNodes: t, initialEdges: e, defaultNodes: n, defaultEdges: r, initialWidth: i, initialHeight: s, fitView: o, nodeOrigin: a, nodeExtent: l, children: c }) {
        const [u] = J.useState(()=>Bpe({
                nodes: t,
                edges: e,
                defaultNodes: n,
                defaultEdges: r,
                width: i,
                height: s,
                fitView: o,
                nodeOrigin: a,
                nodeExtent: l
            }));
        return x.jsx(rhe, {
            value: u,
            children: x.jsx(Rhe, {
                children: c
            })
        });
    }
    function zpe({ children: t, nodes: e, edges: n, defaultNodes: r, defaultEdges: i, width: s, height: o, fitView: a, nodeOrigin: l, nodeExtent: c }) {
        return J.useContext(l2) ? x.jsx(x.Fragment, {
            children: t
        }) : x.jsx(Upe, {
            initialNodes: e,
            initialEdges: n,
            defaultNodes: r,
            defaultEdges: i,
            initialWidth: s,
            initialHeight: o,
            fitView: a,
            nodeOrigin: l,
            nodeExtent: c,
            children: t
        });
    }
    const Vpe = {
        width: "100%",
        height: "100%",
        overflow: "hidden",
        position: "relative",
        zIndex: 0
    };
    function Wpe({ nodes: t, edges: e, defaultNodes: n, defaultEdges: r, className: i, nodeTypes: s, edgeTypes: o, onNodeClick: a, onEdgeClick: l, onInit: c, onMove: u, onMoveStart: f, onMoveEnd: h, onConnect: m, onConnectStart: v, onConnectEnd: _, onClickConnectStart: w, onClickConnectEnd: b, onNodeMouseEnter: M, onNodeMouseMove: E, onNodeMouseLeave: T, onNodeContextMenu: P, onNodeDoubleClick: A, onNodeDragStart: O, onNodeDrag: D, onNodeDragStop: R, onNodesDelete: N, onEdgesDelete: k, onDelete: U, onSelectionChange: B, onSelectionDragStart: j, onSelectionDrag: K, onSelectionDragStop: q, onSelectionContextMenu: ee, onSelectionStart: W, onSelectionEnd: Z, onBeforeDelete: $, connectionMode: H, connectionLineType: se = Jf.Bezier, connectionLineStyle: le, connectionLineComponent: ne, connectionLineContainerStyle: ue, deleteKeyCode: ge = "Backspace", selectionKeyCode: ye = "Shift", selectionOnDrag: _e = !1, selectionMode: Te = zb.Full, panActivationKeyCode: Re = "Space", multiSelectionKeyCode: Fe = SM() ? "Meta" : "Control", zoomActivationKeyCode: be = SM() ? "Meta" : "Control", snapToGrid: Me, snapGrid: oe, onlyRenderVisibleElements: Ye = !1, selectNodesOnDrag: Be, nodesDraggable: nt, nodesConnectable: de, nodesFocusable: ce, nodeOrigin: ae = jV, edgesFocusable: X, edgesReconnectable: G, elementsSelectable: he = !0, defaultViewport: pe = ghe, minZoom: me = .5, maxZoom: Ie = 2, translateExtent: Xe = Ub, preventScrolling: Ze = !0, nodeExtent: at, defaultMarkerColor: Je = "#b1b1b7", zoomOnScroll: Pe = !0, zoomOnPinch: je = !0, panOnScroll: rt = !1, panOnScrollSpeed: ct = .5, panOnScrollMode: st = cm.Free, zoomOnDoubleClick: Se = !0, panOnDrag: $e = !0, onPaneClick: ht, onPaneMouseEnter: Ee, onPaneMouseMove: lt, onPaneMouseLeave: Ae, onPaneScroll: ze, onPaneContextMenu: We, paneClickDistance: it = 0, nodeClickDistance: pt = 0, children: Pt, onReconnect: en, onReconnectStart: wt, onReconnectEnd: Ln, onEdgeContextMenu: vn, onEdgeDoubleClick: $r, onEdgeMouseEnter: il, onEdgeMouseMove: Ko, onEdgeMouseLeave: wo, reconnectRadius: Pl = 10, onNodesChange: _o, onEdgesChange: sl, noDragClassName: Vd = "nodrag", noWheelClassName: Ic = "nowheel", noPanClassName: wu = "nopan", fitView: So, fitViewOptions: Wd, connectOnClick: qd, attributionPosition: Hd, proOptions: $d, defaultEdgeOptions: Gd, elevateNodesOnSelect: Xd, elevateEdgesOnSelect: fe, disableKeyboardA11y: Oe = !1, autoPanOnConnect: Ge, autoPanOnNodeDrag: Ue, autoPanSpeed: De, connectionRadius: dt, isValidConnection: _t, onError: Ct, style: kt, id: tn, nodeDragThreshold: Zt, viewport: yt, onViewportChange: qt, width: on, height: Fn, colorMode: jn = "light", debug: Mn, onScroll: Vt, ...$n }, Rn) {
        const oi = tn || "1", Ra = bhe(jn), hi = J.useCallback((Eo)=>{
            Eo.currentTarget.scrollTo({
                top: 0,
                left: 0,
                behavior: "instant"
            }), Vt?.(Eo);
        }, [
            Vt
        ]);
        return x.jsx("div", {
            "data-testid": "rf__wrapper",
            ...$n,
            onScroll: hi,
            style: {
                ...kt,
                ...Vpe
            },
            ref: Rn,
            className: ts([
                "react-flow",
                i,
                Ra
            ]),
            id: tn,
            children: x.jsxs(zpe, {
                nodes: t,
                edges: e,
                width: on,
                height: Fn,
                fitView: So,
                nodeOrigin: ae,
                nodeExtent: at,
                children: [
                    x.jsx(jpe, {
                        onInit: c,
                        onNodeClick: a,
                        onEdgeClick: l,
                        onNodeMouseEnter: M,
                        onNodeMouseMove: E,
                        onNodeMouseLeave: T,
                        onNodeContextMenu: P,
                        onNodeDoubleClick: A,
                        nodeTypes: s,
                        edgeTypes: o,
                        connectionLineType: se,
                        connectionLineStyle: le,
                        connectionLineComponent: ne,
                        connectionLineContainerStyle: ue,
                        selectionKeyCode: ye,
                        selectionOnDrag: _e,
                        selectionMode: Te,
                        deleteKeyCode: ge,
                        multiSelectionKeyCode: Fe,
                        panActivationKeyCode: Re,
                        zoomActivationKeyCode: be,
                        onlyRenderVisibleElements: Ye,
                        defaultViewport: pe,
                        translateExtent: Xe,
                        minZoom: me,
                        maxZoom: Ie,
                        preventScrolling: Ze,
                        zoomOnScroll: Pe,
                        zoomOnPinch: je,
                        zoomOnDoubleClick: Se,
                        panOnScroll: rt,
                        panOnScrollSpeed: ct,
                        panOnScrollMode: st,
                        panOnDrag: $e,
                        onPaneClick: ht,
                        onPaneMouseEnter: Ee,
                        onPaneMouseMove: lt,
                        onPaneMouseLeave: Ae,
                        onPaneScroll: ze,
                        onPaneContextMenu: We,
                        paneClickDistance: it,
                        nodeClickDistance: pt,
                        onSelectionContextMenu: ee,
                        onSelectionStart: W,
                        onSelectionEnd: Z,
                        onReconnect: en,
                        onReconnectStart: wt,
                        onReconnectEnd: Ln,
                        onEdgeContextMenu: vn,
                        onEdgeDoubleClick: $r,
                        onEdgeMouseEnter: il,
                        onEdgeMouseMove: Ko,
                        onEdgeMouseLeave: wo,
                        reconnectRadius: Pl,
                        defaultMarkerColor: Je,
                        noDragClassName: Vd,
                        noWheelClassName: Ic,
                        noPanClassName: wu,
                        rfId: oi,
                        disableKeyboardA11y: Oe,
                        nodeExtent: at,
                        viewport: yt,
                        onViewportChange: qt
                    }),
                    x.jsx(xhe, {
                        nodes: t,
                        edges: e,
                        defaultNodes: n,
                        defaultEdges: r,
                        onConnect: m,
                        onConnectStart: v,
                        onConnectEnd: _,
                        onClickConnectStart: w,
                        onClickConnectEnd: b,
                        nodesDraggable: nt,
                        nodesConnectable: de,
                        nodesFocusable: ce,
                        edgesFocusable: X,
                        edgesReconnectable: G,
                        elementsSelectable: he,
                        elevateNodesOnSelect: Xd,
                        elevateEdgesOnSelect: fe,
                        minZoom: me,
                        maxZoom: Ie,
                        nodeExtent: at,
                        onNodesChange: _o,
                        onEdgesChange: sl,
                        snapToGrid: Me,
                        snapGrid: oe,
                        connectionMode: H,
                        translateExtent: Xe,
                        connectOnClick: qd,
                        defaultEdgeOptions: Gd,
                        fitView: So,
                        fitViewOptions: Wd,
                        onNodesDelete: N,
                        onEdgesDelete: k,
                        onDelete: U,
                        onNodeDragStart: O,
                        onNodeDrag: D,
                        onNodeDragStop: R,
                        onSelectionDrag: K,
                        onSelectionDragStart: j,
                        onSelectionDragStop: q,
                        onMove: u,
                        onMoveStart: f,
                        onMoveEnd: h,
                        noPanClassName: wu,
                        nodeOrigin: ae,
                        rfId: oi,
                        autoPanOnConnect: Ge,
                        autoPanOnNodeDrag: Ue,
                        autoPanSpeed: De,
                        onError: Ct,
                        connectionRadius: dt,
                        isValidConnection: _t,
                        selectNodesOnDrag: Be,
                        nodeDragThreshold: Zt,
                        onBeforeDelete: $,
                        paneClickDistance: it,
                        debug: Mn
                    }),
                    x.jsx(mhe, {
                        onSelectionChange: B
                    }),
                    Pt,
                    x.jsx(uhe, {
                        proOptions: $d,
                        position: Hd
                    }),
                    x.jsx(lhe, {
                        rfId: oi,
                        disableKeyboardA11y: Oe
                    })
                ]
            })
        });
    }
    var qpe = UV(Wpe);
    const Hpe = (t)=>t.domNode?.querySelector(".react-flow__edgelabel-renderer");
    function $pe({ children: t }) {
        const e = sr(Hpe);
        return e ? vT.createPortal(t, e) : null;
    }
    function Gpe({ dimensions: t, lineWidth: e, variant: n, className: r }) {
        return x.jsx("path", {
            strokeWidth: e,
            d: `M${t[0] / 2} 0 V${t[1]} M0 ${t[1] / 2} H${t[0]}`,
            className: ts([
                "react-flow__background-pattern",
                n,
                r
            ])
        });
    }
    function Xpe({ radius: t, className: e }) {
        return x.jsx("circle", {
            cx: t,
            cy: t,
            r: t,
            className: ts([
                "react-flow__background-pattern",
                "dots",
                e
            ])
        });
    }
    var Td;
    (function(t) {
        t.Lines = "lines", t.Dots = "dots", t.Cross = "cross";
    })(Td || (Td = {}));
    const Kpe = {
        [Td.Dots]: 1,
        [Td.Lines]: 1,
        [Td.Cross]: 6
    }, Ype = (t)=>({
            transform: t.transform,
            patternId: `pattern-${t.rfId}`
        });
    function uW({ id: t, variant: e = Td.Dots, gap: n = 20, size: r, lineWidth: i = 1, offset: s = 0, color: o, bgColor: a, style: l, className: c, patternClassName: u }) {
        const f = J.useRef(null), { transform: h, patternId: m } = sr(Ype, wi), v = r || Kpe[e], _ = e === Td.Dots, w = e === Td.Cross, b = Array.isArray(n) ? n : [
            n,
            n
        ], M = [
            b[0] * h[2] || 1,
            b[1] * h[2] || 1
        ], E = v * h[2], T = Array.isArray(s) ? s : [
            s,
            s
        ], P = w ? [
            E,
            E
        ] : M, A = [
            T[0] * h[2] || 1 + P[0] / 2,
            T[1] * h[2] || 1 + P[1] / 2
        ], O = `${m}${t || ""}`;
        return x.jsxs("svg", {
            className: ts([
                "react-flow__background",
                c
            ]),
            style: {
                ...l,
                ...u2,
                "--xy-background-color-props": a,
                "--xy-background-pattern-color-props": o
            },
            ref: f,
            "data-testid": "rf__background",
            children: [
                x.jsx("pattern", {
                    id: O,
                    x: h[0] % M[0],
                    y: h[1] % M[1],
                    width: M[0],
                    height: M[1],
                    patternUnits: "userSpaceOnUse",
                    patternTransform: `translate(-${A[0]},-${A[1]})`,
                    children: _ ? x.jsx(Xpe, {
                        radius: E / 2,
                        className: u
                    }) : x.jsx(Gpe, {
                        dimensions: P,
                        lineWidth: i,
                        variant: e,
                        className: u
                    })
                }),
                x.jsx("rect", {
                    x: "0",
                    y: "0",
                    width: "100%",
                    height: "100%",
                    fill: `url(#${O})`
                })
            ]
        });
    }
    uW.displayName = "Background";
    const Zpe = J.memo(uW);
    function Jpe() {
        return x.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 32",
            children: x.jsx("path", {
                d: "M32 18.133H18.133V32h-4.266V18.133H0v-4.266h13.867V0h4.266v13.867H32z"
            })
        });
    }
    function Qpe() {
        return x.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 5",
            children: x.jsx("path", {
                d: "M0 0h32v4.2H0z"
            })
        });
    }
    function eme() {
        return x.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 30",
            children: x.jsx("path", {
                d: "M3.692 4.63c0-.53.4-.938.939-.938h5.215V0H4.708C2.13 0 0 2.054 0 4.63v5.216h3.692V4.631zM27.354 0h-5.2v3.692h5.17c.53 0 .984.4.984.939v5.215H32V4.631A4.624 4.624 0 0027.354 0zm.954 24.83c0 .532-.4.94-.939.94h-5.215v3.768h5.215c2.577 0 4.631-2.13 4.631-4.707v-5.139h-3.692v5.139zm-23.677.94c-.531 0-.939-.4-.939-.94v-5.138H0v5.139c0 2.577 2.13 4.707 4.708 4.707h5.138V25.77H4.631z"
            })
        });
    }
    function tme() {
        return x.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 25 32",
            children: x.jsx("path", {
                d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0 8 0 4.571 3.429 4.571 7.619v3.048H3.048A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047zm4.724-13.866H7.467V7.619c0-2.59 2.133-4.724 4.723-4.724 2.591 0 4.724 2.133 4.724 4.724v3.048z"
            })
        });
    }
    function nme() {
        return x.jsx("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 25 32",
            children: x.jsx("path", {
                d: "M21.333 10.667H19.81V7.619C19.81 3.429 16.38 0 12.19 0c-4.114 1.828-1.37 2.133.305 2.438 1.676.305 4.42 2.59 4.42 5.181v3.048H3.047A3.056 3.056 0 000 13.714v15.238A3.056 3.056 0 003.048 32h18.285a3.056 3.056 0 003.048-3.048V13.714a3.056 3.056 0 00-3.048-3.047zM12.19 24.533a3.056 3.056 0 01-3.047-3.047 3.056 3.056 0 013.047-3.048 3.056 3.056 0 013.048 3.048 3.056 3.056 0 01-3.048 3.047z"
            })
        });
    }
    function M1({ children: t, className: e, ...n }) {
        return x.jsx("button", {
            type: "button",
            className: ts([
                "react-flow__controls-button",
                e
            ]),
            ...n,
            children: t
        });
    }
    const rme = (t)=>({
            isInteractive: t.nodesDraggable || t.nodesConnectable || t.elementsSelectable,
            minZoomReached: t.transform[2] <= t.minZoom,
            maxZoomReached: t.transform[2] >= t.maxZoom
        });
    function dW({ style: t, showZoom: e = !0, showFitView: n = !0, showInteractive: r = !0, fitViewOptions: i, onZoomIn: s, onZoomOut: o, onFitView: a, onInteractiveChange: l, className: c, children: u, position: f = "bottom-left", orientation: h = "vertical", "aria-label": m = "React Flow controls" }) {
        const v = si(), { isInteractive: _, minZoomReached: w, maxZoomReached: b } = sr(rme, wi), { zoomIn: M, zoomOut: E, fitView: T } = Fw(), P = ()=>{
            M(), s?.();
        }, A = ()=>{
            E(), o?.();
        }, O = ()=>{
            T(i), a?.();
        }, D = ()=>{
            v.setState({
                nodesDraggable: !_,
                nodesConnectable: !_,
                elementsSelectable: !_
            }), l?.(!_);
        }, R = h === "horizontal" ? "horizontal" : "vertical";
        return x.jsxs(c2, {
            className: ts([
                "react-flow__controls",
                R,
                c
            ]),
            position: f,
            style: t,
            "data-testid": "rf__controls",
            "aria-label": m,
            children: [
                e && x.jsxs(x.Fragment, {
                    children: [
                        x.jsx(M1, {
                            onClick: P,
                            className: "react-flow__controls-zoomin",
                            title: "zoom in",
                            "aria-label": "zoom in",
                            disabled: b,
                            children: x.jsx(Jpe, {})
                        }),
                        x.jsx(M1, {
                            onClick: A,
                            className: "react-flow__controls-zoomout",
                            title: "zoom out",
                            "aria-label": "zoom out",
                            disabled: w,
                            children: x.jsx(Qpe, {})
                        })
                    ]
                }),
                n && x.jsx(M1, {
                    className: "react-flow__controls-fitview",
                    onClick: O,
                    title: "fit view",
                    "aria-label": "fit view",
                    children: x.jsx(eme, {})
                }),
                r && x.jsx(M1, {
                    className: "react-flow__controls-interactive",
                    onClick: D,
                    title: "toggle interactivity",
                    "aria-label": "toggle interactivity",
                    children: _ ? x.jsx(nme, {}) : x.jsx(tme, {})
                }),
                u
            ]
        });
    }
    dW.displayName = "Controls";
    const ime = J.memo(dW);
    function sme({ id: t, x: e, y: n, width: r, height: i, style: s, color: o, strokeColor: a, strokeWidth: l, className: c, borderRadius: u, shapeRendering: f, selected: h, onClick: m }) {
        const { background: v, backgroundColor: _ } = s || {}, w = o || v || _;
        return x.jsx("rect", {
            className: ts([
                "react-flow__minimap-node",
                {
                    selected: h
                },
                c
            ]),
            x: e,
            y: n,
            rx: u,
            ry: u,
            width: r,
            height: i,
            style: {
                fill: w,
                stroke: a,
                strokeWidth: l
            },
            shapeRendering: f,
            onClick: m ? (b)=>m(b, t) : void 0
        });
    }
    const ome = J.memo(sme), ame = (t)=>t.nodes.map((e)=>e.id), fA = (t)=>t instanceof Function ? t : ()=>t;
    function lme({ nodeStrokeColor: t, nodeColor: e, nodeClassName: n = "", nodeBorderRadius: r = 5, nodeStrokeWidth: i, nodeComponent: s = ome, onClick: o }) {
        const a = sr(ame, wi), l = fA(e), c = fA(t), u = fA(n), f = typeof window > "u" || window.chrome ? "crispEdges" : "geometricPrecision";
        return x.jsx(x.Fragment, {
            children: a.map((h)=>x.jsx(ume, {
                    id: h,
                    nodeColorFunc: l,
                    nodeStrokeColorFunc: c,
                    nodeClassNameFunc: u,
                    nodeBorderRadius: r,
                    nodeStrokeWidth: i,
                    NodeComponent: s,
                    onClick: o,
                    shapeRendering: f
                }, h))
        });
    }
    function cme({ id: t, nodeColorFunc: e, nodeStrokeColorFunc: n, nodeClassNameFunc: r, nodeBorderRadius: i, nodeStrokeWidth: s, shapeRendering: o, NodeComponent: a, onClick: l }) {
        const { node: c, x: u, y: f, width: h, height: m } = sr((v)=>{
            const _ = v.nodeLookup.get(t), { x: w, y: b } = _.internals.positionAbsolute, { width: M, height: E } = zd(_);
            return {
                node: _,
                x: w,
                y: b,
                width: M,
                height: E
            };
        }, wi);
        return !c || c.hidden || !yV(c) ? null : x.jsx(a, {
            x: u,
            y: f,
            width: h,
            height: m,
            style: c.style,
            selected: !!c.selected,
            className: r(c),
            color: e(c),
            borderRadius: i,
            strokeColor: n(c),
            strokeWidth: s,
            shapeRendering: o,
            onClick: l,
            id: c.id
        });
    }
    const ume = J.memo(cme);
    var dme = J.memo(lme);
    const fme = 200, hme = 150, pme = (t)=>{
        const e = {
            x: -t.transform[0] / t.transform[2],
            y: -t.transform[1] / t.transform[2],
            width: t.width / t.transform[2],
            height: t.height / t.transform[2]
        };
        return {
            viewBB: e,
            boundingRect: t.nodeLookup.size > 0 ? mV(Dw(t.nodeLookup), e) : e,
            rfId: t.rfId,
            panZoom: t.panZoom,
            translateExtent: t.translateExtent,
            flowWidth: t.width,
            flowHeight: t.height
        };
    }, mme = "react-flow__minimap-desc";
    function fW({ style: t, className: e, nodeStrokeColor: n, nodeColor: r, nodeClassName: i = "", nodeBorderRadius: s = 5, nodeStrokeWidth: o, nodeComponent: a, bgColor: l, maskColor: c, maskStrokeColor: u, maskStrokeWidth: f, position: h = "bottom-right", onClick: m, onNodeClick: v, pannable: _ = !1, zoomable: w = !1, ariaLabel: b = "React Flow mini map", inversePan: M, zoomStep: E = 10, offsetScale: T = 5 }) {
        const P = si(), A = J.useRef(null), { boundingRect: O, viewBB: D, rfId: R, panZoom: N, translateExtent: k, flowWidth: U, flowHeight: B } = sr(pme, wi), j = t?.width ?? fme, K = t?.height ?? hme, q = O.width / j, ee = O.height / K, W = Math.max(q, ee), Z = W * j, $ = W * K, H = T * W, se = O.x - (Z - O.width) / 2 - H, le = O.y - ($ - O.height) / 2 - H, ne = Z + H * 2, ue = $ + H * 2, ge = `${mme}-${R}`, ye = J.useRef(0), _e = J.useRef();
        ye.current = W, J.useEffect(()=>{
            if (A.current && N) return _e.current = Dfe({
                domNode: A.current,
                panZoom: N,
                getTransform: ()=>P.getState().transform,
                getViewScale: ()=>ye.current
            }), ()=>{
                _e.current?.destroy();
            };
        }, [
            N
        ]), J.useEffect(()=>{
            _e.current?.update({
                translateExtent: k,
                width: U,
                height: B,
                inversePan: M,
                pannable: _,
                zoomStep: E,
                zoomable: w
            });
        }, [
            _,
            w,
            M,
            E,
            k,
            U,
            B
        ]);
        const Te = m ? (Fe)=>{
            const [be, Me] = _e.current?.pointer(Fe) || [
                0,
                0
            ];
            m(Fe, {
                x: be,
                y: Me
            });
        } : void 0, Re = v ? J.useCallback((Fe, be)=>{
            const Me = P.getState().nodeLookup.get(be);
            v(Fe, Me);
        }, []) : void 0;
        return x.jsx(c2, {
            position: h,
            style: {
                ...t,
                "--xy-minimap-background-color-props": typeof l == "string" ? l : void 0,
                "--xy-minimap-mask-background-color-props": typeof c == "string" ? c : void 0,
                "--xy-minimap-mask-stroke-color-props": typeof u == "string" ? u : void 0,
                "--xy-minimap-mask-stroke-width-props": typeof f == "number" ? f * W : void 0,
                "--xy-minimap-node-background-color-props": typeof r == "string" ? r : void 0,
                "--xy-minimap-node-stroke-color-props": typeof n == "string" ? n : void 0,
                "--xy-minimap-node-stroke-width-props": typeof o == "string" ? o : void 0
            },
            className: ts([
                "react-flow__minimap",
                e
            ]),
            "data-testid": "rf__minimap",
            children: x.jsxs("svg", {
                width: j,
                height: K,
                viewBox: `${se} ${le} ${ne} ${ue}`,
                className: "react-flow__minimap-svg",
                role: "img",
                "aria-labelledby": ge,
                ref: A,
                onClick: Te,
                children: [
                    b && x.jsx("title", {
                        id: ge,
                        children: b
                    }),
                    x.jsx(dme, {
                        onClick: Re,
                        nodeColor: r,
                        nodeStrokeColor: n,
                        nodeBorderRadius: s,
                        nodeClassName: i,
                        nodeStrokeWidth: o,
                        nodeComponent: a
                    }),
                    x.jsx("path", {
                        className: "react-flow__minimap-mask",
                        d: `M${se - H},${le - H}h${ne + H * 2}v${ue + H * 2}h${-ne - H * 2}z
        M${D.x},${D.y}h${D.width}v${D.height}h${-D.width}z`,
                        fillRule: "evenodd",
                        pointerEvents: "none"
                    })
                ]
            })
        });
    }
    fW.displayName = "MiniMap";
    const gme = J.memo(fW);
    function yme({ nodeId: t, position: e, variant: n = Yx.Handle, className: r, style: i = {}, children: s, color: o, minWidth: a = 10, minHeight: l = 10, maxWidth: c = Number.MAX_VALUE, maxHeight: u = Number.MAX_VALUE, keepAspectRatio: f = !1, shouldResize: h, onResizeStart: m, onResize: v, onResizeEnd: _ }) {
        const w = qV(), b = typeof t == "string" ? t : w, M = si(), E = J.useRef(null), T = n === Yx.Line ? "right" : "bottom-right", P = e ?? T, A = J.useRef(null);
        J.useEffect(()=>{
            if (!(!E.current || !b)) return A.current || (A.current = Yfe({
                domNode: E.current,
                nodeId: b,
                getStoreItems: ()=>{
                    const { nodeLookup: N, transform: k, snapGrid: U, snapToGrid: B, nodeOrigin: j, domNode: K } = M.getState();
                    return {
                        nodeLookup: N,
                        transform: k,
                        snapGrid: U,
                        snapToGrid: B,
                        nodeOrigin: j,
                        paneDomNode: K
                    };
                },
                onChange: (N, k)=>{
                    const { triggerNodeChanges: U, nodeLookup: B, parentLookup: j, nodeOrigin: K } = M.getState(), q = [], ee = {
                        x: N.x,
                        y: N.y
                    }, W = B.get(b);
                    if (W && W.expandParent && W.parentId) {
                        const Z = W.origin ?? K, $ = N.width ?? W.measured.width, H = N.height ?? W.measured.height, se = {
                            id: W.id,
                            parentId: W.parentId,
                            rect: {
                                width: $,
                                height: H,
                                ...vV({
                                    x: N.x ?? W.position.x,
                                    y: N.y ?? W.position.y
                                }, {
                                    width: $,
                                    height: H
                                }, W.parentId, B, Z)
                            }
                        }, le = Rk([
                            se
                        ], B, j, K);
                        q.push(...le), ee.x = N.x ? Math.max(Z[0] * $, N.x) : void 0, ee.y = N.y ? Math.max(Z[1] * H, N.y) : void 0;
                    }
                    if (ee.x !== void 0 && ee.y !== void 0) {
                        const Z = {
                            id: b,
                            type: "position",
                            position: {
                                ...ee
                            }
                        };
                        q.push(Z);
                    }
                    if (N.width !== void 0 && N.height !== void 0) {
                        const Z = {
                            id: b,
                            type: "dimensions",
                            resizing: !0,
                            setAttributes: !0,
                            dimensions: {
                                width: N.width,
                                height: N.height
                            }
                        };
                        q.push(Z);
                    }
                    for (const Z of k){
                        const $ = {
                            ...Z,
                            type: "position"
                        };
                        q.push($);
                    }
                    U(q);
                },
                onEnd: ()=>{
                    const N = {
                        id: b,
                        type: "dimensions",
                        resizing: !1
                    };
                    M.getState().triggerNodeChanges([
                        N
                    ]);
                }
            })), A.current.update({
                controlPosition: P,
                boundaries: {
                    minWidth: a,
                    minHeight: l,
                    maxWidth: c,
                    maxHeight: u
                },
                keepAspectRatio: f,
                onResizeStart: m,
                onResize: v,
                onResizeEnd: _,
                shouldResize: h
            }), ()=>{
                A.current?.destroy();
            };
        }, [
            P,
            a,
            l,
            c,
            u,
            f,
            m,
            v,
            _,
            h
        ]);
        const O = P.split("-"), D = n === Yx.Line ? "borderColor" : "backgroundColor", R = o ? {
            ...i,
            [D]: o
        } : i;
        return x.jsx("div", {
            className: ts([
                "react-flow__resize-control",
                "nodrag",
                ...O,
                n,
                r
            ]),
            ref: E,
            style: R,
            children: s
        });
    }
    J.memo(yme);
    const hr = "icon-[solar--home-outline]", Ak = Uae({
        shape: Y.object({
            name: Y.string().min(1),
            probability: su(),
            limit: su(),
            image: Y.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((t)=>t[0]).refine((t)=>(t && t.size < 5 * 1024 * 1024, !0), {
                message: _a.text("File size must be less than 5MB")
            }).refine((t)=>t ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(t.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: yo
    }), V6 = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(Ak.shape),
            defaultValues: {
                name: "",
                limit: 32,
                probability: 100,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "name",
                    label: x.jsx(re, {
                        label: "Region name (label)"
                    }),
                    children: x.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("name")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "image",
                    label: x.jsx(re, {
                        label: "Region image (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Region image (hint)"
                    }),
                    children: x.jsx("input", {
                        type: "file",
                        className: o.input(),
                        ...s.register("image")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "probability",
                    label: x.jsx(re, {
                        label: "Region spawn probability (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Region spawn probability (hint)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: .5,
                        max: 100,
                        step: .5,
                        ...s.register("probability")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "limit",
                    label: x.jsx(re, {
                        label: "Region limit (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Region limit (hint)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 1,
                        step: 1,
                        ...s.register("limit")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: _7,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, _y = async (t)=>new Promise((e, n)=>{
            const r = new Image;
            r.src = URL.createObjectURL(t), r.onload = ()=>{
                const i = document.createElement("canvas");
                i.width = r.width, i.height = r.height;
                const s = i.getContext("2d");
                if (s) return s.drawImage(r, 0, 0), e(i.toDataURL("image/webp", 1));
                n(new Error("Failed to convert image to WebP-64"));
            }, r.onerror = ()=>{
                n(new Error("Failed to load image"));
            };
        }), hA = Ri(), vme = [
        hA({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Region name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    to: "/$locale/apps/derivean/root/region/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        hA({
            name: "probability",
            header () {
                return x.jsx(re, {
                    label: "Region probability (label)"
                });
            },
            render ({ value: t }) {
                return x.jsxs(uo, {
                    children: [
                        qn({
                            number: t
                        }),
                        "%"
                    ]
                });
            },
            size: 14
        }),
        hA({
            name: "limit",
            header () {
                return x.jsx(re, {
                    label: "Region limit (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 18
        })
    ], hW = ({ table: t, ...e })=>{
        const n = Vr([
            [
                "Region"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: vme
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create region (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create region (modal)"
                            }),
                            icon: lM,
                            children: ({ close: r })=>x.jsx(V6, {
                                    mutation: dn({
                                        async mutationFn ({ image: i, ...s }) {
                                            return At.transaction().execute(async (o)=>o.insertInto("Region").values({
                                                    id: tr(),
                                                    ...s,
                                                    image: i ? await _y(i) : null
                                                }).execute());
                                        },
                                        async onSuccess () {
                                            await n(), r();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: r }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit region (modal)"
                                }),
                                icon: lM,
                                children: ({ close: i })=>x.jsx(V6, {
                                        defaultValues: r,
                                        mutation: dn({
                                            async mutationFn ({ image: s, ...o }) {
                                                return At.transaction().execute(async (a)=>a.updateTable("Region").set({
                                                        ...o,
                                                        image: s ? await _y(s) : null
                                                    }).where("id", "=", r.id).execute());
                                            },
                                            async onSuccess () {
                                                await n(), i();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete region (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (i)=>i.deleteFrom("Region").where("id", "=", r.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete region (content)"
                                    }),
                                    textToast: "Delete region",
                                    invalidator: n
                                })
                            })
                        ]
                    });
                }
            },
            ...e
        });
    }, xme = (t)=>x.jsx(Wz, {
            icon: lM,
            table: hW,
            textTitle: x.jsx(re, {
                label: "Select regions (title)"
            }),
            render: ({ entities: e })=>x.jsx(wh, {
                    items: e,
                    css: {
                        base: [
                            "flex",
                            "flex-row",
                            "gap-2"
                        ]
                    },
                    render: ({ entity: n })=>x.jsx("div", {
                            className: mn([
                                "p-2",
                                "border",
                                "border-blue-300",
                                "bg-blue-50",
                                "rounded-sm"
                            ]),
                            children: n.name
                        })
                }),
            queryKey: "Region",
            query: async ({ filter: e, cursor: n })=>At.transaction().execute(async (r)=>Hr({
                        select: r.selectFrom("Region as r").selectAll(),
                        output: Ak.entity,
                        query ({ select: i, where: s }) {
                            let o = i;
                            if (s?.id && (o = o.where("r.id", "=", s.id)), s?.idIn && (o = o.where("r.id", "in", s.idIn)), s?.fulltext) {
                                const a = `%${s.fulltext}%`.toLowerCase();
                                o = o.where((l)=>l.or([
                                        l("r.id", "like", a),
                                        l("r.name", "like", a)
                                    ]));
                            }
                            return o;
                        },
                        filter: e,
                        cursor: n
                    })),
            ...t
        }), Nk = Rae({
        shape: Y.object({
            name: Y.string().min(1),
            cycles: su(),
            sort: su(),
            limit: su(),
            regionIds: Y.array(Y.string()).optional(),
            image: Y.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((t)=>t[0]).refine((t)=>(t && t.size < 5 * 1024 * 1024, !0), {
                message: _a.text("File size must be less than 5MB")
            }).refine((t)=>t ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(t.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: yo.merge(Y.object({
            name: Y.string().optional()
        }))
    }), MM = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(Nk.shape),
            defaultValues: {
                cycles: 1,
                sort: 0,
                limit: 1,
                regionIds: [],
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "name",
                    label: x.jsx(re, {
                        label: "Building name (label)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("name")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "cycles",
                    label: x.jsx(re, {
                        label: "Construction cycles (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Amount of cycles to build this building (hint)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 1,
                        ...s.register("cycles")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "limit",
                    label: x.jsx(re, {
                        label: "Building limit (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Maximum number of building a player can build (hint)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 1,
                        ...s.register("limit")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "sort",
                    label: x.jsx(re, {
                        label: "Blueprint sort (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Sort blueprints by this number (hint)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        min: 0,
                        ...s.register("sort")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "regionIds",
                    label: x.jsx(re, {
                        label: "Regions (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "regionIds",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(xme, {
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "image",
                    label: x.jsx(re, {
                        label: "Building image (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Building image (hint)"
                    }),
                    children: x.jsx("input", {
                        type: "file",
                        className: o.input(),
                        ...s.register("image")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: hr,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, Rl = "icon-[fluent-mdl2--production-floor-management]", bme = ({ id: t, data: e, isConnectable: n })=>{
        const { locale: r } = sn({
            from: "/$locale"
        }), i = Om();
        return x.jsxs("div", {
            className: "min-w-[14rem]",
            onClick: ()=>{
                i({
                    to: "/$locale/apps/derivean/root/editor",
                    params: {
                        locale: r
                    },
                    search: {
                        zoomTo: t
                    }
                });
            },
            onDoubleClick: ()=>{
                i({
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: r,
                        id: t
                    }
                });
            },
            children: [
                x.jsx(wy, {
                    type: "target",
                    position: nn.Left,
                    className: "w-4 h-4"
                }),
                x.jsxs("div", {
                    className: "flex flex-col gap-2 items-start",
                    children: [
                        x.jsx("div", {
                            className: "flex flex-row items-center gap-2",
                            onClick: (s)=>s.stopPropagation(),
                            onDoubleClick: (s)=>s.stopPropagation(),
                            onMouseDown: (s)=>s.stopPropagation(),
                            children: x.jsx(It, {
                                icon: hr,
                                to: "/$locale/apps/derivean/root/blueprint/$id/view",
                                params: {
                                    locale: r,
                                    id: t
                                },
                                children: e.name
                            })
                        }),
                        x.jsxs("div", {
                            className: "flex flex-row items-center justify-between gap-2 border bg-slate-50 border-slate-200 rounded-sm w-full p-1",
                            onClick: (s)=>s.stopPropagation(),
                            onDoubleClick: (s)=>s.stopPropagation(),
                            onMouseDown: (s)=>s.stopPropagation(),
                            children: [
                                x.jsxs("div", {
                                    className: "flex flex-row gap-2",
                                    children: [
                                        x.jsx(It, {
                                            icon: ii,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/requirements",
                                            params: {
                                                locale: r,
                                                id: t
                                            }
                                        }),
                                        x.jsx(It, {
                                            icon: Rl,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/production",
                                            params: {
                                                locale: r,
                                                id: t
                                            }
                                        }),
                                        x.jsx(It, {
                                            icon: Ez,
                                            to: "/$locale/apps/derivean/root/blueprint/$id/edit",
                                            params: {
                                                locale: r,
                                                id: t
                                            }
                                        })
                                    ]
                                }),
                                x.jsx("div", {
                                    children: x.jsx(Fm, {
                                        target: x.jsx(Iw, {
                                            iconEnabled: Bi,
                                            css: {
                                                base: [
                                                    "text-red-500"
                                                ]
                                            }
                                        }),
                                        outside: !0,
                                        textTitle: x.jsx(re, {
                                            label: "Delete blueprint (modal)"
                                        }),
                                        css: {
                                            modal: [
                                                "w-1/3"
                                            ]
                                        },
                                        children: ()=>{
                                            const s = Vr([
                                                [
                                                    "Editor"
                                                ]
                                            ]);
                                            return x.jsx(Ma, {
                                                callback: async ()=>At.transaction().execute(async (o)=>o.deleteFrom("Blueprint").where("id", "=", e.id).execute()),
                                                textContent: x.jsx(re, {
                                                    label: "Delete blueprint (content)"
                                                }),
                                                textToast: "Delete blueprint",
                                                invalidator: s
                                            });
                                        }
                                    })
                                })
                            ]
                        })
                    ]
                }),
                x.jsx(wy, {
                    type: "source",
                    position: nn.Right,
                    isConnectable: n,
                    className: "w-4 h-4"
                })
            ]
        });
    }, wme = ({ nodeId: t })=>{
        const { fitView: e } = Fw();
        return J.useEffect(()=>{
            t && setTimeout(()=>{
                e({
                    nodes: [
                        {
                            id: t
                        }
                    ],
                    duration: 750,
                    minZoom: 1,
                    maxZoom: 1
                });
            }, 50);
        }, [
            t
        ]), null;
    }, _me = ({ data: t, zoomTo: e })=>{
        const n = Vr([]), r = dn({
            async mutationFn ({ blueprintId: i, dependencyId: s }) {
                return At.transaction().execute(async (o)=>o.insertInto("Blueprint_Dependency").values({
                        id: tr(),
                        blueprintId: i,
                        dependencyId: s
                    }).execute());
            },
            async onSuccess () {
                await n();
            }
        });
        return x.jsx("div", {
            className: "w-fit h-fit mx-auto border border-slate-300 rounded-md shadow-md m-8",
            children: x.jsx("div", {
                style: {
                    width: "95vw",
                    height: "85vh"
                },
                children: x.jsxs(qpe, {
                    nodes: t.nodes,
                    edges: t.edges,
                    onConnect: (i)=>{
                        r.mutate({
                            blueprintId: i.target,
                            dependencyId: i.source
                        });
                    },
                    fitView: !0,
                    snapGrid: [
                        16,
                        16
                    ],
                    elementsSelectable: !1,
                    nodeTypes: J.useMemo(()=>({
                            blueprint (i) {
                                return x.jsx(bme, {
                                    ...i
                                });
                            }
                        }), []),
                    edgeTypes: J.useMemo(()=>({
                            dependency ({ id: i, sourceX: s, sourceY: o, targetX: a, targetY: l, sourcePosition: c, targetPosition: u, style: f = {}, markerEnd: h }) {
                                const { setEdges: m } = Fw(), [v, _, w] = Ek({
                                    sourceX: s,
                                    sourceY: o,
                                    sourcePosition: c,
                                    targetX: a,
                                    targetY: l,
                                    targetPosition: u
                                }), b = Vr([]), M = dn({
                                    async mutationFn ({ id: E }) {
                                        return At.transaction().execute(async (T)=>{
                                            await T.deleteFrom("Blueprint_Dependency").where("id", "=", E).execute();
                                        });
                                    },
                                    async onSuccess () {
                                        m((E)=>E.filter((T)=>T.id !== i)), await b();
                                    }
                                });
                                return x.jsxs(x.Fragment, {
                                    children: [
                                        x.jsx(jw, {
                                            path: v,
                                            markerEnd: h,
                                            style: f
                                        }),
                                        x.jsx($pe, {
                                            children: x.jsx("div", {
                                                className: mn("nodrag nopan", [
                                                    "flex",
                                                    "items-center",
                                                    "justify-center",
                                                    "cursor-pointer",
                                                    "bg-red-200",
                                                    "text-red-500",
                                                    "border",
                                                    "border-red-300",
                                                    "hover:border-red-600",
                                                    "hover:bg-red-300",
                                                    "hover:text-red-700",
                                                    "rounded-full",
                                                    "w-4",
                                                    "h-4",
                                                    "z-20"
                                                ]),
                                                style: {
                                                    position: "absolute",
                                                    pointerEvents: "all",
                                                    transformOrigin: "center",
                                                    transform: `translate(-50%, -50%) translate(${_}px,${w}px)`
                                                },
                                                children: x.jsx(_n, {
                                                    icon: M.isPending ? ik : tk,
                                                    onClick: ()=>{
                                                        M.mutate({
                                                            id: i
                                                        });
                                                    }
                                                })
                                            })
                                        })
                                    ]
                                });
                            }
                        }), []),
                    children: [
                        x.jsx(wme, {
                            nodeId: e
                        }),
                        x.jsx(ime, {
                            orientation: "horizontal",
                            showInteractive: !1,
                            showZoom: !1,
                            children: x.jsx(Fm, {
                                target: x.jsx(Iw, {
                                    className: "react-flow__controls-button",
                                    iconEnabled: hr
                                }),
                                outside: !1,
                                textTitle: x.jsx(re, {
                                    label: "Create blueprint (modal)"
                                }),
                                css: {
                                    modal: [
                                        "w-1/3"
                                    ]
                                },
                                children: ({ close: i })=>{
                                    const s = Vr([
                                        [
                                            "Editor"
                                        ]
                                    ]), { locale: o } = sn({
                                        from: "/$locale"
                                    }), a = Om();
                                    return x.jsx(MM, {
                                        mutation: dn({
                                            async mutationFn ({ image: l, regionIds: c, ...u }) {
                                                return At.transaction().execute(async (f)=>{
                                                    const h = await f.insertInto("Blueprint").values({
                                                        id: tr(),
                                                        ...u,
                                                        image: l ? await C9(l) : null
                                                    }).returningAll().executeTakeFirstOrThrow();
                                                    return c?.length && await f.insertInto("Blueprint_Region").values(c.map((m)=>({
                                                            id: tr(),
                                                            blueprintId: h.id,
                                                            regionId: m
                                                        }))).execute(), h;
                                                });
                                            },
                                            async onSuccess (l) {
                                                await s(), a({
                                                    to: "/$locale/apps/derivean/root/editor",
                                                    params: {
                                                        locale: o
                                                    },
                                                    search: {
                                                        zoomTo: l.id
                                                    }
                                                }), i();
                                            }
                                        })
                                    });
                                }
                            })
                        }),
                        x.jsx(gme, {}),
                        x.jsx(Zpe, {
                            variant: Td.Dots,
                            gap: 12,
                            size: 1
                        })
                    ]
                })
            })
        });
    }, Sme = ({ graph: t, nodes: e, edges: n, size: r = {
        width: 344,
        height: 36
    } })=>(t.setGraph({
            rankdir: "LR",
            nodesep: 125,
            edgesep: 65,
            ranksep: 50
        }), e.forEach((i)=>{
            t.setNode(i.id, {
                width: r.width,
                height: r.height
            });
        }), n.forEach((i)=>{
            t.setEdge(i.source, i.target);
        }), A7.layout(t, {}), {
            nodes: e.map((i)=>{
                const s = t.node(i.id);
                return {
                    ...i,
                    targetPosition: "left",
                    sourcePosition: "right",
                    position: {
                        x: s.x - r.width / 2,
                        y: s.y - r.height / 2
                    }
                };
            }),
            edges: n
        }), D3 = Bt("/$locale/apps/derivean/root/editor")({
        validateSearch: Zr(Y.object({
            zoomTo: Y.string().optional()
        })),
        async loader ({ context: { kysely: t } }) {
            const e = (await t.selectFrom("Blueprint").select([
                "id",
                "name",
                "cycles",
                "sort"
            ]).execute()).map((r)=>({
                    id: r.id,
                    position: {
                        x: 0,
                        y: 0
                    },
                    data: r,
                    type: "blueprint"
                })), n = (await t.selectFrom("Blueprint_Dependency").select([
                "id",
                "blueprintId",
                "dependencyId"
            ]).execute()).map(({ id: r, blueprintId: i, dependencyId: s })=>({
                    id: r,
                    source: s,
                    target: i,
                    type: "dependency"
                }));
            return Sme({
                graph: new A7.graphlib.Graph().setDefaultEdgeLabel(()=>({})),
                nodes: [
                    ...e
                ],
                edges: [
                    ...n
                ]
            });
        },
        component () {
            const t = D3.useLoaderData(), { zoomTo: e } = D3.useSearch();
            return x.jsx(_me, {
                data: t,
                zoomTo: e
            });
        }
    }), Eme = ()=>dn({
            mutationKey: [
                "useRegisterMutation"
            ],
            async mutationFn ({ login: t, name: e, password1: n }) {
                return At.transaction().execute(async (r)=>Aw.parse(await r.insertInto("User").values({
                        id: tr(),
                        name: e,
                        login: t,
                        password: h9.hash(n)
                    }).returning([
                        "User.id",
                        "User.name",
                        "User.login"
                    ]).executeTakeFirstOrThrow()));
            }
        }), Mme = Y.object({
        name: Y.string().min(1),
        login: Y.string().min(1),
        password1: Y.string().min(1),
        password2: Y.string().min(1)
    }).refine((t)=>t.password1 === t.password2, {
        message: "Passwords must match",
        path: [
            "password1"
        ]
    }), Tme = ({ onSuccess: t })=>{
        const e = Eme(), n = Cs({
            resolver: Rs(Mme)
        }), r = Ts({
            isLoading: n.formState.isLoading,
            isSubmitting: n.formState.isSubmitting
        }).slots;
        return x.jsxs("form", {
            className: r.base(),
            onSubmit: n.handleSubmit(async (i)=>e.mutateAsync(i, {
                    onSuccess: t,
                    onError: (s)=>{
                        jP({
                            error: s,
                            errors: [
                                gP({
                                    error: s,
                                    schema: FP,
                                    onError: ({ data: o })=>{
                                        n.setError("root", {
                                            message: o.message
                                        });
                                    }
                                })
                            ],
                            onError: (o)=>{
                                n.setError("root", {
                                    message: o.message
                                });
                            }
                        });
                    }
                }).catch(()=>{})),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: n.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: n.formState,
                    name: "name",
                    label: x.jsx(re, {
                        label: "Name (label)"
                    }),
                    children: x.jsx("input", {
                        type: "text",
                        className: r.input(),
                        ...n.register("name")
                    })
                }),
                x.jsx(wn, {
                    formState: n.formState,
                    name: "login",
                    label: x.jsx(re, {
                        label: "Login (label)"
                    }),
                    children: x.jsx("input", {
                        type: "text",
                        className: r.input(),
                        ...n.register("login")
                    })
                }),
                x.jsx(wn, {
                    formState: n.formState,
                    name: "password1",
                    label: x.jsx(re, {
                        label: "Password 1 (label)"
                    }),
                    children: x.jsx("input", {
                        type: "password",
                        className: r.input(),
                        ...n.register("password1")
                    })
                }),
                x.jsx(wn, {
                    formState: n.formState,
                    name: "password2",
                    label: x.jsx(re, {
                        label: "Password 2 (label)"
                    }),
                    children: x.jsx("input", {
                        type: "password",
                        className: r.input(),
                        ...n.register("password2")
                    })
                }),
                x.jsx(zn, {
                    iconEnabled: "icon-[mdi--register-outline]",
                    iconDisabled: "icon-[mdi--register-outline]",
                    type: "submit",
                    children: x.jsx(re, {
                        label: "Register (submit)"
                    })
                })
            ]
        });
    }, Cme = Bt("/$locale/apps/derivean/public/register")({
        component: ()=>{
            const t = Om();
            return x.jsx("div", {
                className: mn([
                    "flex",
                    "justify-center",
                    "h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: x.jsxs("div", {
                    className: "flex flex-col bg-slate-100 p-20 w-1/2 m-10 drop-shadow-xl",
                    children: [
                        x.jsx("hr", {
                            className: "my-12 h-0.5 border-t-0 bg-slate-300"
                        }),
                        x.jsx(Tme, {
                            onSuccess: async (e)=>{
                                jy.set("session", e), await t({
                                    to: "/$locale/apps/derivean/game"
                                });
                            }
                        })
                    ]
                })
            });
        }
    }), Rme = Bt("/$locale/apps/derivean/public/logout")({
        pendingComponent () {
            return x.jsx("div", {
                className: mn([
                    "flex items-center justify-center h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: x.jsx(Hz, {
                    icon: sk,
                    textTitle: x.jsx(re, {
                        label: "Logout (label)"
                    }),
                    textMessage: x.jsx(re, {
                        label: "Logout in progress..."
                    }),
                    css: {
                        base: [
                            "p-4",
                            "bg-slate-200",
                            "rounded-sm"
                        ]
                    }
                })
            });
        },
        async loader ({ params: { locale: t } }) {
            throw jy.remove("session"), dw({
                to: "/$locale/apps/derivean/public/login",
                params: {
                    locale: t
                }
            });
        }
    }), Ime = ()=>dn({
            mutationKey: [
                "useLoginMutation"
            ],
            async mutationFn ({ login: t, password: e }) {
                return At.transaction().execute(async (n)=>{
                    const r = await n.selectFrom("User as u").select([
                        "u.id",
                        "u.login",
                        "u.name"
                    ]).where("u.login", "=", t).where("u.password", "=", h9.hash(e)).executeTakeFirstOrThrow();
                    return {
                        id: r.id,
                        login: r.login,
                        name: r.name
                    };
                });
            }
        }), Ame = Y.object({
        login: Y.string().min(1),
        password: Y.string().min(1)
    }), Nme = ({ onSuccess: t })=>{
        const { locale: e } = sn({
            from: "/$locale"
        }), n = Ime(), r = Cs({
            resolver: Rs(Ame)
        }), i = Ts({
            isLoading: r.formState.isLoading,
            isSubmitting: r.formState.isSubmitting
        }).slots;
        return x.jsxs("form", {
            className: i.base(),
            onSubmit: r.handleSubmit(async (s)=>n.mutateAsync(s, {
                    onSuccess: t,
                    onError: (o)=>{
                        jP({
                            error: o,
                            errors: [
                                gP({
                                    error: o,
                                    schema: FP,
                                    onError: ({ data: a })=>{
                                        r.setError("root", {
                                            message: a.message
                                        });
                                    }
                                })
                            ],
                            onError: (a)=>{
                                r.setError("root", {
                                    message: a.message
                                });
                            }
                        });
                    }
                }).catch(()=>{})),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: r.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: r.formState,
                    name: "login",
                    label: x.jsx(re, {
                        label: "Login (label)"
                    }),
                    children: x.jsx("input", {
                        type: "text",
                        className: i.input(),
                        ...r.register("login")
                    })
                }),
                x.jsx(wn, {
                    formState: r.formState,
                    name: "password",
                    label: x.jsx(re, {
                        label: "Password (label)"
                    }),
                    children: x.jsx("input", {
                        type: "password",
                        className: i.input(),
                        ...r.register("password")
                    })
                }),
                x.jsxs("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: [
                        x.jsx(It, {
                            icon: "icon-[mdi--register-outline]",
                            to: "/$locale/apps/derivean/public/register",
                            params: {
                                locale: e
                            },
                            children: x.jsx(re, {
                                label: "Register (link)"
                            })
                        }),
                        x.jsx(zn, {
                            iconEnabled: "icon-[uiw--login]",
                            iconDisabled: "icon-[uiw--login]",
                            type: "submit",
                            children: x.jsx(re, {
                                label: "Login (submit)"
                            })
                        })
                    ]
                })
            ]
        });
    }, Pme = Bt("/$locale/apps/derivean/public/login")({
        component: ()=>{
            const t = Om();
            return x.jsx("div", {
                className: mn([
                    "flex",
                    "justify-center",
                    "h-screen",
                    "bg-linear-to-tr",
                    "from-blue-700",
                    "to-blue-400"
                ]),
                children: x.jsxs("div", {
                    className: "flex flex-col bg-slate-100 p-20 w-1/2 m-10 drop-shadow-xl",
                    children: [
                        x.jsx("hr", {
                            className: "my-12 h-0.5 border-t-0 bg-slate-300"
                        }),
                        x.jsx(Nme, {
                            onSuccess: async (e)=>{
                                jy.set("session", e), await t({
                                    to: "/$locale/apps/derivean/game"
                                });
                            }
                        })
                    ]
                })
            });
        }
    }), kme = [
        {}
    ];
    class Hb {
        constructor(e, n){
            this.max = e, this._seed = n;
        }
        cast(e, n) {
            return BigInt.asUintN(n, e);
        }
        checkNum(e) {
            if (e > this.max) throw new Error(`Number greater than ${this.max}`);
        }
        reset() {
            if (this.constructor === Hb) throw new Error("Method not implemented");
        }
        _int() {
            if (this.constructor === Hb) throw new Error("Method not implemented");
            return BigInt(0);
        }
        bool() {
            return this.float() >= .5;
        }
        coin(e = .5) {
            return this.float() < e;
        }
        int() {
            return Number(this._int());
        }
        bigInt() {
            return this._int();
        }
        float() {
            return this.int() * (1 / this.max);
        }
        float53() {
            const e = this.int() >>> 5, n = this.int() >>> 6;
            return (e * 67108864 + n) * (1 / 9007199254740992);
        }
        randRange(e, n) {
            const r = n - e, i = this.max % r;
            let s = this.int();
            for(; s < i;)s = this.int();
            return e + s % r;
        }
        randBelow(e) {
            return this.randRange(0, e);
        }
        choice(e) {
            return e[this.randBelow(e.length)];
        }
        shuffle(e, n = !0) {
            let r = e;
            n || (r = Array.from(r));
            for(let i = r.length - 1; i > 0; i--){
                const s = this.randRange(0, i), o = r[i];
                r[i] = r[s], r[s] = o;
            }
            return r;
        }
        initArray(e, n) {
            return Array.from({
                length: e
            }, n);
        }
        boolArray(e) {
            return this.initArray(e, ()=>this.bool());
        }
        coinArray(e, n = .5) {
            return this.initArray(e, ()=>this.coin(n));
        }
        intArray(e) {
            return this.initArray(e, ()=>this.int());
        }
        bigIntArray(e) {
            return this.initArray(e, ()=>this.bigInt());
        }
        randRangeArray(e, n, r) {
            return this.initArray(e, ()=>this.randRange(n, r));
        }
        floatArray(e) {
            return this.initArray(e, ()=>this.float());
        }
        float53Array(e) {
            return this.initArray(e, ()=>this.float53());
        }
    }
    class Ome extends Hb {
        constructor(e, n){
            super(e, n);
        }
        int() {
            return Number(this._int() >> 11n);
        }
        float() {
            return this.int() / this.max;
        }
        float53() {
            return this.float();
        }
    }
    const Dme = 2 ** 32, Lme = 2 ** 53;
    class pW extends Ome {
        constructor(e = Date.now(), n = 13, r = 7, i = 17){
            super(Lme, BigInt(e)), this.seed = e, this.a = this.cast(BigInt(n), 64), this.b = this.cast(BigInt(r), 64), this.c = this.cast(BigInt(i), 64);
        }
        reset() {
            this.x = this.seed;
        }
        get seed() {
            return this._seed;
        }
        set seed(e) {
            this._seed = this.cast(BigInt(e), 64), this.x = this._seed;
        }
        _int() {
            let { x: e } = this;
            return e ^= e << this.a, e = this.cast(e, 64), e ^= e >> this.b, e ^= e << this.c, e = this.cast(e, 64), this.x = e, e;
        }
    }
    class Fme extends Hb {
        constructor(e = Date.now(), n = 362436069, r = 521288629, i = 88675123, s = 5783321, o = 6615241, a = 362437){
            super(Dme, BigInt(e)), this._seed = this.cast(this._seed, 32), this.x = this._seed, this.y = this.cast(BigInt(n), 32), this.z = this.cast(BigInt(r), 32), this.w = this.cast(BigInt(i), 32), this.v = this.cast(BigInt(s), 32), this.d = this.cast(BigInt(o), 32), this.weyl = this.cast(BigInt(a), 32), this.origParams = {
                y: this.y,
                z: this.z,
                w: this.w,
                v: this.v,
                d: this.d
            };
        }
        reset() {
            this.x = this.seed, Object.assign(this, this.origParams);
        }
        get seed() {
            return this._seed;
        }
        set seed(e) {
            this._seed = this.cast(BigInt(e), 32), this.reset();
        }
        _int() {
            let e = this.x, { v: n } = this;
            return e ^= e >> 2n, e ^= e << 1n, n ^= n << 4n, this.x = this.y, this.y = this.z, this.z = this.w, this.w = this.v, this.v = this.cast(n ^ e, 32), this.d += this.weyl, this.cast(this.d + this.v, 32);
        }
    }
    new pW(Date.now());
    new pW(Date.now());
    const Gc = ({ seed: t, type: e = $C.NoiseType.Perlin, frequency: n = 1, domain: r, fractal: i, cellular: s })=>{
        const o = new Fme(cne(t)), a = new $C(o.float());
        return a.SetNoiseType(e), a.SetFrequency(n), r && (a.SetDomainWarpType(r.type), r.amp !== void 0 && a.SetDomainWarpAmp(r.amp)), i && (a.SetFractalType(i.type), i.octaves !== void 0 && a.SetFractalOctaves(i.octaves), i.gain !== void 0 && a.SetFractalGain(i.gain), i.lacunarity !== void 0 && a.SetFractalLacunarity(i.lacunarity), i.pingPongStrength !== void 0 && a.SetFractalPingPongStrength(i.pingPongStrength), i.weightedStrength !== void 0 && a.SetFractalWeightedStrength(i.weightedStrength)), s && (a.SetNoiseType($C.NoiseType.Cellular), s.distanceFunction && a.SetCellularDistanceFunction(s.distanceFunction), s.returnType && a.SetCellularReturnType(s.returnType)), (l, c)=>a.GetNoise(l, c);
    }, W6 = (t, e, n, r)=>{
        const i = r.filter((o)=>!o.disabled).map(({ noise: o, name: a })=>o(`${n}-${a}`)), s = r.filter((o)=>!o.disabled).reduce((o, { scale: a, inverse: l, weight: c, limit: u }, f)=>{
            let h = i[f](t * a, e * a);
            return c && (h *= c), l && (h *= -1), u && (u.min !== void 0 && (h = Math.max(u.min, h)), u.max !== void 0 && (h = Math.min(u.max, h))), h = o + h, h;
        }, 0);
        return Math.max(-1, Math.min(1, s));
    }, Zv = ({ seed: t, layers: e, variation: n = [] })=>(r, i)=>{
            let s = W6(r, i, t, e);
            const o = n.find(({ min: a, max: l })=>a <= s && s <= l);
            if (o) {
                const a = W6(r, i, t, o.layers);
                s = one({
                    value: a,
                    input: {
                        min: -1,
                        max: 1
                    },
                    output: o
                }) * o.weight;
            }
            return Math.max(-1, Math.min(1, s));
        }, jme = ({ seed: t })=>({
            biome: Zv({
                seed: `${t}-biome`,
                layers: [
                    {
                        name: "base-continental",
                        scale: .5,
                        weight: 1,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .05,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 3,
                                    lacunarity: 2,
                                    gain: .5
                                }
                            });
                        }
                    },
                    {
                        name: "detail",
                        scale: 2,
                        weight: .3,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .1,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 2
                                }
                            });
                        }
                    }
                ]
            }),
            heightmap: Zv({
                seed: `${t}-heightmap`,
                layers: [
                    {
                        name: "base-terrain",
                        scale: 1,
                        noise (e) {
                            const n = Gc({
                                seed: e,
                                frequency: .03,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 4,
                                    lacunarity: 2,
                                    gain: .5
                                }
                            }), r = Gc({
                                seed: `${e}-ridge`,
                                frequency: .06,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "Ridged",
                                    octaves: 3,
                                    gain: .6
                                }
                            });
                            return (i, s)=>{
                                const o = n(i, s) * .7, a = r(i, s) * .5;
                                return o + a * a * Math.sign(a);
                            };
                        }
                    },
                    {
                        name: "erosion",
                        scale: 3,
                        weight: .2,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .1,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 2
                                }
                            });
                        }
                    }
                ]
            }),
            temperature: Zv({
                seed: `${t}-temperature`,
                layers: [
                    {
                        name: "latitude",
                        scale: .2,
                        weight: 1,
                        noise (e) {
                            return (n, r)=>{
                                const i = Math.sin(r * .02) * .8, s = Gc({
                                    seed: e,
                                    frequency: .01,
                                    type: "OpenSimplex2"
                                })(n, r) * .2;
                                return i + s;
                            };
                        }
                    },
                    {
                        name: "local-variation",
                        scale: 2,
                        weight: .25,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .07,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 2
                                }
                            });
                        }
                    }
                ]
            }),
            moisture: Zv({
                seed: `${t}-moisture`,
                layers: [
                    {
                        name: "base-moisture",
                        scale: .8,
                        weight: 1,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .05,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 3,
                                    lacunarity: 2,
                                    gain: .6
                                }
                            });
                        }
                    },
                    {
                        name: "local-humidity",
                        scale: 2,
                        weight: .4,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .08,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 2
                                }
                            });
                        }
                    }
                ]
            }),
            shade: Zv({
                seed: `${t}-shade`,
                layers: [
                    {
                        name: "microvariation",
                        scale: 5,
                        weight: 1,
                        noise (e) {
                            return Gc({
                                seed: e,
                                frequency: .2,
                                type: "OpenSimplex2",
                                fractal: {
                                    type: "FBm",
                                    octaves: 2,
                                    gain: .4
                                }
                            });
                        }
                    }
                ]
            })
        }), Bme = {
        maxZoom: 1,
        minZoom: .001,
        plotSize: 16,
        plotCount: 256,
        chunkSize: 16 * 256,
        chunkLimit: 2048,
        source: jme,
        colorMap: kme,
        layers: [
            {
                min: .001,
                max: .0025,
                level: 64,
                offset: 4
            },
            {
                min: .0025,
                max: .005,
                level: 16,
                offset: 4
            },
            {
                min: .005,
                max: .015,
                level: 8,
                offset: 4
            },
            {
                min: .015,
                max: .025,
                level: 4,
                offset: 4
            },
            {
                min: .025,
                max: .04,
                level: 2,
                offset: 4
            },
            {
                min: .04,
                max: 1,
                level: 1,
                offset: 4
            }
        ]
    }, Ume = ()=>tJ();
    function L3() {
        return L3 = Object.assign ? Object.assign.bind() : function(t) {
            for(var e = 1; e < arguments.length; e++){
                var n = arguments[e];
                for(var r in n)({}).hasOwnProperty.call(n, r) && (t[r] = n[r]);
            }
            return t;
        }, L3.apply(null, arguments);
    }
    const d2 = "173", Hf = {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2
    }, yd = {
        ROTATE: 0,
        PAN: 1,
        DOLLY_PAN: 2,
        DOLLY_ROTATE: 3
    }, mW = 0, F3 = 1, gW = 2, zme = 3, yW = 0, f2 = 1, Zx = 2, oc = 3, Ld = 0, Wo = 1, eu = 2, Cd = 0, um = 1, j3 = 2, B3 = 3, U3 = 4, vW = 5, Qf = 100, xW = 101, bW = 102, wW = 103, _W = 104, SW = 200, EW = 201, MW = 202, TW = 203, TM = 204, CM = 205, CW = 206, RW = 207, IW = 208, AW = 209, NW = 210, PW = 211, kW = 212, OW = 213, DW = 214, RM = 0, IM = 1, AM = 2, Rm = 3, NM = 4, PM = 5, kM = 6, OM = 7, Bw = 0, LW = 1, FW = 2, lu = 0, jW = 1, BW = 2, UW = 3, h2 = 4, zW = 5, VW = 6, WW = 7, z3 = "attached", qW = "detached", p2 = 300, Fd = 301, _h = 302, $b = 303, Gb = 304, zy = 306, Xb = 1e3, Tl = 1001, Kb = 1002, qs = 1003, Pk = 1004, Vme = 1004, O0 = 1005, Wme = 1005, ds = 1006, Jx = 1007, qme = 1007, ru = 1008, Hme = 1008, _c = 1009, kk = 1010, Ok = 1011, Sy = 1012, m2 = 1013, jd = 1014, xa = 1015, Vy = 1016, g2 = 1017, y2 = 1018, Im = 1020, Dk = 35902, Lk = 1021, Fk = 1022, lo = 1023, jk = 1024, Bk = 1025, dm = 1026, Am = 1027, v2 = 1028, Uw = 1029, Uk = 1030, x2 = 1031, $me = 1032, b2 = 1033, Qx = 33776, eb = 33777, tb = 33778, nb = 33779, DM = 35840, LM = 35841, FM = 35842, jM = 35843, BM = 36196, UM = 37492, zM = 37496, VM = 37808, WM = 37809, qM = 37810, HM = 37811, $M = 37812, GM = 37813, XM = 37814, KM = 37815, YM = 37816, ZM = 37817, JM = 37818, QM = 37819, eT = 37820, tT = 37821, rb = 36492, nT = 36494, rT = 36495, zk = 36283, iT = 36284, sT = 36285, oT = 36286, HW = 2200, $W = 2201, GW = 2202, Yb = 2300, aT = 2301, XS = 2302, nm = 2400, rm = 2401, Zb = 2402, w2 = 2500, Vk = 2501, Gme = 0, Xme = 1, Kme = 2, XW = 3200, KW = 3201, Yme = 3202, Zme = 3203, Ch = 0, YW = 1, xd = "", ma = "srgb", Nm = "srgb-linear", Jb = "linear", br = "srgb", Jme = 0, zp = 7680, Qme = 7681, ege = 7682, tge = 7683, nge = 34055, rge = 34056, ige = 5386, sge = 512, oge = 513, age = 514, lge = 515, cge = 516, uge = 517, dge = 518, V3 = 519, ZW = 512, JW = 513, QW = 514, Wk = 515, eq = 516, tq = 517, nq = 518, rq = 519, Qb = 35044, fge = 35048, hge = 35040, pge = 35045, mge = 35049, gge = 35041, yge = 35046, vge = 35050, xge = 35042, bge = "100", W3 = "300 es", gc = 2e3, ew = 2001, wge = {
        COMPUTE: "compute",
        RENDER: "render"
    };
    let vu = class {
        addEventListener(e, n) {
            this._listeners === void 0 && (this._listeners = {});
            const r = this._listeners;
            r[e] === void 0 && (r[e] = []), r[e].indexOf(n) === -1 && r[e].push(n);
        }
        hasEventListener(e, n) {
            const r = this._listeners;
            return r === void 0 ? !1 : r[e] !== void 0 && r[e].indexOf(n) !== -1;
        }
        removeEventListener(e, n) {
            const r = this._listeners;
            if (r === void 0) return;
            const i = r[e];
            if (i !== void 0) {
                const s = i.indexOf(n);
                s !== -1 && i.splice(s, 1);
            }
        }
        dispatchEvent(e) {
            const n = this._listeners;
            if (n === void 0) return;
            const r = n[e.type];
            if (r !== void 0) {
                e.target = this;
                const i = r.slice(0);
                for(let s = 0, o = i.length; s < o; s++)i[s].call(this, e);
                e.target = null;
            }
        }
    };
    const no = [
        "00",
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "0a",
        "0b",
        "0c",
        "0d",
        "0e",
        "0f",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "1a",
        "1b",
        "1c",
        "1d",
        "1e",
        "1f",
        "20",
        "21",
        "22",
        "23",
        "24",
        "25",
        "26",
        "27",
        "28",
        "29",
        "2a",
        "2b",
        "2c",
        "2d",
        "2e",
        "2f",
        "30",
        "31",
        "32",
        "33",
        "34",
        "35",
        "36",
        "37",
        "38",
        "39",
        "3a",
        "3b",
        "3c",
        "3d",
        "3e",
        "3f",
        "40",
        "41",
        "42",
        "43",
        "44",
        "45",
        "46",
        "47",
        "48",
        "49",
        "4a",
        "4b",
        "4c",
        "4d",
        "4e",
        "4f",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "57",
        "58",
        "59",
        "5a",
        "5b",
        "5c",
        "5d",
        "5e",
        "5f",
        "60",
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "68",
        "69",
        "6a",
        "6b",
        "6c",
        "6d",
        "6e",
        "6f",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "76",
        "77",
        "78",
        "79",
        "7a",
        "7b",
        "7c",
        "7d",
        "7e",
        "7f",
        "80",
        "81",
        "82",
        "83",
        "84",
        "85",
        "86",
        "87",
        "88",
        "89",
        "8a",
        "8b",
        "8c",
        "8d",
        "8e",
        "8f",
        "90",
        "91",
        "92",
        "93",
        "94",
        "95",
        "96",
        "97",
        "98",
        "99",
        "9a",
        "9b",
        "9c",
        "9d",
        "9e",
        "9f",
        "a0",
        "a1",
        "a2",
        "a3",
        "a4",
        "a5",
        "a6",
        "a7",
        "a8",
        "a9",
        "aa",
        "ab",
        "ac",
        "ad",
        "ae",
        "af",
        "b0",
        "b1",
        "b2",
        "b3",
        "b4",
        "b5",
        "b6",
        "b7",
        "b8",
        "b9",
        "ba",
        "bb",
        "bc",
        "bd",
        "be",
        "bf",
        "c0",
        "c1",
        "c2",
        "c3",
        "c4",
        "c5",
        "c6",
        "c7",
        "c8",
        "c9",
        "ca",
        "cb",
        "cc",
        "cd",
        "ce",
        "cf",
        "d0",
        "d1",
        "d2",
        "d3",
        "d4",
        "d5",
        "d6",
        "d7",
        "d8",
        "d9",
        "da",
        "db",
        "dc",
        "dd",
        "de",
        "df",
        "e0",
        "e1",
        "e2",
        "e3",
        "e4",
        "e5",
        "e6",
        "e7",
        "e8",
        "e9",
        "ea",
        "eb",
        "ec",
        "ed",
        "ee",
        "ef",
        "f0",
        "f1",
        "f2",
        "f3",
        "f4",
        "f5",
        "f6",
        "f7",
        "f8",
        "f9",
        "fa",
        "fb",
        "fc",
        "fd",
        "fe",
        "ff"
    ];
    let q6 = 1234567;
    const fm = Math.PI / 180, Ey = 180 / Math.PI;
    function Ya() {
        const t = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0, r = Math.random() * 4294967295 | 0;
        return (no[t & 255] + no[t >> 8 & 255] + no[t >> 16 & 255] + no[t >> 24 & 255] + "-" + no[e & 255] + no[e >> 8 & 255] + "-" + no[e >> 16 & 15 | 64] + no[e >> 24 & 255] + "-" + no[n & 63 | 128] + no[n >> 8 & 255] + "-" + no[n >> 16 & 255] + no[n >> 24 & 255] + no[r & 255] + no[r >> 8 & 255] + no[r >> 16 & 255] + no[r >> 24 & 255]).toLowerCase();
    }
    function Cn(t, e, n) {
        return Math.max(e, Math.min(n, t));
    }
    function qk(t, e) {
        return (t % e + e) % e;
    }
    function _ge(t, e, n, r, i) {
        return r + (t - e) * (i - r) / (n - e);
    }
    function Sge(t, e, n) {
        return t !== e ? (n - t) / (e - t) : 0;
    }
    function ib(t, e, n) {
        return (1 - n) * t + n * e;
    }
    function Ege(t, e, n, r) {
        return ib(t, e, 1 - Math.exp(-n * r));
    }
    function Mge(t, e = 1) {
        return e - Math.abs(qk(t, e * 2) - e);
    }
    function Tge(t, e, n) {
        return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e), t * t * (3 - 2 * t));
    }
    function Cge(t, e, n) {
        return t <= e ? 0 : t >= n ? 1 : (t = (t - e) / (n - e), t * t * t * (t * (t * 6 - 15) + 10));
    }
    function Rge(t, e) {
        return t + Math.floor(Math.random() * (e - t + 1));
    }
    function Ige(t, e) {
        return t + Math.random() * (e - t);
    }
    function Age(t) {
        return t * (.5 - Math.random());
    }
    function Nge(t) {
        t !== void 0 && (q6 = t);
        let e = q6 += 1831565813;
        return e = Math.imul(e ^ e >>> 15, e | 1), e ^= e + Math.imul(e ^ e >>> 7, e | 61), ((e ^ e >>> 14) >>> 0) / 4294967296;
    }
    function Pge(t) {
        return t * fm;
    }
    function kge(t) {
        return t * Ey;
    }
    function Oge(t) {
        return (t & t - 1) === 0 && t !== 0;
    }
    function Dge(t) {
        return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
    }
    function Lge(t) {
        return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
    }
    function Fge(t, e, n, r, i) {
        const s = Math.cos, o = Math.sin, a = s(n / 2), l = o(n / 2), c = s((e + r) / 2), u = o((e + r) / 2), f = s((e - r) / 2), h = o((e - r) / 2), m = s((r - e) / 2), v = o((r - e) / 2);
        switch(i){
            case "XYX":
                t.set(a * u, l * f, l * h, a * c);
                break;
            case "YZY":
                t.set(l * h, a * u, l * f, a * c);
                break;
            case "ZXZ":
                t.set(l * f, l * h, a * u, a * c);
                break;
            case "XZX":
                t.set(a * u, l * v, l * m, a * c);
                break;
            case "YXY":
                t.set(l * m, a * u, l * v, a * c);
                break;
            case "ZYZ":
                t.set(l * v, l * m, a * u, a * c);
                break;
            default:
                console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
        }
    }
    function Vo(t, e) {
        switch(e.constructor){
            case Float32Array:
                return t;
            case Uint32Array:
                return t / 4294967295;
            case Uint16Array:
                return t / 65535;
            case Uint8Array:
                return t / 255;
            case Int32Array:
                return Math.max(t / 2147483647, -1);
            case Int16Array:
                return Math.max(t / 32767, -1);
            case Int8Array:
                return Math.max(t / 127, -1);
            default:
                throw new Error("Invalid component type.");
        }
    }
    function kn(t, e) {
        switch(e.constructor){
            case Float32Array:
                return t;
            case Uint32Array:
                return Math.round(t * 4294967295);
            case Uint16Array:
                return Math.round(t * 65535);
            case Uint8Array:
                return Math.round(t * 255);
            case Int32Array:
                return Math.round(t * 2147483647);
            case Int16Array:
                return Math.round(t * 32767);
            case Int8Array:
                return Math.round(t * 127);
            default:
                throw new Error("Invalid component type.");
        }
    }
    const jge = {
        DEG2RAD: fm,
        RAD2DEG: Ey,
        generateUUID: Ya,
        clamp: Cn,
        euclideanModulo: qk,
        mapLinear: _ge,
        inverseLerp: Sge,
        lerp: ib,
        damp: Ege,
        pingpong: Mge,
        smoothstep: Tge,
        smootherstep: Cge,
        randInt: Rge,
        randFloat: Ige,
        randFloatSpread: Age,
        seededRandom: Nge,
        degToRad: Pge,
        radToDeg: kge,
        isPowerOfTwo: Oge,
        ceilPowerOfTwo: Dge,
        floorPowerOfTwo: Lge,
        setQuaternionFromProperEuler: Fge,
        normalize: kn,
        denormalize: Vo
    };
    class ot {
        constructor(e = 0, n = 0){
            ot.prototype.isVector2 = !0, this.x = e, this.y = n;
        }
        get width() {
            return this.x;
        }
        set width(e) {
            this.x = e;
        }
        get height() {
            return this.y;
        }
        set height(e) {
            this.y = e;
        }
        set(e, n) {
            return this.x = e, this.y = n, this;
        }
        setScalar(e) {
            return this.x = e, this.y = e, this;
        }
        setX(e) {
            return this.x = e, this;
        }
        setY(e) {
            return this.y = e, this;
        }
        setComponent(e, n) {
            switch(e){
                case 0:
                    this.x = n;
                    break;
                case 1:
                    this.y = n;
                    break;
                default:
                    throw new Error("index is out of range: " + e);
            }
            return this;
        }
        getComponent(e) {
            switch(e){
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                default:
                    throw new Error("index is out of range: " + e);
            }
        }
        clone() {
            return new this.constructor(this.x, this.y);
        }
        copy(e) {
            return this.x = e.x, this.y = e.y, this;
        }
        add(e) {
            return this.x += e.x, this.y += e.y, this;
        }
        addScalar(e) {
            return this.x += e, this.y += e, this;
        }
        addVectors(e, n) {
            return this.x = e.x + n.x, this.y = e.y + n.y, this;
        }
        addScaledVector(e, n) {
            return this.x += e.x * n, this.y += e.y * n, this;
        }
        sub(e) {
            return this.x -= e.x, this.y -= e.y, this;
        }
        subScalar(e) {
            return this.x -= e, this.y -= e, this;
        }
        subVectors(e, n) {
            return this.x = e.x - n.x, this.y = e.y - n.y, this;
        }
        multiply(e) {
            return this.x *= e.x, this.y *= e.y, this;
        }
        multiplyScalar(e) {
            return this.x *= e, this.y *= e, this;
        }
        divide(e) {
            return this.x /= e.x, this.y /= e.y, this;
        }
        divideScalar(e) {
            return this.multiplyScalar(1 / e);
        }
        applyMatrix3(e) {
            const n = this.x, r = this.y, i = e.elements;
            return this.x = i[0] * n + i[3] * r + i[6], this.y = i[1] * n + i[4] * r + i[7], this;
        }
        min(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
        }
        max(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
        }
        clamp(e, n) {
            return this.x = Cn(this.x, e.x, n.x), this.y = Cn(this.y, e.y, n.y), this;
        }
        clampScalar(e, n) {
            return this.x = Cn(this.x, e, n), this.y = Cn(this.y, e, n), this;
        }
        clampLength(e, n) {
            const r = this.length();
            return this.divideScalar(r || 1).multiplyScalar(Cn(r, e, n));
        }
        floor() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
        }
        ceil() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
        }
        round() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
        }
        roundToZero() {
            return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this;
        }
        negate() {
            return this.x = -this.x, this.y = -this.y, this;
        }
        dot(e) {
            return this.x * e.x + this.y * e.y;
        }
        cross(e) {
            return this.x * e.y - this.y * e.x;
        }
        lengthSq() {
            return this.x * this.x + this.y * this.y;
        }
        length() {
            return Math.sqrt(this.x * this.x + this.y * this.y);
        }
        manhattanLength() {
            return Math.abs(this.x) + Math.abs(this.y);
        }
        normalize() {
            return this.divideScalar(this.length() || 1);
        }
        angle() {
            return Math.atan2(-this.y, -this.x) + Math.PI;
        }
        angleTo(e) {
            const n = Math.sqrt(this.lengthSq() * e.lengthSq());
            if (n === 0) return Math.PI / 2;
            const r = this.dot(e) / n;
            return Math.acos(Cn(r, -1, 1));
        }
        distanceTo(e) {
            return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
            const n = this.x - e.x, r = this.y - e.y;
            return n * n + r * r;
        }
        manhattanDistanceTo(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
        }
        setLength(e) {
            return this.normalize().multiplyScalar(e);
        }
        lerp(e, n) {
            return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this;
        }
        lerpVectors(e, n, r) {
            return this.x = e.x + (n.x - e.x) * r, this.y = e.y + (n.y - e.y) * r, this;
        }
        equals(e) {
            return e.x === this.x && e.y === this.y;
        }
        fromArray(e, n = 0) {
            return this.x = e[n], this.y = e[n + 1], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.x, e[n + 1] = this.y, e;
        }
        fromBufferAttribute(e, n) {
            return this.x = e.getX(n), this.y = e.getY(n), this;
        }
        rotateAround(e, n) {
            const r = Math.cos(n), i = Math.sin(n), s = this.x - e.x, o = this.y - e.y;
            return this.x = s * r - o * i + e.x, this.y = s * i + o * r + e.y, this;
        }
        random() {
            return this.x = Math.random(), this.y = Math.random(), this;
        }
        *[Symbol.iterator]() {
            yield this.x, yield this.y;
        }
    }
    class An {
        constructor(e, n, r, i, s, o, a, l, c){
            An.prototype.isMatrix3 = !0, this.elements = [
                1,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1
            ], e !== void 0 && this.set(e, n, r, i, s, o, a, l, c);
        }
        set(e, n, r, i, s, o, a, l, c) {
            const u = this.elements;
            return u[0] = e, u[1] = i, u[2] = a, u[3] = n, u[4] = s, u[5] = l, u[6] = r, u[7] = o, u[8] = c, this;
        }
        identity() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        }
        copy(e) {
            const n = this.elements, r = e.elements;
            return n[0] = r[0], n[1] = r[1], n[2] = r[2], n[3] = r[3], n[4] = r[4], n[5] = r[5], n[6] = r[6], n[7] = r[7], n[8] = r[8], this;
        }
        extractBasis(e, n, r) {
            return e.setFromMatrix3Column(this, 0), n.setFromMatrix3Column(this, 1), r.setFromMatrix3Column(this, 2), this;
        }
        setFromMatrix4(e) {
            const n = e.elements;
            return this.set(n[0], n[4], n[8], n[1], n[5], n[9], n[2], n[6], n[10]), this;
        }
        multiply(e) {
            return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
            return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, n) {
            const r = e.elements, i = n.elements, s = this.elements, o = r[0], a = r[3], l = r[6], c = r[1], u = r[4], f = r[7], h = r[2], m = r[5], v = r[8], _ = i[0], w = i[3], b = i[6], M = i[1], E = i[4], T = i[7], P = i[2], A = i[5], O = i[8];
            return s[0] = o * _ + a * M + l * P, s[3] = o * w + a * E + l * A, s[6] = o * b + a * T + l * O, s[1] = c * _ + u * M + f * P, s[4] = c * w + u * E + f * A, s[7] = c * b + u * T + f * O, s[2] = h * _ + m * M + v * P, s[5] = h * w + m * E + v * A, s[8] = h * b + m * T + v * O, this;
        }
        multiplyScalar(e) {
            const n = this.elements;
            return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= e, n[4] *= e, n[7] *= e, n[2] *= e, n[5] *= e, n[8] *= e, this;
        }
        determinant() {
            const e = this.elements, n = e[0], r = e[1], i = e[2], s = e[3], o = e[4], a = e[5], l = e[6], c = e[7], u = e[8];
            return n * o * u - n * a * c - r * s * u + r * a * l + i * s * c - i * o * l;
        }
        invert() {
            const e = this.elements, n = e[0], r = e[1], i = e[2], s = e[3], o = e[4], a = e[5], l = e[6], c = e[7], u = e[8], f = u * o - a * c, h = a * l - u * s, m = c * s - o * l, v = n * f + r * h + i * m;
            if (v === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
            const _ = 1 / v;
            return e[0] = f * _, e[1] = (i * c - u * r) * _, e[2] = (a * r - i * o) * _, e[3] = h * _, e[4] = (u * n - i * l) * _, e[5] = (i * s - a * n) * _, e[6] = m * _, e[7] = (r * l - c * n) * _, e[8] = (o * n - r * s) * _, this;
        }
        transpose() {
            let e;
            const n = this.elements;
            return e = n[1], n[1] = n[3], n[3] = e, e = n[2], n[2] = n[6], n[6] = e, e = n[5], n[5] = n[7], n[7] = e, this;
        }
        getNormalMatrix(e) {
            return this.setFromMatrix4(e).invert().transpose();
        }
        transposeIntoArray(e) {
            const n = this.elements;
            return e[0] = n[0], e[1] = n[3], e[2] = n[6], e[3] = n[1], e[4] = n[4], e[5] = n[7], e[6] = n[2], e[7] = n[5], e[8] = n[8], this;
        }
        setUvTransform(e, n, r, i, s, o, a) {
            const l = Math.cos(s), c = Math.sin(s);
            return this.set(r * l, r * c, -r * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + n, 0, 0, 1), this;
        }
        scale(e, n) {
            return this.premultiply(pA.makeScale(e, n)), this;
        }
        rotate(e) {
            return this.premultiply(pA.makeRotation(-e)), this;
        }
        translate(e, n) {
            return this.premultiply(pA.makeTranslation(e, n)), this;
        }
        makeTranslation(e, n) {
            return e.isVector2 ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1) : this.set(1, 0, e, 0, 1, n, 0, 0, 1), this;
        }
        makeRotation(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(n, -r, 0, r, n, 0, 0, 0, 1), this;
        }
        makeScale(e, n) {
            return this.set(e, 0, 0, 0, n, 0, 0, 0, 1), this;
        }
        equals(e) {
            const n = this.elements, r = e.elements;
            for(let i = 0; i < 9; i++)if (n[i] !== r[i]) return !1;
            return !0;
        }
        fromArray(e, n = 0) {
            for(let r = 0; r < 9; r++)this.elements[r] = e[r + n];
            return this;
        }
        toArray(e = [], n = 0) {
            const r = this.elements;
            return e[n] = r[0], e[n + 1] = r[1], e[n + 2] = r[2], e[n + 3] = r[3], e[n + 4] = r[4], e[n + 5] = r[5], e[n + 6] = r[6], e[n + 7] = r[7], e[n + 8] = r[8], e;
        }
        clone() {
            return new this.constructor().fromArray(this.elements);
        }
    }
    const pA = new An;
    function iq(t) {
        for(let e = t.length - 1; e >= 0; --e)if (t[e] >= 65535) return !0;
        return !1;
    }
    const Bge = {
        Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array
    };
    function D0(t, e) {
        return new Bge[t](e);
    }
    function tw(t) {
        return document.createElementNS("http://www.w3.org/1999/xhtml", t);
    }
    function sq() {
        const t = tw("canvas");
        return t.style.display = "block", t;
    }
    const H6 = {};
    function S0(t) {
        t in H6 || (H6[t] = !0, console.warn(t));
    }
    function Uge(t, e, n) {
        return new Promise(function(r, i) {
            function s() {
                switch(t.clientWaitSync(e, t.SYNC_FLUSH_COMMANDS_BIT, 0)){
                    case t.WAIT_FAILED:
                        i();
                        break;
                    case t.TIMEOUT_EXPIRED:
                        setTimeout(s, n);
                        break;
                    default:
                        r();
                }
            }
            setTimeout(s, n);
        });
    }
    function zge(t) {
        const e = t.elements;
        e[2] = .5 * e[2] + .5 * e[3], e[6] = .5 * e[6] + .5 * e[7], e[10] = .5 * e[10] + .5 * e[11], e[14] = .5 * e[14] + .5 * e[15];
    }
    function Vge(t) {
        const e = t.elements;
        e[11] === -1 ? (e[10] = -e[10] - 1, e[14] = -e[14]) : (e[10] = -e[10], e[14] = -e[14] + 1);
    }
    const $6 = new An().set(.4123908, .3575843, .1804808, .212639, .7151687, .0721923, .0193308, .1191948, .9505322), G6 = new An().set(3.2409699, -1.5373832, -.4986108, -.9692436, 1.8759675, .0415551, .0556301, -.203977, 1.0569715);
    function Wge() {
        const t = {
            enabled: !0,
            workingColorSpace: Nm,
            spaces: {},
            convert: function(i, s, o) {
                return this.enabled === !1 || s === o || !s || !o || (this.spaces[s].transfer === br && (i.r = Rd(i.r), i.g = Rd(i.g), i.b = Rd(i.b)), this.spaces[s].primaries !== this.spaces[o].primaries && (i.applyMatrix3(this.spaces[s].toXYZ), i.applyMatrix3(this.spaces[o].fromXYZ)), this.spaces[o].transfer === br && (i.r = iy(i.r), i.g = iy(i.g), i.b = iy(i.b))), i;
            },
            fromWorkingColorSpace: function(i, s) {
                return this.convert(i, this.workingColorSpace, s);
            },
            toWorkingColorSpace: function(i, s) {
                return this.convert(i, s, this.workingColorSpace);
            },
            getPrimaries: function(i) {
                return this.spaces[i].primaries;
            },
            getTransfer: function(i) {
                return i === xd ? Jb : this.spaces[i].transfer;
            },
            getLuminanceCoefficients: function(i, s = this.workingColorSpace) {
                return i.fromArray(this.spaces[s].luminanceCoefficients);
            },
            define: function(i) {
                Object.assign(this.spaces, i);
            },
            _getMatrix: function(i, s, o) {
                return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ);
            },
            _getDrawingBufferColorSpace: function(i) {
                return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace;
            },
            _getUnpackColorSpace: function(i = this.workingColorSpace) {
                return this.spaces[i].workingColorSpaceConfig.unpackColorSpace;
            }
        }, e = [
            .64,
            .33,
            .3,
            .6,
            .15,
            .06
        ], n = [
            .2126,
            .7152,
            .0722
        ], r = [
            .3127,
            .329
        ];
        return t.define({
            [Nm]: {
                primaries: e,
                whitePoint: r,
                transfer: Jb,
                toXYZ: $6,
                fromXYZ: G6,
                luminanceCoefficients: n,
                workingColorSpaceConfig: {
                    unpackColorSpace: ma
                },
                outputColorSpaceConfig: {
                    drawingBufferColorSpace: ma
                }
            },
            [ma]: {
                primaries: e,
                whitePoint: r,
                transfer: br,
                toXYZ: $6,
                fromXYZ: G6,
                luminanceCoefficients: n,
                outputColorSpaceConfig: {
                    drawingBufferColorSpace: ma
                }
            }
        }), t;
    }
    const rr = Wge();
    function Rd(t) {
        return t < .04045 ? t * .0773993808 : Math.pow(t * .9478672986 + .0521327014, 2.4);
    }
    function iy(t) {
        return t < .0031308 ? t * 12.92 : 1.055 * Math.pow(t, .41666) - .055;
    }
    let Kg;
    class oq {
        static getDataURL(e) {
            if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
            let n;
            if (e instanceof HTMLCanvasElement) n = e;
            else {
                Kg === void 0 && (Kg = tw("canvas")), Kg.width = e.width, Kg.height = e.height;
                const r = Kg.getContext("2d");
                e instanceof ImageData ? r.putImageData(e, 0, 0) : r.drawImage(e, 0, 0, e.width, e.height), n = Kg;
            }
            return n.toDataURL("image/png");
        }
        static sRGBToLinear(e) {
            if (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && e instanceof ImageBitmap) {
                const n = tw("canvas");
                n.width = e.width, n.height = e.height;
                const r = n.getContext("2d");
                r.drawImage(e, 0, 0, e.width, e.height);
                const i = r.getImageData(0, 0, e.width, e.height), s = i.data;
                for(let o = 0; o < s.length; o++)s[o] = Rd(s[o] / 255) * 255;
                return r.putImageData(i, 0, 0), n;
            } else if (e.data) {
                const n = e.data.slice(0);
                for(let r = 0; r < n.length; r++)n instanceof Uint8Array || n instanceof Uint8ClampedArray ? n[r] = Math.floor(Rd(n[r] / 255) * 255) : n[r] = Rd(n[r]);
                return {
                    data: n,
                    width: e.width,
                    height: e.height
                };
            } else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."), e;
        }
    }
    let qge = 0;
    class im {
        constructor(e = null){
            this.isSource = !0, Object.defineProperty(this, "id", {
                value: qge++
            }), this.uuid = Ya(), this.data = e, this.dataReady = !0, this.version = 0;
        }
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string";
            if (!n && e.images[this.uuid] !== void 0) return e.images[this.uuid];
            const r = {
                uuid: this.uuid,
                url: ""
            }, i = this.data;
            if (i !== null) {
                let s;
                if (Array.isArray(i)) {
                    s = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? s.push(mA(i[o].image)) : s.push(mA(i[o]));
                } else s = mA(i);
                r.url = s;
            }
            return n || (e.images[this.uuid] = r), r;
        }
    }
    function mA(t) {
        return typeof HTMLImageElement < "u" && t instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && t instanceof ImageBitmap ? oq.getDataURL(t) : t.data ? {
            data: Array.from(t.data),
            width: t.width,
            height: t.height,
            type: t.data.constructor.name
        } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
    }
    let Hge = 0;
    class bi extends vu {
        constructor(e = bi.DEFAULT_IMAGE, n = bi.DEFAULT_MAPPING, r = Tl, i = Tl, s = ds, o = ru, a = lo, l = _c, c = bi.DEFAULT_ANISOTROPY, u = xd){
            super(), this.isTexture = !0, Object.defineProperty(this, "id", {
                value: Hge++
            }), this.uuid = Ya(), this.name = "", this.source = new im(e), this.mipmaps = [], this.mapping = n, this.channel = 0, this.wrapS = r, this.wrapT = i, this.magFilter = s, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new ot(0, 0), this.repeat = new ot(1, 1), this.center = new ot(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new An, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.colorSpace = u, this.userData = {}, this.version = 0, this.onUpdate = null, this.renderTarget = null, this.isRenderTargetTexture = !1, this.pmremVersion = 0;
        }
        get image() {
            return this.source.data;
        }
        set image(e = null) {
            this.source.data = e;
        }
        updateMatrix() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.name = e.name, this.source = e.source, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.channel = e.channel, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.colorSpace = e.colorSpace, this.renderTarget = e.renderTarget, this.isRenderTargetTexture = e.isRenderTargetTexture, this.userData = JSON.parse(JSON.stringify(e.userData)), this.needsUpdate = !0, this;
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string";
            if (!n && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
            const r = {
                metadata: {
                    version: 4.6,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                image: this.source.toJSON(e).uuid,
                mapping: this.mapping,
                channel: this.channel,
                repeat: [
                    this.repeat.x,
                    this.repeat.y
                ],
                offset: [
                    this.offset.x,
                    this.offset.y
                ],
                center: [
                    this.center.x,
                    this.center.y
                ],
                rotation: this.rotation,
                wrap: [
                    this.wrapS,
                    this.wrapT
                ],
                format: this.format,
                internalFormat: this.internalFormat,
                type: this.type,
                colorSpace: this.colorSpace,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY,
                generateMipmaps: this.generateMipmaps,
                premultiplyAlpha: this.premultiplyAlpha,
                unpackAlignment: this.unpackAlignment
            };
            return Object.keys(this.userData).length > 0 && (r.userData = this.userData), n || (e.textures[this.uuid] = r), r;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
        transformUv(e) {
            if (this.mapping !== p2) return e;
            if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
                case Xb:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case Tl:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case Kb:
                    Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                    break;
            }
            if (e.y < 0 || e.y > 1) switch(this.wrapT){
                case Xb:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case Tl:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case Kb:
                    Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                    break;
            }
            return this.flipY && (e.y = 1 - e.y), e;
        }
        set needsUpdate(e) {
            e === !0 && (this.version++, this.source.needsUpdate = !0);
        }
        set needsPMREMUpdate(e) {
            e === !0 && this.pmremVersion++;
        }
    }
    bi.DEFAULT_IMAGE = null;
    bi.DEFAULT_MAPPING = p2;
    bi.DEFAULT_ANISOTROPY = 1;
    class cr {
        constructor(e = 0, n = 0, r = 0, i = 1){
            cr.prototype.isVector4 = !0, this.x = e, this.y = n, this.z = r, this.w = i;
        }
        get width() {
            return this.z;
        }
        set width(e) {
            this.z = e;
        }
        get height() {
            return this.w;
        }
        set height(e) {
            this.w = e;
        }
        set(e, n, r, i) {
            return this.x = e, this.y = n, this.z = r, this.w = i, this;
        }
        setScalar(e) {
            return this.x = e, this.y = e, this.z = e, this.w = e, this;
        }
        setX(e) {
            return this.x = e, this;
        }
        setY(e) {
            return this.y = e, this;
        }
        setZ(e) {
            return this.z = e, this;
        }
        setW(e) {
            return this.w = e, this;
        }
        setComponent(e, n) {
            switch(e){
                case 0:
                    this.x = n;
                    break;
                case 1:
                    this.y = n;
                    break;
                case 2:
                    this.z = n;
                    break;
                case 3:
                    this.w = n;
                    break;
                default:
                    throw new Error("index is out of range: " + e);
            }
            return this;
        }
        getComponent(e) {
            switch(e){
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                case 3:
                    return this.w;
                default:
                    throw new Error("index is out of range: " + e);
            }
        }
        clone() {
            return new this.constructor(this.x, this.y, this.z, this.w);
        }
        copy(e) {
            return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
        }
        add(e) {
            return this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this;
        }
        addScalar(e) {
            return this.x += e, this.y += e, this.z += e, this.w += e, this;
        }
        addVectors(e, n) {
            return this.x = e.x + n.x, this.y = e.y + n.y, this.z = e.z + n.z, this.w = e.w + n.w, this;
        }
        addScaledVector(e, n) {
            return this.x += e.x * n, this.y += e.y * n, this.z += e.z * n, this.w += e.w * n, this;
        }
        sub(e) {
            return this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this;
        }
        subScalar(e) {
            return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
        }
        subVectors(e, n) {
            return this.x = e.x - n.x, this.y = e.y - n.y, this.z = e.z - n.z, this.w = e.w - n.w, this;
        }
        multiply(e) {
            return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
        }
        multiplyScalar(e) {
            return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
        }
        applyMatrix4(e) {
            const n = this.x, r = this.y, i = this.z, s = this.w, o = e.elements;
            return this.x = o[0] * n + o[4] * r + o[8] * i + o[12] * s, this.y = o[1] * n + o[5] * r + o[9] * i + o[13] * s, this.z = o[2] * n + o[6] * r + o[10] * i + o[14] * s, this.w = o[3] * n + o[7] * r + o[11] * i + o[15] * s, this;
        }
        divide(e) {
            return this.x /= e.x, this.y /= e.y, this.z /= e.z, this.w /= e.w, this;
        }
        divideScalar(e) {
            return this.multiplyScalar(1 / e);
        }
        setAxisAngleFromQuaternion(e) {
            this.w = 2 * Math.acos(e.w);
            const n = Math.sqrt(1 - e.w * e.w);
            return n < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / n, this.y = e.y / n, this.z = e.z / n), this;
        }
        setAxisAngleFromRotationMatrix(e) {
            let n, r, i, s;
            const l = e.elements, c = l[0], u = l[4], f = l[8], h = l[1], m = l[5], v = l[9], _ = l[2], w = l[6], b = l[10];
            if (Math.abs(u - h) < .01 && Math.abs(f - _) < .01 && Math.abs(v - w) < .01) {
                if (Math.abs(u + h) < .1 && Math.abs(f + _) < .1 && Math.abs(v + w) < .1 && Math.abs(c + m + b - 3) < .1) return this.set(1, 0, 0, 0), this;
                n = Math.PI;
                const E = (c + 1) / 2, T = (m + 1) / 2, P = (b + 1) / 2, A = (u + h) / 4, O = (f + _) / 4, D = (v + w) / 4;
                return E > T && E > P ? E < .01 ? (r = 0, i = .707106781, s = .707106781) : (r = Math.sqrt(E), i = A / r, s = O / r) : T > P ? T < .01 ? (r = .707106781, i = 0, s = .707106781) : (i = Math.sqrt(T), r = A / i, s = D / i) : P < .01 ? (r = .707106781, i = .707106781, s = 0) : (s = Math.sqrt(P), r = O / s, i = D / s), this.set(r, i, s, n), this;
            }
            let M = Math.sqrt((w - v) * (w - v) + (f - _) * (f - _) + (h - u) * (h - u));
            return Math.abs(M) < .001 && (M = 1), this.x = (w - v) / M, this.y = (f - _) / M, this.z = (h - u) / M, this.w = Math.acos((c + m + b - 1) / 2), this;
        }
        setFromMatrixPosition(e) {
            const n = e.elements;
            return this.x = n[12], this.y = n[13], this.z = n[14], this.w = n[15], this;
        }
        min(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
        }
        max(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
        }
        clamp(e, n) {
            return this.x = Cn(this.x, e.x, n.x), this.y = Cn(this.y, e.y, n.y), this.z = Cn(this.z, e.z, n.z), this.w = Cn(this.w, e.w, n.w), this;
        }
        clampScalar(e, n) {
            return this.x = Cn(this.x, e, n), this.y = Cn(this.y, e, n), this.z = Cn(this.z, e, n), this.w = Cn(this.w, e, n), this;
        }
        clampLength(e, n) {
            const r = this.length();
            return this.divideScalar(r || 1).multiplyScalar(Cn(r, e, n));
        }
        floor() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
        }
        ceil() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
        }
        round() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
        }
        roundToZero() {
            return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this.w = Math.trunc(this.w), this;
        }
        negate() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
        }
        dot(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
        }
        lengthSq() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
        }
        length() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
        }
        manhattanLength() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
        }
        normalize() {
            return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
            return this.normalize().multiplyScalar(e);
        }
        lerp(e, n) {
            return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this.z += (e.z - this.z) * n, this.w += (e.w - this.w) * n, this;
        }
        lerpVectors(e, n, r) {
            return this.x = e.x + (n.x - e.x) * r, this.y = e.y + (n.y - e.y) * r, this.z = e.z + (n.z - e.z) * r, this.w = e.w + (n.w - e.w) * r, this;
        }
        equals(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
        }
        fromArray(e, n = 0) {
            return this.x = e[n], this.y = e[n + 1], this.z = e[n + 2], this.w = e[n + 3], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.x, e[n + 1] = this.y, e[n + 2] = this.z, e[n + 3] = this.w, e;
        }
        fromBufferAttribute(e, n) {
            return this.x = e.getX(n), this.y = e.getY(n), this.z = e.getZ(n), this.w = e.getW(n), this;
        }
        random() {
            return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
        }
        *[Symbol.iterator]() {
            yield this.x, yield this.y, yield this.z, yield this.w;
        }
    }
    class _2 extends vu {
        constructor(e = 1, n = 1, r = {}){
            super(), this.isRenderTarget = !0, this.width = e, this.height = n, this.depth = 1, this.scissor = new cr(0, 0, e, n), this.scissorTest = !1, this.viewport = new cr(0, 0, e, n);
            const i = {
                width: e,
                height: n,
                depth: 1
            };
            r = Object.assign({
                generateMipmaps: !1,
                internalFormat: null,
                minFilter: ds,
                depthBuffer: !0,
                stencilBuffer: !1,
                resolveDepthBuffer: !0,
                resolveStencilBuffer: !0,
                depthTexture: null,
                samples: 0,
                count: 1
            }, r);
            const s = new bi(i, r.mapping, r.wrapS, r.wrapT, r.magFilter, r.minFilter, r.format, r.type, r.anisotropy, r.colorSpace);
            s.flipY = !1, s.generateMipmaps = r.generateMipmaps, s.internalFormat = r.internalFormat, this.textures = [];
            const o = r.count;
            for(let a = 0; a < o; a++)this.textures[a] = s.clone(), this.textures[a].isRenderTargetTexture = !0, this.textures[a].renderTarget = this;
            this.depthBuffer = r.depthBuffer, this.stencilBuffer = r.stencilBuffer, this.resolveDepthBuffer = r.resolveDepthBuffer, this.resolveStencilBuffer = r.resolveStencilBuffer, this._depthTexture = null, this.depthTexture = r.depthTexture, this.samples = r.samples;
        }
        get texture() {
            return this.textures[0];
        }
        set texture(e) {
            this.textures[0] = e;
        }
        set depthTexture(e) {
            this._depthTexture !== null && (this._depthTexture.renderTarget = null), e !== null && (e.renderTarget = this), this._depthTexture = e;
        }
        get depthTexture() {
            return this._depthTexture;
        }
        setSize(e, n, r = 1) {
            if (this.width !== e || this.height !== n || this.depth !== r) {
                this.width = e, this.height = n, this.depth = r;
                for(let i = 0, s = this.textures.length; i < s; i++)this.textures[i].image.width = e, this.textures[i].image.height = n, this.textures[i].image.depth = r;
                this.dispose();
            }
            this.viewport.set(0, 0, e, n), this.scissor.set(0, 0, e, n);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            this.width = e.width, this.height = e.height, this.depth = e.depth, this.scissor.copy(e.scissor), this.scissorTest = e.scissorTest, this.viewport.copy(e.viewport), this.textures.length = 0;
            for(let r = 0, i = e.textures.length; r < i; r++)this.textures[r] = e.textures[r].clone(), this.textures[r].isRenderTargetTexture = !0, this.textures[r].renderTarget = this;
            const n = Object.assign({}, e.texture.image);
            return this.texture.source = new im(n), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.resolveDepthBuffer = e.resolveDepthBuffer, this.resolveStencilBuffer = e.resolveStencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.samples = e.samples, this;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
    }
    class mu extends _2 {
        constructor(e = 1, n = 1, r = {}){
            super(e, n, r), this.isWebGLRenderTarget = !0;
        }
    }
    class zw extends bi {
        constructor(e = null, n = 1, r = 1, i = 1){
            super(null), this.isDataArrayTexture = !0, this.image = {
                data: e,
                width: n,
                height: r,
                depth: i
            }, this.magFilter = qs, this.minFilter = qs, this.wrapR = Tl, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.layerUpdates = new Set;
        }
        addLayerUpdate(e) {
            this.layerUpdates.add(e);
        }
        clearLayerUpdates() {
            this.layerUpdates.clear();
        }
    }
    class $ge extends mu {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isWebGLArrayRenderTarget = !0, this.depth = r, this.texture = new zw(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class S2 extends bi {
        constructor(e = null, n = 1, r = 1, i = 1){
            super(null), this.isData3DTexture = !0, this.image = {
                data: e,
                width: n,
                height: r,
                depth: i
            }, this.magFilter = qs, this.minFilter = qs, this.wrapR = Tl, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
        }
    }
    class Gge extends mu {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isWebGL3DRenderTarget = !0, this.depth = r, this.texture = new S2(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class fo {
        constructor(e = 0, n = 0, r = 0, i = 1){
            this.isQuaternion = !0, this._x = e, this._y = n, this._z = r, this._w = i;
        }
        static slerpFlat(e, n, r, i, s, o, a) {
            let l = r[i + 0], c = r[i + 1], u = r[i + 2], f = r[i + 3];
            const h = s[o + 0], m = s[o + 1], v = s[o + 2], _ = s[o + 3];
            if (a === 0) {
                e[n + 0] = l, e[n + 1] = c, e[n + 2] = u, e[n + 3] = f;
                return;
            }
            if (a === 1) {
                e[n + 0] = h, e[n + 1] = m, e[n + 2] = v, e[n + 3] = _;
                return;
            }
            if (f !== _ || l !== h || c !== m || u !== v) {
                let w = 1 - a;
                const b = l * h + c * m + u * v + f * _, M = b >= 0 ? 1 : -1, E = 1 - b * b;
                if (E > Number.EPSILON) {
                    const P = Math.sqrt(E), A = Math.atan2(P, b * M);
                    w = Math.sin(w * A) / P, a = Math.sin(a * A) / P;
                }
                const T = a * M;
                if (l = l * w + h * T, c = c * w + m * T, u = u * w + v * T, f = f * w + _ * T, w === 1 - a) {
                    const P = 1 / Math.sqrt(l * l + c * c + u * u + f * f);
                    l *= P, c *= P, u *= P, f *= P;
                }
            }
            e[n] = l, e[n + 1] = c, e[n + 2] = u, e[n + 3] = f;
        }
        static multiplyQuaternionsFlat(e, n, r, i, s, o) {
            const a = r[i], l = r[i + 1], c = r[i + 2], u = r[i + 3], f = s[o], h = s[o + 1], m = s[o + 2], v = s[o + 3];
            return e[n] = a * v + u * f + l * m - c * h, e[n + 1] = l * v + u * h + c * f - a * m, e[n + 2] = c * v + u * m + a * h - l * f, e[n + 3] = u * v - a * f - l * h - c * m, e;
        }
        get x() {
            return this._x;
        }
        set x(e) {
            this._x = e, this._onChangeCallback();
        }
        get y() {
            return this._y;
        }
        set y(e) {
            this._y = e, this._onChangeCallback();
        }
        get z() {
            return this._z;
        }
        set z(e) {
            this._z = e, this._onChangeCallback();
        }
        get w() {
            return this._w;
        }
        set w(e) {
            this._w = e, this._onChangeCallback();
        }
        set(e, n, r, i) {
            return this._x = e, this._y = n, this._z = r, this._w = i, this._onChangeCallback(), this;
        }
        clone() {
            return new this.constructor(this._x, this._y, this._z, this._w);
        }
        copy(e) {
            return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
        }
        setFromEuler(e, n = !0) {
            const r = e._x, i = e._y, s = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(r / 2), u = a(i / 2), f = a(s / 2), h = l(r / 2), m = l(i / 2), v = l(s / 2);
            switch(o){
                case "XYZ":
                    this._x = h * u * f + c * m * v, this._y = c * m * f - h * u * v, this._z = c * u * v + h * m * f, this._w = c * u * f - h * m * v;
                    break;
                case "YXZ":
                    this._x = h * u * f + c * m * v, this._y = c * m * f - h * u * v, this._z = c * u * v - h * m * f, this._w = c * u * f + h * m * v;
                    break;
                case "ZXY":
                    this._x = h * u * f - c * m * v, this._y = c * m * f + h * u * v, this._z = c * u * v + h * m * f, this._w = c * u * f - h * m * v;
                    break;
                case "ZYX":
                    this._x = h * u * f - c * m * v, this._y = c * m * f + h * u * v, this._z = c * u * v - h * m * f, this._w = c * u * f + h * m * v;
                    break;
                case "YZX":
                    this._x = h * u * f + c * m * v, this._y = c * m * f + h * u * v, this._z = c * u * v - h * m * f, this._w = c * u * f - h * m * v;
                    break;
                case "XZY":
                    this._x = h * u * f - c * m * v, this._y = c * m * f - h * u * v, this._z = c * u * v + h * m * f, this._w = c * u * f + h * m * v;
                    break;
                default:
                    console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
            }
            return n === !0 && this._onChangeCallback(), this;
        }
        setFromAxisAngle(e, n) {
            const r = n / 2, i = Math.sin(r);
            return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(r), this._onChangeCallback(), this;
        }
        setFromRotationMatrix(e) {
            const n = e.elements, r = n[0], i = n[4], s = n[8], o = n[1], a = n[5], l = n[9], c = n[2], u = n[6], f = n[10], h = r + a + f;
            if (h > 0) {
                const m = .5 / Math.sqrt(h + 1);
                this._w = .25 / m, this._x = (u - l) * m, this._y = (s - c) * m, this._z = (o - i) * m;
            } else if (r > a && r > f) {
                const m = 2 * Math.sqrt(1 + r - a - f);
                this._w = (u - l) / m, this._x = .25 * m, this._y = (i + o) / m, this._z = (s + c) / m;
            } else if (a > f) {
                const m = 2 * Math.sqrt(1 + a - r - f);
                this._w = (s - c) / m, this._x = (i + o) / m, this._y = .25 * m, this._z = (l + u) / m;
            } else {
                const m = 2 * Math.sqrt(1 + f - r - a);
                this._w = (o - i) / m, this._x = (s + c) / m, this._y = (l + u) / m, this._z = .25 * m;
            }
            return this._onChangeCallback(), this;
        }
        setFromUnitVectors(e, n) {
            let r = e.dot(n) + 1;
            return r < Number.EPSILON ? (r = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = r) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = r)) : (this._x = e.y * n.z - e.z * n.y, this._y = e.z * n.x - e.x * n.z, this._z = e.x * n.y - e.y * n.x, this._w = r), this.normalize();
        }
        angleTo(e) {
            return 2 * Math.acos(Math.abs(Cn(this.dot(e), -1, 1)));
        }
        rotateTowards(e, n) {
            const r = this.angleTo(e);
            if (r === 0) return this;
            const i = Math.min(1, n / r);
            return this.slerp(e, i), this;
        }
        identity() {
            return this.set(0, 0, 0, 1);
        }
        invert() {
            return this.conjugate();
        }
        conjugate() {
            return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
        }
        dot(e) {
            return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
        }
        lengthSq() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
        }
        length() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
        }
        normalize() {
            let e = this.length();
            return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
        }
        multiply(e) {
            return this.multiplyQuaternions(this, e);
        }
        premultiply(e) {
            return this.multiplyQuaternions(e, this);
        }
        multiplyQuaternions(e, n) {
            const r = e._x, i = e._y, s = e._z, o = e._w, a = n._x, l = n._y, c = n._z, u = n._w;
            return this._x = r * u + o * a + i * c - s * l, this._y = i * u + o * l + s * a - r * c, this._z = s * u + o * c + r * l - i * a, this._w = o * u - r * a - i * l - s * c, this._onChangeCallback(), this;
        }
        slerp(e, n) {
            if (n === 0) return this;
            if (n === 1) return this.copy(e);
            const r = this._x, i = this._y, s = this._z, o = this._w;
            let a = o * e._w + r * e._x + i * e._y + s * e._z;
            if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = r, this._y = i, this._z = s, this;
            const l = 1 - a * a;
            if (l <= Number.EPSILON) {
                const m = 1 - n;
                return this._w = m * o + n * this._w, this._x = m * r + n * this._x, this._y = m * i + n * this._y, this._z = m * s + n * this._z, this.normalize(), this;
            }
            const c = Math.sqrt(l), u = Math.atan2(c, a), f = Math.sin((1 - n) * u) / c, h = Math.sin(n * u) / c;
            return this._w = o * f + this._w * h, this._x = r * f + this._x * h, this._y = i * f + this._y * h, this._z = s * f + this._z * h, this._onChangeCallback(), this;
        }
        slerpQuaternions(e, n, r) {
            return this.copy(e).slerp(n, r);
        }
        random() {
            const e = 2 * Math.PI * Math.random(), n = 2 * Math.PI * Math.random(), r = Math.random(), i = Math.sqrt(1 - r), s = Math.sqrt(r);
            return this.set(i * Math.sin(e), i * Math.cos(e), s * Math.sin(n), s * Math.cos(n));
        }
        equals(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
        }
        fromArray(e, n = 0) {
            return this._x = e[n], this._y = e[n + 1], this._z = e[n + 2], this._w = e[n + 3], this._onChangeCallback(), this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this._x, e[n + 1] = this._y, e[n + 2] = this._z, e[n + 3] = this._w, e;
        }
        fromBufferAttribute(e, n) {
            return this._x = e.getX(n), this._y = e.getY(n), this._z = e.getZ(n), this._w = e.getW(n), this._onChangeCallback(), this;
        }
        toJSON() {
            return this.toArray();
        }
        _onChange(e) {
            return this._onChangeCallback = e, this;
        }
        _onChangeCallback() {}
        *[Symbol.iterator]() {
            yield this._x, yield this._y, yield this._z, yield this._w;
        }
    }
    class ve {
        constructor(e = 0, n = 0, r = 0){
            ve.prototype.isVector3 = !0, this.x = e, this.y = n, this.z = r;
        }
        set(e, n, r) {
            return r === void 0 && (r = this.z), this.x = e, this.y = n, this.z = r, this;
        }
        setScalar(e) {
            return this.x = e, this.y = e, this.z = e, this;
        }
        setX(e) {
            return this.x = e, this;
        }
        setY(e) {
            return this.y = e, this;
        }
        setZ(e) {
            return this.z = e, this;
        }
        setComponent(e, n) {
            switch(e){
                case 0:
                    this.x = n;
                    break;
                case 1:
                    this.y = n;
                    break;
                case 2:
                    this.z = n;
                    break;
                default:
                    throw new Error("index is out of range: " + e);
            }
            return this;
        }
        getComponent(e) {
            switch(e){
                case 0:
                    return this.x;
                case 1:
                    return this.y;
                case 2:
                    return this.z;
                default:
                    throw new Error("index is out of range: " + e);
            }
        }
        clone() {
            return new this.constructor(this.x, this.y, this.z);
        }
        copy(e) {
            return this.x = e.x, this.y = e.y, this.z = e.z, this;
        }
        add(e) {
            return this.x += e.x, this.y += e.y, this.z += e.z, this;
        }
        addScalar(e) {
            return this.x += e, this.y += e, this.z += e, this;
        }
        addVectors(e, n) {
            return this.x = e.x + n.x, this.y = e.y + n.y, this.z = e.z + n.z, this;
        }
        addScaledVector(e, n) {
            return this.x += e.x * n, this.y += e.y * n, this.z += e.z * n, this;
        }
        sub(e) {
            return this.x -= e.x, this.y -= e.y, this.z -= e.z, this;
        }
        subScalar(e) {
            return this.x -= e, this.y -= e, this.z -= e, this;
        }
        subVectors(e, n) {
            return this.x = e.x - n.x, this.y = e.y - n.y, this.z = e.z - n.z, this;
        }
        multiply(e) {
            return this.x *= e.x, this.y *= e.y, this.z *= e.z, this;
        }
        multiplyScalar(e) {
            return this.x *= e, this.y *= e, this.z *= e, this;
        }
        multiplyVectors(e, n) {
            return this.x = e.x * n.x, this.y = e.y * n.y, this.z = e.z * n.z, this;
        }
        applyEuler(e) {
            return this.applyQuaternion(X6.setFromEuler(e));
        }
        applyAxisAngle(e, n) {
            return this.applyQuaternion(X6.setFromAxisAngle(e, n));
        }
        applyMatrix3(e) {
            const n = this.x, r = this.y, i = this.z, s = e.elements;
            return this.x = s[0] * n + s[3] * r + s[6] * i, this.y = s[1] * n + s[4] * r + s[7] * i, this.z = s[2] * n + s[5] * r + s[8] * i, this;
        }
        applyNormalMatrix(e) {
            return this.applyMatrix3(e).normalize();
        }
        applyMatrix4(e) {
            const n = this.x, r = this.y, i = this.z, s = e.elements, o = 1 / (s[3] * n + s[7] * r + s[11] * i + s[15]);
            return this.x = (s[0] * n + s[4] * r + s[8] * i + s[12]) * o, this.y = (s[1] * n + s[5] * r + s[9] * i + s[13]) * o, this.z = (s[2] * n + s[6] * r + s[10] * i + s[14]) * o, this;
        }
        applyQuaternion(e) {
            const n = this.x, r = this.y, i = this.z, s = e.x, o = e.y, a = e.z, l = e.w, c = 2 * (o * i - a * r), u = 2 * (a * n - s * i), f = 2 * (s * r - o * n);
            return this.x = n + l * c + o * f - a * u, this.y = r + l * u + a * c - s * f, this.z = i + l * f + s * u - o * c, this;
        }
        project(e) {
            return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
        }
        unproject(e) {
            return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
        }
        transformDirection(e) {
            const n = this.x, r = this.y, i = this.z, s = e.elements;
            return this.x = s[0] * n + s[4] * r + s[8] * i, this.y = s[1] * n + s[5] * r + s[9] * i, this.z = s[2] * n + s[6] * r + s[10] * i, this.normalize();
        }
        divide(e) {
            return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
        }
        divideScalar(e) {
            return this.multiplyScalar(1 / e);
        }
        min(e) {
            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
        }
        max(e) {
            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
        }
        clamp(e, n) {
            return this.x = Cn(this.x, e.x, n.x), this.y = Cn(this.y, e.y, n.y), this.z = Cn(this.z, e.z, n.z), this;
        }
        clampScalar(e, n) {
            return this.x = Cn(this.x, e, n), this.y = Cn(this.y, e, n), this.z = Cn(this.z, e, n), this;
        }
        clampLength(e, n) {
            const r = this.length();
            return this.divideScalar(r || 1).multiplyScalar(Cn(r, e, n));
        }
        floor() {
            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
        }
        ceil() {
            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
        }
        round() {
            return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
        }
        roundToZero() {
            return this.x = Math.trunc(this.x), this.y = Math.trunc(this.y), this.z = Math.trunc(this.z), this;
        }
        negate() {
            return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
        }
        dot(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z;
        }
        lengthSq() {
            return this.x * this.x + this.y * this.y + this.z * this.z;
        }
        length() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        }
        manhattanLength() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
        }
        normalize() {
            return this.divideScalar(this.length() || 1);
        }
        setLength(e) {
            return this.normalize().multiplyScalar(e);
        }
        lerp(e, n) {
            return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this.z += (e.z - this.z) * n, this;
        }
        lerpVectors(e, n, r) {
            return this.x = e.x + (n.x - e.x) * r, this.y = e.y + (n.y - e.y) * r, this.z = e.z + (n.z - e.z) * r, this;
        }
        cross(e) {
            return this.crossVectors(this, e);
        }
        crossVectors(e, n) {
            const r = e.x, i = e.y, s = e.z, o = n.x, a = n.y, l = n.z;
            return this.x = i * l - s * a, this.y = s * o - r * l, this.z = r * a - i * o, this;
        }
        projectOnVector(e) {
            const n = e.lengthSq();
            if (n === 0) return this.set(0, 0, 0);
            const r = e.dot(this) / n;
            return this.copy(e).multiplyScalar(r);
        }
        projectOnPlane(e) {
            return gA.copy(this).projectOnVector(e), this.sub(gA);
        }
        reflect(e) {
            return this.sub(gA.copy(e).multiplyScalar(2 * this.dot(e)));
        }
        angleTo(e) {
            const n = Math.sqrt(this.lengthSq() * e.lengthSq());
            if (n === 0) return Math.PI / 2;
            const r = this.dot(e) / n;
            return Math.acos(Cn(r, -1, 1));
        }
        distanceTo(e) {
            return Math.sqrt(this.distanceToSquared(e));
        }
        distanceToSquared(e) {
            const n = this.x - e.x, r = this.y - e.y, i = this.z - e.z;
            return n * n + r * r + i * i;
        }
        manhattanDistanceTo(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
        }
        setFromSpherical(e) {
            return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
        }
        setFromSphericalCoords(e, n, r) {
            const i = Math.sin(n) * e;
            return this.x = i * Math.sin(r), this.y = Math.cos(n) * e, this.z = i * Math.cos(r), this;
        }
        setFromCylindrical(e) {
            return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
        }
        setFromCylindricalCoords(e, n, r) {
            return this.x = e * Math.sin(n), this.y = r, this.z = e * Math.cos(n), this;
        }
        setFromMatrixPosition(e) {
            const n = e.elements;
            return this.x = n[12], this.y = n[13], this.z = n[14], this;
        }
        setFromMatrixScale(e) {
            const n = this.setFromMatrixColumn(e, 0).length(), r = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
            return this.x = n, this.y = r, this.z = i, this;
        }
        setFromMatrixColumn(e, n) {
            return this.fromArray(e.elements, n * 4);
        }
        setFromMatrix3Column(e, n) {
            return this.fromArray(e.elements, n * 3);
        }
        setFromEuler(e) {
            return this.x = e._x, this.y = e._y, this.z = e._z, this;
        }
        setFromColor(e) {
            return this.x = e.r, this.y = e.g, this.z = e.b, this;
        }
        equals(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z;
        }
        fromArray(e, n = 0) {
            return this.x = e[n], this.y = e[n + 1], this.z = e[n + 2], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.x, e[n + 1] = this.y, e[n + 2] = this.z, e;
        }
        fromBufferAttribute(e, n) {
            return this.x = e.getX(n), this.y = e.getY(n), this.z = e.getZ(n), this;
        }
        random() {
            return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
        }
        randomDirection() {
            const e = Math.random() * Math.PI * 2, n = Math.random() * 2 - 1, r = Math.sqrt(1 - n * n);
            return this.x = r * Math.cos(e), this.y = n, this.z = r * Math.sin(e), this;
        }
        *[Symbol.iterator]() {
            yield this.x, yield this.y, yield this.z;
        }
    }
    const gA = new ve, X6 = new fo;
    class qo {
        constructor(e = new ve(1 / 0, 1 / 0, 1 / 0), n = new ve(-1 / 0, -1 / 0, -1 / 0)){
            this.isBox3 = !0, this.min = e, this.max = n;
        }
        set(e, n) {
            return this.min.copy(e), this.max.copy(n), this;
        }
        setFromArray(e) {
            this.makeEmpty();
            for(let n = 0, r = e.length; n < r; n += 3)this.expandByPoint(nc.fromArray(e, n));
            return this;
        }
        setFromBufferAttribute(e) {
            this.makeEmpty();
            for(let n = 0, r = e.count; n < r; n++)this.expandByPoint(nc.fromBufferAttribute(e, n));
            return this;
        }
        setFromPoints(e) {
            this.makeEmpty();
            for(let n = 0, r = e.length; n < r; n++)this.expandByPoint(e[n]);
            return this;
        }
        setFromCenterAndSize(e, n) {
            const r = nc.copy(n).multiplyScalar(.5);
            return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
        }
        setFromObject(e, n = !1) {
            return this.makeEmpty(), this.expandByObject(e, n);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
        }
        isEmpty() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
        }
        getCenter(e) {
            return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
        }
        getSize(e) {
            return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
            return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
            return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        expandByObject(e, n = !1) {
            e.updateWorldMatrix(!1, !1);
            const r = e.geometry;
            if (r !== void 0) {
                const s = r.getAttribute("position");
                if (n === !0 && s !== void 0 && e.isInstancedMesh !== !0) for(let o = 0, a = s.count; o < a; o++)e.isMesh === !0 ? e.getVertexPosition(o, nc) : nc.fromBufferAttribute(s, o), nc.applyMatrix4(e.matrixWorld), this.expandByPoint(nc);
                else e.boundingBox !== void 0 ? (e.boundingBox === null && e.computeBoundingBox(), T1.copy(e.boundingBox)) : (r.boundingBox === null && r.computeBoundingBox(), T1.copy(r.boundingBox)), T1.applyMatrix4(e.matrixWorld), this.union(T1);
            }
            const i = e.children;
            for(let s = 0, o = i.length; s < o; s++)this.expandByObject(i[s], n);
            return this;
        }
        containsPoint(e) {
            return e.x >= this.min.x && e.x <= this.max.x && e.y >= this.min.y && e.y <= this.max.y && e.z >= this.min.z && e.z <= this.max.z;
        }
        containsBox(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
        }
        getParameter(e, n) {
            return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
        }
        intersectsBox(e) {
            return e.max.x >= this.min.x && e.min.x <= this.max.x && e.max.y >= this.min.y && e.min.y <= this.max.y && e.max.z >= this.min.z && e.min.z <= this.max.z;
        }
        intersectsSphere(e) {
            return this.clampPoint(e.center, nc), nc.distanceToSquared(e.center) <= e.radius * e.radius;
        }
        intersectsPlane(e) {
            let n, r;
            return e.normal.x > 0 ? (n = e.normal.x * this.min.x, r = e.normal.x * this.max.x) : (n = e.normal.x * this.max.x, r = e.normal.x * this.min.x), e.normal.y > 0 ? (n += e.normal.y * this.min.y, r += e.normal.y * this.max.y) : (n += e.normal.y * this.max.y, r += e.normal.y * this.min.y), e.normal.z > 0 ? (n += e.normal.z * this.min.z, r += e.normal.z * this.max.z) : (n += e.normal.z * this.max.z, r += e.normal.z * this.min.z), n <= -e.constant && r >= -e.constant;
        }
        intersectsTriangle(e) {
            if (this.isEmpty()) return !1;
            this.getCenter(Jv), C1.subVectors(this.max, Jv), Yg.subVectors(e.a, Jv), Zg.subVectors(e.b, Jv), Jg.subVectors(e.c, Jv), Pf.subVectors(Zg, Yg), kf.subVectors(Jg, Zg), _p.subVectors(Yg, Jg);
            let n = [
                0,
                -Pf.z,
                Pf.y,
                0,
                -kf.z,
                kf.y,
                0,
                -_p.z,
                _p.y,
                Pf.z,
                0,
                -Pf.x,
                kf.z,
                0,
                -kf.x,
                _p.z,
                0,
                -_p.x,
                -Pf.y,
                Pf.x,
                0,
                -kf.y,
                kf.x,
                0,
                -_p.y,
                _p.x,
                0
            ];
            return !yA(n, Yg, Zg, Jg, C1) || (n = [
                1,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1
            ], !yA(n, Yg, Zg, Jg, C1)) ? !1 : (R1.crossVectors(Pf, kf), n = [
                R1.x,
                R1.y,
                R1.z
            ], yA(n, Yg, Zg, Jg, C1));
        }
        clampPoint(e, n) {
            return n.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
            return this.clampPoint(e, nc).distanceTo(e);
        }
        getBoundingSphere(e) {
            return this.isEmpty() ? e.makeEmpty() : (this.getCenter(e.center), e.radius = this.getSize(nc).length() * .5), e;
        }
        intersect(e) {
            return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
        }
        union(e) {
            return this.min.min(e.min), this.max.max(e.max), this;
        }
        applyMatrix4(e) {
            return this.isEmpty() ? this : (sd[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), sd[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), sd[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), sd[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), sd[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), sd[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), sd[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), sd[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(sd), this);
        }
        translate(e) {
            return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
            return e.min.equals(this.min) && e.max.equals(this.max);
        }
    }
    const sd = [
        new ve,
        new ve,
        new ve,
        new ve,
        new ve,
        new ve,
        new ve,
        new ve
    ], nc = new ve, T1 = new qo, Yg = new ve, Zg = new ve, Jg = new ve, Pf = new ve, kf = new ve, _p = new ve, Jv = new ve, C1 = new ve, R1 = new ve, Sp = new ve;
    function yA(t, e, n, r, i) {
        for(let s = 0, o = t.length - 3; s <= o; s += 3){
            Sp.fromArray(t, s);
            const a = i.x * Math.abs(Sp.x) + i.y * Math.abs(Sp.y) + i.z * Math.abs(Sp.z), l = e.dot(Sp), c = n.dot(Sp), u = r.dot(Sp);
            if (Math.max(-Math.max(l, c, u), Math.min(l, c, u)) > a) return !1;
        }
        return !0;
    }
    const Xge = new qo, Qv = new ve, vA = new ve;
    class ho {
        constructor(e = new ve, n = -1){
            this.isSphere = !0, this.center = e, this.radius = n;
        }
        set(e, n) {
            return this.center.copy(e), this.radius = n, this;
        }
        setFromPoints(e, n) {
            const r = this.center;
            n !== void 0 ? r.copy(n) : Xge.setFromPoints(e).getCenter(r);
            let i = 0;
            for(let s = 0, o = e.length; s < o; s++)i = Math.max(i, r.distanceToSquared(e[s]));
            return this.radius = Math.sqrt(i), this;
        }
        copy(e) {
            return this.center.copy(e.center), this.radius = e.radius, this;
        }
        isEmpty() {
            return this.radius < 0;
        }
        makeEmpty() {
            return this.center.set(0, 0, 0), this.radius = -1, this;
        }
        containsPoint(e) {
            return e.distanceToSquared(this.center) <= this.radius * this.radius;
        }
        distanceToPoint(e) {
            return e.distanceTo(this.center) - this.radius;
        }
        intersectsSphere(e) {
            const n = this.radius + e.radius;
            return e.center.distanceToSquared(this.center) <= n * n;
        }
        intersectsBox(e) {
            return e.intersectsSphere(this);
        }
        intersectsPlane(e) {
            return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
        }
        clampPoint(e, n) {
            const r = this.center.distanceToSquared(e);
            return n.copy(e), r > this.radius * this.radius && (n.sub(this.center).normalize(), n.multiplyScalar(this.radius).add(this.center)), n;
        }
        getBoundingBox(e) {
            return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
        }
        applyMatrix4(e) {
            return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
        }
        translate(e) {
            return this.center.add(e), this;
        }
        expandByPoint(e) {
            if (this.isEmpty()) return this.center.copy(e), this.radius = 0, this;
            Qv.subVectors(e, this.center);
            const n = Qv.lengthSq();
            if (n > this.radius * this.radius) {
                const r = Math.sqrt(n), i = (r - this.radius) * .5;
                this.center.addScaledVector(Qv, i / r), this.radius += i;
            }
            return this;
        }
        union(e) {
            return e.isEmpty() ? this : this.isEmpty() ? (this.copy(e), this) : (this.center.equals(e.center) === !0 ? this.radius = Math.max(this.radius, e.radius) : (vA.subVectors(e.center, this.center).setLength(e.radius), this.expandByPoint(Qv.copy(e.center).add(vA)), this.expandByPoint(Qv.copy(e.center).sub(vA))), this);
        }
        equals(e) {
            return e.center.equals(this.center) && e.radius === this.radius;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const od = new ve, xA = new ve, I1 = new ve, Of = new ve, bA = new ve, A1 = new ve, wA = new ve;
    class Um {
        constructor(e = new ve, n = new ve(0, 0, -1)){
            this.origin = e, this.direction = n;
        }
        set(e, n) {
            return this.origin.copy(e), this.direction.copy(n), this;
        }
        copy(e) {
            return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
        }
        at(e, n) {
            return n.copy(this.origin).addScaledVector(this.direction, e);
        }
        lookAt(e) {
            return this.direction.copy(e).sub(this.origin).normalize(), this;
        }
        recast(e) {
            return this.origin.copy(this.at(e, od)), this;
        }
        closestPointToPoint(e, n) {
            n.subVectors(e, this.origin);
            const r = n.dot(this.direction);
            return r < 0 ? n.copy(this.origin) : n.copy(this.origin).addScaledVector(this.direction, r);
        }
        distanceToPoint(e) {
            return Math.sqrt(this.distanceSqToPoint(e));
        }
        distanceSqToPoint(e) {
            const n = od.subVectors(e, this.origin).dot(this.direction);
            return n < 0 ? this.origin.distanceToSquared(e) : (od.copy(this.origin).addScaledVector(this.direction, n), od.distanceToSquared(e));
        }
        distanceSqToSegment(e, n, r, i) {
            xA.copy(e).add(n).multiplyScalar(.5), I1.copy(n).sub(e).normalize(), Of.copy(this.origin).sub(xA);
            const s = e.distanceTo(n) * .5, o = -this.direction.dot(I1), a = Of.dot(this.direction), l = -Of.dot(I1), c = Of.lengthSq(), u = Math.abs(1 - o * o);
            let f, h, m, v;
            if (u > 0) if (f = o * l - a, h = o * a - l, v = s * u, f >= 0) if (h >= -v) if (h <= v) {
                const _ = 1 / u;
                f *= _, h *= _, m = f * (f + o * h + 2 * a) + h * (o * f + h + 2 * l) + c;
            } else h = s, f = Math.max(0, -(o * h + a)), m = -f * f + h * (h + 2 * l) + c;
            else h = -s, f = Math.max(0, -(o * h + a)), m = -f * f + h * (h + 2 * l) + c;
            else h <= -v ? (f = Math.max(0, -(-o * s + a)), h = f > 0 ? -s : Math.min(Math.max(-s, -l), s), m = -f * f + h * (h + 2 * l) + c) : h <= v ? (f = 0, h = Math.min(Math.max(-s, -l), s), m = h * (h + 2 * l) + c) : (f = Math.max(0, -(o * s + a)), h = f > 0 ? s : Math.min(Math.max(-s, -l), s), m = -f * f + h * (h + 2 * l) + c);
            else h = o > 0 ? -s : s, f = Math.max(0, -(o * h + a)), m = -f * f + h * (h + 2 * l) + c;
            return r && r.copy(this.origin).addScaledVector(this.direction, f), i && i.copy(xA).addScaledVector(I1, h), m;
        }
        intersectSphere(e, n) {
            od.subVectors(e.center, this.origin);
            const r = od.dot(this.direction), i = od.dot(od) - r * r, s = e.radius * e.radius;
            if (i > s) return null;
            const o = Math.sqrt(s - i), a = r - o, l = r + o;
            return l < 0 ? null : a < 0 ? this.at(l, n) : this.at(a, n);
        }
        intersectsSphere(e) {
            return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
        }
        distanceToPlane(e) {
            const n = e.normal.dot(this.direction);
            if (n === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
            const r = -(this.origin.dot(e.normal) + e.constant) / n;
            return r >= 0 ? r : null;
        }
        intersectPlane(e, n) {
            const r = this.distanceToPlane(e);
            return r === null ? null : this.at(r, n);
        }
        intersectsPlane(e) {
            const n = e.distanceToPoint(this.origin);
            return n === 0 || e.normal.dot(this.direction) * n < 0;
        }
        intersectBox(e, n) {
            let r, i, s, o, a, l;
            const c = 1 / this.direction.x, u = 1 / this.direction.y, f = 1 / this.direction.z, h = this.origin;
            return c >= 0 ? (r = (e.min.x - h.x) * c, i = (e.max.x - h.x) * c) : (r = (e.max.x - h.x) * c, i = (e.min.x - h.x) * c), u >= 0 ? (s = (e.min.y - h.y) * u, o = (e.max.y - h.y) * u) : (s = (e.max.y - h.y) * u, o = (e.min.y - h.y) * u), r > o || s > i || ((s > r || isNaN(r)) && (r = s), (o < i || isNaN(i)) && (i = o), f >= 0 ? (a = (e.min.z - h.z) * f, l = (e.max.z - h.z) * f) : (a = (e.max.z - h.z) * f, l = (e.min.z - h.z) * f), r > l || a > i) || ((a > r || r !== r) && (r = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(r >= 0 ? r : i, n);
        }
        intersectsBox(e) {
            return this.intersectBox(e, od) !== null;
        }
        intersectTriangle(e, n, r, i, s) {
            bA.subVectors(n, e), A1.subVectors(r, e), wA.crossVectors(bA, A1);
            let o = this.direction.dot(wA), a;
            if (o > 0) {
                if (i) return null;
                a = 1;
            } else if (o < 0) a = -1, o = -o;
            else return null;
            Of.subVectors(this.origin, e);
            const l = a * this.direction.dot(A1.crossVectors(Of, A1));
            if (l < 0) return null;
            const c = a * this.direction.dot(bA.cross(Of));
            if (c < 0 || l + c > o) return null;
            const u = -a * Of.dot(wA);
            return u < 0 ? null : this.at(u / o, s);
        }
        applyMatrix4(e) {
            return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
        }
        equals(e) {
            return e.origin.equals(this.origin) && e.direction.equals(this.direction);
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class gn {
        constructor(e, n, r, i, s, o, a, l, c, u, f, h, m, v, _, w){
            gn.prototype.isMatrix4 = !0, this.elements = [
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                1
            ], e !== void 0 && this.set(e, n, r, i, s, o, a, l, c, u, f, h, m, v, _, w);
        }
        set(e, n, r, i, s, o, a, l, c, u, f, h, m, v, _, w) {
            const b = this.elements;
            return b[0] = e, b[4] = n, b[8] = r, b[12] = i, b[1] = s, b[5] = o, b[9] = a, b[13] = l, b[2] = c, b[6] = u, b[10] = f, b[14] = h, b[3] = m, b[7] = v, b[11] = _, b[15] = w, this;
        }
        identity() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        }
        clone() {
            return new gn().fromArray(this.elements);
        }
        copy(e) {
            const n = this.elements, r = e.elements;
            return n[0] = r[0], n[1] = r[1], n[2] = r[2], n[3] = r[3], n[4] = r[4], n[5] = r[5], n[6] = r[6], n[7] = r[7], n[8] = r[8], n[9] = r[9], n[10] = r[10], n[11] = r[11], n[12] = r[12], n[13] = r[13], n[14] = r[14], n[15] = r[15], this;
        }
        copyPosition(e) {
            const n = this.elements, r = e.elements;
            return n[12] = r[12], n[13] = r[13], n[14] = r[14], this;
        }
        setFromMatrix3(e) {
            const n = e.elements;
            return this.set(n[0], n[3], n[6], 0, n[1], n[4], n[7], 0, n[2], n[5], n[8], 0, 0, 0, 0, 1), this;
        }
        extractBasis(e, n, r) {
            return e.setFromMatrixColumn(this, 0), n.setFromMatrixColumn(this, 1), r.setFromMatrixColumn(this, 2), this;
        }
        makeBasis(e, n, r) {
            return this.set(e.x, n.x, r.x, 0, e.y, n.y, r.y, 0, e.z, n.z, r.z, 0, 0, 0, 0, 1), this;
        }
        extractRotation(e) {
            const n = this.elements, r = e.elements, i = 1 / Qg.setFromMatrixColumn(e, 0).length(), s = 1 / Qg.setFromMatrixColumn(e, 1).length(), o = 1 / Qg.setFromMatrixColumn(e, 2).length();
            return n[0] = r[0] * i, n[1] = r[1] * i, n[2] = r[2] * i, n[3] = 0, n[4] = r[4] * s, n[5] = r[5] * s, n[6] = r[6] * s, n[7] = 0, n[8] = r[8] * o, n[9] = r[9] * o, n[10] = r[10] * o, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, this;
        }
        makeRotationFromEuler(e) {
            const n = this.elements, r = e.x, i = e.y, s = e.z, o = Math.cos(r), a = Math.sin(r), l = Math.cos(i), c = Math.sin(i), u = Math.cos(s), f = Math.sin(s);
            if (e.order === "XYZ") {
                const h = o * u, m = o * f, v = a * u, _ = a * f;
                n[0] = l * u, n[4] = -l * f, n[8] = c, n[1] = m + v * c, n[5] = h - _ * c, n[9] = -a * l, n[2] = _ - h * c, n[6] = v + m * c, n[10] = o * l;
            } else if (e.order === "YXZ") {
                const h = l * u, m = l * f, v = c * u, _ = c * f;
                n[0] = h + _ * a, n[4] = v * a - m, n[8] = o * c, n[1] = o * f, n[5] = o * u, n[9] = -a, n[2] = m * a - v, n[6] = _ + h * a, n[10] = o * l;
            } else if (e.order === "ZXY") {
                const h = l * u, m = l * f, v = c * u, _ = c * f;
                n[0] = h - _ * a, n[4] = -o * f, n[8] = v + m * a, n[1] = m + v * a, n[5] = o * u, n[9] = _ - h * a, n[2] = -o * c, n[6] = a, n[10] = o * l;
            } else if (e.order === "ZYX") {
                const h = o * u, m = o * f, v = a * u, _ = a * f;
                n[0] = l * u, n[4] = v * c - m, n[8] = h * c + _, n[1] = l * f, n[5] = _ * c + h, n[9] = m * c - v, n[2] = -c, n[6] = a * l, n[10] = o * l;
            } else if (e.order === "YZX") {
                const h = o * l, m = o * c, v = a * l, _ = a * c;
                n[0] = l * u, n[4] = _ - h * f, n[8] = v * f + m, n[1] = f, n[5] = o * u, n[9] = -a * u, n[2] = -c * u, n[6] = m * f + v, n[10] = h - _ * f;
            } else if (e.order === "XZY") {
                const h = o * l, m = o * c, v = a * l, _ = a * c;
                n[0] = l * u, n[4] = -f, n[8] = c * u, n[1] = h * f + _, n[5] = o * u, n[9] = m * f - v, n[2] = v * f - m, n[6] = a * u, n[10] = _ * f + h;
            }
            return n[3] = 0, n[7] = 0, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, this;
        }
        makeRotationFromQuaternion(e) {
            return this.compose(Kge, e, Yge);
        }
        lookAt(e, n, r) {
            const i = this.elements;
            return Ba.subVectors(e, n), Ba.lengthSq() === 0 && (Ba.z = 1), Ba.normalize(), Df.crossVectors(r, Ba), Df.lengthSq() === 0 && (Math.abs(r.z) === 1 ? Ba.x += 1e-4 : Ba.z += 1e-4, Ba.normalize(), Df.crossVectors(r, Ba)), Df.normalize(), N1.crossVectors(Ba, Df), i[0] = Df.x, i[4] = N1.x, i[8] = Ba.x, i[1] = Df.y, i[5] = N1.y, i[9] = Ba.y, i[2] = Df.z, i[6] = N1.z, i[10] = Ba.z, this;
        }
        multiply(e) {
            return this.multiplyMatrices(this, e);
        }
        premultiply(e) {
            return this.multiplyMatrices(e, this);
        }
        multiplyMatrices(e, n) {
            const r = e.elements, i = n.elements, s = this.elements, o = r[0], a = r[4], l = r[8], c = r[12], u = r[1], f = r[5], h = r[9], m = r[13], v = r[2], _ = r[6], w = r[10], b = r[14], M = r[3], E = r[7], T = r[11], P = r[15], A = i[0], O = i[4], D = i[8], R = i[12], N = i[1], k = i[5], U = i[9], B = i[13], j = i[2], K = i[6], q = i[10], ee = i[14], W = i[3], Z = i[7], $ = i[11], H = i[15];
            return s[0] = o * A + a * N + l * j + c * W, s[4] = o * O + a * k + l * K + c * Z, s[8] = o * D + a * U + l * q + c * $, s[12] = o * R + a * B + l * ee + c * H, s[1] = u * A + f * N + h * j + m * W, s[5] = u * O + f * k + h * K + m * Z, s[9] = u * D + f * U + h * q + m * $, s[13] = u * R + f * B + h * ee + m * H, s[2] = v * A + _ * N + w * j + b * W, s[6] = v * O + _ * k + w * K + b * Z, s[10] = v * D + _ * U + w * q + b * $, s[14] = v * R + _ * B + w * ee + b * H, s[3] = M * A + E * N + T * j + P * W, s[7] = M * O + E * k + T * K + P * Z, s[11] = M * D + E * U + T * q + P * $, s[15] = M * R + E * B + T * ee + P * H, this;
        }
        multiplyScalar(e) {
            const n = this.elements;
            return n[0] *= e, n[4] *= e, n[8] *= e, n[12] *= e, n[1] *= e, n[5] *= e, n[9] *= e, n[13] *= e, n[2] *= e, n[6] *= e, n[10] *= e, n[14] *= e, n[3] *= e, n[7] *= e, n[11] *= e, n[15] *= e, this;
        }
        determinant() {
            const e = this.elements, n = e[0], r = e[4], i = e[8], s = e[12], o = e[1], a = e[5], l = e[9], c = e[13], u = e[2], f = e[6], h = e[10], m = e[14], v = e[3], _ = e[7], w = e[11], b = e[15];
            return v * (+s * l * f - i * c * f - s * a * h + r * c * h + i * a * m - r * l * m) + _ * (+n * l * m - n * c * h + s * o * h - i * o * m + i * c * u - s * l * u) + w * (+n * c * f - n * a * m - s * o * f + r * o * m + s * a * u - r * c * u) + b * (-i * a * u - n * l * f + n * a * h + i * o * f - r * o * h + r * l * u);
        }
        transpose() {
            const e = this.elements;
            let n;
            return n = e[1], e[1] = e[4], e[4] = n, n = e[2], e[2] = e[8], e[8] = n, n = e[6], e[6] = e[9], e[9] = n, n = e[3], e[3] = e[12], e[12] = n, n = e[7], e[7] = e[13], e[13] = n, n = e[11], e[11] = e[14], e[14] = n, this;
        }
        setPosition(e, n, r) {
            const i = this.elements;
            return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = n, i[14] = r), this;
        }
        invert() {
            const e = this.elements, n = e[0], r = e[1], i = e[2], s = e[3], o = e[4], a = e[5], l = e[6], c = e[7], u = e[8], f = e[9], h = e[10], m = e[11], v = e[12], _ = e[13], w = e[14], b = e[15], M = f * w * c - _ * h * c + _ * l * m - a * w * m - f * l * b + a * h * b, E = v * h * c - u * w * c - v * l * m + o * w * m + u * l * b - o * h * b, T = u * _ * c - v * f * c + v * a * m - o * _ * m - u * a * b + o * f * b, P = v * f * l - u * _ * l - v * a * h + o * _ * h + u * a * w - o * f * w, A = n * M + r * E + i * T + s * P;
            if (A === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            const O = 1 / A;
            return e[0] = M * O, e[1] = (_ * h * s - f * w * s - _ * i * m + r * w * m + f * i * b - r * h * b) * O, e[2] = (a * w * s - _ * l * s + _ * i * c - r * w * c - a * i * b + r * l * b) * O, e[3] = (f * l * s - a * h * s - f * i * c + r * h * c + a * i * m - r * l * m) * O, e[4] = E * O, e[5] = (u * w * s - v * h * s + v * i * m - n * w * m - u * i * b + n * h * b) * O, e[6] = (v * l * s - o * w * s - v * i * c + n * w * c + o * i * b - n * l * b) * O, e[7] = (o * h * s - u * l * s + u * i * c - n * h * c - o * i * m + n * l * m) * O, e[8] = T * O, e[9] = (v * f * s - u * _ * s - v * r * m + n * _ * m + u * r * b - n * f * b) * O, e[10] = (o * _ * s - v * a * s + v * r * c - n * _ * c - o * r * b + n * a * b) * O, e[11] = (u * a * s - o * f * s - u * r * c + n * f * c + o * r * m - n * a * m) * O, e[12] = P * O, e[13] = (u * _ * i - v * f * i + v * r * h - n * _ * h - u * r * w + n * f * w) * O, e[14] = (v * a * i - o * _ * i - v * r * l + n * _ * l + o * r * w - n * a * w) * O, e[15] = (o * f * i - u * a * i + u * r * l - n * f * l - o * r * h + n * a * h) * O, this;
        }
        scale(e) {
            const n = this.elements, r = e.x, i = e.y, s = e.z;
            return n[0] *= r, n[4] *= i, n[8] *= s, n[1] *= r, n[5] *= i, n[9] *= s, n[2] *= r, n[6] *= i, n[10] *= s, n[3] *= r, n[7] *= i, n[11] *= s, this;
        }
        getMaxScaleOnAxis() {
            const e = this.elements, n = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
            return Math.sqrt(Math.max(n, r, i));
        }
        makeTranslation(e, n, r) {
            return e.isVector3 ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1) : this.set(1, 0, 0, e, 0, 1, 0, n, 0, 0, 1, r, 0, 0, 0, 1), this;
        }
        makeRotationX(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(1, 0, 0, 0, 0, n, -r, 0, 0, r, n, 0, 0, 0, 0, 1), this;
        }
        makeRotationY(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(n, 0, r, 0, 0, 1, 0, 0, -r, 0, n, 0, 0, 0, 0, 1), this;
        }
        makeRotationZ(e) {
            const n = Math.cos(e), r = Math.sin(e);
            return this.set(n, -r, 0, 0, r, n, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        }
        makeRotationAxis(e, n) {
            const r = Math.cos(n), i = Math.sin(n), s = 1 - r, o = e.x, a = e.y, l = e.z, c = s * o, u = s * a;
            return this.set(c * o + r, c * a - i * l, c * l + i * a, 0, c * a + i * l, u * a + r, u * l - i * o, 0, c * l - i * a, u * l + i * o, s * l * l + r, 0, 0, 0, 0, 1), this;
        }
        makeScale(e, n, r) {
            return this.set(e, 0, 0, 0, 0, n, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this;
        }
        makeShear(e, n, r, i, s, o) {
            return this.set(1, r, s, 0, e, 1, o, 0, n, i, 1, 0, 0, 0, 0, 1), this;
        }
        compose(e, n, r) {
            const i = this.elements, s = n._x, o = n._y, a = n._z, l = n._w, c = s + s, u = o + o, f = a + a, h = s * c, m = s * u, v = s * f, _ = o * u, w = o * f, b = a * f, M = l * c, E = l * u, T = l * f, P = r.x, A = r.y, O = r.z;
            return i[0] = (1 - (_ + b)) * P, i[1] = (m + T) * P, i[2] = (v - E) * P, i[3] = 0, i[4] = (m - T) * A, i[5] = (1 - (h + b)) * A, i[6] = (w + M) * A, i[7] = 0, i[8] = (v + E) * O, i[9] = (w - M) * O, i[10] = (1 - (h + _)) * O, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
        }
        decompose(e, n, r) {
            const i = this.elements;
            let s = Qg.set(i[0], i[1], i[2]).length();
            const o = Qg.set(i[4], i[5], i[6]).length(), a = Qg.set(i[8], i[9], i[10]).length();
            this.determinant() < 0 && (s = -s), e.x = i[12], e.y = i[13], e.z = i[14], rc.copy(this);
            const c = 1 / s, u = 1 / o, f = 1 / a;
            return rc.elements[0] *= c, rc.elements[1] *= c, rc.elements[2] *= c, rc.elements[4] *= u, rc.elements[5] *= u, rc.elements[6] *= u, rc.elements[8] *= f, rc.elements[9] *= f, rc.elements[10] *= f, n.setFromRotationMatrix(rc), r.x = s, r.y = o, r.z = a, this;
        }
        makePerspective(e, n, r, i, s, o, a = gc) {
            const l = this.elements, c = 2 * s / (n - e), u = 2 * s / (r - i), f = (n + e) / (n - e), h = (r + i) / (r - i);
            let m, v;
            if (a === gc) m = -(o + s) / (o - s), v = -2 * o * s / (o - s);
            else if (a === ew) m = -o / (o - s), v = -o * s / (o - s);
            else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: " + a);
            return l[0] = c, l[4] = 0, l[8] = f, l[12] = 0, l[1] = 0, l[5] = u, l[9] = h, l[13] = 0, l[2] = 0, l[6] = 0, l[10] = m, l[14] = v, l[3] = 0, l[7] = 0, l[11] = -1, l[15] = 0, this;
        }
        makeOrthographic(e, n, r, i, s, o, a = gc) {
            const l = this.elements, c = 1 / (n - e), u = 1 / (r - i), f = 1 / (o - s), h = (n + e) * c, m = (r + i) * u;
            let v, _;
            if (a === gc) v = (o + s) * f, _ = -2 * f;
            else if (a === ew) v = s * f, _ = -1 * f;
            else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + a);
            return l[0] = 2 * c, l[4] = 0, l[8] = 0, l[12] = -h, l[1] = 0, l[5] = 2 * u, l[9] = 0, l[13] = -m, l[2] = 0, l[6] = 0, l[10] = _, l[14] = -v, l[3] = 0, l[7] = 0, l[11] = 0, l[15] = 1, this;
        }
        equals(e) {
            const n = this.elements, r = e.elements;
            for(let i = 0; i < 16; i++)if (n[i] !== r[i]) return !1;
            return !0;
        }
        fromArray(e, n = 0) {
            for(let r = 0; r < 16; r++)this.elements[r] = e[r + n];
            return this;
        }
        toArray(e = [], n = 0) {
            const r = this.elements;
            return e[n] = r[0], e[n + 1] = r[1], e[n + 2] = r[2], e[n + 3] = r[3], e[n + 4] = r[4], e[n + 5] = r[5], e[n + 6] = r[6], e[n + 7] = r[7], e[n + 8] = r[8], e[n + 9] = r[9], e[n + 10] = r[10], e[n + 11] = r[11], e[n + 12] = r[12], e[n + 13] = r[13], e[n + 14] = r[14], e[n + 15] = r[15], e;
        }
    }
    const Qg = new ve, rc = new gn, Kge = new ve(0, 0, 0), Yge = new ve(1, 1, 1), Df = new ve, N1 = new ve, Ba = new ve, K6 = new gn, Y6 = new fo;
    class tl {
        constructor(e = 0, n = 0, r = 0, i = tl.DEFAULT_ORDER){
            this.isEuler = !0, this._x = e, this._y = n, this._z = r, this._order = i;
        }
        get x() {
            return this._x;
        }
        set x(e) {
            this._x = e, this._onChangeCallback();
        }
        get y() {
            return this._y;
        }
        set y(e) {
            this._y = e, this._onChangeCallback();
        }
        get z() {
            return this._z;
        }
        set z(e) {
            this._z = e, this._onChangeCallback();
        }
        get order() {
            return this._order;
        }
        set order(e) {
            this._order = e, this._onChangeCallback();
        }
        set(e, n, r, i = this._order) {
            return this._x = e, this._y = n, this._z = r, this._order = i, this._onChangeCallback(), this;
        }
        clone() {
            return new this.constructor(this._x, this._y, this._z, this._order);
        }
        copy(e) {
            return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
        }
        setFromRotationMatrix(e, n = this._order, r = !0) {
            const i = e.elements, s = i[0], o = i[4], a = i[8], l = i[1], c = i[5], u = i[9], f = i[2], h = i[6], m = i[10];
            switch(n){
                case "XYZ":
                    this._y = Math.asin(Cn(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-u, m), this._z = Math.atan2(-o, s)) : (this._x = Math.atan2(h, c), this._z = 0);
                    break;
                case "YXZ":
                    this._x = Math.asin(-Cn(u, -1, 1)), Math.abs(u) < .9999999 ? (this._y = Math.atan2(a, m), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-f, s), this._z = 0);
                    break;
                case "ZXY":
                    this._x = Math.asin(Cn(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(-f, m), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, s));
                    break;
                case "ZYX":
                    this._y = Math.asin(-Cn(f, -1, 1)), Math.abs(f) < .9999999 ? (this._x = Math.atan2(h, m), this._z = Math.atan2(l, s)) : (this._x = 0, this._z = Math.atan2(-o, c));
                    break;
                case "YZX":
                    this._z = Math.asin(Cn(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-u, c), this._y = Math.atan2(-f, s)) : (this._x = 0, this._y = Math.atan2(a, m));
                    break;
                case "XZY":
                    this._z = Math.asin(-Cn(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(h, c), this._y = Math.atan2(a, s)) : (this._x = Math.atan2(-u, m), this._y = 0);
                    break;
                default:
                    console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + n);
            }
            return this._order = n, r === !0 && this._onChangeCallback(), this;
        }
        setFromQuaternion(e, n, r) {
            return K6.makeRotationFromQuaternion(e), this.setFromRotationMatrix(K6, n, r);
        }
        setFromVector3(e, n = this._order) {
            return this.set(e.x, e.y, e.z, n);
        }
        reorder(e) {
            return Y6.setFromEuler(this), this.setFromQuaternion(Y6, e);
        }
        equals(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
        }
        fromArray(e) {
            return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this._x, e[n + 1] = this._y, e[n + 2] = this._z, e[n + 3] = this._order, e;
        }
        _onChange(e) {
            return this._onChangeCallback = e, this;
        }
        _onChangeCallback() {}
        *[Symbol.iterator]() {
            yield this._x, yield this._y, yield this._z, yield this._order;
        }
    }
    tl.DEFAULT_ORDER = "XYZ";
    class hm {
        constructor(){
            this.mask = 1;
        }
        set(e) {
            this.mask = (1 << e | 0) >>> 0;
        }
        enable(e) {
            this.mask |= 1 << e | 0;
        }
        enableAll() {
            this.mask = -1;
        }
        toggle(e) {
            this.mask ^= 1 << e | 0;
        }
        disable(e) {
            this.mask &= ~(1 << e | 0);
        }
        disableAll() {
            this.mask = 0;
        }
        test(e) {
            return (this.mask & e.mask) !== 0;
        }
        isEnabled(e) {
            return (this.mask & (1 << e | 0)) !== 0;
        }
    }
    let Zge = 0;
    const Z6 = new ve, e0 = new fo, ad = new gn, P1 = new ve, ex = new ve, Jge = new ve, Qge = new fo, J6 = new ve(1, 0, 0), Q6 = new ve(0, 1, 0), e8 = new ve(0, 0, 1), t8 = {
        type: "added"
    }, e0e = {
        type: "removed"
    }, t0 = {
        type: "childadded",
        child: null
    }, _A = {
        type: "childremoved",
        child: null
    };
    class ur extends vu {
        constructor(){
            super(), this.isObject3D = !0, Object.defineProperty(this, "id", {
                value: Zge++
            }), this.uuid = Ya(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = ur.DEFAULT_UP.clone();
            const e = new ve, n = new tl, r = new fo, i = new ve(1, 1, 1);
            function s() {
                r.setFromEuler(n, !1);
            }
            function o() {
                n.setFromQuaternion(r, void 0, !1);
            }
            n._onChange(s), r._onChange(o), Object.defineProperties(this, {
                position: {
                    configurable: !0,
                    enumerable: !0,
                    value: e
                },
                rotation: {
                    configurable: !0,
                    enumerable: !0,
                    value: n
                },
                quaternion: {
                    configurable: !0,
                    enumerable: !0,
                    value: r
                },
                scale: {
                    configurable: !0,
                    enumerable: !0,
                    value: i
                },
                modelViewMatrix: {
                    value: new gn
                },
                normalMatrix: {
                    value: new An
                }
            }), this.matrix = new gn, this.matrixWorld = new gn, this.matrixAutoUpdate = ur.DEFAULT_MATRIX_AUTO_UPDATE, this.matrixWorldAutoUpdate = ur.DEFAULT_MATRIX_WORLD_AUTO_UPDATE, this.matrixWorldNeedsUpdate = !1, this.layers = new hm, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
        }
        onBeforeShadow() {}
        onAfterShadow() {}
        onBeforeRender() {}
        onAfterRender() {}
        applyMatrix4(e) {
            this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
        }
        applyQuaternion(e) {
            return this.quaternion.premultiply(e), this;
        }
        setRotationFromAxisAngle(e, n) {
            this.quaternion.setFromAxisAngle(e, n);
        }
        setRotationFromEuler(e) {
            this.quaternion.setFromEuler(e, !0);
        }
        setRotationFromMatrix(e) {
            this.quaternion.setFromRotationMatrix(e);
        }
        setRotationFromQuaternion(e) {
            this.quaternion.copy(e);
        }
        rotateOnAxis(e, n) {
            return e0.setFromAxisAngle(e, n), this.quaternion.multiply(e0), this;
        }
        rotateOnWorldAxis(e, n) {
            return e0.setFromAxisAngle(e, n), this.quaternion.premultiply(e0), this;
        }
        rotateX(e) {
            return this.rotateOnAxis(J6, e);
        }
        rotateY(e) {
            return this.rotateOnAxis(Q6, e);
        }
        rotateZ(e) {
            return this.rotateOnAxis(e8, e);
        }
        translateOnAxis(e, n) {
            return Z6.copy(e).applyQuaternion(this.quaternion), this.position.add(Z6.multiplyScalar(n)), this;
        }
        translateX(e) {
            return this.translateOnAxis(J6, e);
        }
        translateY(e) {
            return this.translateOnAxis(Q6, e);
        }
        translateZ(e) {
            return this.translateOnAxis(e8, e);
        }
        localToWorld(e) {
            return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
        }
        worldToLocal(e) {
            return this.updateWorldMatrix(!0, !1), e.applyMatrix4(ad.copy(this.matrixWorld).invert());
        }
        lookAt(e, n, r) {
            e.isVector3 ? P1.copy(e) : P1.set(e, n, r);
            const i = this.parent;
            this.updateWorldMatrix(!0, !1), ex.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? ad.lookAt(ex, P1, this.up) : ad.lookAt(P1, ex, this.up), this.quaternion.setFromRotationMatrix(ad), i && (ad.extractRotation(i.matrixWorld), e0.setFromRotationMatrix(ad), this.quaternion.premultiply(e0.invert()));
        }
        add(e) {
            if (arguments.length > 1) {
                for(let n = 0; n < arguments.length; n++)this.add(arguments[n]);
                return this;
            }
            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.removeFromParent(), e.parent = this, this.children.push(e), e.dispatchEvent(t8), t0.child = e, this.dispatchEvent(t0), t0.child = null) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
        }
        remove(e) {
            if (arguments.length > 1) {
                for(let r = 0; r < arguments.length; r++)this.remove(arguments[r]);
                return this;
            }
            const n = this.children.indexOf(e);
            return n !== -1 && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(e0e), _A.child = e, this.dispatchEvent(_A), _A.child = null), this;
        }
        removeFromParent() {
            const e = this.parent;
            return e !== null && e.remove(this), this;
        }
        clear() {
            return this.remove(...this.children);
        }
        attach(e) {
            return this.updateWorldMatrix(!0, !1), ad.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), ad.multiply(e.parent.matrixWorld)), e.applyMatrix4(ad), e.removeFromParent(), e.parent = this, this.children.push(e), e.updateWorldMatrix(!1, !0), e.dispatchEvent(t8), t0.child = e, this.dispatchEvent(t0), t0.child = null, this;
        }
        getObjectById(e) {
            return this.getObjectByProperty("id", e);
        }
        getObjectByName(e) {
            return this.getObjectByProperty("name", e);
        }
        getObjectByProperty(e, n) {
            if (this[e] === n) return this;
            for(let r = 0, i = this.children.length; r < i; r++){
                const o = this.children[r].getObjectByProperty(e, n);
                if (o !== void 0) return o;
            }
        }
        getObjectsByProperty(e, n, r = []) {
            this[e] === n && r.push(this);
            const i = this.children;
            for(let s = 0, o = i.length; s < o; s++)i[s].getObjectsByProperty(e, n, r);
            return r;
        }
        getWorldPosition(e) {
            return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
        }
        getWorldQuaternion(e) {
            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(ex, e, Jge), e;
        }
        getWorldScale(e) {
            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(ex, Qge, e), e;
        }
        getWorldDirection(e) {
            this.updateWorldMatrix(!0, !1);
            const n = this.matrixWorld.elements;
            return e.set(n[8], n[9], n[10]).normalize();
        }
        raycast() {}
        traverse(e) {
            e(this);
            const n = this.children;
            for(let r = 0, i = n.length; r < i; r++)n[r].traverse(e);
        }
        traverseVisible(e) {
            if (this.visible === !1) return;
            e(this);
            const n = this.children;
            for(let r = 0, i = n.length; r < i; r++)n[r].traverseVisible(e);
        }
        traverseAncestors(e) {
            const n = this.parent;
            n !== null && (e(n), n.traverseAncestors(e));
        }
        updateMatrix() {
            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
        }
        updateMatrixWorld(e) {
            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.matrixWorldAutoUpdate === !0 && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)), this.matrixWorldNeedsUpdate = !1, e = !0);
            const n = this.children;
            for(let r = 0, i = n.length; r < i; r++)n[r].updateMatrixWorld(e);
        }
        updateWorldMatrix(e, n) {
            const r = this.parent;
            if (e === !0 && r !== null && r.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.matrixWorldAutoUpdate === !0 && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)), n === !0) {
                const i = this.children;
                for(let s = 0, o = i.length; s < o; s++)i[s].updateWorldMatrix(!1, !0);
            }
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string", r = {};
            n && (e = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {},
                skeletons: {},
                animations: {},
                nodes: {}
            }, r.metadata = {
                version: 4.6,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            const i = {};
            i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), Object.keys(this.userData).length > 0 && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), i.up = this.up.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON())), this.isBatchedMesh && (i.type = "BatchedMesh", i.perObjectFrustumCulled = this.perObjectFrustumCulled, i.sortObjects = this.sortObjects, i.drawRanges = this._drawRanges, i.reservedRanges = this._reservedRanges, i.visibility = this._visibility, i.active = this._active, i.bounds = this._bounds.map((a)=>({
                    boxInitialized: a.boxInitialized,
                    boxMin: a.box.min.toArray(),
                    boxMax: a.box.max.toArray(),
                    sphereInitialized: a.sphereInitialized,
                    sphereRadius: a.sphere.radius,
                    sphereCenter: a.sphere.center.toArray()
                })), i.maxInstanceCount = this._maxInstanceCount, i.maxVertexCount = this._maxVertexCount, i.maxIndexCount = this._maxIndexCount, i.geometryInitialized = this._geometryInitialized, i.geometryCount = this._geometryCount, i.matricesTexture = this._matricesTexture.toJSON(e), this._colorsTexture !== null && (i.colorsTexture = this._colorsTexture.toJSON(e)), this.boundingSphere !== null && (i.boundingSphere = {
                center: i.boundingSphere.center.toArray(),
                radius: i.boundingSphere.radius
            }), this.boundingBox !== null && (i.boundingBox = {
                min: i.boundingBox.min.toArray(),
                max: i.boundingBox.max.toArray()
            }));
            function s(a, l) {
                return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
            }
            if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== !0 && (i.environment = this.environment.toJSON(e).uuid);
            else if (this.isMesh || this.isLine || this.isPoints) {
                i.geometry = s(e.geometries, this.geometry);
                const a = this.geometry.parameters;
                if (a !== void 0 && a.shapes !== void 0) {
                    const l = a.shapes;
                    if (Array.isArray(l)) for(let c = 0, u = l.length; c < u; c++){
                        const f = l[c];
                        s(e.shapes, f);
                    }
                    else s(e.shapes, l);
                }
            }
            if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (s(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
                const a = [];
                for(let l = 0, c = this.material.length; l < c; l++)a.push(s(e.materials, this.material[l]));
                i.material = a;
            } else i.material = s(e.materials, this.material);
            if (this.children.length > 0) {
                i.children = [];
                for(let a = 0; a < this.children.length; a++)i.children.push(this.children[a].toJSON(e).object);
            }
            if (this.animations.length > 0) {
                i.animations = [];
                for(let a = 0; a < this.animations.length; a++){
                    const l = this.animations[a];
                    i.animations.push(s(e.animations, l));
                }
            }
            if (n) {
                const a = o(e.geometries), l = o(e.materials), c = o(e.textures), u = o(e.images), f = o(e.shapes), h = o(e.skeletons), m = o(e.animations), v = o(e.nodes);
                a.length > 0 && (r.geometries = a), l.length > 0 && (r.materials = l), c.length > 0 && (r.textures = c), u.length > 0 && (r.images = u), f.length > 0 && (r.shapes = f), h.length > 0 && (r.skeletons = h), m.length > 0 && (r.animations = m), v.length > 0 && (r.nodes = v);
            }
            return r.object = i, r;
            function o(a) {
                const l = [];
                for(const c in a){
                    const u = a[c];
                    delete u.metadata, l.push(u);
                }
                return l;
            }
        }
        clone(e) {
            return new this.constructor().copy(this, e);
        }
        copy(e, n = !0) {
            if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.animations = e.animations.slice(), this.userData = JSON.parse(JSON.stringify(e.userData)), n === !0) for(let r = 0; r < e.children.length; r++){
                const i = e.children[r];
                this.add(i.clone());
            }
            return this;
        }
    }
    ur.DEFAULT_UP = new ve(0, 1, 0);
    ur.DEFAULT_MATRIX_AUTO_UPDATE = !0;
    ur.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
    const ic = new ve, ld = new ve, SA = new ve, cd = new ve, n0 = new ve, r0 = new ve, n8 = new ve, EA = new ve, MA = new ve, TA = new ve, CA = new cr, RA = new cr, IA = new cr;
    class ga {
        constructor(e = new ve, n = new ve, r = new ve){
            this.a = e, this.b = n, this.c = r;
        }
        static getNormal(e, n, r, i) {
            i.subVectors(r, n), ic.subVectors(e, n), i.cross(ic);
            const s = i.lengthSq();
            return s > 0 ? i.multiplyScalar(1 / Math.sqrt(s)) : i.set(0, 0, 0);
        }
        static getBarycoord(e, n, r, i, s) {
            ic.subVectors(i, n), ld.subVectors(r, n), SA.subVectors(e, n);
            const o = ic.dot(ic), a = ic.dot(ld), l = ic.dot(SA), c = ld.dot(ld), u = ld.dot(SA), f = o * c - a * a;
            if (f === 0) return s.set(0, 0, 0), null;
            const h = 1 / f, m = (c * l - a * u) * h, v = (o * u - a * l) * h;
            return s.set(1 - m - v, v, m);
        }
        static containsPoint(e, n, r, i) {
            return this.getBarycoord(e, n, r, i, cd) === null ? !1 : cd.x >= 0 && cd.y >= 0 && cd.x + cd.y <= 1;
        }
        static getInterpolation(e, n, r, i, s, o, a, l) {
            return this.getBarycoord(e, n, r, i, cd) === null ? (l.x = 0, l.y = 0, "z" in l && (l.z = 0), "w" in l && (l.w = 0), null) : (l.setScalar(0), l.addScaledVector(s, cd.x), l.addScaledVector(o, cd.y), l.addScaledVector(a, cd.z), l);
        }
        static getInterpolatedAttribute(e, n, r, i, s, o) {
            return CA.setScalar(0), RA.setScalar(0), IA.setScalar(0), CA.fromBufferAttribute(e, n), RA.fromBufferAttribute(e, r), IA.fromBufferAttribute(e, i), o.setScalar(0), o.addScaledVector(CA, s.x), o.addScaledVector(RA, s.y), o.addScaledVector(IA, s.z), o;
        }
        static isFrontFacing(e, n, r, i) {
            return ic.subVectors(r, n), ld.subVectors(e, n), ic.cross(ld).dot(i) < 0;
        }
        set(e, n, r) {
            return this.a.copy(e), this.b.copy(n), this.c.copy(r), this;
        }
        setFromPointsAndIndices(e, n, r, i) {
            return this.a.copy(e[n]), this.b.copy(e[r]), this.c.copy(e[i]), this;
        }
        setFromAttributeAndIndices(e, n, r, i) {
            return this.a.fromBufferAttribute(e, n), this.b.fromBufferAttribute(e, r), this.c.fromBufferAttribute(e, i), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
        }
        getArea() {
            return ic.subVectors(this.c, this.b), ld.subVectors(this.a, this.b), ic.cross(ld).length() * .5;
        }
        getMidpoint(e) {
            return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
        }
        getNormal(e) {
            return ga.getNormal(this.a, this.b, this.c, e);
        }
        getPlane(e) {
            return e.setFromCoplanarPoints(this.a, this.b, this.c);
        }
        getBarycoord(e, n) {
            return ga.getBarycoord(e, this.a, this.b, this.c, n);
        }
        getInterpolation(e, n, r, i, s) {
            return ga.getInterpolation(e, this.a, this.b, this.c, n, r, i, s);
        }
        containsPoint(e) {
            return ga.containsPoint(e, this.a, this.b, this.c);
        }
        isFrontFacing(e) {
            return ga.isFrontFacing(this.a, this.b, this.c, e);
        }
        intersectsBox(e) {
            return e.intersectsTriangle(this);
        }
        closestPointToPoint(e, n) {
            const r = this.a, i = this.b, s = this.c;
            let o, a;
            n0.subVectors(i, r), r0.subVectors(s, r), EA.subVectors(e, r);
            const l = n0.dot(EA), c = r0.dot(EA);
            if (l <= 0 && c <= 0) return n.copy(r);
            MA.subVectors(e, i);
            const u = n0.dot(MA), f = r0.dot(MA);
            if (u >= 0 && f <= u) return n.copy(i);
            const h = l * f - u * c;
            if (h <= 0 && l >= 0 && u <= 0) return o = l / (l - u), n.copy(r).addScaledVector(n0, o);
            TA.subVectors(e, s);
            const m = n0.dot(TA), v = r0.dot(TA);
            if (v >= 0 && m <= v) return n.copy(s);
            const _ = m * c - l * v;
            if (_ <= 0 && c >= 0 && v <= 0) return a = c / (c - v), n.copy(r).addScaledVector(r0, a);
            const w = u * v - m * f;
            if (w <= 0 && f - u >= 0 && m - v >= 0) return n8.subVectors(s, i), a = (f - u) / (f - u + (m - v)), n.copy(i).addScaledVector(n8, a);
            const b = 1 / (w + _ + h);
            return o = _ * b, a = h * b, n.copy(r).addScaledVector(n0, o).addScaledVector(r0, a);
        }
        equals(e) {
            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
        }
    }
    const aq = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    }, Lf = {
        h: 0,
        s: 0,
        l: 0
    }, k1 = {
        h: 0,
        s: 0,
        l: 0
    };
    function AA(t, e, n) {
        return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? t + (e - t) * 6 * n : n < 1 / 2 ? e : n < 2 / 3 ? t + (e - t) * 6 * (2 / 3 - n) : t;
    }
    class jt {
        constructor(e, n, r){
            return this.isColor = !0, this.r = 1, this.g = 1, this.b = 1, this.set(e, n, r);
        }
        set(e, n, r) {
            if (n === void 0 && r === void 0) {
                const i = e;
                i && i.isColor ? this.copy(i) : typeof i == "number" ? this.setHex(i) : typeof i == "string" && this.setStyle(i);
            } else this.setRGB(e, n, r);
            return this;
        }
        setScalar(e) {
            return this.r = e, this.g = e, this.b = e, this;
        }
        setHex(e, n = ma) {
            return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, rr.toWorkingColorSpace(this, n), this;
        }
        setRGB(e, n, r, i = rr.workingColorSpace) {
            return this.r = e, this.g = n, this.b = r, rr.toWorkingColorSpace(this, i), this;
        }
        setHSL(e, n, r, i = rr.workingColorSpace) {
            if (e = qk(e, 1), n = Cn(n, 0, 1), r = Cn(r, 0, 1), n === 0) this.r = this.g = this.b = r;
            else {
                const s = r <= .5 ? r * (1 + n) : r + n - r * n, o = 2 * r - s;
                this.r = AA(o, s, e + 1 / 3), this.g = AA(o, s, e), this.b = AA(o, s, e - 1 / 3);
            }
            return rr.toWorkingColorSpace(this, i), this;
        }
        setStyle(e, n = ma) {
            function r(s) {
                s !== void 0 && parseFloat(s) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
            }
            let i;
            if (i = /^(\w+)\(([^\)]*)\)/.exec(e)) {
                let s;
                const o = i[1], a = i[2];
                switch(o){
                    case "rgb":
                    case "rgba":
                        if (s = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return r(s[4]), this.setRGB(Math.min(255, parseInt(s[1], 10)) / 255, Math.min(255, parseInt(s[2], 10)) / 255, Math.min(255, parseInt(s[3], 10)) / 255, n);
                        if (s = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return r(s[4]), this.setRGB(Math.min(100, parseInt(s[1], 10)) / 100, Math.min(100, parseInt(s[2], 10)) / 100, Math.min(100, parseInt(s[3], 10)) / 100, n);
                        break;
                    case "hsl":
                    case "hsla":
                        if (s = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return r(s[4]), this.setHSL(parseFloat(s[1]) / 360, parseFloat(s[2]) / 100, parseFloat(s[3]) / 100, n);
                        break;
                    default:
                        console.warn("THREE.Color: Unknown color model " + e);
                }
            } else if (i = /^\#([A-Fa-f\d]+)$/.exec(e)) {
                const s = i[1], o = s.length;
                if (o === 3) return this.setRGB(parseInt(s.charAt(0), 16) / 15, parseInt(s.charAt(1), 16) / 15, parseInt(s.charAt(2), 16) / 15, n);
                if (o === 6) return this.setHex(parseInt(s, 16), n);
                console.warn("THREE.Color: Invalid hex color " + e);
            } else if (e && e.length > 0) return this.setColorName(e, n);
            return this;
        }
        setColorName(e, n = ma) {
            const r = aq[e.toLowerCase()];
            return r !== void 0 ? this.setHex(r, n) : console.warn("THREE.Color: Unknown color " + e), this;
        }
        clone() {
            return new this.constructor(this.r, this.g, this.b);
        }
        copy(e) {
            return this.r = e.r, this.g = e.g, this.b = e.b, this;
        }
        copySRGBToLinear(e) {
            return this.r = Rd(e.r), this.g = Rd(e.g), this.b = Rd(e.b), this;
        }
        copyLinearToSRGB(e) {
            return this.r = iy(e.r), this.g = iy(e.g), this.b = iy(e.b), this;
        }
        convertSRGBToLinear() {
            return this.copySRGBToLinear(this), this;
        }
        convertLinearToSRGB() {
            return this.copyLinearToSRGB(this), this;
        }
        getHex(e = ma) {
            return rr.fromWorkingColorSpace(ro.copy(this), e), Math.round(Cn(ro.r * 255, 0, 255)) * 65536 + Math.round(Cn(ro.g * 255, 0, 255)) * 256 + Math.round(Cn(ro.b * 255, 0, 255));
        }
        getHexString(e = ma) {
            return ("000000" + this.getHex(e).toString(16)).slice(-6);
        }
        getHSL(e, n = rr.workingColorSpace) {
            rr.fromWorkingColorSpace(ro.copy(this), n);
            const r = ro.r, i = ro.g, s = ro.b, o = Math.max(r, i, s), a = Math.min(r, i, s);
            let l, c;
            const u = (a + o) / 2;
            if (a === o) l = 0, c = 0;
            else {
                const f = o - a;
                switch(c = u <= .5 ? f / (o + a) : f / (2 - o - a), o){
                    case r:
                        l = (i - s) / f + (i < s ? 6 : 0);
                        break;
                    case i:
                        l = (s - r) / f + 2;
                        break;
                    case s:
                        l = (r - i) / f + 4;
                        break;
                }
                l /= 6;
            }
            return e.h = l, e.s = c, e.l = u, e;
        }
        getRGB(e, n = rr.workingColorSpace) {
            return rr.fromWorkingColorSpace(ro.copy(this), n), e.r = ro.r, e.g = ro.g, e.b = ro.b, e;
        }
        getStyle(e = ma) {
            rr.fromWorkingColorSpace(ro.copy(this), e);
            const n = ro.r, r = ro.g, i = ro.b;
            return e !== ma ? `color(${e} ${n.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})` : `rgb(${Math.round(n * 255)},${Math.round(r * 255)},${Math.round(i * 255)})`;
        }
        offsetHSL(e, n, r) {
            return this.getHSL(Lf), this.setHSL(Lf.h + e, Lf.s + n, Lf.l + r);
        }
        add(e) {
            return this.r += e.r, this.g += e.g, this.b += e.b, this;
        }
        addColors(e, n) {
            return this.r = e.r + n.r, this.g = e.g + n.g, this.b = e.b + n.b, this;
        }
        addScalar(e) {
            return this.r += e, this.g += e, this.b += e, this;
        }
        sub(e) {
            return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
        }
        multiply(e) {
            return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
        }
        multiplyScalar(e) {
            return this.r *= e, this.g *= e, this.b *= e, this;
        }
        lerp(e, n) {
            return this.r += (e.r - this.r) * n, this.g += (e.g - this.g) * n, this.b += (e.b - this.b) * n, this;
        }
        lerpColors(e, n, r) {
            return this.r = e.r + (n.r - e.r) * r, this.g = e.g + (n.g - e.g) * r, this.b = e.b + (n.b - e.b) * r, this;
        }
        lerpHSL(e, n) {
            this.getHSL(Lf), e.getHSL(k1);
            const r = ib(Lf.h, k1.h, n), i = ib(Lf.s, k1.s, n), s = ib(Lf.l, k1.l, n);
            return this.setHSL(r, i, s), this;
        }
        setFromVector3(e) {
            return this.r = e.x, this.g = e.y, this.b = e.z, this;
        }
        applyMatrix3(e) {
            const n = this.r, r = this.g, i = this.b, s = e.elements;
            return this.r = s[0] * n + s[3] * r + s[6] * i, this.g = s[1] * n + s[4] * r + s[7] * i, this.b = s[2] * n + s[5] * r + s[8] * i, this;
        }
        equals(e) {
            return e.r === this.r && e.g === this.g && e.b === this.b;
        }
        fromArray(e, n = 0) {
            return this.r = e[n], this.g = e[n + 1], this.b = e[n + 2], this;
        }
        toArray(e = [], n = 0) {
            return e[n] = this.r, e[n + 1] = this.g, e[n + 2] = this.b, e;
        }
        fromBufferAttribute(e, n) {
            return this.r = e.getX(n), this.g = e.getY(n), this.b = e.getZ(n), this;
        }
        toJSON() {
            return this.getHex();
        }
        *[Symbol.iterator]() {
            yield this.r, yield this.g, yield this.b;
        }
    }
    const ro = new jt;
    jt.NAMES = aq;
    let t0e = 0;
    class bo extends vu {
        constructor(){
            super(), this.isMaterial = !0, Object.defineProperty(this, "id", {
                value: t0e++
            }), this.uuid = Ya(), this.name = "", this.type = "Material", this.blending = um, this.side = Ld, this.vertexColors = !1, this.opacity = 1, this.transparent = !1, this.alphaHash = !1, this.blendSrc = TM, this.blendDst = CM, this.blendEquation = Qf, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.blendColor = new jt(0, 0, 0), this.blendAlpha = 0, this.depthFunc = Rm, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = V3, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = zp, this.stencilZFail = zp, this.stencilZPass = zp, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.forceSinglePass = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
        }
        get alphaTest() {
            return this._alphaTest;
        }
        set alphaTest(e) {
            this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
        }
        onBeforeRender() {}
        onBeforeCompile() {}
        customProgramCacheKey() {
            return this.onBeforeCompile.toString();
        }
        setValues(e) {
            if (e !== void 0) for(const n in e){
                const r = e[n];
                if (r === void 0) {
                    console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);
                    continue;
                }
                const i = this[n];
                if (i === void 0) {
                    console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);
                    continue;
                }
                i && i.isColor ? i.set(r) : i && i.isVector3 && r && r.isVector3 ? i.copy(r) : this[n] = r;
            }
        }
        toJSON(e) {
            const n = e === void 0 || typeof e == "string";
            n && (e = {
                textures: {},
                images: {}
            });
            const r = {
                metadata: {
                    version: 4.6,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            r.uuid = this.uuid, r.type = this.type, this.name !== "" && (r.name = this.name), this.color && this.color.isColor && (r.color = this.color.getHex()), this.roughness !== void 0 && (r.roughness = this.roughness), this.metalness !== void 0 && (r.metalness = this.metalness), this.sheen !== void 0 && (r.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (r.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (r.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (r.emissive = this.emissive.getHex()), this.emissiveIntensity !== void 0 && this.emissiveIntensity !== 1 && (r.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (r.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (r.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (r.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (r.shininess = this.shininess), this.clearcoat !== void 0 && (r.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (r.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (r.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (r.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (r.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, r.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.dispersion !== void 0 && (r.dispersion = this.dispersion), this.iridescence !== void 0 && (r.iridescence = this.iridescence), this.iridescenceIOR !== void 0 && (r.iridescenceIOR = this.iridescenceIOR), this.iridescenceThicknessRange !== void 0 && (r.iridescenceThicknessRange = this.iridescenceThicknessRange), this.iridescenceMap && this.iridescenceMap.isTexture && (r.iridescenceMap = this.iridescenceMap.toJSON(e).uuid), this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (r.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(e).uuid), this.anisotropy !== void 0 && (r.anisotropy = this.anisotropy), this.anisotropyRotation !== void 0 && (r.anisotropyRotation = this.anisotropyRotation), this.anisotropyMap && this.anisotropyMap.isTexture && (r.anisotropyMap = this.anisotropyMap.toJSON(e).uuid), this.map && this.map.isTexture && (r.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (r.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (r.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (r.lightMap = this.lightMap.toJSON(e).uuid, r.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (r.aoMap = this.aoMap.toJSON(e).uuid, r.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (r.bumpMap = this.bumpMap.toJSON(e).uuid, r.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (r.normalMap = this.normalMap.toJSON(e).uuid, r.normalMapType = this.normalMapType, r.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (r.displacementMap = this.displacementMap.toJSON(e).uuid, r.displacementScale = this.displacementScale, r.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (r.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (r.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (r.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (r.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (r.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (r.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (r.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (r.combine = this.combine)), this.envMapRotation !== void 0 && (r.envMapRotation = this.envMapRotation.toArray()), this.envMapIntensity !== void 0 && (r.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (r.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (r.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (r.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (r.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (r.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (r.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (r.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && this.attenuationDistance !== 1 / 0 && (r.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (r.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (r.size = this.size), this.shadowSide !== null && (r.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (r.sizeAttenuation = this.sizeAttenuation), this.blending !== um && (r.blending = this.blending), this.side !== Ld && (r.side = this.side), this.vertexColors === !0 && (r.vertexColors = !0), this.opacity < 1 && (r.opacity = this.opacity), this.transparent === !0 && (r.transparent = !0), this.blendSrc !== TM && (r.blendSrc = this.blendSrc), this.blendDst !== CM && (r.blendDst = this.blendDst), this.blendEquation !== Qf && (r.blendEquation = this.blendEquation), this.blendSrcAlpha !== null && (r.blendSrcAlpha = this.blendSrcAlpha), this.blendDstAlpha !== null && (r.blendDstAlpha = this.blendDstAlpha), this.blendEquationAlpha !== null && (r.blendEquationAlpha = this.blendEquationAlpha), this.blendColor && this.blendColor.isColor && (r.blendColor = this.blendColor.getHex()), this.blendAlpha !== 0 && (r.blendAlpha = this.blendAlpha), this.depthFunc !== Rm && (r.depthFunc = this.depthFunc), this.depthTest === !1 && (r.depthTest = this.depthTest), this.depthWrite === !1 && (r.depthWrite = this.depthWrite), this.colorWrite === !1 && (r.colorWrite = this.colorWrite), this.stencilWriteMask !== 255 && (r.stencilWriteMask = this.stencilWriteMask), this.stencilFunc !== V3 && (r.stencilFunc = this.stencilFunc), this.stencilRef !== 0 && (r.stencilRef = this.stencilRef), this.stencilFuncMask !== 255 && (r.stencilFuncMask = this.stencilFuncMask), this.stencilFail !== zp && (r.stencilFail = this.stencilFail), this.stencilZFail !== zp && (r.stencilZFail = this.stencilZFail), this.stencilZPass !== zp && (r.stencilZPass = this.stencilZPass), this.stencilWrite === !0 && (r.stencilWrite = this.stencilWrite), this.rotation !== void 0 && this.rotation !== 0 && (r.rotation = this.rotation), this.polygonOffset === !0 && (r.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (r.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (r.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth !== void 0 && this.linewidth !== 1 && (r.linewidth = this.linewidth), this.dashSize !== void 0 && (r.dashSize = this.dashSize), this.gapSize !== void 0 && (r.gapSize = this.gapSize), this.scale !== void 0 && (r.scale = this.scale), this.dithering === !0 && (r.dithering = !0), this.alphaTest > 0 && (r.alphaTest = this.alphaTest), this.alphaHash === !0 && (r.alphaHash = !0), this.alphaToCoverage === !0 && (r.alphaToCoverage = !0), this.premultipliedAlpha === !0 && (r.premultipliedAlpha = !0), this.forceSinglePass === !0 && (r.forceSinglePass = !0), this.wireframe === !0 && (r.wireframe = !0), this.wireframeLinewidth > 1 && (r.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (r.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (r.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (r.flatShading = !0), this.visible === !1 && (r.visible = !1), this.toneMapped === !1 && (r.toneMapped = !1), this.fog === !1 && (r.fog = !1), Object.keys(this.userData).length > 0 && (r.userData = this.userData);
            function i(s) {
                const o = [];
                for(const a in s){
                    const l = s[a];
                    delete l.metadata, o.push(l);
                }
                return o;
            }
            if (n) {
                const s = i(e.textures), o = i(e.images);
                s.length > 0 && (r.textures = s), o.length > 0 && (r.images = o);
            }
            return r;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            this.name = e.name, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.blendColor.copy(e.blendColor), this.blendAlpha = e.blendAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
            const n = e.clippingPlanes;
            let r = null;
            if (n !== null) {
                const i = n.length;
                r = new Array(i);
                for(let s = 0; s !== i; ++s)r[s] = n[s].clone();
            }
            return this.clippingPlanes = r, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaHash = e.alphaHash, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.forceSinglePass = e.forceSinglePass, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        onBuild() {
            console.warn("Material: onBuild() has been removed.");
        }
    }
    class Rh extends bo {
        constructor(e){
            super(), this.isMeshBasicMaterial = !0, this.type = "MeshBasicMaterial", this.color = new jt(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new tl, this.combine = Bw, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
        }
    }
    const bd = n0e();
    function n0e() {
        const t = new ArrayBuffer(4), e = new Float32Array(t), n = new Uint32Array(t), r = new Uint32Array(512), i = new Uint32Array(512);
        for(let l = 0; l < 256; ++l){
            const c = l - 127;
            c < -27 ? (r[l] = 0, r[l | 256] = 32768, i[l] = 24, i[l | 256] = 24) : c < -14 ? (r[l] = 1024 >> -c - 14, r[l | 256] = 1024 >> -c - 14 | 32768, i[l] = -c - 1, i[l | 256] = -c - 1) : c <= 15 ? (r[l] = c + 15 << 10, r[l | 256] = c + 15 << 10 | 32768, i[l] = 13, i[l | 256] = 13) : c < 128 ? (r[l] = 31744, r[l | 256] = 64512, i[l] = 24, i[l | 256] = 24) : (r[l] = 31744, r[l | 256] = 64512, i[l] = 13, i[l | 256] = 13);
        }
        const s = new Uint32Array(2048), o = new Uint32Array(64), a = new Uint32Array(64);
        for(let l = 1; l < 1024; ++l){
            let c = l << 13, u = 0;
            for(; !(c & 8388608);)c <<= 1, u -= 8388608;
            c &= -8388609, u += 947912704, s[l] = c | u;
        }
        for(let l = 1024; l < 2048; ++l)s[l] = 939524096 + (l - 1024 << 13);
        for(let l = 1; l < 31; ++l)o[l] = l << 23;
        o[31] = 1199570944, o[32] = 2147483648;
        for(let l = 33; l < 63; ++l)o[l] = 2147483648 + (l - 32 << 23);
        o[63] = 3347054592;
        for(let l = 1; l < 64; ++l)l !== 32 && (a[l] = 1024);
        return {
            floatView: e,
            uint32View: n,
            baseTable: r,
            shiftTable: i,
            mantissaTable: s,
            exponentTable: o,
            offsetTable: a
        };
    }
    function ca(t) {
        Math.abs(t) > 65504 && console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."), t = Cn(t, -65504, 65504), bd.floatView[0] = t;
        const e = bd.uint32View[0], n = e >> 23 & 511;
        return bd.baseTable[n] + ((e & 8388607) >> bd.shiftTable[n]);
    }
    function Ex(t) {
        const e = t >> 10;
        return bd.uint32View[0] = bd.mantissaTable[bd.offsetTable[e] + (t & 1023)] + bd.exponentTable[e], bd.floatView[0];
    }
    const r0e = {
        toHalfFloat: ca,
        fromHalfFloat: Ex
    }, Xi = new ve, O1 = new ot;
    let i0e = 0;
    class Rr {
        constructor(e, n, r = !1){
            if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
            this.isBufferAttribute = !0, Object.defineProperty(this, "id", {
                value: i0e++
            }), this.name = "", this.array = e, this.itemSize = n, this.count = e !== void 0 ? e.length / n : 0, this.normalized = r, this.usage = Qb, this.updateRanges = [], this.gpuType = xa, this.version = 0;
        }
        onUploadCallback() {}
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        setUsage(e) {
            return this.usage = e, this;
        }
        addUpdateRange(e, n) {
            this.updateRanges.push({
                start: e,
                count: n
            });
        }
        clearUpdateRanges() {
            this.updateRanges.length = 0;
        }
        copy(e) {
            return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this.gpuType = e.gpuType, this;
        }
        copyAt(e, n, r) {
            e *= this.itemSize, r *= n.itemSize;
            for(let i = 0, s = this.itemSize; i < s; i++)this.array[e + i] = n.array[r + i];
            return this;
        }
        copyArray(e) {
            return this.array.set(e), this;
        }
        applyMatrix3(e) {
            if (this.itemSize === 2) for(let n = 0, r = this.count; n < r; n++)O1.fromBufferAttribute(this, n), O1.applyMatrix3(e), this.setXY(n, O1.x, O1.y);
            else if (this.itemSize === 3) for(let n = 0, r = this.count; n < r; n++)Xi.fromBufferAttribute(this, n), Xi.applyMatrix3(e), this.setXYZ(n, Xi.x, Xi.y, Xi.z);
            return this;
        }
        applyMatrix4(e) {
            for(let n = 0, r = this.count; n < r; n++)Xi.fromBufferAttribute(this, n), Xi.applyMatrix4(e), this.setXYZ(n, Xi.x, Xi.y, Xi.z);
            return this;
        }
        applyNormalMatrix(e) {
            for(let n = 0, r = this.count; n < r; n++)Xi.fromBufferAttribute(this, n), Xi.applyNormalMatrix(e), this.setXYZ(n, Xi.x, Xi.y, Xi.z);
            return this;
        }
        transformDirection(e) {
            for(let n = 0, r = this.count; n < r; n++)Xi.fromBufferAttribute(this, n), Xi.transformDirection(e), this.setXYZ(n, Xi.x, Xi.y, Xi.z);
            return this;
        }
        set(e, n = 0) {
            return this.array.set(e, n), this;
        }
        getComponent(e, n) {
            let r = this.array[e * this.itemSize + n];
            return this.normalized && (r = Vo(r, this.array)), r;
        }
        setComponent(e, n, r) {
            return this.normalized && (r = kn(r, this.array)), this.array[e * this.itemSize + n] = r, this;
        }
        getX(e) {
            let n = this.array[e * this.itemSize];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setX(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize] = n, this;
        }
        getY(e) {
            let n = this.array[e * this.itemSize + 1];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setY(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize + 1] = n, this;
        }
        getZ(e) {
            let n = this.array[e * this.itemSize + 2];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setZ(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize + 2] = n, this;
        }
        getW(e) {
            let n = this.array[e * this.itemSize + 3];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setW(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize + 3] = n, this;
        }
        setXY(e, n, r) {
            return e *= this.itemSize, this.normalized && (n = kn(n, this.array), r = kn(r, this.array)), this.array[e + 0] = n, this.array[e + 1] = r, this;
        }
        setXYZ(e, n, r, i) {
            return e *= this.itemSize, this.normalized && (n = kn(n, this.array), r = kn(r, this.array), i = kn(i, this.array)), this.array[e + 0] = n, this.array[e + 1] = r, this.array[e + 2] = i, this;
        }
        setXYZW(e, n, r, i, s) {
            return e *= this.itemSize, this.normalized && (n = kn(n, this.array), r = kn(r, this.array), i = kn(i, this.array), s = kn(s, this.array)), this.array[e + 0] = n, this.array[e + 1] = r, this.array[e + 2] = i, this.array[e + 3] = s, this;
        }
        onUpload(e) {
            return this.onUploadCallback = e, this;
        }
        clone() {
            return new this.constructor(this.array, this.itemSize).copy(this);
        }
        toJSON() {
            const e = {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: Array.from(this.array),
                normalized: this.normalized
            };
            return this.name !== "" && (e.name = this.name), this.usage !== Qb && (e.usage = this.usage), e;
        }
    }
    class s0e extends Rr {
        constructor(e, n, r){
            super(new Int8Array(e), n, r);
        }
    }
    class o0e extends Rr {
        constructor(e, n, r){
            super(new Uint8Array(e), n, r);
        }
    }
    class a0e extends Rr {
        constructor(e, n, r){
            super(new Uint8ClampedArray(e), n, r);
        }
    }
    class l0e extends Rr {
        constructor(e, n, r){
            super(new Int16Array(e), n, r);
        }
    }
    class Hk extends Rr {
        constructor(e, n, r){
            super(new Uint16Array(e), n, r);
        }
    }
    class c0e extends Rr {
        constructor(e, n, r){
            super(new Int32Array(e), n, r);
        }
    }
    class $k extends Rr {
        constructor(e, n, r){
            super(new Uint32Array(e), n, r);
        }
    }
    class u0e extends Rr {
        constructor(e, n, r){
            super(new Uint16Array(e), n, r), this.isFloat16BufferAttribute = !0;
        }
        getX(e) {
            let n = Ex(this.array[e * this.itemSize]);
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setX(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize] = ca(n), this;
        }
        getY(e) {
            let n = Ex(this.array[e * this.itemSize + 1]);
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setY(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize + 1] = ca(n), this;
        }
        getZ(e) {
            let n = Ex(this.array[e * this.itemSize + 2]);
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setZ(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize + 2] = ca(n), this;
        }
        getW(e) {
            let n = Ex(this.array[e * this.itemSize + 3]);
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setW(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.array[e * this.itemSize + 3] = ca(n), this;
        }
        setXY(e, n, r) {
            return e *= this.itemSize, this.normalized && (n = kn(n, this.array), r = kn(r, this.array)), this.array[e + 0] = ca(n), this.array[e + 1] = ca(r), this;
        }
        setXYZ(e, n, r, i) {
            return e *= this.itemSize, this.normalized && (n = kn(n, this.array), r = kn(r, this.array), i = kn(i, this.array)), this.array[e + 0] = ca(n), this.array[e + 1] = ca(r), this.array[e + 2] = ca(i), this;
        }
        setXYZW(e, n, r, i, s) {
            return e *= this.itemSize, this.normalized && (n = kn(n, this.array), r = kn(r, this.array), i = kn(i, this.array), s = kn(s, this.array)), this.array[e + 0] = ca(n), this.array[e + 1] = ca(r), this.array[e + 2] = ca(i), this.array[e + 3] = ca(s), this;
        }
    }
    class Yt extends Rr {
        constructor(e, n, r){
            super(new Float32Array(e), n, r);
        }
    }
    let d0e = 0;
    const yl = new gn, NA = new ur, i0 = new ve, Ua = new qo, tx = new qo, Es = new ve;
    class Vn extends vu {
        constructor(){
            super(), this.isBufferGeometry = !0, Object.defineProperty(this, "id", {
                value: d0e++
            }), this.uuid = Ya(), this.name = "", this.type = "BufferGeometry", this.index = null, this.indirect = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
                start: 0,
                count: 1 / 0
            }, this.userData = {};
        }
        getIndex() {
            return this.index;
        }
        setIndex(e) {
            return Array.isArray(e) ? this.index = new (iq(e) ? $k : Hk)(e, 1) : this.index = e, this;
        }
        setIndirect(e) {
            return this.indirect = e, this;
        }
        getIndirect() {
            return this.indirect;
        }
        getAttribute(e) {
            return this.attributes[e];
        }
        setAttribute(e, n) {
            return this.attributes[e] = n, this;
        }
        deleteAttribute(e) {
            return delete this.attributes[e], this;
        }
        hasAttribute(e) {
            return this.attributes[e] !== void 0;
        }
        addGroup(e, n, r = 0) {
            this.groups.push({
                start: e,
                count: n,
                materialIndex: r
            });
        }
        clearGroups() {
            this.groups = [];
        }
        setDrawRange(e, n) {
            this.drawRange.start = e, this.drawRange.count = n;
        }
        applyMatrix4(e) {
            const n = this.attributes.position;
            n !== void 0 && (n.applyMatrix4(e), n.needsUpdate = !0);
            const r = this.attributes.normal;
            if (r !== void 0) {
                const s = new An().getNormalMatrix(e);
                r.applyNormalMatrix(s), r.needsUpdate = !0;
            }
            const i = this.attributes.tangent;
            return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
        }
        applyQuaternion(e) {
            return yl.makeRotationFromQuaternion(e), this.applyMatrix4(yl), this;
        }
        rotateX(e) {
            return yl.makeRotationX(e), this.applyMatrix4(yl), this;
        }
        rotateY(e) {
            return yl.makeRotationY(e), this.applyMatrix4(yl), this;
        }
        rotateZ(e) {
            return yl.makeRotationZ(e), this.applyMatrix4(yl), this;
        }
        translate(e, n, r) {
            return yl.makeTranslation(e, n, r), this.applyMatrix4(yl), this;
        }
        scale(e, n, r) {
            return yl.makeScale(e, n, r), this.applyMatrix4(yl), this;
        }
        lookAt(e) {
            return NA.lookAt(e), NA.updateMatrix(), this.applyMatrix4(NA.matrix), this;
        }
        center() {
            return this.computeBoundingBox(), this.boundingBox.getCenter(i0).negate(), this.translate(i0.x, i0.y, i0.z), this;
        }
        setFromPoints(e) {
            const n = this.getAttribute("position");
            if (n === void 0) {
                const r = [];
                for(let i = 0, s = e.length; i < s; i++){
                    const o = e[i];
                    r.push(o.x, o.y, o.z || 0);
                }
                this.setAttribute("position", new Yt(r, 3));
            } else {
                const r = Math.min(e.length, n.count);
                for(let i = 0; i < r; i++){
                    const s = e[i];
                    n.setXYZ(i, s.x, s.y, s.z || 0);
                }
                e.length > n.count && console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."), n.needsUpdate = !0;
            }
            return this;
        }
        computeBoundingBox() {
            this.boundingBox === null && (this.boundingBox = new qo);
            const e = this.attributes.position, n = this.morphAttributes.position;
            if (e && e.isGLBufferAttribute) {
                console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.", this), this.boundingBox.set(new ve(-1 / 0, -1 / 0, -1 / 0), new ve(1 / 0, 1 / 0, 1 / 0));
                return;
            }
            if (e !== void 0) {
                if (this.boundingBox.setFromBufferAttribute(e), n) for(let r = 0, i = n.length; r < i; r++){
                    const s = n[r];
                    Ua.setFromBufferAttribute(s), this.morphTargetsRelative ? (Es.addVectors(this.boundingBox.min, Ua.min), this.boundingBox.expandByPoint(Es), Es.addVectors(this.boundingBox.max, Ua.max), this.boundingBox.expandByPoint(Es)) : (this.boundingBox.expandByPoint(Ua.min), this.boundingBox.expandByPoint(Ua.max));
                }
            } else this.boundingBox.makeEmpty();
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
        }
        computeBoundingSphere() {
            this.boundingSphere === null && (this.boundingSphere = new ho);
            const e = this.attributes.position, n = this.morphAttributes.position;
            if (e && e.isGLBufferAttribute) {
                console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.", this), this.boundingSphere.set(new ve, 1 / 0);
                return;
            }
            if (e) {
                const r = this.boundingSphere.center;
                if (Ua.setFromBufferAttribute(e), n) for(let s = 0, o = n.length; s < o; s++){
                    const a = n[s];
                    tx.setFromBufferAttribute(a), this.morphTargetsRelative ? (Es.addVectors(Ua.min, tx.min), Ua.expandByPoint(Es), Es.addVectors(Ua.max, tx.max), Ua.expandByPoint(Es)) : (Ua.expandByPoint(tx.min), Ua.expandByPoint(tx.max));
                }
                Ua.getCenter(r);
                let i = 0;
                for(let s = 0, o = e.count; s < o; s++)Es.fromBufferAttribute(e, s), i = Math.max(i, r.distanceToSquared(Es));
                if (n) for(let s = 0, o = n.length; s < o; s++){
                    const a = n[s], l = this.morphTargetsRelative;
                    for(let c = 0, u = a.count; c < u; c++)Es.fromBufferAttribute(a, c), l && (i0.fromBufferAttribute(e, c), Es.add(i0)), i = Math.max(i, r.distanceToSquared(Es));
                }
                this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
            }
        }
        computeTangents() {
            const e = this.index, n = this.attributes;
            if (e === null || n.position === void 0 || n.normal === void 0 || n.uv === void 0) {
                console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
                return;
            }
            const r = n.position, i = n.normal, s = n.uv;
            this.hasAttribute("tangent") === !1 && this.setAttribute("tangent", new Rr(new Float32Array(4 * r.count), 4));
            const o = this.getAttribute("tangent"), a = [], l = [];
            for(let D = 0; D < r.count; D++)a[D] = new ve, l[D] = new ve;
            const c = new ve, u = new ve, f = new ve, h = new ot, m = new ot, v = new ot, _ = new ve, w = new ve;
            function b(D, R, N) {
                c.fromBufferAttribute(r, D), u.fromBufferAttribute(r, R), f.fromBufferAttribute(r, N), h.fromBufferAttribute(s, D), m.fromBufferAttribute(s, R), v.fromBufferAttribute(s, N), u.sub(c), f.sub(c), m.sub(h), v.sub(h);
                const k = 1 / (m.x * v.y - v.x * m.y);
                isFinite(k) && (_.copy(u).multiplyScalar(v.y).addScaledVector(f, -m.y).multiplyScalar(k), w.copy(f).multiplyScalar(m.x).addScaledVector(u, -v.x).multiplyScalar(k), a[D].add(_), a[R].add(_), a[N].add(_), l[D].add(w), l[R].add(w), l[N].add(w));
            }
            let M = this.groups;
            M.length === 0 && (M = [
                {
                    start: 0,
                    count: e.count
                }
            ]);
            for(let D = 0, R = M.length; D < R; ++D){
                const N = M[D], k = N.start, U = N.count;
                for(let B = k, j = k + U; B < j; B += 3)b(e.getX(B + 0), e.getX(B + 1), e.getX(B + 2));
            }
            const E = new ve, T = new ve, P = new ve, A = new ve;
            function O(D) {
                P.fromBufferAttribute(i, D), A.copy(P);
                const R = a[D];
                E.copy(R), E.sub(P.multiplyScalar(P.dot(R))).normalize(), T.crossVectors(A, R);
                const k = T.dot(l[D]) < 0 ? -1 : 1;
                o.setXYZW(D, E.x, E.y, E.z, k);
            }
            for(let D = 0, R = M.length; D < R; ++D){
                const N = M[D], k = N.start, U = N.count;
                for(let B = k, j = k + U; B < j; B += 3)O(e.getX(B + 0)), O(e.getX(B + 1)), O(e.getX(B + 2));
            }
        }
        computeVertexNormals() {
            const e = this.index, n = this.getAttribute("position");
            if (n !== void 0) {
                let r = this.getAttribute("normal");
                if (r === void 0) r = new Rr(new Float32Array(n.count * 3), 3), this.setAttribute("normal", r);
                else for(let h = 0, m = r.count; h < m; h++)r.setXYZ(h, 0, 0, 0);
                const i = new ve, s = new ve, o = new ve, a = new ve, l = new ve, c = new ve, u = new ve, f = new ve;
                if (e) for(let h = 0, m = e.count; h < m; h += 3){
                    const v = e.getX(h + 0), _ = e.getX(h + 1), w = e.getX(h + 2);
                    i.fromBufferAttribute(n, v), s.fromBufferAttribute(n, _), o.fromBufferAttribute(n, w), u.subVectors(o, s), f.subVectors(i, s), u.cross(f), a.fromBufferAttribute(r, v), l.fromBufferAttribute(r, _), c.fromBufferAttribute(r, w), a.add(u), l.add(u), c.add(u), r.setXYZ(v, a.x, a.y, a.z), r.setXYZ(_, l.x, l.y, l.z), r.setXYZ(w, c.x, c.y, c.z);
                }
                else for(let h = 0, m = n.count; h < m; h += 3)i.fromBufferAttribute(n, h + 0), s.fromBufferAttribute(n, h + 1), o.fromBufferAttribute(n, h + 2), u.subVectors(o, s), f.subVectors(i, s), u.cross(f), r.setXYZ(h + 0, u.x, u.y, u.z), r.setXYZ(h + 1, u.x, u.y, u.z), r.setXYZ(h + 2, u.x, u.y, u.z);
                this.normalizeNormals(), r.needsUpdate = !0;
            }
        }
        normalizeNormals() {
            const e = this.attributes.normal;
            for(let n = 0, r = e.count; n < r; n++)Es.fromBufferAttribute(e, n), Es.normalize(), e.setXYZ(n, Es.x, Es.y, Es.z);
        }
        toNonIndexed() {
            function e(a, l) {
                const c = a.array, u = a.itemSize, f = a.normalized, h = new c.constructor(l.length * u);
                let m = 0, v = 0;
                for(let _ = 0, w = l.length; _ < w; _++){
                    a.isInterleavedBufferAttribute ? m = l[_] * a.data.stride + a.offset : m = l[_] * u;
                    for(let b = 0; b < u; b++)h[v++] = c[m++];
                }
                return new Rr(h, u, f);
            }
            if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
            const n = new Vn, r = this.index.array, i = this.attributes;
            for(const a in i){
                const l = i[a], c = e(l, r);
                n.setAttribute(a, c);
            }
            const s = this.morphAttributes;
            for(const a in s){
                const l = [], c = s[a];
                for(let u = 0, f = c.length; u < f; u++){
                    const h = c[u], m = e(h, r);
                    l.push(m);
                }
                n.morphAttributes[a] = l;
            }
            n.morphTargetsRelative = this.morphTargetsRelative;
            const o = this.groups;
            for(let a = 0, l = o.length; a < l; a++){
                const c = o[a];
                n.addGroup(c.start, c.count, c.materialIndex);
            }
            return n;
        }
        toJSON() {
            const e = {
                metadata: {
                    version: 4.6,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
                const l = this.parameters;
                for(const c in l)l[c] !== void 0 && (e[c] = l[c]);
                return e;
            }
            e.data = {
                attributes: {}
            };
            const n = this.index;
            n !== null && (e.data.index = {
                type: n.array.constructor.name,
                array: Array.prototype.slice.call(n.array)
            });
            const r = this.attributes;
            for(const l in r){
                const c = r[l];
                e.data.attributes[l] = c.toJSON(e.data);
            }
            const i = {};
            let s = !1;
            for(const l in this.morphAttributes){
                const c = this.morphAttributes[l], u = [];
                for(let f = 0, h = c.length; f < h; f++){
                    const m = c[f];
                    u.push(m.toJSON(e.data));
                }
                u.length > 0 && (i[l] = u, s = !0);
            }
            s && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
            const o = this.groups;
            o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
            const a = this.boundingSphere;
            return a !== null && (e.data.boundingSphere = {
                center: a.center.toArray(),
                radius: a.radius
            }), e;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
            const n = {};
            this.name = e.name;
            const r = e.index;
            r !== null && this.setIndex(r.clone(n));
            const i = e.attributes;
            for(const c in i){
                const u = i[c];
                this.setAttribute(c, u.clone(n));
            }
            const s = e.morphAttributes;
            for(const c in s){
                const u = [], f = s[c];
                for(let h = 0, m = f.length; h < m; h++)u.push(f[h].clone(n));
                this.morphAttributes[c] = u;
            }
            this.morphTargetsRelative = e.morphTargetsRelative;
            const o = e.groups;
            for(let c = 0, u = o.length; c < u; c++){
                const f = o[c];
                this.addGroup(f.start, f.count, f.materialIndex);
            }
            const a = e.boundingBox;
            a !== null && (this.boundingBox = a.clone());
            const l = e.boundingSphere;
            return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this;
        }
        dispose() {
            this.dispatchEvent({
                type: "dispose"
            });
        }
    }
    const r8 = new gn, Ep = new Um, D1 = new ho, i8 = new ve, L1 = new ve, F1 = new ve, j1 = new ve, PA = new ve, B1 = new ve, s8 = new ve, U1 = new ve;
    class Ji extends ur {
        constructor(e = new Vn, n = new Rh){
            super(), this.isMesh = !0, this.type = "Mesh", this.geometry = e, this.material = n, this.updateMorphTargets();
        }
        copy(e, n) {
            return super.copy(e, n), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
        }
        updateMorphTargets() {
            const n = this.geometry.morphAttributes, r = Object.keys(n);
            if (r.length > 0) {
                const i = n[r[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let s = 0, o = i.length; s < o; s++){
                        const a = i[s].name || String(s);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = s;
                    }
                }
            }
        }
        getVertexPosition(e, n) {
            const r = this.geometry, i = r.attributes.position, s = r.morphAttributes.position, o = r.morphTargetsRelative;
            n.fromBufferAttribute(i, e);
            const a = this.morphTargetInfluences;
            if (s && a) {
                B1.set(0, 0, 0);
                for(let l = 0, c = s.length; l < c; l++){
                    const u = a[l], f = s[l];
                    u !== 0 && (PA.fromBufferAttribute(f, e), o ? B1.addScaledVector(PA, u) : B1.addScaledVector(PA.sub(n), u));
                }
                n.add(B1);
            }
            return n;
        }
        raycast(e, n) {
            const r = this.geometry, i = this.material, s = this.matrixWorld;
            i !== void 0 && (r.boundingSphere === null && r.computeBoundingSphere(), D1.copy(r.boundingSphere), D1.applyMatrix4(s), Ep.copy(e.ray).recast(e.near), !(D1.containsPoint(Ep.origin) === !1 && (Ep.intersectSphere(D1, i8) === null || Ep.origin.distanceToSquared(i8) > (e.far - e.near) ** 2)) && (r8.copy(s).invert(), Ep.copy(e.ray).applyMatrix4(r8), !(r.boundingBox !== null && Ep.intersectsBox(r.boundingBox) === !1) && this._computeIntersections(e, n, Ep)));
        }
        _computeIntersections(e, n, r) {
            let i;
            const s = this.geometry, o = this.material, a = s.index, l = s.attributes.position, c = s.attributes.uv, u = s.attributes.uv1, f = s.attributes.normal, h = s.groups, m = s.drawRange;
            if (a !== null) if (Array.isArray(o)) for(let v = 0, _ = h.length; v < _; v++){
                const w = h[v], b = o[w.materialIndex], M = Math.max(w.start, m.start), E = Math.min(a.count, Math.min(w.start + w.count, m.start + m.count));
                for(let T = M, P = E; T < P; T += 3){
                    const A = a.getX(T), O = a.getX(T + 1), D = a.getX(T + 2);
                    i = z1(this, b, e, r, c, u, f, A, O, D), i && (i.faceIndex = Math.floor(T / 3), i.face.materialIndex = w.materialIndex, n.push(i));
                }
            }
            else {
                const v = Math.max(0, m.start), _ = Math.min(a.count, m.start + m.count);
                for(let w = v, b = _; w < b; w += 3){
                    const M = a.getX(w), E = a.getX(w + 1), T = a.getX(w + 2);
                    i = z1(this, o, e, r, c, u, f, M, E, T), i && (i.faceIndex = Math.floor(w / 3), n.push(i));
                }
            }
            else if (l !== void 0) if (Array.isArray(o)) for(let v = 0, _ = h.length; v < _; v++){
                const w = h[v], b = o[w.materialIndex], M = Math.max(w.start, m.start), E = Math.min(l.count, Math.min(w.start + w.count, m.start + m.count));
                for(let T = M, P = E; T < P; T += 3){
                    const A = T, O = T + 1, D = T + 2;
                    i = z1(this, b, e, r, c, u, f, A, O, D), i && (i.faceIndex = Math.floor(T / 3), i.face.materialIndex = w.materialIndex, n.push(i));
                }
            }
            else {
                const v = Math.max(0, m.start), _ = Math.min(l.count, m.start + m.count);
                for(let w = v, b = _; w < b; w += 3){
                    const M = w, E = w + 1, T = w + 2;
                    i = z1(this, o, e, r, c, u, f, M, E, T), i && (i.faceIndex = Math.floor(w / 3), n.push(i));
                }
            }
        }
    }
    function f0e(t, e, n, r, i, s, o, a) {
        let l;
        if (e.side === Wo ? l = r.intersectTriangle(o, s, i, !0, a) : l = r.intersectTriangle(i, s, o, e.side === Ld, a), l === null) return null;
        U1.copy(a), U1.applyMatrix4(t.matrixWorld);
        const c = n.ray.origin.distanceTo(U1);
        return c < n.near || c > n.far ? null : {
            distance: c,
            point: U1.clone(),
            object: t
        };
    }
    function z1(t, e, n, r, i, s, o, a, l, c) {
        t.getVertexPosition(a, L1), t.getVertexPosition(l, F1), t.getVertexPosition(c, j1);
        const u = f0e(t, e, n, r, L1, F1, j1, s8);
        if (u) {
            const f = new ve;
            ga.getBarycoord(s8, L1, F1, j1, f), i && (u.uv = ga.getInterpolatedAttribute(i, a, l, c, f, new ot)), s && (u.uv1 = ga.getInterpolatedAttribute(s, a, l, c, f, new ot)), o && (u.normal = ga.getInterpolatedAttribute(o, a, l, c, f, new ve), u.normal.dot(r.direction) > 0 && u.normal.multiplyScalar(-1));
            const h = {
                a,
                b: l,
                c,
                normal: new ve,
                materialIndex: 0
            };
            ga.getNormal(L1, F1, j1, h.normal), u.face = h, u.barycoord = f;
        }
        return u;
    }
    class zm extends Vn {
        constructor(e = 1, n = 1, r = 1, i = 1, s = 1, o = 1){
            super(), this.type = "BoxGeometry", this.parameters = {
                width: e,
                height: n,
                depth: r,
                widthSegments: i,
                heightSegments: s,
                depthSegments: o
            };
            const a = this;
            i = Math.floor(i), s = Math.floor(s), o = Math.floor(o);
            const l = [], c = [], u = [], f = [];
            let h = 0, m = 0;
            v("z", "y", "x", -1, -1, r, n, e, o, s, 0), v("z", "y", "x", 1, -1, r, n, -e, o, s, 1), v("x", "z", "y", 1, 1, e, r, n, i, o, 2), v("x", "z", "y", 1, -1, e, r, -n, i, o, 3), v("x", "y", "z", 1, -1, e, n, r, i, s, 4), v("x", "y", "z", -1, -1, e, n, -r, i, s, 5), this.setIndex(l), this.setAttribute("position", new Yt(c, 3)), this.setAttribute("normal", new Yt(u, 3)), this.setAttribute("uv", new Yt(f, 2));
            function v(_, w, b, M, E, T, P, A, O, D, R) {
                const N = T / O, k = P / D, U = T / 2, B = P / 2, j = A / 2, K = O + 1, q = D + 1;
                let ee = 0, W = 0;
                const Z = new ve;
                for(let $ = 0; $ < q; $++){
                    const H = $ * k - B;
                    for(let se = 0; se < K; se++){
                        const le = se * N - U;
                        Z[_] = le * M, Z[w] = H * E, Z[b] = j, c.push(Z.x, Z.y, Z.z), Z[_] = 0, Z[w] = 0, Z[b] = A > 0 ? 1 : -1, u.push(Z.x, Z.y, Z.z), f.push(se / O), f.push(1 - $ / D), ee += 1;
                    }
                }
                for(let $ = 0; $ < D; $++)for(let H = 0; H < O; H++){
                    const se = h + H + K * $, le = h + H + K * ($ + 1), ne = h + (H + 1) + K * ($ + 1), ue = h + (H + 1) + K * $;
                    l.push(se, le, ue), l.push(le, ne, ue), W += 6;
                }
                a.addGroup(m, W, R), m += W, h += ee;
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new zm(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
        }
    }
    function My(t) {
        const e = {};
        for(const n in t){
            e[n] = {};
            for(const r in t[n]){
                const i = t[n][r];
                i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? i.isRenderTargetTexture ? (console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."), e[n][r] = null) : e[n][r] = i.clone() : Array.isArray(i) ? e[n][r] = i.slice() : e[n][r] = i;
            }
        }
        return e;
    }
    function Lo(t) {
        const e = {};
        for(let n = 0; n < t.length; n++){
            const r = My(t[n]);
            for(const i in r)e[i] = r[i];
        }
        return e;
    }
    function h0e(t) {
        const e = [];
        for(let n = 0; n < t.length; n++)e.push(t[n].clone());
        return e;
    }
    function lq(t) {
        const e = t.getRenderTarget();
        return e === null ? t.outputColorSpace : e.isXRRenderTarget === !0 ? e.texture.colorSpace : rr.workingColorSpace;
    }
    const cq = {
        clone: My,
        merge: Lo
    };
    var p0e = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, m0e = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
    class Sc extends bo {
        constructor(e){
            super(), this.isShaderMaterial = !0, this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.uniformsGroups = [], this.vertexShader = p0e, this.fragmentShader = m0e, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.forceSinglePass = !0, this.extensions = {
                clipCullDistance: !1,
                multiDraw: !1
            }, this.defaultAttributeValues = {
                color: [
                    1,
                    1,
                    1
                ],
                uv: [
                    0,
                    0
                ],
                uv1: [
                    0,
                    0
                ]
            }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = My(e.uniforms), this.uniformsGroups = h0e(e.uniformsGroups), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.fog = e.fog, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            n.glslVersion = this.glslVersion, n.uniforms = {};
            for(const i in this.uniforms){
                const o = this.uniforms[i].value;
                o && o.isTexture ? n.uniforms[i] = {
                    type: "t",
                    value: o.toJSON(e).uuid
                } : o && o.isColor ? n.uniforms[i] = {
                    type: "c",
                    value: o.getHex()
                } : o && o.isVector2 ? n.uniforms[i] = {
                    type: "v2",
                    value: o.toArray()
                } : o && o.isVector3 ? n.uniforms[i] = {
                    type: "v3",
                    value: o.toArray()
                } : o && o.isVector4 ? n.uniforms[i] = {
                    type: "v4",
                    value: o.toArray()
                } : o && o.isMatrix3 ? n.uniforms[i] = {
                    type: "m3",
                    value: o.toArray()
                } : o && o.isMatrix4 ? n.uniforms[i] = {
                    type: "m4",
                    value: o.toArray()
                } : n.uniforms[i] = {
                    value: o
                };
            }
            Object.keys(this.defines).length > 0 && (n.defines = this.defines), n.vertexShader = this.vertexShader, n.fragmentShader = this.fragmentShader, n.lights = this.lights, n.clipping = this.clipping;
            const r = {};
            for(const i in this.extensions)this.extensions[i] === !0 && (r[i] = !0);
            return Object.keys(r).length > 0 && (n.extensions = r), n;
        }
    }
    class Vw extends ur {
        constructor(){
            super(), this.isCamera = !0, this.type = "Camera", this.matrixWorldInverse = new gn, this.projectionMatrix = new gn, this.projectionMatrixInverse = new gn, this.coordinateSystem = gc;
        }
        copy(e, n) {
            return super.copy(e, n), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this.coordinateSystem = e.coordinateSystem, this;
        }
        getWorldDirection(e) {
            return super.getWorldDirection(e).negate();
        }
        updateMatrixWorld(e) {
            super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        updateWorldMatrix(e, n) {
            super.updateWorldMatrix(e, n), this.matrixWorldInverse.copy(this.matrixWorld).invert();
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const Ff = new ve, o8 = new ot, a8 = new ot;
    class Oi extends Vw {
        constructor(e = 50, n = 1, r = .1, i = 2e3){
            super(), this.isPerspectiveCamera = !0, this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = r, this.far = i, this.focus = 10, this.aspect = n, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
        }
        copy(e, n) {
            return super.copy(e, n), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
        }
        setFocalLength(e) {
            const n = .5 * this.getFilmHeight() / e;
            this.fov = Ey * 2 * Math.atan(n), this.updateProjectionMatrix();
        }
        getFocalLength() {
            const e = Math.tan(fm * .5 * this.fov);
            return .5 * this.getFilmHeight() / e;
        }
        getEffectiveFOV() {
            return Ey * 2 * Math.atan(Math.tan(fm * .5 * this.fov) / this.zoom);
        }
        getFilmWidth() {
            return this.filmGauge * Math.min(this.aspect, 1);
        }
        getFilmHeight() {
            return this.filmGauge / Math.max(this.aspect, 1);
        }
        getViewBounds(e, n, r) {
            Ff.set(-1, -1, .5).applyMatrix4(this.projectionMatrixInverse), n.set(Ff.x, Ff.y).multiplyScalar(-e / Ff.z), Ff.set(1, 1, .5).applyMatrix4(this.projectionMatrixInverse), r.set(Ff.x, Ff.y).multiplyScalar(-e / Ff.z);
        }
        getViewSize(e, n) {
            return this.getViewBounds(e, o8, a8), n.subVectors(a8, o8);
        }
        setViewOffset(e, n, r, i, s, o) {
            this.aspect = e / n, this.view === null && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = n, this.view.offsetX = r, this.view.offsetY = i, this.view.width = s, this.view.height = o, this.updateProjectionMatrix();
        }
        clearViewOffset() {
            this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
            const e = this.near;
            let n = e * Math.tan(fm * .5 * this.fov) / this.zoom, r = 2 * n, i = this.aspect * r, s = -.5 * i;
            const o = this.view;
            if (this.view !== null && this.view.enabled) {
                const l = o.fullWidth, c = o.fullHeight;
                s += o.offsetX * i / l, n -= o.offsetY * r / c, i *= o.width / l, r *= o.height / c;
            }
            const a = this.filmOffset;
            a !== 0 && (s += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(s, s + i, n, n - r, e, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.fov = this.fov, n.object.zoom = this.zoom, n.object.near = this.near, n.object.far = this.far, n.object.focus = this.focus, n.object.aspect = this.aspect, this.view !== null && (n.object.view = Object.assign({}, this.view)), n.object.filmGauge = this.filmGauge, n.object.filmOffset = this.filmOffset, n;
        }
    }
    const s0 = -90, o0 = 1;
    class uq extends ur {
        constructor(e, n, r){
            super(), this.type = "CubeCamera", this.renderTarget = r, this.coordinateSystem = null, this.activeMipmapLevel = 0;
            const i = new Oi(s0, o0, e, n);
            i.layers = this.layers, this.add(i);
            const s = new Oi(s0, o0, e, n);
            s.layers = this.layers, this.add(s);
            const o = new Oi(s0, o0, e, n);
            o.layers = this.layers, this.add(o);
            const a = new Oi(s0, o0, e, n);
            a.layers = this.layers, this.add(a);
            const l = new Oi(s0, o0, e, n);
            l.layers = this.layers, this.add(l);
            const c = new Oi(s0, o0, e, n);
            c.layers = this.layers, this.add(c);
        }
        updateCoordinateSystem() {
            const e = this.coordinateSystem, n = this.children.concat(), [r, i, s, o, a, l] = n;
            for (const c of n)this.remove(c);
            if (e === gc) r.up.set(0, 1, 0), r.lookAt(1, 0, 0), i.up.set(0, 1, 0), i.lookAt(-1, 0, 0), s.up.set(0, 0, -1), s.lookAt(0, 1, 0), o.up.set(0, 0, 1), o.lookAt(0, -1, 0), a.up.set(0, 1, 0), a.lookAt(0, 0, 1), l.up.set(0, 1, 0), l.lookAt(0, 0, -1);
            else if (e === ew) r.up.set(0, -1, 0), r.lookAt(-1, 0, 0), i.up.set(0, -1, 0), i.lookAt(1, 0, 0), s.up.set(0, 0, 1), s.lookAt(0, 1, 0), o.up.set(0, 0, -1), o.lookAt(0, -1, 0), a.up.set(0, -1, 0), a.lookAt(0, 0, 1), l.up.set(0, -1, 0), l.lookAt(0, 0, -1);
            else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " + e);
            for (const c of n)this.add(c), c.updateMatrixWorld();
        }
        update(e, n) {
            this.parent === null && this.updateMatrixWorld();
            const { renderTarget: r, activeMipmapLevel: i } = this;
            this.coordinateSystem !== e.coordinateSystem && (this.coordinateSystem = e.coordinateSystem, this.updateCoordinateSystem());
            const [s, o, a, l, c, u] = this.children, f = e.getRenderTarget(), h = e.getActiveCubeFace(), m = e.getActiveMipmapLevel(), v = e.xr.enabled;
            e.xr.enabled = !1;
            const _ = r.texture.generateMipmaps;
            r.texture.generateMipmaps = !1, e.setRenderTarget(r, 0, i), e.render(n, s), e.setRenderTarget(r, 1, i), e.render(n, o), e.setRenderTarget(r, 2, i), e.render(n, a), e.setRenderTarget(r, 3, i), e.render(n, l), e.setRenderTarget(r, 4, i), e.render(n, c), r.texture.generateMipmaps = _, e.setRenderTarget(r, 5, i), e.render(n, u), e.setRenderTarget(f, h, m), e.xr.enabled = v, r.texture.needsPMREMUpdate = !0;
        }
    }
    class Ww extends bi {
        constructor(e, n, r, i, s, o, a, l, c, u){
            e = e !== void 0 ? e : [], n = n !== void 0 ? n : Fd, super(e, n, r, i, s, o, a, l, c, u), this.isCubeTexture = !0, this.flipY = !1;
        }
        get images() {
            return this.image;
        }
        set images(e) {
            this.image = e;
        }
    }
    class dq extends mu {
        constructor(e = 1, n = {}){
            super(e, e, n), this.isWebGLCubeRenderTarget = !0;
            const r = {
                width: e,
                height: e,
                depth: 1
            }, i = [
                r,
                r,
                r,
                r,
                r,
                r
            ];
            this.texture = new Ww(i, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.colorSpace), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : ds;
        }
        fromEquirectangularTexture(e, n) {
            this.texture.type = n.type, this.texture.colorSpace = n.colorSpace, this.texture.generateMipmaps = n.generateMipmaps, this.texture.minFilter = n.minFilter, this.texture.magFilter = n.magFilter;
            const r = {
                uniforms: {
                    tEquirect: {
                        value: null
                    }
                },
                vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
                fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
            }, i = new zm(5, 5, 5), s = new Sc({
                name: "CubemapFromEquirect",
                uniforms: My(r.uniforms),
                vertexShader: r.vertexShader,
                fragmentShader: r.fragmentShader,
                side: Wo,
                blending: Cd
            });
            s.uniforms.tEquirect.value = n;
            const o = new Ji(i, s), a = n.minFilter;
            return n.minFilter === ru && (n.minFilter = ds), new uq(1, 10, this).update(e, o), n.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
        }
        clear(e, n, r, i) {
            const s = e.getRenderTarget();
            for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(n, r, i);
            e.setRenderTarget(s);
        }
    }
    class L0 extends ur {
        constructor(){
            super(), this.isGroup = !0, this.type = "Group";
        }
    }
    const g0e = {
        type: "move"
    };
    class KS {
        constructor(){
            this._targetRay = null, this._grip = null, this._hand = null;
        }
        getHandSpace() {
            return this._hand === null && (this._hand = new L0, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
                pinching: !1
            }), this._hand;
        }
        getTargetRaySpace() {
            return this._targetRay === null && (this._targetRay = new L0, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new ve, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new ve), this._targetRay;
        }
        getGripSpace() {
            return this._grip === null && (this._grip = new L0, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new ve, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new ve), this._grip;
        }
        dispatchEvent(e) {
            return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
        }
        connect(e) {
            if (e && e.hand) {
                const n = this._hand;
                if (n) for (const r of e.hand.values())this._getHandJoint(n, r);
            }
            return this.dispatchEvent({
                type: "connected",
                data: e
            }), this;
        }
        disconnect(e) {
            return this.dispatchEvent({
                type: "disconnected",
                data: e
            }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
        }
        update(e, n, r) {
            let i = null, s = null, o = null;
            const a = this._targetRay, l = this._grip, c = this._hand;
            if (e && n.session.visibilityState !== "visible-blurred") {
                if (c && e.hand) {
                    o = !0;
                    for (const _ of e.hand.values()){
                        const w = n.getJointPose(_, r), b = this._getHandJoint(c, _);
                        w !== null && (b.matrix.fromArray(w.transform.matrix), b.matrix.decompose(b.position, b.rotation, b.scale), b.matrixWorldNeedsUpdate = !0, b.jointRadius = w.radius), b.visible = w !== null;
                    }
                    const u = c.joints["index-finger-tip"], f = c.joints["thumb-tip"], h = u.position.distanceTo(f.position), m = .02, v = .005;
                    c.inputState.pinching && h > m + v ? (c.inputState.pinching = !1, this.dispatchEvent({
                        type: "pinchend",
                        handedness: e.handedness,
                        target: this
                    })) : !c.inputState.pinching && h <= m - v && (c.inputState.pinching = !0, this.dispatchEvent({
                        type: "pinchstart",
                        handedness: e.handedness,
                        target: this
                    }));
                } else l !== null && e.gripSpace && (s = n.getPose(e.gripSpace, r), s !== null && (l.matrix.fromArray(s.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), l.matrixWorldNeedsUpdate = !0, s.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(s.linearVelocity)) : l.hasLinearVelocity = !1, s.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(s.angularVelocity)) : l.hasAngularVelocity = !1));
                a !== null && (i = n.getPose(e.targetRaySpace, r), i === null && s !== null && (i = s), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), a.matrixWorldNeedsUpdate = !0, i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(g0e)));
            }
            return a !== null && (a.visible = i !== null), l !== null && (l.visible = s !== null), c !== null && (c.visible = o !== null), this;
        }
        _getHandJoint(e, n) {
            if (e.joints[n.jointName] === void 0) {
                const r = new L0;
                r.matrixAutoUpdate = !1, r.visible = !1, e.joints[n.jointName] = r, e.add(r);
            }
            return e.joints[n.jointName];
        }
    }
    class E2 {
        constructor(e, n = 25e-5){
            this.isFogExp2 = !0, this.name = "", this.color = new jt(e), this.density = n;
        }
        clone() {
            return new E2(this.color, this.density);
        }
        toJSON() {
            return {
                type: "FogExp2",
                name: this.name,
                color: this.color.getHex(),
                density: this.density
            };
        }
    }
    class M2 {
        constructor(e, n = 1, r = 1e3){
            this.isFog = !0, this.name = "", this.color = new jt(e), this.near = n, this.far = r;
        }
        clone() {
            return new M2(this.color, this.near, this.far);
        }
        toJSON() {
            return {
                type: "Fog",
                name: this.name,
                color: this.color.getHex(),
                near: this.near,
                far: this.far
            };
        }
    }
    class Gk extends ur {
        constructor(){
            super(), this.isScene = !0, this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.backgroundBlurriness = 0, this.backgroundIntensity = 1, this.backgroundRotation = new tl, this.environmentIntensity = 1, this.environmentRotation = new tl, this.overrideMaterial = null, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                detail: this
            }));
        }
        copy(e, n) {
            return super.copy(e, n), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), this.backgroundBlurriness = e.backgroundBlurriness, this.backgroundIntensity = e.backgroundIntensity, this.backgroundRotation.copy(e.backgroundRotation), this.environmentIntensity = e.environmentIntensity, this.environmentRotation.copy(e.environmentRotation), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.matrixAutoUpdate = e.matrixAutoUpdate, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return this.fog !== null && (n.object.fog = this.fog.toJSON()), this.backgroundBlurriness > 0 && (n.object.backgroundBlurriness = this.backgroundBlurriness), this.backgroundIntensity !== 1 && (n.object.backgroundIntensity = this.backgroundIntensity), n.object.backgroundRotation = this.backgroundRotation.toArray(), this.environmentIntensity !== 1 && (n.object.environmentIntensity = this.environmentIntensity), n.object.environmentRotation = this.environmentRotation.toArray(), n;
        }
    }
    class T2 {
        constructor(e, n){
            this.isInterleavedBuffer = !0, this.array = e, this.stride = n, this.count = e !== void 0 ? e.length / n : 0, this.usage = Qb, this.updateRanges = [], this.version = 0, this.uuid = Ya();
        }
        onUploadCallback() {}
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        setUsage(e) {
            return this.usage = e, this;
        }
        addUpdateRange(e, n) {
            this.updateRanges.push({
                start: e,
                count: n
            });
        }
        clearUpdateRanges() {
            this.updateRanges.length = 0;
        }
        copy(e) {
            return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
        }
        copyAt(e, n, r) {
            e *= this.stride, r *= n.stride;
            for(let i = 0, s = this.stride; i < s; i++)this.array[e + i] = n.array[r + i];
            return this;
        }
        set(e, n = 0) {
            return this.array.set(e, n), this;
        }
        clone(e) {
            e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Ya()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
            const n = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), r = new this.constructor(n, this.stride);
            return r.setUsage(this.usage), r;
        }
        onUpload(e) {
            return this.onUploadCallback = e, this;
        }
        toJSON(e) {
            return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Ya()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer))), {
                uuid: this.uuid,
                buffer: this.array.buffer._uuid,
                type: this.array.constructor.name,
                stride: this.stride
            };
        }
    }
    const Do = new ve;
    class Pm {
        constructor(e, n, r, i = !1){
            this.isInterleavedBufferAttribute = !0, this.name = "", this.data = e, this.itemSize = n, this.offset = r, this.normalized = i;
        }
        get count() {
            return this.data.count;
        }
        get array() {
            return this.data.array;
        }
        set needsUpdate(e) {
            this.data.needsUpdate = e;
        }
        applyMatrix4(e) {
            for(let n = 0, r = this.data.count; n < r; n++)Do.fromBufferAttribute(this, n), Do.applyMatrix4(e), this.setXYZ(n, Do.x, Do.y, Do.z);
            return this;
        }
        applyNormalMatrix(e) {
            for(let n = 0, r = this.count; n < r; n++)Do.fromBufferAttribute(this, n), Do.applyNormalMatrix(e), this.setXYZ(n, Do.x, Do.y, Do.z);
            return this;
        }
        transformDirection(e) {
            for(let n = 0, r = this.count; n < r; n++)Do.fromBufferAttribute(this, n), Do.transformDirection(e), this.setXYZ(n, Do.x, Do.y, Do.z);
            return this;
        }
        getComponent(e, n) {
            let r = this.array[e * this.data.stride + this.offset + n];
            return this.normalized && (r = Vo(r, this.array)), r;
        }
        setComponent(e, n, r) {
            return this.normalized && (r = kn(r, this.array)), this.data.array[e * this.data.stride + this.offset + n] = r, this;
        }
        setX(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.data.array[e * this.data.stride + this.offset] = n, this;
        }
        setY(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.data.array[e * this.data.stride + this.offset + 1] = n, this;
        }
        setZ(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.data.array[e * this.data.stride + this.offset + 2] = n, this;
        }
        setW(e, n) {
            return this.normalized && (n = kn(n, this.array)), this.data.array[e * this.data.stride + this.offset + 3] = n, this;
        }
        getX(e) {
            let n = this.data.array[e * this.data.stride + this.offset];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        getY(e) {
            let n = this.data.array[e * this.data.stride + this.offset + 1];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        getZ(e) {
            let n = this.data.array[e * this.data.stride + this.offset + 2];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        getW(e) {
            let n = this.data.array[e * this.data.stride + this.offset + 3];
            return this.normalized && (n = Vo(n, this.array)), n;
        }
        setXY(e, n, r) {
            return e = e * this.data.stride + this.offset, this.normalized && (n = kn(n, this.array), r = kn(r, this.array)), this.data.array[e + 0] = n, this.data.array[e + 1] = r, this;
        }
        setXYZ(e, n, r, i) {
            return e = e * this.data.stride + this.offset, this.normalized && (n = kn(n, this.array), r = kn(r, this.array), i = kn(i, this.array)), this.data.array[e + 0] = n, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this;
        }
        setXYZW(e, n, r, i, s) {
            return e = e * this.data.stride + this.offset, this.normalized && (n = kn(n, this.array), r = kn(r, this.array), i = kn(i, this.array), s = kn(s, this.array)), this.data.array[e + 0] = n, this.data.array[e + 1] = r, this.data.array[e + 2] = i, this.data.array[e + 3] = s, this;
        }
        clone(e) {
            if (e === void 0) {
                console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");
                const n = [];
                for(let r = 0; r < this.count; r++){
                    const i = r * this.data.stride + this.offset;
                    for(let s = 0; s < this.itemSize; s++)n.push(this.data.array[i + s]);
                }
                return new Rr(new this.array.constructor(n), this.itemSize, this.normalized);
            } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new Pm(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
        }
        toJSON(e) {
            if (e === void 0) {
                console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");
                const n = [];
                for(let r = 0; r < this.count; r++){
                    const i = r * this.data.stride + this.offset;
                    for(let s = 0; s < this.itemSize; s++)n.push(this.data.array[i + s]);
                }
                return {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: n,
                    normalized: this.normalized
                };
            } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
                isInterleavedBufferAttribute: !0,
                itemSize: this.itemSize,
                data: this.data.uuid,
                offset: this.offset,
                normalized: this.normalized
            };
        }
    }
    class Xk extends bo {
        constructor(e){
            super(), this.isSpriteMaterial = !0, this.type = "SpriteMaterial", this.color = new jt(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
        }
    }
    let a0;
    const nx = new ve, l0 = new ve, c0 = new ve, u0 = new ot, rx = new ot, fq = new gn, V1 = new ve, ix = new ve, W1 = new ve, l8 = new ot, kA = new ot, c8 = new ot;
    class hq extends ur {
        constructor(e = new Xk){
            if (super(), this.isSprite = !0, this.type = "Sprite", a0 === void 0) {
                a0 = new Vn;
                const n = new Float32Array([
                    -.5,
                    -.5,
                    0,
                    0,
                    0,
                    .5,
                    -.5,
                    0,
                    1,
                    0,
                    .5,
                    .5,
                    0,
                    1,
                    1,
                    -.5,
                    .5,
                    0,
                    0,
                    1
                ]), r = new T2(n, 5);
                a0.setIndex([
                    0,
                    1,
                    2,
                    0,
                    2,
                    3
                ]), a0.setAttribute("position", new Pm(r, 3, 0, !1)), a0.setAttribute("uv", new Pm(r, 2, 3, !1));
            }
            this.geometry = a0, this.material = e, this.center = new ot(.5, .5);
        }
        raycast(e, n) {
            e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), l0.setFromMatrixScale(this.matrixWorld), fq.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), c0.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && l0.multiplyScalar(-c0.z);
            const r = this.material.rotation;
            let i, s;
            r !== 0 && (s = Math.cos(r), i = Math.sin(r));
            const o = this.center;
            q1(V1.set(-.5, -.5, 0), c0, o, l0, i, s), q1(ix.set(.5, -.5, 0), c0, o, l0, i, s), q1(W1.set(.5, .5, 0), c0, o, l0, i, s), l8.set(0, 0), kA.set(1, 0), c8.set(1, 1);
            let a = e.ray.intersectTriangle(V1, ix, W1, !1, nx);
            if (a === null && (q1(ix.set(-.5, .5, 0), c0, o, l0, i, s), kA.set(0, 1), a = e.ray.intersectTriangle(V1, W1, ix, !1, nx), a === null)) return;
            const l = e.ray.origin.distanceTo(nx);
            l < e.near || l > e.far || n.push({
                distance: l,
                point: nx.clone(),
                uv: ga.getInterpolation(nx, V1, ix, W1, l8, kA, c8, new ot),
                face: null,
                object: this
            });
        }
        copy(e, n) {
            return super.copy(e, n), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
        }
    }
    function q1(t, e, n, r, i, s) {
        u0.subVectors(t, n).addScalar(.5).multiply(r), i !== void 0 ? (rx.x = s * u0.x - i * u0.y, rx.y = i * u0.x + s * u0.y) : rx.copy(u0), t.copy(e), t.x += rx.x, t.y += rx.y, t.applyMatrix4(fq);
    }
    const H1 = new ve, u8 = new ve;
    class pq extends ur {
        constructor(){
            super(), this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
                levels: {
                    enumerable: !0,
                    value: []
                },
                isLOD: {
                    value: !0
                }
            }), this.autoUpdate = !0;
        }
        copy(e) {
            super.copy(e, !1);
            const n = e.levels;
            for(let r = 0, i = n.length; r < i; r++){
                const s = n[r];
                this.addLevel(s.object.clone(), s.distance, s.hysteresis);
            }
            return this.autoUpdate = e.autoUpdate, this;
        }
        addLevel(e, n = 0, r = 0) {
            n = Math.abs(n);
            const i = this.levels;
            let s;
            for(s = 0; s < i.length && !(n < i[s].distance); s++);
            return i.splice(s, 0, {
                distance: n,
                hysteresis: r,
                object: e
            }), this.add(e), this;
        }
        removeLevel(e) {
            const n = this.levels;
            for(let r = 0; r < n.length; r++)if (n[r].distance === e) {
                const i = n.splice(r, 1);
                return this.remove(i[0].object), !0;
            }
            return !1;
        }
        getCurrentLevel() {
            return this._currentLevel;
        }
        getObjectForDistance(e) {
            const n = this.levels;
            if (n.length > 0) {
                let r, i;
                for(r = 1, i = n.length; r < i; r++){
                    let s = n[r].distance;
                    if (n[r].object.visible && (s -= s * n[r].hysteresis), e < s) break;
                }
                return n[r - 1].object;
            }
            return null;
        }
        raycast(e, n) {
            if (this.levels.length > 0) {
                H1.setFromMatrixPosition(this.matrixWorld);
                const i = e.ray.origin.distanceTo(H1);
                this.getObjectForDistance(i).raycast(e, n);
            }
        }
        update(e) {
            const n = this.levels;
            if (n.length > 1) {
                H1.setFromMatrixPosition(e.matrixWorld), u8.setFromMatrixPosition(this.matrixWorld);
                const r = H1.distanceTo(u8) / e.zoom;
                n[0].object.visible = !0;
                let i, s;
                for(i = 1, s = n.length; i < s; i++){
                    let o = n[i].distance;
                    if (n[i].object.visible && (o -= o * n[i].hysteresis), r >= o) n[i - 1].object.visible = !1, n[i].object.visible = !0;
                    else break;
                }
                for(this._currentLevel = i - 1; i < s; i++)n[i].object.visible = !1;
            }
        }
        toJSON(e) {
            const n = super.toJSON(e);
            this.autoUpdate === !1 && (n.object.autoUpdate = !1), n.object.levels = [];
            const r = this.levels;
            for(let i = 0, s = r.length; i < s; i++){
                const o = r[i];
                n.object.levels.push({
                    object: o.object.uuid,
                    distance: o.distance,
                    hysteresis: o.hysteresis
                });
            }
            return n;
        }
    }
    const d8 = new ve, f8 = new cr, h8 = new cr, y0e = new ve, p8 = new gn, $1 = new ve, OA = new ho, m8 = new gn, DA = new Um;
    class mq extends Ji {
        constructor(e, n){
            super(e, n), this.isSkinnedMesh = !0, this.type = "SkinnedMesh", this.bindMode = z3, this.bindMatrix = new gn, this.bindMatrixInverse = new gn, this.boundingBox = null, this.boundingSphere = null;
        }
        computeBoundingBox() {
            const e = this.geometry;
            this.boundingBox === null && (this.boundingBox = new qo), this.boundingBox.makeEmpty();
            const n = e.getAttribute("position");
            for(let r = 0; r < n.count; r++)this.getVertexPosition(r, $1), this.boundingBox.expandByPoint($1);
        }
        computeBoundingSphere() {
            const e = this.geometry;
            this.boundingSphere === null && (this.boundingSphere = new ho), this.boundingSphere.makeEmpty();
            const n = e.getAttribute("position");
            for(let r = 0; r < n.count; r++)this.getVertexPosition(r, $1), this.boundingSphere.expandByPoint($1);
        }
        copy(e, n) {
            return super.copy(e, n), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
        }
        raycast(e, n) {
            const r = this.material, i = this.matrixWorld;
            r !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), OA.copy(this.boundingSphere), OA.applyMatrix4(i), e.ray.intersectsSphere(OA) !== !1 && (m8.copy(i).invert(), DA.copy(e.ray).applyMatrix4(m8), !(this.boundingBox !== null && DA.intersectsBox(this.boundingBox) === !1) && this._computeIntersections(e, n, DA)));
        }
        getVertexPosition(e, n) {
            return super.getVertexPosition(e, n), this.applyBoneTransform(e, n), n;
        }
        bind(e, n) {
            this.skeleton = e, n === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), n = this.matrixWorld), this.bindMatrix.copy(n), this.bindMatrixInverse.copy(n).invert();
        }
        pose() {
            this.skeleton.pose();
        }
        normalizeSkinWeights() {
            const e = new cr, n = this.geometry.attributes.skinWeight;
            for(let r = 0, i = n.count; r < i; r++){
                e.fromBufferAttribute(n, r);
                const s = 1 / e.manhattanLength();
                s !== 1 / 0 ? e.multiplyScalar(s) : e.set(1, 0, 0, 0), n.setXYZW(r, e.x, e.y, e.z, e.w);
            }
        }
        updateMatrixWorld(e) {
            super.updateMatrixWorld(e), this.bindMode === z3 ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === qW ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
        }
        applyBoneTransform(e, n) {
            const r = this.skeleton, i = this.geometry;
            f8.fromBufferAttribute(i.attributes.skinIndex, e), h8.fromBufferAttribute(i.attributes.skinWeight, e), d8.copy(n).applyMatrix4(this.bindMatrix), n.set(0, 0, 0);
            for(let s = 0; s < 4; s++){
                const o = h8.getComponent(s);
                if (o !== 0) {
                    const a = f8.getComponent(s);
                    p8.multiplyMatrices(r.bones[a].matrixWorld, r.boneInverses[a]), n.addScaledVector(y0e.copy(d8).applyMatrix4(p8), o);
                }
            }
            return n.applyMatrix4(this.bindMatrixInverse);
        }
    }
    class Kk extends ur {
        constructor(){
            super(), this.isBone = !0, this.type = "Bone";
        }
    }
    class vc extends bi {
        constructor(e = null, n = 1, r = 1, i, s, o, a, l, c = qs, u = qs, f, h){
            super(null, o, a, l, c, u, i, s, f, h), this.isDataTexture = !0, this.image = {
                data: e,
                width: n,
                height: r
            }, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
        }
    }
    const g8 = new gn, v0e = new gn;
    class C2 {
        constructor(e = [], n = []){
            this.uuid = Ya(), this.bones = e.slice(0), this.boneInverses = n, this.boneMatrices = null, this.boneTexture = null, this.init();
        }
        init() {
            const e = this.bones, n = this.boneInverses;
            if (this.boneMatrices = new Float32Array(e.length * 16), n.length === 0) this.calculateInverses();
            else if (e.length !== n.length) {
                console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
                for(let r = 0, i = this.bones.length; r < i; r++)this.boneInverses.push(new gn);
            }
        }
        calculateInverses() {
            this.boneInverses.length = 0;
            for(let e = 0, n = this.bones.length; e < n; e++){
                const r = new gn;
                this.bones[e] && r.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(r);
            }
        }
        pose() {
            for(let e = 0, n = this.bones.length; e < n; e++){
                const r = this.bones[e];
                r && r.matrixWorld.copy(this.boneInverses[e]).invert();
            }
            for(let e = 0, n = this.bones.length; e < n; e++){
                const r = this.bones[e];
                r && (r.parent && r.parent.isBone ? (r.matrix.copy(r.parent.matrixWorld).invert(), r.matrix.multiply(r.matrixWorld)) : r.matrix.copy(r.matrixWorld), r.matrix.decompose(r.position, r.quaternion, r.scale));
            }
        }
        update() {
            const e = this.bones, n = this.boneInverses, r = this.boneMatrices, i = this.boneTexture;
            for(let s = 0, o = e.length; s < o; s++){
                const a = e[s] ? e[s].matrixWorld : v0e;
                g8.multiplyMatrices(a, n[s]), g8.toArray(r, s * 16);
            }
            i !== null && (i.needsUpdate = !0);
        }
        clone() {
            return new C2(this.bones, this.boneInverses);
        }
        computeBoneTexture() {
            let e = Math.sqrt(this.bones.length * 4);
            e = Math.ceil(e / 4) * 4, e = Math.max(e, 4);
            const n = new Float32Array(e * e * 4);
            n.set(this.boneMatrices);
            const r = new vc(n, e, e, lo, xa);
            return r.needsUpdate = !0, this.boneMatrices = n, this.boneTexture = r, this;
        }
        getBoneByName(e) {
            for(let n = 0, r = this.bones.length; n < r; n++){
                const i = this.bones[n];
                if (i.name === e) return i;
            }
        }
        dispose() {
            this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
        }
        fromJSON(e, n) {
            this.uuid = e.uuid;
            for(let r = 0, i = e.bones.length; r < i; r++){
                const s = e.bones[r];
                let o = n[s];
                o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", s), o = new Kk), this.bones.push(o), this.boneInverses.push(new gn().fromArray(e.boneInverses[r]));
            }
            return this.init(), this;
        }
        toJSON() {
            const e = {
                metadata: {
                    version: 4.6,
                    type: "Skeleton",
                    generator: "Skeleton.toJSON"
                },
                bones: [],
                boneInverses: []
            };
            e.uuid = this.uuid;
            const n = this.bones, r = this.boneInverses;
            for(let i = 0, s = n.length; i < s; i++){
                const o = n[i];
                e.bones.push(o.uuid);
                const a = r[i];
                e.boneInverses.push(a.toArray());
            }
            return e;
        }
    }
    class Ty extends Rr {
        constructor(e, n, r, i = 1){
            super(e, n, r), this.isInstancedBufferAttribute = !0, this.meshPerAttribute = i;
        }
        copy(e) {
            return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
        }
    }
    const d0 = new gn, y8 = new gn, G1 = [], v8 = new qo, x0e = new gn, sx = new Ji, ox = new ho;
    class gq extends Ji {
        constructor(e, n, r){
            super(e, n), this.isInstancedMesh = !0, this.instanceMatrix = new Ty(new Float32Array(r * 16), 16), this.instanceColor = null, this.morphTexture = null, this.count = r, this.boundingBox = null, this.boundingSphere = null;
            for(let i = 0; i < r; i++)this.setMatrixAt(i, x0e);
        }
        computeBoundingBox() {
            const e = this.geometry, n = this.count;
            this.boundingBox === null && (this.boundingBox = new qo), e.boundingBox === null && e.computeBoundingBox(), this.boundingBox.makeEmpty();
            for(let r = 0; r < n; r++)this.getMatrixAt(r, d0), v8.copy(e.boundingBox).applyMatrix4(d0), this.boundingBox.union(v8);
        }
        computeBoundingSphere() {
            const e = this.geometry, n = this.count;
            this.boundingSphere === null && (this.boundingSphere = new ho), e.boundingSphere === null && e.computeBoundingSphere(), this.boundingSphere.makeEmpty();
            for(let r = 0; r < n; r++)this.getMatrixAt(r, d0), ox.copy(e.boundingSphere).applyMatrix4(d0), this.boundingSphere.union(ox);
        }
        copy(e, n) {
            return super.copy(e, n), this.instanceMatrix.copy(e.instanceMatrix), e.morphTexture !== null && (this.morphTexture = e.morphTexture.clone()), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, e.boundingBox !== null && (this.boundingBox = e.boundingBox.clone()), e.boundingSphere !== null && (this.boundingSphere = e.boundingSphere.clone()), this;
        }
        getColorAt(e, n) {
            n.fromArray(this.instanceColor.array, e * 3);
        }
        getMatrixAt(e, n) {
            n.fromArray(this.instanceMatrix.array, e * 16);
        }
        getMorphAt(e, n) {
            const r = n.morphTargetInfluences, i = this.morphTexture.source.data.data, s = r.length + 1, o = e * s + 1;
            for(let a = 0; a < r.length; a++)r[a] = i[o + a];
        }
        raycast(e, n) {
            const r = this.matrixWorld, i = this.count;
            if (sx.geometry = this.geometry, sx.material = this.material, sx.material !== void 0 && (this.boundingSphere === null && this.computeBoundingSphere(), ox.copy(this.boundingSphere), ox.applyMatrix4(r), e.ray.intersectsSphere(ox) !== !1)) for(let s = 0; s < i; s++){
                this.getMatrixAt(s, d0), y8.multiplyMatrices(r, d0), sx.matrixWorld = y8, sx.raycast(e, G1);
                for(let o = 0, a = G1.length; o < a; o++){
                    const l = G1[o];
                    l.instanceId = s, l.object = this, n.push(l);
                }
                G1.length = 0;
            }
        }
        setColorAt(e, n) {
            this.instanceColor === null && (this.instanceColor = new Ty(new Float32Array(this.instanceMatrix.count * 3).fill(1), 3)), n.toArray(this.instanceColor.array, e * 3);
        }
        setMatrixAt(e, n) {
            n.toArray(this.instanceMatrix.array, e * 16);
        }
        setMorphAt(e, n) {
            const r = n.morphTargetInfluences, i = r.length + 1;
            this.morphTexture === null && (this.morphTexture = new vc(new Float32Array(i * this.count), i, this.count, v2, xa));
            const s = this.morphTexture.source.data.data;
            let o = 0;
            for(let c = 0; c < r.length; c++)o += r[c];
            const a = this.geometry.morphTargetsRelative ? 1 : 1 - o, l = i * e;
            s[l] = a, s.set(r, l + 1);
        }
        updateMorphTargets() {}
        dispose() {
            return this.dispatchEvent({
                type: "dispose"
            }), this.morphTexture !== null && (this.morphTexture.dispose(), this.morphTexture = null), this;
        }
    }
    const LA = new ve, b0e = new ve, w0e = new An;
    class vd {
        constructor(e = new ve(1, 0, 0), n = 0){
            this.isPlane = !0, this.normal = e, this.constant = n;
        }
        set(e, n) {
            return this.normal.copy(e), this.constant = n, this;
        }
        setComponents(e, n, r, i) {
            return this.normal.set(e, n, r), this.constant = i, this;
        }
        setFromNormalAndCoplanarPoint(e, n) {
            return this.normal.copy(e), this.constant = -n.dot(this.normal), this;
        }
        setFromCoplanarPoints(e, n, r) {
            const i = LA.subVectors(r, n).cross(b0e.subVectors(e, n)).normalize();
            return this.setFromNormalAndCoplanarPoint(i, e), this;
        }
        copy(e) {
            return this.normal.copy(e.normal), this.constant = e.constant, this;
        }
        normalize() {
            const e = 1 / this.normal.length();
            return this.normal.multiplyScalar(e), this.constant *= e, this;
        }
        negate() {
            return this.constant *= -1, this.normal.negate(), this;
        }
        distanceToPoint(e) {
            return this.normal.dot(e) + this.constant;
        }
        distanceToSphere(e) {
            return this.distanceToPoint(e.center) - e.radius;
        }
        projectPoint(e, n) {
            return n.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
        }
        intersectLine(e, n) {
            const r = e.delta(LA), i = this.normal.dot(r);
            if (i === 0) return this.distanceToPoint(e.start) === 0 ? n.copy(e.start) : null;
            const s = -(e.start.dot(this.normal) + this.constant) / i;
            return s < 0 || s > 1 ? null : n.copy(e.start).addScaledVector(r, s);
        }
        intersectsLine(e) {
            const n = this.distanceToPoint(e.start), r = this.distanceToPoint(e.end);
            return n < 0 && r > 0 || r < 0 && n > 0;
        }
        intersectsBox(e) {
            return e.intersectsPlane(this);
        }
        intersectsSphere(e) {
            return e.intersectsPlane(this);
        }
        coplanarPoint(e) {
            return e.copy(this.normal).multiplyScalar(-this.constant);
        }
        applyMatrix4(e, n) {
            const r = n || w0e.getNormalMatrix(e), i = this.coplanarPoint(LA).applyMatrix4(e), s = this.normal.applyMatrix3(r).normalize();
            return this.constant = -i.dot(s), this;
        }
        translate(e) {
            return this.constant -= e.dot(this.normal), this;
        }
        equals(e) {
            return e.normal.equals(this.normal) && e.constant === this.constant;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const Mp = new ho, X1 = new ve;
    class qw {
        constructor(e = new vd, n = new vd, r = new vd, i = new vd, s = new vd, o = new vd){
            this.planes = [
                e,
                n,
                r,
                i,
                s,
                o
            ];
        }
        set(e, n, r, i, s, o) {
            const a = this.planes;
            return a[0].copy(e), a[1].copy(n), a[2].copy(r), a[3].copy(i), a[4].copy(s), a[5].copy(o), this;
        }
        copy(e) {
            const n = this.planes;
            for(let r = 0; r < 6; r++)n[r].copy(e.planes[r]);
            return this;
        }
        setFromProjectionMatrix(e, n = gc) {
            const r = this.planes, i = e.elements, s = i[0], o = i[1], a = i[2], l = i[3], c = i[4], u = i[5], f = i[6], h = i[7], m = i[8], v = i[9], _ = i[10], w = i[11], b = i[12], M = i[13], E = i[14], T = i[15];
            if (r[0].setComponents(l - s, h - c, w - m, T - b).normalize(), r[1].setComponents(l + s, h + c, w + m, T + b).normalize(), r[2].setComponents(l + o, h + u, w + v, T + M).normalize(), r[3].setComponents(l - o, h - u, w - v, T - M).normalize(), r[4].setComponents(l - a, h - f, w - _, T - E).normalize(), n === gc) r[5].setComponents(l + a, h + f, w + _, T + E).normalize();
            else if (n === ew) r[5].setComponents(a, f, _, E).normalize();
            else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " + n);
            return this;
        }
        intersectsObject(e) {
            if (e.boundingSphere !== void 0) e.boundingSphere === null && e.computeBoundingSphere(), Mp.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
            else {
                const n = e.geometry;
                n.boundingSphere === null && n.computeBoundingSphere(), Mp.copy(n.boundingSphere).applyMatrix4(e.matrixWorld);
            }
            return this.intersectsSphere(Mp);
        }
        intersectsSprite(e) {
            return Mp.center.set(0, 0, 0), Mp.radius = .7071067811865476, Mp.applyMatrix4(e.matrixWorld), this.intersectsSphere(Mp);
        }
        intersectsSphere(e) {
            const n = this.planes, r = e.center, i = -e.radius;
            for(let s = 0; s < 6; s++)if (n[s].distanceToPoint(r) < i) return !1;
            return !0;
        }
        intersectsBox(e) {
            const n = this.planes;
            for(let r = 0; r < 6; r++){
                const i = n[r];
                if (X1.x = i.normal.x > 0 ? e.max.x : e.min.x, X1.y = i.normal.y > 0 ? e.max.y : e.min.y, X1.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(X1) < 0) return !1;
            }
            return !0;
        }
        containsPoint(e) {
            const n = this.planes;
            for(let r = 0; r < 6; r++)if (n[r].distanceToPoint(e) < 0) return !1;
            return !0;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    function FA(t, e) {
        return t - e;
    }
    function _0e(t, e) {
        return t.z - e.z;
    }
    function S0e(t, e) {
        return e.z - t.z;
    }
    class E0e {
        constructor(){
            this.index = 0, this.pool = [], this.list = [];
        }
        push(e, n, r, i) {
            const s = this.pool, o = this.list;
            this.index >= s.length && s.push({
                start: -1,
                count: -1,
                z: -1,
                index: -1
            });
            const a = s[this.index];
            o.push(a), this.index++, a.start = e, a.count = n, a.z = r, a.index = i;
        }
        reset() {
            this.list.length = 0, this.index = 0;
        }
    }
    const la = new gn, M0e = new jt(1, 1, 1), jA = new qw, K1 = new qo, Tp = new ho, ax = new ve, x8 = new ve, T0e = new ve, BA = new E0e, io = new Ji, Y1 = [];
    function C0e(t, e, n = 0) {
        const r = e.itemSize;
        if (t.isInterleavedBufferAttribute || t.array.constructor !== e.array.constructor) {
            const i = t.count;
            for(let s = 0; s < i; s++)for(let o = 0; o < r; o++)e.setComponent(s + n, o, t.getComponent(s, o));
        } else e.array.set(t.array, n * r);
        e.needsUpdate = !0;
    }
    function Cp(t, e) {
        if (t.constructor !== e.constructor) {
            const n = Math.min(t.length, e.length);
            for(let r = 0; r < n; r++)e[r] = t[r];
        } else {
            const n = Math.min(t.length, e.length);
            e.set(new t.constructor(t.buffer, 0, n));
        }
    }
    class yq extends Ji {
        get maxInstanceCount() {
            return this._maxInstanceCount;
        }
        get instanceCount() {
            return this._instanceInfo.length - this._availableInstanceIds.length;
        }
        get unusedVertexCount() {
            return this._maxVertexCount - this._nextVertexStart;
        }
        get unusedIndexCount() {
            return this._maxIndexCount - this._nextIndexStart;
        }
        constructor(e, n, r = n * 2, i){
            super(new Vn, i), this.isBatchedMesh = !0, this.perObjectFrustumCulled = !0, this.sortObjects = !0, this.boundingBox = null, this.boundingSphere = null, this.customSort = null, this._instanceInfo = [], this._geometryInfo = [], this._availableInstanceIds = [], this._availableGeometryIds = [], this._nextIndexStart = 0, this._nextVertexStart = 0, this._geometryCount = 0, this._visibilityChanged = !0, this._geometryInitialized = !1, this._maxInstanceCount = e, this._maxVertexCount = n, this._maxIndexCount = r, this._multiDrawCounts = new Int32Array(e), this._multiDrawStarts = new Int32Array(e), this._multiDrawCount = 0, this._multiDrawInstances = null, this._matricesTexture = null, this._indirectTexture = null, this._colorsTexture = null, this._initMatricesTexture(), this._initIndirectTexture();
        }
        _initMatricesTexture() {
            let e = Math.sqrt(this._maxInstanceCount * 4);
            e = Math.ceil(e / 4) * 4, e = Math.max(e, 4);
            const n = new Float32Array(e * e * 4), r = new vc(n, e, e, lo, xa);
            this._matricesTexture = r;
        }
        _initIndirectTexture() {
            let e = Math.sqrt(this._maxInstanceCount);
            e = Math.ceil(e);
            const n = new Uint32Array(e * e), r = new vc(n, e, e, Uw, jd);
            this._indirectTexture = r;
        }
        _initColorsTexture() {
            let e = Math.sqrt(this._maxInstanceCount);
            e = Math.ceil(e);
            const n = new Float32Array(e * e * 4).fill(1), r = new vc(n, e, e, lo, xa);
            r.colorSpace = rr.workingColorSpace, this._colorsTexture = r;
        }
        _initializeGeometry(e) {
            const n = this.geometry, r = this._maxVertexCount, i = this._maxIndexCount;
            if (this._geometryInitialized === !1) {
                for(const s in e.attributes){
                    const o = e.getAttribute(s), { array: a, itemSize: l, normalized: c } = o, u = new a.constructor(r * l), f = new Rr(u, l, c);
                    n.setAttribute(s, f);
                }
                if (e.getIndex() !== null) {
                    const s = r > 65535 ? new Uint32Array(i) : new Uint16Array(i);
                    n.setIndex(new Rr(s, 1));
                }
                this._geometryInitialized = !0;
            }
        }
        _validateGeometry(e) {
            const n = this.geometry;
            if (!!e.getIndex() != !!n.getIndex()) throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');
            for(const r in n.attributes){
                if (!e.hasAttribute(r)) throw new Error(`THREE.BatchedMesh: Added geometry missing "${r}". All geometries must have consistent attributes.`);
                const i = e.getAttribute(r), s = n.getAttribute(r);
                if (i.itemSize !== s.itemSize || i.normalized !== s.normalized) throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.");
            }
        }
        validateInstanceId(e) {
            const n = this._instanceInfo;
            if (e < 0 || e >= n.length || n[e].active === !1) throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`);
        }
        validateGeometryId(e) {
            const n = this._geometryInfo;
            if (e < 0 || e >= n.length || n[e].active === !1) throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`);
        }
        setCustomSort(e) {
            return this.customSort = e, this;
        }
        computeBoundingBox() {
            this.boundingBox === null && (this.boundingBox = new qo);
            const e = this.boundingBox, n = this._instanceInfo;
            e.makeEmpty();
            for(let r = 0, i = n.length; r < i; r++){
                if (n[r].active === !1) continue;
                const s = n[r].geometryIndex;
                this.getMatrixAt(r, la), this.getBoundingBoxAt(s, K1).applyMatrix4(la), e.union(K1);
            }
        }
        computeBoundingSphere() {
            this.boundingSphere === null && (this.boundingSphere = new ho);
            const e = this.boundingSphere, n = this._instanceInfo;
            e.makeEmpty();
            for(let r = 0, i = n.length; r < i; r++){
                if (n[r].active === !1) continue;
                const s = n[r].geometryIndex;
                this.getMatrixAt(r, la), this.getBoundingSphereAt(s, Tp).applyMatrix4(la), e.union(Tp);
            }
        }
        addInstance(e) {
            if (this._instanceInfo.length >= this.maxInstanceCount && this._availableInstanceIds.length === 0) throw new Error("THREE.BatchedMesh: Maximum item count reached.");
            const r = {
                visible: !0,
                active: !0,
                geometryIndex: e
            };
            let i = null;
            this._availableInstanceIds.length > 0 ? (this._availableInstanceIds.sort(FA), i = this._availableInstanceIds.shift(), this._instanceInfo[i] = r) : (i = this._instanceInfo.length, this._instanceInfo.push(r));
            const s = this._matricesTexture;
            la.identity().toArray(s.image.data, i * 16), s.needsUpdate = !0;
            const o = this._colorsTexture;
            return o && (M0e.toArray(o.image.data, i * 4), o.needsUpdate = !0), this._visibilityChanged = !0, i;
        }
        addGeometry(e, n = -1, r = -1) {
            this._initializeGeometry(e), this._validateGeometry(e);
            const i = {
                vertexStart: -1,
                vertexCount: -1,
                reservedVertexCount: -1,
                indexStart: -1,
                indexCount: -1,
                reservedIndexCount: -1,
                start: -1,
                count: -1,
                boundingBox: null,
                boundingSphere: null,
                active: !0
            }, s = this._geometryInfo;
            i.vertexStart = this._nextVertexStart, i.reservedVertexCount = n === -1 ? e.getAttribute("position").count : n;
            const o = e.getIndex();
            if (o !== null && (i.indexStart = this._nextIndexStart, i.reservedIndexCount = r === -1 ? o.count : r), i.indexStart !== -1 && i.indexStart + i.reservedIndexCount > this._maxIndexCount || i.vertexStart + i.reservedVertexCount > this._maxVertexCount) throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");
            let l;
            return this._availableGeometryIds.length > 0 ? (this._availableGeometryIds.sort(FA), l = this._availableGeometryIds.shift(), s[l] = i) : (l = this._geometryCount, this._geometryCount++, s.push(i)), this.setGeometryAt(l, e), this._nextIndexStart = i.indexStart + i.reservedIndexCount, this._nextVertexStart = i.vertexStart + i.reservedVertexCount, l;
        }
        setGeometryAt(e, n) {
            if (e >= this._geometryCount) throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");
            this._validateGeometry(n);
            const r = this.geometry, i = r.getIndex() !== null, s = r.getIndex(), o = n.getIndex(), a = this._geometryInfo[e];
            if (i && o.count > a.reservedIndexCount || n.attributes.position.count > a.reservedVertexCount) throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");
            const l = a.vertexStart, c = a.reservedVertexCount;
            a.vertexCount = n.getAttribute("position").count;
            for(const u in r.attributes){
                const f = n.getAttribute(u), h = r.getAttribute(u);
                C0e(f, h, l);
                const m = f.itemSize;
                for(let v = f.count, _ = c; v < _; v++){
                    const w = l + v;
                    for(let b = 0; b < m; b++)h.setComponent(w, b, 0);
                }
                h.needsUpdate = !0, h.addUpdateRange(l * m, c * m);
            }
            if (i) {
                const u = a.indexStart, f = a.reservedIndexCount;
                a.indexCount = n.getIndex().count;
                for(let h = 0; h < o.count; h++)s.setX(u + h, l + o.getX(h));
                for(let h = o.count, m = f; h < m; h++)s.setX(u + h, l);
                s.needsUpdate = !0, s.addUpdateRange(u, a.reservedIndexCount);
            }
            return a.start = i ? a.indexStart : a.vertexStart, a.count = i ? a.indexCount : a.vertexCount, a.boundingBox = null, n.boundingBox !== null && (a.boundingBox = n.boundingBox.clone()), a.boundingSphere = null, n.boundingSphere !== null && (a.boundingSphere = n.boundingSphere.clone()), this._visibilityChanged = !0, e;
        }
        deleteGeometry(e) {
            const n = this._geometryInfo;
            if (e >= n.length || n[e].active === !1) return this;
            const r = this._instanceInfo;
            for(let i = 0, s = r.length; i < s; i++)r[i].active && r[i].geometryIndex === e && this.deleteInstance(i);
            return n[e].active = !1, this._availableGeometryIds.push(e), this._visibilityChanged = !0, this;
        }
        deleteInstance(e) {
            return this.validateInstanceId(e), this._instanceInfo[e].active = !1, this._availableInstanceIds.push(e), this._visibilityChanged = !0, this;
        }
        optimize() {
            let e = 0, n = 0;
            const r = this._geometryInfo, i = r.map((o, a)=>a).sort((o, a)=>r[o].vertexStart - r[a].vertexStart), s = this.geometry;
            for(let o = 0, a = r.length; o < a; o++){
                const l = i[o], c = r[l];
                if (c.active !== !1) {
                    if (s.index !== null) {
                        if (c.indexStart !== n) {
                            const { indexStart: u, vertexStart: f, reservedIndexCount: h } = c, m = s.index, v = m.array, _ = e - f;
                            for(let w = u; w < u + h; w++)v[w] = v[w] + _;
                            m.array.copyWithin(n, u, u + h), m.addUpdateRange(n, h), c.indexStart = n;
                        }
                        n += c.reservedIndexCount;
                    }
                    if (c.vertexStart !== e) {
                        const { vertexStart: u, reservedVertexCount: f } = c, h = s.attributes;
                        for(const m in h){
                            const v = h[m], { array: _, itemSize: w } = v;
                            _.copyWithin(e * w, u * w, (u + f) * w), v.addUpdateRange(e * w, f * w);
                        }
                        c.vertexStart = e;
                    }
                    e += c.reservedVertexCount, c.start = s.index ? c.indexStart : c.vertexStart, this._nextIndexStart = s.index ? c.indexStart + c.reservedIndexCount : 0, this._nextVertexStart = c.vertexStart + c.reservedVertexCount;
                }
            }
            return this;
        }
        getBoundingBoxAt(e, n) {
            if (e >= this._geometryCount) return null;
            const r = this.geometry, i = this._geometryInfo[e];
            if (i.boundingBox === null) {
                const s = new qo, o = r.index, a = r.attributes.position;
                for(let l = i.start, c = i.start + i.count; l < c; l++){
                    let u = l;
                    o && (u = o.getX(u)), s.expandByPoint(ax.fromBufferAttribute(a, u));
                }
                i.boundingBox = s;
            }
            return n.copy(i.boundingBox), n;
        }
        getBoundingSphereAt(e, n) {
            if (e >= this._geometryCount) return null;
            const r = this.geometry, i = this._geometryInfo[e];
            if (i.boundingSphere === null) {
                const s = new ho;
                this.getBoundingBoxAt(e, K1), K1.getCenter(s.center);
                const o = r.index, a = r.attributes.position;
                let l = 0;
                for(let c = i.start, u = i.start + i.count; c < u; c++){
                    let f = c;
                    o && (f = o.getX(f)), ax.fromBufferAttribute(a, f), l = Math.max(l, s.center.distanceToSquared(ax));
                }
                s.radius = Math.sqrt(l), i.boundingSphere = s;
            }
            return n.copy(i.boundingSphere), n;
        }
        setMatrixAt(e, n) {
            this.validateInstanceId(e);
            const r = this._matricesTexture, i = this._matricesTexture.image.data;
            return n.toArray(i, e * 16), r.needsUpdate = !0, this;
        }
        getMatrixAt(e, n) {
            return this.validateInstanceId(e), n.fromArray(this._matricesTexture.image.data, e * 16);
        }
        setColorAt(e, n) {
            return this.validateInstanceId(e), this._colorsTexture === null && this._initColorsTexture(), n.toArray(this._colorsTexture.image.data, e * 4), this._colorsTexture.needsUpdate = !0, this;
        }
        getColorAt(e, n) {
            return this.validateInstanceId(e), n.fromArray(this._colorsTexture.image.data, e * 4);
        }
        setVisibleAt(e, n) {
            return this.validateInstanceId(e), this._instanceInfo[e].visible === n ? this : (this._instanceInfo[e].visible = n, this._visibilityChanged = !0, this);
        }
        getVisibleAt(e) {
            return this.validateInstanceId(e), this._instanceInfo[e].visible;
        }
        setGeometryIdAt(e, n) {
            return this.validateInstanceId(e), this.validateGeometryId(n), this._instanceInfo[e].geometryIndex = n, this;
        }
        getGeometryIdAt(e) {
            return this.validateInstanceId(e), this._instanceInfo[e].geometryIndex;
        }
        getGeometryRangeAt(e, n = {}) {
            this.validateGeometryId(e);
            const r = this._geometryInfo[e];
            return n.vertexStart = r.vertexStart, n.vertexCount = r.vertexCount, n.reservedVertexCount = r.reservedVertexCount, n.indexStart = r.indexStart, n.indexCount = r.indexCount, n.reservedIndexCount = r.reservedIndexCount, n.start = r.start, n.count = r.count, n;
        }
        setInstanceCount(e) {
            const n = this._availableInstanceIds, r = this._instanceInfo;
            for(n.sort(FA); n[n.length - 1] === r.length;)r.pop(), n.pop();
            if (e < r.length) throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);
            const i = new Int32Array(e), s = new Int32Array(e);
            Cp(this._multiDrawCounts, i), Cp(this._multiDrawStarts, s), this._multiDrawCounts = i, this._multiDrawStarts = s, this._maxInstanceCount = e;
            const o = this._indirectTexture, a = this._matricesTexture, l = this._colorsTexture;
            o.dispose(), this._initIndirectTexture(), Cp(o.image.data, this._indirectTexture.image.data), a.dispose(), this._initMatricesTexture(), Cp(a.image.data, this._matricesTexture.image.data), l && (l.dispose(), this._initColorsTexture(), Cp(l.image.data, this._colorsTexture.image.data));
        }
        setGeometrySize(e, n) {
            const r = [
                ...this._geometryInfo
            ].filter((a)=>a.active);
            if (Math.max(...r.map((a)=>a.vertexStart + a.reservedVertexCount)) > e) throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${n}. Cannot shrink further.`);
            if (this.geometry.index && Math.max(...r.map((l)=>l.indexStart + l.reservedIndexCount)) > n) throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${n}. Cannot shrink further.`);
            const s = this.geometry;
            s.dispose(), this._maxVertexCount = e, this._maxIndexCount = n, this._geometryInitialized && (this._geometryInitialized = !1, this.geometry = new Vn, this._initializeGeometry(s));
            const o = this.geometry;
            s.index && Cp(s.index.array, o.index.array);
            for(const a in s.attributes)Cp(s.attributes[a].array, o.attributes[a].array);
        }
        raycast(e, n) {
            const r = this._instanceInfo, i = this._geometryInfo, s = this.matrixWorld, o = this.geometry;
            io.material = this.material, io.geometry.index = o.index, io.geometry.attributes = o.attributes, io.geometry.boundingBox === null && (io.geometry.boundingBox = new qo), io.geometry.boundingSphere === null && (io.geometry.boundingSphere = new ho);
            for(let a = 0, l = r.length; a < l; a++){
                if (!r[a].visible || !r[a].active) continue;
                const c = r[a].geometryIndex, u = i[c];
                io.geometry.setDrawRange(u.start, u.count), this.getMatrixAt(a, io.matrixWorld).premultiply(s), this.getBoundingBoxAt(c, io.geometry.boundingBox), this.getBoundingSphereAt(c, io.geometry.boundingSphere), io.raycast(e, Y1);
                for(let f = 0, h = Y1.length; f < h; f++){
                    const m = Y1[f];
                    m.object = this, m.batchId = a, n.push(m);
                }
                Y1.length = 0;
            }
            io.material = null, io.geometry.index = null, io.geometry.attributes = {}, io.geometry.setDrawRange(0, 1 / 0);
        }
        copy(e) {
            return super.copy(e), this.geometry = e.geometry.clone(), this.perObjectFrustumCulled = e.perObjectFrustumCulled, this.sortObjects = e.sortObjects, this.boundingBox = e.boundingBox !== null ? e.boundingBox.clone() : null, this.boundingSphere = e.boundingSphere !== null ? e.boundingSphere.clone() : null, this._geometryInfo = e._geometryInfo.map((n)=>({
                    ...n,
                    boundingBox: n.boundingBox !== null ? n.boundingBox.clone() : null,
                    boundingSphere: n.boundingSphere !== null ? n.boundingSphere.clone() : null
                })), this._instanceInfo = e._instanceInfo.map((n)=>({
                    ...n
                })), this._maxInstanceCount = e._maxInstanceCount, this._maxVertexCount = e._maxVertexCount, this._maxIndexCount = e._maxIndexCount, this._geometryInitialized = e._geometryInitialized, this._geometryCount = e._geometryCount, this._multiDrawCounts = e._multiDrawCounts.slice(), this._multiDrawStarts = e._multiDrawStarts.slice(), this._matricesTexture = e._matricesTexture.clone(), this._matricesTexture.image.data = this._matricesTexture.image.data.slice(), this._colorsTexture !== null && (this._colorsTexture = e._colorsTexture.clone(), this._colorsTexture.image.data = this._colorsTexture.image.data.slice()), this;
        }
        dispose() {
            return this.geometry.dispose(), this._matricesTexture.dispose(), this._matricesTexture = null, this._indirectTexture.dispose(), this._indirectTexture = null, this._colorsTexture !== null && (this._colorsTexture.dispose(), this._colorsTexture = null), this;
        }
        onBeforeRender(e, n, r, i, s) {
            if (!this._visibilityChanged && !this.perObjectFrustumCulled && !this.sortObjects) return;
            const o = i.getIndex(), a = o === null ? 1 : o.array.BYTES_PER_ELEMENT, l = this._instanceInfo, c = this._multiDrawStarts, u = this._multiDrawCounts, f = this._geometryInfo, h = this.perObjectFrustumCulled, m = this._indirectTexture, v = m.image.data;
            h && (la.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse).multiply(this.matrixWorld), jA.setFromProjectionMatrix(la, e.coordinateSystem));
            let _ = 0;
            if (this.sortObjects) {
                la.copy(this.matrixWorld).invert(), ax.setFromMatrixPosition(r.matrixWorld).applyMatrix4(la), x8.set(0, 0, -1).transformDirection(r.matrixWorld).transformDirection(la);
                for(let M = 0, E = l.length; M < E; M++)if (l[M].visible && l[M].active) {
                    const T = l[M].geometryIndex;
                    this.getMatrixAt(M, la), this.getBoundingSphereAt(T, Tp).applyMatrix4(la);
                    let P = !1;
                    if (h && (P = !jA.intersectsSphere(Tp)), !P) {
                        const A = f[T], O = T0e.subVectors(Tp.center, ax).dot(x8);
                        BA.push(A.start, A.count, O, M);
                    }
                }
                const w = BA.list, b = this.customSort;
                b === null ? w.sort(s.transparent ? S0e : _0e) : b.call(this, w, r);
                for(let M = 0, E = w.length; M < E; M++){
                    const T = w[M];
                    c[_] = T.start * a, u[_] = T.count, v[_] = T.index, _++;
                }
                BA.reset();
            } else for(let w = 0, b = l.length; w < b; w++)if (l[w].visible && l[w].active) {
                const M = l[w].geometryIndex;
                let E = !1;
                if (h && (this.getMatrixAt(w, la), this.getBoundingSphereAt(M, Tp).applyMatrix4(la), E = !jA.intersectsSphere(Tp)), !E) {
                    const T = f[M];
                    c[_] = T.start * a, u[_] = T.count, v[_] = w, _++;
                }
            }
            m.needsUpdate = !0, this._multiDrawCount = _, this._visibilityChanged = !1;
        }
        onBeforeShadow(e, n, r, i, s, o) {
            this.onBeforeRender(e, null, i, s, o);
        }
    }
    class Xo extends bo {
        constructor(e){
            super(), this.isLineBasicMaterial = !0, this.type = "LineBasicMaterial", this.color = new jt(16777215), this.map = null, this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this.fog = e.fog, this;
        }
    }
    const lT = new ve, cT = new ve, b8 = new gn, lx = new Um, Z1 = new ho, UA = new ve, w8 = new ve;
    class Sh extends ur {
        constructor(e = new Vn, n = new Xo){
            super(), this.isLine = !0, this.type = "Line", this.geometry = e, this.material = n, this.updateMorphTargets();
        }
        copy(e, n) {
            return super.copy(e, n), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
        }
        computeLineDistances() {
            const e = this.geometry;
            if (e.index === null) {
                const n = e.attributes.position, r = [
                    0
                ];
                for(let i = 1, s = n.count; i < s; i++)lT.fromBufferAttribute(n, i - 1), cT.fromBufferAttribute(n, i), r[i] = r[i - 1], r[i] += lT.distanceTo(cT);
                e.setAttribute("lineDistance", new Yt(r, 1));
            } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            return this;
        }
        raycast(e, n) {
            const r = this.geometry, i = this.matrixWorld, s = e.params.Line.threshold, o = r.drawRange;
            if (r.boundingSphere === null && r.computeBoundingSphere(), Z1.copy(r.boundingSphere), Z1.applyMatrix4(i), Z1.radius += s, e.ray.intersectsSphere(Z1) === !1) return;
            b8.copy(i).invert(), lx.copy(e.ray).applyMatrix4(b8);
            const a = s / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = this.isLineSegments ? 2 : 1, u = r.index, h = r.attributes.position;
            if (u !== null) {
                const m = Math.max(0, o.start), v = Math.min(u.count, o.start + o.count);
                for(let _ = m, w = v - 1; _ < w; _ += c){
                    const b = u.getX(_), M = u.getX(_ + 1), E = J1(this, e, lx, l, b, M, _);
                    E && n.push(E);
                }
                if (this.isLineLoop) {
                    const _ = u.getX(v - 1), w = u.getX(m), b = J1(this, e, lx, l, _, w, v - 1);
                    b && n.push(b);
                }
            } else {
                const m = Math.max(0, o.start), v = Math.min(h.count, o.start + o.count);
                for(let _ = m, w = v - 1; _ < w; _ += c){
                    const b = J1(this, e, lx, l, _, _ + 1, _);
                    b && n.push(b);
                }
                if (this.isLineLoop) {
                    const _ = J1(this, e, lx, l, v - 1, m, v - 1);
                    _ && n.push(_);
                }
            }
        }
        updateMorphTargets() {
            const n = this.geometry.morphAttributes, r = Object.keys(n);
            if (r.length > 0) {
                const i = n[r[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let s = 0, o = i.length; s < o; s++){
                        const a = i[s].name || String(s);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = s;
                    }
                }
            }
        }
    }
    function J1(t, e, n, r, i, s, o) {
        const a = t.geometry.attributes.position;
        if (lT.fromBufferAttribute(a, i), cT.fromBufferAttribute(a, s), n.distanceSqToSegment(lT, cT, UA, w8) > r) return;
        UA.applyMatrix4(t.matrixWorld);
        const c = e.ray.origin.distanceTo(UA);
        if (!(c < e.near || c > e.far)) return {
            distance: c,
            point: w8.clone().applyMatrix4(t.matrixWorld),
            index: o,
            face: null,
            faceIndex: null,
            barycoord: null,
            object: t
        };
    }
    const _8 = new ve, S8 = new ve;
    class xu extends Sh {
        constructor(e, n){
            super(e, n), this.isLineSegments = !0, this.type = "LineSegments";
        }
        computeLineDistances() {
            const e = this.geometry;
            if (e.index === null) {
                const n = e.attributes.position, r = [];
                for(let i = 0, s = n.count; i < s; i += 2)_8.fromBufferAttribute(n, i), S8.fromBufferAttribute(n, i + 1), r[i] = i === 0 ? 0 : r[i - 1], r[i + 1] = r[i] + _8.distanceTo(S8);
                e.setAttribute("lineDistance", new Yt(r, 1));
            } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            return this;
        }
    }
    class vq extends Sh {
        constructor(e, n){
            super(e, n), this.isLineLoop = !0, this.type = "LineLoop";
        }
    }
    class Yk extends bo {
        constructor(e){
            super(), this.isPointsMaterial = !0, this.type = "PointsMaterial", this.color = new jt(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.fog = e.fog, this;
        }
    }
    const E8 = new gn, q3 = new Um, Q1 = new ho, eS = new ve;
    class xq extends ur {
        constructor(e = new Vn, n = new Yk){
            super(), this.isPoints = !0, this.type = "Points", this.geometry = e, this.material = n, this.updateMorphTargets();
        }
        copy(e, n) {
            return super.copy(e, n), this.material = Array.isArray(e.material) ? e.material.slice() : e.material, this.geometry = e.geometry, this;
        }
        raycast(e, n) {
            const r = this.geometry, i = this.matrixWorld, s = e.params.Points.threshold, o = r.drawRange;
            if (r.boundingSphere === null && r.computeBoundingSphere(), Q1.copy(r.boundingSphere), Q1.applyMatrix4(i), Q1.radius += s, e.ray.intersectsSphere(Q1) === !1) return;
            E8.copy(i).invert(), q3.copy(e.ray).applyMatrix4(E8);
            const a = s / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = r.index, f = r.attributes.position;
            if (c !== null) {
                const h = Math.max(0, o.start), m = Math.min(c.count, o.start + o.count);
                for(let v = h, _ = m; v < _; v++){
                    const w = c.getX(v);
                    eS.fromBufferAttribute(f, w), M8(eS, w, l, i, e, n, this);
                }
            } else {
                const h = Math.max(0, o.start), m = Math.min(f.count, o.start + o.count);
                for(let v = h, _ = m; v < _; v++)eS.fromBufferAttribute(f, v), M8(eS, v, l, i, e, n, this);
            }
        }
        updateMorphTargets() {
            const n = this.geometry.morphAttributes, r = Object.keys(n);
            if (r.length > 0) {
                const i = n[r[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let s = 0, o = i.length; s < o; s++){
                        const a = i[s].name || String(s);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = s;
                    }
                }
            }
        }
    }
    function M8(t, e, n, r, i, s, o) {
        const a = q3.distanceSqToPoint(t);
        if (a < n) {
            const l = new ve;
            q3.closestPointToPoint(t, l), l.applyMatrix4(r);
            const c = i.ray.origin.distanceTo(l);
            if (c < i.near || c > i.far) return;
            s.push({
                distance: c,
                distanceToRay: Math.sqrt(a),
                point: l,
                index: e,
                face: null,
                faceIndex: null,
                barycoord: null,
                object: o
            });
        }
    }
    class bq extends bi {
        constructor(e, n, r, i, s, o, a, l, c){
            super(e, n, r, i, s, o, a, l, c), this.isVideoTexture = !0, this.minFilter = o !== void 0 ? o : ds, this.magFilter = s !== void 0 ? s : ds, this.generateMipmaps = !1;
            const u = this;
            function f() {
                u.needsUpdate = !0, e.requestVideoFrameCallback(f);
            }
            "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(f);
        }
        clone() {
            return new this.constructor(this.image).copy(this);
        }
        update() {
            const e = this.image;
            "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
        }
    }
    class R0e extends bq {
        constructor(e, n, r, i, s, o, a, l){
            super({}, e, n, r, i, s, o, a, l), this.isVideoFrameTexture = !0;
        }
        update() {}
        clone() {
            return new this.constructor().copy(this);
        }
        setFrame(e) {
            this.image = e, this.needsUpdate = !0;
        }
    }
    class I0e extends bi {
        constructor(e, n){
            super({
                width: e,
                height: n
            }), this.isFramebufferTexture = !0, this.magFilter = qs, this.minFilter = qs, this.generateMipmaps = !1, this.needsUpdate = !0;
        }
    }
    class R2 extends bi {
        constructor(e, n, r, i, s, o, a, l, c, u, f, h){
            super(null, o, a, l, c, u, i, s, f, h), this.isCompressedTexture = !0, this.image = {
                width: n,
                height: r
            }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
        }
    }
    class A0e extends R2 {
        constructor(e, n, r, i, s, o){
            super(e, n, r, s, o), this.isCompressedArrayTexture = !0, this.image.depth = i, this.wrapR = Tl, this.layerUpdates = new Set;
        }
        addLayerUpdate(e) {
            this.layerUpdates.add(e);
        }
        clearLayerUpdates() {
            this.layerUpdates.clear();
        }
    }
    class N0e extends R2 {
        constructor(e, n, r){
            super(void 0, e[0].width, e[0].height, n, r, Fd), this.isCompressedCubeTexture = !0, this.isCubeTexture = !0, this.image = e;
        }
    }
    class P0e extends bi {
        constructor(e, n, r, i, s, o, a, l, c){
            super(e, n, r, i, s, o, a, l, c), this.isCanvasTexture = !0, this.needsUpdate = !0;
        }
    }
    class Zk extends bi {
        constructor(e, n, r, i, s, o, a, l, c, u = dm){
            if (u !== dm && u !== Am) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
            r === void 0 && u === dm && (r = jd), r === void 0 && u === Am && (r = Im), super(null, i, s, o, a, l, u, r, c), this.isDepthTexture = !0, this.image = {
                width: e,
                height: n
            }, this.magFilter = a !== void 0 ? a : qs, this.minFilter = l !== void 0 ? l : qs, this.flipY = !1, this.generateMipmaps = !1, this.compareFunction = null;
        }
        copy(e) {
            return super.copy(e), this.compareFunction = e.compareFunction, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return this.compareFunction !== null && (n.compareFunction = this.compareFunction), n;
        }
    }
    class Cc {
        constructor(){
            this.type = "Curve", this.arcLengthDivisions = 200;
        }
        getPoint() {
            return console.warn("THREE.Curve: .getPoint() not implemented."), null;
        }
        getPointAt(e, n) {
            const r = this.getUtoTmapping(e);
            return this.getPoint(r, n);
        }
        getPoints(e = 5) {
            const n = [];
            for(let r = 0; r <= e; r++)n.push(this.getPoint(r / e));
            return n;
        }
        getSpacedPoints(e = 5) {
            const n = [];
            for(let r = 0; r <= e; r++)n.push(this.getPointAt(r / e));
            return n;
        }
        getLength() {
            const e = this.getLengths();
            return e[e.length - 1];
        }
        getLengths(e = this.arcLengthDivisions) {
            if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
            this.needsUpdate = !1;
            const n = [];
            let r, i = this.getPoint(0), s = 0;
            n.push(0);
            for(let o = 1; o <= e; o++)r = this.getPoint(o / e), s += r.distanceTo(i), n.push(s), i = r;
            return this.cacheArcLengths = n, n;
        }
        updateArcLengths() {
            this.needsUpdate = !0, this.getLengths();
        }
        getUtoTmapping(e, n) {
            const r = this.getLengths();
            let i = 0;
            const s = r.length;
            let o;
            n ? o = n : o = e * r[s - 1];
            let a = 0, l = s - 1, c;
            for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = r[i] - o, c < 0) a = i + 1;
            else if (c > 0) l = i - 1;
            else {
                l = i;
                break;
            }
            if (i = l, r[i] === o) return i / (s - 1);
            const u = r[i], h = r[i + 1] - u, m = (o - u) / h;
            return (i + m) / (s - 1);
        }
        getTangent(e, n) {
            let i = e - 1e-4, s = e + 1e-4;
            i < 0 && (i = 0), s > 1 && (s = 1);
            const o = this.getPoint(i), a = this.getPoint(s), l = n || (o.isVector2 ? new ot : new ve);
            return l.copy(a).sub(o).normalize(), l;
        }
        getTangentAt(e, n) {
            const r = this.getUtoTmapping(e);
            return this.getTangent(r, n);
        }
        computeFrenetFrames(e, n) {
            const r = new ve, i = [], s = [], o = [], a = new ve, l = new gn;
            for(let m = 0; m <= e; m++){
                const v = m / e;
                i[m] = this.getTangentAt(v, new ve);
            }
            s[0] = new ve, o[0] = new ve;
            let c = Number.MAX_VALUE;
            const u = Math.abs(i[0].x), f = Math.abs(i[0].y), h = Math.abs(i[0].z);
            u <= c && (c = u, r.set(1, 0, 0)), f <= c && (c = f, r.set(0, 1, 0)), h <= c && r.set(0, 0, 1), a.crossVectors(i[0], r).normalize(), s[0].crossVectors(i[0], a), o[0].crossVectors(i[0], s[0]);
            for(let m = 1; m <= e; m++){
                if (s[m] = s[m - 1].clone(), o[m] = o[m - 1].clone(), a.crossVectors(i[m - 1], i[m]), a.length() > Number.EPSILON) {
                    a.normalize();
                    const v = Math.acos(Cn(i[m - 1].dot(i[m]), -1, 1));
                    s[m].applyMatrix4(l.makeRotationAxis(a, v));
                }
                o[m].crossVectors(i[m], s[m]);
            }
            if (n === !0) {
                let m = Math.acos(Cn(s[0].dot(s[e]), -1, 1));
                m /= e, i[0].dot(a.crossVectors(s[0], s[e])) > 0 && (m = -m);
                for(let v = 1; v <= e; v++)s[v].applyMatrix4(l.makeRotationAxis(i[v], m * v)), o[v].crossVectors(i[v], s[v]);
            }
            return {
                tangents: i,
                normals: s,
                binormals: o
            };
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions, this;
        }
        toJSON() {
            const e = {
                metadata: {
                    version: 4.6,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
        }
        fromJSON(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions, this;
        }
    }
    class I2 extends Cc {
        constructor(e = 0, n = 0, r = 1, i = 1, s = 0, o = Math.PI * 2, a = !1, l = 0){
            super(), this.isEllipseCurve = !0, this.type = "EllipseCurve", this.aX = e, this.aY = n, this.xRadius = r, this.yRadius = i, this.aStartAngle = s, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
        }
        getPoint(e, n = new ot) {
            const r = n, i = Math.PI * 2;
            let s = this.aEndAngle - this.aStartAngle;
            const o = Math.abs(s) < Number.EPSILON;
            for(; s < 0;)s += i;
            for(; s > i;)s -= i;
            s < Number.EPSILON && (o ? s = 0 : s = i), this.aClockwise === !0 && !o && (s === i ? s = -i : s = s - i);
            const a = this.aStartAngle + e * s;
            let l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
            if (this.aRotation !== 0) {
                const u = Math.cos(this.aRotation), f = Math.sin(this.aRotation), h = l - this.aX, m = c - this.aY;
                l = h * u - m * f + this.aX, c = h * f + m * u + this.aY;
            }
            return r.set(l, c);
        }
        copy(e) {
            return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
        }
    }
    class wq extends I2 {
        constructor(e, n, r, i, s, o){
            super(e, n, r, r, i, s, o), this.isArcCurve = !0, this.type = "ArcCurve";
        }
    }
    function Jk() {
        let t = 0, e = 0, n = 0, r = 0;
        function i(s, o, a, l) {
            t = s, e = a, n = -3 * s + 3 * o - 2 * a - l, r = 2 * s - 2 * o + a + l;
        }
        return {
            initCatmullRom: function(s, o, a, l, c) {
                i(o, a, c * (a - s), c * (l - o));
            },
            initNonuniformCatmullRom: function(s, o, a, l, c, u, f) {
                let h = (o - s) / c - (a - s) / (c + u) + (a - o) / u, m = (a - o) / u - (l - o) / (u + f) + (l - a) / f;
                h *= u, m *= u, i(o, a, h, m);
            },
            calc: function(s) {
                const o = s * s, a = o * s;
                return t + e * s + n * o + r * a;
            }
        };
    }
    const tS = new ve, zA = new Jk, VA = new Jk, WA = new Jk;
    class _q extends Cc {
        constructor(e = [], n = !1, r = "centripetal", i = .5){
            super(), this.isCatmullRomCurve3 = !0, this.type = "CatmullRomCurve3", this.points = e, this.closed = n, this.curveType = r, this.tension = i;
        }
        getPoint(e, n = new ve) {
            const r = n, i = this.points, s = i.length, o = (s - (this.closed ? 0 : 1)) * e;
            let a = Math.floor(o), l = o - a;
            this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / s) + 1) * s : l === 0 && a === s - 1 && (a = s - 2, l = 1);
            let c, u;
            this.closed || a > 0 ? c = i[(a - 1) % s] : (tS.subVectors(i[0], i[1]).add(i[0]), c = tS);
            const f = i[a % s], h = i[(a + 1) % s];
            if (this.closed || a + 2 < s ? u = i[(a + 2) % s] : (tS.subVectors(i[s - 1], i[s - 2]).add(i[s - 1]), u = tS), this.curveType === "centripetal" || this.curveType === "chordal") {
                const m = this.curveType === "chordal" ? .5 : .25;
                let v = Math.pow(c.distanceToSquared(f), m), _ = Math.pow(f.distanceToSquared(h), m), w = Math.pow(h.distanceToSquared(u), m);
                _ < 1e-4 && (_ = 1), v < 1e-4 && (v = _), w < 1e-4 && (w = _), zA.initNonuniformCatmullRom(c.x, f.x, h.x, u.x, v, _, w), VA.initNonuniformCatmullRom(c.y, f.y, h.y, u.y, v, _, w), WA.initNonuniformCatmullRom(c.z, f.z, h.z, u.z, v, _, w);
            } else this.curveType === "catmullrom" && (zA.initCatmullRom(c.x, f.x, h.x, u.x, this.tension), VA.initCatmullRom(c.y, f.y, h.y, u.y, this.tension), WA.initCatmullRom(c.z, f.z, h.z, u.z, this.tension));
            return r.set(zA.calc(l), VA.calc(l), WA.calc(l)), r;
        }
        copy(e) {
            super.copy(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(i.clone());
            }
            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
        }
        toJSON() {
            const e = super.toJSON();
            e.points = [];
            for(let n = 0, r = this.points.length; n < r; n++){
                const i = this.points[n];
                e.points.push(i.toArray());
            }
            return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(new ve().fromArray(i));
            }
            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
        }
    }
    function T8(t, e, n, r, i) {
        const s = (r - e) * .5, o = (i - n) * .5, a = t * t, l = t * a;
        return (2 * n - 2 * r + s + o) * l + (-3 * n + 3 * r - 2 * s - o) * a + s * t + n;
    }
    function k0e(t, e) {
        const n = 1 - t;
        return n * n * e;
    }
    function O0e(t, e) {
        return 2 * (1 - t) * t * e;
    }
    function D0e(t, e) {
        return t * t * e;
    }
    function sb(t, e, n, r) {
        return k0e(t, e) + O0e(t, n) + D0e(t, r);
    }
    function L0e(t, e) {
        const n = 1 - t;
        return n * n * n * e;
    }
    function F0e(t, e) {
        const n = 1 - t;
        return 3 * n * n * t * e;
    }
    function j0e(t, e) {
        return 3 * (1 - t) * t * t * e;
    }
    function B0e(t, e) {
        return t * t * t * e;
    }
    function ob(t, e, n, r, i) {
        return L0e(t, e) + F0e(t, n) + j0e(t, r) + B0e(t, i);
    }
    class Qk extends Cc {
        constructor(e = new ot, n = new ot, r = new ot, i = new ot){
            super(), this.isCubicBezierCurve = !0, this.type = "CubicBezierCurve", this.v0 = e, this.v1 = n, this.v2 = r, this.v3 = i;
        }
        getPoint(e, n = new ot) {
            const r = n, i = this.v0, s = this.v1, o = this.v2, a = this.v3;
            return r.set(ob(e, i.x, s.x, o.x, a.x), ob(e, i.y, s.y, o.y, a.y)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
        }
    }
    class Sq extends Cc {
        constructor(e = new ve, n = new ve, r = new ve, i = new ve){
            super(), this.isCubicBezierCurve3 = !0, this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = n, this.v2 = r, this.v3 = i;
        }
        getPoint(e, n = new ve) {
            const r = n, i = this.v0, s = this.v1, o = this.v2, a = this.v3;
            return r.set(ob(e, i.x, s.x, o.x, a.x), ob(e, i.y, s.y, o.y, a.y), ob(e, i.z, s.z, o.z, a.z)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
        }
    }
    class eO extends Cc {
        constructor(e = new ot, n = new ot){
            super(), this.isLineCurve = !0, this.type = "LineCurve", this.v1 = e, this.v2 = n;
        }
        getPoint(e, n = new ot) {
            const r = n;
            return e === 1 ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;
        }
        getPointAt(e, n) {
            return this.getPoint(e, n);
        }
        getTangent(e, n = new ot) {
            return n.subVectors(this.v2, this.v1).normalize();
        }
        getTangentAt(e, n) {
            return this.getTangent(e, n);
        }
        copy(e) {
            return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class Eq extends Cc {
        constructor(e = new ve, n = new ve){
            super(), this.isLineCurve3 = !0, this.type = "LineCurve3", this.v1 = e, this.v2 = n;
        }
        getPoint(e, n = new ve) {
            const r = n;
            return e === 1 ? r.copy(this.v2) : (r.copy(this.v2).sub(this.v1), r.multiplyScalar(e).add(this.v1)), r;
        }
        getPointAt(e, n) {
            return this.getPoint(e, n);
        }
        getTangent(e, n = new ve) {
            return n.subVectors(this.v2, this.v1).normalize();
        }
        getTangentAt(e, n) {
            return this.getTangent(e, n);
        }
        copy(e) {
            return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class tO extends Cc {
        constructor(e = new ot, n = new ot, r = new ot){
            super(), this.isQuadraticBezierCurve = !0, this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = n, this.v2 = r;
        }
        getPoint(e, n = new ot) {
            const r = n, i = this.v0, s = this.v1, o = this.v2;
            return r.set(sb(e, i.x, s.x, o.x), sb(e, i.y, s.y, o.y)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class nO extends Cc {
        constructor(e = new ve, n = new ve, r = new ve){
            super(), this.isQuadraticBezierCurve3 = !0, this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = n, this.v2 = r;
        }
        getPoint(e, n = new ve) {
            const r = n, i = this.v0, s = this.v1, o = this.v2;
            return r.set(sb(e, i.x, s.x, o.x), sb(e, i.y, s.y, o.y), sb(e, i.z, s.z, o.z)), r;
        }
        copy(e) {
            return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
        }
    }
    class rO extends Cc {
        constructor(e = []){
            super(), this.isSplineCurve = !0, this.type = "SplineCurve", this.points = e;
        }
        getPoint(e, n = new ot) {
            const r = n, i = this.points, s = (i.length - 1) * e, o = Math.floor(s), a = s - o, l = i[o === 0 ? o : o - 1], c = i[o], u = i[o > i.length - 2 ? i.length - 1 : o + 1], f = i[o > i.length - 3 ? i.length - 1 : o + 2];
            return r.set(T8(a, l.x, c.x, u.x, f.x), T8(a, l.y, c.y, u.y, f.y)), r;
        }
        copy(e) {
            super.copy(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(i.clone());
            }
            return this;
        }
        toJSON() {
            const e = super.toJSON();
            e.points = [];
            for(let n = 0, r = this.points.length; n < r; n++){
                const i = this.points[n];
                e.points.push(i.toArray());
            }
            return e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.points = [];
            for(let n = 0, r = e.points.length; n < r; n++){
                const i = e.points[n];
                this.points.push(new ot().fromArray(i));
            }
            return this;
        }
    }
    var uT = Object.freeze({
        __proto__: null,
        ArcCurve: wq,
        CatmullRomCurve3: _q,
        CubicBezierCurve: Qk,
        CubicBezierCurve3: Sq,
        EllipseCurve: I2,
        LineCurve: eO,
        LineCurve3: Eq,
        QuadraticBezierCurve: tO,
        QuadraticBezierCurve3: nO,
        SplineCurve: rO
    });
    class Mq extends Cc {
        constructor(){
            super(), this.type = "CurvePath", this.curves = [], this.autoClose = !1;
        }
        add(e) {
            this.curves.push(e);
        }
        closePath() {
            const e = this.curves[0].getPoint(0), n = this.curves[this.curves.length - 1].getPoint(1);
            if (!e.equals(n)) {
                const r = e.isVector2 === !0 ? "LineCurve" : "LineCurve3";
                this.curves.push(new uT[r](n, e));
            }
            return this;
        }
        getPoint(e, n) {
            const r = e * this.getLength(), i = this.getCurveLengths();
            let s = 0;
            for(; s < i.length;){
                if (i[s] >= r) {
                    const o = i[s] - r, a = this.curves[s], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                    return a.getPointAt(c, n);
                }
                s++;
            }
            return null;
        }
        getLength() {
            const e = this.getCurveLengths();
            return e[e.length - 1];
        }
        updateArcLengths() {
            this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
        }
        getCurveLengths() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
            const e = [];
            let n = 0;
            for(let r = 0, i = this.curves.length; r < i; r++)n += this.curves[r].getLength(), e.push(n);
            return this.cacheLengths = e, e;
        }
        getSpacedPoints(e = 40) {
            const n = [];
            for(let r = 0; r <= e; r++)n.push(this.getPoint(r / e));
            return this.autoClose && n.push(n[0]), n;
        }
        getPoints(e = 12) {
            const n = [];
            let r;
            for(let i = 0, s = this.curves; i < s.length; i++){
                const o = s[i], a = o.isEllipseCurve ? e * 2 : o.isLineCurve || o.isLineCurve3 ? 1 : o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
                for(let c = 0; c < l.length; c++){
                    const u = l[c];
                    r && r.equals(u) || (n.push(u), r = u);
                }
            }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n;
        }
        copy(e) {
            super.copy(e), this.curves = [];
            for(let n = 0, r = e.curves.length; n < r; n++){
                const i = e.curves[n];
                this.curves.push(i.clone());
            }
            return this.autoClose = e.autoClose, this;
        }
        toJSON() {
            const e = super.toJSON();
            e.autoClose = this.autoClose, e.curves = [];
            for(let n = 0, r = this.curves.length; n < r; n++){
                const i = this.curves[n];
                e.curves.push(i.toJSON());
            }
            return e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
            for(let n = 0, r = e.curves.length; n < r; n++){
                const i = e.curves[n];
                this.curves.push(new uT[i.type]().fromJSON(i));
            }
            return this;
        }
    }
    class nw extends Mq {
        constructor(e){
            super(), this.type = "Path", this.currentPoint = new ot, e && this.setFromPoints(e);
        }
        setFromPoints(e) {
            this.moveTo(e[0].x, e[0].y);
            for(let n = 1, r = e.length; n < r; n++)this.lineTo(e[n].x, e[n].y);
            return this;
        }
        moveTo(e, n) {
            return this.currentPoint.set(e, n), this;
        }
        lineTo(e, n) {
            const r = new eO(this.currentPoint.clone(), new ot(e, n));
            return this.curves.push(r), this.currentPoint.set(e, n), this;
        }
        quadraticCurveTo(e, n, r, i) {
            const s = new tO(this.currentPoint.clone(), new ot(e, n), new ot(r, i));
            return this.curves.push(s), this.currentPoint.set(r, i), this;
        }
        bezierCurveTo(e, n, r, i, s, o) {
            const a = new Qk(this.currentPoint.clone(), new ot(e, n), new ot(r, i), new ot(s, o));
            return this.curves.push(a), this.currentPoint.set(s, o), this;
        }
        splineThru(e) {
            const n = [
                this.currentPoint.clone()
            ].concat(e), r = new rO(n);
            return this.curves.push(r), this.currentPoint.copy(e[e.length - 1]), this;
        }
        arc(e, n, r, i, s, o) {
            const a = this.currentPoint.x, l = this.currentPoint.y;
            return this.absarc(e + a, n + l, r, i, s, o), this;
        }
        absarc(e, n, r, i, s, o) {
            return this.absellipse(e, n, r, r, i, s, o), this;
        }
        ellipse(e, n, r, i, s, o, a, l) {
            const c = this.currentPoint.x, u = this.currentPoint.y;
            return this.absellipse(e + c, n + u, r, i, s, o, a, l), this;
        }
        absellipse(e, n, r, i, s, o, a, l) {
            const c = new I2(e, n, r, i, s, o, a, l);
            if (this.curves.length > 0) {
                const f = c.getPoint(0);
                f.equals(this.currentPoint) || this.lineTo(f.x, f.y);
            }
            this.curves.push(c);
            const u = c.getPoint(1);
            return this.currentPoint.copy(u), this;
        }
        copy(e) {
            return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.currentPoint = this.currentPoint.toArray(), e;
        }
        fromJSON(e) {
            return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
        }
    }
    class Hw extends Vn {
        constructor(e = [
            new ot(0, -.5),
            new ot(.5, 0),
            new ot(0, .5)
        ], n = 12, r = 0, i = Math.PI * 2){
            super(), this.type = "LatheGeometry", this.parameters = {
                points: e,
                segments: n,
                phiStart: r,
                phiLength: i
            }, n = Math.floor(n), i = Cn(i, 0, Math.PI * 2);
            const s = [], o = [], a = [], l = [], c = [], u = 1 / n, f = new ve, h = new ot, m = new ve, v = new ve, _ = new ve;
            let w = 0, b = 0;
            for(let M = 0; M <= e.length - 1; M++)switch(M){
                case 0:
                    w = e[M + 1].x - e[M].x, b = e[M + 1].y - e[M].y, m.x = b * 1, m.y = -w, m.z = b * 0, _.copy(m), m.normalize(), l.push(m.x, m.y, m.z);
                    break;
                case e.length - 1:
                    l.push(_.x, _.y, _.z);
                    break;
                default:
                    w = e[M + 1].x - e[M].x, b = e[M + 1].y - e[M].y, m.x = b * 1, m.y = -w, m.z = b * 0, v.copy(m), m.x += _.x, m.y += _.y, m.z += _.z, m.normalize(), l.push(m.x, m.y, m.z), _.copy(v);
            }
            for(let M = 0; M <= n; M++){
                const E = r + M * u * i, T = Math.sin(E), P = Math.cos(E);
                for(let A = 0; A <= e.length - 1; A++){
                    f.x = e[A].x * T, f.y = e[A].y, f.z = e[A].x * P, o.push(f.x, f.y, f.z), h.x = M / n, h.y = A / (e.length - 1), a.push(h.x, h.y);
                    const O = l[3 * A + 0] * T, D = l[3 * A + 1], R = l[3 * A + 0] * P;
                    c.push(O, D, R);
                }
            }
            for(let M = 0; M < n; M++)for(let E = 0; E < e.length - 1; E++){
                const T = E + M * e.length, P = T, A = T + e.length, O = T + e.length + 1, D = T + 1;
                s.push(P, A, D), s.push(O, D, A);
            }
            this.setIndex(s), this.setAttribute("position", new Yt(o, 3)), this.setAttribute("uv", new Yt(a, 2)), this.setAttribute("normal", new Yt(c, 3));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new Hw(e.points, e.segments, e.phiStart, e.phiLength);
        }
    }
    class A2 extends Hw {
        constructor(e = 1, n = 1, r = 4, i = 8){
            const s = new nw;
            s.absarc(0, -n / 2, e, Math.PI * 1.5, 0), s.absarc(0, n / 2, e, 0, Math.PI * .5), super(s.getPoints(r), i), this.type = "CapsuleGeometry", this.parameters = {
                radius: e,
                length: n,
                capSegments: r,
                radialSegments: i
            };
        }
        static fromJSON(e) {
            return new A2(e.radius, e.length, e.capSegments, e.radialSegments);
        }
    }
    class N2 extends Vn {
        constructor(e = 1, n = 32, r = 0, i = Math.PI * 2){
            super(), this.type = "CircleGeometry", this.parameters = {
                radius: e,
                segments: n,
                thetaStart: r,
                thetaLength: i
            }, n = Math.max(3, n);
            const s = [], o = [], a = [], l = [], c = new ve, u = new ot;
            o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
            for(let f = 0, h = 3; f <= n; f++, h += 3){
                const m = r + f / n * i;
                c.x = e * Math.cos(m), c.y = e * Math.sin(m), o.push(c.x, c.y, c.z), a.push(0, 0, 1), u.x = (o[h] / e + 1) / 2, u.y = (o[h + 1] / e + 1) / 2, l.push(u.x, u.y);
            }
            for(let f = 1; f <= n; f++)s.push(f, f + 1, 0);
            this.setIndex(s), this.setAttribute("position", new Yt(o, 3)), this.setAttribute("normal", new Yt(a, 3)), this.setAttribute("uv", new Yt(l, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new N2(e.radius, e.segments, e.thetaStart, e.thetaLength);
        }
    }
    class Wy extends Vn {
        constructor(e = 1, n = 1, r = 1, i = 32, s = 1, o = !1, a = 0, l = Math.PI * 2){
            super(), this.type = "CylinderGeometry", this.parameters = {
                radiusTop: e,
                radiusBottom: n,
                height: r,
                radialSegments: i,
                heightSegments: s,
                openEnded: o,
                thetaStart: a,
                thetaLength: l
            };
            const c = this;
            i = Math.floor(i), s = Math.floor(s);
            const u = [], f = [], h = [], m = [];
            let v = 0;
            const _ = [], w = r / 2;
            let b = 0;
            M(), o === !1 && (e > 0 && E(!0), n > 0 && E(!1)), this.setIndex(u), this.setAttribute("position", new Yt(f, 3)), this.setAttribute("normal", new Yt(h, 3)), this.setAttribute("uv", new Yt(m, 2));
            function M() {
                const T = new ve, P = new ve;
                let A = 0;
                const O = (n - e) / r;
                for(let D = 0; D <= s; D++){
                    const R = [], N = D / s, k = N * (n - e) + e;
                    for(let U = 0; U <= i; U++){
                        const B = U / i, j = B * l + a, K = Math.sin(j), q = Math.cos(j);
                        P.x = k * K, P.y = -N * r + w, P.z = k * q, f.push(P.x, P.y, P.z), T.set(K, O, q).normalize(), h.push(T.x, T.y, T.z), m.push(B, 1 - N), R.push(v++);
                    }
                    _.push(R);
                }
                for(let D = 0; D < i; D++)for(let R = 0; R < s; R++){
                    const N = _[R][D], k = _[R + 1][D], U = _[R + 1][D + 1], B = _[R][D + 1];
                    (e > 0 || R !== 0) && (u.push(N, k, B), A += 3), (n > 0 || R !== s - 1) && (u.push(k, U, B), A += 3);
                }
                c.addGroup(b, A, 0), b += A;
            }
            function E(T) {
                const P = v, A = new ot, O = new ve;
                let D = 0;
                const R = T === !0 ? e : n, N = T === !0 ? 1 : -1;
                for(let U = 1; U <= i; U++)f.push(0, w * N, 0), h.push(0, N, 0), m.push(.5, .5), v++;
                const k = v;
                for(let U = 0; U <= i; U++){
                    const j = U / i * l + a, K = Math.cos(j), q = Math.sin(j);
                    O.x = R * q, O.y = w * N, O.z = R * K, f.push(O.x, O.y, O.z), h.push(0, N, 0), A.x = K * .5 + .5, A.y = q * .5 * N + .5, m.push(A.x, A.y), v++;
                }
                for(let U = 0; U < i; U++){
                    const B = P + U, j = k + U;
                    T === !0 ? u.push(j, j + 1, B) : u.push(j + 1, j, B), D += 3;
                }
                c.addGroup(b, D, T === !0 ? 1 : 2), b += D;
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new Wy(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
        }
    }
    class P2 extends Wy {
        constructor(e = 1, n = 1, r = 32, i = 1, s = !1, o = 0, a = Math.PI * 2){
            super(0, e, n, r, i, s, o, a), this.type = "ConeGeometry", this.parameters = {
                radius: e,
                height: n,
                radialSegments: r,
                heightSegments: i,
                openEnded: s,
                thetaStart: o,
                thetaLength: a
            };
        }
        static fromJSON(e) {
            return new P2(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
        }
    }
    class Ih extends Vn {
        constructor(e = [], n = [], r = 1, i = 0){
            super(), this.type = "PolyhedronGeometry", this.parameters = {
                vertices: e,
                indices: n,
                radius: r,
                detail: i
            };
            const s = [], o = [];
            a(i), c(r), u(), this.setAttribute("position", new Yt(s, 3)), this.setAttribute("normal", new Yt(s.slice(), 3)), this.setAttribute("uv", new Yt(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
            function a(M) {
                const E = new ve, T = new ve, P = new ve;
                for(let A = 0; A < n.length; A += 3)m(n[A + 0], E), m(n[A + 1], T), m(n[A + 2], P), l(E, T, P, M);
            }
            function l(M, E, T, P) {
                const A = P + 1, O = [];
                for(let D = 0; D <= A; D++){
                    O[D] = [];
                    const R = M.clone().lerp(T, D / A), N = E.clone().lerp(T, D / A), k = A - D;
                    for(let U = 0; U <= k; U++)U === 0 && D === A ? O[D][U] = R : O[D][U] = R.clone().lerp(N, U / k);
                }
                for(let D = 0; D < A; D++)for(let R = 0; R < 2 * (A - D) - 1; R++){
                    const N = Math.floor(R / 2);
                    R % 2 === 0 ? (h(O[D][N + 1]), h(O[D + 1][N]), h(O[D][N])) : (h(O[D][N + 1]), h(O[D + 1][N + 1]), h(O[D + 1][N]));
                }
            }
            function c(M) {
                const E = new ve;
                for(let T = 0; T < s.length; T += 3)E.x = s[T + 0], E.y = s[T + 1], E.z = s[T + 2], E.normalize().multiplyScalar(M), s[T + 0] = E.x, s[T + 1] = E.y, s[T + 2] = E.z;
            }
            function u() {
                const M = new ve;
                for(let E = 0; E < s.length; E += 3){
                    M.x = s[E + 0], M.y = s[E + 1], M.z = s[E + 2];
                    const T = w(M) / 2 / Math.PI + .5, P = b(M) / Math.PI + .5;
                    o.push(T, 1 - P);
                }
                v(), f();
            }
            function f() {
                for(let M = 0; M < o.length; M += 6){
                    const E = o[M + 0], T = o[M + 2], P = o[M + 4], A = Math.max(E, T, P), O = Math.min(E, T, P);
                    A > .9 && O < .1 && (E < .2 && (o[M + 0] += 1), T < .2 && (o[M + 2] += 1), P < .2 && (o[M + 4] += 1));
                }
            }
            function h(M) {
                s.push(M.x, M.y, M.z);
            }
            function m(M, E) {
                const T = M * 3;
                E.x = e[T + 0], E.y = e[T + 1], E.z = e[T + 2];
            }
            function v() {
                const M = new ve, E = new ve, T = new ve, P = new ve, A = new ot, O = new ot, D = new ot;
                for(let R = 0, N = 0; R < s.length; R += 9, N += 6){
                    M.set(s[R + 0], s[R + 1], s[R + 2]), E.set(s[R + 3], s[R + 4], s[R + 5]), T.set(s[R + 6], s[R + 7], s[R + 8]), A.set(o[N + 0], o[N + 1]), O.set(o[N + 2], o[N + 3]), D.set(o[N + 4], o[N + 5]), P.copy(M).add(E).add(T).divideScalar(3);
                    const k = w(P);
                    _(A, N + 0, M, k), _(O, N + 2, E, k), _(D, N + 4, T, k);
                }
            }
            function _(M, E, T, P) {
                P < 0 && M.x === 1 && (o[E] = M.x - 1), T.x === 0 && T.z === 0 && (o[E] = P / 2 / Math.PI + .5);
            }
            function w(M) {
                return Math.atan2(M.z, -M.x);
            }
            function b(M) {
                return Math.atan2(-M.y, Math.sqrt(M.x * M.x + M.z * M.z));
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new Ih(e.vertices, e.indices, e.radius, e.details);
        }
    }
    class k2 extends Ih {
        constructor(e = 1, n = 0){
            const r = (1 + Math.sqrt(5)) / 2, i = 1 / r, s = [
                -1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                1,
                1,
                1,
                0,
                -i,
                -r,
                0,
                -i,
                r,
                0,
                i,
                -r,
                0,
                i,
                r,
                -i,
                -r,
                0,
                -i,
                r,
                0,
                i,
                -r,
                0,
                i,
                r,
                0,
                -r,
                0,
                -i,
                r,
                0,
                -i,
                -r,
                0,
                i,
                r,
                0,
                i
            ], o = [
                3,
                11,
                7,
                3,
                7,
                15,
                3,
                15,
                13,
                7,
                19,
                17,
                7,
                17,
                6,
                7,
                6,
                15,
                17,
                4,
                8,
                17,
                8,
                10,
                17,
                10,
                6,
                8,
                0,
                16,
                8,
                16,
                2,
                8,
                2,
                10,
                0,
                12,
                1,
                0,
                1,
                18,
                0,
                18,
                16,
                6,
                10,
                2,
                6,
                2,
                13,
                6,
                13,
                15,
                2,
                16,
                18,
                2,
                18,
                3,
                2,
                3,
                13,
                18,
                1,
                9,
                18,
                9,
                11,
                18,
                11,
                3,
                4,
                14,
                12,
                4,
                12,
                0,
                4,
                0,
                8,
                11,
                9,
                5,
                11,
                5,
                19,
                11,
                19,
                7,
                19,
                5,
                14,
                19,
                14,
                4,
                19,
                4,
                17,
                1,
                12,
                14,
                1,
                14,
                5,
                1,
                5,
                9
            ];
            super(s, o, e, n), this.type = "DodecahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new k2(e.radius, e.detail);
        }
    }
    const nS = new ve, rS = new ve, qA = new ve, iS = new ga;
    class Tq extends Vn {
        constructor(e = null, n = 1){
            if (super(), this.type = "EdgesGeometry", this.parameters = {
                geometry: e,
                thresholdAngle: n
            }, e !== null) {
                const i = Math.pow(10, 4), s = Math.cos(fm * n), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                    0,
                    0,
                    0
                ], u = [
                    "a",
                    "b",
                    "c"
                ], f = new Array(3), h = {}, m = [];
                for(let v = 0; v < l; v += 3){
                    o ? (c[0] = o.getX(v), c[1] = o.getX(v + 1), c[2] = o.getX(v + 2)) : (c[0] = v, c[1] = v + 1, c[2] = v + 2);
                    const { a: _, b: w, c: b } = iS;
                    if (_.fromBufferAttribute(a, c[0]), w.fromBufferAttribute(a, c[1]), b.fromBufferAttribute(a, c[2]), iS.getNormal(qA), f[0] = `${Math.round(_.x * i)},${Math.round(_.y * i)},${Math.round(_.z * i)}`, f[1] = `${Math.round(w.x * i)},${Math.round(w.y * i)},${Math.round(w.z * i)}`, f[2] = `${Math.round(b.x * i)},${Math.round(b.y * i)},${Math.round(b.z * i)}`, !(f[0] === f[1] || f[1] === f[2] || f[2] === f[0])) for(let M = 0; M < 3; M++){
                        const E = (M + 1) % 3, T = f[M], P = f[E], A = iS[u[M]], O = iS[u[E]], D = `${T}_${P}`, R = `${P}_${T}`;
                        R in h && h[R] ? (qA.dot(h[R].normal) <= s && (m.push(A.x, A.y, A.z), m.push(O.x, O.y, O.z)), h[R] = null) : D in h || (h[D] = {
                            index0: c[M],
                            index1: c[E],
                            normal: qA.clone()
                        });
                    }
                }
                for(const v in h)if (h[v]) {
                    const { index0: _, index1: w } = h[v];
                    nS.fromBufferAttribute(a, _), rS.fromBufferAttribute(a, w), m.push(nS.x, nS.y, nS.z), m.push(rS.x, rS.y, rS.z);
                }
                this.setAttribute("position", new Yt(m, 3));
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
    }
    class pm extends nw {
        constructor(e){
            super(e), this.uuid = Ya(), this.type = "Shape", this.holes = [];
        }
        getPointsHoles(e) {
            const n = [];
            for(let r = 0, i = this.holes.length; r < i; r++)n[r] = this.holes[r].getPoints(e);
            return n;
        }
        extractPoints(e) {
            return {
                shape: this.getPoints(e),
                holes: this.getPointsHoles(e)
            };
        }
        copy(e) {
            super.copy(e), this.holes = [];
            for(let n = 0, r = e.holes.length; n < r; n++){
                const i = e.holes[n];
                this.holes.push(i.clone());
            }
            return this;
        }
        toJSON() {
            const e = super.toJSON();
            e.uuid = this.uuid, e.holes = [];
            for(let n = 0, r = this.holes.length; n < r; n++){
                const i = this.holes[n];
                e.holes.push(i.toJSON());
            }
            return e;
        }
        fromJSON(e) {
            super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
            for(let n = 0, r = e.holes.length; n < r; n++){
                const i = e.holes[n];
                this.holes.push(new nw().fromJSON(i));
            }
            return this;
        }
    }
    const U0e = {
        triangulate: function(t, e, n = 2) {
            const r = e && e.length, i = r ? e[0] * n : t.length;
            let s = Cq(t, 0, i, n, !0);
            const o = [];
            if (!s || s.next === s.prev) return o;
            let a, l, c, u, f, h, m;
            if (r && (s = H0e(t, e, s, n)), t.length > 80 * n) {
                a = c = t[0], l = u = t[1];
                for(let v = n; v < i; v += n)f = t[v], h = t[v + 1], f < a && (a = f), h < l && (l = h), f > c && (c = f), h > u && (u = h);
                m = Math.max(c - a, u - l), m = m !== 0 ? 32767 / m : 0;
            }
            return rw(s, o, n, a, l, m, 0), o;
        }
    };
    function Cq(t, e, n, r, i) {
        let s, o;
        if (i === nye(t, e, n, r) > 0) for(s = e; s < n; s += r)o = C8(s, t[s], t[s + 1], o);
        else for(s = n - r; s >= e; s -= r)o = C8(s, t[s], t[s + 1], o);
        return o && O2(o, o.next) && (sw(o), o = o.next), o;
    }
    function km(t, e) {
        if (!t) return t;
        e || (e = t);
        let n = t, r;
        do if (r = !1, !n.steiner && (O2(n, n.next) || fi(n.prev, n, n.next) === 0)) {
            if (sw(n), n = e = n.prev, n === n.next) break;
            r = !0;
        } else n = n.next;
        while (r || n !== e);
        return e;
    }
    function rw(t, e, n, r, i, s, o) {
        if (!t) return;
        !o && s && Y0e(t, r, i, s);
        let a = t, l, c;
        for(; t.prev !== t.next;){
            if (l = t.prev, c = t.next, s ? V0e(t, r, i, s) : z0e(t)) {
                e.push(l.i / n | 0), e.push(t.i / n | 0), e.push(c.i / n | 0), sw(t), t = c.next, a = c.next;
                continue;
            }
            if (t = c, t === a) {
                o ? o === 1 ? (t = W0e(km(t), e, n), rw(t, e, n, r, i, s, 2)) : o === 2 && q0e(t, e, n, r, i, s) : rw(km(t), e, n, r, i, s, 1);
                break;
            }
        }
    }
    function z0e(t) {
        const e = t.prev, n = t, r = t.next;
        if (fi(e, n, r) >= 0) return !1;
        const i = e.x, s = n.x, o = r.x, a = e.y, l = n.y, c = r.y, u = i < s ? i < o ? i : o : s < o ? s : o, f = a < l ? a < c ? a : c : l < c ? l : c, h = i > s ? i > o ? i : o : s > o ? s : o, m = a > l ? a > c ? a : c : l > c ? l : c;
        let v = r.next;
        for(; v !== e;){
            if (v.x >= u && v.x <= h && v.y >= f && v.y <= m && F0(i, a, s, l, o, c, v.x, v.y) && fi(v.prev, v, v.next) >= 0) return !1;
            v = v.next;
        }
        return !0;
    }
    function V0e(t, e, n, r) {
        const i = t.prev, s = t, o = t.next;
        if (fi(i, s, o) >= 0) return !1;
        const a = i.x, l = s.x, c = o.x, u = i.y, f = s.y, h = o.y, m = a < l ? a < c ? a : c : l < c ? l : c, v = u < f ? u < h ? u : h : f < h ? f : h, _ = a > l ? a > c ? a : c : l > c ? l : c, w = u > f ? u > h ? u : h : f > h ? f : h, b = H3(m, v, e, n, r), M = H3(_, w, e, n, r);
        let E = t.prevZ, T = t.nextZ;
        for(; E && E.z >= b && T && T.z <= M;){
            if (E.x >= m && E.x <= _ && E.y >= v && E.y <= w && E !== i && E !== o && F0(a, u, l, f, c, h, E.x, E.y) && fi(E.prev, E, E.next) >= 0 || (E = E.prevZ, T.x >= m && T.x <= _ && T.y >= v && T.y <= w && T !== i && T !== o && F0(a, u, l, f, c, h, T.x, T.y) && fi(T.prev, T, T.next) >= 0)) return !1;
            T = T.nextZ;
        }
        for(; E && E.z >= b;){
            if (E.x >= m && E.x <= _ && E.y >= v && E.y <= w && E !== i && E !== o && F0(a, u, l, f, c, h, E.x, E.y) && fi(E.prev, E, E.next) >= 0) return !1;
            E = E.prevZ;
        }
        for(; T && T.z <= M;){
            if (T.x >= m && T.x <= _ && T.y >= v && T.y <= w && T !== i && T !== o && F0(a, u, l, f, c, h, T.x, T.y) && fi(T.prev, T, T.next) >= 0) return !1;
            T = T.nextZ;
        }
        return !0;
    }
    function W0e(t, e, n) {
        let r = t;
        do {
            const i = r.prev, s = r.next.next;
            !O2(i, s) && Rq(i, r, r.next, s) && iw(i, s) && iw(s, i) && (e.push(i.i / n | 0), e.push(r.i / n | 0), e.push(s.i / n | 0), sw(r), sw(r.next), r = t = s), r = r.next;
        }while (r !== t);
        return km(r);
    }
    function q0e(t, e, n, r, i, s) {
        let o = t;
        do {
            let a = o.next.next;
            for(; a !== o.prev;){
                if (o.i !== a.i && Q0e(o, a)) {
                    let l = Iq(o, a);
                    o = km(o, o.next), l = km(l, l.next), rw(o, e, n, r, i, s, 0), rw(l, e, n, r, i, s, 0);
                    return;
                }
                a = a.next;
            }
            o = o.next;
        }while (o !== t);
    }
    function H0e(t, e, n, r) {
        const i = [];
        let s, o, a, l, c;
        for(s = 0, o = e.length; s < o; s++)a = e[s] * r, l = s < o - 1 ? e[s + 1] * r : t.length, c = Cq(t, a, l, r, !1), c === c.next && (c.steiner = !0), i.push(J0e(c));
        for(i.sort($0e), s = 0; s < i.length; s++)n = G0e(i[s], n);
        return n;
    }
    function $0e(t, e) {
        return t.x - e.x;
    }
    function G0e(t, e) {
        const n = X0e(t, e);
        if (!n) return e;
        const r = Iq(n, t);
        return km(r, r.next), km(n, n.next);
    }
    function X0e(t, e) {
        let n = e, r = -1 / 0, i;
        const s = t.x, o = t.y;
        do {
            if (o <= n.y && o >= n.next.y && n.next.y !== n.y) {
                const h = n.x + (o - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                if (h <= s && h > r && (r = h, i = n.x < n.next.x ? n : n.next, h === s)) return i;
            }
            n = n.next;
        }while (n !== e);
        if (!i) return null;
        const a = i, l = i.x, c = i.y;
        let u = 1 / 0, f;
        n = i;
        do s >= n.x && n.x >= l && s !== n.x && F0(o < c ? s : r, o, l, c, o < c ? r : s, o, n.x, n.y) && (f = Math.abs(o - n.y) / (s - n.x), iw(n, t) && (f < u || f === u && (n.x > i.x || n.x === i.x && K0e(i, n))) && (i = n, u = f)), n = n.next;
        while (n !== a);
        return i;
    }
    function K0e(t, e) {
        return fi(t.prev, t, e.prev) < 0 && fi(e.next, t, t.next) < 0;
    }
    function Y0e(t, e, n, r) {
        let i = t;
        do i.z === 0 && (i.z = H3(i.x, i.y, e, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
        while (i !== t);
        i.prevZ.nextZ = null, i.prevZ = null, Z0e(i);
    }
    function Z0e(t) {
        let e, n, r, i, s, o, a, l, c = 1;
        do {
            for(n = t, t = null, s = null, o = 0; n;){
                for(o++, r = n, a = 0, e = 0; e < c && (a++, r = r.nextZ, !!r); e++);
                for(l = c; a > 0 || l > 0 && r;)a !== 0 && (l === 0 || !r || n.z <= r.z) ? (i = n, n = n.nextZ, a--) : (i = r, r = r.nextZ, l--), s ? s.nextZ = i : t = i, i.prevZ = s, s = i;
                n = r;
            }
            s.nextZ = null, c *= 2;
        }while (o > 1);
        return t;
    }
    function H3(t, e, n, r, i) {
        return t = (t - n) * i | 0, e = (e - r) * i | 0, t = (t | t << 8) & 16711935, t = (t | t << 4) & 252645135, t = (t | t << 2) & 858993459, t = (t | t << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, t | e << 1;
    }
    function J0e(t) {
        let e = t, n = t;
        do (e.x < n.x || e.x === n.x && e.y < n.y) && (n = e), e = e.next;
        while (e !== t);
        return n;
    }
    function F0(t, e, n, r, i, s, o, a) {
        return (i - o) * (e - a) >= (t - o) * (s - a) && (t - o) * (r - a) >= (n - o) * (e - a) && (n - o) * (s - a) >= (i - o) * (r - a);
    }
    function Q0e(t, e) {
        return t.next.i !== e.i && t.prev.i !== e.i && !eye(t, e) && (iw(t, e) && iw(e, t) && tye(t, e) && (fi(t.prev, t, e.prev) || fi(t, e.prev, e)) || O2(t, e) && fi(t.prev, t, t.next) > 0 && fi(e.prev, e, e.next) > 0);
    }
    function fi(t, e, n) {
        return (e.y - t.y) * (n.x - e.x) - (e.x - t.x) * (n.y - e.y);
    }
    function O2(t, e) {
        return t.x === e.x && t.y === e.y;
    }
    function Rq(t, e, n, r) {
        const i = oS(fi(t, e, n)), s = oS(fi(t, e, r)), o = oS(fi(n, r, t)), a = oS(fi(n, r, e));
        return !!(i !== s && o !== a || i === 0 && sS(t, n, e) || s === 0 && sS(t, r, e) || o === 0 && sS(n, t, r) || a === 0 && sS(n, e, r));
    }
    function sS(t, e, n) {
        return e.x <= Math.max(t.x, n.x) && e.x >= Math.min(t.x, n.x) && e.y <= Math.max(t.y, n.y) && e.y >= Math.min(t.y, n.y);
    }
    function oS(t) {
        return t > 0 ? 1 : t < 0 ? -1 : 0;
    }
    function eye(t, e) {
        let n = t;
        do {
            if (n.i !== t.i && n.next.i !== t.i && n.i !== e.i && n.next.i !== e.i && Rq(n, n.next, t, e)) return !0;
            n = n.next;
        }while (n !== t);
        return !1;
    }
    function iw(t, e) {
        return fi(t.prev, t, t.next) < 0 ? fi(t, e, t.next) >= 0 && fi(t, t.prev, e) >= 0 : fi(t, e, t.prev) < 0 || fi(t, t.next, e) < 0;
    }
    function tye(t, e) {
        let n = t, r = !1;
        const i = (t.x + e.x) / 2, s = (t.y + e.y) / 2;
        do n.y > s != n.next.y > s && n.next.y !== n.y && i < (n.next.x - n.x) * (s - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next;
        while (n !== t);
        return r;
    }
    function Iq(t, e) {
        const n = new $3(t.i, t.x, t.y), r = new $3(e.i, e.x, e.y), i = t.next, s = e.prev;
        return t.next = e, e.prev = t, n.next = i, i.prev = n, r.next = n, n.prev = r, s.next = r, r.prev = s, r;
    }
    function C8(t, e, n, r) {
        const i = new $3(t, e, n);
        return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i;
    }
    function sw(t) {
        t.next.prev = t.prev, t.prev.next = t.next, t.prevZ && (t.prevZ.nextZ = t.nextZ), t.nextZ && (t.nextZ.prevZ = t.prevZ);
    }
    function $3(t, e, n) {
        this.i = t, this.x = e, this.y = n, this.prev = null, this.next = null, this.z = 0, this.prevZ = null, this.nextZ = null, this.steiner = !1;
    }
    function nye(t, e, n, r) {
        let i = 0;
        for(let s = e, o = n - r; s < n; s += r)i += (t[o] - t[s]) * (t[s + 1] + t[o + 1]), o = s;
        return i;
    }
    class cu {
        static area(e) {
            const n = e.length;
            let r = 0;
            for(let i = n - 1, s = 0; s < n; i = s++)r += e[i].x * e[s].y - e[s].x * e[i].y;
            return r * .5;
        }
        static isClockWise(e) {
            return cu.area(e) < 0;
        }
        static triangulateShape(e, n) {
            const r = [], i = [], s = [];
            R8(e), I8(r, e);
            let o = e.length;
            n.forEach(R8);
            for(let l = 0; l < n.length; l++)i.push(o), o += n[l].length, I8(r, n[l]);
            const a = U0e.triangulate(r, i);
            for(let l = 0; l < a.length; l += 3)s.push(a.slice(l, l + 3));
            return s;
        }
    }
    function R8(t) {
        const e = t.length;
        e > 2 && t[e - 1].equals(t[0]) && t.pop();
    }
    function I8(t, e) {
        for(let n = 0; n < e.length; n++)t.push(e[n].x), t.push(e[n].y);
    }
    class D2 extends Vn {
        constructor(e = new pm([
            new ot(.5, .5),
            new ot(-.5, .5),
            new ot(-.5, -.5),
            new ot(.5, -.5)
        ]), n = {}){
            super(), this.type = "ExtrudeGeometry", this.parameters = {
                shapes: e,
                options: n
            }, e = Array.isArray(e) ? e : [
                e
            ];
            const r = this, i = [], s = [];
            for(let a = 0, l = e.length; a < l; a++){
                const c = e[a];
                o(c);
            }
            this.setAttribute("position", new Yt(i, 3)), this.setAttribute("uv", new Yt(s, 2)), this.computeVertexNormals();
            function o(a) {
                const l = [], c = n.curveSegments !== void 0 ? n.curveSegments : 12, u = n.steps !== void 0 ? n.steps : 1, f = n.depth !== void 0 ? n.depth : 1;
                let h = n.bevelEnabled !== void 0 ? n.bevelEnabled : !0, m = n.bevelThickness !== void 0 ? n.bevelThickness : .2, v = n.bevelSize !== void 0 ? n.bevelSize : m - .1, _ = n.bevelOffset !== void 0 ? n.bevelOffset : 0, w = n.bevelSegments !== void 0 ? n.bevelSegments : 3;
                const b = n.extrudePath, M = n.UVGenerator !== void 0 ? n.UVGenerator : rye;
                let E, T = !1, P, A, O, D;
                b && (E = b.getSpacedPoints(u), T = !0, h = !1, P = b.computeFrenetFrames(u, !1), A = new ve, O = new ve, D = new ve), h || (w = 0, m = 0, v = 0, _ = 0);
                const R = a.extractPoints(c);
                let N = R.shape;
                const k = R.holes;
                if (!cu.isClockWise(N)) {
                    N = N.reverse();
                    for(let be = 0, Me = k.length; be < Me; be++){
                        const oe = k[be];
                        cu.isClockWise(oe) && (k[be] = oe.reverse());
                    }
                }
                const B = cu.triangulateShape(N, k), j = N;
                for(let be = 0, Me = k.length; be < Me; be++){
                    const oe = k[be];
                    N = N.concat(oe);
                }
                function K(be, Me, oe) {
                    return Me || console.error("THREE.ExtrudeGeometry: vec does not exist"), be.clone().addScaledVector(Me, oe);
                }
                const q = N.length, ee = B.length;
                function W(be, Me, oe) {
                    let Ye, Be, nt;
                    const de = be.x - Me.x, ce = be.y - Me.y, ae = oe.x - be.x, X = oe.y - be.y, G = de * de + ce * ce, he = de * X - ce * ae;
                    if (Math.abs(he) > Number.EPSILON) {
                        const pe = Math.sqrt(G), me = Math.sqrt(ae * ae + X * X), Ie = Me.x - ce / pe, Xe = Me.y + de / pe, Ze = oe.x - X / me, at = oe.y + ae / me, Je = ((Ze - Ie) * X - (at - Xe) * ae) / (de * X - ce * ae);
                        Ye = Ie + de * Je - be.x, Be = Xe + ce * Je - be.y;
                        const Pe = Ye * Ye + Be * Be;
                        if (Pe <= 2) return new ot(Ye, Be);
                        nt = Math.sqrt(Pe / 2);
                    } else {
                        let pe = !1;
                        de > Number.EPSILON ? ae > Number.EPSILON && (pe = !0) : de < -Number.EPSILON ? ae < -Number.EPSILON && (pe = !0) : Math.sign(ce) === Math.sign(X) && (pe = !0), pe ? (Ye = -ce, Be = de, nt = Math.sqrt(G)) : (Ye = de, Be = ce, nt = Math.sqrt(G / 2));
                    }
                    return new ot(Ye / nt, Be / nt);
                }
                const Z = [];
                for(let be = 0, Me = j.length, oe = Me - 1, Ye = be + 1; be < Me; be++, oe++, Ye++)oe === Me && (oe = 0), Ye === Me && (Ye = 0), Z[be] = W(j[be], j[oe], j[Ye]);
                const $ = [];
                let H, se = Z.concat();
                for(let be = 0, Me = k.length; be < Me; be++){
                    const oe = k[be];
                    H = [];
                    for(let Ye = 0, Be = oe.length, nt = Be - 1, de = Ye + 1; Ye < Be; Ye++, nt++, de++)nt === Be && (nt = 0), de === Be && (de = 0), H[Ye] = W(oe[Ye], oe[nt], oe[de]);
                    $.push(H), se = se.concat(H);
                }
                for(let be = 0; be < w; be++){
                    const Me = be / w, oe = m * Math.cos(Me * Math.PI / 2), Ye = v * Math.sin(Me * Math.PI / 2) + _;
                    for(let Be = 0, nt = j.length; Be < nt; Be++){
                        const de = K(j[Be], Z[Be], Ye);
                        ye(de.x, de.y, -oe);
                    }
                    for(let Be = 0, nt = k.length; Be < nt; Be++){
                        const de = k[Be];
                        H = $[Be];
                        for(let ce = 0, ae = de.length; ce < ae; ce++){
                            const X = K(de[ce], H[ce], Ye);
                            ye(X.x, X.y, -oe);
                        }
                    }
                }
                const le = v + _;
                for(let be = 0; be < q; be++){
                    const Me = h ? K(N[be], se[be], le) : N[be];
                    T ? (O.copy(P.normals[0]).multiplyScalar(Me.x), A.copy(P.binormals[0]).multiplyScalar(Me.y), D.copy(E[0]).add(O).add(A), ye(D.x, D.y, D.z)) : ye(Me.x, Me.y, 0);
                }
                for(let be = 1; be <= u; be++)for(let Me = 0; Me < q; Me++){
                    const oe = h ? K(N[Me], se[Me], le) : N[Me];
                    T ? (O.copy(P.normals[be]).multiplyScalar(oe.x), A.copy(P.binormals[be]).multiplyScalar(oe.y), D.copy(E[be]).add(O).add(A), ye(D.x, D.y, D.z)) : ye(oe.x, oe.y, f / u * be);
                }
                for(let be = w - 1; be >= 0; be--){
                    const Me = be / w, oe = m * Math.cos(Me * Math.PI / 2), Ye = v * Math.sin(Me * Math.PI / 2) + _;
                    for(let Be = 0, nt = j.length; Be < nt; Be++){
                        const de = K(j[Be], Z[Be], Ye);
                        ye(de.x, de.y, f + oe);
                    }
                    for(let Be = 0, nt = k.length; Be < nt; Be++){
                        const de = k[Be];
                        H = $[Be];
                        for(let ce = 0, ae = de.length; ce < ae; ce++){
                            const X = K(de[ce], H[ce], Ye);
                            T ? ye(X.x, X.y + E[u - 1].y, E[u - 1].x + oe) : ye(X.x, X.y, f + oe);
                        }
                    }
                }
                ne(), ue();
                function ne() {
                    const be = i.length / 3;
                    if (h) {
                        let Me = 0, oe = q * Me;
                        for(let Ye = 0; Ye < ee; Ye++){
                            const Be = B[Ye];
                            _e(Be[2] + oe, Be[1] + oe, Be[0] + oe);
                        }
                        Me = u + w * 2, oe = q * Me;
                        for(let Ye = 0; Ye < ee; Ye++){
                            const Be = B[Ye];
                            _e(Be[0] + oe, Be[1] + oe, Be[2] + oe);
                        }
                    } else {
                        for(let Me = 0; Me < ee; Me++){
                            const oe = B[Me];
                            _e(oe[2], oe[1], oe[0]);
                        }
                        for(let Me = 0; Me < ee; Me++){
                            const oe = B[Me];
                            _e(oe[0] + q * u, oe[1] + q * u, oe[2] + q * u);
                        }
                    }
                    r.addGroup(be, i.length / 3 - be, 0);
                }
                function ue() {
                    const be = i.length / 3;
                    let Me = 0;
                    ge(j, Me), Me += j.length;
                    for(let oe = 0, Ye = k.length; oe < Ye; oe++){
                        const Be = k[oe];
                        ge(Be, Me), Me += Be.length;
                    }
                    r.addGroup(be, i.length / 3 - be, 1);
                }
                function ge(be, Me) {
                    let oe = be.length;
                    for(; --oe >= 0;){
                        const Ye = oe;
                        let Be = oe - 1;
                        Be < 0 && (Be = be.length - 1);
                        for(let nt = 0, de = u + w * 2; nt < de; nt++){
                            const ce = q * nt, ae = q * (nt + 1), X = Me + Ye + ce, G = Me + Be + ce, he = Me + Be + ae, pe = Me + Ye + ae;
                            Te(X, G, he, pe);
                        }
                    }
                }
                function ye(be, Me, oe) {
                    l.push(be), l.push(Me), l.push(oe);
                }
                function _e(be, Me, oe) {
                    Re(be), Re(Me), Re(oe);
                    const Ye = i.length / 3, Be = M.generateTopUV(r, i, Ye - 3, Ye - 2, Ye - 1);
                    Fe(Be[0]), Fe(Be[1]), Fe(Be[2]);
                }
                function Te(be, Me, oe, Ye) {
                    Re(be), Re(Me), Re(Ye), Re(Me), Re(oe), Re(Ye);
                    const Be = i.length / 3, nt = M.generateSideWallUV(r, i, Be - 6, Be - 3, Be - 2, Be - 1);
                    Fe(nt[0]), Fe(nt[1]), Fe(nt[3]), Fe(nt[1]), Fe(nt[2]), Fe(nt[3]);
                }
                function Re(be) {
                    i.push(l[be * 3 + 0]), i.push(l[be * 3 + 1]), i.push(l[be * 3 + 2]);
                }
                function Fe(be) {
                    s.push(be.x), s.push(be.y);
                }
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        toJSON() {
            const e = super.toJSON(), n = this.parameters.shapes, r = this.parameters.options;
            return iye(n, r, e);
        }
        static fromJSON(e, n) {
            const r = [];
            for(let s = 0, o = e.shapes.length; s < o; s++){
                const a = n[e.shapes[s]];
                r.push(a);
            }
            const i = e.options.extrudePath;
            return i !== void 0 && (e.options.extrudePath = new uT[i.type]().fromJSON(i)), new D2(r, e.options);
        }
    }
    const rye = {
        generateTopUV: function(t, e, n, r, i) {
            const s = e[n * 3], o = e[n * 3 + 1], a = e[r * 3], l = e[r * 3 + 1], c = e[i * 3], u = e[i * 3 + 1];
            return [
                new ot(s, o),
                new ot(a, l),
                new ot(c, u)
            ];
        },
        generateSideWallUV: function(t, e, n, r, i, s) {
            const o = e[n * 3], a = e[n * 3 + 1], l = e[n * 3 + 2], c = e[r * 3], u = e[r * 3 + 1], f = e[r * 3 + 2], h = e[i * 3], m = e[i * 3 + 1], v = e[i * 3 + 2], _ = e[s * 3], w = e[s * 3 + 1], b = e[s * 3 + 2];
            return Math.abs(a - u) < Math.abs(o - c) ? [
                new ot(o, 1 - l),
                new ot(c, 1 - f),
                new ot(h, 1 - v),
                new ot(_, 1 - b)
            ] : [
                new ot(a, 1 - l),
                new ot(u, 1 - f),
                new ot(m, 1 - v),
                new ot(w, 1 - b)
            ];
        }
    };
    function iye(t, e, n) {
        if (n.shapes = [], Array.isArray(t)) for(let r = 0, i = t.length; r < i; r++){
            const s = t[r];
            n.shapes.push(s.uuid);
        }
        else n.shapes.push(t.uuid);
        return n.options = Object.assign({}, e), e.extrudePath !== void 0 && (n.options.extrudePath = e.extrudePath.toJSON()), n;
    }
    class L2 extends Ih {
        constructor(e = 1, n = 0){
            const r = (1 + Math.sqrt(5)) / 2, i = [
                -1,
                r,
                0,
                1,
                r,
                0,
                -1,
                -r,
                0,
                1,
                -r,
                0,
                0,
                -1,
                r,
                0,
                1,
                r,
                0,
                -1,
                -r,
                0,
                1,
                -r,
                r,
                0,
                -1,
                r,
                0,
                1,
                -r,
                0,
                -1,
                -r,
                0,
                1
            ], s = [
                0,
                11,
                5,
                0,
                5,
                1,
                0,
                1,
                7,
                0,
                7,
                10,
                0,
                10,
                11,
                1,
                5,
                9,
                5,
                11,
                4,
                11,
                10,
                2,
                10,
                7,
                6,
                7,
                1,
                8,
                3,
                9,
                4,
                3,
                4,
                2,
                3,
                2,
                6,
                3,
                6,
                8,
                3,
                8,
                9,
                4,
                9,
                5,
                2,
                4,
                11,
                6,
                2,
                10,
                8,
                6,
                7,
                9,
                8,
                1
            ];
            super(i, s, e, n), this.type = "IcosahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new L2(e.radius, e.detail);
        }
    }
    class $w extends Ih {
        constructor(e = 1, n = 0){
            const r = [
                1,
                0,
                0,
                -1,
                0,
                0,
                0,
                1,
                0,
                0,
                -1,
                0,
                0,
                0,
                1,
                0,
                0,
                -1
            ], i = [
                0,
                2,
                4,
                0,
                4,
                3,
                0,
                3,
                5,
                0,
                5,
                2,
                1,
                2,
                5,
                1,
                5,
                3,
                1,
                3,
                4,
                1,
                4,
                2
            ];
            super(r, i, e, n), this.type = "OctahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new $w(e.radius, e.detail);
        }
    }
    class qy extends Vn {
        constructor(e = 1, n = 1, r = 1, i = 1){
            super(), this.type = "PlaneGeometry", this.parameters = {
                width: e,
                height: n,
                widthSegments: r,
                heightSegments: i
            };
            const s = e / 2, o = n / 2, a = Math.floor(r), l = Math.floor(i), c = a + 1, u = l + 1, f = e / a, h = n / l, m = [], v = [], _ = [], w = [];
            for(let b = 0; b < u; b++){
                const M = b * h - o;
                for(let E = 0; E < c; E++){
                    const T = E * f - s;
                    v.push(T, -M, 0), _.push(0, 0, 1), w.push(E / a), w.push(1 - b / l);
                }
            }
            for(let b = 0; b < l; b++)for(let M = 0; M < a; M++){
                const E = M + c * b, T = M + c * (b + 1), P = M + 1 + c * (b + 1), A = M + 1 + c * b;
                m.push(E, T, A), m.push(T, P, A);
            }
            this.setIndex(m), this.setAttribute("position", new Yt(v, 3)), this.setAttribute("normal", new Yt(_, 3)), this.setAttribute("uv", new Yt(w, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new qy(e.width, e.height, e.widthSegments, e.heightSegments);
        }
    }
    class F2 extends Vn {
        constructor(e = .5, n = 1, r = 32, i = 1, s = 0, o = Math.PI * 2){
            super(), this.type = "RingGeometry", this.parameters = {
                innerRadius: e,
                outerRadius: n,
                thetaSegments: r,
                phiSegments: i,
                thetaStart: s,
                thetaLength: o
            }, r = Math.max(3, r), i = Math.max(1, i);
            const a = [], l = [], c = [], u = [];
            let f = e;
            const h = (n - e) / i, m = new ve, v = new ot;
            for(let _ = 0; _ <= i; _++){
                for(let w = 0; w <= r; w++){
                    const b = s + w / r * o;
                    m.x = f * Math.cos(b), m.y = f * Math.sin(b), l.push(m.x, m.y, m.z), c.push(0, 0, 1), v.x = (m.x / n + 1) / 2, v.y = (m.y / n + 1) / 2, u.push(v.x, v.y);
                }
                f += h;
            }
            for(let _ = 0; _ < i; _++){
                const w = _ * (r + 1);
                for(let b = 0; b < r; b++){
                    const M = b + w, E = M, T = M + r + 1, P = M + r + 2, A = M + 1;
                    a.push(E, T, A), a.push(T, P, A);
                }
            }
            this.setIndex(a), this.setAttribute("position", new Yt(l, 3)), this.setAttribute("normal", new Yt(c, 3)), this.setAttribute("uv", new Yt(u, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new F2(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
        }
    }
    class j2 extends Vn {
        constructor(e = new pm([
            new ot(0, .5),
            new ot(-.5, -.5),
            new ot(.5, -.5)
        ]), n = 12){
            super(), this.type = "ShapeGeometry", this.parameters = {
                shapes: e,
                curveSegments: n
            };
            const r = [], i = [], s = [], o = [];
            let a = 0, l = 0;
            if (Array.isArray(e) === !1) c(e);
            else for(let u = 0; u < e.length; u++)c(e[u]), this.addGroup(a, l, u), a += l, l = 0;
            this.setIndex(r), this.setAttribute("position", new Yt(i, 3)), this.setAttribute("normal", new Yt(s, 3)), this.setAttribute("uv", new Yt(o, 2));
            function c(u) {
                const f = i.length / 3, h = u.extractPoints(n);
                let m = h.shape;
                const v = h.holes;
                cu.isClockWise(m) === !1 && (m = m.reverse());
                for(let w = 0, b = v.length; w < b; w++){
                    const M = v[w];
                    cu.isClockWise(M) === !0 && (v[w] = M.reverse());
                }
                const _ = cu.triangulateShape(m, v);
                for(let w = 0, b = v.length; w < b; w++){
                    const M = v[w];
                    m = m.concat(M);
                }
                for(let w = 0, b = m.length; w < b; w++){
                    const M = m[w];
                    i.push(M.x, M.y, 0), s.push(0, 0, 1), o.push(M.x, M.y);
                }
                for(let w = 0, b = _.length; w < b; w++){
                    const M = _[w], E = M[0] + f, T = M[1] + f, P = M[2] + f;
                    r.push(E, T, P), l += 3;
                }
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        toJSON() {
            const e = super.toJSON(), n = this.parameters.shapes;
            return sye(n, e);
        }
        static fromJSON(e, n) {
            const r = [];
            for(let i = 0, s = e.shapes.length; i < s; i++){
                const o = n[e.shapes[i]];
                r.push(o);
            }
            return new j2(r, e.curveSegments);
        }
    }
    function sye(t, e) {
        if (e.shapes = [], Array.isArray(t)) for(let n = 0, r = t.length; n < r; n++){
            const i = t[n];
            e.shapes.push(i.uuid);
        }
        else e.shapes.push(t.uuid);
        return e;
    }
    class Gw extends Vn {
        constructor(e = 1, n = 32, r = 16, i = 0, s = Math.PI * 2, o = 0, a = Math.PI){
            super(), this.type = "SphereGeometry", this.parameters = {
                radius: e,
                widthSegments: n,
                heightSegments: r,
                phiStart: i,
                phiLength: s,
                thetaStart: o,
                thetaLength: a
            }, n = Math.max(3, Math.floor(n)), r = Math.max(2, Math.floor(r));
            const l = Math.min(o + a, Math.PI);
            let c = 0;
            const u = [], f = new ve, h = new ve, m = [], v = [], _ = [], w = [];
            for(let b = 0; b <= r; b++){
                const M = [], E = b / r;
                let T = 0;
                b === 0 && o === 0 ? T = .5 / n : b === r && l === Math.PI && (T = -.5 / n);
                for(let P = 0; P <= n; P++){
                    const A = P / n;
                    f.x = -e * Math.cos(i + A * s) * Math.sin(o + E * a), f.y = e * Math.cos(o + E * a), f.z = e * Math.sin(i + A * s) * Math.sin(o + E * a), v.push(f.x, f.y, f.z), h.copy(f).normalize(), _.push(h.x, h.y, h.z), w.push(A + T, 1 - E), M.push(c++);
                }
                u.push(M);
            }
            for(let b = 0; b < r; b++)for(let M = 0; M < n; M++){
                const E = u[b][M + 1], T = u[b][M], P = u[b + 1][M], A = u[b + 1][M + 1];
                (b !== 0 || o > 0) && m.push(E, T, A), (b !== r - 1 || l < Math.PI) && m.push(T, P, A);
            }
            this.setIndex(m), this.setAttribute("position", new Yt(v, 3)), this.setAttribute("normal", new Yt(_, 3)), this.setAttribute("uv", new Yt(w, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new Gw(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
        }
    }
    class B2 extends Ih {
        constructor(e = 1, n = 0){
            const r = [
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                1,
                -1,
                -1
            ], i = [
                2,
                1,
                0,
                0,
                3,
                2,
                1,
                3,
                0,
                2,
                3,
                1
            ];
            super(r, i, e, n), this.type = "TetrahedronGeometry", this.parameters = {
                radius: e,
                detail: n
            };
        }
        static fromJSON(e) {
            return new B2(e.radius, e.detail);
        }
    }
    class U2 extends Vn {
        constructor(e = 1, n = .4, r = 12, i = 48, s = Math.PI * 2){
            super(), this.type = "TorusGeometry", this.parameters = {
                radius: e,
                tube: n,
                radialSegments: r,
                tubularSegments: i,
                arc: s
            }, r = Math.floor(r), i = Math.floor(i);
            const o = [], a = [], l = [], c = [], u = new ve, f = new ve, h = new ve;
            for(let m = 0; m <= r; m++)for(let v = 0; v <= i; v++){
                const _ = v / i * s, w = m / r * Math.PI * 2;
                f.x = (e + n * Math.cos(w)) * Math.cos(_), f.y = (e + n * Math.cos(w)) * Math.sin(_), f.z = n * Math.sin(w), a.push(f.x, f.y, f.z), u.x = e * Math.cos(_), u.y = e * Math.sin(_), h.subVectors(f, u).normalize(), l.push(h.x, h.y, h.z), c.push(v / i), c.push(m / r);
            }
            for(let m = 1; m <= r; m++)for(let v = 1; v <= i; v++){
                const _ = (i + 1) * m + v - 1, w = (i + 1) * (m - 1) + v - 1, b = (i + 1) * (m - 1) + v, M = (i + 1) * m + v;
                o.push(_, w, M), o.push(w, b, M);
            }
            this.setIndex(o), this.setAttribute("position", new Yt(a, 3)), this.setAttribute("normal", new Yt(l, 3)), this.setAttribute("uv", new Yt(c, 2));
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new U2(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
        }
    }
    class z2 extends Vn {
        constructor(e = 1, n = .4, r = 64, i = 8, s = 2, o = 3){
            super(), this.type = "TorusKnotGeometry", this.parameters = {
                radius: e,
                tube: n,
                tubularSegments: r,
                radialSegments: i,
                p: s,
                q: o
            }, r = Math.floor(r), i = Math.floor(i);
            const a = [], l = [], c = [], u = [], f = new ve, h = new ve, m = new ve, v = new ve, _ = new ve, w = new ve, b = new ve;
            for(let E = 0; E <= r; ++E){
                const T = E / r * s * Math.PI * 2;
                M(T, s, o, e, m), M(T + .01, s, o, e, v), w.subVectors(v, m), b.addVectors(v, m), _.crossVectors(w, b), b.crossVectors(_, w), _.normalize(), b.normalize();
                for(let P = 0; P <= i; ++P){
                    const A = P / i * Math.PI * 2, O = -n * Math.cos(A), D = n * Math.sin(A);
                    f.x = m.x + (O * b.x + D * _.x), f.y = m.y + (O * b.y + D * _.y), f.z = m.z + (O * b.z + D * _.z), l.push(f.x, f.y, f.z), h.subVectors(f, m).normalize(), c.push(h.x, h.y, h.z), u.push(E / r), u.push(P / i);
                }
            }
            for(let E = 1; E <= r; E++)for(let T = 1; T <= i; T++){
                const P = (i + 1) * (E - 1) + (T - 1), A = (i + 1) * E + (T - 1), O = (i + 1) * E + T, D = (i + 1) * (E - 1) + T;
                a.push(P, A, D), a.push(A, O, D);
            }
            this.setIndex(a), this.setAttribute("position", new Yt(l, 3)), this.setAttribute("normal", new Yt(c, 3)), this.setAttribute("uv", new Yt(u, 2));
            function M(E, T, P, A, O) {
                const D = Math.cos(E), R = Math.sin(E), N = P / T * E, k = Math.cos(N);
                O.x = A * (2 + k) * .5 * D, O.y = A * (2 + k) * R * .5, O.z = A * Math.sin(N) * .5;
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        static fromJSON(e) {
            return new z2(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
        }
    }
    class V2 extends Vn {
        constructor(e = new nO(new ve(-1, -1, 0), new ve(-1, 1, 0), new ve(1, 1, 0)), n = 64, r = 1, i = 8, s = !1){
            super(), this.type = "TubeGeometry", this.parameters = {
                path: e,
                tubularSegments: n,
                radius: r,
                radialSegments: i,
                closed: s
            };
            const o = e.computeFrenetFrames(n, s);
            this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
            const a = new ve, l = new ve, c = new ot;
            let u = new ve;
            const f = [], h = [], m = [], v = [];
            _(), this.setIndex(v), this.setAttribute("position", new Yt(f, 3)), this.setAttribute("normal", new Yt(h, 3)), this.setAttribute("uv", new Yt(m, 2));
            function _() {
                for(let E = 0; E < n; E++)w(E);
                w(s === !1 ? n : 0), M(), b();
            }
            function w(E) {
                u = e.getPointAt(E / n, u);
                const T = o.normals[E], P = o.binormals[E];
                for(let A = 0; A <= i; A++){
                    const O = A / i * Math.PI * 2, D = Math.sin(O), R = -Math.cos(O);
                    l.x = R * T.x + D * P.x, l.y = R * T.y + D * P.y, l.z = R * T.z + D * P.z, l.normalize(), h.push(l.x, l.y, l.z), a.x = u.x + r * l.x, a.y = u.y + r * l.y, a.z = u.z + r * l.z, f.push(a.x, a.y, a.z);
                }
            }
            function b() {
                for(let E = 1; E <= n; E++)for(let T = 1; T <= i; T++){
                    const P = (i + 1) * (E - 1) + (T - 1), A = (i + 1) * E + (T - 1), O = (i + 1) * E + T, D = (i + 1) * (E - 1) + T;
                    v.push(P, A, D), v.push(A, O, D);
                }
            }
            function M() {
                for(let E = 0; E <= n; E++)for(let T = 0; T <= i; T++)c.x = E / n, c.y = T / i, m.push(c.x, c.y);
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.path = this.parameters.path.toJSON(), e;
        }
        static fromJSON(e) {
            return new V2(new uT[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
        }
    }
    class Aq extends Vn {
        constructor(e = null){
            if (super(), this.type = "WireframeGeometry", this.parameters = {
                geometry: e
            }, e !== null) {
                const n = [], r = new Set, i = new ve, s = new ve;
                if (e.index !== null) {
                    const o = e.attributes.position, a = e.index;
                    let l = e.groups;
                    l.length === 0 && (l = [
                        {
                            start: 0,
                            count: a.count,
                            materialIndex: 0
                        }
                    ]);
                    for(let c = 0, u = l.length; c < u; ++c){
                        const f = l[c], h = f.start, m = f.count;
                        for(let v = h, _ = h + m; v < _; v += 3)for(let w = 0; w < 3; w++){
                            const b = a.getX(v + w), M = a.getX(v + (w + 1) % 3);
                            i.fromBufferAttribute(o, b), s.fromBufferAttribute(o, M), A8(i, s, r) === !0 && (n.push(i.x, i.y, i.z), n.push(s.x, s.y, s.z));
                        }
                    }
                } else {
                    const o = e.attributes.position;
                    for(let a = 0, l = o.count / 3; a < l; a++)for(let c = 0; c < 3; c++){
                        const u = 3 * a + c, f = 3 * a + (c + 1) % 3;
                        i.fromBufferAttribute(o, u), s.fromBufferAttribute(o, f), A8(i, s, r) === !0 && (n.push(i.x, i.y, i.z), n.push(s.x, s.y, s.z));
                    }
                }
                this.setAttribute("position", new Yt(n, 3));
            }
        }
        copy(e) {
            return super.copy(e), this.parameters = Object.assign({}, e.parameters), this;
        }
    }
    function A8(t, e, n) {
        const r = `${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;
        return n.has(r) === !0 || n.has(i) === !0 ? !1 : (n.add(r), n.add(i), !0);
    }
    var N8 = Object.freeze({
        __proto__: null,
        BoxGeometry: zm,
        CapsuleGeometry: A2,
        CircleGeometry: N2,
        ConeGeometry: P2,
        CylinderGeometry: Wy,
        DodecahedronGeometry: k2,
        EdgesGeometry: Tq,
        ExtrudeGeometry: D2,
        IcosahedronGeometry: L2,
        LatheGeometry: Hw,
        OctahedronGeometry: $w,
        PlaneGeometry: qy,
        PolyhedronGeometry: Ih,
        RingGeometry: F2,
        ShapeGeometry: j2,
        SphereGeometry: Gw,
        TetrahedronGeometry: B2,
        TorusGeometry: U2,
        TorusKnotGeometry: z2,
        TubeGeometry: V2,
        WireframeGeometry: Aq
    });
    class Nq extends bo {
        constructor(e){
            super(), this.isShadowMaterial = !0, this.type = "ShadowMaterial", this.color = new jt(0), this.transparent = !0, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.fog = e.fog, this;
        }
    }
    class Pq extends Sc {
        constructor(e){
            super(e), this.isRawShaderMaterial = !0, this.type = "RawShaderMaterial";
        }
    }
    class iO extends bo {
        constructor(e){
            super(), this.isMeshStandardMaterial = !0, this.type = "MeshStandardMaterial", this.defines = {
                STANDARD: ""
            }, this.color = new jt(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new jt(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ch, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new tl, this.envMapIntensity = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.defines = {
                STANDARD: ""
            }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.envMapIntensity = e.envMapIntensity, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class kq extends iO {
        constructor(e){
            super(), this.isMeshPhysicalMaterial = !0, this.defines = {
                STANDARD: "",
                PHYSICAL: ""
            }, this.type = "MeshPhysicalMaterial", this.anisotropyRotation = 0, this.anisotropyMap = null, this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new ot(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
                get: function() {
                    return Cn(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
                },
                set: function(n) {
                    this.ior = (1 + .4 * n) / (1 - .4 * n);
                }
            }), this.iridescenceMap = null, this.iridescenceIOR = 1.3, this.iridescenceThicknessRange = [
                100,
                400
            ], this.iridescenceThicknessMap = null, this.sheenColor = new jt(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 1 / 0, this.attenuationColor = new jt(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new jt(1, 1, 1), this.specularColorMap = null, this._anisotropy = 0, this._clearcoat = 0, this._dispersion = 0, this._iridescence = 0, this._sheen = 0, this._transmission = 0, this.setValues(e);
        }
        get anisotropy() {
            return this._anisotropy;
        }
        set anisotropy(e) {
            this._anisotropy > 0 != e > 0 && this.version++, this._anisotropy = e;
        }
        get clearcoat() {
            return this._clearcoat;
        }
        set clearcoat(e) {
            this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
        }
        get iridescence() {
            return this._iridescence;
        }
        set iridescence(e) {
            this._iridescence > 0 != e > 0 && this.version++, this._iridescence = e;
        }
        get dispersion() {
            return this._dispersion;
        }
        set dispersion(e) {
            this._dispersion > 0 != e > 0 && this.version++, this._dispersion = e;
        }
        get sheen() {
            return this._sheen;
        }
        set sheen(e) {
            this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
        }
        get transmission() {
            return this._transmission;
        }
        set transmission(e) {
            this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
        }
        copy(e) {
            return super.copy(e), this.defines = {
                STANDARD: "",
                PHYSICAL: ""
            }, this.anisotropy = e.anisotropy, this.anisotropyRotation = e.anisotropyRotation, this.anisotropyMap = e.anisotropyMap, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.dispersion = e.dispersion, this.ior = e.ior, this.iridescence = e.iridescence, this.iridescenceMap = e.iridescenceMap, this.iridescenceIOR = e.iridescenceIOR, this.iridescenceThicknessRange = [
                ...e.iridescenceThicknessRange
            ], this.iridescenceThicknessMap = e.iridescenceThicknessMap, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
        }
    }
    class Oq extends bo {
        constructor(e){
            super(), this.isMeshPhongMaterial = !0, this.type = "MeshPhongMaterial", this.color = new jt(16777215), this.specular = new jt(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new jt(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ch, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new tl, this.combine = Bw, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class Dq extends bo {
        constructor(e){
            super(), this.isMeshToonMaterial = !0, this.defines = {
                TOON: ""
            }, this.type = "MeshToonMaterial", this.color = new jt(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new jt(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ch, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
        }
    }
    class Lq extends bo {
        constructor(e){
            super(), this.isMeshNormalMaterial = !0, this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ch, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.flatShading = !1, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
        }
    }
    class Fq extends bo {
        constructor(e){
            super(), this.isMeshLambertMaterial = !0, this.type = "MeshLambertMaterial", this.color = new jt(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new jt(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ch, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.envMapRotation = new tl, this.combine = Bw, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapRotation.copy(e.envMapRotation), this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class sO extends bo {
        constructor(e){
            super(), this.isMeshDepthMaterial = !0, this.type = "MeshDepthMaterial", this.depthPacking = XW, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
        }
    }
    class oO extends bo {
        constructor(e){
            super(), this.isMeshDistanceMaterial = !0, this.type = "MeshDistanceMaterial", this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
        }
    }
    class jq extends bo {
        constructor(e){
            super(), this.isMeshMatcapMaterial = !0, this.defines = {
                MATCAP: ""
            }, this.type = "MeshMatcapMaterial", this.color = new jt(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Ch, this.normalScale = new ot(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.fog = !0, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.defines = {
                MATCAP: ""
            }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this.fog = e.fog, this;
        }
    }
    class Bq extends Xo {
        constructor(e){
            super(), this.isLineDashedMaterial = !0, this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
        }
        copy(e) {
            return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
        }
    }
    function sm(t, e, n) {
        return !t || !n && t.constructor === e ? t : typeof e.BYTES_PER_ELEMENT == "number" ? new e(t) : Array.prototype.slice.call(t);
    }
    function Uq(t) {
        return ArrayBuffer.isView(t) && !(t instanceof DataView);
    }
    function zq(t) {
        function e(i, s) {
            return t[i] - t[s];
        }
        const n = t.length, r = new Array(n);
        for(let i = 0; i !== n; ++i)r[i] = i;
        return r.sort(e), r;
    }
    function G3(t, e, n) {
        const r = t.length, i = new t.constructor(r);
        for(let s = 0, o = 0; o !== r; ++s){
            const a = n[s] * e;
            for(let l = 0; l !== e; ++l)i[o++] = t[a + l];
        }
        return i;
    }
    function aO(t, e, n, r) {
        let i = 1, s = t[0];
        for(; s !== void 0 && s[r] === void 0;)s = t[i++];
        if (s === void 0) return;
        let o = s[r];
        if (o !== void 0) if (Array.isArray(o)) do o = s[r], o !== void 0 && (e.push(s.time), n.push.apply(n, o)), s = t[i++];
        while (s !== void 0);
        else if (o.toArray !== void 0) do o = s[r], o !== void 0 && (e.push(s.time), o.toArray(n, n.length)), s = t[i++];
        while (s !== void 0);
        else do o = s[r], o !== void 0 && (e.push(s.time), n.push(o)), s = t[i++];
        while (s !== void 0);
    }
    function oye(t, e, n, r, i = 30) {
        const s = t.clone();
        s.name = e;
        const o = [];
        for(let l = 0; l < s.tracks.length; ++l){
            const c = s.tracks[l], u = c.getValueSize(), f = [], h = [];
            for(let m = 0; m < c.times.length; ++m){
                const v = c.times[m] * i;
                if (!(v < n || v >= r)) {
                    f.push(c.times[m]);
                    for(let _ = 0; _ < u; ++_)h.push(c.values[m * u + _]);
                }
            }
            f.length !== 0 && (c.times = sm(f, c.times.constructor), c.values = sm(h, c.values.constructor), o.push(c));
        }
        s.tracks = o;
        let a = 1 / 0;
        for(let l = 0; l < s.tracks.length; ++l)a > s.tracks[l].times[0] && (a = s.tracks[l].times[0]);
        for(let l = 0; l < s.tracks.length; ++l)s.tracks[l].shift(-1 * a);
        return s.resetDuration(), s;
    }
    function aye(t, e = 0, n = t, r = 30) {
        r <= 0 && (r = 30);
        const i = n.tracks.length, s = e / r;
        for(let o = 0; o < i; ++o){
            const a = n.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            const c = t.tracks.find(function(b) {
                return b.name === a.name && b.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let u = 0;
            const f = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (u = f / 3);
            let h = 0;
            const m = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = m / 3);
            const v = a.times.length - 1;
            let _;
            if (s <= a.times[0]) {
                const b = u, M = f - u;
                _ = a.values.slice(b, M);
            } else if (s >= a.times[v]) {
                const b = v * f + u, M = b + f - u;
                _ = a.values.slice(b, M);
            } else {
                const b = a.createInterpolant(), M = u, E = f - u;
                b.evaluate(s), _ = b.resultBuffer.slice(M, E);
            }
            l === "quaternion" && new fo().fromArray(_).normalize().conjugate().toArray(_);
            const w = c.times.length;
            for(let b = 0; b < w; ++b){
                const M = b * m + h;
                if (l === "quaternion") fo.multiplyQuaternionsFlat(c.values, M, _, 0, c.values, M);
                else {
                    const E = m - h * 2;
                    for(let T = 0; T < E; ++T)c.values[M + T] -= _[T];
                }
            }
        }
        return t.blendMode = Vk, t;
    }
    const lye = {
        convertArray: sm,
        isTypedArray: Uq,
        getKeyframeOrder: zq,
        sortedArray: G3,
        flattenJSON: aO,
        subclip: oye,
        makeClipAdditive: aye
    };
    class Xw {
        constructor(e, n, r, i){
            this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new n.constructor(r), this.sampleValues = n, this.valueSize = r, this.settings = null, this.DefaultSettings_ = {};
        }
        evaluate(e) {
            const n = this.parameterPositions;
            let r = this._cachedIndex, i = n[r], s = n[r - 1];
            e: {
                t: {
                    let o;
                    n: {
                        r: if (!(e < i)) {
                            for(let a = r + 2;;){
                                if (i === void 0) {
                                    if (e < s) break r;
                                    return r = n.length, this._cachedIndex = r, this.copySampleValue_(r - 1);
                                }
                                if (r === a) break;
                                if (s = i, i = n[++r], e < i) break t;
                            }
                            o = n.length;
                            break n;
                        }
                        if (!(e >= s)) {
                            const a = n[1];
                            e < a && (r = 2, s = a);
                            for(let l = r - 2;;){
                                if (s === void 0) return this._cachedIndex = 0, this.copySampleValue_(0);
                                if (r === l) break;
                                if (i = s, s = n[--r - 1], e >= s) break t;
                            }
                            o = r, r = 0;
                            break n;
                        }
                        break e;
                    }
                    for(; r < o;){
                        const a = r + o >>> 1;
                        e < n[a] ? o = a : r = a + 1;
                    }
                    if (i = n[r], s = n[r - 1], s === void 0) return this._cachedIndex = 0, this.copySampleValue_(0);
                    if (i === void 0) return r = n.length, this._cachedIndex = r, this.copySampleValue_(r - 1);
                }
                this._cachedIndex = r, this.intervalChanged_(r, s, i);
            }
            return this.interpolate_(r, s, e, i);
        }
        getSettings_() {
            return this.settings || this.DefaultSettings_;
        }
        copySampleValue_(e) {
            const n = this.resultBuffer, r = this.sampleValues, i = this.valueSize, s = e * i;
            for(let o = 0; o !== i; ++o)n[o] = r[s + o];
            return n;
        }
        interpolate_() {
            throw new Error("call to abstract method");
        }
        intervalChanged_() {}
    }
    class Vq extends Xw {
        constructor(e, n, r, i){
            super(e, n, r, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
                endingStart: nm,
                endingEnd: nm
            };
        }
        intervalChanged_(e, n, r) {
            const i = this.parameterPositions;
            let s = e - 2, o = e + 1, a = i[s], l = i[o];
            if (a === void 0) switch(this.getSettings_().endingStart){
                case rm:
                    s = e, a = 2 * n - r;
                    break;
                case Zb:
                    s = i.length - 2, a = n + i[s] - i[s + 1];
                    break;
                default:
                    s = e, a = r;
            }
            if (l === void 0) switch(this.getSettings_().endingEnd){
                case rm:
                    o = e, l = 2 * r - n;
                    break;
                case Zb:
                    o = 1, l = r + i[1] - i[0];
                    break;
                default:
                    o = e - 1, l = n;
            }
            const c = (r - n) * .5, u = this.valueSize;
            this._weightPrev = c / (n - a), this._weightNext = c / (l - r), this._offsetPrev = s * u, this._offsetNext = o * u;
        }
        interpolate_(e, n, r, i) {
            const s = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, u = this._offsetPrev, f = this._offsetNext, h = this._weightPrev, m = this._weightNext, v = (r - n) / (i - n), _ = v * v, w = _ * v, b = -h * w + 2 * h * _ - h * v, M = (1 + h) * w + (-1.5 - 2 * h) * _ + (-.5 + h) * v + 1, E = (-1 - m) * w + (1.5 + m) * _ + .5 * v, T = m * w - m * _;
            for(let P = 0; P !== a; ++P)s[P] = b * o[u + P] + M * o[c + P] + E * o[l + P] + T * o[f + P];
            return s;
        }
    }
    class lO extends Xw {
        constructor(e, n, r, i){
            super(e, n, r, i);
        }
        interpolate_(e, n, r, i) {
            const s = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, u = (r - n) / (i - n), f = 1 - u;
            for(let h = 0; h !== a; ++h)s[h] = o[c + h] * f + o[l + h] * u;
            return s;
        }
    }
    class Wq extends Xw {
        constructor(e, n, r, i){
            super(e, n, r, i);
        }
        interpolate_(e) {
            return this.copySampleValue_(e - 1);
        }
    }
    class Rc {
        constructor(e, n, r, i){
            if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
            if (n === void 0 || n.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
            this.name = e, this.times = sm(n, this.TimeBufferType), this.values = sm(r, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
        }
        static toJSON(e) {
            const n = e.constructor;
            let r;
            if (n.toJSON !== this.toJSON) r = n.toJSON(e);
            else {
                r = {
                    name: e.name,
                    times: sm(e.times, Array),
                    values: sm(e.values, Array)
                };
                const i = e.getInterpolation();
                i !== e.DefaultInterpolation && (r.interpolation = i);
            }
            return r.type = e.ValueTypeName, r;
        }
        InterpolantFactoryMethodDiscrete(e) {
            return new Wq(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodLinear(e) {
            return new lO(this.times, this.values, this.getValueSize(), e);
        }
        InterpolantFactoryMethodSmooth(e) {
            return new Vq(this.times, this.values, this.getValueSize(), e);
        }
        setInterpolation(e) {
            let n;
            switch(e){
                case Yb:
                    n = this.InterpolantFactoryMethodDiscrete;
                    break;
                case aT:
                    n = this.InterpolantFactoryMethodLinear;
                    break;
                case XS:
                    n = this.InterpolantFactoryMethodSmooth;
                    break;
            }
            if (n === void 0) {
                const r = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
                else throw new Error(r);
                return console.warn("THREE.KeyframeTrack:", r), this;
            }
            return this.createInterpolant = n, this;
        }
        getInterpolation() {
            switch(this.createInterpolant){
                case this.InterpolantFactoryMethodDiscrete:
                    return Yb;
                case this.InterpolantFactoryMethodLinear:
                    return aT;
                case this.InterpolantFactoryMethodSmooth:
                    return XS;
            }
        }
        getValueSize() {
            return this.values.length / this.times.length;
        }
        shift(e) {
            if (e !== 0) {
                const n = this.times;
                for(let r = 0, i = n.length; r !== i; ++r)n[r] += e;
            }
            return this;
        }
        scale(e) {
            if (e !== 1) {
                const n = this.times;
                for(let r = 0, i = n.length; r !== i; ++r)n[r] *= e;
            }
            return this;
        }
        trim(e, n) {
            const r = this.times, i = r.length;
            let s = 0, o = i - 1;
            for(; s !== i && r[s] < e;)++s;
            for(; o !== -1 && r[o] > n;)--o;
            if (++o, s !== 0 || o !== i) {
                s >= o && (o = Math.max(o, 1), s = o - 1);
                const a = this.getValueSize();
                this.times = r.slice(s, o), this.values = this.values.slice(s * a, o * a);
            }
            return this;
        }
        validate() {
            let e = !0;
            const n = this.getValueSize();
            n - Math.floor(n) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
            const r = this.times, i = this.values, s = r.length;
            s === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
            let o = null;
            for(let a = 0; a !== s; a++){
                const l = r[a];
                if (typeof l == "number" && isNaN(l)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                    break;
                }
                if (o !== null && o > l) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                    break;
                }
                o = l;
            }
            if (i !== void 0 && Uq(i)) for(let a = 0, l = i.length; a !== l; ++a){
                const c = i[a];
                if (isNaN(c)) {
                    console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, c), e = !1;
                    break;
                }
            }
            return e;
        }
        optimize() {
            const e = this.times.slice(), n = this.values.slice(), r = this.getValueSize(), i = this.getInterpolation() === XS, s = e.length - 1;
            let o = 1;
            for(let a = 1; a < s; ++a){
                let l = !1;
                const c = e[a], u = e[a + 1];
                if (c !== u && (a !== 1 || c !== e[0])) if (i) l = !0;
                else {
                    const f = a * r, h = f - r, m = f + r;
                    for(let v = 0; v !== r; ++v){
                        const _ = n[f + v];
                        if (_ !== n[h + v] || _ !== n[m + v]) {
                            l = !0;
                            break;
                        }
                    }
                }
                if (l) {
                    if (a !== o) {
                        e[o] = e[a];
                        const f = a * r, h = o * r;
                        for(let m = 0; m !== r; ++m)n[h + m] = n[f + m];
                    }
                    ++o;
                }
            }
            if (s > 0) {
                e[o] = e[s];
                for(let a = s * r, l = o * r, c = 0; c !== r; ++c)n[l + c] = n[a + c];
                ++o;
            }
            return o !== e.length ? (this.times = e.slice(0, o), this.values = n.slice(0, o * r)) : (this.times = e, this.values = n), this;
        }
        clone() {
            const e = this.times.slice(), n = this.values.slice(), r = this.constructor, i = new r(this.name, e, n);
            return i.createInterpolant = this.createInterpolant, i;
        }
    }
    Rc.prototype.TimeBufferType = Float32Array;
    Rc.prototype.ValueBufferType = Float32Array;
    Rc.prototype.DefaultInterpolation = aT;
    class Vm extends Rc {
        constructor(e, n, r){
            super(e, n, r);
        }
    }
    Vm.prototype.ValueTypeName = "bool";
    Vm.prototype.ValueBufferType = Array;
    Vm.prototype.DefaultInterpolation = Yb;
    Vm.prototype.InterpolantFactoryMethodLinear = void 0;
    Vm.prototype.InterpolantFactoryMethodSmooth = void 0;
    class cO extends Rc {
    }
    cO.prototype.ValueTypeName = "color";
    class ow extends Rc {
    }
    ow.prototype.ValueTypeName = "number";
    class qq extends Xw {
        constructor(e, n, r, i){
            super(e, n, r, i);
        }
        interpolate_(e, n, r, i) {
            const s = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (r - n) / (i - n);
            let c = e * a;
            for(let u = c + a; c !== u; c += 4)fo.slerpFlat(s, 0, o, c - a, o, c, l);
            return s;
        }
    }
    class Kw extends Rc {
        InterpolantFactoryMethodLinear(e) {
            return new qq(this.times, this.values, this.getValueSize(), e);
        }
    }
    Kw.prototype.ValueTypeName = "quaternion";
    Kw.prototype.InterpolantFactoryMethodSmooth = void 0;
    class Wm extends Rc {
        constructor(e, n, r){
            super(e, n, r);
        }
    }
    Wm.prototype.ValueTypeName = "string";
    Wm.prototype.ValueBufferType = Array;
    Wm.prototype.DefaultInterpolation = Yb;
    Wm.prototype.InterpolantFactoryMethodLinear = void 0;
    Wm.prototype.InterpolantFactoryMethodSmooth = void 0;
    class aw extends Rc {
    }
    aw.prototype.ValueTypeName = "vector";
    class lw {
        constructor(e = "", n = -1, r = [], i = w2){
            this.name = e, this.tracks = r, this.duration = n, this.blendMode = i, this.uuid = Ya(), this.duration < 0 && this.resetDuration();
        }
        static parse(e) {
            const n = [], r = e.tracks, i = 1 / (e.fps || 1);
            for(let o = 0, a = r.length; o !== a; ++o)n.push(uye(r[o]).scale(i));
            const s = new this(e.name, e.duration, n, e.blendMode);
            return s.uuid = e.uuid, s;
        }
        static toJSON(e) {
            const n = [], r = e.tracks, i = {
                name: e.name,
                duration: e.duration,
                tracks: n,
                uuid: e.uuid,
                blendMode: e.blendMode
            };
            for(let s = 0, o = r.length; s !== o; ++s)n.push(Rc.toJSON(r[s]));
            return i;
        }
        static CreateFromMorphTargetSequence(e, n, r, i) {
            const s = n.length, o = [];
            for(let a = 0; a < s; a++){
                let l = [], c = [];
                l.push((a + s - 1) % s, a, (a + 1) % s), c.push(0, 1, 0);
                const u = zq(l);
                l = G3(l, 1, u), c = G3(c, 1, u), !i && l[0] === 0 && (l.push(s), c.push(c[0])), o.push(new ow(".morphTargetInfluences[" + n[a].name + "]", l, c).scale(1 / r));
            }
            return new this(e, -1, o);
        }
        static findByName(e, n) {
            let r = e;
            if (!Array.isArray(e)) {
                const i = e;
                r = i.geometry && i.geometry.animations || i.animations;
            }
            for(let i = 0; i < r.length; i++)if (r[i].name === n) return r[i];
            return null;
        }
        static CreateClipsFromMorphTargetSequences(e, n, r) {
            const i = {}, s = /^([\w-]*?)([\d]+)$/;
            for(let a = 0, l = e.length; a < l; a++){
                const c = e[a], u = c.name.match(s);
                if (u && u.length > 1) {
                    const f = u[1];
                    let h = i[f];
                    h || (i[f] = h = []), h.push(c);
                }
            }
            const o = [];
            for(const a in i)o.push(this.CreateFromMorphTargetSequence(a, i[a], n, r));
            return o;
        }
        static parseAnimation(e, n) {
            if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
            const r = function(f, h, m, v, _) {
                if (m.length !== 0) {
                    const w = [], b = [];
                    aO(m, w, b, v), w.length !== 0 && _.push(new f(h, w, b));
                }
            }, i = [], s = e.name || "default", o = e.fps || 30, a = e.blendMode;
            let l = e.length || -1;
            const c = e.hierarchy || [];
            for(let f = 0; f < c.length; f++){
                const h = c[f].keys;
                if (!(!h || h.length === 0)) if (h[0].morphTargets) {
                    const m = {};
                    let v;
                    for(v = 0; v < h.length; v++)if (h[v].morphTargets) for(let _ = 0; _ < h[v].morphTargets.length; _++)m[h[v].morphTargets[_]] = -1;
                    for(const _ in m){
                        const w = [], b = [];
                        for(let M = 0; M !== h[v].morphTargets.length; ++M){
                            const E = h[v];
                            w.push(E.time), b.push(E.morphTarget === _ ? 1 : 0);
                        }
                        i.push(new ow(".morphTargetInfluence[" + _ + "]", w, b));
                    }
                    l = m.length * o;
                } else {
                    const m = ".bones[" + n[f].name + "]";
                    r(aw, m + ".position", h, "pos", i), r(Kw, m + ".quaternion", h, "rot", i), r(aw, m + ".scale", h, "scl", i);
                }
            }
            return i.length === 0 ? null : new this(s, l, i, a);
        }
        resetDuration() {
            const e = this.tracks;
            let n = 0;
            for(let r = 0, i = e.length; r !== i; ++r){
                const s = this.tracks[r];
                n = Math.max(n, s.times[s.times.length - 1]);
            }
            return this.duration = n, this;
        }
        trim() {
            for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
            return this;
        }
        validate() {
            let e = !0;
            for(let n = 0; n < this.tracks.length; n++)e = e && this.tracks[n].validate();
            return e;
        }
        optimize() {
            for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
            return this;
        }
        clone() {
            const e = [];
            for(let n = 0; n < this.tracks.length; n++)e.push(this.tracks[n].clone());
            return new this.constructor(this.name, this.duration, e, this.blendMode);
        }
        toJSON() {
            return this.constructor.toJSON(this);
        }
    }
    function cye(t) {
        switch(t.toLowerCase()){
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return ow;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return aw;
            case "color":
                return cO;
            case "quaternion":
                return Kw;
            case "bool":
            case "boolean":
                return Vm;
            case "string":
                return Wm;
        }
        throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + t);
    }
    function uye(t) {
        if (t.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        const e = cye(t.type);
        if (t.times === void 0) {
            const n = [], r = [];
            aO(t.keys, n, r, "value"), t.times = n, t.values = r;
        }
        return e.parse !== void 0 ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation);
    }
    const _d = {
        enabled: !1,
        files: {},
        add: function(t, e) {
            this.enabled !== !1 && (this.files[t] = e);
        },
        get: function(t) {
            if (this.enabled !== !1) return this.files[t];
        },
        remove: function(t) {
            delete this.files[t];
        },
        clear: function() {
            this.files = {};
        }
    };
    class uO {
        constructor(e, n, r){
            const i = this;
            let s = !1, o = 0, a = 0, l;
            const c = [];
            this.onStart = void 0, this.onLoad = e, this.onProgress = n, this.onError = r, this.itemStart = function(u) {
                a++, s === !1 && i.onStart !== void 0 && i.onStart(u, o, a), s = !0;
            }, this.itemEnd = function(u) {
                o++, i.onProgress !== void 0 && i.onProgress(u, o, a), o === a && (s = !1, i.onLoad !== void 0 && i.onLoad());
            }, this.itemError = function(u) {
                i.onError !== void 0 && i.onError(u);
            }, this.resolveURL = function(u) {
                return l ? l(u) : u;
            }, this.setURLModifier = function(u) {
                return l = u, this;
            }, this.addHandler = function(u, f) {
                return c.push(u, f), this;
            }, this.removeHandler = function(u) {
                const f = c.indexOf(u);
                return f !== -1 && c.splice(f, 2), this;
            }, this.getHandler = function(u) {
                for(let f = 0, h = c.length; f < h; f += 2){
                    const m = c[f], v = c[f + 1];
                    if (m.global && (m.lastIndex = 0), m.test(u)) return v;
                }
                return null;
            };
        }
    }
    const Hq = new uO;
    class Ta {
        constructor(e){
            this.manager = e !== void 0 ? e : Hq, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
        }
        load() {}
        loadAsync(e, n) {
            const r = this;
            return new Promise(function(i, s) {
                r.load(e, i, n, s);
            });
        }
        parse() {}
        setCrossOrigin(e) {
            return this.crossOrigin = e, this;
        }
        setWithCredentials(e) {
            return this.withCredentials = e, this;
        }
        setPath(e) {
            return this.path = e, this;
        }
        setResourcePath(e) {
            return this.resourcePath = e, this;
        }
        setRequestHeader(e) {
            return this.requestHeader = e, this;
        }
    }
    Ta.DEFAULT_MATERIAL_NAME = "__DEFAULT";
    const ud = {};
    class dye extends Error {
        constructor(e, n){
            super(e), this.response = n;
        }
    }
    class Bd extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
            const s = _d.get(e);
            if (s !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
                n && n(s), this.manager.itemEnd(e);
            }, 0), s;
            if (ud[e] !== void 0) {
                ud[e].push({
                    onLoad: n,
                    onProgress: r,
                    onError: i
                });
                return;
            }
            ud[e] = [], ud[e].push({
                onLoad: n,
                onProgress: r,
                onError: i
            });
            const o = new Request(e, {
                headers: new Headers(this.requestHeader),
                credentials: this.withCredentials ? "include" : "same-origin"
            }), a = this.mimeType, l = this.responseType;
            fetch(o).then((c)=>{
                if (c.status === 200 || c.status === 0) {
                    if (c.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || c.body === void 0 || c.body.getReader === void 0) return c;
                    const u = ud[e], f = c.body.getReader(), h = c.headers.get("X-File-Size") || c.headers.get("Content-Length"), m = h ? parseInt(h) : 0, v = m !== 0;
                    let _ = 0;
                    const w = new ReadableStream({
                        start (b) {
                            M();
                            function M() {
                                f.read().then(({ done: E, value: T })=>{
                                    if (E) b.close();
                                    else {
                                        _ += T.byteLength;
                                        const P = new ProgressEvent("progress", {
                                            lengthComputable: v,
                                            loaded: _,
                                            total: m
                                        });
                                        for(let A = 0, O = u.length; A < O; A++){
                                            const D = u[A];
                                            D.onProgress && D.onProgress(P);
                                        }
                                        b.enqueue(T), M();
                                    }
                                }, (E)=>{
                                    b.error(E);
                                });
                            }
                        }
                    });
                    return new Response(w);
                } else throw new dye(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`, c);
            }).then((c)=>{
                switch(l){
                    case "arraybuffer":
                        return c.arrayBuffer();
                    case "blob":
                        return c.blob();
                    case "document":
                        return c.text().then((u)=>new DOMParser().parseFromString(u, a));
                    case "json":
                        return c.json();
                    default:
                        if (a === void 0) return c.text();
                        {
                            const f = /charset="?([^;"\s]*)"?/i.exec(a), h = f && f[1] ? f[1].toLowerCase() : void 0, m = new TextDecoder(h);
                            return c.arrayBuffer().then((v)=>m.decode(v));
                        }
                }
            }).then((c)=>{
                _d.add(e, c);
                const u = ud[e];
                delete ud[e];
                for(let f = 0, h = u.length; f < h; f++){
                    const m = u[f];
                    m.onLoad && m.onLoad(c);
                }
            }).catch((c)=>{
                const u = ud[e];
                if (u === void 0) throw this.manager.itemError(e), c;
                delete ud[e];
                for(let f = 0, h = u.length; f < h; f++){
                    const m = u[f];
                    m.onError && m.onError(c);
                }
                this.manager.itemError(e);
            }).finally(()=>{
                this.manager.itemEnd(e);
            }), this.manager.itemStart(e);
        }
        setResponseType(e) {
            return this.responseType = e, this;
        }
        setMimeType(e) {
            return this.mimeType = e, this;
        }
    }
    class fye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new Bd(this.manager);
            o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
                try {
                    n(s.parse(JSON.parse(a)));
                } catch (l) {
                    i ? i(l) : console.error(l), s.manager.itemError(e);
                }
            }, r, i);
        }
        parse(e) {
            const n = [];
            for(let r = 0; r < e.length; r++){
                const i = lw.parse(e[r]);
                n.push(i);
            }
            return n;
        }
    }
    class hye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = [], a = new R2, l = new Bd(this.manager);
            l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(s.withCredentials);
            let c = 0;
            function u(f) {
                l.load(e[f], function(h) {
                    const m = s.parse(h, !0);
                    o[f] = {
                        width: m.width,
                        height: m.height,
                        format: m.format,
                        mipmaps: m.mipmaps
                    }, c += 1, c === 6 && (m.mipmapCount === 1 && (a.minFilter = ds), a.image = o, a.format = m.format, a.needsUpdate = !0, n && n(a));
                }, r, i);
            }
            if (Array.isArray(e)) for(let f = 0, h = e.length; f < h; ++f)u(f);
            else l.load(e, function(f) {
                const h = s.parse(f, !0);
                if (h.isCubemap) {
                    const m = h.mipmaps.length / h.mipmapCount;
                    for(let v = 0; v < m; v++){
                        o[v] = {
                            mipmaps: []
                        };
                        for(let _ = 0; _ < h.mipmapCount; _++)o[v].mipmaps.push(h.mipmaps[v * h.mipmapCount + _]), o[v].format = h.format, o[v].width = h.width, o[v].height = h.height;
                    }
                    a.image = o;
                } else a.image.width = h.width, a.image.height = h.height, a.mipmaps = h.mipmaps;
                h.mipmapCount === 1 && (a.minFilter = ds), a.format = h.format, a.needsUpdate = !0, n && n(a);
            }, r, i);
            return a;
        }
    }
    class cw extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
            const s = this, o = _d.get(e);
            if (o !== void 0) return s.manager.itemStart(e), setTimeout(function() {
                n && n(o), s.manager.itemEnd(e);
            }, 0), o;
            const a = tw("img");
            function l() {
                u(), _d.add(e, this), n && n(this), s.manager.itemEnd(e);
            }
            function c(f) {
                u(), i && i(f), s.manager.itemError(e), s.manager.itemEnd(e);
            }
            function u() {
                a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
            }
            return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.slice(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), s.manager.itemStart(e), a.src = e, a;
        }
    }
    class pye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = new Ww;
            s.colorSpace = ma;
            const o = new cw(this.manager);
            o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
            let a = 0;
            function l(c) {
                o.load(e[c], function(u) {
                    s.images[c] = u, a++, a === 6 && (s.needsUpdate = !0, n && n(s));
                }, void 0, i);
            }
            for(let c = 0; c < e.length; ++c)l(c);
            return s;
        }
    }
    class mye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new vc, a = new Bd(this.manager);
            return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(s.withCredentials), a.load(e, function(l) {
                let c;
                try {
                    c = s.parse(l);
                } catch (u) {
                    if (i !== void 0) i(u);
                    else {
                        console.error(u);
                        return;
                    }
                }
                c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : Tl, o.wrapT = c.wrapT !== void 0 ? c.wrapT : Tl, o.magFilter = c.magFilter !== void 0 ? c.magFilter : ds, o.minFilter = c.minFilter !== void 0 ? c.minFilter : ds, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.colorSpace !== void 0 && (o.colorSpace = c.colorSpace), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = ru), c.mipmapCount === 1 && (o.minFilter = ds), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, n && n(o, c);
            }, r, i), o;
        }
    }
    class gye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = new bi, o = new cw(this.manager);
            return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
                s.image = a, s.needsUpdate = !0, n !== void 0 && n(s);
            }, r, i), s;
        }
    }
    class Ah extends ur {
        constructor(e, n = 1){
            super(), this.isLight = !0, this.type = "Light", this.color = new jt(e), this.intensity = n;
        }
        dispose() {}
        copy(e, n) {
            return super.copy(e, n), this.color.copy(e.color), this.intensity = e.intensity, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.color = this.color.getHex(), n.object.intensity = this.intensity, this.groundColor !== void 0 && (n.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (n.object.distance = this.distance), this.angle !== void 0 && (n.object.angle = this.angle), this.decay !== void 0 && (n.object.decay = this.decay), this.penumbra !== void 0 && (n.object.penumbra = this.penumbra), this.shadow !== void 0 && (n.object.shadow = this.shadow.toJSON()), this.target !== void 0 && (n.object.target = this.target.uuid), n;
        }
    }
    class $q extends Ah {
        constructor(e, n, r){
            super(e, r), this.isHemisphereLight = !0, this.type = "HemisphereLight", this.position.copy(ur.DEFAULT_UP), this.updateMatrix(), this.groundColor = new jt(n);
        }
        copy(e, n) {
            return super.copy(e, n), this.groundColor.copy(e.groundColor), this;
        }
    }
    const HA = new gn, P8 = new ve, k8 = new ve;
    class dO {
        constructor(e){
            this.camera = e, this.intensity = 1, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new ot(512, 512), this.map = null, this.mapPass = null, this.matrix = new gn, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new qw, this._frameExtents = new ot(1, 1), this._viewportCount = 1, this._viewports = [
                new cr(0, 0, 1, 1)
            ];
        }
        getViewportCount() {
            return this._viewportCount;
        }
        getFrustum() {
            return this._frustum;
        }
        updateMatrices(e) {
            const n = this.camera, r = this.matrix;
            P8.setFromMatrixPosition(e.matrixWorld), n.position.copy(P8), k8.setFromMatrixPosition(e.target.matrixWorld), n.lookAt(k8), n.updateMatrixWorld(), HA.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(HA), r.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), r.multiply(HA);
        }
        getViewport(e) {
            return this._viewports[e];
        }
        getFrameExtents() {
            return this._frameExtents;
        }
        dispose() {
            this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
        }
        copy(e) {
            return this.camera = e.camera.clone(), this.intensity = e.intensity, this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        toJSON() {
            const e = {};
            return this.intensity !== 1 && (e.intensity = this.intensity), this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
        }
    }
    class yye extends dO {
        constructor(){
            super(new Oi(50, 1, .5, 500)), this.isSpotLightShadow = !0, this.focus = 1;
        }
        updateMatrices(e) {
            const n = this.camera, r = Ey * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, s = e.distance || n.far;
            (r !== n.fov || i !== n.aspect || s !== n.far) && (n.fov = r, n.aspect = i, n.far = s, n.updateProjectionMatrix()), super.updateMatrices(e);
        }
        copy(e) {
            return super.copy(e), this.focus = e.focus, this;
        }
    }
    class Gq extends Ah {
        constructor(e, n, r = 0, i = Math.PI / 3, s = 0, o = 2){
            super(e, n), this.isSpotLight = !0, this.type = "SpotLight", this.position.copy(ur.DEFAULT_UP), this.updateMatrix(), this.target = new ur, this.distance = r, this.angle = i, this.penumbra = s, this.decay = o, this.map = null, this.shadow = new yye;
        }
        get power() {
            return this.intensity * Math.PI;
        }
        set power(e) {
            this.intensity = e / Math.PI;
        }
        dispose() {
            this.shadow.dispose();
        }
        copy(e, n) {
            return super.copy(e, n), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
        }
    }
    const O8 = new gn, cx = new ve, $A = new ve;
    class vye extends dO {
        constructor(){
            super(new Oi(90, 1, .5, 500)), this.isPointLightShadow = !0, this._frameExtents = new ot(4, 2), this._viewportCount = 6, this._viewports = [
                new cr(2, 1, 1, 1),
                new cr(0, 1, 1, 1),
                new cr(3, 1, 1, 1),
                new cr(1, 1, 1, 1),
                new cr(3, 0, 1, 1),
                new cr(1, 0, 1, 1)
            ], this._cubeDirections = [
                new ve(1, 0, 0),
                new ve(-1, 0, 0),
                new ve(0, 0, 1),
                new ve(0, 0, -1),
                new ve(0, 1, 0),
                new ve(0, -1, 0)
            ], this._cubeUps = [
                new ve(0, 1, 0),
                new ve(0, 1, 0),
                new ve(0, 1, 0),
                new ve(0, 1, 0),
                new ve(0, 0, 1),
                new ve(0, 0, -1)
            ];
        }
        updateMatrices(e, n = 0) {
            const r = this.camera, i = this.matrix, s = e.distance || r.far;
            s !== r.far && (r.far = s, r.updateProjectionMatrix()), cx.setFromMatrixPosition(e.matrixWorld), r.position.copy(cx), $A.copy(r.position), $A.add(this._cubeDirections[n]), r.up.copy(this._cubeUps[n]), r.lookAt($A), r.updateMatrixWorld(), i.makeTranslation(-cx.x, -cx.y, -cx.z), O8.multiplyMatrices(r.projectionMatrix, r.matrixWorldInverse), this._frustum.setFromProjectionMatrix(O8);
        }
    }
    class Xq extends Ah {
        constructor(e, n, r = 0, i = 2){
            super(e, n), this.isPointLight = !0, this.type = "PointLight", this.distance = r, this.decay = i, this.shadow = new vye;
        }
        get power() {
            return this.intensity * 4 * Math.PI;
        }
        set power(e) {
            this.intensity = e / (4 * Math.PI);
        }
        dispose() {
            this.shadow.dispose();
        }
        copy(e, n) {
            return super.copy(e, n), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
        }
    }
    class ch extends Vw {
        constructor(e = -1, n = 1, r = 1, i = -1, s = .1, o = 2e3){
            super(), this.isOrthographicCamera = !0, this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = n, this.top = r, this.bottom = i, this.near = s, this.far = o, this.updateProjectionMatrix();
        }
        copy(e, n) {
            return super.copy(e, n), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
        }
        setViewOffset(e, n, r, i, s, o) {
            this.view === null && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = n, this.view.offsetX = r, this.view.offsetY = i, this.view.width = s, this.view.height = o, this.updateProjectionMatrix();
        }
        clearViewOffset() {
            this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
        }
        updateProjectionMatrix() {
            const e = (this.right - this.left) / (2 * this.zoom), n = (this.top - this.bottom) / (2 * this.zoom), r = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2;
            let s = r - e, o = r + e, a = i + n, l = i - n;
            if (this.view !== null && this.view.enabled) {
                const c = (this.right - this.left) / this.view.fullWidth / this.zoom, u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                s += c * this.view.offsetX, o = s + c * this.view.width, a -= u * this.view.offsetY, l = a - u * this.view.height;
            }
            this.projectionMatrix.makeOrthographic(s, o, a, l, this.near, this.far, this.coordinateSystem), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.zoom = this.zoom, n.object.left = this.left, n.object.right = this.right, n.object.top = this.top, n.object.bottom = this.bottom, n.object.near = this.near, n.object.far = this.far, this.view !== null && (n.object.view = Object.assign({}, this.view)), n;
        }
    }
    class xye extends dO {
        constructor(){
            super(new ch(-5, 5, 5, -5, .5, 500)), this.isDirectionalLightShadow = !0;
        }
    }
    class Kq extends Ah {
        constructor(e, n){
            super(e, n), this.isDirectionalLight = !0, this.type = "DirectionalLight", this.position.copy(ur.DEFAULT_UP), this.updateMatrix(), this.target = new ur, this.shadow = new xye;
        }
        dispose() {
            this.shadow.dispose();
        }
        copy(e) {
            return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
        }
    }
    class Yq extends Ah {
        constructor(e, n){
            super(e, n), this.isAmbientLight = !0, this.type = "AmbientLight";
        }
    }
    class Zq extends Ah {
        constructor(e, n, r = 10, i = 10){
            super(e, n), this.isRectAreaLight = !0, this.type = "RectAreaLight", this.width = r, this.height = i;
        }
        get power() {
            return this.intensity * this.width * this.height * Math.PI;
        }
        set power(e) {
            this.intensity = e / (this.width * this.height * Math.PI);
        }
        copy(e) {
            return super.copy(e), this.width = e.width, this.height = e.height, this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.width = this.width, n.object.height = this.height, n;
        }
    }
    class Jq {
        constructor(){
            this.isSphericalHarmonics3 = !0, this.coefficients = [];
            for(let e = 0; e < 9; e++)this.coefficients.push(new ve);
        }
        set(e) {
            for(let n = 0; n < 9; n++)this.coefficients[n].copy(e[n]);
            return this;
        }
        zero() {
            for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
            return this;
        }
        getAt(e, n) {
            const r = e.x, i = e.y, s = e.z, o = this.coefficients;
            return n.copy(o[0]).multiplyScalar(.282095), n.addScaledVector(o[1], .488603 * i), n.addScaledVector(o[2], .488603 * s), n.addScaledVector(o[3], .488603 * r), n.addScaledVector(o[4], 1.092548 * (r * i)), n.addScaledVector(o[5], 1.092548 * (i * s)), n.addScaledVector(o[6], .315392 * (3 * s * s - 1)), n.addScaledVector(o[7], 1.092548 * (r * s)), n.addScaledVector(o[8], .546274 * (r * r - i * i)), n;
        }
        getIrradianceAt(e, n) {
            const r = e.x, i = e.y, s = e.z, o = this.coefficients;
            return n.copy(o[0]).multiplyScalar(.886227), n.addScaledVector(o[1], 2 * .511664 * i), n.addScaledVector(o[2], 2 * .511664 * s), n.addScaledVector(o[3], 2 * .511664 * r), n.addScaledVector(o[4], 2 * .429043 * r * i), n.addScaledVector(o[5], 2 * .429043 * i * s), n.addScaledVector(o[6], .743125 * s * s - .247708), n.addScaledVector(o[7], 2 * .429043 * r * s), n.addScaledVector(o[8], .429043 * (r * r - i * i)), n;
        }
        add(e) {
            for(let n = 0; n < 9; n++)this.coefficients[n].add(e.coefficients[n]);
            return this;
        }
        addScaledSH(e, n) {
            for(let r = 0; r < 9; r++)this.coefficients[r].addScaledVector(e.coefficients[r], n);
            return this;
        }
        scale(e) {
            for(let n = 0; n < 9; n++)this.coefficients[n].multiplyScalar(e);
            return this;
        }
        lerp(e, n) {
            for(let r = 0; r < 9; r++)this.coefficients[r].lerp(e.coefficients[r], n);
            return this;
        }
        equals(e) {
            for(let n = 0; n < 9; n++)if (!this.coefficients[n].equals(e.coefficients[n])) return !1;
            return !0;
        }
        copy(e) {
            return this.set(e.coefficients);
        }
        clone() {
            return new this.constructor().copy(this);
        }
        fromArray(e, n = 0) {
            const r = this.coefficients;
            for(let i = 0; i < 9; i++)r[i].fromArray(e, n + i * 3);
            return this;
        }
        toArray(e = [], n = 0) {
            const r = this.coefficients;
            for(let i = 0; i < 9; i++)r[i].toArray(e, n + i * 3);
            return e;
        }
        static getBasisAt(e, n) {
            const r = e.x, i = e.y, s = e.z;
            n[0] = .282095, n[1] = .488603 * i, n[2] = .488603 * s, n[3] = .488603 * r, n[4] = 1.092548 * r * i, n[5] = 1.092548 * i * s, n[6] = .315392 * (3 * s * s - 1), n[7] = 1.092548 * r * s, n[8] = .546274 * (r * r - i * i);
        }
    }
    class Qq extends Ah {
        constructor(e = new Jq, n = 1){
            super(void 0, n), this.isLightProbe = !0, this.sh = e;
        }
        copy(e) {
            return super.copy(e), this.sh.copy(e.sh), this;
        }
        fromJSON(e) {
            return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.object.sh = this.sh.toArray(), n;
        }
    }
    class W2 extends Ta {
        constructor(e){
            super(e), this.textures = {};
        }
        load(e, n, r, i) {
            const s = this, o = new Bd(s.manager);
            o.setPath(s.path), o.setRequestHeader(s.requestHeader), o.setWithCredentials(s.withCredentials), o.load(e, function(a) {
                try {
                    n(s.parse(JSON.parse(a)));
                } catch (l) {
                    i ? i(l) : console.error(l), s.manager.itemError(e);
                }
            }, r, i);
        }
        parse(e) {
            const n = this.textures;
            function r(s) {
                return n[s] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", s), n[s];
            }
            const i = this.createMaterialFromType(e.type);
            if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new jt().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.dispersion !== void 0 && (i.dispersion = e.dispersion), e.iridescence !== void 0 && (i.iridescence = e.iridescence), e.iridescenceIOR !== void 0 && (i.iridescenceIOR = e.iridescenceIOR), e.iridescenceThicknessRange !== void 0 && (i.iridescenceThicknessRange = e.iridescenceThicknessRange), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.anisotropy !== void 0 && (i.anisotropy = e.anisotropy), e.anisotropyRotation !== void 0 && (i.anisotropyRotation = e.anisotropyRotation), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.alphaHash !== void 0 && (i.alphaHash = e.alphaHash), e.depthFunc !== void 0 && (i.depthFunc = e.depthFunc), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.blendSrc !== void 0 && (i.blendSrc = e.blendSrc), e.blendDst !== void 0 && (i.blendDst = e.blendDst), e.blendEquation !== void 0 && (i.blendEquation = e.blendEquation), e.blendSrcAlpha !== void 0 && (i.blendSrcAlpha = e.blendSrcAlpha), e.blendDstAlpha !== void 0 && (i.blendDstAlpha = e.blendDstAlpha), e.blendEquationAlpha !== void 0 && (i.blendEquationAlpha = e.blendEquationAlpha), e.blendColor !== void 0 && i.blendColor !== void 0 && i.blendColor.setHex(e.blendColor), e.blendAlpha !== void 0 && (i.blendAlpha = e.blendAlpha), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== void 0 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.forceSinglePass !== void 0 && (i.forceSinglePass = e.forceSinglePass), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(const s in e.uniforms){
                const o = e.uniforms[s];
                switch(i.uniforms[s] = {}, o.type){
                    case "t":
                        i.uniforms[s].value = r(o.value);
                        break;
                    case "c":
                        i.uniforms[s].value = new jt().setHex(o.value);
                        break;
                    case "v2":
                        i.uniforms[s].value = new ot().fromArray(o.value);
                        break;
                    case "v3":
                        i.uniforms[s].value = new ve().fromArray(o.value);
                        break;
                    case "v4":
                        i.uniforms[s].value = new cr().fromArray(o.value);
                        break;
                    case "m3":
                        i.uniforms[s].value = new An().fromArray(o.value);
                        break;
                    case "m4":
                        i.uniforms[s].value = new gn().fromArray(o.value);
                        break;
                    default:
                        i.uniforms[s].value = o.value;
                }
            }
            if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.glslVersion !== void 0 && (i.glslVersion = e.glslVersion), e.extensions !== void 0) for(const s in e.extensions)i.extensions[s] = e.extensions[s];
            if (e.lights !== void 0 && (i.lights = e.lights), e.clipping !== void 0 && (i.clipping = e.clipping), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = r(e.map)), e.matcap !== void 0 && (i.matcap = r(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = r(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = r(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = r(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
                let s = e.normalScale;
                Array.isArray(s) === !1 && (s = [
                    s,
                    s
                ]), i.normalScale = new ot().fromArray(s);
            }
            return e.displacementMap !== void 0 && (i.displacementMap = r(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = r(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = r(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = r(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = r(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = r(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = r(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = r(e.envMap)), e.envMapRotation !== void 0 && i.envMapRotation.fromArray(e.envMapRotation), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = r(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = r(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = r(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = r(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = r(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = r(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new ot().fromArray(e.clearcoatNormalScale)), e.iridescenceMap !== void 0 && (i.iridescenceMap = r(e.iridescenceMap)), e.iridescenceThicknessMap !== void 0 && (i.iridescenceThicknessMap = r(e.iridescenceThicknessMap)), e.transmissionMap !== void 0 && (i.transmissionMap = r(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = r(e.thicknessMap)), e.anisotropyMap !== void 0 && (i.anisotropyMap = r(e.anisotropyMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = r(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = r(e.sheenRoughnessMap)), i;
        }
        setTextures(e) {
            return this.textures = e, this;
        }
        createMaterialFromType(e) {
            return W2.createMaterialFromType(e);
        }
        static createMaterialFromType(e) {
            const n = {
                ShadowMaterial: Nq,
                SpriteMaterial: Xk,
                RawShaderMaterial: Pq,
                ShaderMaterial: Sc,
                PointsMaterial: Yk,
                MeshPhysicalMaterial: kq,
                MeshStandardMaterial: iO,
                MeshPhongMaterial: Oq,
                MeshToonMaterial: Dq,
                MeshNormalMaterial: Lq,
                MeshLambertMaterial: Fq,
                MeshDepthMaterial: sO,
                MeshDistanceMaterial: oO,
                MeshBasicMaterial: Rh,
                MeshMatcapMaterial: jq,
                LineDashedMaterial: Bq,
                LineBasicMaterial: Xo,
                Material: bo
            };
            return new n[e];
        }
    }
    class X3 {
        static decodeText(e) {
            if (console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."), typeof TextDecoder < "u") return new TextDecoder().decode(e);
            let n = "";
            for(let r = 0, i = e.length; r < i; r++)n += String.fromCharCode(e[r]);
            try {
                return decodeURIComponent(escape(n));
            } catch  {
                return n;
            }
        }
        static extractUrlBase(e) {
            const n = e.lastIndexOf("/");
            return n === -1 ? "./" : e.slice(0, n + 1);
        }
        static resolveURL(e, n) {
            return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(n) && /^\//.test(e) && (n = n.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : n + e);
        }
    }
    class eH extends Vn {
        constructor(){
            super(), this.isInstancedBufferGeometry = !0, this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
        }
        copy(e) {
            return super.copy(e), this.instanceCount = e.instanceCount, this;
        }
        toJSON() {
            const e = super.toJSON();
            return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
        }
    }
    class tH extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new Bd(s.manager);
            o.setPath(s.path), o.setRequestHeader(s.requestHeader), o.setWithCredentials(s.withCredentials), o.load(e, function(a) {
                try {
                    n(s.parse(JSON.parse(a)));
                } catch (l) {
                    i ? i(l) : console.error(l), s.manager.itemError(e);
                }
            }, r, i);
        }
        parse(e) {
            const n = {}, r = {};
            function i(m, v) {
                if (n[v] !== void 0) return n[v];
                const w = m.interleavedBuffers[v], b = s(m, w.buffer), M = D0(w.type, b), E = new T2(M, w.stride);
                return E.uuid = w.uuid, n[v] = E, E;
            }
            function s(m, v) {
                if (r[v] !== void 0) return r[v];
                const w = m.arrayBuffers[v], b = new Uint32Array(w).buffer;
                return r[v] = b, b;
            }
            const o = e.isInstancedBufferGeometry ? new eH : new Vn, a = e.data.index;
            if (a !== void 0) {
                const m = D0(a.type, a.array);
                o.setIndex(new Rr(m, 1));
            }
            const l = e.data.attributes;
            for(const m in l){
                const v = l[m];
                let _;
                if (v.isInterleavedBufferAttribute) {
                    const w = i(e.data, v.data);
                    _ = new Pm(w, v.itemSize, v.offset, v.normalized);
                } else {
                    const w = D0(v.type, v.array), b = v.isInstancedBufferAttribute ? Ty : Rr;
                    _ = new b(w, v.itemSize, v.normalized);
                }
                v.name !== void 0 && (_.name = v.name), v.usage !== void 0 && _.setUsage(v.usage), o.setAttribute(m, _);
            }
            const c = e.data.morphAttributes;
            if (c) for(const m in c){
                const v = c[m], _ = [];
                for(let w = 0, b = v.length; w < b; w++){
                    const M = v[w];
                    let E;
                    if (M.isInterleavedBufferAttribute) {
                        const T = i(e.data, M.data);
                        E = new Pm(T, M.itemSize, M.offset, M.normalized);
                    } else {
                        const T = D0(M.type, M.array);
                        E = new Rr(T, M.itemSize, M.normalized);
                    }
                    M.name !== void 0 && (E.name = M.name), _.push(E);
                }
                o.morphAttributes[m] = _;
            }
            e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
            const f = e.data.groups || e.data.drawcalls || e.data.offsets;
            if (f !== void 0) for(let m = 0, v = f.length; m !== v; ++m){
                const _ = f[m];
                o.addGroup(_.start, _.count, _.materialIndex);
            }
            const h = e.data.boundingSphere;
            if (h !== void 0) {
                const m = new ve;
                h.center !== void 0 && m.fromArray(h.center), o.boundingSphere = new ho(m, h.radius);
            }
            return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
        }
    }
    class bye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = this.path === "" ? X3.extractUrlBase(e) : this.path;
            this.resourcePath = this.resourcePath || o;
            const a = new Bd(this.manager);
            a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
                let c = null;
                try {
                    c = JSON.parse(l);
                } catch (f) {
                    i !== void 0 && i(f), console.error("THREE:ObjectLoader: Can't parse " + e + ".", f.message);
                    return;
                }
                const u = c.metadata;
                if (u === void 0 || u.type === void 0 || u.type.toLowerCase() === "geometry") {
                    i !== void 0 && i(new Error("THREE.ObjectLoader: Can't load " + e)), console.error("THREE.ObjectLoader: Can't load " + e);
                    return;
                }
                s.parse(c, n);
            }, r, i);
        }
        async loadAsync(e, n) {
            const r = this, i = this.path === "" ? X3.extractUrlBase(e) : this.path;
            this.resourcePath = this.resourcePath || i;
            const s = new Bd(this.manager);
            s.setPath(this.path), s.setRequestHeader(this.requestHeader), s.setWithCredentials(this.withCredentials);
            const o = await s.loadAsync(e, n), a = JSON.parse(o), l = a.metadata;
            if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
            return await r.parseAsync(a);
        }
        parse(e, n) {
            const r = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), s = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
                n !== void 0 && n(c);
            }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, s, l, a, r), u = this.parseSkeletons(e.skeletons, c);
            if (this.bindSkeletons(c, u), this.bindLightTargets(c), n !== void 0) {
                let f = !1;
                for(const h in o)if (o[h].data instanceof HTMLImageElement) {
                    f = !0;
                    break;
                }
                f === !1 && n(c);
            }
            return c;
        }
        async parseAsync(e) {
            const n = this.parseAnimations(e.animations), r = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, r), s = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, s), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, n), c = this.parseSkeletons(e.skeletons, l);
            return this.bindSkeletons(l, c), this.bindLightTargets(l), l;
        }
        parseShapes(e) {
            const n = {};
            if (e !== void 0) for(let r = 0, i = e.length; r < i; r++){
                const s = new pm().fromJSON(e[r]);
                n[s.uuid] = s;
            }
            return n;
        }
        parseSkeletons(e, n) {
            const r = {}, i = {};
            if (n.traverse(function(s) {
                s.isBone && (i[s.uuid] = s);
            }), e !== void 0) for(let s = 0, o = e.length; s < o; s++){
                const a = new C2().fromJSON(e[s], i);
                r[a.uuid] = a;
            }
            return r;
        }
        parseGeometries(e, n) {
            const r = {};
            if (e !== void 0) {
                const i = new tH;
                for(let s = 0, o = e.length; s < o; s++){
                    let a;
                    const l = e[s];
                    switch(l.type){
                        case "BufferGeometry":
                        case "InstancedBufferGeometry":
                            a = i.parse(l);
                            break;
                        default:
                            l.type in N8 ? a = N8[l.type].fromJSON(l, n) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                    }
                    a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), l.userData !== void 0 && (a.userData = l.userData), r[l.uuid] = a;
                }
            }
            return r;
        }
        parseMaterials(e, n) {
            const r = {}, i = {};
            if (e !== void 0) {
                const s = new W2;
                s.setTextures(n);
                for(let o = 0, a = e.length; o < a; o++){
                    const l = e[o];
                    r[l.uuid] === void 0 && (r[l.uuid] = s.parse(l)), i[l.uuid] = r[l.uuid];
                }
            }
            return i;
        }
        parseAnimations(e) {
            const n = {};
            if (e !== void 0) for(let r = 0; r < e.length; r++){
                const i = e[r], s = lw.parse(i);
                n[s.uuid] = s;
            }
            return n;
        }
        parseImages(e, n) {
            const r = this, i = {};
            let s;
            function o(l) {
                return r.manager.itemStart(l), s.load(l, function() {
                    r.manager.itemEnd(l);
                }, void 0, function() {
                    r.manager.itemError(l), r.manager.itemEnd(l);
                });
            }
            function a(l) {
                if (typeof l == "string") {
                    const c = l, u = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : r.resourcePath + c;
                    return o(u);
                } else return l.data ? {
                    data: D0(l.type, l.data),
                    width: l.width,
                    height: l.height
                } : null;
            }
            if (e !== void 0 && e.length > 0) {
                const l = new uO(n);
                s = new cw(l), s.setCrossOrigin(this.crossOrigin);
                for(let c = 0, u = e.length; c < u; c++){
                    const f = e[c], h = f.url;
                    if (Array.isArray(h)) {
                        const m = [];
                        for(let v = 0, _ = h.length; v < _; v++){
                            const w = h[v], b = a(w);
                            b !== null && (b instanceof HTMLImageElement ? m.push(b) : m.push(new vc(b.data, b.width, b.height)));
                        }
                        i[f.uuid] = new im(m);
                    } else {
                        const m = a(f.url);
                        i[f.uuid] = new im(m);
                    }
                }
            }
            return i;
        }
        async parseImagesAsync(e) {
            const n = this, r = {};
            let i;
            async function s(o) {
                if (typeof o == "string") {
                    const a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : n.resourcePath + a;
                    return await i.loadAsync(l);
                } else return o.data ? {
                    data: D0(o.type, o.data),
                    width: o.width,
                    height: o.height
                } : null;
            }
            if (e !== void 0 && e.length > 0) {
                i = new cw(this.manager), i.setCrossOrigin(this.crossOrigin);
                for(let o = 0, a = e.length; o < a; o++){
                    const l = e[o], c = l.url;
                    if (Array.isArray(c)) {
                        const u = [];
                        for(let f = 0, h = c.length; f < h; f++){
                            const m = c[f], v = await s(m);
                            v !== null && (v instanceof HTMLImageElement ? u.push(v) : u.push(new vc(v.data, v.width, v.height)));
                        }
                        r[l.uuid] = new im(u);
                    } else {
                        const u = await s(l.url);
                        r[l.uuid] = new im(u);
                    }
                }
            }
            return r;
        }
        parseTextures(e, n) {
            function r(s, o) {
                return typeof s == "number" ? s : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", s), o[s]);
            }
            const i = {};
            if (e !== void 0) for(let s = 0, o = e.length; s < o; s++){
                const a = e[s];
                a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), n[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
                const l = n[a.image], c = l.data;
                let u;
                Array.isArray(c) ? (u = new Ww, c.length === 6 && (u.needsUpdate = !0)) : (c && c.data ? u = new vc : u = new bi, c && (u.needsUpdate = !0)), u.source = l, u.uuid = a.uuid, a.name !== void 0 && (u.name = a.name), a.mapping !== void 0 && (u.mapping = r(a.mapping, wye)), a.channel !== void 0 && (u.channel = a.channel), a.offset !== void 0 && u.offset.fromArray(a.offset), a.repeat !== void 0 && u.repeat.fromArray(a.repeat), a.center !== void 0 && u.center.fromArray(a.center), a.rotation !== void 0 && (u.rotation = a.rotation), a.wrap !== void 0 && (u.wrapS = r(a.wrap[0], D8), u.wrapT = r(a.wrap[1], D8)), a.format !== void 0 && (u.format = a.format), a.internalFormat !== void 0 && (u.internalFormat = a.internalFormat), a.type !== void 0 && (u.type = a.type), a.colorSpace !== void 0 && (u.colorSpace = a.colorSpace), a.minFilter !== void 0 && (u.minFilter = r(a.minFilter, L8)), a.magFilter !== void 0 && (u.magFilter = r(a.magFilter, L8)), a.anisotropy !== void 0 && (u.anisotropy = a.anisotropy), a.flipY !== void 0 && (u.flipY = a.flipY), a.generateMipmaps !== void 0 && (u.generateMipmaps = a.generateMipmaps), a.premultiplyAlpha !== void 0 && (u.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (u.unpackAlignment = a.unpackAlignment), a.compareFunction !== void 0 && (u.compareFunction = a.compareFunction), a.userData !== void 0 && (u.userData = a.userData), i[a.uuid] = u;
            }
            return i;
        }
        parseObject(e, n, r, i, s) {
            let o;
            function a(h) {
                return n[h] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", h), n[h];
            }
            function l(h) {
                if (h !== void 0) {
                    if (Array.isArray(h)) {
                        const m = [];
                        for(let v = 0, _ = h.length; v < _; v++){
                            const w = h[v];
                            r[w] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", w), m.push(r[w]);
                        }
                        return m;
                    }
                    return r[h] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", h), r[h];
                }
            }
            function c(h) {
                return i[h] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", h), i[h];
            }
            let u, f;
            switch(e.type){
                case "Scene":
                    o = new Gk, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new jt(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new M2(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new E2(e.fog.color, e.fog.density)), e.fog.name !== "" && (o.fog.name = e.fog.name)), e.backgroundBlurriness !== void 0 && (o.backgroundBlurriness = e.backgroundBlurriness), e.backgroundIntensity !== void 0 && (o.backgroundIntensity = e.backgroundIntensity), e.backgroundRotation !== void 0 && o.backgroundRotation.fromArray(e.backgroundRotation), e.environmentIntensity !== void 0 && (o.environmentIntensity = e.environmentIntensity), e.environmentRotation !== void 0 && o.environmentRotation.fromArray(e.environmentRotation);
                    break;
                case "PerspectiveCamera":
                    o = new Oi(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                    break;
                case "OrthographicCamera":
                    o = new ch(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                    break;
                case "AmbientLight":
                    o = new Yq(e.color, e.intensity);
                    break;
                case "DirectionalLight":
                    o = new Kq(e.color, e.intensity), o.target = e.target || "";
                    break;
                case "PointLight":
                    o = new Xq(e.color, e.intensity, e.distance, e.decay);
                    break;
                case "RectAreaLight":
                    o = new Zq(e.color, e.intensity, e.width, e.height);
                    break;
                case "SpotLight":
                    o = new Gq(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay), o.target = e.target || "";
                    break;
                case "HemisphereLight":
                    o = new $q(e.color, e.groundColor, e.intensity);
                    break;
                case "LightProbe":
                    o = new Qq().fromJSON(e);
                    break;
                case "SkinnedMesh":
                    u = a(e.geometry), f = l(e.material), o = new mq(u, f), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                    break;
                case "Mesh":
                    u = a(e.geometry), f = l(e.material), o = new Ji(u, f);
                    break;
                case "InstancedMesh":
                    u = a(e.geometry), f = l(e.material);
                    const h = e.count, m = e.instanceMatrix, v = e.instanceColor;
                    o = new gq(u, f, h), o.instanceMatrix = new Ty(new Float32Array(m.array), 16), v !== void 0 && (o.instanceColor = new Ty(new Float32Array(v.array), v.itemSize));
                    break;
                case "BatchedMesh":
                    u = a(e.geometry), f = l(e.material), o = new yq(e.maxInstanceCount, e.maxVertexCount, e.maxIndexCount, f), o.geometry = u, o.perObjectFrustumCulled = e.perObjectFrustumCulled, o.sortObjects = e.sortObjects, o._drawRanges = e.drawRanges, o._reservedRanges = e.reservedRanges, o._visibility = e.visibility, o._active = e.active, o._bounds = e.bounds.map((_)=>{
                        const w = new qo;
                        w.min.fromArray(_.boxMin), w.max.fromArray(_.boxMax);
                        const b = new ho;
                        return b.radius = _.sphereRadius, b.center.fromArray(_.sphereCenter), {
                            boxInitialized: _.boxInitialized,
                            box: w,
                            sphereInitialized: _.sphereInitialized,
                            sphere: b
                        };
                    }), o._maxInstanceCount = e.maxInstanceCount, o._maxVertexCount = e.maxVertexCount, o._maxIndexCount = e.maxIndexCount, o._geometryInitialized = e.geometryInitialized, o._geometryCount = e.geometryCount, o._matricesTexture = c(e.matricesTexture.uuid), e.colorsTexture !== void 0 && (o._colorsTexture = c(e.colorsTexture.uuid));
                    break;
                case "LOD":
                    o = new pq;
                    break;
                case "Line":
                    o = new Sh(a(e.geometry), l(e.material));
                    break;
                case "LineLoop":
                    o = new vq(a(e.geometry), l(e.material));
                    break;
                case "LineSegments":
                    o = new xu(a(e.geometry), l(e.material));
                    break;
                case "PointCloud":
                case "Points":
                    o = new xq(a(e.geometry), l(e.material));
                    break;
                case "Sprite":
                    o = new hq(l(e.material));
                    break;
                case "Group":
                    o = new L0;
                    break;
                case "Bone":
                    o = new Kk;
                    break;
                default:
                    o = new ur;
            }
            if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.up !== void 0 && o.up.fromArray(e.up), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.intensity !== void 0 && (o.shadow.intensity = e.shadow.intensity), e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
                const h = e.children;
                for(let m = 0; m < h.length; m++)o.add(this.parseObject(h[m], n, r, i, s));
            }
            if (e.animations !== void 0) {
                const h = e.animations;
                for(let m = 0; m < h.length; m++){
                    const v = h[m];
                    o.animations.push(s[v]);
                }
            }
            if (e.type === "LOD") {
                e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
                const h = e.levels;
                for(let m = 0; m < h.length; m++){
                    const v = h[m], _ = o.getObjectByProperty("uuid", v.object);
                    _ !== void 0 && o.addLevel(_, v.distance, v.hysteresis);
                }
            }
            return o;
        }
        bindSkeletons(e, n) {
            Object.keys(n).length !== 0 && e.traverse(function(r) {
                if (r.isSkinnedMesh === !0 && r.skeleton !== void 0) {
                    const i = n[r.skeleton];
                    i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", r.skeleton) : r.bind(i, r.bindMatrix);
                }
            });
        }
        bindLightTargets(e) {
            e.traverse(function(n) {
                if (n.isDirectionalLight || n.isSpotLight) {
                    const r = n.target, i = e.getObjectByProperty("uuid", r);
                    i !== void 0 ? n.target = i : n.target = new ur;
                }
            });
        }
    }
    const wye = {
        UVMapping: p2,
        CubeReflectionMapping: Fd,
        CubeRefractionMapping: _h,
        EquirectangularReflectionMapping: $b,
        EquirectangularRefractionMapping: Gb,
        CubeUVReflectionMapping: zy
    }, D8 = {
        RepeatWrapping: Xb,
        ClampToEdgeWrapping: Tl,
        MirroredRepeatWrapping: Kb
    }, L8 = {
        NearestFilter: qs,
        NearestMipmapNearestFilter: Pk,
        NearestMipmapLinearFilter: O0,
        LinearFilter: ds,
        LinearMipmapNearestFilter: Jx,
        LinearMipmapLinearFilter: ru
    };
    class _ye extends Ta {
        constructor(e){
            super(e), this.isImageBitmapLoader = !0, typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
                premultiplyAlpha: "none"
            };
        }
        setOptions(e) {
            return this.options = e, this;
        }
        load(e, n, r, i) {
            e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
            const s = this, o = _d.get(e);
            if (o !== void 0) {
                if (s.manager.itemStart(e), o.then) {
                    o.then((c)=>{
                        n && n(c), s.manager.itemEnd(e);
                    }).catch((c)=>{
                        i && i(c);
                    });
                    return;
                }
                return setTimeout(function() {
                    n && n(o), s.manager.itemEnd(e);
                }, 0), o;
            }
            const a = {};
            a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader;
            const l = fetch(e, a).then(function(c) {
                return c.blob();
            }).then(function(c) {
                return createImageBitmap(c, Object.assign(s.options, {
                    colorSpaceConversion: "none"
                }));
            }).then(function(c) {
                return _d.add(e, c), n && n(c), s.manager.itemEnd(e), c;
            }).catch(function(c) {
                i && i(c), _d.remove(e), s.manager.itemError(e), s.manager.itemEnd(e);
            });
            _d.add(e, l), s.manager.itemStart(e);
        }
    }
    let aS;
    class fO {
        static getContext() {
            return aS === void 0 && (aS = new (window.AudioContext || window.webkitAudioContext)), aS;
        }
        static setContext(e) {
            aS = e;
        }
    }
    class Sye extends Ta {
        constructor(e){
            super(e);
        }
        load(e, n, r, i) {
            const s = this, o = new Bd(this.manager);
            o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(l) {
                try {
                    const c = l.slice(0);
                    fO.getContext().decodeAudioData(c, function(f) {
                        n(f);
                    }).catch(a);
                } catch (c) {
                    a(c);
                }
            }, r, i);
            function a(l) {
                i ? i(l) : console.error(l), s.manager.itemError(e);
            }
        }
    }
    const F8 = new gn, j8 = new gn, Rp = new gn;
    class Eye {
        constructor(){
            this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new Oi, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Oi, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
                focus: null,
                fov: null,
                aspect: null,
                near: null,
                far: null,
                zoom: null,
                eyeSep: null
            };
        }
        update(e) {
            const n = this._cache;
            if (n.focus !== e.focus || n.fov !== e.fov || n.aspect !== e.aspect * this.aspect || n.near !== e.near || n.far !== e.far || n.zoom !== e.zoom || n.eyeSep !== this.eyeSep) {
                n.focus = e.focus, n.fov = e.fov, n.aspect = e.aspect * this.aspect, n.near = e.near, n.far = e.far, n.zoom = e.zoom, n.eyeSep = this.eyeSep, Rp.copy(e.projectionMatrix);
                const i = n.eyeSep / 2, s = i * n.near / n.focus, o = n.near * Math.tan(fm * n.fov * .5) / n.zoom;
                let a, l;
                j8.elements[12] = -i, F8.elements[12] = i, a = -o * n.aspect + s, l = o * n.aspect + s, Rp.elements[0] = 2 * n.near / (l - a), Rp.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(Rp), a = -o * n.aspect - s, l = o * n.aspect - s, Rp.elements[0] = 2 * n.near / (l - a), Rp.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(Rp);
            }
            this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(j8), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(F8);
        }
    }
    class nH extends Oi {
        constructor(e = []){
            super(), this.isArrayCamera = !0, this.cameras = e, this.index = 0;
        }
    }
    class hO {
        constructor(e = !0){
            this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
        }
        start() {
            this.startTime = B8(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
        }
        stop() {
            this.getElapsedTime(), this.running = !1, this.autoStart = !1;
        }
        getElapsedTime() {
            return this.getDelta(), this.elapsedTime;
        }
        getDelta() {
            let e = 0;
            if (this.autoStart && !this.running) return this.start(), 0;
            if (this.running) {
                const n = B8();
                e = (n - this.oldTime) / 1e3, this.oldTime = n, this.elapsedTime += e;
            }
            return e;
        }
    }
    function B8() {
        return performance.now();
    }
    const Ip = new ve, U8 = new fo, Mye = new ve, Ap = new ve;
    class Tye extends ur {
        constructor(){
            super(), this.type = "AudioListener", this.context = fO.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new hO;
        }
        getInput() {
            return this.gain;
        }
        removeFilter() {
            return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
        }
        getFilter() {
            return this.filter;
        }
        setFilter(e) {
            return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
        }
        getMasterVolume() {
            return this.gain.gain.value;
        }
        setMasterVolume(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
        }
        updateMatrixWorld(e) {
            super.updateMatrixWorld(e);
            const n = this.context.listener, r = this.up;
            if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Ip, U8, Mye), Ap.set(0, 0, -1).applyQuaternion(U8), n.positionX) {
                const i = this.context.currentTime + this.timeDelta;
                n.positionX.linearRampToValueAtTime(Ip.x, i), n.positionY.linearRampToValueAtTime(Ip.y, i), n.positionZ.linearRampToValueAtTime(Ip.z, i), n.forwardX.linearRampToValueAtTime(Ap.x, i), n.forwardY.linearRampToValueAtTime(Ap.y, i), n.forwardZ.linearRampToValueAtTime(Ap.z, i), n.upX.linearRampToValueAtTime(r.x, i), n.upY.linearRampToValueAtTime(r.y, i), n.upZ.linearRampToValueAtTime(r.z, i);
            } else n.setPosition(Ip.x, Ip.y, Ip.z), n.setOrientation(Ap.x, Ap.y, Ap.z, r.x, r.y, r.z);
        }
    }
    class rH extends ur {
        constructor(e){
            super(), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
        }
        getOutput() {
            return this.gain;
        }
        setNodeSource(e) {
            return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
        }
        setMediaElementSource(e) {
            return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
        }
        setMediaStreamSource(e) {
            return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
        }
        setBuffer(e) {
            return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
        }
        play(e = 0) {
            if (this.isPlaying === !0) {
                console.warn("THREE.Audio: Audio is already playing.");
                return;
            }
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            this._startedAt = this.context.currentTime + e;
            const n = this.context.createBufferSource();
            return n.buffer = this.buffer, n.loop = this.loop, n.loopStart = this.loopStart, n.loopEnd = this.loopEnd, n.onended = this.onEnded.bind(this), n.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = n, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
        }
        pause() {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
        }
        stop(e = 0) {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this._progress = 0, this.source !== null && (this.source.stop(this.context.currentTime + e), this.source.onended = null), this.isPlaying = !1, this;
        }
        connect() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for(let e = 1, n = this.filters.length; e < n; e++)this.filters[e - 1].connect(this.filters[e]);
                this.filters[this.filters.length - 1].connect(this.getOutput());
            } else this.source.connect(this.getOutput());
            return this._connected = !0, this;
        }
        disconnect() {
            if (this._connected !== !1) {
                if (this.filters.length > 0) {
                    this.source.disconnect(this.filters[0]);
                    for(let e = 1, n = this.filters.length; e < n; e++)this.filters[e - 1].disconnect(this.filters[e]);
                    this.filters[this.filters.length - 1].disconnect(this.getOutput());
                } else this.source.disconnect(this.getOutput());
                return this._connected = !1, this;
            }
        }
        getFilters() {
            return this.filters;
        }
        setFilters(e) {
            return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
        }
        setDetune(e) {
            return this.detune = e, this.isPlaying === !0 && this.source.detune !== void 0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
        }
        getDetune() {
            return this.detune;
        }
        getFilter() {
            return this.getFilters()[0];
        }
        setFilter(e) {
            return this.setFilters(e ? [
                e
            ] : []);
        }
        setPlaybackRate(e) {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
        }
        getPlaybackRate() {
            return this.playbackRate;
        }
        onEnded() {
            this.isPlaying = !1, this._progress = 0;
        }
        getLoop() {
            return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
        }
        setLoop(e) {
            if (this.hasPlaybackControl === !1) {
                console.warn("THREE.Audio: this Audio has no playback control.");
                return;
            }
            return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
        }
        setLoopStart(e) {
            return this.loopStart = e, this;
        }
        setLoopEnd(e) {
            return this.loopEnd = e, this;
        }
        getVolume() {
            return this.gain.gain.value;
        }
        setVolume(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
        }
        copy(e, n) {
            return super.copy(e, n), e.sourceType !== "buffer" ? (console.warn("THREE.Audio: Audio source type cannot be copied."), this) : (this.autoplay = e.autoplay, this.buffer = e.buffer, this.detune = e.detune, this.loop = e.loop, this.loopStart = e.loopStart, this.loopEnd = e.loopEnd, this.offset = e.offset, this.duration = e.duration, this.playbackRate = e.playbackRate, this.hasPlaybackControl = e.hasPlaybackControl, this.sourceType = e.sourceType, this.filters = e.filters.slice(), this);
        }
        clone(e) {
            return new this.constructor(this.listener).copy(this, e);
        }
    }
    const Np = new ve, z8 = new fo, Cye = new ve, Pp = new ve;
    class Rye extends rH {
        constructor(e){
            super(e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
        }
        connect() {
            super.connect(), this.panner.connect(this.gain);
        }
        disconnect() {
            super.disconnect(), this.panner.disconnect(this.gain);
        }
        getOutput() {
            return this.panner;
        }
        getRefDistance() {
            return this.panner.refDistance;
        }
        setRefDistance(e) {
            return this.panner.refDistance = e, this;
        }
        getRolloffFactor() {
            return this.panner.rolloffFactor;
        }
        setRolloffFactor(e) {
            return this.panner.rolloffFactor = e, this;
        }
        getDistanceModel() {
            return this.panner.distanceModel;
        }
        setDistanceModel(e) {
            return this.panner.distanceModel = e, this;
        }
        getMaxDistance() {
            return this.panner.maxDistance;
        }
        setMaxDistance(e) {
            return this.panner.maxDistance = e, this;
        }
        setDirectionalCone(e, n, r) {
            return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = n, this.panner.coneOuterGain = r, this;
        }
        updateMatrixWorld(e) {
            if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
            this.matrixWorld.decompose(Np, z8, Cye), Pp.set(0, 0, 1).applyQuaternion(z8);
            const n = this.panner;
            if (n.positionX) {
                const r = this.context.currentTime + this.listener.timeDelta;
                n.positionX.linearRampToValueAtTime(Np.x, r), n.positionY.linearRampToValueAtTime(Np.y, r), n.positionZ.linearRampToValueAtTime(Np.z, r), n.orientationX.linearRampToValueAtTime(Pp.x, r), n.orientationY.linearRampToValueAtTime(Pp.y, r), n.orientationZ.linearRampToValueAtTime(Pp.z, r);
            } else n.setPosition(Np.x, Np.y, Np.z), n.setOrientation(Pp.x, Pp.y, Pp.z);
        }
    }
    class Iye {
        constructor(e, n = 2048){
            this.analyser = e.context.createAnalyser(), this.analyser.fftSize = n, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
        }
        getFrequencyData() {
            return this.analyser.getByteFrequencyData(this.data), this.data;
        }
        getAverageFrequency() {
            let e = 0;
            const n = this.getFrequencyData();
            for(let r = 0; r < n.length; r++)e += n[r];
            return e / n.length;
        }
    }
    class iH {
        constructor(e, n, r){
            this.binding = e, this.valueSize = r;
            let i, s, o;
            switch(n){
                case "quaternion":
                    i = this._slerp, s = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(r * 6), this._workIndex = 5;
                    break;
                case "string":
                case "bool":
                    i = this._select, s = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(r * 5);
                    break;
                default:
                    i = this._lerp, s = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(r * 5);
            }
            this._mixBufferRegion = i, this._mixBufferRegionAdditive = s, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
        }
        accumulate(e, n) {
            const r = this.buffer, i = this.valueSize, s = e * i + i;
            let o = this.cumulativeWeight;
            if (o === 0) {
                for(let a = 0; a !== i; ++a)r[s + a] = r[a];
                o = n;
            } else {
                o += n;
                const a = n / o;
                this._mixBufferRegion(r, s, 0, a, i);
            }
            this.cumulativeWeight = o;
        }
        accumulateAdditive(e) {
            const n = this.buffer, r = this.valueSize, i = r * this._addIndex;
            this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(n, i, 0, e, r), this.cumulativeWeightAdditive += e;
        }
        apply(e) {
            const n = this.valueSize, r = this.buffer, i = e * n + n, s = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
            if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, s < 1) {
                const l = n * this._origIndex;
                this._mixBufferRegion(r, i, l, 1 - s, n);
            }
            o > 0 && this._mixBufferRegionAdditive(r, i, this._addIndex * n, 1, n);
            for(let l = n, c = n + n; l !== c; ++l)if (r[l] !== r[l + n]) {
                a.setValue(r, i);
                break;
            }
        }
        saveOriginalState() {
            const e = this.binding, n = this.buffer, r = this.valueSize, i = r * this._origIndex;
            e.getValue(n, i);
            for(let s = r, o = i; s !== o; ++s)n[s] = n[i + s % r];
            this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
        }
        restoreOriginalState() {
            const e = this.valueSize * 3;
            this.binding.setValue(this.buffer, e);
        }
        _setAdditiveIdentityNumeric() {
            const e = this._addIndex * this.valueSize, n = e + this.valueSize;
            for(let r = e; r < n; r++)this.buffer[r] = 0;
        }
        _setAdditiveIdentityQuaternion() {
            this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
        }
        _setAdditiveIdentityOther() {
            const e = this._origIndex * this.valueSize, n = this._addIndex * this.valueSize;
            for(let r = 0; r < this.valueSize; r++)this.buffer[n + r] = this.buffer[e + r];
        }
        _select(e, n, r, i, s) {
            if (i >= .5) for(let o = 0; o !== s; ++o)e[n + o] = e[r + o];
        }
        _slerp(e, n, r, i) {
            fo.slerpFlat(e, n, e, n, e, r, i);
        }
        _slerpAdditive(e, n, r, i, s) {
            const o = this._workIndex * s;
            fo.multiplyQuaternionsFlat(e, o, e, n, e, r), fo.slerpFlat(e, n, e, n, e, o, i);
        }
        _lerp(e, n, r, i, s) {
            const o = 1 - i;
            for(let a = 0; a !== s; ++a){
                const l = n + a;
                e[l] = e[l] * o + e[r + a] * i;
            }
        }
        _lerpAdditive(e, n, r, i, s) {
            for(let o = 0; o !== s; ++o){
                const a = n + o;
                e[a] = e[a] + e[r + o] * i;
            }
        }
    }
    const pO = "\\[\\]\\.:\\/", Aye = new RegExp("[" + pO + "]", "g"), mO = "[^" + pO + "]", Nye = "[^" + pO.replace("\\.", "") + "]", Pye = /((?:WC+[\/:])*)/.source.replace("WC", mO), kye = /(WCOD+)?/.source.replace("WCOD", Nye), Oye = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", mO), Dye = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", mO), Lye = new RegExp("^" + Pye + kye + Oye + Dye + "$"), Fye = [
        "material",
        "materials",
        "bones",
        "map"
    ];
    class jye {
        constructor(e, n, r){
            const i = r || ar.parseTrackName(n);
            this._targetGroup = e, this._bindings = e.subscribe_(n, i);
        }
        getValue(e, n) {
            this.bind();
            const r = this._targetGroup.nCachedObjects_, i = this._bindings[r];
            i !== void 0 && i.getValue(e, n);
        }
        setValue(e, n) {
            const r = this._bindings;
            for(let i = this._targetGroup.nCachedObjects_, s = r.length; i !== s; ++i)r[i].setValue(e, n);
        }
        bind() {
            const e = this._bindings;
            for(let n = this._targetGroup.nCachedObjects_, r = e.length; n !== r; ++n)e[n].bind();
        }
        unbind() {
            const e = this._bindings;
            for(let n = this._targetGroup.nCachedObjects_, r = e.length; n !== r; ++n)e[n].unbind();
        }
    }
    class ar {
        constructor(e, n, r){
            this.path = n, this.parsedPath = r || ar.parseTrackName(n), this.node = ar.findNode(e, this.parsedPath.nodeName), this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
        }
        static create(e, n, r) {
            return e && e.isAnimationObjectGroup ? new ar.Composite(e, n, r) : new ar(e, n, r);
        }
        static sanitizeNodeName(e) {
            return e.replace(/\s/g, "_").replace(Aye, "");
        }
        static parseTrackName(e) {
            const n = Lye.exec(e);
            if (n === null) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
            const r = {
                nodeName: n[2],
                objectName: n[3],
                objectIndex: n[4],
                propertyName: n[5],
                propertyIndex: n[6]
            }, i = r.nodeName && r.nodeName.lastIndexOf(".");
            if (i !== void 0 && i !== -1) {
                const s = r.nodeName.substring(i + 1);
                Fye.indexOf(s) !== -1 && (r.nodeName = r.nodeName.substring(0, i), r.objectName = s);
            }
            if (r.propertyName === null || r.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
            return r;
        }
        static findNode(e, n) {
            if (n === void 0 || n === "" || n === "." || n === -1 || n === e.name || n === e.uuid) return e;
            if (e.skeleton) {
                const r = e.skeleton.getBoneByName(n);
                if (r !== void 0) return r;
            }
            if (e.children) {
                const r = function(s) {
                    for(let o = 0; o < s.length; o++){
                        const a = s[o];
                        if (a.name === n || a.uuid === n) return a;
                        const l = r(a.children);
                        if (l) return l;
                    }
                    return null;
                }, i = r(e.children);
                if (i) return i;
            }
            return null;
        }
        _getValue_unavailable() {}
        _setValue_unavailable() {}
        _getValue_direct(e, n) {
            e[n] = this.targetObject[this.propertyName];
        }
        _getValue_array(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)e[n++] = r[i];
        }
        _getValue_arrayElement(e, n) {
            e[n] = this.resolvedProperty[this.propertyIndex];
        }
        _getValue_toArray(e, n) {
            this.resolvedProperty.toArray(e, n);
        }
        _setValue_direct(e, n) {
            this.targetObject[this.propertyName] = e[n];
        }
        _setValue_direct_setNeedsUpdate(e, n) {
            this.targetObject[this.propertyName] = e[n], this.targetObject.needsUpdate = !0;
        }
        _setValue_direct_setMatrixWorldNeedsUpdate(e, n) {
            this.targetObject[this.propertyName] = e[n], this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_array(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)r[i] = e[n++];
        }
        _setValue_array_setNeedsUpdate(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)r[i] = e[n++];
            this.targetObject.needsUpdate = !0;
        }
        _setValue_array_setMatrixWorldNeedsUpdate(e, n) {
            const r = this.resolvedProperty;
            for(let i = 0, s = r.length; i !== s; ++i)r[i] = e[n++];
            this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_arrayElement(e, n) {
            this.resolvedProperty[this.propertyIndex] = e[n];
        }
        _setValue_arrayElement_setNeedsUpdate(e, n) {
            this.resolvedProperty[this.propertyIndex] = e[n], this.targetObject.needsUpdate = !0;
        }
        _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, n) {
            this.resolvedProperty[this.propertyIndex] = e[n], this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _setValue_fromArray(e, n) {
            this.resolvedProperty.fromArray(e, n);
        }
        _setValue_fromArray_setNeedsUpdate(e, n) {
            this.resolvedProperty.fromArray(e, n), this.targetObject.needsUpdate = !0;
        }
        _setValue_fromArray_setMatrixWorldNeedsUpdate(e, n) {
            this.resolvedProperty.fromArray(e, n), this.targetObject.matrixWorldNeedsUpdate = !0;
        }
        _getValue_unbound(e, n) {
            this.bind(), this.getValue(e, n);
        }
        _setValue_unbound(e, n) {
            this.bind(), this.setValue(e, n);
        }
        bind() {
            let e = this.node;
            const n = this.parsedPath, r = n.objectName, i = n.propertyName;
            let s = n.propertyIndex;
            if (e || (e = ar.findNode(this.rootNode, n.nodeName), this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
                console.warn("THREE.PropertyBinding: No target node found for track: " + this.path + ".");
                return;
            }
            if (r) {
                let c = n.objectIndex;
                switch(r){
                    case "materials":
                        if (!e.material) {
                            console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            return;
                        }
                        if (!e.material.materials) {
                            console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                            return;
                        }
                        e = e.material.materials;
                        break;
                    case "bones":
                        if (!e.skeleton) {
                            console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                            return;
                        }
                        e = e.skeleton.bones;
                        for(let u = 0; u < e.length; u++)if (e[u].name === c) {
                            c = u;
                            break;
                        }
                        break;
                    case "map":
                        if ("map" in e) {
                            e = e.map;
                            break;
                        }
                        if (!e.material) {
                            console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            return;
                        }
                        if (!e.material.map) {
                            console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.", this);
                            return;
                        }
                        e = e.material.map;
                        break;
                    default:
                        if (e[r] === void 0) {
                            console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                            return;
                        }
                        e = e[r];
                }
                if (c !== void 0) {
                    if (e[c] === void 0) {
                        console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                        return;
                    }
                    e = e[c];
                }
            }
            const o = e[i];
            if (o === void 0) {
                const c = n.nodeName;
                console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + i + " but it wasn't found.", e);
                return;
            }
            let a = this.Versioning.None;
            this.targetObject = e, e.isMaterial === !0 ? a = this.Versioning.NeedsUpdate : e.isObject3D === !0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
            let l = this.BindingType.Direct;
            if (s !== void 0) {
                if (i === "morphTargetInfluences") {
                    if (!e.geometry) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                        return;
                    }
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[s] !== void 0 && (s = e.morphTargetDictionary[s]);
                }
                l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = s;
            } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
            this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
        }
        unbind() {
            this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
        }
    }
    ar.Composite = jye;
    ar.prototype.BindingType = {
        Direct: 0,
        EntireArray: 1,
        ArrayElement: 2,
        HasFromToArray: 3
    };
    ar.prototype.Versioning = {
        None: 0,
        NeedsUpdate: 1,
        MatrixWorldNeedsUpdate: 2
    };
    ar.prototype.GetterByBindingType = [
        ar.prototype._getValue_direct,
        ar.prototype._getValue_array,
        ar.prototype._getValue_arrayElement,
        ar.prototype._getValue_toArray
    ];
    ar.prototype.SetterByBindingTypeAndVersioning = [
        [
            ar.prototype._setValue_direct,
            ar.prototype._setValue_direct_setNeedsUpdate,
            ar.prototype._setValue_direct_setMatrixWorldNeedsUpdate
        ],
        [
            ar.prototype._setValue_array,
            ar.prototype._setValue_array_setNeedsUpdate,
            ar.prototype._setValue_array_setMatrixWorldNeedsUpdate
        ],
        [
            ar.prototype._setValue_arrayElement,
            ar.prototype._setValue_arrayElement_setNeedsUpdate,
            ar.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
        ],
        [
            ar.prototype._setValue_fromArray,
            ar.prototype._setValue_fromArray_setNeedsUpdate,
            ar.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
        ]
    ];
    class Bye {
        constructor(){
            this.isAnimationObjectGroup = !0, this.uuid = Ya(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
            const e = {};
            this._indicesByUUID = e;
            for(let r = 0, i = arguments.length; r !== i; ++r)e[arguments[r].uuid] = r;
            this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
            const n = this;
            this.stats = {
                objects: {
                    get total () {
                        return n._objects.length;
                    },
                    get inUse () {
                        return this.total - n.nCachedObjects_;
                    }
                },
                get bindingsPerObject () {
                    return n._bindings.length;
                }
            };
        }
        add() {
            const e = this._objects, n = this._indicesByUUID, r = this._paths, i = this._parsedPaths, s = this._bindings, o = s.length;
            let a, l = e.length, c = this.nCachedObjects_;
            for(let u = 0, f = arguments.length; u !== f; ++u){
                const h = arguments[u], m = h.uuid;
                let v = n[m];
                if (v === void 0) {
                    v = l++, n[m] = v, e.push(h);
                    for(let _ = 0, w = o; _ !== w; ++_)s[_].push(new ar(h, r[_], i[_]));
                } else if (v < c) {
                    a = e[v];
                    const _ = --c, w = e[_];
                    n[w.uuid] = v, e[v] = w, n[m] = _, e[_] = h;
                    for(let b = 0, M = o; b !== M; ++b){
                        const E = s[b], T = E[_];
                        let P = E[v];
                        E[v] = T, P === void 0 && (P = new ar(h, r[b], i[b])), E[_] = P;
                    }
                } else e[v] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
            }
            this.nCachedObjects_ = c;
        }
        remove() {
            const e = this._objects, n = this._indicesByUUID, r = this._bindings, i = r.length;
            let s = this.nCachedObjects_;
            for(let o = 0, a = arguments.length; o !== a; ++o){
                const l = arguments[o], c = l.uuid, u = n[c];
                if (u !== void 0 && u >= s) {
                    const f = s++, h = e[f];
                    n[h.uuid] = u, e[u] = h, n[c] = f, e[f] = l;
                    for(let m = 0, v = i; m !== v; ++m){
                        const _ = r[m], w = _[f], b = _[u];
                        _[u] = w, _[f] = b;
                    }
                }
            }
            this.nCachedObjects_ = s;
        }
        uncache() {
            const e = this._objects, n = this._indicesByUUID, r = this._bindings, i = r.length;
            let s = this.nCachedObjects_, o = e.length;
            for(let a = 0, l = arguments.length; a !== l; ++a){
                const c = arguments[a], u = c.uuid, f = n[u];
                if (f !== void 0) if (delete n[u], f < s) {
                    const h = --s, m = e[h], v = --o, _ = e[v];
                    n[m.uuid] = f, e[f] = m, n[_.uuid] = h, e[h] = _, e.pop();
                    for(let w = 0, b = i; w !== b; ++w){
                        const M = r[w], E = M[h], T = M[v];
                        M[f] = E, M[h] = T, M.pop();
                    }
                } else {
                    const h = --o, m = e[h];
                    h > 0 && (n[m.uuid] = f), e[f] = m, e.pop();
                    for(let v = 0, _ = i; v !== _; ++v){
                        const w = r[v];
                        w[f] = w[h], w.pop();
                    }
                }
            }
            this.nCachedObjects_ = s;
        }
        subscribe_(e, n) {
            const r = this._bindingsIndicesByPath;
            let i = r[e];
            const s = this._bindings;
            if (i !== void 0) return s[i];
            const o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, u = this.nCachedObjects_, f = new Array(c);
            i = s.length, r[e] = i, o.push(e), a.push(n), s.push(f);
            for(let h = u, m = l.length; h !== m; ++h){
                const v = l[h];
                f[h] = new ar(v, e, n);
            }
            return f;
        }
        unsubscribe_(e) {
            const n = this._bindingsIndicesByPath, r = n[e];
            if (r !== void 0) {
                const i = this._paths, s = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
                n[c] = r, o[r] = l, o.pop(), s[r] = s[a], s.pop(), i[r] = i[a], i.pop();
            }
        }
    }
    class sH {
        constructor(e, n, r = null, i = n.blendMode){
            this._mixer = e, this._clip = n, this._localRoot = r, this.blendMode = i;
            const s = n.tracks, o = s.length, a = new Array(o), l = {
                endingStart: nm,
                endingEnd: nm
            };
            for(let c = 0; c !== o; ++c){
                const u = s[c].createInterpolant(null);
                a[c] = u, u.settings = l;
            }
            this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = $W, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
        }
        play() {
            return this._mixer._activateAction(this), this;
        }
        stop() {
            return this._mixer._deactivateAction(this), this.reset();
        }
        reset() {
            return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
        }
        isRunning() {
            return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
        }
        isScheduled() {
            return this._mixer._isActiveAction(this);
        }
        startAt(e) {
            return this._startTime = e, this;
        }
        setLoop(e, n) {
            return this.loop = e, this.repetitions = n, this;
        }
        setEffectiveWeight(e) {
            return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
        }
        getEffectiveWeight() {
            return this._effectiveWeight;
        }
        fadeIn(e) {
            return this._scheduleFading(e, 0, 1);
        }
        fadeOut(e) {
            return this._scheduleFading(e, 1, 0);
        }
        crossFadeFrom(e, n, r) {
            if (e.fadeOut(n), this.fadeIn(n), r) {
                const i = this._clip.duration, s = e._clip.duration, o = s / i, a = i / s;
                e.warp(1, o, n), this.warp(a, 1, n);
            }
            return this;
        }
        crossFadeTo(e, n, r) {
            return e.crossFadeFrom(this, n, r);
        }
        stopFading() {
            const e = this._weightInterpolant;
            return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
        }
        setEffectiveTimeScale(e) {
            return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
        }
        getEffectiveTimeScale() {
            return this._effectiveTimeScale;
        }
        setDuration(e) {
            return this.timeScale = this._clip.duration / e, this.stopWarping();
        }
        syncWith(e) {
            return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
        }
        halt(e) {
            return this.warp(this._effectiveTimeScale, 0, e);
        }
        warp(e, n, r) {
            const i = this._mixer, s = i.time, o = this.timeScale;
            let a = this._timeScaleInterpolant;
            a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
            const l = a.parameterPositions, c = a.sampleValues;
            return l[0] = s, l[1] = s + r, c[0] = e / o, c[1] = n / o, this;
        }
        stopWarping() {
            const e = this._timeScaleInterpolant;
            return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
        }
        getMixer() {
            return this._mixer;
        }
        getClip() {
            return this._clip;
        }
        getRoot() {
            return this._localRoot || this._mixer._root;
        }
        _update(e, n, r, i) {
            if (!this.enabled) {
                this._updateWeight(e);
                return;
            }
            const s = this._startTime;
            if (s !== null) {
                const l = (e - s) * r;
                l < 0 || r === 0 ? n = 0 : (this._startTime = null, n = r * l);
            }
            n *= this._updateTimeScale(e);
            const o = this._updateTime(n), a = this._updateWeight(e);
            if (a > 0) {
                const l = this._interpolants, c = this._propertyBindings;
                switch(this.blendMode){
                    case Vk:
                        for(let u = 0, f = l.length; u !== f; ++u)l[u].evaluate(o), c[u].accumulateAdditive(a);
                        break;
                    case w2:
                    default:
                        for(let u = 0, f = l.length; u !== f; ++u)l[u].evaluate(o), c[u].accumulate(i, a);
                }
            }
        }
        _updateWeight(e) {
            let n = 0;
            if (this.enabled) {
                n = this.weight;
                const r = this._weightInterpolant;
                if (r !== null) {
                    const i = r.evaluate(e)[0];
                    n *= i, e > r.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
                }
            }
            return this._effectiveWeight = n, n;
        }
        _updateTimeScale(e) {
            let n = 0;
            if (!this.paused) {
                n = this.timeScale;
                const r = this._timeScaleInterpolant;
                if (r !== null) {
                    const i = r.evaluate(e)[0];
                    n *= i, e > r.parameterPositions[1] && (this.stopWarping(), n === 0 ? this.paused = !0 : this.timeScale = n);
                }
            }
            return this._effectiveTimeScale = n, n;
        }
        _updateTime(e) {
            const n = this._clip.duration, r = this.loop;
            let i = this.time + e, s = this._loopCount;
            const o = r === GW;
            if (e === 0) return s === -1 ? i : o && (s & 1) === 1 ? n - i : i;
            if (r === HW) {
                s === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                e: {
                    if (i >= n) i = n;
                    else if (i < 0) i = 0;
                    else {
                        this.time = i;
                        break e;
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e < 0 ? -1 : 1
                    });
                }
            } else {
                if (s === -1 && (e >= 0 ? (s = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= n || i < 0) {
                    const a = Math.floor(i / n);
                    i -= n * a, s += Math.abs(a);
                    const l = this.repetitions - s;
                    if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? n : 0, this.time = i, this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e > 0 ? 1 : -1
                    });
                    else {
                        if (l === 1) {
                            const c = e < 0;
                            this._setEndings(c, !c, o);
                        } else this._setEndings(!1, !1, o);
                        this._loopCount = s, this.time = i, this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: a
                        });
                    }
                } else this.time = i;
                if (o && (s & 1) === 1) return n - i;
            }
            return i;
        }
        _setEndings(e, n, r) {
            const i = this._interpolantSettings;
            r ? (i.endingStart = rm, i.endingEnd = rm) : (e ? i.endingStart = this.zeroSlopeAtStart ? rm : nm : i.endingStart = Zb, n ? i.endingEnd = this.zeroSlopeAtEnd ? rm : nm : i.endingEnd = Zb);
        }
        _scheduleFading(e, n, r) {
            const i = this._mixer, s = i.time;
            let o = this._weightInterpolant;
            o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
            const a = o.parameterPositions, l = o.sampleValues;
            return a[0] = s, l[0] = n, a[1] = s + e, l[1] = r, this;
        }
    }
    const Uye = new Float32Array(1);
    class zye extends vu {
        constructor(e){
            super(), this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
        }
        _bindAction(e, n) {
            const r = e._localRoot || this._root, i = e._clip.tracks, s = i.length, o = e._propertyBindings, a = e._interpolants, l = r.uuid, c = this._bindingsByRootAndName;
            let u = c[l];
            u === void 0 && (u = {}, c[l] = u);
            for(let f = 0; f !== s; ++f){
                const h = i[f], m = h.name;
                let v = u[m];
                if (v !== void 0) ++v.referenceCount, o[f] = v;
                else {
                    if (v = o[f], v !== void 0) {
                        v._cacheIndex === null && (++v.referenceCount, this._addInactiveBinding(v, l, m));
                        continue;
                    }
                    const _ = n && n._propertyBindings[f].binding.parsedPath;
                    v = new iH(ar.create(r, m, _), h.ValueTypeName, h.getValueSize()), ++v.referenceCount, this._addInactiveBinding(v, l, m), o[f] = v;
                }
                a[f].resultBuffer = v.buffer;
            }
        }
        _activateAction(e) {
            if (!this._isActiveAction(e)) {
                if (e._cacheIndex === null) {
                    const r = (e._localRoot || this._root).uuid, i = e._clip.uuid, s = this._actionsByClip[i];
                    this._bindAction(e, s && s.knownActions[0]), this._addInactiveAction(e, i, r);
                }
                const n = e._propertyBindings;
                for(let r = 0, i = n.length; r !== i; ++r){
                    const s = n[r];
                    s.useCount++ === 0 && (this._lendBinding(s), s.saveOriginalState());
                }
                this._lendAction(e);
            }
        }
        _deactivateAction(e) {
            if (this._isActiveAction(e)) {
                const n = e._propertyBindings;
                for(let r = 0, i = n.length; r !== i; ++r){
                    const s = n[r];
                    --s.useCount === 0 && (s.restoreOriginalState(), this._takeBackBinding(s));
                }
                this._takeBackAction(e);
            }
        }
        _initMemoryManager() {
            this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
            const e = this;
            this.stats = {
                actions: {
                    get total () {
                        return e._actions.length;
                    },
                    get inUse () {
                        return e._nActiveActions;
                    }
                },
                bindings: {
                    get total () {
                        return e._bindings.length;
                    },
                    get inUse () {
                        return e._nActiveBindings;
                    }
                },
                controlInterpolants: {
                    get total () {
                        return e._controlInterpolants.length;
                    },
                    get inUse () {
                        return e._nActiveControlInterpolants;
                    }
                }
            };
        }
        _isActiveAction(e) {
            const n = e._cacheIndex;
            return n !== null && n < this._nActiveActions;
        }
        _addInactiveAction(e, n, r) {
            const i = this._actions, s = this._actionsByClip;
            let o = s[n];
            if (o === void 0) o = {
                knownActions: [
                    e
                ],
                actionByRoot: {}
            }, e._byClipCacheIndex = 0, s[n] = o;
            else {
                const a = o.knownActions;
                e._byClipCacheIndex = a.length, a.push(e);
            }
            e._cacheIndex = i.length, i.push(e), o.actionByRoot[r] = e;
        }
        _removeInactiveAction(e) {
            const n = this._actions, r = n[n.length - 1], i = e._cacheIndex;
            r._cacheIndex = i, n[i] = r, n.pop(), e._cacheIndex = null;
            const s = e._clip.uuid, o = this._actionsByClip, a = o[s], l = a.knownActions, c = l[l.length - 1], u = e._byClipCacheIndex;
            c._byClipCacheIndex = u, l[u] = c, l.pop(), e._byClipCacheIndex = null;
            const f = a.actionByRoot, h = (e._localRoot || this._root).uuid;
            delete f[h], l.length === 0 && delete o[s], this._removeInactiveBindingsForAction(e);
        }
        _removeInactiveBindingsForAction(e) {
            const n = e._propertyBindings;
            for(let r = 0, i = n.length; r !== i; ++r){
                const s = n[r];
                --s.referenceCount === 0 && this._removeInactiveBinding(s);
            }
        }
        _lendAction(e) {
            const n = this._actions, r = e._cacheIndex, i = this._nActiveActions++, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _takeBackAction(e) {
            const n = this._actions, r = e._cacheIndex, i = --this._nActiveActions, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _addInactiveBinding(e, n, r) {
            const i = this._bindingsByRootAndName, s = this._bindings;
            let o = i[n];
            o === void 0 && (o = {}, i[n] = o), o[r] = e, e._cacheIndex = s.length, s.push(e);
        }
        _removeInactiveBinding(e) {
            const n = this._bindings, r = e.binding, i = r.rootNode.uuid, s = r.path, o = this._bindingsByRootAndName, a = o[i], l = n[n.length - 1], c = e._cacheIndex;
            l._cacheIndex = c, n[c] = l, n.pop(), delete a[s], Object.keys(a).length === 0 && delete o[i];
        }
        _lendBinding(e) {
            const n = this._bindings, r = e._cacheIndex, i = this._nActiveBindings++, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _takeBackBinding(e) {
            const n = this._bindings, r = e._cacheIndex, i = --this._nActiveBindings, s = n[i];
            e._cacheIndex = i, n[i] = e, s._cacheIndex = r, n[r] = s;
        }
        _lendControlInterpolant() {
            const e = this._controlInterpolants, n = this._nActiveControlInterpolants++;
            let r = e[n];
            return r === void 0 && (r = new lO(new Float32Array(2), new Float32Array(2), 1, Uye), r.__cacheIndex = n, e[n] = r), r;
        }
        _takeBackControlInterpolant(e) {
            const n = this._controlInterpolants, r = e.__cacheIndex, i = --this._nActiveControlInterpolants, s = n[i];
            e.__cacheIndex = i, n[i] = e, s.__cacheIndex = r, n[r] = s;
        }
        clipAction(e, n, r) {
            const i = n || this._root, s = i.uuid;
            let o = typeof e == "string" ? lw.findByName(i, e) : e;
            const a = o !== null ? o.uuid : e, l = this._actionsByClip[a];
            let c = null;
            if (r === void 0 && (o !== null ? r = o.blendMode : r = w2), l !== void 0) {
                const f = l.actionByRoot[s];
                if (f !== void 0 && f.blendMode === r) return f;
                c = l.knownActions[0], o === null && (o = c._clip);
            }
            if (o === null) return null;
            const u = new sH(this, o, n, r);
            return this._bindAction(u, c), this._addInactiveAction(u, a, s), u;
        }
        existingAction(e, n) {
            const r = n || this._root, i = r.uuid, s = typeof e == "string" ? lw.findByName(r, e) : e, o = s ? s.uuid : e, a = this._actionsByClip[o];
            return a !== void 0 && a.actionByRoot[i] || null;
        }
        stopAllAction() {
            const e = this._actions, n = this._nActiveActions;
            for(let r = n - 1; r >= 0; --r)e[r].stop();
            return this;
        }
        update(e) {
            e *= this.timeScale;
            const n = this._actions, r = this._nActiveActions, i = this.time += e, s = Math.sign(e), o = this._accuIndex ^= 1;
            for(let c = 0; c !== r; ++c)n[c]._update(i, e, s, o);
            const a = this._bindings, l = this._nActiveBindings;
            for(let c = 0; c !== l; ++c)a[c].apply(o);
            return this;
        }
        setTime(e) {
            this.time = 0;
            for(let n = 0; n < this._actions.length; n++)this._actions[n].time = 0;
            return this.update(e);
        }
        getRoot() {
            return this._root;
        }
        uncacheClip(e) {
            const n = this._actions, r = e.uuid, i = this._actionsByClip, s = i[r];
            if (s !== void 0) {
                const o = s.knownActions;
                for(let a = 0, l = o.length; a !== l; ++a){
                    const c = o[a];
                    this._deactivateAction(c);
                    const u = c._cacheIndex, f = n[n.length - 1];
                    c._cacheIndex = null, c._byClipCacheIndex = null, f._cacheIndex = u, n[u] = f, n.pop(), this._removeInactiveBindingsForAction(c);
                }
                delete i[r];
            }
        }
        uncacheRoot(e) {
            const n = e.uuid, r = this._actionsByClip;
            for(const o in r){
                const a = r[o].actionByRoot, l = a[n];
                l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
            }
            const i = this._bindingsByRootAndName, s = i[n];
            if (s !== void 0) for(const o in s){
                const a = s[o];
                a.restoreOriginalState(), this._removeInactiveBinding(a);
            }
        }
        uncacheAction(e, n) {
            const r = this.existingAction(e, n);
            r !== null && (this._deactivateAction(r), this._removeInactiveAction(r));
        }
    }
    class Vye extends _2 {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isRenderTarget3D = !0, this.depth = r, this.texture = new S2(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class Wye extends _2 {
        constructor(e = 1, n = 1, r = 1, i = {}){
            super(e, n, i), this.isRenderTargetArray = !0, this.depth = r, this.texture = new zw(null, e, n, r), this.texture.isRenderTargetTexture = !0;
        }
    }
    class gO {
        constructor(e){
            this.value = e;
        }
        clone() {
            return new gO(this.value.clone === void 0 ? this.value : this.value.clone());
        }
    }
    let qye = 0;
    class Hye extends vu {
        constructor(){
            super(), this.isUniformsGroup = !0, Object.defineProperty(this, "id", {
                value: qye++
            }), this.name = "", this.usage = Qb, this.uniforms = [];
        }
        add(e) {
            return this.uniforms.push(e), this;
        }
        remove(e) {
            const n = this.uniforms.indexOf(e);
            return n !== -1 && this.uniforms.splice(n, 1), this;
        }
        setName(e) {
            return this.name = e, this;
        }
        setUsage(e) {
            return this.usage = e, this;
        }
        dispose() {
            return this.dispatchEvent({
                type: "dispose"
            }), this;
        }
        copy(e) {
            this.name = e.name, this.usage = e.usage;
            const n = e.uniforms;
            this.uniforms.length = 0;
            for(let r = 0, i = n.length; r < i; r++){
                const s = Array.isArray(n[r]) ? n[r] : [
                    n[r]
                ];
                for(let o = 0; o < s.length; o++)this.uniforms.push(s[o].clone());
            }
            return this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class $ye extends T2 {
        constructor(e, n, r = 1){
            super(e, n), this.isInstancedInterleavedBuffer = !0, this.meshPerAttribute = r;
        }
        copy(e) {
            return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
        }
        clone(e) {
            const n = super.clone(e);
            return n.meshPerAttribute = this.meshPerAttribute, n;
        }
        toJSON(e) {
            const n = super.toJSON(e);
            return n.isInstancedInterleavedBuffer = !0, n.meshPerAttribute = this.meshPerAttribute, n;
        }
    }
    class Gye {
        constructor(e, n, r, i, s){
            this.isGLBufferAttribute = !0, this.name = "", this.buffer = e, this.type = n, this.itemSize = r, this.elementSize = i, this.count = s, this.version = 0;
        }
        set needsUpdate(e) {
            e === !0 && this.version++;
        }
        setBuffer(e) {
            return this.buffer = e, this;
        }
        setType(e, n) {
            return this.type = e, this.elementSize = n, this;
        }
        setItemSize(e) {
            return this.itemSize = e, this;
        }
        setCount(e) {
            return this.count = e, this;
        }
    }
    const V8 = new gn;
    class oH {
        constructor(e, n, r = 0, i = 1 / 0){
            this.ray = new Um(e, n), this.near = r, this.far = i, this.camera = null, this.layers = new hm, this.params = {
                Mesh: {},
                Line: {
                    threshold: 1
                },
                LOD: {},
                Points: {
                    threshold: 1
                },
                Sprite: {}
            };
        }
        set(e, n) {
            this.ray.set(e, n);
        }
        setFromCamera(e, n) {
            n.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(n.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(n).sub(this.ray.origin).normalize(), this.camera = n) : n.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (n.near + n.far) / (n.near - n.far)).unproject(n), this.ray.direction.set(0, 0, -1).transformDirection(n.matrixWorld), this.camera = n) : console.error("THREE.Raycaster: Unsupported camera type: " + n.type);
        }
        setFromXRController(e) {
            return V8.identity().extractRotation(e.matrixWorld), this.ray.origin.setFromMatrixPosition(e.matrixWorld), this.ray.direction.set(0, 0, -1).applyMatrix4(V8), this;
        }
        intersectObject(e, n = !0, r = []) {
            return K3(e, this, r, n), r.sort(W8), r;
        }
        intersectObjects(e, n = !0, r = []) {
            for(let i = 0, s = e.length; i < s; i++)K3(e[i], this, r, n);
            return r.sort(W8), r;
        }
    }
    function W8(t, e) {
        return t.distance - e.distance;
    }
    function K3(t, e, n, r) {
        let i = !0;
        if (t.layers.test(e.layers) && t.raycast(e, n) === !1 && (i = !1), i === !0 && r === !0) {
            const s = t.children;
            for(let o = 0, a = s.length; o < a; o++)K3(s[o], e, n, !0);
        }
    }
    class Y3 {
        constructor(e = 1, n = 0, r = 0){
            return this.radius = e, this.phi = n, this.theta = r, this;
        }
        set(e, n, r) {
            return this.radius = e, this.phi = n, this.theta = r, this;
        }
        copy(e) {
            return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
        }
        makeSafe() {
            return this.phi = Cn(this.phi, 1e-6, Math.PI - 1e-6), this;
        }
        setFromVector3(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z);
        }
        setFromCartesianCoords(e, n, r) {
            return this.radius = Math.sqrt(e * e + n * n + r * r), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, r), this.phi = Math.acos(Cn(n / this.radius, -1, 1))), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class Xye {
        constructor(e = 1, n = 0, r = 0){
            return this.radius = e, this.theta = n, this.y = r, this;
        }
        set(e, n, r) {
            return this.radius = e, this.theta = n, this.y = r, this;
        }
        copy(e) {
            return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
        }
        setFromVector3(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z);
        }
        setFromCartesianCoords(e, n, r) {
            return this.radius = Math.sqrt(e * e + r * r), this.theta = Math.atan2(e, r), this.y = n, this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    class yO {
        constructor(e, n, r, i){
            yO.prototype.isMatrix2 = !0, this.elements = [
                1,
                0,
                0,
                1
            ], e !== void 0 && this.set(e, n, r, i);
        }
        identity() {
            return this.set(1, 0, 0, 1), this;
        }
        fromArray(e, n = 0) {
            for(let r = 0; r < 4; r++)this.elements[r] = e[r + n];
            return this;
        }
        set(e, n, r, i) {
            const s = this.elements;
            return s[0] = e, s[2] = n, s[1] = r, s[3] = i, this;
        }
    }
    const q8 = new ot;
    class Kye {
        constructor(e = new ot(1 / 0, 1 / 0), n = new ot(-1 / 0, -1 / 0)){
            this.isBox2 = !0, this.min = e, this.max = n;
        }
        set(e, n) {
            return this.min.copy(e), this.max.copy(n), this;
        }
        setFromPoints(e) {
            this.makeEmpty();
            for(let n = 0, r = e.length; n < r; n++)this.expandByPoint(e[n]);
            return this;
        }
        setFromCenterAndSize(e, n) {
            const r = q8.copy(n).multiplyScalar(.5);
            return this.min.copy(e).sub(r), this.max.copy(e).add(r), this;
        }
        clone() {
            return new this.constructor().copy(this);
        }
        copy(e) {
            return this.min.copy(e.min), this.max.copy(e.max), this;
        }
        makeEmpty() {
            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
        }
        isEmpty() {
            return this.max.x < this.min.x || this.max.y < this.min.y;
        }
        getCenter(e) {
            return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
        }
        getSize(e) {
            return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
        }
        expandByPoint(e) {
            return this.min.min(e), this.max.max(e), this;
        }
        expandByVector(e) {
            return this.min.sub(e), this.max.add(e), this;
        }
        expandByScalar(e) {
            return this.min.addScalar(-e), this.max.addScalar(e), this;
        }
        containsPoint(e) {
            return e.x >= this.min.x && e.x <= this.max.x && e.y >= this.min.y && e.y <= this.max.y;
        }
        containsBox(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
        }
        getParameter(e, n) {
            return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
        }
        intersectsBox(e) {
            return e.max.x >= this.min.x && e.min.x <= this.max.x && e.max.y >= this.min.y && e.min.y <= this.max.y;
        }
        clampPoint(e, n) {
            return n.copy(e).clamp(this.min, this.max);
        }
        distanceToPoint(e) {
            return this.clampPoint(e, q8).distanceTo(e);
        }
        intersect(e) {
            return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
        }
        union(e) {
            return this.min.min(e.min), this.max.max(e.max), this;
        }
        translate(e) {
            return this.min.add(e), this.max.add(e), this;
        }
        equals(e) {
            return e.min.equals(this.min) && e.max.equals(this.max);
        }
    }
    const H8 = new ve, lS = new ve;
    class Yye {
        constructor(e = new ve, n = new ve){
            this.start = e, this.end = n;
        }
        set(e, n) {
            return this.start.copy(e), this.end.copy(n), this;
        }
        copy(e) {
            return this.start.copy(e.start), this.end.copy(e.end), this;
        }
        getCenter(e) {
            return e.addVectors(this.start, this.end).multiplyScalar(.5);
        }
        delta(e) {
            return e.subVectors(this.end, this.start);
        }
        distanceSq() {
            return this.start.distanceToSquared(this.end);
        }
        distance() {
            return this.start.distanceTo(this.end);
        }
        at(e, n) {
            return this.delta(n).multiplyScalar(e).add(this.start);
        }
        closestPointToPointParameter(e, n) {
            H8.subVectors(e, this.start), lS.subVectors(this.end, this.start);
            const r = lS.dot(lS);
            let s = lS.dot(H8) / r;
            return n && (s = Cn(s, 0, 1)), s;
        }
        closestPointToPoint(e, n, r) {
            const i = this.closestPointToPointParameter(e, n);
            return this.delta(r).multiplyScalar(i).add(this.start);
        }
        applyMatrix4(e) {
            return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
        }
        equals(e) {
            return e.start.equals(this.start) && e.end.equals(this.end);
        }
        clone() {
            return new this.constructor().copy(this);
        }
    }
    const $8 = new ve;
    class Zye extends ur {
        constructor(e, n){
            super(), this.light = e, this.matrixAutoUpdate = !1, this.color = n, this.type = "SpotLightHelper";
            const r = new Vn, i = [
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1,
                0,
                1,
                0,
                0,
                0,
                -1,
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                -1,
                1
            ];
            for(let o = 0, a = 1, l = 32; o < l; o++, a++){
                const c = o / l * Math.PI * 2, u = a / l * Math.PI * 2;
                i.push(Math.cos(c), Math.sin(c), 1, Math.cos(u), Math.sin(u), 1);
            }
            r.setAttribute("position", new Yt(i, 3));
            const s = new Xo({
                fog: !1,
                toneMapped: !1
            });
            this.cone = new xu(r, s), this.add(this.cone), this.update();
        }
        dispose() {
            this.cone.geometry.dispose(), this.cone.material.dispose();
        }
        update() {
            this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1), this.parent ? (this.parent.updateWorldMatrix(!0), this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)) : this.matrix.copy(this.light.matrixWorld), this.matrixWorld.copy(this.light.matrixWorld);
            const e = this.light.distance ? this.light.distance : 1e3, n = e * Math.tan(this.light.angle);
            this.cone.scale.set(n, n, e), $8.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt($8), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
        }
    }
    const jf = new ve, cS = new gn, GA = new gn;
    class Jye extends xu {
        constructor(e){
            const n = aH(e), r = new Vn, i = [], s = [], o = new jt(0, 0, 1), a = new jt(0, 1, 0);
            for(let c = 0; c < n.length; c++){
                const u = n[c];
                u.parent && u.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), s.push(o.r, o.g, o.b), s.push(a.r, a.g, a.b));
            }
            r.setAttribute("position", new Yt(i, 3)), r.setAttribute("color", new Yt(s, 3));
            const l = new Xo({
                vertexColors: !0,
                depthTest: !1,
                depthWrite: !1,
                toneMapped: !1,
                transparent: !0
            });
            super(r, l), this.isSkeletonHelper = !0, this.type = "SkeletonHelper", this.root = e, this.bones = n, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
        }
        updateMatrixWorld(e) {
            const n = this.bones, r = this.geometry, i = r.getAttribute("position");
            GA.copy(this.root.matrixWorld).invert();
            for(let s = 0, o = 0; s < n.length; s++){
                const a = n[s];
                a.parent && a.parent.isBone && (cS.multiplyMatrices(GA, a.matrixWorld), jf.setFromMatrixPosition(cS), i.setXYZ(o, jf.x, jf.y, jf.z), cS.multiplyMatrices(GA, a.parent.matrixWorld), jf.setFromMatrixPosition(cS), i.setXYZ(o + 1, jf.x, jf.y, jf.z), o += 2);
            }
            r.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    function aH(t) {
        const e = [];
        t.isBone === !0 && e.push(t);
        for(let n = 0; n < t.children.length; n++)e.push.apply(e, aH(t.children[n]));
        return e;
    }
    class Qye extends Ji {
        constructor(e, n, r){
            const i = new Gw(n, 4, 2), s = new Rh({
                wireframe: !0,
                fog: !1,
                toneMapped: !1
            });
            super(i, s), this.light = e, this.color = r, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
        update() {
            this.light.updateWorldMatrix(!0, !1), this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
        }
    }
    const eve = new ve, G8 = new jt, X8 = new jt;
    class tve extends ur {
        constructor(e, n, r){
            super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, this.type = "HemisphereLightHelper";
            const i = new $w(n);
            i.rotateY(Math.PI * .5), this.material = new Rh({
                wireframe: !0,
                fog: !1,
                toneMapped: !1
            }), this.color === void 0 && (this.material.vertexColors = !0);
            const s = i.getAttribute("position"), o = new Float32Array(s.count * 3);
            i.setAttribute("color", new Rr(o, 3)), this.add(new Ji(i, this.material)), this.update();
        }
        dispose() {
            this.children[0].geometry.dispose(), this.children[0].material.dispose();
        }
        update() {
            const e = this.children[0];
            if (this.color !== void 0) this.material.color.set(this.color);
            else {
                const n = e.geometry.getAttribute("color");
                G8.copy(this.light.color), X8.copy(this.light.groundColor);
                for(let r = 0, i = n.count; r < i; r++){
                    const s = r < i / 2 ? G8 : X8;
                    n.setXYZ(r, s.r, s.g, s.b);
                }
                n.needsUpdate = !0;
            }
            this.light.updateWorldMatrix(!0, !1), e.lookAt(eve.setFromMatrixPosition(this.light.matrixWorld).negate());
        }
    }
    class nve extends xu {
        constructor(e = 10, n = 10, r = 4473924, i = 8947848){
            r = new jt(r), i = new jt(i);
            const s = n / 2, o = e / n, a = e / 2, l = [], c = [];
            for(let h = 0, m = 0, v = -a; h <= n; h++, v += o){
                l.push(-a, 0, v, a, 0, v), l.push(v, 0, -a, v, 0, a);
                const _ = h === s ? r : i;
                _.toArray(c, m), m += 3, _.toArray(c, m), m += 3, _.toArray(c, m), m += 3, _.toArray(c, m), m += 3;
            }
            const u = new Vn;
            u.setAttribute("position", new Yt(l, 3)), u.setAttribute("color", new Yt(c, 3));
            const f = new Xo({
                vertexColors: !0,
                toneMapped: !1
            });
            super(u, f), this.type = "GridHelper";
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class rve extends xu {
        constructor(e = 10, n = 16, r = 8, i = 64, s = 4473924, o = 8947848){
            s = new jt(s), o = new jt(o);
            const a = [], l = [];
            if (n > 1) for(let f = 0; f < n; f++){
                const h = f / n * (Math.PI * 2), m = Math.sin(h) * e, v = Math.cos(h) * e;
                a.push(0, 0, 0), a.push(m, 0, v);
                const _ = f & 1 ? s : o;
                l.push(_.r, _.g, _.b), l.push(_.r, _.g, _.b);
            }
            for(let f = 0; f < r; f++){
                const h = f & 1 ? s : o, m = e - e / r * f;
                for(let v = 0; v < i; v++){
                    let _ = v / i * (Math.PI * 2), w = Math.sin(_) * m, b = Math.cos(_) * m;
                    a.push(w, 0, b), l.push(h.r, h.g, h.b), _ = (v + 1) / i * (Math.PI * 2), w = Math.sin(_) * m, b = Math.cos(_) * m, a.push(w, 0, b), l.push(h.r, h.g, h.b);
                }
            }
            const c = new Vn;
            c.setAttribute("position", new Yt(a, 3)), c.setAttribute("color", new Yt(l, 3));
            const u = new Xo({
                vertexColors: !0,
                toneMapped: !1
            });
            super(c, u), this.type = "PolarGridHelper";
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    const K8 = new ve, uS = new ve, Y8 = new ve;
    class ive extends ur {
        constructor(e, n, r){
            super(), this.light = e, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = r, this.type = "DirectionalLightHelper", n === void 0 && (n = 1);
            let i = new Vn;
            i.setAttribute("position", new Yt([
                -n,
                n,
                0,
                n,
                n,
                0,
                n,
                -n,
                0,
                -n,
                -n,
                0,
                -n,
                n,
                0
            ], 3));
            const s = new Xo({
                fog: !1,
                toneMapped: !1
            });
            this.lightPlane = new Sh(i, s), this.add(this.lightPlane), i = new Vn, i.setAttribute("position", new Yt([
                0,
                0,
                0,
                0,
                0,
                1
            ], 3)), this.targetLine = new Sh(i, s), this.add(this.targetLine), this.update();
        }
        dispose() {
            this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
        }
        update() {
            this.light.updateWorldMatrix(!0, !1), this.light.target.updateWorldMatrix(!0, !1), K8.setFromMatrixPosition(this.light.matrixWorld), uS.setFromMatrixPosition(this.light.target.matrixWorld), Y8.subVectors(uS, K8), this.lightPlane.lookAt(uS), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(uS), this.targetLine.scale.z = Y8.length();
        }
    }
    const dS = new ve, vi = new Vw;
    class sve extends xu {
        constructor(e){
            const n = new Vn, r = new Xo({
                color: 16777215,
                vertexColors: !0,
                toneMapped: !1
            }), i = [], s = [], o = {};
            a("n1", "n2"), a("n2", "n4"), a("n4", "n3"), a("n3", "n1"), a("f1", "f2"), a("f2", "f4"), a("f4", "f3"), a("f3", "f1"), a("n1", "f1"), a("n2", "f2"), a("n3", "f3"), a("n4", "f4"), a("p", "n1"), a("p", "n2"), a("p", "n3"), a("p", "n4"), a("u1", "u2"), a("u2", "u3"), a("u3", "u1"), a("c", "t"), a("p", "c"), a("cn1", "cn2"), a("cn3", "cn4"), a("cf1", "cf2"), a("cf3", "cf4");
            function a(v, _) {
                l(v), l(_);
            }
            function l(v) {
                i.push(0, 0, 0), s.push(0, 0, 0), o[v] === void 0 && (o[v] = []), o[v].push(i.length / 3 - 1);
            }
            n.setAttribute("position", new Yt(i, 3)), n.setAttribute("color", new Yt(s, 3)), super(n, r), this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
            const c = new jt(16755200), u = new jt(16711680), f = new jt(43775), h = new jt(16777215), m = new jt(3355443);
            this.setColors(c, u, f, h, m);
        }
        setColors(e, n, r, i, s) {
            const a = this.geometry.getAttribute("color");
            a.setXYZ(0, e.r, e.g, e.b), a.setXYZ(1, e.r, e.g, e.b), a.setXYZ(2, e.r, e.g, e.b), a.setXYZ(3, e.r, e.g, e.b), a.setXYZ(4, e.r, e.g, e.b), a.setXYZ(5, e.r, e.g, e.b), a.setXYZ(6, e.r, e.g, e.b), a.setXYZ(7, e.r, e.g, e.b), a.setXYZ(8, e.r, e.g, e.b), a.setXYZ(9, e.r, e.g, e.b), a.setXYZ(10, e.r, e.g, e.b), a.setXYZ(11, e.r, e.g, e.b), a.setXYZ(12, e.r, e.g, e.b), a.setXYZ(13, e.r, e.g, e.b), a.setXYZ(14, e.r, e.g, e.b), a.setXYZ(15, e.r, e.g, e.b), a.setXYZ(16, e.r, e.g, e.b), a.setXYZ(17, e.r, e.g, e.b), a.setXYZ(18, e.r, e.g, e.b), a.setXYZ(19, e.r, e.g, e.b), a.setXYZ(20, e.r, e.g, e.b), a.setXYZ(21, e.r, e.g, e.b), a.setXYZ(22, e.r, e.g, e.b), a.setXYZ(23, e.r, e.g, e.b), a.setXYZ(24, n.r, n.g, n.b), a.setXYZ(25, n.r, n.g, n.b), a.setXYZ(26, n.r, n.g, n.b), a.setXYZ(27, n.r, n.g, n.b), a.setXYZ(28, n.r, n.g, n.b), a.setXYZ(29, n.r, n.g, n.b), a.setXYZ(30, n.r, n.g, n.b), a.setXYZ(31, n.r, n.g, n.b), a.setXYZ(32, r.r, r.g, r.b), a.setXYZ(33, r.r, r.g, r.b), a.setXYZ(34, r.r, r.g, r.b), a.setXYZ(35, r.r, r.g, r.b), a.setXYZ(36, r.r, r.g, r.b), a.setXYZ(37, r.r, r.g, r.b), a.setXYZ(38, i.r, i.g, i.b), a.setXYZ(39, i.r, i.g, i.b), a.setXYZ(40, s.r, s.g, s.b), a.setXYZ(41, s.r, s.g, s.b), a.setXYZ(42, s.r, s.g, s.b), a.setXYZ(43, s.r, s.g, s.b), a.setXYZ(44, s.r, s.g, s.b), a.setXYZ(45, s.r, s.g, s.b), a.setXYZ(46, s.r, s.g, s.b), a.setXYZ(47, s.r, s.g, s.b), a.setXYZ(48, s.r, s.g, s.b), a.setXYZ(49, s.r, s.g, s.b), a.needsUpdate = !0;
        }
        update() {
            const e = this.geometry, n = this.pointMap, r = 1, i = 1;
            vi.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);
            const s = this.camera.coordinateSystem === gc ? -1 : 0;
            Pi("c", n, e, vi, 0, 0, s), Pi("t", n, e, vi, 0, 0, 1), Pi("n1", n, e, vi, -1, -1, s), Pi("n2", n, e, vi, r, -1, s), Pi("n3", n, e, vi, -1, i, s), Pi("n4", n, e, vi, r, i, s), Pi("f1", n, e, vi, -1, -1, 1), Pi("f2", n, e, vi, r, -1, 1), Pi("f3", n, e, vi, -1, i, 1), Pi("f4", n, e, vi, r, i, 1), Pi("u1", n, e, vi, r * .7, i * 1.1, s), Pi("u2", n, e, vi, -1 * .7, i * 1.1, s), Pi("u3", n, e, vi, 0, i * 2, s), Pi("cf1", n, e, vi, -1, 0, 1), Pi("cf2", n, e, vi, r, 0, 1), Pi("cf3", n, e, vi, 0, -1, 1), Pi("cf4", n, e, vi, 0, i, 1), Pi("cn1", n, e, vi, -1, 0, s), Pi("cn2", n, e, vi, r, 0, s), Pi("cn3", n, e, vi, 0, -1, s), Pi("cn4", n, e, vi, 0, i, s), e.getAttribute("position").needsUpdate = !0;
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    function Pi(t, e, n, r, i, s, o) {
        dS.set(i, s, o).unproject(r);
        const a = e[t];
        if (a !== void 0) {
            const l = n.getAttribute("position");
            for(let c = 0, u = a.length; c < u; c++)l.setXYZ(a[c], dS.x, dS.y, dS.z);
        }
    }
    const fS = new qo;
    class ove extends xu {
        constructor(e, n = 16776960){
            const r = new Uint16Array([
                0,
                1,
                1,
                2,
                2,
                3,
                3,
                0,
                4,
                5,
                5,
                6,
                6,
                7,
                7,
                4,
                0,
                4,
                1,
                5,
                2,
                6,
                3,
                7
            ]), i = new Float32Array(8 * 3), s = new Vn;
            s.setIndex(new Rr(r, 1)), s.setAttribute("position", new Rr(i, 3)), super(s, new Xo({
                color: n,
                toneMapped: !1
            })), this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
        }
        update(e) {
            if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && fS.setFromObject(this.object), fS.isEmpty()) return;
            const n = fS.min, r = fS.max, i = this.geometry.attributes.position, s = i.array;
            s[0] = r.x, s[1] = r.y, s[2] = r.z, s[3] = n.x, s[4] = r.y, s[5] = r.z, s[6] = n.x, s[7] = n.y, s[8] = r.z, s[9] = r.x, s[10] = n.y, s[11] = r.z, s[12] = r.x, s[13] = r.y, s[14] = n.z, s[15] = n.x, s[16] = r.y, s[17] = n.z, s[18] = n.x, s[19] = n.y, s[20] = n.z, s[21] = r.x, s[22] = n.y, s[23] = n.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
        }
        setFromObject(e) {
            return this.object = e, this.update(), this;
        }
        copy(e, n) {
            return super.copy(e, n), this.object = e.object, this;
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class ave extends xu {
        constructor(e, n = 16776960){
            const r = new Uint16Array([
                0,
                1,
                1,
                2,
                2,
                3,
                3,
                0,
                4,
                5,
                5,
                6,
                6,
                7,
                7,
                4,
                0,
                4,
                1,
                5,
                2,
                6,
                3,
                7
            ]), i = [
                1,
                1,
                1,
                -1,
                1,
                1,
                -1,
                -1,
                1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                -1
            ], s = new Vn;
            s.setIndex(new Rr(r, 1)), s.setAttribute("position", new Yt(i, 3)), super(s, new Xo({
                color: n,
                toneMapped: !1
            })), this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
        }
        updateMatrixWorld(e) {
            const n = this.box;
            n.isEmpty() || (n.getCenter(this.position), n.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class lve extends Sh {
        constructor(e, n = 1, r = 16776960){
            const i = r, s = [
                1,
                -1,
                0,
                -1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                1,
                0,
                -1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                -1,
                0,
                1,
                1,
                0
            ], o = new Vn;
            o.setAttribute("position", new Yt(s, 3)), o.computeBoundingSphere(), super(o, new Xo({
                color: i,
                toneMapped: !1
            })), this.type = "PlaneHelper", this.plane = e, this.size = n;
            const a = [
                1,
                1,
                0,
                -1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                1,
                0,
                -1,
                -1,
                0,
                1,
                -1,
                0
            ], l = new Vn;
            l.setAttribute("position", new Yt(a, 3)), l.computeBoundingSphere(), this.add(new Ji(l, new Rh({
                color: i,
                opacity: .2,
                transparent: !0,
                depthWrite: !1,
                toneMapped: !1
            })));
        }
        updateMatrixWorld(e) {
            this.position.set(0, 0, 0), this.scale.set(.5 * this.size, .5 * this.size, 1), this.lookAt(this.plane.normal), this.translateZ(-this.plane.constant), super.updateMatrixWorld(e);
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose(), this.children[0].geometry.dispose(), this.children[0].material.dispose();
        }
    }
    const Z8 = new ve;
    let hS, XA;
    class cve extends ur {
        constructor(e = new ve(0, 0, 1), n = new ve(0, 0, 0), r = 1, i = 16776960, s = r * .2, o = s * .2){
            super(), this.type = "ArrowHelper", hS === void 0 && (hS = new Vn, hS.setAttribute("position", new Yt([
                0,
                0,
                0,
                0,
                1,
                0
            ], 3)), XA = new Wy(0, .5, 1, 5, 1), XA.translate(0, -.5, 0)), this.position.copy(n), this.line = new Sh(hS, new Xo({
                color: i,
                toneMapped: !1
            })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Ji(XA, new Rh({
                color: i,
                toneMapped: !1
            })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(r, s, o);
        }
        setDirection(e) {
            if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
            else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
            else {
                Z8.set(e.z, 0, -e.x).normalize();
                const n = Math.acos(e.y);
                this.quaternion.setFromAxisAngle(Z8, n);
            }
        }
        setLength(e, n = e * .2, r = n * .2) {
            this.line.scale.set(1, Math.max(1e-4, e - n), 1), this.line.updateMatrix(), this.cone.scale.set(r, n, r), this.cone.position.y = e, this.cone.updateMatrix();
        }
        setColor(e) {
            this.line.material.color.set(e), this.cone.material.color.set(e);
        }
        copy(e) {
            return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
        }
        dispose() {
            this.line.geometry.dispose(), this.line.material.dispose(), this.cone.geometry.dispose(), this.cone.material.dispose();
        }
    }
    class uve extends xu {
        constructor(e = 1){
            const n = [
                0,
                0,
                0,
                e,
                0,
                0,
                0,
                0,
                0,
                0,
                e,
                0,
                0,
                0,
                0,
                0,
                0,
                e
            ], r = [
                1,
                0,
                0,
                1,
                .6,
                0,
                0,
                1,
                0,
                .6,
                1,
                0,
                0,
                0,
                1,
                0,
                .6,
                1
            ], i = new Vn;
            i.setAttribute("position", new Yt(n, 3)), i.setAttribute("color", new Yt(r, 3));
            const s = new Xo({
                vertexColors: !0,
                toneMapped: !1
            });
            super(i, s), this.type = "AxesHelper";
        }
        setColors(e, n, r) {
            const i = new jt, s = this.geometry.attributes.color.array;
            return i.set(e), i.toArray(s, 0), i.toArray(s, 3), i.set(n), i.toArray(s, 6), i.toArray(s, 9), i.set(r), i.toArray(s, 12), i.toArray(s, 15), this.geometry.attributes.color.needsUpdate = !0, this;
        }
        dispose() {
            this.geometry.dispose(), this.material.dispose();
        }
    }
    class dve {
        constructor(){
            this.type = "ShapePath", this.color = new jt, this.subPaths = [], this.currentPath = null;
        }
        moveTo(e, n) {
            return this.currentPath = new nw, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, n), this;
        }
        lineTo(e, n) {
            return this.currentPath.lineTo(e, n), this;
        }
        quadraticCurveTo(e, n, r, i) {
            return this.currentPath.quadraticCurveTo(e, n, r, i), this;
        }
        bezierCurveTo(e, n, r, i, s, o) {
            return this.currentPath.bezierCurveTo(e, n, r, i, s, o), this;
        }
        splineThru(e) {
            return this.currentPath.splineThru(e), this;
        }
        toShapes(e) {
            function n(b) {
                const M = [];
                for(let E = 0, T = b.length; E < T; E++){
                    const P = b[E], A = new pm;
                    A.curves = P.curves, M.push(A);
                }
                return M;
            }
            function r(b, M) {
                const E = M.length;
                let T = !1;
                for(let P = E - 1, A = 0; A < E; P = A++){
                    let O = M[P], D = M[A], R = D.x - O.x, N = D.y - O.y;
                    if (Math.abs(N) > Number.EPSILON) {
                        if (N < 0 && (O = M[A], R = -R, D = M[P], N = -N), b.y < O.y || b.y > D.y) continue;
                        if (b.y === O.y) {
                            if (b.x === O.x) return !0;
                        } else {
                            const k = N * (b.x - O.x) - R * (b.y - O.y);
                            if (k === 0) return !0;
                            if (k < 0) continue;
                            T = !T;
                        }
                    } else {
                        if (b.y !== O.y) continue;
                        if (D.x <= b.x && b.x <= O.x || O.x <= b.x && b.x <= D.x) return !0;
                    }
                }
                return T;
            }
            const i = cu.isClockWise, s = this.subPaths;
            if (s.length === 0) return [];
            let o, a, l;
            const c = [];
            if (s.length === 1) return a = s[0], l = new pm, l.curves = a.curves, c.push(l), c;
            let u = !i(s[0].getPoints());
            u = e ? !u : u;
            const f = [], h = [];
            let m = [], v = 0, _;
            h[v] = void 0, m[v] = [];
            for(let b = 0, M = s.length; b < M; b++)a = s[b], _ = a.getPoints(), o = i(_), o = e ? !o : o, o ? (!u && h[v] && v++, h[v] = {
                s: new pm,
                p: _
            }, h[v].s.curves = a.curves, u && v++, m[v] = []) : m[v].push({
                h: a,
                p: _[0]
            });
            if (!h[0]) return n(s);
            if (h.length > 1) {
                let b = !1, M = 0;
                for(let E = 0, T = h.length; E < T; E++)f[E] = [];
                for(let E = 0, T = h.length; E < T; E++){
                    const P = m[E];
                    for(let A = 0; A < P.length; A++){
                        const O = P[A];
                        let D = !0;
                        for(let R = 0; R < h.length; R++)r(O.p, h[R].p) && (E !== R && M++, D ? (D = !1, f[R].push(O)) : b = !0);
                        D && f[E].push(O);
                    }
                }
                M > 0 && b === !1 && (m = f);
            }
            let w;
            for(let b = 0, M = h.length; b < M; b++){
                l = h[b].s, c.push(l), w = m[b];
                for(let E = 0, T = w.length; E < T; E++)l.holes.push(w[E].h);
            }
            return c;
        }
    }
    class fve extends vu {
        constructor(e, n = null){
            super(), this.object = e, this.domElement = n, this.enabled = !0, this.state = -1, this.keys = {}, this.mouseButtons = {
                LEFT: null,
                MIDDLE: null,
                RIGHT: null
            }, this.touches = {
                ONE: null,
                TWO: null
            };
        }
        connect() {}
        disconnect() {}
        dispose() {}
        update() {}
    }
    function hve(t, e) {
        const n = t.image && t.image.width ? t.image.width / t.image.height : 1;
        return n > e ? (t.repeat.x = 1, t.repeat.y = n / e, t.offset.x = 0, t.offset.y = (1 - t.repeat.y) / 2) : (t.repeat.x = e / n, t.repeat.y = 1, t.offset.x = (1 - t.repeat.x) / 2, t.offset.y = 0), t;
    }
    function pve(t, e) {
        const n = t.image && t.image.width ? t.image.width / t.image.height : 1;
        return n > e ? (t.repeat.x = e / n, t.repeat.y = 1, t.offset.x = (1 - t.repeat.x) / 2, t.offset.y = 0) : (t.repeat.x = 1, t.repeat.y = n / e, t.offset.x = 0, t.offset.y = (1 - t.repeat.y) / 2), t;
    }
    function mve(t) {
        return t.repeat.x = 1, t.repeat.y = 1, t.offset.x = 0, t.offset.y = 0, t;
    }
    function Z3(t, e, n, r) {
        const i = gve(r);
        switch(n){
            case Lk:
                return t * e;
            case jk:
                return t * e;
            case Bk:
                return t * e * 2;
            case v2:
                return t * e / i.components * i.byteLength;
            case Uw:
                return t * e / i.components * i.byteLength;
            case Uk:
                return t * e * 2 / i.components * i.byteLength;
            case x2:
                return t * e * 2 / i.components * i.byteLength;
            case Fk:
                return t * e * 3 / i.components * i.byteLength;
            case lo:
                return t * e * 4 / i.components * i.byteLength;
            case b2:
                return t * e * 4 / i.components * i.byteLength;
            case Qx:
            case eb:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 8;
            case tb:
            case nb:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 16;
            case LM:
            case jM:
                return Math.max(t, 16) * Math.max(e, 8) / 4;
            case DM:
            case FM:
                return Math.max(t, 8) * Math.max(e, 8) / 2;
            case BM:
            case UM:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 8;
            case zM:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 16;
            case VM:
                return Math.floor((t + 3) / 4) * Math.floor((e + 3) / 4) * 16;
            case WM:
                return Math.floor((t + 4) / 5) * Math.floor((e + 3) / 4) * 16;
            case qM:
                return Math.floor((t + 4) / 5) * Math.floor((e + 4) / 5) * 16;
            case HM:
                return Math.floor((t + 5) / 6) * Math.floor((e + 4) / 5) * 16;
            case $M:
                return Math.floor((t + 5) / 6) * Math.floor((e + 5) / 6) * 16;
            case GM:
                return Math.floor((t + 7) / 8) * Math.floor((e + 4) / 5) * 16;
            case XM:
                return Math.floor((t + 7) / 8) * Math.floor((e + 5) / 6) * 16;
            case KM:
                return Math.floor((t + 7) / 8) * Math.floor((e + 7) / 8) * 16;
            case YM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 4) / 5) * 16;
            case ZM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 5) / 6) * 16;
            case JM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 7) / 8) * 16;
            case QM:
                return Math.floor((t + 9) / 10) * Math.floor((e + 9) / 10) * 16;
            case eT:
                return Math.floor((t + 11) / 12) * Math.floor((e + 9) / 10) * 16;
            case tT:
                return Math.floor((t + 11) / 12) * Math.floor((e + 11) / 12) * 16;
            case rb:
            case nT:
            case rT:
                return Math.ceil(t / 4) * Math.ceil(e / 4) * 16;
            case zk:
            case iT:
                return Math.ceil(t / 4) * Math.ceil(e / 4) * 8;
            case sT:
            case oT:
                return Math.ceil(t / 4) * Math.ceil(e / 4) * 16;
        }
        throw new Error(`Unable to determine texture byte length for ${n} format.`);
    }
    function gve(t) {
        switch(t){
            case _c:
            case kk:
                return {
                    byteLength: 1,
                    components: 1
                };
            case Sy:
            case Ok:
            case Vy:
                return {
                    byteLength: 2,
                    components: 1
                };
            case g2:
            case y2:
                return {
                    byteLength: 2,
                    components: 4
                };
            case jd:
            case m2:
            case xa:
                return {
                    byteLength: 4,
                    components: 1
                };
            case Dk:
                return {
                    byteLength: 4,
                    components: 3
                };
        }
        throw new Error(`Unknown texture type ${t}.`);
    }
    const yve = {
        contain: hve,
        cover: pve,
        fill: mve,
        getByteLength: Z3
    };
    typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
        detail: {
            revision: d2
        }
    }));
    typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = d2);
    function lH() {
        let t = null, e = !1, n = null, r = null;
        function i(s, o) {
            n(s, o), r = t.requestAnimationFrame(i);
        }
        return {
            start: function() {
                e !== !0 && n !== null && (r = t.requestAnimationFrame(i), e = !0);
            },
            stop: function() {
                t.cancelAnimationFrame(r), e = !1;
            },
            setAnimationLoop: function(s) {
                n = s;
            },
            setContext: function(s) {
                t = s;
            }
        };
    }
    function vve(t) {
        const e = new WeakMap;
        function n(a, l) {
            const c = a.array, u = a.usage, f = c.byteLength, h = t.createBuffer();
            t.bindBuffer(l, h), t.bufferData(l, c, u), a.onUploadCallback();
            let m;
            if (c instanceof Float32Array) m = t.FLOAT;
            else if (c instanceof Uint16Array) a.isFloat16BufferAttribute ? m = t.HALF_FLOAT : m = t.UNSIGNED_SHORT;
            else if (c instanceof Int16Array) m = t.SHORT;
            else if (c instanceof Uint32Array) m = t.UNSIGNED_INT;
            else if (c instanceof Int32Array) m = t.INT;
            else if (c instanceof Int8Array) m = t.BYTE;
            else if (c instanceof Uint8Array) m = t.UNSIGNED_BYTE;
            else if (c instanceof Uint8ClampedArray) m = t.UNSIGNED_BYTE;
            else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + c);
            return {
                buffer: h,
                type: m,
                bytesPerElement: c.BYTES_PER_ELEMENT,
                version: a.version,
                size: f
            };
        }
        function r(a, l, c) {
            const u = l.array, f = l.updateRanges;
            if (t.bindBuffer(c, a), f.length === 0) t.bufferSubData(c, 0, u);
            else {
                f.sort((m, v)=>m.start - v.start);
                let h = 0;
                for(let m = 1; m < f.length; m++){
                    const v = f[h], _ = f[m];
                    _.start <= v.start + v.count + 1 ? v.count = Math.max(v.count, _.start + _.count - v.start) : (++h, f[h] = _);
                }
                f.length = h + 1;
                for(let m = 0, v = f.length; m < v; m++){
                    const _ = f[m];
                    t.bufferSubData(c, _.start * u.BYTES_PER_ELEMENT, u, _.start, _.count);
                }
                l.clearUpdateRanges();
            }
            l.onUploadCallback();
        }
        function i(a) {
            return a.isInterleavedBufferAttribute && (a = a.data), e.get(a);
        }
        function s(a) {
            a.isInterleavedBufferAttribute && (a = a.data);
            const l = e.get(a);
            l && (t.deleteBuffer(l.buffer), e.delete(a));
        }
        function o(a, l) {
            if (a.isInterleavedBufferAttribute && (a = a.data), a.isGLBufferAttribute) {
                const u = e.get(a);
                (!u || u.version < a.version) && e.set(a, {
                    buffer: a.buffer,
                    type: a.type,
                    bytesPerElement: a.elementSize,
                    version: a.version
                });
                return;
            }
            const c = e.get(a);
            if (c === void 0) e.set(a, n(a, l));
            else if (c.version < a.version) {
                if (c.size !== a.array.byteLength) throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");
                r(c.buffer, a, l), c.version = a.version;
            }
        }
        return {
            get: i,
            remove: s,
            update: o
        };
    }
    var xve = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`, bve = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`, wve = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`, _ve = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, Sve = `#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`, Eve = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Mve = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, Tve = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, Cve = `#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`, Rve = `#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`, Ive = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`, Ave = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Nve = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`, Pve = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`, kve = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Ove = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`, Dve = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Lve = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Fve = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, jve = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, Bve = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Uve = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`, zve = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`, Vve = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`, Wve = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, qve = `vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Hve = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, $ve = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`, Gve = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, Xve = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Kve = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Yve = `vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, Zve = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, Jve = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Qve = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, exe = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, txe = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, nxe = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, rxe = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, ixe = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, sxe = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, oxe = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`, axe = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, lxe = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`, cxe = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`, uxe = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, dxe = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`, fxe = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, hxe = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`, pxe = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, mxe = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`, gxe = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`, yxe = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, vxe = `
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, xxe = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, bxe = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`, wxe = `#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, _xe = `#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, Sxe = `#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, Exe = `#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`, Mxe = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`, Txe = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, Cxe = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Rxe = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, Ixe = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`, Axe = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Nxe = `#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`, Pxe = `#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`, kxe = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`, Oxe = `#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`, Dxe = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`, Lxe = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`, Fxe = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, jxe = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Bxe = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Uxe = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, zxe = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`, Vxe = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`, Wxe = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`, qxe = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`, Hxe = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`, $xe = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, Gxe = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`, Xxe = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Kxe = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Yxe = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, Zxe = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Jxe = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Qxe = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, ebe = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`, tbe = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, nbe = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`, rbe = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, ibe = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, sbe = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`, obe = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, abe = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, lbe = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, cbe = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, ube = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, dbe = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, fbe = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`, hbe = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`, pbe = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, mbe = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`, gbe = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`, ybe = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
    const vbe = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, xbe = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, bbe = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, wbe = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, _be = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, Sbe = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, Ebe = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, Mbe = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`, Tbe = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, Cbe = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, Rbe = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, Ibe = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`, Abe = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Nbe = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Pbe = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, kbe = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Obe = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Dbe = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lbe = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Fbe = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, jbe = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Bbe = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`, Ube = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, zbe = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Vbe = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Wbe = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, qbe = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Hbe = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, $be = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Gbe = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Xbe = `#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Kbe = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, Ybe = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Zbe = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`, Un = {
        alphahash_fragment: xve,
        alphahash_pars_fragment: bve,
        alphamap_fragment: wve,
        alphamap_pars_fragment: _ve,
        alphatest_fragment: Sve,
        alphatest_pars_fragment: Eve,
        aomap_fragment: Mve,
        aomap_pars_fragment: Tve,
        batching_pars_vertex: Cve,
        batching_vertex: Rve,
        begin_vertex: Ive,
        beginnormal_vertex: Ave,
        bsdfs: Nve,
        iridescence_fragment: Pve,
        bumpmap_pars_fragment: kve,
        clipping_planes_fragment: Ove,
        clipping_planes_pars_fragment: Dve,
        clipping_planes_pars_vertex: Lve,
        clipping_planes_vertex: Fve,
        color_fragment: jve,
        color_pars_fragment: Bve,
        color_pars_vertex: Uve,
        color_vertex: zve,
        common: Vve,
        cube_uv_reflection_fragment: Wve,
        defaultnormal_vertex: qve,
        displacementmap_pars_vertex: Hve,
        displacementmap_vertex: $ve,
        emissivemap_fragment: Gve,
        emissivemap_pars_fragment: Xve,
        colorspace_fragment: Kve,
        colorspace_pars_fragment: Yve,
        envmap_fragment: Zve,
        envmap_common_pars_fragment: Jve,
        envmap_pars_fragment: Qve,
        envmap_pars_vertex: exe,
        envmap_physical_pars_fragment: dxe,
        envmap_vertex: txe,
        fog_vertex: nxe,
        fog_pars_vertex: rxe,
        fog_fragment: ixe,
        fog_pars_fragment: sxe,
        gradientmap_pars_fragment: oxe,
        lightmap_pars_fragment: axe,
        lights_lambert_fragment: lxe,
        lights_lambert_pars_fragment: cxe,
        lights_pars_begin: uxe,
        lights_toon_fragment: fxe,
        lights_toon_pars_fragment: hxe,
        lights_phong_fragment: pxe,
        lights_phong_pars_fragment: mxe,
        lights_physical_fragment: gxe,
        lights_physical_pars_fragment: yxe,
        lights_fragment_begin: vxe,
        lights_fragment_maps: xxe,
        lights_fragment_end: bxe,
        logdepthbuf_fragment: wxe,
        logdepthbuf_pars_fragment: _xe,
        logdepthbuf_pars_vertex: Sxe,
        logdepthbuf_vertex: Exe,
        map_fragment: Mxe,
        map_pars_fragment: Txe,
        map_particle_fragment: Cxe,
        map_particle_pars_fragment: Rxe,
        metalnessmap_fragment: Ixe,
        metalnessmap_pars_fragment: Axe,
        morphinstance_vertex: Nxe,
        morphcolor_vertex: Pxe,
        morphnormal_vertex: kxe,
        morphtarget_pars_vertex: Oxe,
        morphtarget_vertex: Dxe,
        normal_fragment_begin: Lxe,
        normal_fragment_maps: Fxe,
        normal_pars_fragment: jxe,
        normal_pars_vertex: Bxe,
        normal_vertex: Uxe,
        normalmap_pars_fragment: zxe,
        clearcoat_normal_fragment_begin: Vxe,
        clearcoat_normal_fragment_maps: Wxe,
        clearcoat_pars_fragment: qxe,
        iridescence_pars_fragment: Hxe,
        opaque_fragment: $xe,
        packing: Gxe,
        premultiplied_alpha_fragment: Xxe,
        project_vertex: Kxe,
        dithering_fragment: Yxe,
        dithering_pars_fragment: Zxe,
        roughnessmap_fragment: Jxe,
        roughnessmap_pars_fragment: Qxe,
        shadowmap_pars_fragment: ebe,
        shadowmap_pars_vertex: tbe,
        shadowmap_vertex: nbe,
        shadowmask_pars_fragment: rbe,
        skinbase_vertex: ibe,
        skinning_pars_vertex: sbe,
        skinning_vertex: obe,
        skinnormal_vertex: abe,
        specularmap_fragment: lbe,
        specularmap_pars_fragment: cbe,
        tonemapping_fragment: ube,
        tonemapping_pars_fragment: dbe,
        transmission_fragment: fbe,
        transmission_pars_fragment: hbe,
        uv_pars_fragment: pbe,
        uv_pars_vertex: mbe,
        uv_vertex: gbe,
        worldpos_vertex: ybe,
        background_vert: vbe,
        background_frag: xbe,
        backgroundCube_vert: bbe,
        backgroundCube_frag: wbe,
        cube_vert: _be,
        cube_frag: Sbe,
        depth_vert: Ebe,
        depth_frag: Mbe,
        distanceRGBA_vert: Tbe,
        distanceRGBA_frag: Cbe,
        equirect_vert: Rbe,
        equirect_frag: Ibe,
        linedashed_vert: Abe,
        linedashed_frag: Nbe,
        meshbasic_vert: Pbe,
        meshbasic_frag: kbe,
        meshlambert_vert: Obe,
        meshlambert_frag: Dbe,
        meshmatcap_vert: Lbe,
        meshmatcap_frag: Fbe,
        meshnormal_vert: jbe,
        meshnormal_frag: Bbe,
        meshphong_vert: Ube,
        meshphong_frag: zbe,
        meshphysical_vert: Vbe,
        meshphysical_frag: Wbe,
        meshtoon_vert: qbe,
        meshtoon_frag: Hbe,
        points_vert: $be,
        points_frag: Gbe,
        shadow_vert: Xbe,
        shadow_frag: Kbe,
        sprite_vert: Ybe,
        sprite_frag: Zbe
    }, Mt = {
        common: {
            diffuse: {
                value: new jt(16777215)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            mapTransform: {
                value: new An
            },
            alphaMap: {
                value: null
            },
            alphaMapTransform: {
                value: new An
            },
            alphaTest: {
                value: 0
            }
        },
        specularmap: {
            specularMap: {
                value: null
            },
            specularMapTransform: {
                value: new An
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            envMapRotation: {
                value: new An
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            ior: {
                value: 1.5
            },
            refractionRatio: {
                value: .98
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            },
            aoMapTransform: {
                value: new An
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            },
            lightMapTransform: {
                value: new An
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpMapTransform: {
                value: new An
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalMapTransform: {
                value: new An
            },
            normalScale: {
                value: new ot(1, 1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementMapTransform: {
                value: new An
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            },
            emissiveMapTransform: {
                value: new An
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            },
            metalnessMapTransform: {
                value: new An
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            },
            roughnessMapTransform: {
                value: new An
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new jt(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            lightProbe: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {}
                }
            },
            directionalLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {}
                }
            },
            spotLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotLightMap: {
                value: []
            },
            spotShadowMap: {
                value: []
            },
            spotLightMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {}
                }
            },
            pointLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            },
            ltc_1: {
                value: null
            },
            ltc_2: {
                value: null
            }
        },
        points: {
            diffuse: {
                value: new jt(16777215)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            alphaMap: {
                value: null
            },
            alphaMapTransform: {
                value: new An
            },
            alphaTest: {
                value: 0
            },
            uvTransform: {
                value: new An
            }
        },
        sprite: {
            diffuse: {
                value: new jt(16777215)
            },
            opacity: {
                value: 1
            },
            center: {
                value: new ot(.5, .5)
            },
            rotation: {
                value: 0
            },
            map: {
                value: null
            },
            mapTransform: {
                value: new An
            },
            alphaMap: {
                value: null
            },
            alphaMapTransform: {
                value: new An
            },
            alphaTest: {
                value: 0
            }
        }
    }, uc = {
        basic: {
            uniforms: Lo([
                Mt.common,
                Mt.specularmap,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.fog
            ]),
            vertexShader: Un.meshbasic_vert,
            fragmentShader: Un.meshbasic_frag
        },
        lambert: {
            uniforms: Lo([
                Mt.common,
                Mt.specularmap,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new jt(0)
                    }
                }
            ]),
            vertexShader: Un.meshlambert_vert,
            fragmentShader: Un.meshlambert_frag
        },
        phong: {
            uniforms: Lo([
                Mt.common,
                Mt.specularmap,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new jt(0)
                    },
                    specular: {
                        value: new jt(1118481)
                    },
                    shininess: {
                        value: 30
                    }
                }
            ]),
            vertexShader: Un.meshphong_vert,
            fragmentShader: Un.meshphong_frag
        },
        standard: {
            uniforms: Lo([
                Mt.common,
                Mt.envmap,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.roughnessmap,
                Mt.metalnessmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new jt(0)
                    },
                    roughness: {
                        value: 1
                    },
                    metalness: {
                        value: 0
                    },
                    envMapIntensity: {
                        value: 1
                    }
                }
            ]),
            vertexShader: Un.meshphysical_vert,
            fragmentShader: Un.meshphysical_frag
        },
        toon: {
            uniforms: Lo([
                Mt.common,
                Mt.aomap,
                Mt.lightmap,
                Mt.emissivemap,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.gradientmap,
                Mt.fog,
                Mt.lights,
                {
                    emissive: {
                        value: new jt(0)
                    }
                }
            ]),
            vertexShader: Un.meshtoon_vert,
            fragmentShader: Un.meshtoon_frag
        },
        matcap: {
            uniforms: Lo([
                Mt.common,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                Mt.fog,
                {
                    matcap: {
                        value: null
                    }
                }
            ]),
            vertexShader: Un.meshmatcap_vert,
            fragmentShader: Un.meshmatcap_frag
        },
        points: {
            uniforms: Lo([
                Mt.points,
                Mt.fog
            ]),
            vertexShader: Un.points_vert,
            fragmentShader: Un.points_frag
        },
        dashed: {
            uniforms: Lo([
                Mt.common,
                Mt.fog,
                {
                    scale: {
                        value: 1
                    },
                    dashSize: {
                        value: 1
                    },
                    totalSize: {
                        value: 2
                    }
                }
            ]),
            vertexShader: Un.linedashed_vert,
            fragmentShader: Un.linedashed_frag
        },
        depth: {
            uniforms: Lo([
                Mt.common,
                Mt.displacementmap
            ]),
            vertexShader: Un.depth_vert,
            fragmentShader: Un.depth_frag
        },
        normal: {
            uniforms: Lo([
                Mt.common,
                Mt.bumpmap,
                Mt.normalmap,
                Mt.displacementmap,
                {
                    opacity: {
                        value: 1
                    }
                }
            ]),
            vertexShader: Un.meshnormal_vert,
            fragmentShader: Un.meshnormal_frag
        },
        sprite: {
            uniforms: Lo([
                Mt.sprite,
                Mt.fog
            ]),
            vertexShader: Un.sprite_vert,
            fragmentShader: Un.sprite_frag
        },
        background: {
            uniforms: {
                uvTransform: {
                    value: new An
                },
                t2D: {
                    value: null
                },
                backgroundIntensity: {
                    value: 1
                }
            },
            vertexShader: Un.background_vert,
            fragmentShader: Un.background_frag
        },
        backgroundCube: {
            uniforms: {
                envMap: {
                    value: null
                },
                flipEnvMap: {
                    value: -1
                },
                backgroundBlurriness: {
                    value: 0
                },
                backgroundIntensity: {
                    value: 1
                },
                backgroundRotation: {
                    value: new An
                }
            },
            vertexShader: Un.backgroundCube_vert,
            fragmentShader: Un.backgroundCube_frag
        },
        cube: {
            uniforms: {
                tCube: {
                    value: null
                },
                tFlip: {
                    value: -1
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: Un.cube_vert,
            fragmentShader: Un.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: Un.equirect_vert,
            fragmentShader: Un.equirect_frag
        },
        distanceRGBA: {
            uniforms: Lo([
                Mt.common,
                Mt.displacementmap,
                {
                    referencePosition: {
                        value: new ve
                    },
                    nearDistance: {
                        value: 1
                    },
                    farDistance: {
                        value: 1e3
                    }
                }
            ]),
            vertexShader: Un.distanceRGBA_vert,
            fragmentShader: Un.distanceRGBA_frag
        },
        shadow: {
            uniforms: Lo([
                Mt.lights,
                Mt.fog,
                {
                    color: {
                        value: new jt(0)
                    },
                    opacity: {
                        value: 1
                    }
                }
            ]),
            vertexShader: Un.shadow_vert,
            fragmentShader: Un.shadow_frag
        }
    };
    uc.physical = {
        uniforms: Lo([
            uc.standard.uniforms,
            {
                clearcoat: {
                    value: 0
                },
                clearcoatMap: {
                    value: null
                },
                clearcoatMapTransform: {
                    value: new An
                },
                clearcoatNormalMap: {
                    value: null
                },
                clearcoatNormalMapTransform: {
                    value: new An
                },
                clearcoatNormalScale: {
                    value: new ot(1, 1)
                },
                clearcoatRoughness: {
                    value: 0
                },
                clearcoatRoughnessMap: {
                    value: null
                },
                clearcoatRoughnessMapTransform: {
                    value: new An
                },
                dispersion: {
                    value: 0
                },
                iridescence: {
                    value: 0
                },
                iridescenceMap: {
                    value: null
                },
                iridescenceMapTransform: {
                    value: new An
                },
                iridescenceIOR: {
                    value: 1.3
                },
                iridescenceThicknessMinimum: {
                    value: 100
                },
                iridescenceThicknessMaximum: {
                    value: 400
                },
                iridescenceThicknessMap: {
                    value: null
                },
                iridescenceThicknessMapTransform: {
                    value: new An
                },
                sheen: {
                    value: 0
                },
                sheenColor: {
                    value: new jt(0)
                },
                sheenColorMap: {
                    value: null
                },
                sheenColorMapTransform: {
                    value: new An
                },
                sheenRoughness: {
                    value: 1
                },
                sheenRoughnessMap: {
                    value: null
                },
                sheenRoughnessMapTransform: {
                    value: new An
                },
                transmission: {
                    value: 0
                },
                transmissionMap: {
                    value: null
                },
                transmissionMapTransform: {
                    value: new An
                },
                transmissionSamplerSize: {
                    value: new ot
                },
                transmissionSamplerMap: {
                    value: null
                },
                thickness: {
                    value: 0
                },
                thicknessMap: {
                    value: null
                },
                thicknessMapTransform: {
                    value: new An
                },
                attenuationDistance: {
                    value: 0
                },
                attenuationColor: {
                    value: new jt(0)
                },
                specularColor: {
                    value: new jt(1, 1, 1)
                },
                specularColorMap: {
                    value: null
                },
                specularColorMapTransform: {
                    value: new An
                },
                specularIntensity: {
                    value: 1
                },
                specularIntensityMap: {
                    value: null
                },
                specularIntensityMapTransform: {
                    value: new An
                },
                anisotropyVector: {
                    value: new ot
                },
                anisotropyMap: {
                    value: null
                },
                anisotropyMapTransform: {
                    value: new An
                }
            }
        ]),
        vertexShader: Un.meshphysical_vert,
        fragmentShader: Un.meshphysical_frag
    };
    const pS = {
        r: 0,
        b: 0,
        g: 0
    }, kp = new tl, Jbe = new gn;
    function Qbe(t, e, n, r, i, s, o) {
        const a = new jt(0);
        let l = s === !0 ? 0 : 1, c, u, f = null, h = 0, m = null;
        function v(E) {
            let T = E.isScene === !0 ? E.background : null;
            return T && T.isTexture && (T = (E.backgroundBlurriness > 0 ? n : e).get(T)), T;
        }
        function _(E) {
            let T = !1;
            const P = v(E);
            P === null ? b(a, l) : P && P.isColor && (b(P, 1), T = !0);
            const A = t.xr.getEnvironmentBlendMode();
            A === "additive" ? r.buffers.color.setClear(0, 0, 0, 1, o) : A === "alpha-blend" && r.buffers.color.setClear(0, 0, 0, 0, o), (t.autoClear || T) && (r.buffers.depth.setTest(!0), r.buffers.depth.setMask(!0), r.buffers.color.setMask(!0), t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil));
        }
        function w(E, T) {
            const P = v(T);
            P && (P.isCubeTexture || P.mapping === zy) ? (u === void 0 && (u = new Ji(new zm(1, 1, 1), new Sc({
                name: "BackgroundCubeMaterial",
                uniforms: My(uc.backgroundCube.uniforms),
                vertexShader: uc.backgroundCube.vertexShader,
                fragmentShader: uc.backgroundCube.fragmentShader,
                side: Wo,
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            })), u.geometry.deleteAttribute("normal"), u.geometry.deleteAttribute("uv"), u.onBeforeRender = function(A, O, D) {
                this.matrixWorld.copyPosition(D.matrixWorld);
            }, Object.defineProperty(u.material, "envMap", {
                get: function() {
                    return this.uniforms.envMap.value;
                }
            }), i.update(u)), kp.copy(T.backgroundRotation), kp.x *= -1, kp.y *= -1, kp.z *= -1, P.isCubeTexture && P.isRenderTargetTexture === !1 && (kp.y *= -1, kp.z *= -1), u.material.uniforms.envMap.value = P, u.material.uniforms.flipEnvMap.value = P.isCubeTexture && P.isRenderTargetTexture === !1 ? -1 : 1, u.material.uniforms.backgroundBlurriness.value = T.backgroundBlurriness, u.material.uniforms.backgroundIntensity.value = T.backgroundIntensity, u.material.uniforms.backgroundRotation.value.setFromMatrix4(Jbe.makeRotationFromEuler(kp)), u.material.toneMapped = rr.getTransfer(P.colorSpace) !== br, (f !== P || h !== P.version || m !== t.toneMapping) && (u.material.needsUpdate = !0, f = P, h = P.version, m = t.toneMapping), u.layers.enableAll(), E.unshift(u, u.geometry, u.material, 0, 0, null)) : P && P.isTexture && (c === void 0 && (c = new Ji(new qy(2, 2), new Sc({
                name: "BackgroundMaterial",
                uniforms: My(uc.background.uniforms),
                vertexShader: uc.background.vertexShader,
                fragmentShader: uc.background.fragmentShader,
                side: Ld,
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            })), c.geometry.deleteAttribute("normal"), Object.defineProperty(c.material, "map", {
                get: function() {
                    return this.uniforms.t2D.value;
                }
            }), i.update(c)), c.material.uniforms.t2D.value = P, c.material.uniforms.backgroundIntensity.value = T.backgroundIntensity, c.material.toneMapped = rr.getTransfer(P.colorSpace) !== br, P.matrixAutoUpdate === !0 && P.updateMatrix(), c.material.uniforms.uvTransform.value.copy(P.matrix), (f !== P || h !== P.version || m !== t.toneMapping) && (c.material.needsUpdate = !0, f = P, h = P.version, m = t.toneMapping), c.layers.enableAll(), E.unshift(c, c.geometry, c.material, 0, 0, null));
        }
        function b(E, T) {
            E.getRGB(pS, lq(t)), r.buffers.color.setClear(pS.r, pS.g, pS.b, T, o);
        }
        function M() {
            u !== void 0 && (u.geometry.dispose(), u.material.dispose(), u = void 0), c !== void 0 && (c.geometry.dispose(), c.material.dispose(), c = void 0);
        }
        return {
            getClearColor: function() {
                return a;
            },
            setClearColor: function(E, T = 1) {
                a.set(E), l = T, b(a, l);
            },
            getClearAlpha: function() {
                return l;
            },
            setClearAlpha: function(E) {
                l = E, b(a, l);
            },
            render: _,
            addToRenderList: w,
            dispose: M
        };
    }
    function ewe(t, e) {
        const n = t.getParameter(t.MAX_VERTEX_ATTRIBS), r = {}, i = h(null);
        let s = i, o = !1;
        function a(N, k, U, B, j) {
            let K = !1;
            const q = f(B, U, k);
            s !== q && (s = q, c(s.object)), K = m(N, B, U, j), K && v(N, B, U, j), j !== null && e.update(j, t.ELEMENT_ARRAY_BUFFER), (K || o) && (o = !1, T(N, k, U, B), j !== null && t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, e.get(j).buffer));
        }
        function l() {
            return t.createVertexArray();
        }
        function c(N) {
            return t.bindVertexArray(N);
        }
        function u(N) {
            return t.deleteVertexArray(N);
        }
        function f(N, k, U) {
            const B = U.wireframe === !0;
            let j = r[N.id];
            j === void 0 && (j = {}, r[N.id] = j);
            let K = j[k.id];
            K === void 0 && (K = {}, j[k.id] = K);
            let q = K[B];
            return q === void 0 && (q = h(l()), K[B] = q), q;
        }
        function h(N) {
            const k = [], U = [], B = [];
            for(let j = 0; j < n; j++)k[j] = 0, U[j] = 0, B[j] = 0;
            return {
                geometry: null,
                program: null,
                wireframe: !1,
                newAttributes: k,
                enabledAttributes: U,
                attributeDivisors: B,
                object: N,
                attributes: {},
                index: null
            };
        }
        function m(N, k, U, B) {
            const j = s.attributes, K = k.attributes;
            let q = 0;
            const ee = U.getAttributes();
            for(const W in ee)if (ee[W].location >= 0) {
                const $ = j[W];
                let H = K[W];
                if (H === void 0 && (W === "instanceMatrix" && N.instanceMatrix && (H = N.instanceMatrix), W === "instanceColor" && N.instanceColor && (H = N.instanceColor)), $ === void 0 || $.attribute !== H || H && $.data !== H.data) return !0;
                q++;
            }
            return s.attributesNum !== q || s.index !== B;
        }
        function v(N, k, U, B) {
            const j = {}, K = k.attributes;
            let q = 0;
            const ee = U.getAttributes();
            for(const W in ee)if (ee[W].location >= 0) {
                let $ = K[W];
                $ === void 0 && (W === "instanceMatrix" && N.instanceMatrix && ($ = N.instanceMatrix), W === "instanceColor" && N.instanceColor && ($ = N.instanceColor));
                const H = {};
                H.attribute = $, $ && $.data && (H.data = $.data), j[W] = H, q++;
            }
            s.attributes = j, s.attributesNum = q, s.index = B;
        }
        function _() {
            const N = s.newAttributes;
            for(let k = 0, U = N.length; k < U; k++)N[k] = 0;
        }
        function w(N) {
            b(N, 0);
        }
        function b(N, k) {
            const U = s.newAttributes, B = s.enabledAttributes, j = s.attributeDivisors;
            U[N] = 1, B[N] === 0 && (t.enableVertexAttribArray(N), B[N] = 1), j[N] !== k && (t.vertexAttribDivisor(N, k), j[N] = k);
        }
        function M() {
            const N = s.newAttributes, k = s.enabledAttributes;
            for(let U = 0, B = k.length; U < B; U++)k[U] !== N[U] && (t.disableVertexAttribArray(U), k[U] = 0);
        }
        function E(N, k, U, B, j, K, q) {
            q === !0 ? t.vertexAttribIPointer(N, k, U, j, K) : t.vertexAttribPointer(N, k, U, B, j, K);
        }
        function T(N, k, U, B) {
            _();
            const j = B.attributes, K = U.getAttributes(), q = k.defaultAttributeValues;
            for(const ee in K){
                const W = K[ee];
                if (W.location >= 0) {
                    let Z = j[ee];
                    if (Z === void 0 && (ee === "instanceMatrix" && N.instanceMatrix && (Z = N.instanceMatrix), ee === "instanceColor" && N.instanceColor && (Z = N.instanceColor)), Z !== void 0) {
                        const $ = Z.normalized, H = Z.itemSize, se = e.get(Z);
                        if (se === void 0) continue;
                        const le = se.buffer, ne = se.type, ue = se.bytesPerElement, ge = ne === t.INT || ne === t.UNSIGNED_INT || Z.gpuType === m2;
                        if (Z.isInterleavedBufferAttribute) {
                            const ye = Z.data, _e = ye.stride, Te = Z.offset;
                            if (ye.isInstancedInterleavedBuffer) {
                                for(let Re = 0; Re < W.locationSize; Re++)b(W.location + Re, ye.meshPerAttribute);
                                N.isInstancedMesh !== !0 && B._maxInstanceCount === void 0 && (B._maxInstanceCount = ye.meshPerAttribute * ye.count);
                            } else for(let Re = 0; Re < W.locationSize; Re++)w(W.location + Re);
                            t.bindBuffer(t.ARRAY_BUFFER, le);
                            for(let Re = 0; Re < W.locationSize; Re++)E(W.location + Re, H / W.locationSize, ne, $, _e * ue, (Te + H / W.locationSize * Re) * ue, ge);
                        } else {
                            if (Z.isInstancedBufferAttribute) {
                                for(let ye = 0; ye < W.locationSize; ye++)b(W.location + ye, Z.meshPerAttribute);
                                N.isInstancedMesh !== !0 && B._maxInstanceCount === void 0 && (B._maxInstanceCount = Z.meshPerAttribute * Z.count);
                            } else for(let ye = 0; ye < W.locationSize; ye++)w(W.location + ye);
                            t.bindBuffer(t.ARRAY_BUFFER, le);
                            for(let ye = 0; ye < W.locationSize; ye++)E(W.location + ye, H / W.locationSize, ne, $, H * ue, H / W.locationSize * ye * ue, ge);
                        }
                    } else if (q !== void 0) {
                        const $ = q[ee];
                        if ($ !== void 0) switch($.length){
                            case 2:
                                t.vertexAttrib2fv(W.location, $);
                                break;
                            case 3:
                                t.vertexAttrib3fv(W.location, $);
                                break;
                            case 4:
                                t.vertexAttrib4fv(W.location, $);
                                break;
                            default:
                                t.vertexAttrib1fv(W.location, $);
                        }
                    }
                }
            }
            M();
        }
        function P() {
            D();
            for(const N in r){
                const k = r[N];
                for(const U in k){
                    const B = k[U];
                    for(const j in B)u(B[j].object), delete B[j];
                    delete k[U];
                }
                delete r[N];
            }
        }
        function A(N) {
            if (r[N.id] === void 0) return;
            const k = r[N.id];
            for(const U in k){
                const B = k[U];
                for(const j in B)u(B[j].object), delete B[j];
                delete k[U];
            }
            delete r[N.id];
        }
        function O(N) {
            for(const k in r){
                const U = r[k];
                if (U[N.id] === void 0) continue;
                const B = U[N.id];
                for(const j in B)u(B[j].object), delete B[j];
                delete U[N.id];
            }
        }
        function D() {
            R(), o = !0, s !== i && (s = i, c(s.object));
        }
        function R() {
            i.geometry = null, i.program = null, i.wireframe = !1;
        }
        return {
            setup: a,
            reset: D,
            resetDefaultState: R,
            dispose: P,
            releaseStatesOfGeometry: A,
            releaseStatesOfProgram: O,
            initAttributes: _,
            enableAttribute: w,
            disableUnusedAttributes: M
        };
    }
    function twe(t, e, n) {
        let r;
        function i(c) {
            r = c;
        }
        function s(c, u) {
            t.drawArrays(r, c, u), n.update(u, r, 1);
        }
        function o(c, u, f) {
            f !== 0 && (t.drawArraysInstanced(r, c, u, f), n.update(u, r, f));
        }
        function a(c, u, f) {
            if (f === 0) return;
            e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(r, c, 0, u, 0, f);
            let m = 0;
            for(let v = 0; v < f; v++)m += u[v];
            n.update(m, r, 1);
        }
        function l(c, u, f, h) {
            if (f === 0) return;
            const m = e.get("WEBGL_multi_draw");
            if (m === null) for(let v = 0; v < c.length; v++)o(c[v], u[v], h[v]);
            else {
                m.multiDrawArraysInstancedWEBGL(r, c, 0, u, 0, h, 0, f);
                let v = 0;
                for(let _ = 0; _ < f; _++)v += u[_] * h[_];
                n.update(v, r, 1);
            }
        }
        this.setMode = i, this.render = s, this.renderInstances = o, this.renderMultiDraw = a, this.renderMultiDrawInstances = l;
    }
    function nwe(t, e, n, r) {
        let i;
        function s() {
            if (i !== void 0) return i;
            if (e.has("EXT_texture_filter_anisotropic") === !0) {
                const O = e.get("EXT_texture_filter_anisotropic");
                i = t.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
            } else i = 0;
            return i;
        }
        function o(O) {
            return !(O !== lo && r.convert(O) !== t.getParameter(t.IMPLEMENTATION_COLOR_READ_FORMAT));
        }
        function a(O) {
            const D = O === Vy && (e.has("EXT_color_buffer_half_float") || e.has("EXT_color_buffer_float"));
            return !(O !== _c && r.convert(O) !== t.getParameter(t.IMPLEMENTATION_COLOR_READ_TYPE) && O !== xa && !D);
        }
        function l(O) {
            if (O === "highp") {
                if (t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision > 0) return "highp";
                O = "mediump";
            }
            return O === "mediump" && t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision > 0 && t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
        }
        let c = n.precision !== void 0 ? n.precision : "highp";
        const u = l(c);
        u !== c && (console.warn("THREE.WebGLRenderer:", c, "not supported, using", u, "instead."), c = u);
        const f = n.logarithmicDepthBuffer === !0, h = n.reverseDepthBuffer === !0 && e.has("EXT_clip_control"), m = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS), v = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS), _ = t.getParameter(t.MAX_TEXTURE_SIZE), w = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE), b = t.getParameter(t.MAX_VERTEX_ATTRIBS), M = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS), E = t.getParameter(t.MAX_VARYING_VECTORS), T = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS), P = v > 0, A = t.getParameter(t.MAX_SAMPLES);
        return {
            isWebGL2: !0,
            getMaxAnisotropy: s,
            getMaxPrecision: l,
            textureFormatReadable: o,
            textureTypeReadable: a,
            precision: c,
            logarithmicDepthBuffer: f,
            reverseDepthBuffer: h,
            maxTextures: m,
            maxVertexTextures: v,
            maxTextureSize: _,
            maxCubemapSize: w,
            maxAttributes: b,
            maxVertexUniforms: M,
            maxVaryings: E,
            maxFragmentUniforms: T,
            vertexTextures: P,
            maxSamples: A
        };
    }
    function rwe(t) {
        const e = this;
        let n = null, r = 0, i = !1, s = !1;
        const o = new vd, a = new An, l = {
            value: null,
            needsUpdate: !1
        };
        this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(f, h) {
            const m = f.length !== 0 || h || r !== 0 || i;
            return i = h, r = f.length, m;
        }, this.beginShadows = function() {
            s = !0, u(null);
        }, this.endShadows = function() {
            s = !1;
        }, this.setGlobalState = function(f, h) {
            n = u(f, h, 0);
        }, this.setState = function(f, h, m) {
            const v = f.clippingPlanes, _ = f.clipIntersection, w = f.clipShadows, b = t.get(f);
            if (!i || v === null || v.length === 0 || s && !w) s ? u(null) : c();
            else {
                const M = s ? 0 : r, E = M * 4;
                let T = b.clippingState || null;
                l.value = T, T = u(v, h, E, m);
                for(let P = 0; P !== E; ++P)T[P] = n[P];
                b.clippingState = T, this.numIntersection = _ ? this.numPlanes : 0, this.numPlanes += M;
            }
        };
        function c() {
            l.value !== n && (l.value = n, l.needsUpdate = r > 0), e.numPlanes = r, e.numIntersection = 0;
        }
        function u(f, h, m, v) {
            const _ = f !== null ? f.length : 0;
            let w = null;
            if (_ !== 0) {
                if (w = l.value, v !== !0 || w === null) {
                    const b = m + _ * 4, M = h.matrixWorldInverse;
                    a.getNormalMatrix(M), (w === null || w.length < b) && (w = new Float32Array(b));
                    for(let E = 0, T = m; E !== _; ++E, T += 4)o.copy(f[E]).applyMatrix4(M, a), o.normal.toArray(w, T), w[T + 3] = o.constant;
                }
                l.value = w, l.needsUpdate = !0;
            }
            return e.numPlanes = _, e.numIntersection = 0, w;
        }
    }
    function iwe(t) {
        let e = new WeakMap;
        function n(o, a) {
            return a === $b ? o.mapping = Fd : a === Gb && (o.mapping = _h), o;
        }
        function r(o) {
            if (o && o.isTexture) {
                const a = o.mapping;
                if (a === $b || a === Gb) if (e.has(o)) {
                    const l = e.get(o).texture;
                    return n(l, o.mapping);
                } else {
                    const l = o.image;
                    if (l && l.height > 0) {
                        const c = new dq(l.height);
                        return c.fromEquirectangularTexture(t, o), e.set(o, c), o.addEventListener("dispose", i), n(c.texture, o.mapping);
                    } else return null;
                }
            }
            return o;
        }
        function i(o) {
            const a = o.target;
            a.removeEventListener("dispose", i);
            const l = e.get(a);
            l !== void 0 && (e.delete(a), l.dispose());
        }
        function s() {
            e = new WeakMap;
        }
        return {
            get: r,
            dispose: s
        };
    }
    const j0 = 4, J8 = [
        .125,
        .215,
        .35,
        .446,
        .526,
        .582
    ], $p = 20, KA = new ch, Q8 = new jt;
    let YA = null, ZA = 0, JA = 0, QA = !1;
    const Vp = (1 + Math.sqrt(5)) / 2, f0 = 1 / Vp, ej = [
        new ve(-Vp, f0, 0),
        new ve(Vp, f0, 0),
        new ve(-f0, 0, Vp),
        new ve(f0, 0, Vp),
        new ve(0, Vp, -f0),
        new ve(0, Vp, f0),
        new ve(-1, 1, -1),
        new ve(1, 1, -1),
        new ve(-1, 1, 1),
        new ve(1, 1, 1)
    ];
    class J3 {
        constructor(e){
            this._renderer = e, this._pingPongRenderTarget = null, this._lodMax = 0, this._cubeSize = 0, this._lodPlanes = [], this._sizeLods = [], this._sigmas = [], this._blurMaterial = null, this._cubemapMaterial = null, this._equirectMaterial = null, this._compileMaterial(this._blurMaterial);
        }
        fromScene(e, n = 0, r = .1, i = 100) {
            YA = this._renderer.getRenderTarget(), ZA = this._renderer.getActiveCubeFace(), JA = this._renderer.getActiveMipmapLevel(), QA = this._renderer.xr.enabled, this._renderer.xr.enabled = !1, this._setSize(256);
            const s = this._allocateTargets();
            return s.depthBuffer = !0, this._sceneToCubeUV(e, r, i, s), n > 0 && this._blur(s, 0, 0, n), this._applyPMREM(s), this._cleanup(s), s;
        }
        fromEquirectangular(e, n = null) {
            return this._fromTexture(e, n);
        }
        fromCubemap(e, n = null) {
            return this._fromTexture(e, n);
        }
        compileCubemapShader() {
            this._cubemapMaterial === null && (this._cubemapMaterial = rj(), this._compileMaterial(this._cubemapMaterial));
        }
        compileEquirectangularShader() {
            this._equirectMaterial === null && (this._equirectMaterial = nj(), this._compileMaterial(this._equirectMaterial));
        }
        dispose() {
            this._dispose(), this._cubemapMaterial !== null && this._cubemapMaterial.dispose(), this._equirectMaterial !== null && this._equirectMaterial.dispose();
        }
        _setSize(e) {
            this._lodMax = Math.floor(Math.log2(e)), this._cubeSize = Math.pow(2, this._lodMax);
        }
        _dispose() {
            this._blurMaterial !== null && this._blurMaterial.dispose(), this._pingPongRenderTarget !== null && this._pingPongRenderTarget.dispose();
            for(let e = 0; e < this._lodPlanes.length; e++)this._lodPlanes[e].dispose();
        }
        _cleanup(e) {
            this._renderer.setRenderTarget(YA, ZA, JA), this._renderer.xr.enabled = QA, e.scissorTest = !1, mS(e, 0, 0, e.width, e.height);
        }
        _fromTexture(e, n) {
            e.mapping === Fd || e.mapping === _h ? this._setSize(e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width) : this._setSize(e.image.width / 4), YA = this._renderer.getRenderTarget(), ZA = this._renderer.getActiveCubeFace(), JA = this._renderer.getActiveMipmapLevel(), QA = this._renderer.xr.enabled, this._renderer.xr.enabled = !1;
            const r = n || this._allocateTargets();
            return this._textureToCubeUV(e, r), this._applyPMREM(r), this._cleanup(r), r;
        }
        _allocateTargets() {
            const e = 3 * Math.max(this._cubeSize, 112), n = 4 * this._cubeSize, r = {
                magFilter: ds,
                minFilter: ds,
                generateMipmaps: !1,
                type: Vy,
                format: lo,
                colorSpace: Nm,
                depthBuffer: !1
            }, i = tj(e, n, r);
            if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== e || this._pingPongRenderTarget.height !== n) {
                this._pingPongRenderTarget !== null && this._dispose(), this._pingPongRenderTarget = tj(e, n, r);
                const { _lodMax: s } = this;
                ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = swe(s)), this._blurMaterial = owe(s, e, n);
            }
            return i;
        }
        _compileMaterial(e) {
            const n = new Ji(this._lodPlanes[0], e);
            this._renderer.compile(n, KA);
        }
        _sceneToCubeUV(e, n, r, i) {
            const a = new Oi(90, 1, n, r), l = [
                1,
                -1,
                1,
                1,
                1,
                1
            ], c = [
                1,
                1,
                1,
                -1,
                -1,
                -1
            ], u = this._renderer, f = u.autoClear, h = u.toneMapping;
            u.getClearColor(Q8), u.toneMapping = lu, u.autoClear = !1;
            const m = new Rh({
                name: "PMREM.Background",
                side: Wo,
                depthWrite: !1,
                depthTest: !1
            }), v = new Ji(new zm, m);
            let _ = !1;
            const w = e.background;
            w ? w.isColor && (m.color.copy(w), e.background = null, _ = !0) : (m.color.copy(Q8), _ = !0);
            for(let b = 0; b < 6; b++){
                const M = b % 3;
                M === 0 ? (a.up.set(0, l[b], 0), a.lookAt(c[b], 0, 0)) : M === 1 ? (a.up.set(0, 0, l[b]), a.lookAt(0, c[b], 0)) : (a.up.set(0, l[b], 0), a.lookAt(0, 0, c[b]));
                const E = this._cubeSize;
                mS(i, M * E, b > 2 ? E : 0, E, E), u.setRenderTarget(i), _ && u.render(v, a), u.render(e, a);
            }
            v.geometry.dispose(), v.material.dispose(), u.toneMapping = h, u.autoClear = f, e.background = w;
        }
        _textureToCubeUV(e, n) {
            const r = this._renderer, i = e.mapping === Fd || e.mapping === _h;
            i ? (this._cubemapMaterial === null && (this._cubemapMaterial = rj()), this._cubemapMaterial.uniforms.flipEnvMap.value = e.isRenderTargetTexture === !1 ? -1 : 1) : this._equirectMaterial === null && (this._equirectMaterial = nj());
            const s = i ? this._cubemapMaterial : this._equirectMaterial, o = new Ji(this._lodPlanes[0], s), a = s.uniforms;
            a.envMap.value = e;
            const l = this._cubeSize;
            mS(n, 0, 0, 3 * l, 2 * l), r.setRenderTarget(n), r.render(o, KA);
        }
        _applyPMREM(e) {
            const n = this._renderer, r = n.autoClear;
            n.autoClear = !1;
            const i = this._lodPlanes.length;
            for(let s = 1; s < i; s++){
                const o = Math.sqrt(this._sigmas[s] * this._sigmas[s] - this._sigmas[s - 1] * this._sigmas[s - 1]), a = ej[(i - s - 1) % ej.length];
                this._blur(e, s - 1, s, o, a);
            }
            n.autoClear = r;
        }
        _blur(e, n, r, i, s) {
            const o = this._pingPongRenderTarget;
            this._halfBlur(e, o, n, r, i, "latitudinal", s), this._halfBlur(o, e, r, r, i, "longitudinal", s);
        }
        _halfBlur(e, n, r, i, s, o, a) {
            const l = this._renderer, c = this._blurMaterial;
            o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
            const u = 3, f = new Ji(this._lodPlanes[i], c), h = c.uniforms, m = this._sizeLods[r] - 1, v = isFinite(s) ? Math.PI / (2 * m) : 2 * Math.PI / (2 * $p - 1), _ = s / v, w = isFinite(s) ? 1 + Math.floor(u * _) : $p;
            w > $p && console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${w} samples when the maximum is set to ${$p}`);
            const b = [];
            let M = 0;
            for(let O = 0; O < $p; ++O){
                const D = O / _, R = Math.exp(-D * D / 2);
                b.push(R), O === 0 ? M += R : O < w && (M += 2 * R);
            }
            for(let O = 0; O < b.length; O++)b[O] = b[O] / M;
            h.envMap.value = e.texture, h.samples.value = w, h.weights.value = b, h.latitudinal.value = o === "latitudinal", a && (h.poleAxis.value = a);
            const { _lodMax: E } = this;
            h.dTheta.value = v, h.mipInt.value = E - r;
            const T = this._sizeLods[i], P = 3 * T * (i > E - j0 ? i - E + j0 : 0), A = 4 * (this._cubeSize - T);
            mS(n, P, A, 3 * T, 2 * T), l.setRenderTarget(n), l.render(f, KA);
        }
    }
    function swe(t) {
        const e = [], n = [], r = [];
        let i = t;
        const s = t - j0 + 1 + J8.length;
        for(let o = 0; o < s; o++){
            const a = Math.pow(2, i);
            n.push(a);
            let l = 1 / a;
            o > t - j0 ? l = J8[o - t + j0 - 1] : o === 0 && (l = 0), r.push(l);
            const c = 1 / (a - 2), u = -c, f = 1 + c, h = [
                u,
                u,
                f,
                u,
                f,
                f,
                u,
                u,
                f,
                f,
                u,
                f
            ], m = 6, v = 6, _ = 3, w = 2, b = 1, M = new Float32Array(_ * v * m), E = new Float32Array(w * v * m), T = new Float32Array(b * v * m);
            for(let A = 0; A < m; A++){
                const O = A % 3 * 2 / 3 - 1, D = A > 2 ? 0 : -1, R = [
                    O,
                    D,
                    0,
                    O + 2 / 3,
                    D,
                    0,
                    O + 2 / 3,
                    D + 1,
                    0,
                    O,
                    D,
                    0,
                    O + 2 / 3,
                    D + 1,
                    0,
                    O,
                    D + 1,
                    0
                ];
                M.set(R, _ * v * A), E.set(h, w * v * A);
                const N = [
                    A,
                    A,
                    A,
                    A,
                    A,
                    A
                ];
                T.set(N, b * v * A);
            }
            const P = new Vn;
            P.setAttribute("position", new Rr(M, _)), P.setAttribute("uv", new Rr(E, w)), P.setAttribute("faceIndex", new Rr(T, b)), e.push(P), i > j0 && i--;
        }
        return {
            lodPlanes: e,
            sizeLods: n,
            sigmas: r
        };
    }
    function tj(t, e, n) {
        const r = new mu(t, e, n);
        return r.texture.mapping = zy, r.texture.name = "PMREM.cubeUv", r.scissorTest = !0, r;
    }
    function mS(t, e, n, r, i) {
        t.viewport.set(e, n, r, i), t.scissor.set(e, n, r, i);
    }
    function owe(t, e, n) {
        const r = new Float32Array($p), i = new ve(0, 1, 0);
        return new Sc({
            name: "SphericalGaussianBlur",
            defines: {
                n: $p,
                CUBEUV_TEXEL_WIDTH: 1 / e,
                CUBEUV_TEXEL_HEIGHT: 1 / n,
                CUBEUV_MAX_MIP: `${t}.0`
            },
            uniforms: {
                envMap: {
                    value: null
                },
                samples: {
                    value: 1
                },
                weights: {
                    value: r
                },
                latitudinal: {
                    value: !1
                },
                dTheta: {
                    value: 0
                },
                mipInt: {
                    value: 0
                },
                poleAxis: {
                    value: i
                }
            },
            vertexShader: vO(),
            fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
            blending: Cd,
            depthTest: !1,
            depthWrite: !1
        });
    }
    function nj() {
        return new Sc({
            name: "EquirectangularToCubeUV",
            uniforms: {
                envMap: {
                    value: null
                }
            },
            vertexShader: vO(),
            fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
            blending: Cd,
            depthTest: !1,
            depthWrite: !1
        });
    }
    function rj() {
        return new Sc({
            name: "CubemapToCubeUV",
            uniforms: {
                envMap: {
                    value: null
                },
                flipEnvMap: {
                    value: -1
                }
            },
            vertexShader: vO(),
            fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
            blending: Cd,
            depthTest: !1,
            depthWrite: !1
        });
    }
    function vO() {
        return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
    }
    function awe(t) {
        let e = new WeakMap, n = null;
        function r(a) {
            if (a && a.isTexture) {
                const l = a.mapping, c = l === $b || l === Gb, u = l === Fd || l === _h;
                if (c || u) {
                    let f = e.get(a);
                    const h = f !== void 0 ? f.texture.pmremVersion : 0;
                    if (a.isRenderTargetTexture && a.pmremVersion !== h) return n === null && (n = new J3(t)), f = c ? n.fromEquirectangular(a, f) : n.fromCubemap(a, f), f.texture.pmremVersion = a.pmremVersion, e.set(a, f), f.texture;
                    if (f !== void 0) return f.texture;
                    {
                        const m = a.image;
                        return c && m && m.height > 0 || u && m && i(m) ? (n === null && (n = new J3(t)), f = c ? n.fromEquirectangular(a) : n.fromCubemap(a), f.texture.pmremVersion = a.pmremVersion, e.set(a, f), a.addEventListener("dispose", s), f.texture) : null;
                    }
                }
            }
            return a;
        }
        function i(a) {
            let l = 0;
            const c = 6;
            for(let u = 0; u < c; u++)a[u] !== void 0 && l++;
            return l === c;
        }
        function s(a) {
            const l = a.target;
            l.removeEventListener("dispose", s);
            const c = e.get(l);
            c !== void 0 && (e.delete(l), c.dispose());
        }
        function o() {
            e = new WeakMap, n !== null && (n.dispose(), n = null);
        }
        return {
            get: r,
            dispose: o
        };
    }
    function lwe(t) {
        const e = {};
        function n(r) {
            if (e[r] !== void 0) return e[r];
            let i;
            switch(r){
                case "WEBGL_depth_texture":
                    i = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    i = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    i = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    i = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    i = t.getExtension(r);
            }
            return e[r] = i, i;
        }
        return {
            has: function(r) {
                return n(r) !== null;
            },
            init: function() {
                n("EXT_color_buffer_float"), n("WEBGL_clip_cull_distance"), n("OES_texture_float_linear"), n("EXT_color_buffer_half_float"), n("WEBGL_multisampled_render_to_texture"), n("WEBGL_render_shared_exponent");
            },
            get: function(r) {
                const i = n(r);
                return i === null && S0("THREE.WebGLRenderer: " + r + " extension not supported."), i;
            }
        };
    }
    function cwe(t, e, n, r) {
        const i = {}, s = new WeakMap;
        function o(f) {
            const h = f.target;
            h.index !== null && e.remove(h.index);
            for(const v in h.attributes)e.remove(h.attributes[v]);
            h.removeEventListener("dispose", o), delete i[h.id];
            const m = s.get(h);
            m && (e.remove(m), s.delete(h)), r.releaseStatesOfGeometry(h), h.isInstancedBufferGeometry === !0 && delete h._maxInstanceCount, n.memory.geometries--;
        }
        function a(f, h) {
            return i[h.id] === !0 || (h.addEventListener("dispose", o), i[h.id] = !0, n.memory.geometries++), h;
        }
        function l(f) {
            const h = f.attributes;
            for(const m in h)e.update(h[m], t.ARRAY_BUFFER);
        }
        function c(f) {
            const h = [], m = f.index, v = f.attributes.position;
            let _ = 0;
            if (m !== null) {
                const M = m.array;
                _ = m.version;
                for(let E = 0, T = M.length; E < T; E += 3){
                    const P = M[E + 0], A = M[E + 1], O = M[E + 2];
                    h.push(P, A, A, O, O, P);
                }
            } else if (v !== void 0) {
                const M = v.array;
                _ = v.version;
                for(let E = 0, T = M.length / 3 - 1; E < T; E += 3){
                    const P = E + 0, A = E + 1, O = E + 2;
                    h.push(P, A, A, O, O, P);
                }
            } else return;
            const w = new (iq(h) ? $k : Hk)(h, 1);
            w.version = _;
            const b = s.get(f);
            b && e.remove(b), s.set(f, w);
        }
        function u(f) {
            const h = s.get(f);
            if (h) {
                const m = f.index;
                m !== null && h.version < m.version && c(f);
            } else c(f);
            return s.get(f);
        }
        return {
            get: a,
            update: l,
            getWireframeAttribute: u
        };
    }
    function uwe(t, e, n) {
        let r;
        function i(h) {
            r = h;
        }
        let s, o;
        function a(h) {
            s = h.type, o = h.bytesPerElement;
        }
        function l(h, m) {
            t.drawElements(r, m, s, h * o), n.update(m, r, 1);
        }
        function c(h, m, v) {
            v !== 0 && (t.drawElementsInstanced(r, m, s, h * o, v), n.update(m, r, v));
        }
        function u(h, m, v) {
            if (v === 0) return;
            e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(r, m, 0, s, h, 0, v);
            let w = 0;
            for(let b = 0; b < v; b++)w += m[b];
            n.update(w, r, 1);
        }
        function f(h, m, v, _) {
            if (v === 0) return;
            const w = e.get("WEBGL_multi_draw");
            if (w === null) for(let b = 0; b < h.length; b++)c(h[b] / o, m[b], _[b]);
            else {
                w.multiDrawElementsInstancedWEBGL(r, m, 0, s, h, 0, _, 0, v);
                let b = 0;
                for(let M = 0; M < v; M++)b += m[M] * _[M];
                n.update(b, r, 1);
            }
        }
        this.setMode = i, this.setIndex = a, this.render = l, this.renderInstances = c, this.renderMultiDraw = u, this.renderMultiDrawInstances = f;
    }
    function dwe(t) {
        const e = {
            geometries: 0,
            textures: 0
        }, n = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        function r(s, o, a) {
            switch(n.calls++, o){
                case t.TRIANGLES:
                    n.triangles += a * (s / 3);
                    break;
                case t.LINES:
                    n.lines += a * (s / 2);
                    break;
                case t.LINE_STRIP:
                    n.lines += a * (s - 1);
                    break;
                case t.LINE_LOOP:
                    n.lines += a * s;
                    break;
                case t.POINTS:
                    n.points += a * s;
                    break;
                default:
                    console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                    break;
            }
        }
        function i() {
            n.calls = 0, n.triangles = 0, n.points = 0, n.lines = 0;
        }
        return {
            memory: e,
            render: n,
            programs: null,
            autoReset: !0,
            reset: i,
            update: r
        };
    }
    function fwe(t, e, n) {
        const r = new WeakMap, i = new cr;
        function s(o, a, l) {
            const c = o.morphTargetInfluences, u = a.morphAttributes.position || a.morphAttributes.normal || a.morphAttributes.color, f = u !== void 0 ? u.length : 0;
            let h = r.get(a);
            if (h === void 0 || h.count !== f) {
                let R = function() {
                    O.dispose(), r.delete(a), a.removeEventListener("dispose", R);
                };
                h !== void 0 && h.texture.dispose();
                const m = a.morphAttributes.position !== void 0, v = a.morphAttributes.normal !== void 0, _ = a.morphAttributes.color !== void 0, w = a.morphAttributes.position || [], b = a.morphAttributes.normal || [], M = a.morphAttributes.color || [];
                let E = 0;
                m === !0 && (E = 1), v === !0 && (E = 2), _ === !0 && (E = 3);
                let T = a.attributes.position.count * E, P = 1;
                T > e.maxTextureSize && (P = Math.ceil(T / e.maxTextureSize), T = e.maxTextureSize);
                const A = new Float32Array(T * P * 4 * f), O = new zw(A, T, P, f);
                O.type = xa, O.needsUpdate = !0;
                const D = E * 4;
                for(let N = 0; N < f; N++){
                    const k = w[N], U = b[N], B = M[N], j = T * P * 4 * N;
                    for(let K = 0; K < k.count; K++){
                        const q = K * D;
                        m === !0 && (i.fromBufferAttribute(k, K), A[j + q + 0] = i.x, A[j + q + 1] = i.y, A[j + q + 2] = i.z, A[j + q + 3] = 0), v === !0 && (i.fromBufferAttribute(U, K), A[j + q + 4] = i.x, A[j + q + 5] = i.y, A[j + q + 6] = i.z, A[j + q + 7] = 0), _ === !0 && (i.fromBufferAttribute(B, K), A[j + q + 8] = i.x, A[j + q + 9] = i.y, A[j + q + 10] = i.z, A[j + q + 11] = B.itemSize === 4 ? i.w : 1);
                    }
                }
                h = {
                    count: f,
                    texture: O,
                    size: new ot(T, P)
                }, r.set(a, h), a.addEventListener("dispose", R);
            }
            if (o.isInstancedMesh === !0 && o.morphTexture !== null) l.getUniforms().setValue(t, "morphTexture", o.morphTexture, n);
            else {
                let m = 0;
                for(let _ = 0; _ < c.length; _++)m += c[_];
                const v = a.morphTargetsRelative ? 1 : 1 - m;
                l.getUniforms().setValue(t, "morphTargetBaseInfluence", v), l.getUniforms().setValue(t, "morphTargetInfluences", c);
            }
            l.getUniforms().setValue(t, "morphTargetsTexture", h.texture, n), l.getUniforms().setValue(t, "morphTargetsTextureSize", h.size);
        }
        return {
            update: s
        };
    }
    function hwe(t, e, n, r) {
        let i = new WeakMap;
        function s(l) {
            const c = r.render.frame, u = l.geometry, f = e.get(l, u);
            if (i.get(f) !== c && (e.update(f), i.set(f, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), i.get(l) !== c && (n.update(l.instanceMatrix, t.ARRAY_BUFFER), l.instanceColor !== null && n.update(l.instanceColor, t.ARRAY_BUFFER), i.set(l, c))), l.isSkinnedMesh) {
                const h = l.skeleton;
                i.get(h) !== c && (h.update(), i.set(h, c));
            }
            return f;
        }
        function o() {
            i = new WeakMap;
        }
        function a(l) {
            const c = l.target;
            c.removeEventListener("dispose", a), n.remove(c.instanceMatrix), c.instanceColor !== null && n.remove(c.instanceColor);
        }
        return {
            update: s,
            dispose: o
        };
    }
    const cH = new bi, ij = new Zk(1, 1), uH = new zw, dH = new S2, fH = new Ww, sj = [], oj = [], aj = new Float32Array(16), lj = new Float32Array(9), cj = new Float32Array(4);
    function Hy(t, e, n) {
        const r = t[0];
        if (r <= 0 || r > 0) return t;
        const i = e * n;
        let s = sj[i];
        if (s === void 0 && (s = new Float32Array(i), sj[i] = s), e !== 0) {
            r.toArray(s, 0);
            for(let o = 1, a = 0; o !== e; ++o)a += n, t[o].toArray(s, a);
        }
        return s;
    }
    function fs(t, e) {
        if (t.length !== e.length) return !1;
        for(let n = 0, r = t.length; n < r; n++)if (t[n] !== e[n]) return !1;
        return !0;
    }
    function hs(t, e) {
        for(let n = 0, r = e.length; n < r; n++)t[n] = e[n];
    }
    function q2(t, e) {
        let n = oj[e];
        n === void 0 && (n = new Int32Array(e), oj[e] = n);
        for(let r = 0; r !== e; ++r)n[r] = t.allocateTextureUnit();
        return n;
    }
    function pwe(t, e) {
        const n = this.cache;
        n[0] !== e && (t.uniform1f(this.addr, e), n[0] = e);
    }
    function mwe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (t.uniform2f(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
        else {
            if (fs(n, e)) return;
            t.uniform2fv(this.addr, e), hs(n, e);
        }
    }
    function gwe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (t.uniform3f(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
        else if (e.r !== void 0) (n[0] !== e.r || n[1] !== e.g || n[2] !== e.b) && (t.uniform3f(this.addr, e.r, e.g, e.b), n[0] = e.r, n[1] = e.g, n[2] = e.b);
        else {
            if (fs(n, e)) return;
            t.uniform3fv(this.addr, e), hs(n, e);
        }
    }
    function ywe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (t.uniform4f(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
        else {
            if (fs(n, e)) return;
            t.uniform4fv(this.addr, e), hs(n, e);
        }
    }
    function vwe(t, e) {
        const n = this.cache, r = e.elements;
        if (r === void 0) {
            if (fs(n, e)) return;
            t.uniformMatrix2fv(this.addr, !1, e), hs(n, e);
        } else {
            if (fs(n, r)) return;
            cj.set(r), t.uniformMatrix2fv(this.addr, !1, cj), hs(n, r);
        }
    }
    function xwe(t, e) {
        const n = this.cache, r = e.elements;
        if (r === void 0) {
            if (fs(n, e)) return;
            t.uniformMatrix3fv(this.addr, !1, e), hs(n, e);
        } else {
            if (fs(n, r)) return;
            lj.set(r), t.uniformMatrix3fv(this.addr, !1, lj), hs(n, r);
        }
    }
    function bwe(t, e) {
        const n = this.cache, r = e.elements;
        if (r === void 0) {
            if (fs(n, e)) return;
            t.uniformMatrix4fv(this.addr, !1, e), hs(n, e);
        } else {
            if (fs(n, r)) return;
            aj.set(r), t.uniformMatrix4fv(this.addr, !1, aj), hs(n, r);
        }
    }
    function wwe(t, e) {
        const n = this.cache;
        n[0] !== e && (t.uniform1i(this.addr, e), n[0] = e);
    }
    function _we(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (t.uniform2i(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
        else {
            if (fs(n, e)) return;
            t.uniform2iv(this.addr, e), hs(n, e);
        }
    }
    function Swe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (t.uniform3i(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
        else {
            if (fs(n, e)) return;
            t.uniform3iv(this.addr, e), hs(n, e);
        }
    }
    function Ewe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (t.uniform4i(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
        else {
            if (fs(n, e)) return;
            t.uniform4iv(this.addr, e), hs(n, e);
        }
    }
    function Mwe(t, e) {
        const n = this.cache;
        n[0] !== e && (t.uniform1ui(this.addr, e), n[0] = e);
    }
    function Twe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (t.uniform2ui(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
        else {
            if (fs(n, e)) return;
            t.uniform2uiv(this.addr, e), hs(n, e);
        }
    }
    function Cwe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (t.uniform3ui(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
        else {
            if (fs(n, e)) return;
            t.uniform3uiv(this.addr, e), hs(n, e);
        }
    }
    function Rwe(t, e) {
        const n = this.cache;
        if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (t.uniform4ui(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
        else {
            if (fs(n, e)) return;
            t.uniform4uiv(this.addr, e), hs(n, e);
        }
    }
    function Iwe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i);
        let s;
        this.type === t.SAMPLER_2D_SHADOW ? (ij.compareFunction = Wk, s = ij) : s = cH, n.setTexture2D(e || s, i);
    }
    function Awe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i), n.setTexture3D(e || dH, i);
    }
    function Nwe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i), n.setTextureCube(e || fH, i);
    }
    function Pwe(t, e, n) {
        const r = this.cache, i = n.allocateTextureUnit();
        r[0] !== i && (t.uniform1i(this.addr, i), r[0] = i), n.setTexture2DArray(e || uH, i);
    }
    function kwe(t) {
        switch(t){
            case 5126:
                return pwe;
            case 35664:
                return mwe;
            case 35665:
                return gwe;
            case 35666:
                return ywe;
            case 35674:
                return vwe;
            case 35675:
                return xwe;
            case 35676:
                return bwe;
            case 5124:
            case 35670:
                return wwe;
            case 35667:
            case 35671:
                return _we;
            case 35668:
            case 35672:
                return Swe;
            case 35669:
            case 35673:
                return Ewe;
            case 5125:
                return Mwe;
            case 36294:
                return Twe;
            case 36295:
                return Cwe;
            case 36296:
                return Rwe;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return Iwe;
            case 35679:
            case 36299:
            case 36307:
                return Awe;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return Nwe;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
                return Pwe;
        }
    }
    function Owe(t, e) {
        t.uniform1fv(this.addr, e);
    }
    function Dwe(t, e) {
        const n = Hy(e, this.size, 2);
        t.uniform2fv(this.addr, n);
    }
    function Lwe(t, e) {
        const n = Hy(e, this.size, 3);
        t.uniform3fv(this.addr, n);
    }
    function Fwe(t, e) {
        const n = Hy(e, this.size, 4);
        t.uniform4fv(this.addr, n);
    }
    function jwe(t, e) {
        const n = Hy(e, this.size, 4);
        t.uniformMatrix2fv(this.addr, !1, n);
    }
    function Bwe(t, e) {
        const n = Hy(e, this.size, 9);
        t.uniformMatrix3fv(this.addr, !1, n);
    }
    function Uwe(t, e) {
        const n = Hy(e, this.size, 16);
        t.uniformMatrix4fv(this.addr, !1, n);
    }
    function zwe(t, e) {
        t.uniform1iv(this.addr, e);
    }
    function Vwe(t, e) {
        t.uniform2iv(this.addr, e);
    }
    function Wwe(t, e) {
        t.uniform3iv(this.addr, e);
    }
    function qwe(t, e) {
        t.uniform4iv(this.addr, e);
    }
    function Hwe(t, e) {
        t.uniform1uiv(this.addr, e);
    }
    function $we(t, e) {
        t.uniform2uiv(this.addr, e);
    }
    function Gwe(t, e) {
        t.uniform3uiv(this.addr, e);
    }
    function Xwe(t, e) {
        t.uniform4uiv(this.addr, e);
    }
    function Kwe(t, e, n) {
        const r = this.cache, i = e.length, s = q2(n, i);
        fs(r, s) || (t.uniform1iv(this.addr, s), hs(r, s));
        for(let o = 0; o !== i; ++o)n.setTexture2D(e[o] || cH, s[o]);
    }
    function Ywe(t, e, n) {
        const r = this.cache, i = e.length, s = q2(n, i);
        fs(r, s) || (t.uniform1iv(this.addr, s), hs(r, s));
        for(let o = 0; o !== i; ++o)n.setTexture3D(e[o] || dH, s[o]);
    }
    function Zwe(t, e, n) {
        const r = this.cache, i = e.length, s = q2(n, i);
        fs(r, s) || (t.uniform1iv(this.addr, s), hs(r, s));
        for(let o = 0; o !== i; ++o)n.setTextureCube(e[o] || fH, s[o]);
    }
    function Jwe(t, e, n) {
        const r = this.cache, i = e.length, s = q2(n, i);
        fs(r, s) || (t.uniform1iv(this.addr, s), hs(r, s));
        for(let o = 0; o !== i; ++o)n.setTexture2DArray(e[o] || uH, s[o]);
    }
    function Qwe(t) {
        switch(t){
            case 5126:
                return Owe;
            case 35664:
                return Dwe;
            case 35665:
                return Lwe;
            case 35666:
                return Fwe;
            case 35674:
                return jwe;
            case 35675:
                return Bwe;
            case 35676:
                return Uwe;
            case 5124:
            case 35670:
                return zwe;
            case 35667:
            case 35671:
                return Vwe;
            case 35668:
            case 35672:
                return Wwe;
            case 35669:
            case 35673:
                return qwe;
            case 5125:
                return Hwe;
            case 36294:
                return $we;
            case 36295:
                return Gwe;
            case 36296:
                return Xwe;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return Kwe;
            case 35679:
            case 36299:
            case 36307:
                return Ywe;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return Zwe;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
                return Jwe;
        }
    }
    class e_e {
        constructor(e, n, r){
            this.id = e, this.addr = r, this.cache = [], this.type = n.type, this.setValue = kwe(n.type);
        }
    }
    class t_e {
        constructor(e, n, r){
            this.id = e, this.addr = r, this.cache = [], this.type = n.type, this.size = n.size, this.setValue = Qwe(n.type);
        }
    }
    class n_e {
        constructor(e){
            this.id = e, this.seq = [], this.map = {};
        }
        setValue(e, n, r) {
            const i = this.seq;
            for(let s = 0, o = i.length; s !== o; ++s){
                const a = i[s];
                a.setValue(e, n[a.id], r);
            }
        }
    }
    const eN = /(\w+)(\])?(\[|\.)?/g;
    function uj(t, e) {
        t.seq.push(e), t.map[e.id] = e;
    }
    function r_e(t, e, n) {
        const r = t.name, i = r.length;
        for(eN.lastIndex = 0;;){
            const s = eN.exec(r), o = eN.lastIndex;
            let a = s[1];
            const l = s[2] === "]", c = s[3];
            if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
                uj(n, c === void 0 ? new e_e(a, t, e) : new t_e(a, t, e));
                break;
            } else {
                let f = n.map[a];
                f === void 0 && (f = new n_e(a), uj(n, f)), n = f;
            }
        }
    }
    class YS {
        constructor(e, n){
            this.seq = [], this.map = {};
            const r = e.getProgramParameter(n, e.ACTIVE_UNIFORMS);
            for(let i = 0; i < r; ++i){
                const s = e.getActiveUniform(n, i), o = e.getUniformLocation(n, s.name);
                r_e(s, o, this);
            }
        }
        setValue(e, n, r, i) {
            const s = this.map[n];
            s !== void 0 && s.setValue(e, r, i);
        }
        setOptional(e, n, r) {
            const i = n[r];
            i !== void 0 && this.setValue(e, r, i);
        }
        static upload(e, n, r, i) {
            for(let s = 0, o = n.length; s !== o; ++s){
                const a = n[s], l = r[a.id];
                l.needsUpdate !== !1 && a.setValue(e, l.value, i);
            }
        }
        static seqWithValue(e, n) {
            const r = [];
            for(let i = 0, s = e.length; i !== s; ++i){
                const o = e[i];
                o.id in n && r.push(o);
            }
            return r;
        }
    }
    function dj(t, e, n) {
        const r = t.createShader(e);
        return t.shaderSource(r, n), t.compileShader(r), r;
    }
    const i_e = 37297;
    let s_e = 0;
    function o_e(t, e) {
        const n = t.split(`
`), r = [], i = Math.max(e - 6, 0), s = Math.min(e + 6, n.length);
        for(let o = i; o < s; o++){
            const a = o + 1;
            r.push(`${a === e ? ">" : " "} ${a}: ${n[o]}`);
        }
        return r.join(`
`);
    }
    const fj = new An;
    function a_e(t) {
        rr._getMatrix(fj, rr.workingColorSpace, t);
        const e = `mat3( ${fj.elements.map((n)=>n.toFixed(4))} )`;
        switch(rr.getTransfer(t)){
            case Jb:
                return [
                    e,
                    "LinearTransferOETF"
                ];
            case br:
                return [
                    e,
                    "sRGBTransferOETF"
                ];
            default:
                return console.warn("THREE.WebGLProgram: Unsupported color space: ", t), [
                    e,
                    "LinearTransferOETF"
                ];
        }
    }
    function hj(t, e, n) {
        const r = t.getShaderParameter(e, t.COMPILE_STATUS), i = t.getShaderInfoLog(e).trim();
        if (r && i === "") return "";
        const s = /ERROR: 0:(\d+)/.exec(i);
        if (s) {
            const o = parseInt(s[1]);
            return n.toUpperCase() + `

` + i + `

` + o_e(t.getShaderSource(e), o);
        } else return i;
    }
    function l_e(t, e) {
        const n = a_e(e);
        return [
            `vec4 ${t}( vec4 value ) {`,
            `	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );`,
            "}"
        ].join(`
`);
    }
    function c_e(t, e) {
        let n;
        switch(e){
            case jW:
                n = "Linear";
                break;
            case BW:
                n = "Reinhard";
                break;
            case UW:
                n = "Cineon";
                break;
            case h2:
                n = "ACESFilmic";
                break;
            case VW:
                n = "AgX";
                break;
            case WW:
                n = "Neutral";
                break;
            case zW:
                n = "Custom";
                break;
            default:
                console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), n = "Linear";
        }
        return "vec3 " + t + "( vec3 color ) { return " + n + "ToneMapping( color ); }";
    }
    const gS = new ve;
    function u_e() {
        rr.getLuminanceCoefficients(gS);
        const t = gS.x.toFixed(4), e = gS.y.toFixed(4), n = gS.z.toFixed(4);
        return [
            "float luminance( const in vec3 rgb ) {",
            `	const vec3 weights = vec3( ${t}, ${e}, ${n} );`,
            "	return dot( weights, rgb );",
            "}"
        ].join(`
`);
    }
    function d_e(t) {
        return [
            t.extensionClipCullDistance ? "#extension GL_ANGLE_clip_cull_distance : require" : "",
            t.extensionMultiDraw ? "#extension GL_ANGLE_multi_draw : require" : ""
        ].filter(Mx).join(`
`);
    }
    function f_e(t) {
        const e = [];
        for(const n in t){
            const r = t[n];
            r !== !1 && e.push("#define " + n + " " + r);
        }
        return e.join(`
`);
    }
    function h_e(t, e) {
        const n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES);
        for(let i = 0; i < r; i++){
            const s = t.getActiveAttrib(e, i), o = s.name;
            let a = 1;
            s.type === t.FLOAT_MAT2 && (a = 2), s.type === t.FLOAT_MAT3 && (a = 3), s.type === t.FLOAT_MAT4 && (a = 4), n[o] = {
                type: s.type,
                location: t.getAttribLocation(e, o),
                locationSize: a
            };
        }
        return n;
    }
    function Mx(t) {
        return t !== "";
    }
    function pj(t, e) {
        const n = e.numSpotLightShadows + e.numSpotLightMaps - e.numSpotLightShadowsWithMaps;
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, n).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
    }
    function mj(t, e) {
        return t.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
    }
    const p_e = /^[ \t]*#include +<([\w\d./]+)>/gm;
    function Q3(t) {
        return t.replace(p_e, g_e);
    }
    const m_e = new Map;
    function g_e(t, e) {
        let n = Un[e];
        if (n === void 0) {
            const r = m_e.get(e);
            if (r !== void 0) n = Un[r], console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.', e, r);
            else throw new Error("Can not resolve #include <" + e + ">");
        }
        return Q3(n);
    }
    const y_e = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
    function gj(t) {
        return t.replace(y_e, v_e);
    }
    function v_e(t, e, n, r) {
        let i = "";
        for(let s = parseInt(e); s < parseInt(n); s++)i += r.replace(/\[\s*i\s*\]/g, "[ " + s + " ]").replace(/UNROLLED_LOOP_INDEX/g, s);
        return i;
    }
    function yj(t) {
        let e = `precision ${t.precision} float;
	precision ${t.precision} int;
	precision ${t.precision} sampler2D;
	precision ${t.precision} samplerCube;
	precision ${t.precision} sampler3D;
	precision ${t.precision} sampler2DArray;
	precision ${t.precision} sampler2DShadow;
	precision ${t.precision} samplerCubeShadow;
	precision ${t.precision} sampler2DArrayShadow;
	precision ${t.precision} isampler2D;
	precision ${t.precision} isampler3D;
	precision ${t.precision} isamplerCube;
	precision ${t.precision} isampler2DArray;
	precision ${t.precision} usampler2D;
	precision ${t.precision} usampler3D;
	precision ${t.precision} usamplerCube;
	precision ${t.precision} usampler2DArray;
	`;
        return t.precision === "highp" ? e += `
#define HIGH_PRECISION` : t.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : t.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
    }
    function x_e(t) {
        let e = "SHADOWMAP_TYPE_BASIC";
        return t.shadowMapType === f2 ? e = "SHADOWMAP_TYPE_PCF" : t.shadowMapType === Zx ? e = "SHADOWMAP_TYPE_PCF_SOFT" : t.shadowMapType === oc && (e = "SHADOWMAP_TYPE_VSM"), e;
    }
    function b_e(t) {
        let e = "ENVMAP_TYPE_CUBE";
        if (t.envMap) switch(t.envMapMode){
            case Fd:
            case _h:
                e = "ENVMAP_TYPE_CUBE";
                break;
            case zy:
                e = "ENVMAP_TYPE_CUBE_UV";
                break;
        }
        return e;
    }
    function w_e(t) {
        let e = "ENVMAP_MODE_REFLECTION";
        if (t.envMap) switch(t.envMapMode){
            case _h:
                e = "ENVMAP_MODE_REFRACTION";
                break;
        }
        return e;
    }
    function __e(t) {
        let e = "ENVMAP_BLENDING_NONE";
        if (t.envMap) switch(t.combine){
            case Bw:
                e = "ENVMAP_BLENDING_MULTIPLY";
                break;
            case LW:
                e = "ENVMAP_BLENDING_MIX";
                break;
            case FW:
                e = "ENVMAP_BLENDING_ADD";
                break;
        }
        return e;
    }
    function S_e(t) {
        const e = t.envMapCubeUVHeight;
        if (e === null) return null;
        const n = Math.log2(e) - 2, r = 1 / e;
        return {
            texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 7 * 16)),
            texelHeight: r,
            maxMip: n
        };
    }
    function E_e(t, e, n, r) {
        const i = t.getContext(), s = n.defines;
        let o = n.vertexShader, a = n.fragmentShader;
        const l = x_e(n), c = b_e(n), u = w_e(n), f = __e(n), h = S_e(n), m = d_e(n), v = f_e(s), _ = i.createProgram();
        let w, b, M = n.glslVersion ? "#version " + n.glslVersion + `
` : "";
        n.isRawShaderMaterial ? (w = [
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            v
        ].filter(Mx).join(`
`), w.length > 0 && (w += `
`), b = [
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            v
        ].filter(Mx).join(`
`), b.length > 0 && (b += `
`)) : (w = [
            yj(n),
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            v,
            n.extensionClipCullDistance ? "#define USE_CLIP_DISTANCE" : "",
            n.batching ? "#define USE_BATCHING" : "",
            n.batchingColor ? "#define USE_BATCHING_COLOR" : "",
            n.instancing ? "#define USE_INSTANCING" : "",
            n.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
            n.instancingMorph ? "#define USE_INSTANCING_MORPH" : "",
            n.useFog && n.fog ? "#define USE_FOG" : "",
            n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
            n.map ? "#define USE_MAP" : "",
            n.envMap ? "#define USE_ENVMAP" : "",
            n.envMap ? "#define " + u : "",
            n.lightMap ? "#define USE_LIGHTMAP" : "",
            n.aoMap ? "#define USE_AOMAP" : "",
            n.bumpMap ? "#define USE_BUMPMAP" : "",
            n.normalMap ? "#define USE_NORMALMAP" : "",
            n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
            n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
            n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "",
            n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
            n.anisotropy ? "#define USE_ANISOTROPY" : "",
            n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
            n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
            n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
            n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
            n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
            n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
            n.specularMap ? "#define USE_SPECULARMAP" : "",
            n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
            n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
            n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
            n.metalnessMap ? "#define USE_METALNESSMAP" : "",
            n.alphaMap ? "#define USE_ALPHAMAP" : "",
            n.alphaHash ? "#define USE_ALPHAHASH" : "",
            n.transmission ? "#define USE_TRANSMISSION" : "",
            n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
            n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
            n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
            n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
            n.mapUv ? "#define MAP_UV " + n.mapUv : "",
            n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "",
            n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "",
            n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "",
            n.emissiveMapUv ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv : "",
            n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "",
            n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "",
            n.displacementMapUv ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv : "",
            n.metalnessMapUv ? "#define METALNESSMAP_UV " + n.metalnessMapUv : "",
            n.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv : "",
            n.anisotropyMapUv ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv : "",
            n.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv : "",
            n.clearcoatNormalMapUv ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv : "",
            n.clearcoatRoughnessMapUv ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + n.clearcoatRoughnessMapUv : "",
            n.iridescenceMapUv ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv : "",
            n.iridescenceThicknessMapUv ? "#define IRIDESCENCE_THICKNESSMAP_UV " + n.iridescenceThicknessMapUv : "",
            n.sheenColorMapUv ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv : "",
            n.sheenRoughnessMapUv ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv : "",
            n.specularMapUv ? "#define SPECULARMAP_UV " + n.specularMapUv : "",
            n.specularColorMapUv ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv : "",
            n.specularIntensityMapUv ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv : "",
            n.transmissionMapUv ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv : "",
            n.thicknessMapUv ? "#define THICKNESSMAP_UV " + n.thicknessMapUv : "",
            n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
            n.vertexColors ? "#define USE_COLOR" : "",
            n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
            n.vertexUv1s ? "#define USE_UV1" : "",
            n.vertexUv2s ? "#define USE_UV2" : "",
            n.vertexUv3s ? "#define USE_UV3" : "",
            n.pointsUvs ? "#define USE_POINTS_UV" : "",
            n.flatShading ? "#define FLAT_SHADED" : "",
            n.skinning ? "#define USE_SKINNING" : "",
            n.morphTargets ? "#define USE_MORPHTARGETS" : "",
            n.morphNormals && n.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
            n.morphColors ? "#define USE_MORPHCOLORS" : "",
            n.morphTargetsCount > 0 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride : "",
            n.morphTargetsCount > 0 ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount : "",
            n.doubleSided ? "#define DOUBLE_SIDED" : "",
            n.flipSided ? "#define FLIP_SIDED" : "",
            n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
            n.shadowMapEnabled ? "#define " + l : "",
            n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
            n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
            n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
            n.reverseDepthBuffer ? "#define USE_REVERSEDEPTHBUF" : "",
            "uniform mat4 modelMatrix;",
            "uniform mat4 modelViewMatrix;",
            "uniform mat4 projectionMatrix;",
            "uniform mat4 viewMatrix;",
            "uniform mat3 normalMatrix;",
            "uniform vec3 cameraPosition;",
            "uniform bool isOrthographic;",
            "#ifdef USE_INSTANCING",
            "	attribute mat4 instanceMatrix;",
            "#endif",
            "#ifdef USE_INSTANCING_COLOR",
            "	attribute vec3 instanceColor;",
            "#endif",
            "#ifdef USE_INSTANCING_MORPH",
            "	uniform sampler2D morphTexture;",
            "#endif",
            "attribute vec3 position;",
            "attribute vec3 normal;",
            "attribute vec2 uv;",
            "#ifdef USE_UV1",
            "	attribute vec2 uv1;",
            "#endif",
            "#ifdef USE_UV2",
            "	attribute vec2 uv2;",
            "#endif",
            "#ifdef USE_UV3",
            "	attribute vec2 uv3;",
            "#endif",
            "#ifdef USE_TANGENT",
            "	attribute vec4 tangent;",
            "#endif",
            "#if defined( USE_COLOR_ALPHA )",
            "	attribute vec4 color;",
            "#elif defined( USE_COLOR )",
            "	attribute vec3 color;",
            "#endif",
            "#ifdef USE_SKINNING",
            "	attribute vec4 skinIndex;",
            "	attribute vec4 skinWeight;",
            "#endif",
            `
`
        ].filter(Mx).join(`
`), b = [
            yj(n),
            "#define SHADER_TYPE " + n.shaderType,
            "#define SHADER_NAME " + n.shaderName,
            v,
            n.useFog && n.fog ? "#define USE_FOG" : "",
            n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "",
            n.alphaToCoverage ? "#define ALPHA_TO_COVERAGE" : "",
            n.map ? "#define USE_MAP" : "",
            n.matcap ? "#define USE_MATCAP" : "",
            n.envMap ? "#define USE_ENVMAP" : "",
            n.envMap ? "#define " + c : "",
            n.envMap ? "#define " + u : "",
            n.envMap ? "#define " + f : "",
            h ? "#define CUBEUV_TEXEL_WIDTH " + h.texelWidth : "",
            h ? "#define CUBEUV_TEXEL_HEIGHT " + h.texelHeight : "",
            h ? "#define CUBEUV_MAX_MIP " + h.maxMip + ".0" : "",
            n.lightMap ? "#define USE_LIGHTMAP" : "",
            n.aoMap ? "#define USE_AOMAP" : "",
            n.bumpMap ? "#define USE_BUMPMAP" : "",
            n.normalMap ? "#define USE_NORMALMAP" : "",
            n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "",
            n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "",
            n.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
            n.anisotropy ? "#define USE_ANISOTROPY" : "",
            n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "",
            n.clearcoat ? "#define USE_CLEARCOAT" : "",
            n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
            n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
            n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
            n.dispersion ? "#define USE_DISPERSION" : "",
            n.iridescence ? "#define USE_IRIDESCENCE" : "",
            n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "",
            n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "",
            n.specularMap ? "#define USE_SPECULARMAP" : "",
            n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "",
            n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "",
            n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
            n.metalnessMap ? "#define USE_METALNESSMAP" : "",
            n.alphaMap ? "#define USE_ALPHAMAP" : "",
            n.alphaTest ? "#define USE_ALPHATEST" : "",
            n.alphaHash ? "#define USE_ALPHAHASH" : "",
            n.sheen ? "#define USE_SHEEN" : "",
            n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "",
            n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "",
            n.transmission ? "#define USE_TRANSMISSION" : "",
            n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
            n.thicknessMap ? "#define USE_THICKNESSMAP" : "",
            n.vertexTangents && n.flatShading === !1 ? "#define USE_TANGENT" : "",
            n.vertexColors || n.instancingColor || n.batchingColor ? "#define USE_COLOR" : "",
            n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
            n.vertexUv1s ? "#define USE_UV1" : "",
            n.vertexUv2s ? "#define USE_UV2" : "",
            n.vertexUv3s ? "#define USE_UV3" : "",
            n.pointsUvs ? "#define USE_POINTS_UV" : "",
            n.gradientMap ? "#define USE_GRADIENTMAP" : "",
            n.flatShading ? "#define FLAT_SHADED" : "",
            n.doubleSided ? "#define DOUBLE_SIDED" : "",
            n.flipSided ? "#define FLIP_SIDED" : "",
            n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
            n.shadowMapEnabled ? "#define " + l : "",
            n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
            n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "",
            n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "",
            n.decodeVideoTextureEmissive ? "#define DECODE_VIDEO_TEXTURE_EMISSIVE" : "",
            n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
            n.reverseDepthBuffer ? "#define USE_REVERSEDEPTHBUF" : "",
            "uniform mat4 viewMatrix;",
            "uniform vec3 cameraPosition;",
            "uniform bool isOrthographic;",
            n.toneMapping !== lu ? "#define TONE_MAPPING" : "",
            n.toneMapping !== lu ? Un.tonemapping_pars_fragment : "",
            n.toneMapping !== lu ? c_e("toneMapping", n.toneMapping) : "",
            n.dithering ? "#define DITHERING" : "",
            n.opaque ? "#define OPAQUE" : "",
            Un.colorspace_pars_fragment,
            l_e("linearToOutputTexel", n.outputColorSpace),
            u_e(),
            n.useDepthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "",
            `
`
        ].filter(Mx).join(`
`)), o = Q3(o), o = pj(o, n), o = mj(o, n), a = Q3(a), a = pj(a, n), a = mj(a, n), o = gj(o), a = gj(a), n.isRawShaderMaterial !== !0 && (M = `#version 300 es
`, w = [
            m,
            "#define attribute in",
            "#define varying out",
            "#define texture2D texture"
        ].join(`
`) + `
` + w, b = [
            "#define varying in",
            n.glslVersion === W3 ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
            n.glslVersion === W3 ? "" : "#define gl_FragColor pc_fragColor",
            "#define gl_FragDepthEXT gl_FragDepth",
            "#define texture2D texture",
            "#define textureCube texture",
            "#define texture2DProj textureProj",
            "#define texture2DLodEXT textureLod",
            "#define texture2DProjLodEXT textureProjLod",
            "#define textureCubeLodEXT textureLod",
            "#define texture2DGradEXT textureGrad",
            "#define texture2DProjGradEXT textureProjGrad",
            "#define textureCubeGradEXT textureGrad"
        ].join(`
`) + `
` + b);
        const E = M + w + o, T = M + b + a, P = dj(i, i.VERTEX_SHADER, E), A = dj(i, i.FRAGMENT_SHADER, T);
        i.attachShader(_, P), i.attachShader(_, A), n.index0AttributeName !== void 0 ? i.bindAttribLocation(_, 0, n.index0AttributeName) : n.morphTargets === !0 && i.bindAttribLocation(_, 0, "position"), i.linkProgram(_);
        function O(k) {
            if (t.debug.checkShaderErrors) {
                const U = i.getProgramInfoLog(_).trim(), B = i.getShaderInfoLog(P).trim(), j = i.getShaderInfoLog(A).trim();
                let K = !0, q = !0;
                if (i.getProgramParameter(_, i.LINK_STATUS) === !1) if (K = !1, typeof t.debug.onShaderError == "function") t.debug.onShaderError(i, _, P, A);
                else {
                    const ee = hj(i, P, "vertex"), W = hj(i, A, "fragment");
                    console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(_, i.VALIDATE_STATUS) + `

Material Name: ` + k.name + `
Material Type: ` + k.type + `

Program Info Log: ` + U + `
` + ee + `
` + W);
                }
                else U !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", U) : (B === "" || j === "") && (q = !1);
                q && (k.diagnostics = {
                    runnable: K,
                    programLog: U,
                    vertexShader: {
                        log: B,
                        prefix: w
                    },
                    fragmentShader: {
                        log: j,
                        prefix: b
                    }
                });
            }
            i.deleteShader(P), i.deleteShader(A), D = new YS(i, _), R = h_e(i, _);
        }
        let D;
        this.getUniforms = function() {
            return D === void 0 && O(this), D;
        };
        let R;
        this.getAttributes = function() {
            return R === void 0 && O(this), R;
        };
        let N = n.rendererExtensionParallelShaderCompile === !1;
        return this.isReady = function() {
            return N === !1 && (N = i.getProgramParameter(_, i_e)), N;
        }, this.destroy = function() {
            r.releaseStatesOfProgram(this), i.deleteProgram(_), this.program = void 0;
        }, this.type = n.shaderType, this.name = n.shaderName, this.id = s_e++, this.cacheKey = e, this.usedTimes = 1, this.program = _, this.vertexShader = P, this.fragmentShader = A, this;
    }
    let M_e = 0;
    class T_e {
        constructor(){
            this.shaderCache = new Map, this.materialCache = new Map;
        }
        update(e) {
            const n = e.vertexShader, r = e.fragmentShader, i = this._getShaderStage(n), s = this._getShaderStage(r), o = this._getShaderCacheForMaterial(e);
            return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(s) === !1 && (o.add(s), s.usedTimes++), this;
        }
        remove(e) {
            const n = this.materialCache.get(e);
            for (const r of n)r.usedTimes--, r.usedTimes === 0 && this.shaderCache.delete(r.code);
            return this.materialCache.delete(e), this;
        }
        getVertexShaderID(e) {
            return this._getShaderStage(e.vertexShader).id;
        }
        getFragmentShaderID(e) {
            return this._getShaderStage(e.fragmentShader).id;
        }
        dispose() {
            this.shaderCache.clear(), this.materialCache.clear();
        }
        _getShaderCacheForMaterial(e) {
            const n = this.materialCache;
            let r = n.get(e);
            return r === void 0 && (r = new Set, n.set(e, r)), r;
        }
        _getShaderStage(e) {
            const n = this.shaderCache;
            let r = n.get(e);
            return r === void 0 && (r = new C_e(e), n.set(e, r)), r;
        }
    }
    class C_e {
        constructor(e){
            this.id = M_e++, this.code = e, this.usedTimes = 0;
        }
    }
    function R_e(t, e, n, r, i, s, o) {
        const a = new hm, l = new T_e, c = new Set, u = [], f = i.logarithmicDepthBuffer, h = i.vertexTextures;
        let m = i.precision;
        const v = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
        };
        function _(R) {
            return c.add(R), R === 0 ? "uv" : `uv${R}`;
        }
        function w(R, N, k, U, B) {
            const j = U.fog, K = B.geometry, q = R.isMeshStandardMaterial ? U.environment : null, ee = (R.isMeshStandardMaterial ? n : e).get(R.envMap || q), W = ee && ee.mapping === zy ? ee.image.height : null, Z = v[R.type];
            R.precision !== null && (m = i.getMaxPrecision(R.precision), m !== R.precision && console.warn("THREE.WebGLProgram.getParameters:", R.precision, "not supported, using", m, "instead."));
            const $ = K.morphAttributes.position || K.morphAttributes.normal || K.morphAttributes.color, H = $ !== void 0 ? $.length : 0;
            let se = 0;
            K.morphAttributes.position !== void 0 && (se = 1), K.morphAttributes.normal !== void 0 && (se = 2), K.morphAttributes.color !== void 0 && (se = 3);
            let le, ne, ue, ge;
            if (Z) {
                const wt = uc[Z];
                le = wt.vertexShader, ne = wt.fragmentShader;
            } else le = R.vertexShader, ne = R.fragmentShader, l.update(R), ue = l.getVertexShaderID(R), ge = l.getFragmentShaderID(R);
            const ye = t.getRenderTarget(), _e = t.state.buffers.depth.getReversed(), Te = B.isInstancedMesh === !0, Re = B.isBatchedMesh === !0, Fe = !!R.map, be = !!R.matcap, Me = !!ee, oe = !!R.aoMap, Ye = !!R.lightMap, Be = !!R.bumpMap, nt = !!R.normalMap, de = !!R.displacementMap, ce = !!R.emissiveMap, ae = !!R.metalnessMap, X = !!R.roughnessMap, G = R.anisotropy > 0, he = R.clearcoat > 0, pe = R.dispersion > 0, me = R.iridescence > 0, Ie = R.sheen > 0, Xe = R.transmission > 0, Ze = G && !!R.anisotropyMap, at = he && !!R.clearcoatMap, Je = he && !!R.clearcoatNormalMap, Pe = he && !!R.clearcoatRoughnessMap, je = me && !!R.iridescenceMap, rt = me && !!R.iridescenceThicknessMap, ct = Ie && !!R.sheenColorMap, st = Ie && !!R.sheenRoughnessMap, Se = !!R.specularMap, $e = !!R.specularColorMap, ht = !!R.specularIntensityMap, Ee = Xe && !!R.transmissionMap, lt = Xe && !!R.thicknessMap, Ae = !!R.gradientMap, ze = !!R.alphaMap, We = R.alphaTest > 0, it = !!R.alphaHash, pt = !!R.extensions;
            let Pt = lu;
            R.toneMapped && (ye === null || ye.isXRRenderTarget === !0) && (Pt = t.toneMapping);
            const en = {
                shaderID: Z,
                shaderType: R.type,
                shaderName: R.name,
                vertexShader: le,
                fragmentShader: ne,
                defines: R.defines,
                customVertexShaderID: ue,
                customFragmentShaderID: ge,
                isRawShaderMaterial: R.isRawShaderMaterial === !0,
                glslVersion: R.glslVersion,
                precision: m,
                batching: Re,
                batchingColor: Re && B._colorsTexture !== null,
                instancing: Te,
                instancingColor: Te && B.instanceColor !== null,
                instancingMorph: Te && B.morphTexture !== null,
                supportsVertexTextures: h,
                outputColorSpace: ye === null ? t.outputColorSpace : ye.isXRRenderTarget === !0 ? ye.texture.colorSpace : Nm,
                alphaToCoverage: !!R.alphaToCoverage,
                map: Fe,
                matcap: be,
                envMap: Me,
                envMapMode: Me && ee.mapping,
                envMapCubeUVHeight: W,
                aoMap: oe,
                lightMap: Ye,
                bumpMap: Be,
                normalMap: nt,
                displacementMap: h && de,
                emissiveMap: ce,
                normalMapObjectSpace: nt && R.normalMapType === YW,
                normalMapTangentSpace: nt && R.normalMapType === Ch,
                metalnessMap: ae,
                roughnessMap: X,
                anisotropy: G,
                anisotropyMap: Ze,
                clearcoat: he,
                clearcoatMap: at,
                clearcoatNormalMap: Je,
                clearcoatRoughnessMap: Pe,
                dispersion: pe,
                iridescence: me,
                iridescenceMap: je,
                iridescenceThicknessMap: rt,
                sheen: Ie,
                sheenColorMap: ct,
                sheenRoughnessMap: st,
                specularMap: Se,
                specularColorMap: $e,
                specularIntensityMap: ht,
                transmission: Xe,
                transmissionMap: Ee,
                thicknessMap: lt,
                gradientMap: Ae,
                opaque: R.transparent === !1 && R.blending === um && R.alphaToCoverage === !1,
                alphaMap: ze,
                alphaTest: We,
                alphaHash: it,
                combine: R.combine,
                mapUv: Fe && _(R.map.channel),
                aoMapUv: oe && _(R.aoMap.channel),
                lightMapUv: Ye && _(R.lightMap.channel),
                bumpMapUv: Be && _(R.bumpMap.channel),
                normalMapUv: nt && _(R.normalMap.channel),
                displacementMapUv: de && _(R.displacementMap.channel),
                emissiveMapUv: ce && _(R.emissiveMap.channel),
                metalnessMapUv: ae && _(R.metalnessMap.channel),
                roughnessMapUv: X && _(R.roughnessMap.channel),
                anisotropyMapUv: Ze && _(R.anisotropyMap.channel),
                clearcoatMapUv: at && _(R.clearcoatMap.channel),
                clearcoatNormalMapUv: Je && _(R.clearcoatNormalMap.channel),
                clearcoatRoughnessMapUv: Pe && _(R.clearcoatRoughnessMap.channel),
                iridescenceMapUv: je && _(R.iridescenceMap.channel),
                iridescenceThicknessMapUv: rt && _(R.iridescenceThicknessMap.channel),
                sheenColorMapUv: ct && _(R.sheenColorMap.channel),
                sheenRoughnessMapUv: st && _(R.sheenRoughnessMap.channel),
                specularMapUv: Se && _(R.specularMap.channel),
                specularColorMapUv: $e && _(R.specularColorMap.channel),
                specularIntensityMapUv: ht && _(R.specularIntensityMap.channel),
                transmissionMapUv: Ee && _(R.transmissionMap.channel),
                thicknessMapUv: lt && _(R.thicknessMap.channel),
                alphaMapUv: ze && _(R.alphaMap.channel),
                vertexTangents: !!K.attributes.tangent && (nt || G),
                vertexColors: R.vertexColors,
                vertexAlphas: R.vertexColors === !0 && !!K.attributes.color && K.attributes.color.itemSize === 4,
                pointsUvs: B.isPoints === !0 && !!K.attributes.uv && (Fe || ze),
                fog: !!j,
                useFog: R.fog === !0,
                fogExp2: !!j && j.isFogExp2,
                flatShading: R.flatShading === !0,
                sizeAttenuation: R.sizeAttenuation === !0,
                logarithmicDepthBuffer: f,
                reverseDepthBuffer: _e,
                skinning: B.isSkinnedMesh === !0,
                morphTargets: K.morphAttributes.position !== void 0,
                morphNormals: K.morphAttributes.normal !== void 0,
                morphColors: K.morphAttributes.color !== void 0,
                morphTargetsCount: H,
                morphTextureStride: se,
                numDirLights: N.directional.length,
                numPointLights: N.point.length,
                numSpotLights: N.spot.length,
                numSpotLightMaps: N.spotLightMap.length,
                numRectAreaLights: N.rectArea.length,
                numHemiLights: N.hemi.length,
                numDirLightShadows: N.directionalShadowMap.length,
                numPointLightShadows: N.pointShadowMap.length,
                numSpotLightShadows: N.spotShadowMap.length,
                numSpotLightShadowsWithMaps: N.numSpotLightShadowsWithMaps,
                numLightProbes: N.numLightProbes,
                numClippingPlanes: o.numPlanes,
                numClipIntersection: o.numIntersection,
                dithering: R.dithering,
                shadowMapEnabled: t.shadowMap.enabled && k.length > 0,
                shadowMapType: t.shadowMap.type,
                toneMapping: Pt,
                decodeVideoTexture: Fe && R.map.isVideoTexture === !0 && rr.getTransfer(R.map.colorSpace) === br,
                decodeVideoTextureEmissive: ce && R.emissiveMap.isVideoTexture === !0 && rr.getTransfer(R.emissiveMap.colorSpace) === br,
                premultipliedAlpha: R.premultipliedAlpha,
                doubleSided: R.side === eu,
                flipSided: R.side === Wo,
                useDepthPacking: R.depthPacking >= 0,
                depthPacking: R.depthPacking || 0,
                index0AttributeName: R.index0AttributeName,
                extensionClipCullDistance: pt && R.extensions.clipCullDistance === !0 && r.has("WEBGL_clip_cull_distance"),
                extensionMultiDraw: (pt && R.extensions.multiDraw === !0 || Re) && r.has("WEBGL_multi_draw"),
                rendererExtensionParallelShaderCompile: r.has("KHR_parallel_shader_compile"),
                customProgramCacheKey: R.customProgramCacheKey()
            };
            return en.vertexUv1s = c.has(1), en.vertexUv2s = c.has(2), en.vertexUv3s = c.has(3), c.clear(), en;
        }
        function b(R) {
            const N = [];
            if (R.shaderID ? N.push(R.shaderID) : (N.push(R.customVertexShaderID), N.push(R.customFragmentShaderID)), R.defines !== void 0) for(const k in R.defines)N.push(k), N.push(R.defines[k]);
            return R.isRawShaderMaterial === !1 && (M(N, R), E(N, R), N.push(t.outputColorSpace)), N.push(R.customProgramCacheKey), N.join();
        }
        function M(R, N) {
            R.push(N.precision), R.push(N.outputColorSpace), R.push(N.envMapMode), R.push(N.envMapCubeUVHeight), R.push(N.mapUv), R.push(N.alphaMapUv), R.push(N.lightMapUv), R.push(N.aoMapUv), R.push(N.bumpMapUv), R.push(N.normalMapUv), R.push(N.displacementMapUv), R.push(N.emissiveMapUv), R.push(N.metalnessMapUv), R.push(N.roughnessMapUv), R.push(N.anisotropyMapUv), R.push(N.clearcoatMapUv), R.push(N.clearcoatNormalMapUv), R.push(N.clearcoatRoughnessMapUv), R.push(N.iridescenceMapUv), R.push(N.iridescenceThicknessMapUv), R.push(N.sheenColorMapUv), R.push(N.sheenRoughnessMapUv), R.push(N.specularMapUv), R.push(N.specularColorMapUv), R.push(N.specularIntensityMapUv), R.push(N.transmissionMapUv), R.push(N.thicknessMapUv), R.push(N.combine), R.push(N.fogExp2), R.push(N.sizeAttenuation), R.push(N.morphTargetsCount), R.push(N.morphAttributeCount), R.push(N.numDirLights), R.push(N.numPointLights), R.push(N.numSpotLights), R.push(N.numSpotLightMaps), R.push(N.numHemiLights), R.push(N.numRectAreaLights), R.push(N.numDirLightShadows), R.push(N.numPointLightShadows), R.push(N.numSpotLightShadows), R.push(N.numSpotLightShadowsWithMaps), R.push(N.numLightProbes), R.push(N.shadowMapType), R.push(N.toneMapping), R.push(N.numClippingPlanes), R.push(N.numClipIntersection), R.push(N.depthPacking);
        }
        function E(R, N) {
            a.disableAll(), N.supportsVertexTextures && a.enable(0), N.instancing && a.enable(1), N.instancingColor && a.enable(2), N.instancingMorph && a.enable(3), N.matcap && a.enable(4), N.envMap && a.enable(5), N.normalMapObjectSpace && a.enable(6), N.normalMapTangentSpace && a.enable(7), N.clearcoat && a.enable(8), N.iridescence && a.enable(9), N.alphaTest && a.enable(10), N.vertexColors && a.enable(11), N.vertexAlphas && a.enable(12), N.vertexUv1s && a.enable(13), N.vertexUv2s && a.enable(14), N.vertexUv3s && a.enable(15), N.vertexTangents && a.enable(16), N.anisotropy && a.enable(17), N.alphaHash && a.enable(18), N.batching && a.enable(19), N.dispersion && a.enable(20), N.batchingColor && a.enable(21), R.push(a.mask), a.disableAll(), N.fog && a.enable(0), N.useFog && a.enable(1), N.flatShading && a.enable(2), N.logarithmicDepthBuffer && a.enable(3), N.reverseDepthBuffer && a.enable(4), N.skinning && a.enable(5), N.morphTargets && a.enable(6), N.morphNormals && a.enable(7), N.morphColors && a.enable(8), N.premultipliedAlpha && a.enable(9), N.shadowMapEnabled && a.enable(10), N.doubleSided && a.enable(11), N.flipSided && a.enable(12), N.useDepthPacking && a.enable(13), N.dithering && a.enable(14), N.transmission && a.enable(15), N.sheen && a.enable(16), N.opaque && a.enable(17), N.pointsUvs && a.enable(18), N.decodeVideoTexture && a.enable(19), N.decodeVideoTextureEmissive && a.enable(20), N.alphaToCoverage && a.enable(21), R.push(a.mask);
        }
        function T(R) {
            const N = v[R.type];
            let k;
            if (N) {
                const U = uc[N];
                k = cq.clone(U.uniforms);
            } else k = R.uniforms;
            return k;
        }
        function P(R, N) {
            let k;
            for(let U = 0, B = u.length; U < B; U++){
                const j = u[U];
                if (j.cacheKey === N) {
                    k = j, ++k.usedTimes;
                    break;
                }
            }
            return k === void 0 && (k = new E_e(t, N, R, s), u.push(k)), k;
        }
        function A(R) {
            if (--R.usedTimes === 0) {
                const N = u.indexOf(R);
                u[N] = u[u.length - 1], u.pop(), R.destroy();
            }
        }
        function O(R) {
            l.remove(R);
        }
        function D() {
            l.dispose();
        }
        return {
            getParameters: w,
            getProgramCacheKey: b,
            getUniforms: T,
            acquireProgram: P,
            releaseProgram: A,
            releaseShaderCache: O,
            programs: u,
            dispose: D
        };
    }
    function I_e() {
        let t = new WeakMap;
        function e(o) {
            return t.has(o);
        }
        function n(o) {
            let a = t.get(o);
            return a === void 0 && (a = {}, t.set(o, a)), a;
        }
        function r(o) {
            t.delete(o);
        }
        function i(o, a, l) {
            t.get(o)[a] = l;
        }
        function s() {
            t = new WeakMap;
        }
        return {
            has: e,
            get: n,
            remove: r,
            update: i,
            dispose: s
        };
    }
    function A_e(t, e) {
        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id;
    }
    function vj(t, e) {
        return t.groupOrder !== e.groupOrder ? t.groupOrder - e.groupOrder : t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id;
    }
    function xj() {
        const t = [];
        let e = 0;
        const n = [], r = [], i = [];
        function s() {
            e = 0, n.length = 0, r.length = 0, i.length = 0;
        }
        function o(f, h, m, v, _, w) {
            let b = t[e];
            return b === void 0 ? (b = {
                id: f.id,
                object: f,
                geometry: h,
                material: m,
                groupOrder: v,
                renderOrder: f.renderOrder,
                z: _,
                group: w
            }, t[e] = b) : (b.id = f.id, b.object = f, b.geometry = h, b.material = m, b.groupOrder = v, b.renderOrder = f.renderOrder, b.z = _, b.group = w), e++, b;
        }
        function a(f, h, m, v, _, w) {
            const b = o(f, h, m, v, _, w);
            m.transmission > 0 ? r.push(b) : m.transparent === !0 ? i.push(b) : n.push(b);
        }
        function l(f, h, m, v, _, w) {
            const b = o(f, h, m, v, _, w);
            m.transmission > 0 ? r.unshift(b) : m.transparent === !0 ? i.unshift(b) : n.unshift(b);
        }
        function c(f, h) {
            n.length > 1 && n.sort(f || A_e), r.length > 1 && r.sort(h || vj), i.length > 1 && i.sort(h || vj);
        }
        function u() {
            for(let f = e, h = t.length; f < h; f++){
                const m = t[f];
                if (m.id === null) break;
                m.id = null, m.object = null, m.geometry = null, m.material = null, m.group = null;
            }
        }
        return {
            opaque: n,
            transmissive: r,
            transparent: i,
            init: s,
            push: a,
            unshift: l,
            finish: u,
            sort: c
        };
    }
    function N_e() {
        let t = new WeakMap;
        function e(r, i) {
            const s = t.get(r);
            let o;
            return s === void 0 ? (o = new xj, t.set(r, [
                o
            ])) : i >= s.length ? (o = new xj, s.push(o)) : o = s[i], o;
        }
        function n() {
            t = new WeakMap;
        }
        return {
            get: e,
            dispose: n
        };
    }
    function P_e() {
        const t = {};
        return {
            get: function(e) {
                if (t[e.id] !== void 0) return t[e.id];
                let n;
                switch(e.type){
                    case "DirectionalLight":
                        n = {
                            direction: new ve,
                            color: new jt
                        };
                        break;
                    case "SpotLight":
                        n = {
                            position: new ve,
                            direction: new ve,
                            color: new jt,
                            distance: 0,
                            coneCos: 0,
                            penumbraCos: 0,
                            decay: 0
                        };
                        break;
                    case "PointLight":
                        n = {
                            position: new ve,
                            color: new jt,
                            distance: 0,
                            decay: 0
                        };
                        break;
                    case "HemisphereLight":
                        n = {
                            direction: new ve,
                            skyColor: new jt,
                            groundColor: new jt
                        };
                        break;
                    case "RectAreaLight":
                        n = {
                            color: new jt,
                            position: new ve,
                            halfWidth: new ve,
                            halfHeight: new ve
                        };
                        break;
                }
                return t[e.id] = n, n;
            }
        };
    }
    function k_e() {
        const t = {};
        return {
            get: function(e) {
                if (t[e.id] !== void 0) return t[e.id];
                let n;
                switch(e.type){
                    case "DirectionalLight":
                        n = {
                            shadowIntensity: 1,
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new ot
                        };
                        break;
                    case "SpotLight":
                        n = {
                            shadowIntensity: 1,
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new ot
                        };
                        break;
                    case "PointLight":
                        n = {
                            shadowIntensity: 1,
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new ot,
                            shadowCameraNear: 1,
                            shadowCameraFar: 1e3
                        };
                        break;
                }
                return t[e.id] = n, n;
            }
        };
    }
    let O_e = 0;
    function D_e(t, e) {
        return (e.castShadow ? 2 : 0) - (t.castShadow ? 2 : 0) + (e.map ? 1 : 0) - (t.map ? 1 : 0);
    }
    function L_e(t) {
        const e = new P_e, n = k_e(), r = {
            version: 0,
            hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
                numSpotMaps: -1,
                numLightProbes: -1
            },
            ambient: [
                0,
                0,
                0
            ],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotLightMap: [],
            spotShadow: [],
            spotShadowMap: [],
            spotLightMatrix: [],
            rectArea: [],
            rectAreaLTC1: null,
            rectAreaLTC2: null,
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
            numSpotLightShadowsWithMaps: 0,
            numLightProbes: 0
        };
        for(let c = 0; c < 9; c++)r.probe.push(new ve);
        const i = new ve, s = new gn, o = new gn;
        function a(c) {
            let u = 0, f = 0, h = 0;
            for(let R = 0; R < 9; R++)r.probe[R].set(0, 0, 0);
            let m = 0, v = 0, _ = 0, w = 0, b = 0, M = 0, E = 0, T = 0, P = 0, A = 0, O = 0;
            c.sort(D_e);
            for(let R = 0, N = c.length; R < N; R++){
                const k = c[R], U = k.color, B = k.intensity, j = k.distance, K = k.shadow && k.shadow.map ? k.shadow.map.texture : null;
                if (k.isAmbientLight) u += U.r * B, f += U.g * B, h += U.b * B;
                else if (k.isLightProbe) {
                    for(let q = 0; q < 9; q++)r.probe[q].addScaledVector(k.sh.coefficients[q], B);
                    O++;
                } else if (k.isDirectionalLight) {
                    const q = e.get(k);
                    if (q.color.copy(k.color).multiplyScalar(k.intensity), k.castShadow) {
                        const ee = k.shadow, W = n.get(k);
                        W.shadowIntensity = ee.intensity, W.shadowBias = ee.bias, W.shadowNormalBias = ee.normalBias, W.shadowRadius = ee.radius, W.shadowMapSize = ee.mapSize, r.directionalShadow[m] = W, r.directionalShadowMap[m] = K, r.directionalShadowMatrix[m] = k.shadow.matrix, M++;
                    }
                    r.directional[m] = q, m++;
                } else if (k.isSpotLight) {
                    const q = e.get(k);
                    q.position.setFromMatrixPosition(k.matrixWorld), q.color.copy(U).multiplyScalar(B), q.distance = j, q.coneCos = Math.cos(k.angle), q.penumbraCos = Math.cos(k.angle * (1 - k.penumbra)), q.decay = k.decay, r.spot[_] = q;
                    const ee = k.shadow;
                    if (k.map && (r.spotLightMap[P] = k.map, P++, ee.updateMatrices(k), k.castShadow && A++), r.spotLightMatrix[_] = ee.matrix, k.castShadow) {
                        const W = n.get(k);
                        W.shadowIntensity = ee.intensity, W.shadowBias = ee.bias, W.shadowNormalBias = ee.normalBias, W.shadowRadius = ee.radius, W.shadowMapSize = ee.mapSize, r.spotShadow[_] = W, r.spotShadowMap[_] = K, T++;
                    }
                    _++;
                } else if (k.isRectAreaLight) {
                    const q = e.get(k);
                    q.color.copy(U).multiplyScalar(B), q.halfWidth.set(k.width * .5, 0, 0), q.halfHeight.set(0, k.height * .5, 0), r.rectArea[w] = q, w++;
                } else if (k.isPointLight) {
                    const q = e.get(k);
                    if (q.color.copy(k.color).multiplyScalar(k.intensity), q.distance = k.distance, q.decay = k.decay, k.castShadow) {
                        const ee = k.shadow, W = n.get(k);
                        W.shadowIntensity = ee.intensity, W.shadowBias = ee.bias, W.shadowNormalBias = ee.normalBias, W.shadowRadius = ee.radius, W.shadowMapSize = ee.mapSize, W.shadowCameraNear = ee.camera.near, W.shadowCameraFar = ee.camera.far, r.pointShadow[v] = W, r.pointShadowMap[v] = K, r.pointShadowMatrix[v] = k.shadow.matrix, E++;
                    }
                    r.point[v] = q, v++;
                } else if (k.isHemisphereLight) {
                    const q = e.get(k);
                    q.skyColor.copy(k.color).multiplyScalar(B), q.groundColor.copy(k.groundColor).multiplyScalar(B), r.hemi[b] = q, b++;
                }
            }
            w > 0 && (t.has("OES_texture_float_linear") === !0 ? (r.rectAreaLTC1 = Mt.LTC_FLOAT_1, r.rectAreaLTC2 = Mt.LTC_FLOAT_2) : (r.rectAreaLTC1 = Mt.LTC_HALF_1, r.rectAreaLTC2 = Mt.LTC_HALF_2)), r.ambient[0] = u, r.ambient[1] = f, r.ambient[2] = h;
            const D = r.hash;
            (D.directionalLength !== m || D.pointLength !== v || D.spotLength !== _ || D.rectAreaLength !== w || D.hemiLength !== b || D.numDirectionalShadows !== M || D.numPointShadows !== E || D.numSpotShadows !== T || D.numSpotMaps !== P || D.numLightProbes !== O) && (r.directional.length = m, r.spot.length = _, r.rectArea.length = w, r.point.length = v, r.hemi.length = b, r.directionalShadow.length = M, r.directionalShadowMap.length = M, r.pointShadow.length = E, r.pointShadowMap.length = E, r.spotShadow.length = T, r.spotShadowMap.length = T, r.directionalShadowMatrix.length = M, r.pointShadowMatrix.length = E, r.spotLightMatrix.length = T + P - A, r.spotLightMap.length = P, r.numSpotLightShadowsWithMaps = A, r.numLightProbes = O, D.directionalLength = m, D.pointLength = v, D.spotLength = _, D.rectAreaLength = w, D.hemiLength = b, D.numDirectionalShadows = M, D.numPointShadows = E, D.numSpotShadows = T, D.numSpotMaps = P, D.numLightProbes = O, r.version = O_e++);
        }
        function l(c, u) {
            let f = 0, h = 0, m = 0, v = 0, _ = 0;
            const w = u.matrixWorldInverse;
            for(let b = 0, M = c.length; b < M; b++){
                const E = c[b];
                if (E.isDirectionalLight) {
                    const T = r.directional[f];
                    T.direction.setFromMatrixPosition(E.matrixWorld), i.setFromMatrixPosition(E.target.matrixWorld), T.direction.sub(i), T.direction.transformDirection(w), f++;
                } else if (E.isSpotLight) {
                    const T = r.spot[m];
                    T.position.setFromMatrixPosition(E.matrixWorld), T.position.applyMatrix4(w), T.direction.setFromMatrixPosition(E.matrixWorld), i.setFromMatrixPosition(E.target.matrixWorld), T.direction.sub(i), T.direction.transformDirection(w), m++;
                } else if (E.isRectAreaLight) {
                    const T = r.rectArea[v];
                    T.position.setFromMatrixPosition(E.matrixWorld), T.position.applyMatrix4(w), o.identity(), s.copy(E.matrixWorld), s.premultiply(w), o.extractRotation(s), T.halfWidth.set(E.width * .5, 0, 0), T.halfHeight.set(0, E.height * .5, 0), T.halfWidth.applyMatrix4(o), T.halfHeight.applyMatrix4(o), v++;
                } else if (E.isPointLight) {
                    const T = r.point[h];
                    T.position.setFromMatrixPosition(E.matrixWorld), T.position.applyMatrix4(w), h++;
                } else if (E.isHemisphereLight) {
                    const T = r.hemi[_];
                    T.direction.setFromMatrixPosition(E.matrixWorld), T.direction.transformDirection(w), _++;
                }
            }
        }
        return {
            setup: a,
            setupView: l,
            state: r
        };
    }
    function bj(t) {
        const e = new L_e(t), n = [], r = [];
        function i(u) {
            c.camera = u, n.length = 0, r.length = 0;
        }
        function s(u) {
            n.push(u);
        }
        function o(u) {
            r.push(u);
        }
        function a() {
            e.setup(n);
        }
        function l(u) {
            e.setupView(n, u);
        }
        const c = {
            lightsArray: n,
            shadowsArray: r,
            camera: null,
            lights: e,
            transmissionRenderTarget: {}
        };
        return {
            init: i,
            state: c,
            setupLights: a,
            setupLightsView: l,
            pushLight: s,
            pushShadow: o
        };
    }
    function F_e(t) {
        let e = new WeakMap;
        function n(i, s = 0) {
            const o = e.get(i);
            let a;
            return o === void 0 ? (a = new bj(t), e.set(i, [
                a
            ])) : s >= o.length ? (a = new bj(t), o.push(a)) : a = o[s], a;
        }
        function r() {
            e = new WeakMap;
        }
        return {
            get: n,
            dispose: r
        };
    }
    const j_e = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, B_e = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
    function U_e(t, e, n) {
        let r = new qw;
        const i = new ot, s = new ot, o = new cr, a = new sO({
            depthPacking: KW
        }), l = new oO, c = {}, u = n.maxTextureSize, f = {
            [Ld]: Wo,
            [Wo]: Ld,
            [eu]: eu
        }, h = new Sc({
            defines: {
                VSM_SAMPLES: 8
            },
            uniforms: {
                shadow_pass: {
                    value: null
                },
                resolution: {
                    value: new ot
                },
                radius: {
                    value: 4
                }
            },
            vertexShader: j_e,
            fragmentShader: B_e
        }), m = h.clone();
        m.defines.HORIZONTAL_PASS = 1;
        const v = new Vn;
        v.setAttribute("position", new Rr(new Float32Array([
            -1,
            -1,
            .5,
            3,
            -1,
            .5,
            -1,
            3,
            .5
        ]), 3));
        const _ = new Ji(v, h), w = this;
        this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = f2;
        let b = this.type;
        this.render = function(A, O, D) {
            if (w.enabled === !1 || w.autoUpdate === !1 && w.needsUpdate === !1 || A.length === 0) return;
            const R = t.getRenderTarget(), N = t.getActiveCubeFace(), k = t.getActiveMipmapLevel(), U = t.state;
            U.setBlending(Cd), U.buffers.color.setClear(1, 1, 1, 1), U.buffers.depth.setTest(!0), U.setScissorTest(!1);
            const B = b !== oc && this.type === oc, j = b === oc && this.type !== oc;
            for(let K = 0, q = A.length; K < q; K++){
                const ee = A[K], W = ee.shadow;
                if (W === void 0) {
                    console.warn("THREE.WebGLShadowMap:", ee, "has no shadow.");
                    continue;
                }
                if (W.autoUpdate === !1 && W.needsUpdate === !1) continue;
                i.copy(W.mapSize);
                const Z = W.getFrameExtents();
                if (i.multiply(Z), s.copy(W.mapSize), (i.x > u || i.y > u) && (i.x > u && (s.x = Math.floor(u / Z.x), i.x = s.x * Z.x, W.mapSize.x = s.x), i.y > u && (s.y = Math.floor(u / Z.y), i.y = s.y * Z.y, W.mapSize.y = s.y)), W.map === null || B === !0 || j === !0) {
                    const H = this.type !== oc ? {
                        minFilter: qs,
                        magFilter: qs
                    } : {};
                    W.map !== null && W.map.dispose(), W.map = new mu(i.x, i.y, H), W.map.texture.name = ee.name + ".shadowMap", W.camera.updateProjectionMatrix();
                }
                t.setRenderTarget(W.map), t.clear();
                const $ = W.getViewportCount();
                for(let H = 0; H < $; H++){
                    const se = W.getViewport(H);
                    o.set(s.x * se.x, s.y * se.y, s.x * se.z, s.y * se.w), U.viewport(o), W.updateMatrices(ee, H), r = W.getFrustum(), T(O, D, W.camera, ee, this.type);
                }
                W.isPointLightShadow !== !0 && this.type === oc && M(W, D), W.needsUpdate = !1;
            }
            b = this.type, w.needsUpdate = !1, t.setRenderTarget(R, N, k);
        };
        function M(A, O) {
            const D = e.update(_);
            h.defines.VSM_SAMPLES !== A.blurSamples && (h.defines.VSM_SAMPLES = A.blurSamples, m.defines.VSM_SAMPLES = A.blurSamples, h.needsUpdate = !0, m.needsUpdate = !0), A.mapPass === null && (A.mapPass = new mu(i.x, i.y)), h.uniforms.shadow_pass.value = A.map.texture, h.uniforms.resolution.value = A.mapSize, h.uniforms.radius.value = A.radius, t.setRenderTarget(A.mapPass), t.clear(), t.renderBufferDirect(O, null, D, h, _, null), m.uniforms.shadow_pass.value = A.mapPass.texture, m.uniforms.resolution.value = A.mapSize, m.uniforms.radius.value = A.radius, t.setRenderTarget(A.map), t.clear(), t.renderBufferDirect(O, null, D, m, _, null);
        }
        function E(A, O, D, R) {
            let N = null;
            const k = D.isPointLight === !0 ? A.customDistanceMaterial : A.customDepthMaterial;
            if (k !== void 0) N = k;
            else if (N = D.isPointLight === !0 ? l : a, t.localClippingEnabled && O.clipShadows === !0 && Array.isArray(O.clippingPlanes) && O.clippingPlanes.length !== 0 || O.displacementMap && O.displacementScale !== 0 || O.alphaMap && O.alphaTest > 0 || O.map && O.alphaTest > 0) {
                const U = N.uuid, B = O.uuid;
                let j = c[U];
                j === void 0 && (j = {}, c[U] = j);
                let K = j[B];
                K === void 0 && (K = N.clone(), j[B] = K, O.addEventListener("dispose", P)), N = K;
            }
            if (N.visible = O.visible, N.wireframe = O.wireframe, R === oc ? N.side = O.shadowSide !== null ? O.shadowSide : O.side : N.side = O.shadowSide !== null ? O.shadowSide : f[O.side], N.alphaMap = O.alphaMap, N.alphaTest = O.alphaTest, N.map = O.map, N.clipShadows = O.clipShadows, N.clippingPlanes = O.clippingPlanes, N.clipIntersection = O.clipIntersection, N.displacementMap = O.displacementMap, N.displacementScale = O.displacementScale, N.displacementBias = O.displacementBias, N.wireframeLinewidth = O.wireframeLinewidth, N.linewidth = O.linewidth, D.isPointLight === !0 && N.isMeshDistanceMaterial === !0) {
                const U = t.properties.get(N);
                U.light = D;
            }
            return N;
        }
        function T(A, O, D, R, N) {
            if (A.visible === !1) return;
            if (A.layers.test(O.layers) && (A.isMesh || A.isLine || A.isPoints) && (A.castShadow || A.receiveShadow && N === oc) && (!A.frustumCulled || r.intersectsObject(A))) {
                A.modelViewMatrix.multiplyMatrices(D.matrixWorldInverse, A.matrixWorld);
                const B = e.update(A), j = A.material;
                if (Array.isArray(j)) {
                    const K = B.groups;
                    for(let q = 0, ee = K.length; q < ee; q++){
                        const W = K[q], Z = j[W.materialIndex];
                        if (Z && Z.visible) {
                            const $ = E(A, Z, R, N);
                            A.onBeforeShadow(t, A, O, D, B, $, W), t.renderBufferDirect(D, null, B, $, A, W), A.onAfterShadow(t, A, O, D, B, $, W);
                        }
                    }
                } else if (j.visible) {
                    const K = E(A, j, R, N);
                    A.onBeforeShadow(t, A, O, D, B, K, null), t.renderBufferDirect(D, null, B, K, A, null), A.onAfterShadow(t, A, O, D, B, K, null);
                }
            }
            const U = A.children;
            for(let B = 0, j = U.length; B < j; B++)T(U[B], O, D, R, N);
        }
        function P(A) {
            A.target.removeEventListener("dispose", P);
            for(const D in c){
                const R = c[D], N = A.target.uuid;
                N in R && (R[N].dispose(), delete R[N]);
            }
        }
    }
    const z_e = {
        [RM]: IM,
        [AM]: kM,
        [NM]: OM,
        [Rm]: PM,
        [IM]: RM,
        [kM]: AM,
        [OM]: NM,
        [PM]: Rm
    };
    function V_e(t, e) {
        function n() {
            let Ee = !1;
            const lt = new cr;
            let Ae = null;
            const ze = new cr(0, 0, 0, 0);
            return {
                setMask: function(We) {
                    Ae !== We && !Ee && (t.colorMask(We, We, We, We), Ae = We);
                },
                setLocked: function(We) {
                    Ee = We;
                },
                setClear: function(We, it, pt, Pt, en) {
                    en === !0 && (We *= Pt, it *= Pt, pt *= Pt), lt.set(We, it, pt, Pt), ze.equals(lt) === !1 && (t.clearColor(We, it, pt, Pt), ze.copy(lt));
                },
                reset: function() {
                    Ee = !1, Ae = null, ze.set(-1, 0, 0, 0);
                }
            };
        }
        function r() {
            let Ee = !1, lt = !1, Ae = null, ze = null, We = null;
            return {
                setReversed: function(it) {
                    if (lt !== it) {
                        const pt = e.get("EXT_clip_control");
                        lt ? pt.clipControlEXT(pt.LOWER_LEFT_EXT, pt.ZERO_TO_ONE_EXT) : pt.clipControlEXT(pt.LOWER_LEFT_EXT, pt.NEGATIVE_ONE_TO_ONE_EXT);
                        const Pt = We;
                        We = null, this.setClear(Pt);
                    }
                    lt = it;
                },
                getReversed: function() {
                    return lt;
                },
                setTest: function(it) {
                    it ? ye(t.DEPTH_TEST) : _e(t.DEPTH_TEST);
                },
                setMask: function(it) {
                    Ae !== it && !Ee && (t.depthMask(it), Ae = it);
                },
                setFunc: function(it) {
                    if (lt && (it = z_e[it]), ze !== it) {
                        switch(it){
                            case RM:
                                t.depthFunc(t.NEVER);
                                break;
                            case IM:
                                t.depthFunc(t.ALWAYS);
                                break;
                            case AM:
                                t.depthFunc(t.LESS);
                                break;
                            case Rm:
                                t.depthFunc(t.LEQUAL);
                                break;
                            case NM:
                                t.depthFunc(t.EQUAL);
                                break;
                            case PM:
                                t.depthFunc(t.GEQUAL);
                                break;
                            case kM:
                                t.depthFunc(t.GREATER);
                                break;
                            case OM:
                                t.depthFunc(t.NOTEQUAL);
                                break;
                            default:
                                t.depthFunc(t.LEQUAL);
                        }
                        ze = it;
                    }
                },
                setLocked: function(it) {
                    Ee = it;
                },
                setClear: function(it) {
                    We !== it && (lt && (it = 1 - it), t.clearDepth(it), We = it);
                },
                reset: function() {
                    Ee = !1, Ae = null, ze = null, We = null, lt = !1;
                }
            };
        }
        function i() {
            let Ee = !1, lt = null, Ae = null, ze = null, We = null, it = null, pt = null, Pt = null, en = null;
            return {
                setTest: function(wt) {
                    Ee || (wt ? ye(t.STENCIL_TEST) : _e(t.STENCIL_TEST));
                },
                setMask: function(wt) {
                    lt !== wt && !Ee && (t.stencilMask(wt), lt = wt);
                },
                setFunc: function(wt, Ln, vn) {
                    (Ae !== wt || ze !== Ln || We !== vn) && (t.stencilFunc(wt, Ln, vn), Ae = wt, ze = Ln, We = vn);
                },
                setOp: function(wt, Ln, vn) {
                    (it !== wt || pt !== Ln || Pt !== vn) && (t.stencilOp(wt, Ln, vn), it = wt, pt = Ln, Pt = vn);
                },
                setLocked: function(wt) {
                    Ee = wt;
                },
                setClear: function(wt) {
                    en !== wt && (t.clearStencil(wt), en = wt);
                },
                reset: function() {
                    Ee = !1, lt = null, Ae = null, ze = null, We = null, it = null, pt = null, Pt = null, en = null;
                }
            };
        }
        const s = new n, o = new r, a = new i, l = new WeakMap, c = new WeakMap;
        let u = {}, f = {}, h = new WeakMap, m = [], v = null, _ = !1, w = null, b = null, M = null, E = null, T = null, P = null, A = null, O = new jt(0, 0, 0), D = 0, R = !1, N = null, k = null, U = null, B = null, j = null;
        const K = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
        let q = !1, ee = 0;
        const W = t.getParameter(t.VERSION);
        W.indexOf("WebGL") !== -1 ? (ee = parseFloat(/^WebGL (\d)/.exec(W)[1]), q = ee >= 1) : W.indexOf("OpenGL ES") !== -1 && (ee = parseFloat(/^OpenGL ES (\d)/.exec(W)[1]), q = ee >= 2);
        let Z = null, $ = {};
        const H = t.getParameter(t.SCISSOR_BOX), se = t.getParameter(t.VIEWPORT), le = new cr().fromArray(H), ne = new cr().fromArray(se);
        function ue(Ee, lt, Ae, ze) {
            const We = new Uint8Array(4), it = t.createTexture();
            t.bindTexture(Ee, it), t.texParameteri(Ee, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(Ee, t.TEXTURE_MAG_FILTER, t.NEAREST);
            for(let pt = 0; pt < Ae; pt++)Ee === t.TEXTURE_3D || Ee === t.TEXTURE_2D_ARRAY ? t.texImage3D(lt, 0, t.RGBA, 1, 1, ze, 0, t.RGBA, t.UNSIGNED_BYTE, We) : t.texImage2D(lt + pt, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, We);
            return it;
        }
        const ge = {};
        ge[t.TEXTURE_2D] = ue(t.TEXTURE_2D, t.TEXTURE_2D, 1), ge[t.TEXTURE_CUBE_MAP] = ue(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6), ge[t.TEXTURE_2D_ARRAY] = ue(t.TEXTURE_2D_ARRAY, t.TEXTURE_2D_ARRAY, 1, 1), ge[t.TEXTURE_3D] = ue(t.TEXTURE_3D, t.TEXTURE_3D, 1, 1), s.setClear(0, 0, 0, 1), o.setClear(1), a.setClear(0), ye(t.DEPTH_TEST), o.setFunc(Rm), Be(!1), nt(F3), ye(t.CULL_FACE), oe(Cd);
        function ye(Ee) {
            u[Ee] !== !0 && (t.enable(Ee), u[Ee] = !0);
        }
        function _e(Ee) {
            u[Ee] !== !1 && (t.disable(Ee), u[Ee] = !1);
        }
        function Te(Ee, lt) {
            return f[Ee] !== lt ? (t.bindFramebuffer(Ee, lt), f[Ee] = lt, Ee === t.DRAW_FRAMEBUFFER && (f[t.FRAMEBUFFER] = lt), Ee === t.FRAMEBUFFER && (f[t.DRAW_FRAMEBUFFER] = lt), !0) : !1;
        }
        function Re(Ee, lt) {
            let Ae = m, ze = !1;
            if (Ee) {
                Ae = h.get(lt), Ae === void 0 && (Ae = [], h.set(lt, Ae));
                const We = Ee.textures;
                if (Ae.length !== We.length || Ae[0] !== t.COLOR_ATTACHMENT0) {
                    for(let it = 0, pt = We.length; it < pt; it++)Ae[it] = t.COLOR_ATTACHMENT0 + it;
                    Ae.length = We.length, ze = !0;
                }
            } else Ae[0] !== t.BACK && (Ae[0] = t.BACK, ze = !0);
            ze && t.drawBuffers(Ae);
        }
        function Fe(Ee) {
            return v !== Ee ? (t.useProgram(Ee), v = Ee, !0) : !1;
        }
        const be = {
            [Qf]: t.FUNC_ADD,
            [xW]: t.FUNC_SUBTRACT,
            [bW]: t.FUNC_REVERSE_SUBTRACT
        };
        be[wW] = t.MIN, be[_W] = t.MAX;
        const Me = {
            [SW]: t.ZERO,
            [EW]: t.ONE,
            [MW]: t.SRC_COLOR,
            [TM]: t.SRC_ALPHA,
            [NW]: t.SRC_ALPHA_SATURATE,
            [IW]: t.DST_COLOR,
            [CW]: t.DST_ALPHA,
            [TW]: t.ONE_MINUS_SRC_COLOR,
            [CM]: t.ONE_MINUS_SRC_ALPHA,
            [AW]: t.ONE_MINUS_DST_COLOR,
            [RW]: t.ONE_MINUS_DST_ALPHA,
            [PW]: t.CONSTANT_COLOR,
            [kW]: t.ONE_MINUS_CONSTANT_COLOR,
            [OW]: t.CONSTANT_ALPHA,
            [DW]: t.ONE_MINUS_CONSTANT_ALPHA
        };
        function oe(Ee, lt, Ae, ze, We, it, pt, Pt, en, wt) {
            if (Ee === Cd) {
                _ === !0 && (_e(t.BLEND), _ = !1);
                return;
            }
            if (_ === !1 && (ye(t.BLEND), _ = !0), Ee !== vW) {
                if (Ee !== w || wt !== R) {
                    if ((b !== Qf || T !== Qf) && (t.blendEquation(t.FUNC_ADD), b = Qf, T = Qf), wt) switch(Ee){
                        case um:
                            t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA);
                            break;
                        case j3:
                            t.blendFunc(t.ONE, t.ONE);
                            break;
                        case B3:
                            t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
                            break;
                        case U3:
                            t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", Ee);
                            break;
                    }
                    else switch(Ee){
                        case um:
                            t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA);
                            break;
                        case j3:
                            t.blendFunc(t.SRC_ALPHA, t.ONE);
                            break;
                        case B3:
                            t.blendFuncSeparate(t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ZERO, t.ONE);
                            break;
                        case U3:
                            t.blendFunc(t.ZERO, t.SRC_COLOR);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", Ee);
                            break;
                    }
                    M = null, E = null, P = null, A = null, O.set(0, 0, 0), D = 0, w = Ee, R = wt;
                }
                return;
            }
            We = We || lt, it = it || Ae, pt = pt || ze, (lt !== b || We !== T) && (t.blendEquationSeparate(be[lt], be[We]), b = lt, T = We), (Ae !== M || ze !== E || it !== P || pt !== A) && (t.blendFuncSeparate(Me[Ae], Me[ze], Me[it], Me[pt]), M = Ae, E = ze, P = it, A = pt), (Pt.equals(O) === !1 || en !== D) && (t.blendColor(Pt.r, Pt.g, Pt.b, en), O.copy(Pt), D = en), w = Ee, R = !1;
        }
        function Ye(Ee, lt) {
            Ee.side === eu ? _e(t.CULL_FACE) : ye(t.CULL_FACE);
            let Ae = Ee.side === Wo;
            lt && (Ae = !Ae), Be(Ae), Ee.blending === um && Ee.transparent === !1 ? oe(Cd) : oe(Ee.blending, Ee.blendEquation, Ee.blendSrc, Ee.blendDst, Ee.blendEquationAlpha, Ee.blendSrcAlpha, Ee.blendDstAlpha, Ee.blendColor, Ee.blendAlpha, Ee.premultipliedAlpha), o.setFunc(Ee.depthFunc), o.setTest(Ee.depthTest), o.setMask(Ee.depthWrite), s.setMask(Ee.colorWrite);
            const ze = Ee.stencilWrite;
            a.setTest(ze), ze && (a.setMask(Ee.stencilWriteMask), a.setFunc(Ee.stencilFunc, Ee.stencilRef, Ee.stencilFuncMask), a.setOp(Ee.stencilFail, Ee.stencilZFail, Ee.stencilZPass)), ce(Ee.polygonOffset, Ee.polygonOffsetFactor, Ee.polygonOffsetUnits), Ee.alphaToCoverage === !0 ? ye(t.SAMPLE_ALPHA_TO_COVERAGE) : _e(t.SAMPLE_ALPHA_TO_COVERAGE);
        }
        function Be(Ee) {
            N !== Ee && (Ee ? t.frontFace(t.CW) : t.frontFace(t.CCW), N = Ee);
        }
        function nt(Ee) {
            Ee !== mW ? (ye(t.CULL_FACE), Ee !== k && (Ee === F3 ? t.cullFace(t.BACK) : Ee === gW ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : _e(t.CULL_FACE), k = Ee;
        }
        function de(Ee) {
            Ee !== U && (q && t.lineWidth(Ee), U = Ee);
        }
        function ce(Ee, lt, Ae) {
            Ee ? (ye(t.POLYGON_OFFSET_FILL), (B !== lt || j !== Ae) && (t.polygonOffset(lt, Ae), B = lt, j = Ae)) : _e(t.POLYGON_OFFSET_FILL);
        }
        function ae(Ee) {
            Ee ? ye(t.SCISSOR_TEST) : _e(t.SCISSOR_TEST);
        }
        function X(Ee) {
            Ee === void 0 && (Ee = t.TEXTURE0 + K - 1), Z !== Ee && (t.activeTexture(Ee), Z = Ee);
        }
        function G(Ee, lt, Ae) {
            Ae === void 0 && (Z === null ? Ae = t.TEXTURE0 + K - 1 : Ae = Z);
            let ze = $[Ae];
            ze === void 0 && (ze = {
                type: void 0,
                texture: void 0
            }, $[Ae] = ze), (ze.type !== Ee || ze.texture !== lt) && (Z !== Ae && (t.activeTexture(Ae), Z = Ae), t.bindTexture(Ee, lt || ge[Ee]), ze.type = Ee, ze.texture = lt);
        }
        function he() {
            const Ee = $[Z];
            Ee !== void 0 && Ee.type !== void 0 && (t.bindTexture(Ee.type, null), Ee.type = void 0, Ee.texture = void 0);
        }
        function pe() {
            try {
                t.compressedTexImage2D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function me() {
            try {
                t.compressedTexImage3D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function Ie() {
            try {
                t.texSubImage2D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function Xe() {
            try {
                t.texSubImage3D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function Ze() {
            try {
                t.compressedTexSubImage2D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function at() {
            try {
                t.compressedTexSubImage3D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function Je() {
            try {
                t.texStorage2D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function Pe() {
            try {
                t.texStorage3D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function je() {
            try {
                t.texImage2D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function rt() {
            try {
                t.texImage3D.apply(t, arguments);
            } catch (Ee) {
                console.error("THREE.WebGLState:", Ee);
            }
        }
        function ct(Ee) {
            le.equals(Ee) === !1 && (t.scissor(Ee.x, Ee.y, Ee.z, Ee.w), le.copy(Ee));
        }
        function st(Ee) {
            ne.equals(Ee) === !1 && (t.viewport(Ee.x, Ee.y, Ee.z, Ee.w), ne.copy(Ee));
        }
        function Se(Ee, lt) {
            let Ae = c.get(lt);
            Ae === void 0 && (Ae = new WeakMap, c.set(lt, Ae));
            let ze = Ae.get(Ee);
            ze === void 0 && (ze = t.getUniformBlockIndex(lt, Ee.name), Ae.set(Ee, ze));
        }
        function $e(Ee, lt) {
            const ze = c.get(lt).get(Ee);
            l.get(lt) !== ze && (t.uniformBlockBinding(lt, ze, Ee.__bindingPointIndex), l.set(lt, ze));
        }
        function ht() {
            t.disable(t.BLEND), t.disable(t.CULL_FACE), t.disable(t.DEPTH_TEST), t.disable(t.POLYGON_OFFSET_FILL), t.disable(t.SCISSOR_TEST), t.disable(t.STENCIL_TEST), t.disable(t.SAMPLE_ALPHA_TO_COVERAGE), t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ONE, t.ZERO), t.blendFuncSeparate(t.ONE, t.ZERO, t.ONE, t.ZERO), t.blendColor(0, 0, 0, 0), t.colorMask(!0, !0, !0, !0), t.clearColor(0, 0, 0, 0), t.depthMask(!0), t.depthFunc(t.LESS), o.setReversed(!1), t.clearDepth(1), t.stencilMask(4294967295), t.stencilFunc(t.ALWAYS, 0, 4294967295), t.stencilOp(t.KEEP, t.KEEP, t.KEEP), t.clearStencil(0), t.cullFace(t.BACK), t.frontFace(t.CCW), t.polygonOffset(0, 0), t.activeTexture(t.TEXTURE0), t.bindFramebuffer(t.FRAMEBUFFER, null), t.bindFramebuffer(t.DRAW_FRAMEBUFFER, null), t.bindFramebuffer(t.READ_FRAMEBUFFER, null), t.useProgram(null), t.lineWidth(1), t.scissor(0, 0, t.canvas.width, t.canvas.height), t.viewport(0, 0, t.canvas.width, t.canvas.height), u = {}, Z = null, $ = {}, f = {}, h = new WeakMap, m = [], v = null, _ = !1, w = null, b = null, M = null, E = null, T = null, P = null, A = null, O = new jt(0, 0, 0), D = 0, R = !1, N = null, k = null, U = null, B = null, j = null, le.set(0, 0, t.canvas.width, t.canvas.height), ne.set(0, 0, t.canvas.width, t.canvas.height), s.reset(), o.reset(), a.reset();
        }
        return {
            buffers: {
                color: s,
                depth: o,
                stencil: a
            },
            enable: ye,
            disable: _e,
            bindFramebuffer: Te,
            drawBuffers: Re,
            useProgram: Fe,
            setBlending: oe,
            setMaterial: Ye,
            setFlipSided: Be,
            setCullFace: nt,
            setLineWidth: de,
            setPolygonOffset: ce,
            setScissorTest: ae,
            activeTexture: X,
            bindTexture: G,
            unbindTexture: he,
            compressedTexImage2D: pe,
            compressedTexImage3D: me,
            texImage2D: je,
            texImage3D: rt,
            updateUBOMapping: Se,
            uniformBlockBinding: $e,
            texStorage2D: Je,
            texStorage3D: Pe,
            texSubImage2D: Ie,
            texSubImage3D: Xe,
            compressedTexSubImage2D: Ze,
            compressedTexSubImage3D: at,
            scissor: ct,
            viewport: st,
            reset: ht
        };
    }
    function W_e(t, e, n, r, i, s, o) {
        const a = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : null, l = typeof navigator > "u" ? !1 : /OculusBrowser/g.test(navigator.userAgent), c = new ot, u = new WeakMap;
        let f;
        const h = new WeakMap;
        let m = !1;
        try {
            m = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
        } catch  {}
        function v(X, G) {
            return m ? new OffscreenCanvas(X, G) : tw("canvas");
        }
        function _(X, G, he) {
            let pe = 1;
            const me = ae(X);
            if ((me.width > he || me.height > he) && (pe = he / Math.max(me.width, me.height)), pe < 1) if (typeof HTMLImageElement < "u" && X instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && X instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && X instanceof ImageBitmap || typeof VideoFrame < "u" && X instanceof VideoFrame) {
                const Ie = Math.floor(pe * me.width), Xe = Math.floor(pe * me.height);
                f === void 0 && (f = v(Ie, Xe));
                const Ze = G ? v(Ie, Xe) : f;
                return Ze.width = Ie, Ze.height = Xe, Ze.getContext("2d").drawImage(X, 0, 0, Ie, Xe), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + me.width + "x" + me.height + ") to (" + Ie + "x" + Xe + ")."), Ze;
            } else return "data" in X && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + me.width + "x" + me.height + ")."), X;
            return X;
        }
        function w(X) {
            return X.generateMipmaps;
        }
        function b(X) {
            t.generateMipmap(X);
        }
        function M(X) {
            return X.isWebGLCubeRenderTarget ? t.TEXTURE_CUBE_MAP : X.isWebGL3DRenderTarget ? t.TEXTURE_3D : X.isWebGLArrayRenderTarget || X.isCompressedArrayTexture ? t.TEXTURE_2D_ARRAY : t.TEXTURE_2D;
        }
        function E(X, G, he, pe, me = !1) {
            if (X !== null) {
                if (t[X] !== void 0) return t[X];
                console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + X + "'");
            }
            let Ie = G;
            if (G === t.RED && (he === t.FLOAT && (Ie = t.R32F), he === t.HALF_FLOAT && (Ie = t.R16F), he === t.UNSIGNED_BYTE && (Ie = t.R8)), G === t.RED_INTEGER && (he === t.UNSIGNED_BYTE && (Ie = t.R8UI), he === t.UNSIGNED_SHORT && (Ie = t.R16UI), he === t.UNSIGNED_INT && (Ie = t.R32UI), he === t.BYTE && (Ie = t.R8I), he === t.SHORT && (Ie = t.R16I), he === t.INT && (Ie = t.R32I)), G === t.RG && (he === t.FLOAT && (Ie = t.RG32F), he === t.HALF_FLOAT && (Ie = t.RG16F), he === t.UNSIGNED_BYTE && (Ie = t.RG8)), G === t.RG_INTEGER && (he === t.UNSIGNED_BYTE && (Ie = t.RG8UI), he === t.UNSIGNED_SHORT && (Ie = t.RG16UI), he === t.UNSIGNED_INT && (Ie = t.RG32UI), he === t.BYTE && (Ie = t.RG8I), he === t.SHORT && (Ie = t.RG16I), he === t.INT && (Ie = t.RG32I)), G === t.RGB_INTEGER && (he === t.UNSIGNED_BYTE && (Ie = t.RGB8UI), he === t.UNSIGNED_SHORT && (Ie = t.RGB16UI), he === t.UNSIGNED_INT && (Ie = t.RGB32UI), he === t.BYTE && (Ie = t.RGB8I), he === t.SHORT && (Ie = t.RGB16I), he === t.INT && (Ie = t.RGB32I)), G === t.RGBA_INTEGER && (he === t.UNSIGNED_BYTE && (Ie = t.RGBA8UI), he === t.UNSIGNED_SHORT && (Ie = t.RGBA16UI), he === t.UNSIGNED_INT && (Ie = t.RGBA32UI), he === t.BYTE && (Ie = t.RGBA8I), he === t.SHORT && (Ie = t.RGBA16I), he === t.INT && (Ie = t.RGBA32I)), G === t.RGB && he === t.UNSIGNED_INT_5_9_9_9_REV && (Ie = t.RGB9_E5), G === t.RGBA) {
                const Xe = me ? Jb : rr.getTransfer(pe);
                he === t.FLOAT && (Ie = t.RGBA32F), he === t.HALF_FLOAT && (Ie = t.RGBA16F), he === t.UNSIGNED_BYTE && (Ie = Xe === br ? t.SRGB8_ALPHA8 : t.RGBA8), he === t.UNSIGNED_SHORT_4_4_4_4 && (Ie = t.RGBA4), he === t.UNSIGNED_SHORT_5_5_5_1 && (Ie = t.RGB5_A1);
            }
            return (Ie === t.R16F || Ie === t.R32F || Ie === t.RG16F || Ie === t.RG32F || Ie === t.RGBA16F || Ie === t.RGBA32F) && e.get("EXT_color_buffer_float"), Ie;
        }
        function T(X, G) {
            let he;
            return X ? G === null || G === jd || G === Im ? he = t.DEPTH24_STENCIL8 : G === xa ? he = t.DEPTH32F_STENCIL8 : G === Sy && (he = t.DEPTH24_STENCIL8, console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")) : G === null || G === jd || G === Im ? he = t.DEPTH_COMPONENT24 : G === xa ? he = t.DEPTH_COMPONENT32F : G === Sy && (he = t.DEPTH_COMPONENT16), he;
        }
        function P(X, G) {
            return w(X) === !0 || X.isFramebufferTexture && X.minFilter !== qs && X.minFilter !== ds ? Math.log2(Math.max(G.width, G.height)) + 1 : X.mipmaps !== void 0 && X.mipmaps.length > 0 ? X.mipmaps.length : X.isCompressedTexture && Array.isArray(X.image) ? G.mipmaps.length : 1;
        }
        function A(X) {
            const G = X.target;
            G.removeEventListener("dispose", A), D(G), G.isVideoTexture && u.delete(G);
        }
        function O(X) {
            const G = X.target;
            G.removeEventListener("dispose", O), N(G);
        }
        function D(X) {
            const G = r.get(X);
            if (G.__webglInit === void 0) return;
            const he = X.source, pe = h.get(he);
            if (pe) {
                const me = pe[G.__cacheKey];
                me.usedTimes--, me.usedTimes === 0 && R(X), Object.keys(pe).length === 0 && h.delete(he);
            }
            r.remove(X);
        }
        function R(X) {
            const G = r.get(X);
            t.deleteTexture(G.__webglTexture);
            const he = X.source, pe = h.get(he);
            delete pe[G.__cacheKey], o.memory.textures--;
        }
        function N(X) {
            const G = r.get(X);
            if (X.depthTexture && (X.depthTexture.dispose(), r.remove(X.depthTexture)), X.isWebGLCubeRenderTarget) for(let pe = 0; pe < 6; pe++){
                if (Array.isArray(G.__webglFramebuffer[pe])) for(let me = 0; me < G.__webglFramebuffer[pe].length; me++)t.deleteFramebuffer(G.__webglFramebuffer[pe][me]);
                else t.deleteFramebuffer(G.__webglFramebuffer[pe]);
                G.__webglDepthbuffer && t.deleteRenderbuffer(G.__webglDepthbuffer[pe]);
            }
            else {
                if (Array.isArray(G.__webglFramebuffer)) for(let pe = 0; pe < G.__webglFramebuffer.length; pe++)t.deleteFramebuffer(G.__webglFramebuffer[pe]);
                else t.deleteFramebuffer(G.__webglFramebuffer);
                if (G.__webglDepthbuffer && t.deleteRenderbuffer(G.__webglDepthbuffer), G.__webglMultisampledFramebuffer && t.deleteFramebuffer(G.__webglMultisampledFramebuffer), G.__webglColorRenderbuffer) for(let pe = 0; pe < G.__webglColorRenderbuffer.length; pe++)G.__webglColorRenderbuffer[pe] && t.deleteRenderbuffer(G.__webglColorRenderbuffer[pe]);
                G.__webglDepthRenderbuffer && t.deleteRenderbuffer(G.__webglDepthRenderbuffer);
            }
            const he = X.textures;
            for(let pe = 0, me = he.length; pe < me; pe++){
                const Ie = r.get(he[pe]);
                Ie.__webglTexture && (t.deleteTexture(Ie.__webglTexture), o.memory.textures--), r.remove(he[pe]);
            }
            r.remove(X);
        }
        let k = 0;
        function U() {
            k = 0;
        }
        function B() {
            const X = k;
            return X >= i.maxTextures && console.warn("THREE.WebGLTextures: Trying to use " + X + " texture units while this GPU supports only " + i.maxTextures), k += 1, X;
        }
        function j(X) {
            const G = [];
            return G.push(X.wrapS), G.push(X.wrapT), G.push(X.wrapR || 0), G.push(X.magFilter), G.push(X.minFilter), G.push(X.anisotropy), G.push(X.internalFormat), G.push(X.format), G.push(X.type), G.push(X.generateMipmaps), G.push(X.premultiplyAlpha), G.push(X.flipY), G.push(X.unpackAlignment), G.push(X.colorSpace), G.join();
        }
        function K(X, G) {
            const he = r.get(X);
            if (X.isVideoTexture && de(X), X.isRenderTargetTexture === !1 && X.version > 0 && he.__version !== X.version) {
                const pe = X.image;
                if (pe === null) console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
                else if (pe.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
                else {
                    ne(he, X, G);
                    return;
                }
            }
            n.bindTexture(t.TEXTURE_2D, he.__webglTexture, t.TEXTURE0 + G);
        }
        function q(X, G) {
            const he = r.get(X);
            if (X.version > 0 && he.__version !== X.version) {
                ne(he, X, G);
                return;
            }
            n.bindTexture(t.TEXTURE_2D_ARRAY, he.__webglTexture, t.TEXTURE0 + G);
        }
        function ee(X, G) {
            const he = r.get(X);
            if (X.version > 0 && he.__version !== X.version) {
                ne(he, X, G);
                return;
            }
            n.bindTexture(t.TEXTURE_3D, he.__webglTexture, t.TEXTURE0 + G);
        }
        function W(X, G) {
            const he = r.get(X);
            if (X.version > 0 && he.__version !== X.version) {
                ue(he, X, G);
                return;
            }
            n.bindTexture(t.TEXTURE_CUBE_MAP, he.__webglTexture, t.TEXTURE0 + G);
        }
        const Z = {
            [Xb]: t.REPEAT,
            [Tl]: t.CLAMP_TO_EDGE,
            [Kb]: t.MIRRORED_REPEAT
        }, $ = {
            [qs]: t.NEAREST,
            [Pk]: t.NEAREST_MIPMAP_NEAREST,
            [O0]: t.NEAREST_MIPMAP_LINEAR,
            [ds]: t.LINEAR,
            [Jx]: t.LINEAR_MIPMAP_NEAREST,
            [ru]: t.LINEAR_MIPMAP_LINEAR
        }, H = {
            [ZW]: t.NEVER,
            [rq]: t.ALWAYS,
            [JW]: t.LESS,
            [Wk]: t.LEQUAL,
            [QW]: t.EQUAL,
            [nq]: t.GEQUAL,
            [eq]: t.GREATER,
            [tq]: t.NOTEQUAL
        };
        function se(X, G) {
            if (G.type === xa && e.has("OES_texture_float_linear") === !1 && (G.magFilter === ds || G.magFilter === Jx || G.magFilter === O0 || G.magFilter === ru || G.minFilter === ds || G.minFilter === Jx || G.minFilter === O0 || G.minFilter === ru) && console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."), t.texParameteri(X, t.TEXTURE_WRAP_S, Z[G.wrapS]), t.texParameteri(X, t.TEXTURE_WRAP_T, Z[G.wrapT]), (X === t.TEXTURE_3D || X === t.TEXTURE_2D_ARRAY) && t.texParameteri(X, t.TEXTURE_WRAP_R, Z[G.wrapR]), t.texParameteri(X, t.TEXTURE_MAG_FILTER, $[G.magFilter]), t.texParameteri(X, t.TEXTURE_MIN_FILTER, $[G.minFilter]), G.compareFunction && (t.texParameteri(X, t.TEXTURE_COMPARE_MODE, t.COMPARE_REF_TO_TEXTURE), t.texParameteri(X, t.TEXTURE_COMPARE_FUNC, H[G.compareFunction])), e.has("EXT_texture_filter_anisotropic") === !0) {
                if (G.magFilter === qs || G.minFilter !== O0 && G.minFilter !== ru || G.type === xa && e.has("OES_texture_float_linear") === !1) return;
                if (G.anisotropy > 1 || r.get(G).__currentAnisotropy) {
                    const he = e.get("EXT_texture_filter_anisotropic");
                    t.texParameterf(X, he.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(G.anisotropy, i.getMaxAnisotropy())), r.get(G).__currentAnisotropy = G.anisotropy;
                }
            }
        }
        function le(X, G) {
            let he = !1;
            X.__webglInit === void 0 && (X.__webglInit = !0, G.addEventListener("dispose", A));
            const pe = G.source;
            let me = h.get(pe);
            me === void 0 && (me = {}, h.set(pe, me));
            const Ie = j(G);
            if (Ie !== X.__cacheKey) {
                me[Ie] === void 0 && (me[Ie] = {
                    texture: t.createTexture(),
                    usedTimes: 0
                }, o.memory.textures++, he = !0), me[Ie].usedTimes++;
                const Xe = me[X.__cacheKey];
                Xe !== void 0 && (me[X.__cacheKey].usedTimes--, Xe.usedTimes === 0 && R(G)), X.__cacheKey = Ie, X.__webglTexture = me[Ie].texture;
            }
            return he;
        }
        function ne(X, G, he) {
            let pe = t.TEXTURE_2D;
            (G.isDataArrayTexture || G.isCompressedArrayTexture) && (pe = t.TEXTURE_2D_ARRAY), G.isData3DTexture && (pe = t.TEXTURE_3D);
            const me = le(X, G), Ie = G.source;
            n.bindTexture(pe, X.__webglTexture, t.TEXTURE0 + he);
            const Xe = r.get(Ie);
            if (Ie.version !== Xe.__version || me === !0) {
                n.activeTexture(t.TEXTURE0 + he);
                const Ze = rr.getPrimaries(rr.workingColorSpace), at = G.colorSpace === xd ? null : rr.getPrimaries(G.colorSpace), Je = G.colorSpace === xd || Ze === at ? t.NONE : t.BROWSER_DEFAULT_WEBGL;
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, G.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, G.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, G.unpackAlignment), t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, Je);
                let Pe = _(G.image, !1, i.maxTextureSize);
                Pe = ce(G, Pe);
                const je = s.convert(G.format, G.colorSpace), rt = s.convert(G.type);
                let ct = E(G.internalFormat, je, rt, G.colorSpace, G.isVideoTexture);
                se(pe, G);
                let st;
                const Se = G.mipmaps, $e = G.isVideoTexture !== !0, ht = Xe.__version === void 0 || me === !0, Ee = Ie.dataReady, lt = P(G, Pe);
                if (G.isDepthTexture) ct = T(G.format === Am, G.type), ht && ($e ? n.texStorage2D(t.TEXTURE_2D, 1, ct, Pe.width, Pe.height) : n.texImage2D(t.TEXTURE_2D, 0, ct, Pe.width, Pe.height, 0, je, rt, null));
                else if (G.isDataTexture) if (Se.length > 0) {
                    $e && ht && n.texStorage2D(t.TEXTURE_2D, lt, ct, Se[0].width, Se[0].height);
                    for(let Ae = 0, ze = Se.length; Ae < ze; Ae++)st = Se[Ae], $e ? Ee && n.texSubImage2D(t.TEXTURE_2D, Ae, 0, 0, st.width, st.height, je, rt, st.data) : n.texImage2D(t.TEXTURE_2D, Ae, ct, st.width, st.height, 0, je, rt, st.data);
                    G.generateMipmaps = !1;
                } else $e ? (ht && n.texStorage2D(t.TEXTURE_2D, lt, ct, Pe.width, Pe.height), Ee && n.texSubImage2D(t.TEXTURE_2D, 0, 0, 0, Pe.width, Pe.height, je, rt, Pe.data)) : n.texImage2D(t.TEXTURE_2D, 0, ct, Pe.width, Pe.height, 0, je, rt, Pe.data);
                else if (G.isCompressedTexture) if (G.isCompressedArrayTexture) {
                    $e && ht && n.texStorage3D(t.TEXTURE_2D_ARRAY, lt, ct, Se[0].width, Se[0].height, Pe.depth);
                    for(let Ae = 0, ze = Se.length; Ae < ze; Ae++)if (st = Se[Ae], G.format !== lo) if (je !== null) if ($e) {
                        if (Ee) if (G.layerUpdates.size > 0) {
                            const We = Z3(st.width, st.height, G.format, G.type);
                            for (const it of G.layerUpdates){
                                const pt = st.data.subarray(it * We / st.data.BYTES_PER_ELEMENT, (it + 1) * We / st.data.BYTES_PER_ELEMENT);
                                n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY, Ae, 0, 0, it, st.width, st.height, 1, je, pt);
                            }
                            G.clearLayerUpdates();
                        } else n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY, Ae, 0, 0, 0, st.width, st.height, Pe.depth, je, st.data);
                    } else n.compressedTexImage3D(t.TEXTURE_2D_ARRAY, Ae, ct, st.width, st.height, Pe.depth, 0, st.data, 0, 0);
                    else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
                    else $e ? Ee && n.texSubImage3D(t.TEXTURE_2D_ARRAY, Ae, 0, 0, 0, st.width, st.height, Pe.depth, je, rt, st.data) : n.texImage3D(t.TEXTURE_2D_ARRAY, Ae, ct, st.width, st.height, Pe.depth, 0, je, rt, st.data);
                } else {
                    $e && ht && n.texStorage2D(t.TEXTURE_2D, lt, ct, Se[0].width, Se[0].height);
                    for(let Ae = 0, ze = Se.length; Ae < ze; Ae++)st = Se[Ae], G.format !== lo ? je !== null ? $e ? Ee && n.compressedTexSubImage2D(t.TEXTURE_2D, Ae, 0, 0, st.width, st.height, je, st.data) : n.compressedTexImage2D(t.TEXTURE_2D, Ae, ct, st.width, st.height, 0, st.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : $e ? Ee && n.texSubImage2D(t.TEXTURE_2D, Ae, 0, 0, st.width, st.height, je, rt, st.data) : n.texImage2D(t.TEXTURE_2D, Ae, ct, st.width, st.height, 0, je, rt, st.data);
                }
                else if (G.isDataArrayTexture) if ($e) {
                    if (ht && n.texStorage3D(t.TEXTURE_2D_ARRAY, lt, ct, Pe.width, Pe.height, Pe.depth), Ee) if (G.layerUpdates.size > 0) {
                        const Ae = Z3(Pe.width, Pe.height, G.format, G.type);
                        for (const ze of G.layerUpdates){
                            const We = Pe.data.subarray(ze * Ae / Pe.data.BYTES_PER_ELEMENT, (ze + 1) * Ae / Pe.data.BYTES_PER_ELEMENT);
                            n.texSubImage3D(t.TEXTURE_2D_ARRAY, 0, 0, 0, ze, Pe.width, Pe.height, 1, je, rt, We);
                        }
                        G.clearLayerUpdates();
                    } else n.texSubImage3D(t.TEXTURE_2D_ARRAY, 0, 0, 0, 0, Pe.width, Pe.height, Pe.depth, je, rt, Pe.data);
                } else n.texImage3D(t.TEXTURE_2D_ARRAY, 0, ct, Pe.width, Pe.height, Pe.depth, 0, je, rt, Pe.data);
                else if (G.isData3DTexture) $e ? (ht && n.texStorage3D(t.TEXTURE_3D, lt, ct, Pe.width, Pe.height, Pe.depth), Ee && n.texSubImage3D(t.TEXTURE_3D, 0, 0, 0, 0, Pe.width, Pe.height, Pe.depth, je, rt, Pe.data)) : n.texImage3D(t.TEXTURE_3D, 0, ct, Pe.width, Pe.height, Pe.depth, 0, je, rt, Pe.data);
                else if (G.isFramebufferTexture) {
                    if (ht) if ($e) n.texStorage2D(t.TEXTURE_2D, lt, ct, Pe.width, Pe.height);
                    else {
                        let Ae = Pe.width, ze = Pe.height;
                        for(let We = 0; We < lt; We++)n.texImage2D(t.TEXTURE_2D, We, ct, Ae, ze, 0, je, rt, null), Ae >>= 1, ze >>= 1;
                    }
                } else if (Se.length > 0) {
                    if ($e && ht) {
                        const Ae = ae(Se[0]);
                        n.texStorage2D(t.TEXTURE_2D, lt, ct, Ae.width, Ae.height);
                    }
                    for(let Ae = 0, ze = Se.length; Ae < ze; Ae++)st = Se[Ae], $e ? Ee && n.texSubImage2D(t.TEXTURE_2D, Ae, 0, 0, je, rt, st) : n.texImage2D(t.TEXTURE_2D, Ae, ct, je, rt, st);
                    G.generateMipmaps = !1;
                } else if ($e) {
                    if (ht) {
                        const Ae = ae(Pe);
                        n.texStorage2D(t.TEXTURE_2D, lt, ct, Ae.width, Ae.height);
                    }
                    Ee && n.texSubImage2D(t.TEXTURE_2D, 0, 0, 0, je, rt, Pe);
                } else n.texImage2D(t.TEXTURE_2D, 0, ct, je, rt, Pe);
                w(G) && b(pe), Xe.__version = Ie.version, G.onUpdate && G.onUpdate(G);
            }
            X.__version = G.version;
        }
        function ue(X, G, he) {
            if (G.image.length !== 6) return;
            const pe = le(X, G), me = G.source;
            n.bindTexture(t.TEXTURE_CUBE_MAP, X.__webglTexture, t.TEXTURE0 + he);
            const Ie = r.get(me);
            if (me.version !== Ie.__version || pe === !0) {
                n.activeTexture(t.TEXTURE0 + he);
                const Xe = rr.getPrimaries(rr.workingColorSpace), Ze = G.colorSpace === xd ? null : rr.getPrimaries(G.colorSpace), at = G.colorSpace === xd || Xe === Ze ? t.NONE : t.BROWSER_DEFAULT_WEBGL;
                t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, G.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, G.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, G.unpackAlignment), t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, at);
                const Je = G.isCompressedTexture || G.image[0].isCompressedTexture, Pe = G.image[0] && G.image[0].isDataTexture, je = [];
                for(let ze = 0; ze < 6; ze++)!Je && !Pe ? je[ze] = _(G.image[ze], !0, i.maxCubemapSize) : je[ze] = Pe ? G.image[ze].image : G.image[ze], je[ze] = ce(G, je[ze]);
                const rt = je[0], ct = s.convert(G.format, G.colorSpace), st = s.convert(G.type), Se = E(G.internalFormat, ct, st, G.colorSpace), $e = G.isVideoTexture !== !0, ht = Ie.__version === void 0 || pe === !0, Ee = me.dataReady;
                let lt = P(G, rt);
                se(t.TEXTURE_CUBE_MAP, G);
                let Ae;
                if (Je) {
                    $e && ht && n.texStorage2D(t.TEXTURE_CUBE_MAP, lt, Se, rt.width, rt.height);
                    for(let ze = 0; ze < 6; ze++){
                        Ae = je[ze].mipmaps;
                        for(let We = 0; We < Ae.length; We++){
                            const it = Ae[We];
                            G.format !== lo ? ct !== null ? $e ? Ee && n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We, 0, 0, it.width, it.height, ct, it.data) : n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We, Se, it.width, it.height, 0, it.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : $e ? Ee && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We, 0, 0, it.width, it.height, ct, st, it.data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We, Se, it.width, it.height, 0, ct, st, it.data);
                        }
                    }
                } else {
                    if (Ae = G.mipmaps, $e && ht) {
                        Ae.length > 0 && lt++;
                        const ze = ae(je[0]);
                        n.texStorage2D(t.TEXTURE_CUBE_MAP, lt, Se, ze.width, ze.height);
                    }
                    for(let ze = 0; ze < 6; ze++)if (Pe) {
                        $e ? Ee && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, 0, 0, 0, je[ze].width, je[ze].height, ct, st, je[ze].data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, 0, Se, je[ze].width, je[ze].height, 0, ct, st, je[ze].data);
                        for(let We = 0; We < Ae.length; We++){
                            const pt = Ae[We].image[ze].image;
                            $e ? Ee && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We + 1, 0, 0, pt.width, pt.height, ct, st, pt.data) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We + 1, Se, pt.width, pt.height, 0, ct, st, pt.data);
                        }
                    } else {
                        $e ? Ee && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, 0, 0, 0, ct, st, je[ze]) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, 0, Se, ct, st, je[ze]);
                        for(let We = 0; We < Ae.length; We++){
                            const it = Ae[We];
                            $e ? Ee && n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We + 1, 0, 0, ct, st, it.image[ze]) : n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + ze, We + 1, Se, ct, st, it.image[ze]);
                        }
                    }
                }
                w(G) && b(t.TEXTURE_CUBE_MAP), Ie.__version = me.version, G.onUpdate && G.onUpdate(G);
            }
            X.__version = G.version;
        }
        function ge(X, G, he, pe, me, Ie) {
            const Xe = s.convert(he.format, he.colorSpace), Ze = s.convert(he.type), at = E(he.internalFormat, Xe, Ze, he.colorSpace), Je = r.get(G), Pe = r.get(he);
            if (Pe.__renderTarget = G, !Je.__hasExternalTextures) {
                const je = Math.max(1, G.width >> Ie), rt = Math.max(1, G.height >> Ie);
                me === t.TEXTURE_3D || me === t.TEXTURE_2D_ARRAY ? n.texImage3D(me, Ie, at, je, rt, G.depth, 0, Xe, Ze, null) : n.texImage2D(me, Ie, at, je, rt, 0, Xe, Ze, null);
            }
            n.bindFramebuffer(t.FRAMEBUFFER, X), nt(G) ? a.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER, pe, me, Pe.__webglTexture, 0, Be(G)) : (me === t.TEXTURE_2D || me >= t.TEXTURE_CUBE_MAP_POSITIVE_X && me <= t.TEXTURE_CUBE_MAP_NEGATIVE_Z) && t.framebufferTexture2D(t.FRAMEBUFFER, pe, me, Pe.__webglTexture, Ie), n.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        function ye(X, G, he) {
            if (t.bindRenderbuffer(t.RENDERBUFFER, X), G.depthBuffer) {
                const pe = G.depthTexture, me = pe && pe.isDepthTexture ? pe.type : null, Ie = T(G.stencilBuffer, me), Xe = G.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, Ze = Be(G);
                nt(G) ? a.renderbufferStorageMultisampleEXT(t.RENDERBUFFER, Ze, Ie, G.width, G.height) : he ? t.renderbufferStorageMultisample(t.RENDERBUFFER, Ze, Ie, G.width, G.height) : t.renderbufferStorage(t.RENDERBUFFER, Ie, G.width, G.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, Xe, t.RENDERBUFFER, X);
            } else {
                const pe = G.textures;
                for(let me = 0; me < pe.length; me++){
                    const Ie = pe[me], Xe = s.convert(Ie.format, Ie.colorSpace), Ze = s.convert(Ie.type), at = E(Ie.internalFormat, Xe, Ze, Ie.colorSpace), Je = Be(G);
                    he && nt(G) === !1 ? t.renderbufferStorageMultisample(t.RENDERBUFFER, Je, at, G.width, G.height) : nt(G) ? a.renderbufferStorageMultisampleEXT(t.RENDERBUFFER, Je, at, G.width, G.height) : t.renderbufferStorage(t.RENDERBUFFER, at, G.width, G.height);
                }
            }
            t.bindRenderbuffer(t.RENDERBUFFER, null);
        }
        function _e(X, G) {
            if (G && G.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
            if (n.bindFramebuffer(t.FRAMEBUFFER, X), !(G.depthTexture && G.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
            const pe = r.get(G.depthTexture);
            pe.__renderTarget = G, (!pe.__webglTexture || G.depthTexture.image.width !== G.width || G.depthTexture.image.height !== G.height) && (G.depthTexture.image.width = G.width, G.depthTexture.image.height = G.height, G.depthTexture.needsUpdate = !0), K(G.depthTexture, 0);
            const me = pe.__webglTexture, Ie = Be(G);
            if (G.depthTexture.format === dm) nt(G) ? a.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, me, 0, Ie) : t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, me, 0);
            else if (G.depthTexture.format === Am) nt(G) ? a.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, me, 0, Ie) : t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.TEXTURE_2D, me, 0);
            else throw new Error("Unknown depthTexture format");
        }
        function Te(X) {
            const G = r.get(X), he = X.isWebGLCubeRenderTarget === !0;
            if (G.__boundDepthTexture !== X.depthTexture) {
                const pe = X.depthTexture;
                if (G.__depthDisposeCallback && G.__depthDisposeCallback(), pe) {
                    const me = ()=>{
                        delete G.__boundDepthTexture, delete G.__depthDisposeCallback, pe.removeEventListener("dispose", me);
                    };
                    pe.addEventListener("dispose", me), G.__depthDisposeCallback = me;
                }
                G.__boundDepthTexture = pe;
            }
            if (X.depthTexture && !G.__autoAllocateDepthBuffer) {
                if (he) throw new Error("target.depthTexture not supported in Cube render targets");
                _e(G.__webglFramebuffer, X);
            } else if (he) {
                G.__webglDepthbuffer = [];
                for(let pe = 0; pe < 6; pe++)if (n.bindFramebuffer(t.FRAMEBUFFER, G.__webglFramebuffer[pe]), G.__webglDepthbuffer[pe] === void 0) G.__webglDepthbuffer[pe] = t.createRenderbuffer(), ye(G.__webglDepthbuffer[pe], X, !1);
                else {
                    const me = X.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, Ie = G.__webglDepthbuffer[pe];
                    t.bindRenderbuffer(t.RENDERBUFFER, Ie), t.framebufferRenderbuffer(t.FRAMEBUFFER, me, t.RENDERBUFFER, Ie);
                }
            } else if (n.bindFramebuffer(t.FRAMEBUFFER, G.__webglFramebuffer), G.__webglDepthbuffer === void 0) G.__webglDepthbuffer = t.createRenderbuffer(), ye(G.__webglDepthbuffer, X, !1);
            else {
                const pe = X.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, me = G.__webglDepthbuffer;
                t.bindRenderbuffer(t.RENDERBUFFER, me), t.framebufferRenderbuffer(t.FRAMEBUFFER, pe, t.RENDERBUFFER, me);
            }
            n.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        function Re(X, G, he) {
            const pe = r.get(X);
            G !== void 0 && ge(pe.__webglFramebuffer, X, X.texture, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, 0), he !== void 0 && Te(X);
        }
        function Fe(X) {
            const G = X.texture, he = r.get(X), pe = r.get(G);
            X.addEventListener("dispose", O);
            const me = X.textures, Ie = X.isWebGLCubeRenderTarget === !0, Xe = me.length > 1;
            if (Xe || (pe.__webglTexture === void 0 && (pe.__webglTexture = t.createTexture()), pe.__version = G.version, o.memory.textures++), Ie) {
                he.__webglFramebuffer = [];
                for(let Ze = 0; Ze < 6; Ze++)if (G.mipmaps && G.mipmaps.length > 0) {
                    he.__webglFramebuffer[Ze] = [];
                    for(let at = 0; at < G.mipmaps.length; at++)he.__webglFramebuffer[Ze][at] = t.createFramebuffer();
                } else he.__webglFramebuffer[Ze] = t.createFramebuffer();
            } else {
                if (G.mipmaps && G.mipmaps.length > 0) {
                    he.__webglFramebuffer = [];
                    for(let Ze = 0; Ze < G.mipmaps.length; Ze++)he.__webglFramebuffer[Ze] = t.createFramebuffer();
                } else he.__webglFramebuffer = t.createFramebuffer();
                if (Xe) for(let Ze = 0, at = me.length; Ze < at; Ze++){
                    const Je = r.get(me[Ze]);
                    Je.__webglTexture === void 0 && (Je.__webglTexture = t.createTexture(), o.memory.textures++);
                }
                if (X.samples > 0 && nt(X) === !1) {
                    he.__webglMultisampledFramebuffer = t.createFramebuffer(), he.__webglColorRenderbuffer = [], n.bindFramebuffer(t.FRAMEBUFFER, he.__webglMultisampledFramebuffer);
                    for(let Ze = 0; Ze < me.length; Ze++){
                        const at = me[Ze];
                        he.__webglColorRenderbuffer[Ze] = t.createRenderbuffer(), t.bindRenderbuffer(t.RENDERBUFFER, he.__webglColorRenderbuffer[Ze]);
                        const Je = s.convert(at.format, at.colorSpace), Pe = s.convert(at.type), je = E(at.internalFormat, Je, Pe, at.colorSpace, X.isXRRenderTarget === !0), rt = Be(X);
                        t.renderbufferStorageMultisample(t.RENDERBUFFER, rt, je, X.width, X.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0 + Ze, t.RENDERBUFFER, he.__webglColorRenderbuffer[Ze]);
                    }
                    t.bindRenderbuffer(t.RENDERBUFFER, null), X.depthBuffer && (he.__webglDepthRenderbuffer = t.createRenderbuffer(), ye(he.__webglDepthRenderbuffer, X, !0)), n.bindFramebuffer(t.FRAMEBUFFER, null);
                }
            }
            if (Ie) {
                n.bindTexture(t.TEXTURE_CUBE_MAP, pe.__webglTexture), se(t.TEXTURE_CUBE_MAP, G);
                for(let Ze = 0; Ze < 6; Ze++)if (G.mipmaps && G.mipmaps.length > 0) for(let at = 0; at < G.mipmaps.length; at++)ge(he.__webglFramebuffer[Ze][at], X, G, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + Ze, at);
                else ge(he.__webglFramebuffer[Ze], X, G, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + Ze, 0);
                w(G) && b(t.TEXTURE_CUBE_MAP), n.unbindTexture();
            } else if (Xe) {
                for(let Ze = 0, at = me.length; Ze < at; Ze++){
                    const Je = me[Ze], Pe = r.get(Je);
                    n.bindTexture(t.TEXTURE_2D, Pe.__webglTexture), se(t.TEXTURE_2D, Je), ge(he.__webglFramebuffer, X, Je, t.COLOR_ATTACHMENT0 + Ze, t.TEXTURE_2D, 0), w(Je) && b(t.TEXTURE_2D);
                }
                n.unbindTexture();
            } else {
                let Ze = t.TEXTURE_2D;
                if ((X.isWebGL3DRenderTarget || X.isWebGLArrayRenderTarget) && (Ze = X.isWebGL3DRenderTarget ? t.TEXTURE_3D : t.TEXTURE_2D_ARRAY), n.bindTexture(Ze, pe.__webglTexture), se(Ze, G), G.mipmaps && G.mipmaps.length > 0) for(let at = 0; at < G.mipmaps.length; at++)ge(he.__webglFramebuffer[at], X, G, t.COLOR_ATTACHMENT0, Ze, at);
                else ge(he.__webglFramebuffer, X, G, t.COLOR_ATTACHMENT0, Ze, 0);
                w(G) && b(Ze), n.unbindTexture();
            }
            X.depthBuffer && Te(X);
        }
        function be(X) {
            const G = X.textures;
            for(let he = 0, pe = G.length; he < pe; he++){
                const me = G[he];
                if (w(me)) {
                    const Ie = M(X), Xe = r.get(me).__webglTexture;
                    n.bindTexture(Ie, Xe), b(Ie), n.unbindTexture();
                }
            }
        }
        const Me = [], oe = [];
        function Ye(X) {
            if (X.samples > 0) {
                if (nt(X) === !1) {
                    const G = X.textures, he = X.width, pe = X.height;
                    let me = t.COLOR_BUFFER_BIT;
                    const Ie = X.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT, Xe = r.get(X), Ze = G.length > 1;
                    if (Ze) for(let at = 0; at < G.length; at++)n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglMultisampledFramebuffer), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.RENDERBUFFER, null), n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglFramebuffer), t.framebufferTexture2D(t.DRAW_FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.TEXTURE_2D, null, 0);
                    n.bindFramebuffer(t.READ_FRAMEBUFFER, Xe.__webglMultisampledFramebuffer), n.bindFramebuffer(t.DRAW_FRAMEBUFFER, Xe.__webglFramebuffer);
                    for(let at = 0; at < G.length; at++){
                        if (X.resolveDepthBuffer && (X.depthBuffer && (me |= t.DEPTH_BUFFER_BIT), X.stencilBuffer && X.resolveStencilBuffer && (me |= t.STENCIL_BUFFER_BIT)), Ze) {
                            t.framebufferRenderbuffer(t.READ_FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.RENDERBUFFER, Xe.__webglColorRenderbuffer[at]);
                            const Je = r.get(G[at]).__webglTexture;
                            t.framebufferTexture2D(t.DRAW_FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, Je, 0);
                        }
                        t.blitFramebuffer(0, 0, he, pe, 0, 0, he, pe, me, t.NEAREST), l === !0 && (Me.length = 0, oe.length = 0, Me.push(t.COLOR_ATTACHMENT0 + at), X.depthBuffer && X.resolveDepthBuffer === !1 && (Me.push(Ie), oe.push(Ie), t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER, oe)), t.invalidateFramebuffer(t.READ_FRAMEBUFFER, Me));
                    }
                    if (n.bindFramebuffer(t.READ_FRAMEBUFFER, null), n.bindFramebuffer(t.DRAW_FRAMEBUFFER, null), Ze) for(let at = 0; at < G.length; at++){
                        n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglMultisampledFramebuffer), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.RENDERBUFFER, Xe.__webglColorRenderbuffer[at]);
                        const Je = r.get(G[at]).__webglTexture;
                        n.bindFramebuffer(t.FRAMEBUFFER, Xe.__webglFramebuffer), t.framebufferTexture2D(t.DRAW_FRAMEBUFFER, t.COLOR_ATTACHMENT0 + at, t.TEXTURE_2D, Je, 0);
                    }
                    n.bindFramebuffer(t.DRAW_FRAMEBUFFER, Xe.__webglMultisampledFramebuffer);
                } else if (X.depthBuffer && X.resolveDepthBuffer === !1 && l) {
                    const G = X.stencilBuffer ? t.DEPTH_STENCIL_ATTACHMENT : t.DEPTH_ATTACHMENT;
                    t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER, [
                        G
                    ]);
                }
            }
        }
        function Be(X) {
            return Math.min(i.maxSamples, X.samples);
        }
        function nt(X) {
            const G = r.get(X);
            return X.samples > 0 && e.has("WEBGL_multisampled_render_to_texture") === !0 && G.__useRenderToTexture !== !1;
        }
        function de(X) {
            const G = o.render.frame;
            u.get(X) !== G && (u.set(X, G), X.update());
        }
        function ce(X, G) {
            const he = X.colorSpace, pe = X.format, me = X.type;
            return X.isCompressedTexture === !0 || X.isVideoTexture === !0 || he !== Nm && he !== xd && (rr.getTransfer(he) === br ? (pe !== lo || me !== _c) && console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture color space:", he)), G;
        }
        function ae(X) {
            return typeof HTMLImageElement < "u" && X instanceof HTMLImageElement ? (c.width = X.naturalWidth || X.width, c.height = X.naturalHeight || X.height) : typeof VideoFrame < "u" && X instanceof VideoFrame ? (c.width = X.displayWidth, c.height = X.displayHeight) : (c.width = X.width, c.height = X.height), c;
        }
        this.allocateTextureUnit = B, this.resetTextureUnits = U, this.setTexture2D = K, this.setTexture2DArray = q, this.setTexture3D = ee, this.setTextureCube = W, this.rebindTextures = Re, this.setupRenderTarget = Fe, this.updateRenderTargetMipmap = be, this.updateMultisampleRenderTarget = Ye, this.setupDepthRenderbuffer = Te, this.setupFrameBufferTexture = ge, this.useMultisampledRTT = nt;
    }
    function hH(t, e) {
        function n(r, i = xd) {
            let s;
            const o = rr.getTransfer(i);
            if (r === _c) return t.UNSIGNED_BYTE;
            if (r === g2) return t.UNSIGNED_SHORT_4_4_4_4;
            if (r === y2) return t.UNSIGNED_SHORT_5_5_5_1;
            if (r === Dk) return t.UNSIGNED_INT_5_9_9_9_REV;
            if (r === kk) return t.BYTE;
            if (r === Ok) return t.SHORT;
            if (r === Sy) return t.UNSIGNED_SHORT;
            if (r === m2) return t.INT;
            if (r === jd) return t.UNSIGNED_INT;
            if (r === xa) return t.FLOAT;
            if (r === Vy) return t.HALF_FLOAT;
            if (r === Lk) return t.ALPHA;
            if (r === Fk) return t.RGB;
            if (r === lo) return t.RGBA;
            if (r === jk) return t.LUMINANCE;
            if (r === Bk) return t.LUMINANCE_ALPHA;
            if (r === dm) return t.DEPTH_COMPONENT;
            if (r === Am) return t.DEPTH_STENCIL;
            if (r === v2) return t.RED;
            if (r === Uw) return t.RED_INTEGER;
            if (r === Uk) return t.RG;
            if (r === x2) return t.RG_INTEGER;
            if (r === b2) return t.RGBA_INTEGER;
            if (r === Qx || r === eb || r === tb || r === nb) if (o === br) if (s = e.get("WEBGL_compressed_texture_s3tc_srgb"), s !== null) {
                if (r === Qx) return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                if (r === eb) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                if (r === tb) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                if (r === nb) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
            } else return null;
            else if (s = e.get("WEBGL_compressed_texture_s3tc"), s !== null) {
                if (r === Qx) return s.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (r === eb) return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (r === tb) return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (r === nb) return s.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            } else return null;
            if (r === DM || r === LM || r === FM || r === jM) if (s = e.get("WEBGL_compressed_texture_pvrtc"), s !== null) {
                if (r === DM) return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (r === LM) return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (r === FM) return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (r === jM) return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            } else return null;
            if (r === BM || r === UM || r === zM) if (s = e.get("WEBGL_compressed_texture_etc"), s !== null) {
                if (r === BM || r === UM) return o === br ? s.COMPRESSED_SRGB8_ETC2 : s.COMPRESSED_RGB8_ETC2;
                if (r === zM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : s.COMPRESSED_RGBA8_ETC2_EAC;
            } else return null;
            if (r === VM || r === WM || r === qM || r === HM || r === $M || r === GM || r === XM || r === KM || r === YM || r === ZM || r === JM || r === QM || r === eT || r === tT) if (s = e.get("WEBGL_compressed_texture_astc"), s !== null) {
                if (r === VM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : s.COMPRESSED_RGBA_ASTC_4x4_KHR;
                if (r === WM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : s.COMPRESSED_RGBA_ASTC_5x4_KHR;
                if (r === qM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : s.COMPRESSED_RGBA_ASTC_5x5_KHR;
                if (r === HM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : s.COMPRESSED_RGBA_ASTC_6x5_KHR;
                if (r === $M) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : s.COMPRESSED_RGBA_ASTC_6x6_KHR;
                if (r === GM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : s.COMPRESSED_RGBA_ASTC_8x5_KHR;
                if (r === XM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : s.COMPRESSED_RGBA_ASTC_8x6_KHR;
                if (r === KM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : s.COMPRESSED_RGBA_ASTC_8x8_KHR;
                if (r === YM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : s.COMPRESSED_RGBA_ASTC_10x5_KHR;
                if (r === ZM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : s.COMPRESSED_RGBA_ASTC_10x6_KHR;
                if (r === JM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : s.COMPRESSED_RGBA_ASTC_10x8_KHR;
                if (r === QM) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : s.COMPRESSED_RGBA_ASTC_10x10_KHR;
                if (r === eT) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : s.COMPRESSED_RGBA_ASTC_12x10_KHR;
                if (r === tT) return o === br ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : s.COMPRESSED_RGBA_ASTC_12x12_KHR;
            } else return null;
            if (r === rb || r === nT || r === rT) if (s = e.get("EXT_texture_compression_bptc"), s !== null) {
                if (r === rb) return o === br ? s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : s.COMPRESSED_RGBA_BPTC_UNORM_EXT;
                if (r === nT) return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
                if (r === rT) return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
            } else return null;
            if (r === zk || r === iT || r === sT || r === oT) if (s = e.get("EXT_texture_compression_rgtc"), s !== null) {
                if (r === rb) return s.COMPRESSED_RED_RGTC1_EXT;
                if (r === iT) return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;
                if (r === sT) return s.COMPRESSED_RED_GREEN_RGTC2_EXT;
                if (r === oT) return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
            } else return null;
            return r === Im ? t.UNSIGNED_INT_24_8 : t[r] !== void 0 ? t[r] : null;
        }
        return {
            convert: n
        };
    }
    const q_e = `
void main() {

	gl_Position = vec4( position, 1.0 );

}`, H_e = `
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;
    class $_e {
        constructor(){
            this.texture = null, this.mesh = null, this.depthNear = 0, this.depthFar = 0;
        }
        init(e, n, r) {
            if (this.texture === null) {
                const i = new bi, s = e.properties.get(i);
                s.__webglTexture = n.texture, (n.depthNear !== r.depthNear || n.depthFar !== r.depthFar) && (this.depthNear = n.depthNear, this.depthFar = n.depthFar), this.texture = i;
            }
        }
        getMesh(e) {
            if (this.texture !== null && this.mesh === null) {
                const n = e.cameras[0].viewport, r = new Sc({
                    vertexShader: q_e,
                    fragmentShader: H_e,
                    uniforms: {
                        depthColor: {
                            value: this.texture
                        },
                        depthWidth: {
                            value: n.z
                        },
                        depthHeight: {
                            value: n.w
                        }
                    }
                });
                this.mesh = new Ji(new qy(20, 20), r);
            }
            return this.mesh;
        }
        reset() {
            this.texture = null, this.mesh = null;
        }
        getDepthTexture() {
            return this.texture;
        }
    }
    class G_e extends vu {
        constructor(e, n){
            super();
            const r = this;
            let i = null, s = 1, o = null, a = "local-floor", l = 1, c = null, u = null, f = null, h = null, m = null, v = null;
            const _ = new $_e, w = n.getContextAttributes();
            let b = null, M = null;
            const E = [], T = [], P = new ot;
            let A = null;
            const O = new Oi;
            O.viewport = new cr;
            const D = new Oi;
            D.viewport = new cr;
            const R = [
                O,
                D
            ], N = new nH;
            let k = null, U = null;
            this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(ne) {
                let ue = E[ne];
                return ue === void 0 && (ue = new KS, E[ne] = ue), ue.getTargetRaySpace();
            }, this.getControllerGrip = function(ne) {
                let ue = E[ne];
                return ue === void 0 && (ue = new KS, E[ne] = ue), ue.getGripSpace();
            }, this.getHand = function(ne) {
                let ue = E[ne];
                return ue === void 0 && (ue = new KS, E[ne] = ue), ue.getHandSpace();
            };
            function B(ne) {
                const ue = T.indexOf(ne.inputSource);
                if (ue === -1) return;
                const ge = E[ue];
                ge !== void 0 && (ge.update(ne.inputSource, ne.frame, c || o), ge.dispatchEvent({
                    type: ne.type,
                    data: ne.inputSource
                }));
            }
            function j() {
                i.removeEventListener("select", B), i.removeEventListener("selectstart", B), i.removeEventListener("selectend", B), i.removeEventListener("squeeze", B), i.removeEventListener("squeezestart", B), i.removeEventListener("squeezeend", B), i.removeEventListener("end", j), i.removeEventListener("inputsourceschange", K);
                for(let ne = 0; ne < E.length; ne++){
                    const ue = T[ne];
                    ue !== null && (T[ne] = null, E[ne].disconnect(ue));
                }
                k = null, U = null, _.reset(), e.setRenderTarget(b), m = null, h = null, f = null, i = null, M = null, le.stop(), r.isPresenting = !1, e.setPixelRatio(A), e.setSize(P.width, P.height, !1), r.dispatchEvent({
                    type: "sessionend"
                });
            }
            this.setFramebufferScaleFactor = function(ne) {
                s = ne, r.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
            }, this.setReferenceSpaceType = function(ne) {
                a = ne, r.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
            }, this.getReferenceSpace = function() {
                return c || o;
            }, this.setReferenceSpace = function(ne) {
                c = ne;
            }, this.getBaseLayer = function() {
                return h !== null ? h : m;
            }, this.getBinding = function() {
                return f;
            }, this.getFrame = function() {
                return v;
            }, this.getSession = function() {
                return i;
            }, this.setSession = async function(ne) {
                if (i = ne, i !== null) {
                    if (b = e.getRenderTarget(), i.addEventListener("select", B), i.addEventListener("selectstart", B), i.addEventListener("selectend", B), i.addEventListener("squeeze", B), i.addEventListener("squeezestart", B), i.addEventListener("squeezeend", B), i.addEventListener("end", j), i.addEventListener("inputsourceschange", K), w.xrCompatible !== !0 && await n.makeXRCompatible(), A = e.getPixelRatio(), e.getSize(P), typeof XRWebGLBinding < "u" && "createProjectionLayer" in XRWebGLBinding.prototype) {
                        let ge = null, ye = null, _e = null;
                        w.depth && (_e = w.stencil ? n.DEPTH24_STENCIL8 : n.DEPTH_COMPONENT24, ge = w.stencil ? Am : dm, ye = w.stencil ? Im : jd);
                        const Te = {
                            colorFormat: n.RGBA8,
                            depthFormat: _e,
                            scaleFactor: s
                        };
                        f = new XRWebGLBinding(i, n), h = f.createProjectionLayer(Te), i.updateRenderState({
                            layers: [
                                h
                            ]
                        }), e.setPixelRatio(1), e.setSize(h.textureWidth, h.textureHeight, !1), M = new mu(h.textureWidth, h.textureHeight, {
                            format: lo,
                            type: _c,
                            depthTexture: new Zk(h.textureWidth, h.textureHeight, ye, void 0, void 0, void 0, void 0, void 0, void 0, ge),
                            stencilBuffer: w.stencil,
                            colorSpace: e.outputColorSpace,
                            samples: w.antialias ? 4 : 0,
                            resolveDepthBuffer: h.ignoreDepthValues === !1
                        });
                    } else {
                        const ge = {
                            antialias: w.antialias,
                            alpha: !0,
                            depth: w.depth,
                            stencil: w.stencil,
                            framebufferScaleFactor: s
                        };
                        m = new XRWebGLLayer(i, n, ge), i.updateRenderState({
                            baseLayer: m
                        }), e.setPixelRatio(1), e.setSize(m.framebufferWidth, m.framebufferHeight, !1), M = new mu(m.framebufferWidth, m.framebufferHeight, {
                            format: lo,
                            type: _c,
                            colorSpace: e.outputColorSpace,
                            stencilBuffer: w.stencil
                        });
                    }
                    M.isXRRenderTarget = !0, this.setFoveation(l), c = null, o = await i.requestReferenceSpace(a), le.setContext(i), le.start(), r.isPresenting = !0, r.dispatchEvent({
                        type: "sessionstart"
                    });
                }
            }, this.getEnvironmentBlendMode = function() {
                if (i !== null) return i.environmentBlendMode;
            }, this.getDepthTexture = function() {
                return _.getDepthTexture();
            };
            function K(ne) {
                for(let ue = 0; ue < ne.removed.length; ue++){
                    const ge = ne.removed[ue], ye = T.indexOf(ge);
                    ye >= 0 && (T[ye] = null, E[ye].disconnect(ge));
                }
                for(let ue = 0; ue < ne.added.length; ue++){
                    const ge = ne.added[ue];
                    let ye = T.indexOf(ge);
                    if (ye === -1) {
                        for(let Te = 0; Te < E.length; Te++)if (Te >= T.length) {
                            T.push(ge), ye = Te;
                            break;
                        } else if (T[Te] === null) {
                            T[Te] = ge, ye = Te;
                            break;
                        }
                        if (ye === -1) break;
                    }
                    const _e = E[ye];
                    _e && _e.connect(ge);
                }
            }
            const q = new ve, ee = new ve;
            function W(ne, ue, ge) {
                q.setFromMatrixPosition(ue.matrixWorld), ee.setFromMatrixPosition(ge.matrixWorld);
                const ye = q.distanceTo(ee), _e = ue.projectionMatrix.elements, Te = ge.projectionMatrix.elements, Re = _e[14] / (_e[10] - 1), Fe = _e[14] / (_e[10] + 1), be = (_e[9] + 1) / _e[5], Me = (_e[9] - 1) / _e[5], oe = (_e[8] - 1) / _e[0], Ye = (Te[8] + 1) / Te[0], Be = Re * oe, nt = Re * Ye, de = ye / (-oe + Ye), ce = de * -oe;
                if (ue.matrixWorld.decompose(ne.position, ne.quaternion, ne.scale), ne.translateX(ce), ne.translateZ(de), ne.matrixWorld.compose(ne.position, ne.quaternion, ne.scale), ne.matrixWorldInverse.copy(ne.matrixWorld).invert(), _e[10] === -1) ne.projectionMatrix.copy(ue.projectionMatrix), ne.projectionMatrixInverse.copy(ue.projectionMatrixInverse);
                else {
                    const ae = Re + de, X = Fe + de, G = Be - ce, he = nt + (ye - ce), pe = be * Fe / X * ae, me = Me * Fe / X * ae;
                    ne.projectionMatrix.makePerspective(G, he, pe, me, ae, X), ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert();
                }
            }
            function Z(ne, ue) {
                ue === null ? ne.matrixWorld.copy(ne.matrix) : ne.matrixWorld.multiplyMatrices(ue.matrixWorld, ne.matrix), ne.matrixWorldInverse.copy(ne.matrixWorld).invert();
            }
            this.updateCamera = function(ne) {
                if (i === null) return;
                let ue = ne.near, ge = ne.far;
                _.texture !== null && (_.depthNear > 0 && (ue = _.depthNear), _.depthFar > 0 && (ge = _.depthFar)), N.near = D.near = O.near = ue, N.far = D.far = O.far = ge, (k !== N.near || U !== N.far) && (i.updateRenderState({
                    depthNear: N.near,
                    depthFar: N.far
                }), k = N.near, U = N.far), O.layers.mask = ne.layers.mask | 2, D.layers.mask = ne.layers.mask | 4, N.layers.mask = O.layers.mask | D.layers.mask;
                const ye = ne.parent, _e = N.cameras;
                Z(N, ye);
                for(let Te = 0; Te < _e.length; Te++)Z(_e[Te], ye);
                _e.length === 2 ? W(N, O, D) : N.projectionMatrix.copy(O.projectionMatrix), $(ne, N, ye);
            };
            function $(ne, ue, ge) {
                ge === null ? ne.matrix.copy(ue.matrixWorld) : (ne.matrix.copy(ge.matrixWorld), ne.matrix.invert(), ne.matrix.multiply(ue.matrixWorld)), ne.matrix.decompose(ne.position, ne.quaternion, ne.scale), ne.updateMatrixWorld(!0), ne.projectionMatrix.copy(ue.projectionMatrix), ne.projectionMatrixInverse.copy(ue.projectionMatrixInverse), ne.isPerspectiveCamera && (ne.fov = Ey * 2 * Math.atan(1 / ne.projectionMatrix.elements[5]), ne.zoom = 1);
            }
            this.getCamera = function() {
                return N;
            }, this.getFoveation = function() {
                if (!(h === null && m === null)) return l;
            }, this.setFoveation = function(ne) {
                l = ne, h !== null && (h.fixedFoveation = ne), m !== null && m.fixedFoveation !== void 0 && (m.fixedFoveation = ne);
            }, this.hasDepthSensing = function() {
                return _.texture !== null;
            }, this.getDepthSensingMesh = function() {
                return _.getMesh(N);
            };
            let H = null;
            function se(ne, ue) {
                if (u = ue.getViewerPose(c || o), v = ue, u !== null) {
                    const ge = u.views;
                    m !== null && (e.setRenderTargetFramebuffer(M, m.framebuffer), e.setRenderTarget(M));
                    let ye = !1;
                    ge.length !== N.cameras.length && (N.cameras.length = 0, ye = !0);
                    for(let Re = 0; Re < ge.length; Re++){
                        const Fe = ge[Re];
                        let be = null;
                        if (m !== null) be = m.getViewport(Fe);
                        else {
                            const oe = f.getViewSubImage(h, Fe);
                            be = oe.viewport, Re === 0 && (e.setRenderTargetTextures(M, oe.colorTexture, h.ignoreDepthValues ? void 0 : oe.depthStencilTexture), e.setRenderTarget(M));
                        }
                        let Me = R[Re];
                        Me === void 0 && (Me = new Oi, Me.layers.enable(Re), Me.viewport = new cr, R[Re] = Me), Me.matrix.fromArray(Fe.transform.matrix), Me.matrix.decompose(Me.position, Me.quaternion, Me.scale), Me.projectionMatrix.fromArray(Fe.projectionMatrix), Me.projectionMatrixInverse.copy(Me.projectionMatrix).invert(), Me.viewport.set(be.x, be.y, be.width, be.height), Re === 0 && (N.matrix.copy(Me.matrix), N.matrix.decompose(N.position, N.quaternion, N.scale)), ye === !0 && N.cameras.push(Me);
                    }
                    const _e = i.enabledFeatures;
                    if (_e && _e.includes("depth-sensing") && i.depthUsage == "gpu-optimized" && f) {
                        const Re = f.getDepthInformation(ge[0]);
                        Re && Re.isValid && Re.texture && _.init(e, Re, i.renderState);
                    }
                }
                for(let ge = 0; ge < E.length; ge++){
                    const ye = T[ge], _e = E[ge];
                    ye !== null && _e !== void 0 && _e.update(ye, ue, c || o);
                }
                H && H(ne, ue), ue.detectedPlanes && r.dispatchEvent({
                    type: "planesdetected",
                    data: ue
                }), v = null;
            }
            const le = new lH;
            le.setAnimationLoop(se), this.setAnimationLoop = function(ne) {
                H = ne;
            }, this.dispose = function() {};
        }
    }
    const Op = new tl, X_e = new gn;
    function K_e(t, e) {
        function n(w, b) {
            w.matrixAutoUpdate === !0 && w.updateMatrix(), b.value.copy(w.matrix);
        }
        function r(w, b) {
            b.color.getRGB(w.fogColor.value, lq(t)), b.isFog ? (w.fogNear.value = b.near, w.fogFar.value = b.far) : b.isFogExp2 && (w.fogDensity.value = b.density);
        }
        function i(w, b, M, E, T) {
            b.isMeshBasicMaterial || b.isMeshLambertMaterial ? s(w, b) : b.isMeshToonMaterial ? (s(w, b), f(w, b)) : b.isMeshPhongMaterial ? (s(w, b), u(w, b)) : b.isMeshStandardMaterial ? (s(w, b), h(w, b), b.isMeshPhysicalMaterial && m(w, b, T)) : b.isMeshMatcapMaterial ? (s(w, b), v(w, b)) : b.isMeshDepthMaterial ? s(w, b) : b.isMeshDistanceMaterial ? (s(w, b), _(w, b)) : b.isMeshNormalMaterial ? s(w, b) : b.isLineBasicMaterial ? (o(w, b), b.isLineDashedMaterial && a(w, b)) : b.isPointsMaterial ? l(w, b, M, E) : b.isSpriteMaterial ? c(w, b) : b.isShadowMaterial ? (w.color.value.copy(b.color), w.opacity.value = b.opacity) : b.isShaderMaterial && (b.uniformsNeedUpdate = !1);
        }
        function s(w, b) {
            w.opacity.value = b.opacity, b.color && w.diffuse.value.copy(b.color), b.emissive && w.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity), b.map && (w.map.value = b.map, n(b.map, w.mapTransform)), b.alphaMap && (w.alphaMap.value = b.alphaMap, n(b.alphaMap, w.alphaMapTransform)), b.bumpMap && (w.bumpMap.value = b.bumpMap, n(b.bumpMap, w.bumpMapTransform), w.bumpScale.value = b.bumpScale, b.side === Wo && (w.bumpScale.value *= -1)), b.normalMap && (w.normalMap.value = b.normalMap, n(b.normalMap, w.normalMapTransform), w.normalScale.value.copy(b.normalScale), b.side === Wo && w.normalScale.value.negate()), b.displacementMap && (w.displacementMap.value = b.displacementMap, n(b.displacementMap, w.displacementMapTransform), w.displacementScale.value = b.displacementScale, w.displacementBias.value = b.displacementBias), b.emissiveMap && (w.emissiveMap.value = b.emissiveMap, n(b.emissiveMap, w.emissiveMapTransform)), b.specularMap && (w.specularMap.value = b.specularMap, n(b.specularMap, w.specularMapTransform)), b.alphaTest > 0 && (w.alphaTest.value = b.alphaTest);
            const M = e.get(b), E = M.envMap, T = M.envMapRotation;
            E && (w.envMap.value = E, Op.copy(T), Op.x *= -1, Op.y *= -1, Op.z *= -1, E.isCubeTexture && E.isRenderTargetTexture === !1 && (Op.y *= -1, Op.z *= -1), w.envMapRotation.value.setFromMatrix4(X_e.makeRotationFromEuler(Op)), w.flipEnvMap.value = E.isCubeTexture && E.isRenderTargetTexture === !1 ? -1 : 1, w.reflectivity.value = b.reflectivity, w.ior.value = b.ior, w.refractionRatio.value = b.refractionRatio), b.lightMap && (w.lightMap.value = b.lightMap, w.lightMapIntensity.value = b.lightMapIntensity, n(b.lightMap, w.lightMapTransform)), b.aoMap && (w.aoMap.value = b.aoMap, w.aoMapIntensity.value = b.aoMapIntensity, n(b.aoMap, w.aoMapTransform));
        }
        function o(w, b) {
            w.diffuse.value.copy(b.color), w.opacity.value = b.opacity, b.map && (w.map.value = b.map, n(b.map, w.mapTransform));
        }
        function a(w, b) {
            w.dashSize.value = b.dashSize, w.totalSize.value = b.dashSize + b.gapSize, w.scale.value = b.scale;
        }
        function l(w, b, M, E) {
            w.diffuse.value.copy(b.color), w.opacity.value = b.opacity, w.size.value = b.size * M, w.scale.value = E * .5, b.map && (w.map.value = b.map, n(b.map, w.uvTransform)), b.alphaMap && (w.alphaMap.value = b.alphaMap, n(b.alphaMap, w.alphaMapTransform)), b.alphaTest > 0 && (w.alphaTest.value = b.alphaTest);
        }
        function c(w, b) {
            w.diffuse.value.copy(b.color), w.opacity.value = b.opacity, w.rotation.value = b.rotation, b.map && (w.map.value = b.map, n(b.map, w.mapTransform)), b.alphaMap && (w.alphaMap.value = b.alphaMap, n(b.alphaMap, w.alphaMapTransform)), b.alphaTest > 0 && (w.alphaTest.value = b.alphaTest);
        }
        function u(w, b) {
            w.specular.value.copy(b.specular), w.shininess.value = Math.max(b.shininess, 1e-4);
        }
        function f(w, b) {
            b.gradientMap && (w.gradientMap.value = b.gradientMap);
        }
        function h(w, b) {
            w.metalness.value = b.metalness, b.metalnessMap && (w.metalnessMap.value = b.metalnessMap, n(b.metalnessMap, w.metalnessMapTransform)), w.roughness.value = b.roughness, b.roughnessMap && (w.roughnessMap.value = b.roughnessMap, n(b.roughnessMap, w.roughnessMapTransform)), b.envMap && (w.envMapIntensity.value = b.envMapIntensity);
        }
        function m(w, b, M) {
            w.ior.value = b.ior, b.sheen > 0 && (w.sheenColor.value.copy(b.sheenColor).multiplyScalar(b.sheen), w.sheenRoughness.value = b.sheenRoughness, b.sheenColorMap && (w.sheenColorMap.value = b.sheenColorMap, n(b.sheenColorMap, w.sheenColorMapTransform)), b.sheenRoughnessMap && (w.sheenRoughnessMap.value = b.sheenRoughnessMap, n(b.sheenRoughnessMap, w.sheenRoughnessMapTransform))), b.clearcoat > 0 && (w.clearcoat.value = b.clearcoat, w.clearcoatRoughness.value = b.clearcoatRoughness, b.clearcoatMap && (w.clearcoatMap.value = b.clearcoatMap, n(b.clearcoatMap, w.clearcoatMapTransform)), b.clearcoatRoughnessMap && (w.clearcoatRoughnessMap.value = b.clearcoatRoughnessMap, n(b.clearcoatRoughnessMap, w.clearcoatRoughnessMapTransform)), b.clearcoatNormalMap && (w.clearcoatNormalMap.value = b.clearcoatNormalMap, n(b.clearcoatNormalMap, w.clearcoatNormalMapTransform), w.clearcoatNormalScale.value.copy(b.clearcoatNormalScale), b.side === Wo && w.clearcoatNormalScale.value.negate())), b.dispersion > 0 && (w.dispersion.value = b.dispersion), b.iridescence > 0 && (w.iridescence.value = b.iridescence, w.iridescenceIOR.value = b.iridescenceIOR, w.iridescenceThicknessMinimum.value = b.iridescenceThicknessRange[0], w.iridescenceThicknessMaximum.value = b.iridescenceThicknessRange[1], b.iridescenceMap && (w.iridescenceMap.value = b.iridescenceMap, n(b.iridescenceMap, w.iridescenceMapTransform)), b.iridescenceThicknessMap && (w.iridescenceThicknessMap.value = b.iridescenceThicknessMap, n(b.iridescenceThicknessMap, w.iridescenceThicknessMapTransform))), b.transmission > 0 && (w.transmission.value = b.transmission, w.transmissionSamplerMap.value = M.texture, w.transmissionSamplerSize.value.set(M.width, M.height), b.transmissionMap && (w.transmissionMap.value = b.transmissionMap, n(b.transmissionMap, w.transmissionMapTransform)), w.thickness.value = b.thickness, b.thicknessMap && (w.thicknessMap.value = b.thicknessMap, n(b.thicknessMap, w.thicknessMapTransform)), w.attenuationDistance.value = b.attenuationDistance, w.attenuationColor.value.copy(b.attenuationColor)), b.anisotropy > 0 && (w.anisotropyVector.value.set(b.anisotropy * Math.cos(b.anisotropyRotation), b.anisotropy * Math.sin(b.anisotropyRotation)), b.anisotropyMap && (w.anisotropyMap.value = b.anisotropyMap, n(b.anisotropyMap, w.anisotropyMapTransform))), w.specularIntensity.value = b.specularIntensity, w.specularColor.value.copy(b.specularColor), b.specularColorMap && (w.specularColorMap.value = b.specularColorMap, n(b.specularColorMap, w.specularColorMapTransform)), b.specularIntensityMap && (w.specularIntensityMap.value = b.specularIntensityMap, n(b.specularIntensityMap, w.specularIntensityMapTransform));
        }
        function v(w, b) {
            b.matcap && (w.matcap.value = b.matcap);
        }
        function _(w, b) {
            const M = e.get(b).light;
            w.referencePosition.value.setFromMatrixPosition(M.matrixWorld), w.nearDistance.value = M.shadow.camera.near, w.farDistance.value = M.shadow.camera.far;
        }
        return {
            refreshFogUniforms: r,
            refreshMaterialUniforms: i
        };
    }
    function Y_e(t, e, n, r) {
        let i = {}, s = {}, o = [];
        const a = t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS);
        function l(M, E) {
            const T = E.program;
            r.uniformBlockBinding(M, T);
        }
        function c(M, E) {
            let T = i[M.id];
            T === void 0 && (v(M), T = u(M), i[M.id] = T, M.addEventListener("dispose", w));
            const P = E.program;
            r.updateUBOMapping(M, P);
            const A = e.render.frame;
            s[M.id] !== A && (h(M), s[M.id] = A);
        }
        function u(M) {
            const E = f();
            M.__bindingPointIndex = E;
            const T = t.createBuffer(), P = M.__size, A = M.usage;
            return t.bindBuffer(t.UNIFORM_BUFFER, T), t.bufferData(t.UNIFORM_BUFFER, P, A), t.bindBuffer(t.UNIFORM_BUFFER, null), t.bindBufferBase(t.UNIFORM_BUFFER, E, T), T;
        }
        function f() {
            for(let M = 0; M < a; M++)if (o.indexOf(M) === -1) return o.push(M), M;
            return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."), 0;
        }
        function h(M) {
            const E = i[M.id], T = M.uniforms, P = M.__cache;
            t.bindBuffer(t.UNIFORM_BUFFER, E);
            for(let A = 0, O = T.length; A < O; A++){
                const D = Array.isArray(T[A]) ? T[A] : [
                    T[A]
                ];
                for(let R = 0, N = D.length; R < N; R++){
                    const k = D[R];
                    if (m(k, A, R, P) === !0) {
                        const U = k.__offset, B = Array.isArray(k.value) ? k.value : [
                            k.value
                        ];
                        let j = 0;
                        for(let K = 0; K < B.length; K++){
                            const q = B[K], ee = _(q);
                            typeof q == "number" || typeof q == "boolean" ? (k.__data[0] = q, t.bufferSubData(t.UNIFORM_BUFFER, U + j, k.__data)) : q.isMatrix3 ? (k.__data[0] = q.elements[0], k.__data[1] = q.elements[1], k.__data[2] = q.elements[2], k.__data[3] = 0, k.__data[4] = q.elements[3], k.__data[5] = q.elements[4], k.__data[6] = q.elements[5], k.__data[7] = 0, k.__data[8] = q.elements[6], k.__data[9] = q.elements[7], k.__data[10] = q.elements[8], k.__data[11] = 0) : (q.toArray(k.__data, j), j += ee.storage / Float32Array.BYTES_PER_ELEMENT);
                        }
                        t.bufferSubData(t.UNIFORM_BUFFER, U, k.__data);
                    }
                }
            }
            t.bindBuffer(t.UNIFORM_BUFFER, null);
        }
        function m(M, E, T, P) {
            const A = M.value, O = E + "_" + T;
            if (P[O] === void 0) return typeof A == "number" || typeof A == "boolean" ? P[O] = A : P[O] = A.clone(), !0;
            {
                const D = P[O];
                if (typeof A == "number" || typeof A == "boolean") {
                    if (D !== A) return P[O] = A, !0;
                } else if (D.equals(A) === !1) return D.copy(A), !0;
            }
            return !1;
        }
        function v(M) {
            const E = M.uniforms;
            let T = 0;
            const P = 16;
            for(let O = 0, D = E.length; O < D; O++){
                const R = Array.isArray(E[O]) ? E[O] : [
                    E[O]
                ];
                for(let N = 0, k = R.length; N < k; N++){
                    const U = R[N], B = Array.isArray(U.value) ? U.value : [
                        U.value
                    ];
                    for(let j = 0, K = B.length; j < K; j++){
                        const q = B[j], ee = _(q), W = T % P, Z = W % ee.boundary, $ = W + Z;
                        T += Z, $ !== 0 && P - $ < ee.storage && (T += P - $), U.__data = new Float32Array(ee.storage / Float32Array.BYTES_PER_ELEMENT), U.__offset = T, T += ee.storage;
                    }
                }
            }
            const A = T % P;
            return A > 0 && (T += P - A), M.__size = T, M.__cache = {}, this;
        }
        function _(M) {
            const E = {
                boundary: 0,
                storage: 0
            };
            return typeof M == "number" || typeof M == "boolean" ? (E.boundary = 4, E.storage = 4) : M.isVector2 ? (E.boundary = 8, E.storage = 8) : M.isVector3 || M.isColor ? (E.boundary = 16, E.storage = 12) : M.isVector4 ? (E.boundary = 16, E.storage = 16) : M.isMatrix3 ? (E.boundary = 48, E.storage = 48) : M.isMatrix4 ? (E.boundary = 64, E.storage = 64) : M.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", M), E;
        }
        function w(M) {
            const E = M.target;
            E.removeEventListener("dispose", w);
            const T = o.indexOf(E.__bindingPointIndex);
            o.splice(T, 1), t.deleteBuffer(i[E.id]), delete i[E.id], delete s[E.id];
        }
        function b() {
            for(const M in i)t.deleteBuffer(i[M]);
            o = [], i = {}, s = {};
        }
        return {
            bind: l,
            update: c,
            dispose: b
        };
    }
    class pH {
        constructor(e = {}){
            const { canvas: n = sq(), context: r = null, depth: i = !0, stencil: s = !1, alpha: o = !1, antialias: a = !1, premultipliedAlpha: l = !0, preserveDrawingBuffer: c = !1, powerPreference: u = "default", failIfMajorPerformanceCaveat: f = !1, reverseDepthBuffer: h = !1 } = e;
            this.isWebGLRenderer = !0;
            let m;
            if (r !== null) {
                if (typeof WebGLRenderingContext < "u" && r instanceof WebGLRenderingContext) throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");
                m = r.getContextAttributes().alpha;
            } else m = o;
            const v = new Uint32Array(4), _ = new Int32Array(4);
            let w = null, b = null;
            const M = [], E = [];
            this.domElement = n, this.debug = {
                checkShaderErrors: !0,
                onShaderError: null
            }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this._outputColorSpace = ma, this.toneMapping = lu, this.toneMappingExposure = 1;
            const T = this;
            let P = !1, A = 0, O = 0, D = null, R = -1, N = null;
            const k = new cr, U = new cr;
            let B = null;
            const j = new jt(0);
            let K = 0, q = n.width, ee = n.height, W = 1, Z = null, $ = null;
            const H = new cr(0, 0, q, ee), se = new cr(0, 0, q, ee);
            let le = !1;
            const ne = new qw;
            let ue = !1, ge = !1;
            this.transmissionResolutionScale = 1;
            const ye = new gn, _e = new gn, Te = new ve, Re = new cr, Fe = {
                background: null,
                fog: null,
                environment: null,
                overrideMaterial: null,
                isScene: !0
            };
            let be = !1;
            function Me() {
                return D === null ? W : 1;
            }
            let oe = r;
            function Ye(fe, Oe) {
                return n.getContext(fe, Oe);
            }
            try {
                const fe = {
                    alpha: !0,
                    depth: i,
                    stencil: s,
                    antialias: a,
                    premultipliedAlpha: l,
                    preserveDrawingBuffer: c,
                    powerPreference: u,
                    failIfMajorPerformanceCaveat: f
                };
                if ("setAttribute" in n && n.setAttribute("data-engine", `three.js r${d2}`), n.addEventListener("webglcontextlost", ze, !1), n.addEventListener("webglcontextrestored", We, !1), n.addEventListener("webglcontextcreationerror", it, !1), oe === null) {
                    const Oe = "webgl2";
                    if (oe = Ye(Oe, fe), oe === null) throw Ye(Oe) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
                }
            } catch (fe) {
                throw console.error("THREE.WebGLRenderer: " + fe.message), fe;
            }
            let Be, nt, de, ce, ae, X, G, he, pe, me, Ie, Xe, Ze, at, Je, Pe, je, rt, ct, st, Se, $e, ht, Ee;
            function lt() {
                Be = new lwe(oe), Be.init(), $e = new hH(oe, Be), nt = new nwe(oe, Be, e, $e), de = new V_e(oe, Be), nt.reverseDepthBuffer && h && de.buffers.depth.setReversed(!0), ce = new dwe(oe), ae = new I_e, X = new W_e(oe, Be, de, ae, nt, $e, ce), G = new iwe(T), he = new awe(T), pe = new vve(oe), ht = new ewe(oe, pe), me = new cwe(oe, pe, ce, ht), Ie = new hwe(oe, me, pe, ce), ct = new fwe(oe, nt, X), Pe = new rwe(ae), Xe = new R_e(T, G, he, Be, nt, ht, Pe), Ze = new K_e(T, ae), at = new N_e, Je = new F_e(Be), rt = new Qbe(T, G, he, de, Ie, m, l), je = new U_e(T, Ie, nt), Ee = new Y_e(oe, ce, nt, de), st = new twe(oe, Be, ce), Se = new uwe(oe, Be, ce), ce.programs = Xe.programs, T.capabilities = nt, T.extensions = Be, T.properties = ae, T.renderLists = at, T.shadowMap = je, T.state = de, T.info = ce;
            }
            lt();
            const Ae = new G_e(T, oe);
            this.xr = Ae, this.getContext = function() {
                return oe;
            }, this.getContextAttributes = function() {
                return oe.getContextAttributes();
            }, this.forceContextLoss = function() {
                const fe = Be.get("WEBGL_lose_context");
                fe && fe.loseContext();
            }, this.forceContextRestore = function() {
                const fe = Be.get("WEBGL_lose_context");
                fe && fe.restoreContext();
            }, this.getPixelRatio = function() {
                return W;
            }, this.setPixelRatio = function(fe) {
                fe !== void 0 && (W = fe, this.setSize(q, ee, !1));
            }, this.getSize = function(fe) {
                return fe.set(q, ee);
            }, this.setSize = function(fe, Oe, Ge = !0) {
                if (Ae.isPresenting) {
                    console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
                    return;
                }
                q = fe, ee = Oe, n.width = Math.floor(fe * W), n.height = Math.floor(Oe * W), Ge === !0 && (n.style.width = fe + "px", n.style.height = Oe + "px"), this.setViewport(0, 0, fe, Oe);
            }, this.getDrawingBufferSize = function(fe) {
                return fe.set(q * W, ee * W).floor();
            }, this.setDrawingBufferSize = function(fe, Oe, Ge) {
                q = fe, ee = Oe, W = Ge, n.width = Math.floor(fe * Ge), n.height = Math.floor(Oe * Ge), this.setViewport(0, 0, fe, Oe);
            }, this.getCurrentViewport = function(fe) {
                return fe.copy(k);
            }, this.getViewport = function(fe) {
                return fe.copy(H);
            }, this.setViewport = function(fe, Oe, Ge, Ue) {
                fe.isVector4 ? H.set(fe.x, fe.y, fe.z, fe.w) : H.set(fe, Oe, Ge, Ue), de.viewport(k.copy(H).multiplyScalar(W).round());
            }, this.getScissor = function(fe) {
                return fe.copy(se);
            }, this.setScissor = function(fe, Oe, Ge, Ue) {
                fe.isVector4 ? se.set(fe.x, fe.y, fe.z, fe.w) : se.set(fe, Oe, Ge, Ue), de.scissor(U.copy(se).multiplyScalar(W).round());
            }, this.getScissorTest = function() {
                return le;
            }, this.setScissorTest = function(fe) {
                de.setScissorTest(le = fe);
            }, this.setOpaqueSort = function(fe) {
                Z = fe;
            }, this.setTransparentSort = function(fe) {
                $ = fe;
            }, this.getClearColor = function(fe) {
                return fe.copy(rt.getClearColor());
            }, this.setClearColor = function() {
                rt.setClearColor.apply(rt, arguments);
            }, this.getClearAlpha = function() {
                return rt.getClearAlpha();
            }, this.setClearAlpha = function() {
                rt.setClearAlpha.apply(rt, arguments);
            }, this.clear = function(fe = !0, Oe = !0, Ge = !0) {
                let Ue = 0;
                if (fe) {
                    let De = !1;
                    if (D !== null) {
                        const dt = D.texture.format;
                        De = dt === b2 || dt === x2 || dt === Uw;
                    }
                    if (De) {
                        const dt = D.texture.type, _t = dt === _c || dt === jd || dt === Sy || dt === Im || dt === g2 || dt === y2, Ct = rt.getClearColor(), kt = rt.getClearAlpha(), tn = Ct.r, Zt = Ct.g, yt = Ct.b;
                        _t ? (v[0] = tn, v[1] = Zt, v[2] = yt, v[3] = kt, oe.clearBufferuiv(oe.COLOR, 0, v)) : (_[0] = tn, _[1] = Zt, _[2] = yt, _[3] = kt, oe.clearBufferiv(oe.COLOR, 0, _));
                    } else Ue |= oe.COLOR_BUFFER_BIT;
                }
                Oe && (Ue |= oe.DEPTH_BUFFER_BIT), Ge && (Ue |= oe.STENCIL_BUFFER_BIT, this.state.buffers.stencil.setMask(4294967295)), oe.clear(Ue);
            }, this.clearColor = function() {
                this.clear(!0, !1, !1);
            }, this.clearDepth = function() {
                this.clear(!1, !0, !1);
            }, this.clearStencil = function() {
                this.clear(!1, !1, !0);
            }, this.dispose = function() {
                n.removeEventListener("webglcontextlost", ze, !1), n.removeEventListener("webglcontextrestored", We, !1), n.removeEventListener("webglcontextcreationerror", it, !1), rt.dispose(), at.dispose(), Je.dispose(), ae.dispose(), G.dispose(), he.dispose(), Ie.dispose(), ht.dispose(), Ee.dispose(), Xe.dispose(), Ae.dispose(), Ae.removeEventListener("sessionstart", $r), Ae.removeEventListener("sessionend", il), Ko.stop();
            };
            function ze(fe) {
                fe.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), P = !0;
            }
            function We() {
                console.log("THREE.WebGLRenderer: Context Restored."), P = !1;
                const fe = ce.autoReset, Oe = je.enabled, Ge = je.autoUpdate, Ue = je.needsUpdate, De = je.type;
                lt(), ce.autoReset = fe, je.enabled = Oe, je.autoUpdate = Ge, je.needsUpdate = Ue, je.type = De;
            }
            function it(fe) {
                console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", fe.statusMessage);
            }
            function pt(fe) {
                const Oe = fe.target;
                Oe.removeEventListener("dispose", pt), Pt(Oe);
            }
            function Pt(fe) {
                en(fe), ae.remove(fe);
            }
            function en(fe) {
                const Oe = ae.get(fe).programs;
                Oe !== void 0 && (Oe.forEach(function(Ge) {
                    Xe.releaseProgram(Ge);
                }), fe.isShaderMaterial && Xe.releaseShaderCache(fe));
            }
            this.renderBufferDirect = function(fe, Oe, Ge, Ue, De, dt) {
                Oe === null && (Oe = Fe);
                const _t = De.isMesh && De.matrixWorld.determinant() < 0, Ct = Wd(fe, Oe, Ge, Ue, De);
                de.setMaterial(Ue, _t);
                let kt = Ge.index, tn = 1;
                if (Ue.wireframe === !0) {
                    if (kt = me.getWireframeAttribute(Ge), kt === void 0) return;
                    tn = 2;
                }
                const Zt = Ge.drawRange, yt = Ge.attributes.position;
                let qt = Zt.start * tn, on = (Zt.start + Zt.count) * tn;
                dt !== null && (qt = Math.max(qt, dt.start * tn), on = Math.min(on, (dt.start + dt.count) * tn)), kt !== null ? (qt = Math.max(qt, 0), on = Math.min(on, kt.count)) : yt != null && (qt = Math.max(qt, 0), on = Math.min(on, yt.count));
                const Fn = on - qt;
                if (Fn < 0 || Fn === 1 / 0) return;
                ht.setup(De, Ue, Ct, Ge, kt);
                let jn, Mn = st;
                if (kt !== null && (jn = pe.get(kt), Mn = Se, Mn.setIndex(jn)), De.isMesh) Ue.wireframe === !0 ? (de.setLineWidth(Ue.wireframeLinewidth * Me()), Mn.setMode(oe.LINES)) : Mn.setMode(oe.TRIANGLES);
                else if (De.isLine) {
                    let Vt = Ue.linewidth;
                    Vt === void 0 && (Vt = 1), de.setLineWidth(Vt * Me()), De.isLineSegments ? Mn.setMode(oe.LINES) : De.isLineLoop ? Mn.setMode(oe.LINE_LOOP) : Mn.setMode(oe.LINE_STRIP);
                } else De.isPoints ? Mn.setMode(oe.POINTS) : De.isSprite && Mn.setMode(oe.TRIANGLES);
                if (De.isBatchedMesh) if (De._multiDrawInstances !== null) Mn.renderMultiDrawInstances(De._multiDrawStarts, De._multiDrawCounts, De._multiDrawCount, De._multiDrawInstances);
                else if (Be.get("WEBGL_multi_draw")) Mn.renderMultiDraw(De._multiDrawStarts, De._multiDrawCounts, De._multiDrawCount);
                else {
                    const Vt = De._multiDrawStarts, $n = De._multiDrawCounts, Rn = De._multiDrawCount, oi = kt ? pe.get(kt).bytesPerElement : 1, Ra = ae.get(Ue).currentProgram.getUniforms();
                    for(let hi = 0; hi < Rn; hi++)Ra.setValue(oe, "_gl_DrawID", hi), Mn.render(Vt[hi] / oi, $n[hi]);
                }
                else if (De.isInstancedMesh) Mn.renderInstances(qt, Fn, De.count);
                else if (Ge.isInstancedBufferGeometry) {
                    const Vt = Ge._maxInstanceCount !== void 0 ? Ge._maxInstanceCount : 1 / 0, $n = Math.min(Ge.instanceCount, Vt);
                    Mn.renderInstances(qt, Fn, $n);
                } else Mn.render(qt, Fn);
            };
            function wt(fe, Oe, Ge) {
                fe.transparent === !0 && fe.side === eu && fe.forceSinglePass === !1 ? (fe.side = Wo, fe.needsUpdate = !0, Ic(fe, Oe, Ge), fe.side = Ld, fe.needsUpdate = !0, Ic(fe, Oe, Ge), fe.side = eu) : Ic(fe, Oe, Ge);
            }
            this.compile = function(fe, Oe, Ge = null) {
                Ge === null && (Ge = fe), b = Je.get(Ge), b.init(Oe), E.push(b), Ge.traverseVisible(function(De) {
                    De.isLight && De.layers.test(Oe.layers) && (b.pushLight(De), De.castShadow && b.pushShadow(De));
                }), fe !== Ge && fe.traverseVisible(function(De) {
                    De.isLight && De.layers.test(Oe.layers) && (b.pushLight(De), De.castShadow && b.pushShadow(De));
                }), b.setupLights();
                const Ue = new Set;
                return fe.traverse(function(De) {
                    if (!(De.isMesh || De.isPoints || De.isLine || De.isSprite)) return;
                    const dt = De.material;
                    if (dt) if (Array.isArray(dt)) for(let _t = 0; _t < dt.length; _t++){
                        const Ct = dt[_t];
                        wt(Ct, Ge, De), Ue.add(Ct);
                    }
                    else wt(dt, Ge, De), Ue.add(dt);
                }), E.pop(), b = null, Ue;
            }, this.compileAsync = function(fe, Oe, Ge = null) {
                const Ue = this.compile(fe, Oe, Ge);
                return new Promise((De)=>{
                    function dt() {
                        if (Ue.forEach(function(_t) {
                            ae.get(_t).currentProgram.isReady() && Ue.delete(_t);
                        }), Ue.size === 0) {
                            De(fe);
                            return;
                        }
                        setTimeout(dt, 10);
                    }
                    Be.get("KHR_parallel_shader_compile") !== null ? dt() : setTimeout(dt, 10);
                });
            };
            let Ln = null;
            function vn(fe) {
                Ln && Ln(fe);
            }
            function $r() {
                Ko.stop();
            }
            function il() {
                Ko.start();
            }
            const Ko = new lH;
            Ko.setAnimationLoop(vn), typeof self < "u" && Ko.setContext(self), this.setAnimationLoop = function(fe) {
                Ln = fe, Ae.setAnimationLoop(fe), fe === null ? Ko.stop() : Ko.start();
            }, Ae.addEventListener("sessionstart", $r), Ae.addEventListener("sessionend", il), this.render = function(fe, Oe) {
                if (Oe !== void 0 && Oe.isCamera !== !0) {
                    console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                    return;
                }
                if (P === !0) return;
                if (fe.matrixWorldAutoUpdate === !0 && fe.updateMatrixWorld(), Oe.parent === null && Oe.matrixWorldAutoUpdate === !0 && Oe.updateMatrixWorld(), Ae.enabled === !0 && Ae.isPresenting === !0 && (Ae.cameraAutoUpdate === !0 && Ae.updateCamera(Oe), Oe = Ae.getCamera()), fe.isScene === !0 && fe.onBeforeRender(T, fe, Oe, D), b = Je.get(fe, E.length), b.init(Oe), E.push(b), _e.multiplyMatrices(Oe.projectionMatrix, Oe.matrixWorldInverse), ne.setFromProjectionMatrix(_e), ge = this.localClippingEnabled, ue = Pe.init(this.clippingPlanes, ge), w = at.get(fe, M.length), w.init(), M.push(w), Ae.enabled === !0 && Ae.isPresenting === !0) {
                    const dt = T.xr.getDepthSensingMesh();
                    dt !== null && wo(dt, Oe, -1 / 0, T.sortObjects);
                }
                wo(fe, Oe, 0, T.sortObjects), w.finish(), T.sortObjects === !0 && w.sort(Z, $), be = Ae.enabled === !1 || Ae.isPresenting === !1 || Ae.hasDepthSensing() === !1, be && rt.addToRenderList(w, fe), this.info.render.frame++, ue === !0 && Pe.beginShadows();
                const Ge = b.state.shadowsArray;
                je.render(Ge, fe, Oe), ue === !0 && Pe.endShadows(), this.info.autoReset === !0 && this.info.reset();
                const Ue = w.opaque, De = w.transmissive;
                if (b.setupLights(), Oe.isArrayCamera) {
                    const dt = Oe.cameras;
                    if (De.length > 0) for(let _t = 0, Ct = dt.length; _t < Ct; _t++){
                        const kt = dt[_t];
                        _o(Ue, De, fe, kt);
                    }
                    be && rt.render(fe);
                    for(let _t = 0, Ct = dt.length; _t < Ct; _t++){
                        const kt = dt[_t];
                        Pl(w, fe, kt, kt.viewport);
                    }
                } else De.length > 0 && _o(Ue, De, fe, Oe), be && rt.render(fe), Pl(w, fe, Oe);
                D !== null && O === 0 && (X.updateMultisampleRenderTarget(D), X.updateRenderTargetMipmap(D)), fe.isScene === !0 && fe.onAfterRender(T, fe, Oe), ht.resetDefaultState(), R = -1, N = null, E.pop(), E.length > 0 ? (b = E[E.length - 1], ue === !0 && Pe.setGlobalState(T.clippingPlanes, b.state.camera)) : b = null, M.pop(), M.length > 0 ? w = M[M.length - 1] : w = null;
            };
            function wo(fe, Oe, Ge, Ue) {
                if (fe.visible === !1) return;
                if (fe.layers.test(Oe.layers)) {
                    if (fe.isGroup) Ge = fe.renderOrder;
                    else if (fe.isLOD) fe.autoUpdate === !0 && fe.update(Oe);
                    else if (fe.isLight) b.pushLight(fe), fe.castShadow && b.pushShadow(fe);
                    else if (fe.isSprite) {
                        if (!fe.frustumCulled || ne.intersectsSprite(fe)) {
                            Ue && Re.setFromMatrixPosition(fe.matrixWorld).applyMatrix4(_e);
                            const _t = Ie.update(fe), Ct = fe.material;
                            Ct.visible && w.push(fe, _t, Ct, Ge, Re.z, null);
                        }
                    } else if ((fe.isMesh || fe.isLine || fe.isPoints) && (!fe.frustumCulled || ne.intersectsObject(fe))) {
                        const _t = Ie.update(fe), Ct = fe.material;
                        if (Ue && (fe.boundingSphere !== void 0 ? (fe.boundingSphere === null && fe.computeBoundingSphere(), Re.copy(fe.boundingSphere.center)) : (_t.boundingSphere === null && _t.computeBoundingSphere(), Re.copy(_t.boundingSphere.center)), Re.applyMatrix4(fe.matrixWorld).applyMatrix4(_e)), Array.isArray(Ct)) {
                            const kt = _t.groups;
                            for(let tn = 0, Zt = kt.length; tn < Zt; tn++){
                                const yt = kt[tn], qt = Ct[yt.materialIndex];
                                qt && qt.visible && w.push(fe, _t, qt, Ge, Re.z, yt);
                            }
                        } else Ct.visible && w.push(fe, _t, Ct, Ge, Re.z, null);
                    }
                }
                const dt = fe.children;
                for(let _t = 0, Ct = dt.length; _t < Ct; _t++)wo(dt[_t], Oe, Ge, Ue);
            }
            function Pl(fe, Oe, Ge, Ue) {
                const De = fe.opaque, dt = fe.transmissive, _t = fe.transparent;
                b.setupLightsView(Ge), ue === !0 && Pe.setGlobalState(T.clippingPlanes, Ge), Ue && de.viewport(k.copy(Ue)), De.length > 0 && sl(De, Oe, Ge), dt.length > 0 && sl(dt, Oe, Ge), _t.length > 0 && sl(_t, Oe, Ge), de.buffers.depth.setTest(!0), de.buffers.depth.setMask(!0), de.buffers.color.setMask(!0), de.setPolygonOffset(!1);
            }
            function _o(fe, Oe, Ge, Ue) {
                if ((Ge.isScene === !0 ? Ge.overrideMaterial : null) !== null) return;
                b.state.transmissionRenderTarget[Ue.id] === void 0 && (b.state.transmissionRenderTarget[Ue.id] = new mu(1, 1, {
                    generateMipmaps: !0,
                    type: Be.has("EXT_color_buffer_half_float") || Be.has("EXT_color_buffer_float") ? Vy : _c,
                    minFilter: ru,
                    samples: 4,
                    stencilBuffer: s,
                    resolveDepthBuffer: !1,
                    resolveStencilBuffer: !1,
                    colorSpace: rr.workingColorSpace
                }));
                const dt = b.state.transmissionRenderTarget[Ue.id], _t = Ue.viewport || k;
                dt.setSize(_t.z * T.transmissionResolutionScale, _t.w * T.transmissionResolutionScale);
                const Ct = T.getRenderTarget();
                T.setRenderTarget(dt), T.getClearColor(j), K = T.getClearAlpha(), K < 1 && T.setClearColor(16777215, .5), T.clear(), be && rt.render(Ge);
                const kt = T.toneMapping;
                T.toneMapping = lu;
                const tn = Ue.viewport;
                if (Ue.viewport !== void 0 && (Ue.viewport = void 0), b.setupLightsView(Ue), ue === !0 && Pe.setGlobalState(T.clippingPlanes, Ue), sl(fe, Ge, Ue), X.updateMultisampleRenderTarget(dt), X.updateRenderTargetMipmap(dt), Be.has("WEBGL_multisampled_render_to_texture") === !1) {
                    let Zt = !1;
                    for(let yt = 0, qt = Oe.length; yt < qt; yt++){
                        const on = Oe[yt], Fn = on.object, jn = on.geometry, Mn = on.material, Vt = on.group;
                        if (Mn.side === eu && Fn.layers.test(Ue.layers)) {
                            const $n = Mn.side;
                            Mn.side = Wo, Mn.needsUpdate = !0, Vd(Fn, Ge, Ue, jn, Mn, Vt), Mn.side = $n, Mn.needsUpdate = !0, Zt = !0;
                        }
                    }
                    Zt === !0 && (X.updateMultisampleRenderTarget(dt), X.updateRenderTargetMipmap(dt));
                }
                T.setRenderTarget(Ct), T.setClearColor(j, K), tn !== void 0 && (Ue.viewport = tn), T.toneMapping = kt;
            }
            function sl(fe, Oe, Ge) {
                const Ue = Oe.isScene === !0 ? Oe.overrideMaterial : null;
                for(let De = 0, dt = fe.length; De < dt; De++){
                    const _t = fe[De], Ct = _t.object, kt = _t.geometry, tn = Ue === null ? _t.material : Ue, Zt = _t.group;
                    Ct.layers.test(Ge.layers) && Vd(Ct, Oe, Ge, kt, tn, Zt);
                }
            }
            function Vd(fe, Oe, Ge, Ue, De, dt) {
                fe.onBeforeRender(T, Oe, Ge, Ue, De, dt), fe.modelViewMatrix.multiplyMatrices(Ge.matrixWorldInverse, fe.matrixWorld), fe.normalMatrix.getNormalMatrix(fe.modelViewMatrix), De.onBeforeRender(T, Oe, Ge, Ue, fe, dt), De.transparent === !0 && De.side === eu && De.forceSinglePass === !1 ? (De.side = Wo, De.needsUpdate = !0, T.renderBufferDirect(Ge, Oe, Ue, De, fe, dt), De.side = Ld, De.needsUpdate = !0, T.renderBufferDirect(Ge, Oe, Ue, De, fe, dt), De.side = eu) : T.renderBufferDirect(Ge, Oe, Ue, De, fe, dt), fe.onAfterRender(T, Oe, Ge, Ue, De, dt);
            }
            function Ic(fe, Oe, Ge) {
                Oe.isScene !== !0 && (Oe = Fe);
                const Ue = ae.get(fe), De = b.state.lights, dt = b.state.shadowsArray, _t = De.state.version, Ct = Xe.getParameters(fe, De.state, dt, Oe, Ge), kt = Xe.getProgramCacheKey(Ct);
                let tn = Ue.programs;
                Ue.environment = fe.isMeshStandardMaterial ? Oe.environment : null, Ue.fog = Oe.fog, Ue.envMap = (fe.isMeshStandardMaterial ? he : G).get(fe.envMap || Ue.environment), Ue.envMapRotation = Ue.environment !== null && fe.envMap === null ? Oe.environmentRotation : fe.envMapRotation, tn === void 0 && (fe.addEventListener("dispose", pt), tn = new Map, Ue.programs = tn);
                let Zt = tn.get(kt);
                if (Zt !== void 0) {
                    if (Ue.currentProgram === Zt && Ue.lightsStateVersion === _t) return So(fe, Ct), Zt;
                } else Ct.uniforms = Xe.getUniforms(fe), fe.onBeforeCompile(Ct, T), Zt = Xe.acquireProgram(Ct, kt), tn.set(kt, Zt), Ue.uniforms = Ct.uniforms;
                const yt = Ue.uniforms;
                return (!fe.isShaderMaterial && !fe.isRawShaderMaterial || fe.clipping === !0) && (yt.clippingPlanes = Pe.uniform), So(fe, Ct), Ue.needsLights = Hd(fe), Ue.lightsStateVersion = _t, Ue.needsLights && (yt.ambientLightColor.value = De.state.ambient, yt.lightProbe.value = De.state.probe, yt.directionalLights.value = De.state.directional, yt.directionalLightShadows.value = De.state.directionalShadow, yt.spotLights.value = De.state.spot, yt.spotLightShadows.value = De.state.spotShadow, yt.rectAreaLights.value = De.state.rectArea, yt.ltc_1.value = De.state.rectAreaLTC1, yt.ltc_2.value = De.state.rectAreaLTC2, yt.pointLights.value = De.state.point, yt.pointLightShadows.value = De.state.pointShadow, yt.hemisphereLights.value = De.state.hemi, yt.directionalShadowMap.value = De.state.directionalShadowMap, yt.directionalShadowMatrix.value = De.state.directionalShadowMatrix, yt.spotShadowMap.value = De.state.spotShadowMap, yt.spotLightMatrix.value = De.state.spotLightMatrix, yt.spotLightMap.value = De.state.spotLightMap, yt.pointShadowMap.value = De.state.pointShadowMap, yt.pointShadowMatrix.value = De.state.pointShadowMatrix), Ue.currentProgram = Zt, Ue.uniformsList = null, Zt;
            }
            function wu(fe) {
                if (fe.uniformsList === null) {
                    const Oe = fe.currentProgram.getUniforms();
                    fe.uniformsList = YS.seqWithValue(Oe.seq, fe.uniforms);
                }
                return fe.uniformsList;
            }
            function So(fe, Oe) {
                const Ge = ae.get(fe);
                Ge.outputColorSpace = Oe.outputColorSpace, Ge.batching = Oe.batching, Ge.batchingColor = Oe.batchingColor, Ge.instancing = Oe.instancing, Ge.instancingColor = Oe.instancingColor, Ge.instancingMorph = Oe.instancingMorph, Ge.skinning = Oe.skinning, Ge.morphTargets = Oe.morphTargets, Ge.morphNormals = Oe.morphNormals, Ge.morphColors = Oe.morphColors, Ge.morphTargetsCount = Oe.morphTargetsCount, Ge.numClippingPlanes = Oe.numClippingPlanes, Ge.numIntersection = Oe.numClipIntersection, Ge.vertexAlphas = Oe.vertexAlphas, Ge.vertexTangents = Oe.vertexTangents, Ge.toneMapping = Oe.toneMapping;
            }
            function Wd(fe, Oe, Ge, Ue, De) {
                Oe.isScene !== !0 && (Oe = Fe), X.resetTextureUnits();
                const dt = Oe.fog, _t = Ue.isMeshStandardMaterial ? Oe.environment : null, Ct = D === null ? T.outputColorSpace : D.isXRRenderTarget === !0 ? D.texture.colorSpace : Nm, kt = (Ue.isMeshStandardMaterial ? he : G).get(Ue.envMap || _t), tn = Ue.vertexColors === !0 && !!Ge.attributes.color && Ge.attributes.color.itemSize === 4, Zt = !!Ge.attributes.tangent && (!!Ue.normalMap || Ue.anisotropy > 0), yt = !!Ge.morphAttributes.position, qt = !!Ge.morphAttributes.normal, on = !!Ge.morphAttributes.color;
                let Fn = lu;
                Ue.toneMapped && (D === null || D.isXRRenderTarget === !0) && (Fn = T.toneMapping);
                const jn = Ge.morphAttributes.position || Ge.morphAttributes.normal || Ge.morphAttributes.color, Mn = jn !== void 0 ? jn.length : 0, Vt = ae.get(Ue), $n = b.state.lights;
                if (ue === !0 && (ge === !0 || fe !== N)) {
                    const ns = fe === N && Ue.id === R;
                    Pe.setState(Ue, fe, ns);
                }
                let Rn = !1;
                Ue.version === Vt.__version ? (Vt.needsLights && Vt.lightsStateVersion !== $n.state.version || Vt.outputColorSpace !== Ct || De.isBatchedMesh && Vt.batching === !1 || !De.isBatchedMesh && Vt.batching === !0 || De.isBatchedMesh && Vt.batchingColor === !0 && De.colorTexture === null || De.isBatchedMesh && Vt.batchingColor === !1 && De.colorTexture !== null || De.isInstancedMesh && Vt.instancing === !1 || !De.isInstancedMesh && Vt.instancing === !0 || De.isSkinnedMesh && Vt.skinning === !1 || !De.isSkinnedMesh && Vt.skinning === !0 || De.isInstancedMesh && Vt.instancingColor === !0 && De.instanceColor === null || De.isInstancedMesh && Vt.instancingColor === !1 && De.instanceColor !== null || De.isInstancedMesh && Vt.instancingMorph === !0 && De.morphTexture === null || De.isInstancedMesh && Vt.instancingMorph === !1 && De.morphTexture !== null || Vt.envMap !== kt || Ue.fog === !0 && Vt.fog !== dt || Vt.numClippingPlanes !== void 0 && (Vt.numClippingPlanes !== Pe.numPlanes || Vt.numIntersection !== Pe.numIntersection) || Vt.vertexAlphas !== tn || Vt.vertexTangents !== Zt || Vt.morphTargets !== yt || Vt.morphNormals !== qt || Vt.morphColors !== on || Vt.toneMapping !== Fn || Vt.morphTargetsCount !== Mn) && (Rn = !0) : (Rn = !0, Vt.__version = Ue.version);
                let oi = Vt.currentProgram;
                Rn === !0 && (oi = Ic(Ue, Oe, De));
                let Ra = !1, hi = !1, Eo = !1;
                const Gn = oi.getUniforms(), ms = Vt.uniforms;
                if (de.useProgram(oi.program) && (Ra = !0, hi = !0, Eo = !0), Ue.id !== R && (R = Ue.id, hi = !0), Ra || N !== fe) {
                    de.buffers.depth.getReversed() ? (ye.copy(fe.projectionMatrix), zge(ye), Vge(ye), Gn.setValue(oe, "projectionMatrix", ye)) : Gn.setValue(oe, "projectionMatrix", fe.projectionMatrix), Gn.setValue(oe, "viewMatrix", fe.matrixWorldInverse);
                    const ai = Gn.map.cameraPosition;
                    ai !== void 0 && ai.setValue(oe, Te.setFromMatrixPosition(fe.matrixWorld)), nt.logarithmicDepthBuffer && Gn.setValue(oe, "logDepthBufFC", 2 / (Math.log(fe.far + 1) / Math.LN2)), (Ue.isMeshPhongMaterial || Ue.isMeshToonMaterial || Ue.isMeshLambertMaterial || Ue.isMeshBasicMaterial || Ue.isMeshStandardMaterial || Ue.isShaderMaterial) && Gn.setValue(oe, "isOrthographic", fe.isOrthographicCamera === !0), N !== fe && (N = fe, hi = !0, Eo = !0);
                }
                if (De.isSkinnedMesh) {
                    Gn.setOptional(oe, De, "bindMatrix"), Gn.setOptional(oe, De, "bindMatrixInverse");
                    const ns = De.skeleton;
                    ns && (ns.boneTexture === null && ns.computeBoneTexture(), Gn.setValue(oe, "boneTexture", ns.boneTexture, X));
                }
                De.isBatchedMesh && (Gn.setOptional(oe, De, "batchingTexture"), Gn.setValue(oe, "batchingTexture", De._matricesTexture, X), Gn.setOptional(oe, De, "batchingIdTexture"), Gn.setValue(oe, "batchingIdTexture", De._indirectTexture, X), Gn.setOptional(oe, De, "batchingColorTexture"), De._colorsTexture !== null && Gn.setValue(oe, "batchingColorTexture", De._colorsTexture, X));
                const Ui = Ge.morphAttributes;
                if ((Ui.position !== void 0 || Ui.normal !== void 0 || Ui.color !== void 0) && ct.update(De, Ge, oi), (hi || Vt.receiveShadow !== De.receiveShadow) && (Vt.receiveShadow = De.receiveShadow, Gn.setValue(oe, "receiveShadow", De.receiveShadow)), Ue.isMeshGouraudMaterial && Ue.envMap !== null && (ms.envMap.value = kt, ms.flipEnvMap.value = kt.isCubeTexture && kt.isRenderTargetTexture === !1 ? -1 : 1), Ue.isMeshStandardMaterial && Ue.envMap === null && Oe.environment !== null && (ms.envMapIntensity.value = Oe.environmentIntensity), hi && (Gn.setValue(oe, "toneMappingExposure", T.toneMappingExposure), Vt.needsLights && qd(ms, Eo), dt && Ue.fog === !0 && Ze.refreshFogUniforms(ms, dt), Ze.refreshMaterialUniforms(ms, Ue, W, ee, b.state.transmissionRenderTarget[fe.id]), YS.upload(oe, wu(Vt), ms, X)), Ue.isShaderMaterial && Ue.uniformsNeedUpdate === !0 && (YS.upload(oe, wu(Vt), ms, X), Ue.uniformsNeedUpdate = !1), Ue.isSpriteMaterial && Gn.setValue(oe, "center", De.center), Gn.setValue(oe, "modelViewMatrix", De.modelViewMatrix), Gn.setValue(oe, "normalMatrix", De.normalMatrix), Gn.setValue(oe, "modelMatrix", De.matrixWorld), Ue.isShaderMaterial || Ue.isRawShaderMaterial) {
                    const ns = Ue.uniformsGroups;
                    for(let ai = 0, Kn = ns.length; ai < Kn; ai++){
                        const Gs = ns[ai];
                        Ee.update(Gs, oi), Ee.bind(Gs, oi);
                    }
                }
                return oi;
            }
            function qd(fe, Oe) {
                fe.ambientLightColor.needsUpdate = Oe, fe.lightProbe.needsUpdate = Oe, fe.directionalLights.needsUpdate = Oe, fe.directionalLightShadows.needsUpdate = Oe, fe.pointLights.needsUpdate = Oe, fe.pointLightShadows.needsUpdate = Oe, fe.spotLights.needsUpdate = Oe, fe.spotLightShadows.needsUpdate = Oe, fe.rectAreaLights.needsUpdate = Oe, fe.hemisphereLights.needsUpdate = Oe;
            }
            function Hd(fe) {
                return fe.isMeshLambertMaterial || fe.isMeshToonMaterial || fe.isMeshPhongMaterial || fe.isMeshStandardMaterial || fe.isShadowMaterial || fe.isShaderMaterial && fe.lights === !0;
            }
            this.getActiveCubeFace = function() {
                return A;
            }, this.getActiveMipmapLevel = function() {
                return O;
            }, this.getRenderTarget = function() {
                return D;
            }, this.setRenderTargetTextures = function(fe, Oe, Ge) {
                ae.get(fe.texture).__webglTexture = Oe, ae.get(fe.depthTexture).__webglTexture = Ge;
                const Ue = ae.get(fe);
                Ue.__hasExternalTextures = !0, Ue.__autoAllocateDepthBuffer = Ge === void 0, Ue.__autoAllocateDepthBuffer || Be.has("WEBGL_multisampled_render_to_texture") === !0 && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"), Ue.__useRenderToTexture = !1);
            }, this.setRenderTargetFramebuffer = function(fe, Oe) {
                const Ge = ae.get(fe);
                Ge.__webglFramebuffer = Oe, Ge.__useDefaultFramebuffer = Oe === void 0;
            };
            const $d = oe.createFramebuffer();
            this.setRenderTarget = function(fe, Oe = 0, Ge = 0) {
                D = fe, A = Oe, O = Ge;
                let Ue = !0, De = null, dt = !1, _t = !1;
                if (fe) {
                    const kt = ae.get(fe);
                    if (kt.__useDefaultFramebuffer !== void 0) de.bindFramebuffer(oe.FRAMEBUFFER, null), Ue = !1;
                    else if (kt.__webglFramebuffer === void 0) X.setupRenderTarget(fe);
                    else if (kt.__hasExternalTextures) X.rebindTextures(fe, ae.get(fe.texture).__webglTexture, ae.get(fe.depthTexture).__webglTexture);
                    else if (fe.depthBuffer) {
                        const yt = fe.depthTexture;
                        if (kt.__boundDepthTexture !== yt) {
                            if (yt !== null && ae.has(yt) && (fe.width !== yt.image.width || fe.height !== yt.image.height)) throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");
                            X.setupDepthRenderbuffer(fe);
                        }
                    }
                    const tn = fe.texture;
                    (tn.isData3DTexture || tn.isDataArrayTexture || tn.isCompressedArrayTexture) && (_t = !0);
                    const Zt = ae.get(fe).__webglFramebuffer;
                    fe.isWebGLCubeRenderTarget ? (Array.isArray(Zt[Oe]) ? De = Zt[Oe][Ge] : De = Zt[Oe], dt = !0) : fe.samples > 0 && X.useMultisampledRTT(fe) === !1 ? De = ae.get(fe).__webglMultisampledFramebuffer : Array.isArray(Zt) ? De = Zt[Ge] : De = Zt, k.copy(fe.viewport), U.copy(fe.scissor), B = fe.scissorTest;
                } else k.copy(H).multiplyScalar(W).floor(), U.copy(se).multiplyScalar(W).floor(), B = le;
                if (Ge !== 0 && (De = $d), de.bindFramebuffer(oe.FRAMEBUFFER, De) && Ue && de.drawBuffers(fe, De), de.viewport(k), de.scissor(U), de.setScissorTest(B), dt) {
                    const kt = ae.get(fe.texture);
                    oe.framebufferTexture2D(oe.FRAMEBUFFER, oe.COLOR_ATTACHMENT0, oe.TEXTURE_CUBE_MAP_POSITIVE_X + Oe, kt.__webglTexture, Ge);
                } else if (_t) {
                    const kt = ae.get(fe.texture), tn = Oe;
                    oe.framebufferTextureLayer(oe.FRAMEBUFFER, oe.COLOR_ATTACHMENT0, kt.__webglTexture, Ge, tn);
                } else if (fe !== null && Ge !== 0) {
                    const kt = ae.get(fe.texture);
                    oe.framebufferTexture2D(oe.FRAMEBUFFER, oe.COLOR_ATTACHMENT0, oe.TEXTURE_2D, kt.__webglTexture, Ge);
                }
                R = -1;
            }, this.readRenderTargetPixels = function(fe, Oe, Ge, Ue, De, dt, _t) {
                if (!(fe && fe.isWebGLRenderTarget)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                    return;
                }
                let Ct = ae.get(fe).__webglFramebuffer;
                if (fe.isWebGLCubeRenderTarget && _t !== void 0 && (Ct = Ct[_t]), Ct) {
                    de.bindFramebuffer(oe.FRAMEBUFFER, Ct);
                    try {
                        const kt = fe.texture, tn = kt.format, Zt = kt.type;
                        if (!nt.textureFormatReadable(tn)) {
                            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                            return;
                        }
                        if (!nt.textureTypeReadable(Zt)) {
                            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                            return;
                        }
                        Oe >= 0 && Oe <= fe.width - Ue && Ge >= 0 && Ge <= fe.height - De && oe.readPixels(Oe, Ge, Ue, De, $e.convert(tn), $e.convert(Zt), dt);
                    } finally{
                        const kt = D !== null ? ae.get(D).__webglFramebuffer : null;
                        de.bindFramebuffer(oe.FRAMEBUFFER, kt);
                    }
                }
            }, this.readRenderTargetPixelsAsync = async function(fe, Oe, Ge, Ue, De, dt, _t) {
                if (!(fe && fe.isWebGLRenderTarget)) throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                let Ct = ae.get(fe).__webglFramebuffer;
                if (fe.isWebGLCubeRenderTarget && _t !== void 0 && (Ct = Ct[_t]), Ct) {
                    const kt = fe.texture, tn = kt.format, Zt = kt.type;
                    if (!nt.textureFormatReadable(tn)) throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");
                    if (!nt.textureTypeReadable(Zt)) throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");
                    if (Oe >= 0 && Oe <= fe.width - Ue && Ge >= 0 && Ge <= fe.height - De) {
                        de.bindFramebuffer(oe.FRAMEBUFFER, Ct);
                        const yt = oe.createBuffer();
                        oe.bindBuffer(oe.PIXEL_PACK_BUFFER, yt), oe.bufferData(oe.PIXEL_PACK_BUFFER, dt.byteLength, oe.STREAM_READ), oe.readPixels(Oe, Ge, Ue, De, $e.convert(tn), $e.convert(Zt), 0);
                        const qt = D !== null ? ae.get(D).__webglFramebuffer : null;
                        de.bindFramebuffer(oe.FRAMEBUFFER, qt);
                        const on = oe.fenceSync(oe.SYNC_GPU_COMMANDS_COMPLETE, 0);
                        return oe.flush(), await Uge(oe, on, 4), oe.bindBuffer(oe.PIXEL_PACK_BUFFER, yt), oe.getBufferSubData(oe.PIXEL_PACK_BUFFER, 0, dt), oe.deleteBuffer(yt), oe.deleteSync(on), dt;
                    } else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.");
                }
            }, this.copyFramebufferToTexture = function(fe, Oe = null, Ge = 0) {
                fe.isTexture !== !0 && (S0("WebGLRenderer: copyFramebufferToTexture function signature has changed."), Oe = arguments[0] || null, fe = arguments[1]);
                const Ue = Math.pow(2, -Ge), De = Math.floor(fe.image.width * Ue), dt = Math.floor(fe.image.height * Ue), _t = Oe !== null ? Oe.x : 0, Ct = Oe !== null ? Oe.y : 0;
                X.setTexture2D(fe, 0), oe.copyTexSubImage2D(oe.TEXTURE_2D, Ge, 0, 0, _t, Ct, De, dt), de.unbindTexture();
            };
            const Gd = oe.createFramebuffer(), Xd = oe.createFramebuffer();
            this.copyTextureToTexture = function(fe, Oe, Ge = null, Ue = null, De = 0, dt = null) {
                fe.isTexture !== !0 && (S0("WebGLRenderer: copyTextureToTexture function signature has changed."), Ue = arguments[0] || null, fe = arguments[1], Oe = arguments[2], dt = arguments[3] || 0, Ge = null), dt === null && (De !== 0 ? (S0("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."), dt = De, De = 0) : dt = 0);
                let _t, Ct, kt, tn, Zt, yt, qt, on, Fn;
                const jn = fe.isCompressedTexture ? fe.mipmaps[dt] : fe.image;
                if (Ge !== null) _t = Ge.max.x - Ge.min.x, Ct = Ge.max.y - Ge.min.y, kt = Ge.isBox3 ? Ge.max.z - Ge.min.z : 1, tn = Ge.min.x, Zt = Ge.min.y, yt = Ge.isBox3 ? Ge.min.z : 0;
                else {
                    const Ui = Math.pow(2, -De);
                    _t = Math.floor(jn.width * Ui), Ct = Math.floor(jn.height * Ui), fe.isDataArrayTexture ? kt = jn.depth : fe.isData3DTexture ? kt = Math.floor(jn.depth * Ui) : kt = 1, tn = 0, Zt = 0, yt = 0;
                }
                Ue !== null ? (qt = Ue.x, on = Ue.y, Fn = Ue.z) : (qt = 0, on = 0, Fn = 0);
                const Mn = $e.convert(Oe.format), Vt = $e.convert(Oe.type);
                let $n;
                Oe.isData3DTexture ? (X.setTexture3D(Oe, 0), $n = oe.TEXTURE_3D) : Oe.isDataArrayTexture || Oe.isCompressedArrayTexture ? (X.setTexture2DArray(Oe, 0), $n = oe.TEXTURE_2D_ARRAY) : (X.setTexture2D(Oe, 0), $n = oe.TEXTURE_2D), oe.pixelStorei(oe.UNPACK_FLIP_Y_WEBGL, Oe.flipY), oe.pixelStorei(oe.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Oe.premultiplyAlpha), oe.pixelStorei(oe.UNPACK_ALIGNMENT, Oe.unpackAlignment);
                const Rn = oe.getParameter(oe.UNPACK_ROW_LENGTH), oi = oe.getParameter(oe.UNPACK_IMAGE_HEIGHT), Ra = oe.getParameter(oe.UNPACK_SKIP_PIXELS), hi = oe.getParameter(oe.UNPACK_SKIP_ROWS), Eo = oe.getParameter(oe.UNPACK_SKIP_IMAGES);
                oe.pixelStorei(oe.UNPACK_ROW_LENGTH, jn.width), oe.pixelStorei(oe.UNPACK_IMAGE_HEIGHT, jn.height), oe.pixelStorei(oe.UNPACK_SKIP_PIXELS, tn), oe.pixelStorei(oe.UNPACK_SKIP_ROWS, Zt), oe.pixelStorei(oe.UNPACK_SKIP_IMAGES, yt);
                const Gn = fe.isDataArrayTexture || fe.isData3DTexture, ms = Oe.isDataArrayTexture || Oe.isData3DTexture;
                if (fe.isDepthTexture) {
                    const Ui = ae.get(fe), ns = ae.get(Oe), ai = ae.get(Ui.__renderTarget), Kn = ae.get(ns.__renderTarget);
                    de.bindFramebuffer(oe.READ_FRAMEBUFFER, ai.__webglFramebuffer), de.bindFramebuffer(oe.DRAW_FRAMEBUFFER, Kn.__webglFramebuffer);
                    for(let Gs = 0; Gs < kt; Gs++)Gn && (oe.framebufferTextureLayer(oe.READ_FRAMEBUFFER, oe.COLOR_ATTACHMENT0, ae.get(fe).__webglTexture, De, yt + Gs), oe.framebufferTextureLayer(oe.DRAW_FRAMEBUFFER, oe.COLOR_ATTACHMENT0, ae.get(Oe).__webglTexture, dt, Fn + Gs)), oe.blitFramebuffer(tn, Zt, _t, Ct, qt, on, _t, Ct, oe.DEPTH_BUFFER_BIT, oe.NEAREST);
                    de.bindFramebuffer(oe.READ_FRAMEBUFFER, null), de.bindFramebuffer(oe.DRAW_FRAMEBUFFER, null);
                } else if (De !== 0 || fe.isRenderTargetTexture || ae.has(fe)) {
                    const Ui = ae.get(fe), ns = ae.get(Oe);
                    de.bindFramebuffer(oe.READ_FRAMEBUFFER, Gd), de.bindFramebuffer(oe.DRAW_FRAMEBUFFER, Xd);
                    for(let ai = 0; ai < kt; ai++)Gn ? oe.framebufferTextureLayer(oe.READ_FRAMEBUFFER, oe.COLOR_ATTACHMENT0, Ui.__webglTexture, De, yt + ai) : oe.framebufferTexture2D(oe.READ_FRAMEBUFFER, oe.COLOR_ATTACHMENT0, oe.TEXTURE_2D, Ui.__webglTexture, De), ms ? oe.framebufferTextureLayer(oe.DRAW_FRAMEBUFFER, oe.COLOR_ATTACHMENT0, ns.__webglTexture, dt, Fn + ai) : oe.framebufferTexture2D(oe.DRAW_FRAMEBUFFER, oe.COLOR_ATTACHMENT0, oe.TEXTURE_2D, ns.__webglTexture, dt), De !== 0 ? oe.blitFramebuffer(tn, Zt, _t, Ct, qt, on, _t, Ct, oe.COLOR_BUFFER_BIT, oe.NEAREST) : ms ? oe.copyTexSubImage3D($n, dt, qt, on, Fn + ai, tn, Zt, _t, Ct) : oe.copyTexSubImage2D($n, dt, qt, on, tn, Zt, _t, Ct);
                    de.bindFramebuffer(oe.READ_FRAMEBUFFER, null), de.bindFramebuffer(oe.DRAW_FRAMEBUFFER, null);
                } else ms ? fe.isDataTexture || fe.isData3DTexture ? oe.texSubImage3D($n, dt, qt, on, Fn, _t, Ct, kt, Mn, Vt, jn.data) : Oe.isCompressedArrayTexture ? oe.compressedTexSubImage3D($n, dt, qt, on, Fn, _t, Ct, kt, Mn, jn.data) : oe.texSubImage3D($n, dt, qt, on, Fn, _t, Ct, kt, Mn, Vt, jn) : fe.isDataTexture ? oe.texSubImage2D(oe.TEXTURE_2D, dt, qt, on, _t, Ct, Mn, Vt, jn.data) : fe.isCompressedTexture ? oe.compressedTexSubImage2D(oe.TEXTURE_2D, dt, qt, on, jn.width, jn.height, Mn, jn.data) : oe.texSubImage2D(oe.TEXTURE_2D, dt, qt, on, _t, Ct, Mn, Vt, jn);
                oe.pixelStorei(oe.UNPACK_ROW_LENGTH, Rn), oe.pixelStorei(oe.UNPACK_IMAGE_HEIGHT, oi), oe.pixelStorei(oe.UNPACK_SKIP_PIXELS, Ra), oe.pixelStorei(oe.UNPACK_SKIP_ROWS, hi), oe.pixelStorei(oe.UNPACK_SKIP_IMAGES, Eo), dt === 0 && Oe.generateMipmaps && oe.generateMipmap($n), de.unbindTexture();
            }, this.copyTextureToTexture3D = function(fe, Oe, Ge = null, Ue = null, De = 0) {
                return fe.isTexture !== !0 && (S0("WebGLRenderer: copyTextureToTexture3D function signature has changed."), Ge = arguments[0] || null, Ue = arguments[1] || null, fe = arguments[2], Oe = arguments[3], De = arguments[4] || 0), S0('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'), this.copyTextureToTexture(fe, Oe, Ge, Ue, De);
            }, this.initRenderTarget = function(fe) {
                ae.get(fe).__webglFramebuffer === void 0 && X.setupRenderTarget(fe);
            }, this.initTexture = function(fe) {
                fe.isCubeTexture ? X.setTextureCube(fe, 0) : fe.isData3DTexture ? X.setTexture3D(fe, 0) : fe.isDataArrayTexture || fe.isCompressedArrayTexture ? X.setTexture2DArray(fe, 0) : X.setTexture2D(fe, 0), de.unbindTexture();
            }, this.resetState = function() {
                A = 0, O = 0, D = null, de.reset(), ht.reset();
            }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                detail: this
            }));
        }
        get coordinateSystem() {
            return gc;
        }
        get outputColorSpace() {
            return this._outputColorSpace;
        }
        set outputColorSpace(e) {
            this._outputColorSpace = e;
            const n = this.getContext();
            n.drawingBufferColorspace = rr._getDrawingBufferColorSpace(e), n.unpackColorSpace = rr._getUnpackColorSpace();
        }
    }
    const Z_e = Object.freeze(Object.defineProperty({
        __proto__: null,
        ACESFilmicToneMapping: h2,
        AddEquation: Qf,
        AddOperation: FW,
        AdditiveAnimationBlendMode: Vk,
        AdditiveBlending: j3,
        AgXToneMapping: VW,
        AlphaFormat: Lk,
        AlwaysCompare: rq,
        AlwaysDepth: IM,
        AlwaysStencilFunc: V3,
        AmbientLight: Yq,
        AnimationAction: sH,
        AnimationClip: lw,
        AnimationLoader: fye,
        AnimationMixer: zye,
        AnimationObjectGroup: Bye,
        AnimationUtils: lye,
        ArcCurve: wq,
        ArrayCamera: nH,
        ArrowHelper: cve,
        AttachedBindMode: z3,
        Audio: rH,
        AudioAnalyser: Iye,
        AudioContext: fO,
        AudioListener: Tye,
        AudioLoader: Sye,
        AxesHelper: uve,
        BackSide: Wo,
        BasicDepthPacking: XW,
        BasicShadowMap: yW,
        BatchedMesh: yq,
        Bone: Kk,
        BooleanKeyframeTrack: Vm,
        Box2: Kye,
        Box3: qo,
        Box3Helper: ave,
        BoxGeometry: zm,
        BoxHelper: ove,
        BufferAttribute: Rr,
        BufferGeometry: Vn,
        BufferGeometryLoader: tH,
        ByteType: kk,
        Cache: _d,
        Camera: Vw,
        CameraHelper: sve,
        CanvasTexture: P0e,
        CapsuleGeometry: A2,
        CatmullRomCurve3: _q,
        CineonToneMapping: UW,
        CircleGeometry: N2,
        ClampToEdgeWrapping: Tl,
        Clock: hO,
        Color: jt,
        ColorKeyframeTrack: cO,
        ColorManagement: rr,
        CompressedArrayTexture: A0e,
        CompressedCubeTexture: N0e,
        CompressedTexture: R2,
        CompressedTextureLoader: hye,
        ConeGeometry: P2,
        ConstantAlphaFactor: OW,
        ConstantColorFactor: PW,
        Controls: fve,
        CubeCamera: uq,
        CubeReflectionMapping: Fd,
        CubeRefractionMapping: _h,
        CubeTexture: Ww,
        CubeTextureLoader: pye,
        CubeUVReflectionMapping: zy,
        CubicBezierCurve: Qk,
        CubicBezierCurve3: Sq,
        CubicInterpolant: Vq,
        CullFaceBack: F3,
        CullFaceFront: gW,
        CullFaceFrontBack: zme,
        CullFaceNone: mW,
        Curve: Cc,
        CurvePath: Mq,
        CustomBlending: vW,
        CustomToneMapping: zW,
        CylinderGeometry: Wy,
        Cylindrical: Xye,
        Data3DTexture: S2,
        DataArrayTexture: zw,
        DataTexture: vc,
        DataTextureLoader: mye,
        DataUtils: r0e,
        DecrementStencilOp: tge,
        DecrementWrapStencilOp: rge,
        DefaultLoadingManager: Hq,
        DepthFormat: dm,
        DepthStencilFormat: Am,
        DepthTexture: Zk,
        DetachedBindMode: qW,
        DirectionalLight: Kq,
        DirectionalLightHelper: ive,
        DiscreteInterpolant: Wq,
        DodecahedronGeometry: k2,
        DoubleSide: eu,
        DstAlphaFactor: CW,
        DstColorFactor: IW,
        DynamicCopyUsage: vge,
        DynamicDrawUsage: fge,
        DynamicReadUsage: mge,
        EdgesGeometry: Tq,
        EllipseCurve: I2,
        EqualCompare: QW,
        EqualDepth: NM,
        EqualStencilFunc: age,
        EquirectangularReflectionMapping: $b,
        EquirectangularRefractionMapping: Gb,
        Euler: tl,
        EventDispatcher: vu,
        ExtrudeGeometry: D2,
        FileLoader: Bd,
        Float16BufferAttribute: u0e,
        Float32BufferAttribute: Yt,
        FloatType: xa,
        Fog: M2,
        FogExp2: E2,
        FramebufferTexture: I0e,
        FrontSide: Ld,
        Frustum: qw,
        GLBufferAttribute: Gye,
        GLSL1: bge,
        GLSL3: W3,
        GreaterCompare: eq,
        GreaterDepth: kM,
        GreaterEqualCompare: nq,
        GreaterEqualDepth: PM,
        GreaterEqualStencilFunc: dge,
        GreaterStencilFunc: cge,
        GridHelper: nve,
        Group: L0,
        HalfFloatType: Vy,
        HemisphereLight: $q,
        HemisphereLightHelper: tve,
        IcosahedronGeometry: L2,
        ImageBitmapLoader: _ye,
        ImageLoader: cw,
        ImageUtils: oq,
        IncrementStencilOp: ege,
        IncrementWrapStencilOp: nge,
        InstancedBufferAttribute: Ty,
        InstancedBufferGeometry: eH,
        InstancedInterleavedBuffer: $ye,
        InstancedMesh: gq,
        Int16BufferAttribute: l0e,
        Int32BufferAttribute: c0e,
        Int8BufferAttribute: s0e,
        IntType: m2,
        InterleavedBuffer: T2,
        InterleavedBufferAttribute: Pm,
        Interpolant: Xw,
        InterpolateDiscrete: Yb,
        InterpolateLinear: aT,
        InterpolateSmooth: XS,
        InvertStencilOp: ige,
        KeepStencilOp: zp,
        KeyframeTrack: Rc,
        LOD: pq,
        LatheGeometry: Hw,
        Layers: hm,
        LessCompare: JW,
        LessDepth: AM,
        LessEqualCompare: Wk,
        LessEqualDepth: Rm,
        LessEqualStencilFunc: lge,
        LessStencilFunc: oge,
        Light: Ah,
        LightProbe: Qq,
        Line: Sh,
        Line3: Yye,
        LineBasicMaterial: Xo,
        LineCurve: eO,
        LineCurve3: Eq,
        LineDashedMaterial: Bq,
        LineLoop: vq,
        LineSegments: xu,
        LinearFilter: ds,
        LinearInterpolant: lO,
        LinearMipMapLinearFilter: Hme,
        LinearMipMapNearestFilter: qme,
        LinearMipmapLinearFilter: ru,
        LinearMipmapNearestFilter: Jx,
        LinearSRGBColorSpace: Nm,
        LinearToneMapping: jW,
        LinearTransfer: Jb,
        Loader: Ta,
        LoaderUtils: X3,
        LoadingManager: uO,
        LoopOnce: HW,
        LoopPingPong: GW,
        LoopRepeat: $W,
        LuminanceAlphaFormat: Bk,
        LuminanceFormat: jk,
        MOUSE: Hf,
        Material: bo,
        MaterialLoader: W2,
        MathUtils: jge,
        Matrix2: yO,
        Matrix3: An,
        Matrix4: gn,
        MaxEquation: _W,
        Mesh: Ji,
        MeshBasicMaterial: Rh,
        MeshDepthMaterial: sO,
        MeshDistanceMaterial: oO,
        MeshLambertMaterial: Fq,
        MeshMatcapMaterial: jq,
        MeshNormalMaterial: Lq,
        MeshPhongMaterial: Oq,
        MeshPhysicalMaterial: kq,
        MeshStandardMaterial: iO,
        MeshToonMaterial: Dq,
        MinEquation: wW,
        MirroredRepeatWrapping: Kb,
        MixOperation: LW,
        MultiplyBlending: U3,
        MultiplyOperation: Bw,
        NearestFilter: qs,
        NearestMipMapLinearFilter: Wme,
        NearestMipMapNearestFilter: Vme,
        NearestMipmapLinearFilter: O0,
        NearestMipmapNearestFilter: Pk,
        NeutralToneMapping: WW,
        NeverCompare: ZW,
        NeverDepth: RM,
        NeverStencilFunc: sge,
        NoBlending: Cd,
        NoColorSpace: xd,
        NoToneMapping: lu,
        NormalAnimationBlendMode: w2,
        NormalBlending: um,
        NotEqualCompare: tq,
        NotEqualDepth: OM,
        NotEqualStencilFunc: uge,
        NumberKeyframeTrack: ow,
        Object3D: ur,
        ObjectLoader: bye,
        ObjectSpaceNormalMap: YW,
        OctahedronGeometry: $w,
        OneFactor: EW,
        OneMinusConstantAlphaFactor: DW,
        OneMinusConstantColorFactor: kW,
        OneMinusDstAlphaFactor: RW,
        OneMinusDstColorFactor: AW,
        OneMinusSrcAlphaFactor: CM,
        OneMinusSrcColorFactor: TW,
        OrthographicCamera: ch,
        PCFShadowMap: f2,
        PCFSoftShadowMap: Zx,
        PMREMGenerator: J3,
        Path: nw,
        PerspectiveCamera: Oi,
        Plane: vd,
        PlaneGeometry: qy,
        PlaneHelper: lve,
        PointLight: Xq,
        PointLightHelper: Qye,
        Points: xq,
        PointsMaterial: Yk,
        PolarGridHelper: rve,
        PolyhedronGeometry: Ih,
        PositionalAudio: Rye,
        PropertyBinding: ar,
        PropertyMixer: iH,
        QuadraticBezierCurve: tO,
        QuadraticBezierCurve3: nO,
        Quaternion: fo,
        QuaternionKeyframeTrack: Kw,
        QuaternionLinearInterpolant: qq,
        RED_GREEN_RGTC2_Format: sT,
        RED_RGTC1_Format: zk,
        REVISION: d2,
        RGBADepthPacking: KW,
        RGBAFormat: lo,
        RGBAIntegerFormat: b2,
        RGBA_ASTC_10x10_Format: QM,
        RGBA_ASTC_10x5_Format: YM,
        RGBA_ASTC_10x6_Format: ZM,
        RGBA_ASTC_10x8_Format: JM,
        RGBA_ASTC_12x10_Format: eT,
        RGBA_ASTC_12x12_Format: tT,
        RGBA_ASTC_4x4_Format: VM,
        RGBA_ASTC_5x4_Format: WM,
        RGBA_ASTC_5x5_Format: qM,
        RGBA_ASTC_6x5_Format: HM,
        RGBA_ASTC_6x6_Format: $M,
        RGBA_ASTC_8x5_Format: GM,
        RGBA_ASTC_8x6_Format: XM,
        RGBA_ASTC_8x8_Format: KM,
        RGBA_BPTC_Format: rb,
        RGBA_ETC2_EAC_Format: zM,
        RGBA_PVRTC_2BPPV1_Format: jM,
        RGBA_PVRTC_4BPPV1_Format: FM,
        RGBA_S3TC_DXT1_Format: eb,
        RGBA_S3TC_DXT3_Format: tb,
        RGBA_S3TC_DXT5_Format: nb,
        RGBDepthPacking: Yme,
        RGBFormat: Fk,
        RGBIntegerFormat: $me,
        RGB_BPTC_SIGNED_Format: nT,
        RGB_BPTC_UNSIGNED_Format: rT,
        RGB_ETC1_Format: BM,
        RGB_ETC2_Format: UM,
        RGB_PVRTC_2BPPV1_Format: LM,
        RGB_PVRTC_4BPPV1_Format: DM,
        RGB_S3TC_DXT1_Format: Qx,
        RGDepthPacking: Zme,
        RGFormat: Uk,
        RGIntegerFormat: x2,
        RawShaderMaterial: Pq,
        Ray: Um,
        Raycaster: oH,
        RectAreaLight: Zq,
        RedFormat: v2,
        RedIntegerFormat: Uw,
        ReinhardToneMapping: BW,
        RenderTarget: _2,
        RenderTarget3D: Vye,
        RenderTargetArray: Wye,
        RepeatWrapping: Xb,
        ReplaceStencilOp: Qme,
        ReverseSubtractEquation: bW,
        RingGeometry: F2,
        SIGNED_RED_GREEN_RGTC2_Format: oT,
        SIGNED_RED_RGTC1_Format: iT,
        SRGBColorSpace: ma,
        SRGBTransfer: br,
        Scene: Gk,
        ShaderChunk: Un,
        ShaderLib: uc,
        ShaderMaterial: Sc,
        ShadowMaterial: Nq,
        Shape: pm,
        ShapeGeometry: j2,
        ShapePath: dve,
        ShapeUtils: cu,
        ShortType: Ok,
        Skeleton: C2,
        SkeletonHelper: Jye,
        SkinnedMesh: mq,
        Source: im,
        Sphere: ho,
        SphereGeometry: Gw,
        Spherical: Y3,
        SphericalHarmonics3: Jq,
        SplineCurve: rO,
        SpotLight: Gq,
        SpotLightHelper: Zye,
        Sprite: hq,
        SpriteMaterial: Xk,
        SrcAlphaFactor: TM,
        SrcAlphaSaturateFactor: NW,
        SrcColorFactor: MW,
        StaticCopyUsage: yge,
        StaticDrawUsage: Qb,
        StaticReadUsage: pge,
        StereoCamera: Eye,
        StreamCopyUsage: xge,
        StreamDrawUsage: hge,
        StreamReadUsage: gge,
        StringKeyframeTrack: Wm,
        SubtractEquation: xW,
        SubtractiveBlending: B3,
        TOUCH: yd,
        TangentSpaceNormalMap: Ch,
        TetrahedronGeometry: B2,
        Texture: bi,
        TextureLoader: gye,
        TextureUtils: yve,
        TimestampQuery: wge,
        TorusGeometry: U2,
        TorusKnotGeometry: z2,
        Triangle: ga,
        TriangleFanDrawMode: Kme,
        TriangleStripDrawMode: Xme,
        TrianglesDrawMode: Gme,
        TubeGeometry: V2,
        UVMapping: p2,
        Uint16BufferAttribute: Hk,
        Uint32BufferAttribute: $k,
        Uint8BufferAttribute: o0e,
        Uint8ClampedBufferAttribute: a0e,
        Uniform: gO,
        UniformsGroup: Hye,
        UniformsLib: Mt,
        UniformsUtils: cq,
        UnsignedByteType: _c,
        UnsignedInt248Type: Im,
        UnsignedInt5999Type: Dk,
        UnsignedIntType: jd,
        UnsignedShort4444Type: g2,
        UnsignedShort5551Type: y2,
        UnsignedShortType: Sy,
        VSMShadowMap: oc,
        Vector2: ot,
        Vector3: ve,
        Vector4: cr,
        VectorKeyframeTrack: aw,
        VideoFrameTexture: R0e,
        VideoTexture: bq,
        WebGL3DRenderTarget: Gge,
        WebGLArrayRenderTarget: $ge,
        WebGLCoordinateSystem: gc,
        WebGLCubeRenderTarget: dq,
        WebGLRenderTarget: mu,
        WebGLRenderer: pH,
        WebGLUtils: hH,
        WebGPUCoordinateSystem: ew,
        WebXRController: KS,
        WireframeGeometry: Aq,
        WrapAroundEnding: Zb,
        ZeroCurvatureEnding: nm,
        ZeroFactor: SW,
        ZeroSlopeEnding: rm,
        ZeroStencilOp: Jme,
        createCanvasElement: sq
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    var tN = {
        exports: {}
    }, Bf = {};
    var wj;
    function J_e() {
        return wj || (wj = 1, Bf.ConcurrentRoot = 1, Bf.ContinuousEventPriority = 4, Bf.DefaultEventPriority = 16, Bf.DiscreteEventPriority = 1, Bf.IdleEventPriority = 536870912, Bf.LegacyRoot = 0), Bf;
    }
    var _j;
    function Q_e() {
        return _j || (_j = 1, tN.exports = J_e()), tN.exports;
    }
    var B0 = Q_e();
    function e1e(t) {
        let e;
        const n = new Set, r = (c, u)=>{
            const f = typeof c == "function" ? c(e) : c;
            if (f !== e) {
                const h = e;
                e = u ? f : Object.assign({}, e, f), n.forEach((m)=>m(e, h));
            }
        }, i = ()=>e, s = (c, u = i, f = Object.is)=>{
            console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
            let h = u(e);
            function m() {
                const v = u(e);
                if (!f(h, v)) {
                    const _ = h;
                    c(h = v, _);
                }
            }
            return n.add(m), ()=>n.delete(m);
        }, l = {
            setState: r,
            getState: i,
            subscribe: (c, u, f)=>u || f ? s(c, u, f) : (n.add(c), ()=>n.delete(c)),
            destroy: ()=>n.clear()
        };
        return e = t(r, i, l), l;
    }
    const t1e = typeof window > "u" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent), Sj = t1e ? J.useEffect : J.useLayoutEffect;
    function n1e(t) {
        const e = typeof t == "function" ? e1e(t) : t, n = (r = e.getState, i = Object.is)=>{
            const [, s] = J.useReducer((w)=>w + 1, 0), o = e.getState(), a = J.useRef(o), l = J.useRef(r), c = J.useRef(i), u = J.useRef(!1), f = J.useRef();
            f.current === void 0 && (f.current = r(o));
            let h, m = !1;
            (a.current !== o || l.current !== r || c.current !== i || u.current) && (h = r(o), m = !i(f.current, h)), Sj(()=>{
                m && (f.current = h), a.current = o, l.current = r, c.current = i, u.current = !1;
            });
            const v = J.useRef(o);
            Sj(()=>{
                const w = ()=>{
                    try {
                        const M = e.getState(), E = l.current(M);
                        c.current(f.current, E) || (a.current = M, f.current = E, s());
                    } catch  {
                        u.current = !0, s();
                    }
                }, b = e.subscribe(w);
                return e.getState() !== v.current && w(), b;
            }, []);
            const _ = m ? h : f.current;
            return J.useDebugValue(_), _;
        };
        return Object.assign(n, e), n[Symbol.iterator] = function() {
            console.warn("[useStore, api] = create() is deprecated and will be removed in v4");
            const r = [
                n,
                e
            ];
            return {
                next () {
                    const i = r.length <= 0;
                    return {
                        value: r.shift(),
                        done: i
                    };
                }
            };
        }, n;
    }
    var nN = {
        exports: {}
    }, rN = {
        exports: {}
    }, iN = {};
    var Ej;
    function r1e() {
        return Ej || (Ej = 1, function(t) {
            function e(W, Z) {
                var $ = W.length;
                W.push(Z);
                e: for(; 0 < $;){
                    var H = $ - 1 >>> 1, se = W[H];
                    if (0 < i(se, Z)) W[H] = Z, W[$] = se, $ = H;
                    else break e;
                }
            }
            function n(W) {
                return W.length === 0 ? null : W[0];
            }
            function r(W) {
                if (W.length === 0) return null;
                var Z = W[0], $ = W.pop();
                if ($ !== Z) {
                    W[0] = $;
                    e: for(var H = 0, se = W.length, le = se >>> 1; H < le;){
                        var ne = 2 * (H + 1) - 1, ue = W[ne], ge = ne + 1, ye = W[ge];
                        if (0 > i(ue, $)) ge < se && 0 > i(ye, ue) ? (W[H] = ye, W[ge] = $, H = ge) : (W[H] = ue, W[ne] = $, H = ne);
                        else if (ge < se && 0 > i(ye, $)) W[H] = ye, W[ge] = $, H = ge;
                        else break e;
                    }
                }
                return Z;
            }
            function i(W, Z) {
                var $ = W.sortIndex - Z.sortIndex;
                return $ !== 0 ? $ : W.id - Z.id;
            }
            if (typeof performance == "object" && typeof performance.now == "function") {
                var s = performance;
                t.unstable_now = function() {
                    return s.now();
                };
            } else {
                var o = Date, a = o.now();
                t.unstable_now = function() {
                    return o.now() - a;
                };
            }
            var l = [], c = [], u = 1, f = null, h = 3, m = !1, v = !1, _ = !1, w = typeof setTimeout == "function" ? setTimeout : null, b = typeof clearTimeout == "function" ? clearTimeout : null, M = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            function E(W) {
                for(var Z = n(c); Z !== null;){
                    if (Z.callback === null) r(c);
                    else if (Z.startTime <= W) r(c), Z.sortIndex = Z.expirationTime, e(l, Z);
                    else break;
                    Z = n(c);
                }
            }
            function T(W) {
                if (_ = !1, E(W), !v) if (n(l) !== null) v = !0, q(P);
                else {
                    var Z = n(c);
                    Z !== null && ee(T, Z.startTime - W);
                }
            }
            function P(W, Z) {
                v = !1, _ && (_ = !1, b(D), D = -1), m = !0;
                var $ = h;
                try {
                    for(E(Z), f = n(l); f !== null && (!(f.expirationTime > Z) || W && !k());){
                        var H = f.callback;
                        if (typeof H == "function") {
                            f.callback = null, h = f.priorityLevel;
                            var se = H(f.expirationTime <= Z);
                            Z = t.unstable_now(), typeof se == "function" ? f.callback = se : f === n(l) && r(l), E(Z);
                        } else r(l);
                        f = n(l);
                    }
                    if (f !== null) var le = !0;
                    else {
                        var ne = n(c);
                        ne !== null && ee(T, ne.startTime - Z), le = !1;
                    }
                    return le;
                } finally{
                    f = null, h = $, m = !1;
                }
            }
            var A = !1, O = null, D = -1, R = 5, N = -1;
            function k() {
                return !(t.unstable_now() - N < R);
            }
            function U() {
                if (O !== null) {
                    var W = t.unstable_now();
                    N = W;
                    var Z = !0;
                    try {
                        Z = O(!0, W);
                    } finally{
                        Z ? B() : (A = !1, O = null);
                    }
                } else A = !1;
            }
            var B;
            if (typeof M == "function") B = function() {
                M(U);
            };
            else if (typeof MessageChannel < "u") {
                var j = new MessageChannel, K = j.port2;
                j.port1.onmessage = U, B = function() {
                    K.postMessage(null);
                };
            } else B = function() {
                w(U, 0);
            };
            function q(W) {
                O = W, A || (A = !0, B());
            }
            function ee(W, Z) {
                D = w(function() {
                    W(t.unstable_now());
                }, Z);
            }
            t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(W) {
                W.callback = null;
            }, t.unstable_continueExecution = function() {
                v || m || (v = !0, q(P));
            }, t.unstable_forceFrameRate = function(W) {
                0 > W || 125 < W ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : R = 0 < W ? Math.floor(1e3 / W) : 5;
            }, t.unstable_getCurrentPriorityLevel = function() {
                return h;
            }, t.unstable_getFirstCallbackNode = function() {
                return n(l);
            }, t.unstable_next = function(W) {
                switch(h){
                    case 1:
                    case 2:
                    case 3:
                        var Z = 3;
                        break;
                    default:
                        Z = h;
                }
                var $ = h;
                h = Z;
                try {
                    return W();
                } finally{
                    h = $;
                }
            }, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, t.unstable_runWithPriority = function(W, Z) {
                switch(W){
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        W = 3;
                }
                var $ = h;
                h = W;
                try {
                    return Z();
                } finally{
                    h = $;
                }
            }, t.unstable_scheduleCallback = function(W, Z, $) {
                var H = t.unstable_now();
                switch(typeof $ == "object" && $ !== null ? ($ = $.delay, $ = typeof $ == "number" && 0 < $ ? H + $ : H) : $ = H, W){
                    case 1:
                        var se = -1;
                        break;
                    case 2:
                        se = 250;
                        break;
                    case 5:
                        se = 1073741823;
                        break;
                    case 4:
                        se = 1e4;
                        break;
                    default:
                        se = 5e3;
                }
                return se = $ + se, W = {
                    id: u++,
                    callback: Z,
                    priorityLevel: W,
                    startTime: $,
                    expirationTime: se,
                    sortIndex: -1
                }, $ > H ? (W.sortIndex = $, e(c, W), n(l) === null && W === n(c) && (_ ? (b(D), D = -1) : _ = !0, ee(T, $ - H))) : (W.sortIndex = se, e(l, W), v || m || (v = !0, q(P))), W;
            }, t.unstable_shouldYield = k, t.unstable_wrapCallback = function(W) {
                var Z = h;
                return function() {
                    var $ = h;
                    h = Z;
                    try {
                        return W.apply(this, arguments);
                    } finally{
                        h = $;
                    }
                };
            };
        }(iN)), iN;
    }
    var Mj;
    function mH() {
        return Mj || (Mj = 1, rN.exports = r1e()), rN.exports;
    }
    var sN, Tj;
    function i1e() {
        return Tj || (Tj = 1, sN = function(e) {
            var n = {}, r = Ry(), i = mH(), s = Object.assign;
            function o(g) {
                for(var y = "https://reactjs.org/docs/error-decoder.html?invariant=" + g, C = 1; C < arguments.length; C++)y += "&args[]=" + encodeURIComponent(arguments[C]);
                return "Minified React error #" + g + "; visit " + y + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
            }
            var a = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, l = Symbol.for("react.element"), c = Symbol.for("react.portal"), u = Symbol.for("react.fragment"), f = Symbol.for("react.strict_mode"), h = Symbol.for("react.profiler"), m = Symbol.for("react.provider"), v = Symbol.for("react.context"), _ = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), b = Symbol.for("react.suspense_list"), M = Symbol.for("react.memo"), E = Symbol.for("react.lazy"), T = Symbol.for("react.offscreen"), P = Symbol.iterator;
            function A(g) {
                return g === null || typeof g != "object" ? null : (g = P && g[P] || g["@@iterator"], typeof g == "function" ? g : null);
            }
            function O(g) {
                if (g == null) return null;
                if (typeof g == "function") return g.displayName || g.name || null;
                if (typeof g == "string") return g;
                switch(g){
                    case u:
                        return "Fragment";
                    case c:
                        return "Portal";
                    case h:
                        return "Profiler";
                    case f:
                        return "StrictMode";
                    case w:
                        return "Suspense";
                    case b:
                        return "SuspenseList";
                }
                if (typeof g == "object") switch(g.$$typeof){
                    case v:
                        return (g.displayName || "Context") + ".Consumer";
                    case m:
                        return (g._context.displayName || "Context") + ".Provider";
                    case _:
                        var y = g.render;
                        return g = g.displayName, g || (g = y.displayName || y.name || "", g = g !== "" ? "ForwardRef(" + g + ")" : "ForwardRef"), g;
                    case M:
                        return y = g.displayName || null, y !== null ? y : O(g.type) || "Memo";
                    case E:
                        y = g._payload, g = g._init;
                        try {
                            return O(g(y));
                        } catch  {}
                }
                return null;
            }
            function D(g) {
                var y = g.type;
                switch(g.tag){
                    case 24:
                        return "Cache";
                    case 9:
                        return (y.displayName || "Context") + ".Consumer";
                    case 10:
                        return (y._context.displayName || "Context") + ".Provider";
                    case 18:
                        return "DehydratedFragment";
                    case 11:
                        return g = y.render, g = g.displayName || g.name || "", y.displayName || (g !== "" ? "ForwardRef(" + g + ")" : "ForwardRef");
                    case 7:
                        return "Fragment";
                    case 5:
                        return y;
                    case 4:
                        return "Portal";
                    case 3:
                        return "Root";
                    case 6:
                        return "Text";
                    case 16:
                        return O(y);
                    case 8:
                        return y === f ? "StrictMode" : "Mode";
                    case 22:
                        return "Offscreen";
                    case 12:
                        return "Profiler";
                    case 21:
                        return "Scope";
                    case 13:
                        return "Suspense";
                    case 19:
                        return "SuspenseList";
                    case 25:
                        return "TracingMarker";
                    case 1:
                    case 0:
                    case 17:
                    case 2:
                    case 14:
                    case 15:
                        if (typeof y == "function") return y.displayName || y.name || null;
                        if (typeof y == "string") return y;
                }
                return null;
            }
            function R(g) {
                var y = g, C = g;
                if (g.alternate) for(; y.return;)y = y.return;
                else {
                    g = y;
                    do y = g, y.flags & 4098 && (C = y.return), g = y.return;
                    while (g);
                }
                return y.tag === 3 ? C : null;
            }
            function N(g) {
                if (R(g) !== g) throw Error(o(188));
            }
            function k(g) {
                var y = g.alternate;
                if (!y) {
                    if (y = R(g), y === null) throw Error(o(188));
                    return y !== g ? null : g;
                }
                for(var C = g, L = y;;){
                    var z = C.return;
                    if (z === null) break;
                    var Q = z.alternate;
                    if (Q === null) {
                        if (L = z.return, L !== null) {
                            C = L;
                            continue;
                        }
                        break;
                    }
                    if (z.child === Q.child) {
                        for(Q = z.child; Q;){
                            if (Q === C) return N(z), g;
                            if (Q === L) return N(z), y;
                            Q = Q.sibling;
                        }
                        throw Error(o(188));
                    }
                    if (C.return !== L.return) C = z, L = Q;
                    else {
                        for(var xe = !1, ke = z.child; ke;){
                            if (ke === C) {
                                xe = !0, C = z, L = Q;
                                break;
                            }
                            if (ke === L) {
                                xe = !0, L = z, C = Q;
                                break;
                            }
                            ke = ke.sibling;
                        }
                        if (!xe) {
                            for(ke = Q.child; ke;){
                                if (ke === C) {
                                    xe = !0, C = Q, L = z;
                                    break;
                                }
                                if (ke === L) {
                                    xe = !0, L = Q, C = z;
                                    break;
                                }
                                ke = ke.sibling;
                            }
                            if (!xe) throw Error(o(189));
                        }
                    }
                    if (C.alternate !== L) throw Error(o(190));
                }
                if (C.tag !== 3) throw Error(o(188));
                return C.stateNode.current === C ? g : y;
            }
            function U(g) {
                return g = k(g), g !== null ? B(g) : null;
            }
            function B(g) {
                if (g.tag === 5 || g.tag === 6) return g;
                for(g = g.child; g !== null;){
                    var y = B(g);
                    if (y !== null) return y;
                    g = g.sibling;
                }
                return null;
            }
            function j(g) {
                if (g.tag === 5 || g.tag === 6) return g;
                for(g = g.child; g !== null;){
                    if (g.tag !== 4) {
                        var y = j(g);
                        if (y !== null) return y;
                    }
                    g = g.sibling;
                }
                return null;
            }
            var K = Array.isArray, q = e.getPublicInstance, ee = e.getRootHostContext, W = e.getChildHostContext, Z = e.prepareForCommit, $ = e.resetAfterCommit, H = e.createInstance, se = e.appendInitialChild, le = e.finalizeInitialChildren, ne = e.prepareUpdate, ue = e.shouldSetTextContent, ge = e.createTextInstance, ye = e.scheduleTimeout, _e = e.cancelTimeout, Te = e.noTimeout, Re = e.isPrimaryRenderer, Fe = e.supportsMutation, be = e.supportsPersistence, Me = e.supportsHydration, oe = e.getInstanceFromNode, Ye = e.preparePortalMount, Be = e.getCurrentEventPriority, nt = e.detachDeletedInstance, de = e.supportsMicrotasks, ce = e.scheduleMicrotask, ae = e.supportsTestSelectors, X = e.findFiberRoot, G = e.getBoundingRect, he = e.getTextContent, pe = e.isHiddenSubtree, me = e.matchAccessibilityRole, Ie = e.setFocusIfFocusable, Xe = e.setupIntersectionObserver, Ze = e.appendChild, at = e.appendChildToContainer, Je = e.commitTextUpdate, Pe = e.commitMount, je = e.commitUpdate, rt = e.insertBefore, ct = e.insertInContainerBefore, st = e.removeChild, Se = e.removeChildFromContainer, $e = e.resetTextContent, ht = e.hideInstance, Ee = e.hideTextInstance, lt = e.unhideInstance, Ae = e.unhideTextInstance, ze = e.clearContainer, We = e.cloneInstance, it = e.createContainerChildSet, pt = e.appendChildToContainerChildSet, Pt = e.finalizeContainerChildren, en = e.replaceContainerChildren, wt = e.cloneHiddenInstance, Ln = e.cloneHiddenTextInstance, vn = e.canHydrateInstance, $r = e.canHydrateTextInstance, il = e.canHydrateSuspenseInstance, Ko = e.isSuspenseInstancePending, wo = e.isSuspenseInstanceFallback, Pl = e.registerSuspenseInstanceRetry, _o = e.getNextHydratableSibling, sl = e.getFirstHydratableChild, Vd = e.getFirstHydratableChildWithinContainer, Ic = e.getFirstHydratableChildWithinSuspenseInstance, wu = e.hydrateInstance, So = e.hydrateTextInstance, Wd = e.hydrateSuspenseInstance, qd = e.getNextHydratableInstanceAfterSuspenseInstance, Hd = e.commitHydratedContainer, $d = e.commitHydratedSuspenseInstance, Gd = e.clearSuspenseBoundary, Xd = e.clearSuspenseBoundaryFromContainer, fe = e.shouldDeleteUnhydratedTailInstances, Oe = e.didNotMatchHydratedContainerTextInstance, Ge = e.didNotMatchHydratedTextInstance, Ue;
            function De(g) {
                if (Ue === void 0) try {
                    throw Error();
                } catch (C) {
                    var y = C.stack.trim().match(/\n( *(at )?)/);
                    Ue = y && y[1] || "";
                }
                return `
` + Ue + g;
            }
            var dt = !1;
            function _t(g, y) {
                if (!g || dt) return "";
                dt = !0;
                var C = Error.prepareStackTrace;
                Error.prepareStackTrace = void 0;
                try {
                    if (y) if (y = function() {
                        throw Error();
                    }, Object.defineProperty(y.prototype, "props", {
                        set: function() {
                            throw Error();
                        }
                    }), typeof Reflect == "object" && Reflect.construct) {
                        try {
                            Reflect.construct(y, []);
                        } catch (vt) {
                            var L = vt;
                        }
                        Reflect.construct(g, [], y);
                    } else {
                        try {
                            y.call();
                        } catch (vt) {
                            L = vt;
                        }
                        g.call(y.prototype);
                    }
                    else {
                        try {
                            throw Error();
                        } catch (vt) {
                            L = vt;
                        }
                        g();
                    }
                } catch (vt) {
                    if (vt && L && typeof vt.stack == "string") {
                        for(var z = vt.stack.split(`
`), Q = L.stack.split(`
`), xe = z.length - 1, ke = Q.length - 1; 1 <= xe && 0 <= ke && z[xe] !== Q[ke];)ke--;
                        for(; 1 <= xe && 0 <= ke; xe--, ke--)if (z[xe] !== Q[ke]) {
                            if (xe !== 1 || ke !== 1) do if (xe--, ke--, 0 > ke || z[xe] !== Q[ke]) {
                                var tt = `
` + z[xe].replace(" at new ", " at ");
                                return g.displayName && tt.includes("<anonymous>") && (tt = tt.replace("<anonymous>", g.displayName)), tt;
                            }
                            while (1 <= xe && 0 <= ke);
                            break;
                        }
                    }
                } finally{
                    dt = !1, Error.prepareStackTrace = C;
                }
                return (g = g ? g.displayName || g.name : "") ? De(g) : "";
            }
            var Ct = Object.prototype.hasOwnProperty, kt = [], tn = -1;
            function Zt(g) {
                return {
                    current: g
                };
            }
            function yt(g) {
                0 > tn || (g.current = kt[tn], kt[tn] = null, tn--);
            }
            function qt(g, y) {
                tn++, kt[tn] = g.current, g.current = y;
            }
            var on = {}, Fn = Zt(on), jn = Zt(!1), Mn = on;
            function Vt(g, y) {
                var C = g.type.contextTypes;
                if (!C) return on;
                var L = g.stateNode;
                if (L && L.__reactInternalMemoizedUnmaskedChildContext === y) return L.__reactInternalMemoizedMaskedChildContext;
                var z = {}, Q;
                for(Q in C)z[Q] = y[Q];
                return L && (g = g.stateNode, g.__reactInternalMemoizedUnmaskedChildContext = y, g.__reactInternalMemoizedMaskedChildContext = z), z;
            }
            function $n(g) {
                return g = g.childContextTypes, g != null;
            }
            function Rn() {
                yt(jn), yt(Fn);
            }
            function oi(g, y, C) {
                if (Fn.current !== on) throw Error(o(168));
                qt(Fn, y), qt(jn, C);
            }
            function Ra(g, y, C) {
                var L = g.stateNode;
                if (y = y.childContextTypes, typeof L.getChildContext != "function") return C;
                L = L.getChildContext();
                for(var z in L)if (!(z in y)) throw Error(o(108, D(g) || "Unknown", z));
                return s({}, C, L);
            }
            function hi(g) {
                return g = (g = g.stateNode) && g.__reactInternalMemoizedMergedChildContext || on, Mn = Fn.current, qt(Fn, g), qt(jn, jn.current), !0;
            }
            function Eo(g, y, C) {
                var L = g.stateNode;
                if (!L) throw Error(o(169));
                C ? (g = Ra(g, y, Mn), L.__reactInternalMemoizedMergedChildContext = g, yt(jn), yt(Fn), qt(Fn, g)) : yt(jn), qt(jn, C);
            }
            var Gn = Math.clz32 ? Math.clz32 : ns, ms = Math.log, Ui = Math.LN2;
            function ns(g) {
                return g >>>= 0, g === 0 ? 32 : 31 - (ms(g) / Ui | 0) | 0;
            }
            var ai = 64, Kn = 4194304;
            function Gs(g) {
                switch(g & -g){
                    case 1:
                        return 1;
                    case 2:
                        return 2;
                    case 4:
                        return 4;
                    case 8:
                        return 8;
                    case 16:
                        return 16;
                    case 32:
                        return 32;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return g & 4194240;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return g & 130023424;
                    case 134217728:
                        return 134217728;
                    case 268435456:
                        return 268435456;
                    case 536870912:
                        return 536870912;
                    case 1073741824:
                        return 1073741824;
                    default:
                        return g;
                }
            }
            function Dh(g, y) {
                var C = g.pendingLanes;
                if (C === 0) return 0;
                var L = 0, z = g.suspendedLanes, Q = g.pingedLanes, xe = C & 268435455;
                if (xe !== 0) {
                    var ke = xe & ~z;
                    ke !== 0 ? L = Gs(ke) : (Q &= xe, Q !== 0 && (L = Gs(Q)));
                } else xe = C & ~z, xe !== 0 ? L = Gs(xe) : Q !== 0 && (L = Gs(Q));
                if (L === 0) return 0;
                if (y !== 0 && y !== L && !(y & z) && (z = L & -L, Q = y & -y, z >= Q || z === 16 && (Q & 4194240) !== 0)) return y;
                if (L & 4 && (L |= C & 16), y = g.entangledLanes, y !== 0) for(g = g.entanglements, y &= L; 0 < y;)C = 31 - Gn(y), z = 1 << C, L |= g[C], y &= ~z;
                return L;
            }
            function Xy(g, y) {
                switch(g){
                    case 1:
                    case 2:
                    case 4:
                        return y + 250;
                    case 8:
                    case 16:
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return y + 5e3;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return -1;
                    case 134217728:
                    case 268435456:
                    case 536870912:
                    case 1073741824:
                        return -1;
                    default:
                        return -1;
                }
            }
            function s_(g, y) {
                for(var C = g.suspendedLanes, L = g.pingedLanes, z = g.expirationTimes, Q = g.pendingLanes; 0 < Q;){
                    var xe = 31 - Gn(Q), ke = 1 << xe, tt = z[xe];
                    tt === -1 ? (!(ke & C) || ke & L) && (z[xe] = Xy(ke, y)) : tt <= y && (g.expiredLanes |= ke), Q &= ~ke;
                }
            }
            function qm(g) {
                return g = g.pendingLanes & -1073741825, g !== 0 ? g : g & 1073741824 ? 1073741824 : 0;
            }
            function Hm(g) {
                for(var y = [], C = 0; 31 > C; C++)y.push(g);
                return y;
            }
            function _u(g, y, C) {
                g.pendingLanes |= y, y !== 536870912 && (g.suspendedLanes = 0, g.pingedLanes = 0), g = g.eventTimes, y = 31 - Gn(y), g[y] = C;
            }
            function $m(g, y) {
                var C = g.pendingLanes & ~y;
                g.pendingLanes = y, g.suspendedLanes = 0, g.pingedLanes = 0, g.expiredLanes &= y, g.mutableReadLanes &= y, g.entangledLanes &= y, y = g.entanglements;
                var L = g.eventTimes;
                for(g = g.expirationTimes; 0 < C;){
                    var z = 31 - Gn(C), Q = 1 << z;
                    y[z] = 0, L[z] = -1, g[z] = -1, C &= ~Q;
                }
            }
            function ol(g, y) {
                var C = g.entangledLanes |= y;
                for(g = g.entanglements; C;){
                    var L = 31 - Gn(C), z = 1 << L;
                    z & y | g[L] & y && (g[L] |= y), C &= ~z;
                }
            }
            var Bn = 0;
            function kl(g) {
                return g &= -g, 1 < g ? 4 < g ? g & 268435455 ? 16 : 536870912 : 4 : 1;
            }
            var Su = i.unstable_scheduleCallback, Kd = i.unstable_cancelCallback, Ac = i.unstable_shouldYield, X2 = i.unstable_requestPaint, Ii = i.unstable_now, Eu = i.unstable_ImmediatePriority, K2 = i.unstable_UserBlockingPriority, Gm = i.unstable_NormalPriority, Xm = i.unstable_IdlePriority, Lh = null, al = null;
            function Fh(g) {
                if (al && typeof al.onCommitFiberRoot == "function") try {
                    al.onCommitFiberRoot(Lh, g, void 0, (g.current.flags & 128) === 128);
                } catch  {}
            }
            function jh(g, y) {
                return g === y && (g !== 0 || 1 / g === 1 / y) || g !== g && y !== y;
            }
            var Is = typeof Object.is == "function" ? Object.is : jh, Yo = null, Km = !1, Ky = !1;
            function Ym(g) {
                Yo === null ? Yo = [
                    g
                ] : Yo.push(g);
            }
            function Zm(g) {
                Km = !0, Ym(g);
            }
            function Zo() {
                if (!Ky && Yo !== null) {
                    Ky = !0;
                    var g = 0, y = Bn;
                    try {
                        var C = Yo;
                        for(Bn = 1; g < C.length; g++){
                            var L = C[g];
                            do L = L(!0);
                            while (L !== null);
                        }
                        Yo = null, Km = !1;
                    } catch (z) {
                        throw Yo !== null && (Yo = Yo.slice(g + 1)), Su(Eu, Zo), z;
                    } finally{
                        Bn = y, Ky = !1;
                    }
                }
                return null;
            }
            var o_ = a.ReactCurrentBatchConfig;
            function Ia(g, y) {
                if (Is(g, y)) return !0;
                if (typeof g != "object" || g === null || typeof y != "object" || y === null) return !1;
                var C = Object.keys(g), L = Object.keys(y);
                if (C.length !== L.length) return !1;
                for(L = 0; L < C.length; L++){
                    var z = C[L];
                    if (!Ct.call(y, z) || !Is(g[z], y[z])) return !1;
                }
                return !0;
            }
            function Yy(g) {
                switch(g.tag){
                    case 5:
                        return De(g.type);
                    case 16:
                        return De("Lazy");
                    case 13:
                        return De("Suspense");
                    case 19:
                        return De("SuspenseList");
                    case 0:
                    case 2:
                    case 15:
                        return g = _t(g.type, !1), g;
                    case 11:
                        return g = _t(g.type.render, !1), g;
                    case 1:
                        return g = _t(g.type, !0), g;
                    default:
                        return "";
                }
            }
            function Xs(g, y) {
                if (g && g.defaultProps) {
                    y = s({}, y), g = g.defaultProps;
                    for(var C in g)y[C] === void 0 && (y[C] = g[C]);
                    return y;
                }
                return y;
            }
            var Bh = Zt(null), Mu = null, Ol = null, Jm = null;
            function As() {
                Jm = Ol = Mu = null;
            }
            function Tu(g, y, C) {
                Re ? (qt(Bh, y._currentValue), y._currentValue = C) : (qt(Bh, y._currentValue2), y._currentValue2 = C);
            }
            function Uh(g) {
                var y = Bh.current;
                yt(Bh), Re ? g._currentValue = y : g._currentValue2 = y;
            }
            function Cu(g, y, C) {
                for(; g !== null;){
                    var L = g.alternate;
                    if ((g.childLanes & y) !== y ? (g.childLanes |= y, L !== null && (L.childLanes |= y)) : L !== null && (L.childLanes & y) !== y && (L.childLanes |= y), g === C) break;
                    g = g.return;
                }
            }
            function Yd(g, y) {
                Mu = g, Jm = Ol = null, g = g.dependencies, g !== null && g.firstContext !== null && (g.lanes & y && (qi = !0), g.firstContext = null);
            }
            function Ks(g) {
                var y = Re ? g._currentValue : g._currentValue2;
                if (Jm !== g) if (g = {
                    context: g,
                    memoizedValue: y,
                    next: null
                }, Ol === null) {
                    if (Mu === null) throw Error(o(308));
                    Ol = g, Mu.dependencies = {
                        lanes: 0,
                        firstContext: g
                    };
                } else Ol = Ol.next = g;
                return y;
            }
            var Jo = null, Qo = !1;
            function Zd(g) {
                g.updateQueue = {
                    baseState: g.memoizedState,
                    firstBaseUpdate: null,
                    lastBaseUpdate: null,
                    shared: {
                        pending: null,
                        interleaved: null,
                        lanes: 0
                    },
                    effects: null
                };
            }
            function Zy(g, y) {
                g = g.updateQueue, y.updateQueue === g && (y.updateQueue = {
                    baseState: g.baseState,
                    firstBaseUpdate: g.firstBaseUpdate,
                    lastBaseUpdate: g.lastBaseUpdate,
                    shared: g.shared,
                    effects: g.effects
                });
            }
            function Dl(g, y) {
                return {
                    eventTime: g,
                    lane: y,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null
                };
            }
            function Nc(g, y) {
                var C = g.updateQueue;
                C !== null && (C = C.shared, ci !== null && g.mode & 1 && !(In & 2) ? (g = C.interleaved, g === null ? (y.next = y, Jo === null ? Jo = [
                    C
                ] : Jo.push(C)) : (y.next = g.next, g.next = y), C.interleaved = y) : (g = C.pending, g === null ? y.next = y : (y.next = g.next, g.next = y), C.pending = y));
            }
            function Qm(g, y, C) {
                if (y = y.updateQueue, y !== null && (y = y.shared, (C & 4194240) !== 0)) {
                    var L = y.lanes;
                    L &= g.pendingLanes, C |= L, y.lanes = C, ol(g, C);
                }
            }
            function eg(g, y) {
                var C = g.updateQueue, L = g.alternate;
                if (L !== null && (L = L.updateQueue, C === L)) {
                    var z = null, Q = null;
                    if (C = C.firstBaseUpdate, C !== null) {
                        do {
                            var xe = {
                                eventTime: C.eventTime,
                                lane: C.lane,
                                tag: C.tag,
                                payload: C.payload,
                                callback: C.callback,
                                next: null
                            };
                            Q === null ? z = Q = xe : Q = Q.next = xe, C = C.next;
                        }while (C !== null);
                        Q === null ? z = Q = y : Q = Q.next = y;
                    } else z = Q = y;
                    C = {
                        baseState: L.baseState,
                        firstBaseUpdate: z,
                        lastBaseUpdate: Q,
                        shared: L.shared,
                        effects: L.effects
                    }, g.updateQueue = C;
                    return;
                }
                g = C.lastBaseUpdate, g === null ? C.firstBaseUpdate = y : g.next = y, C.lastBaseUpdate = y;
            }
            function tg(g, y, C, L) {
                var z = g.updateQueue;
                Qo = !1;
                var Q = z.firstBaseUpdate, xe = z.lastBaseUpdate, ke = z.shared.pending;
                if (ke !== null) {
                    z.shared.pending = null;
                    var tt = ke, vt = tt.next;
                    tt.next = null, xe === null ? Q = vt : xe.next = vt, xe = tt;
                    var Ut = g.alternate;
                    Ut !== null && (Ut = Ut.updateQueue, ke = Ut.lastBaseUpdate, ke !== xe && (ke === null ? Ut.firstBaseUpdate = vt : ke.next = vt, Ut.lastBaseUpdate = tt));
                }
                if (Q !== null) {
                    var xn = z.baseState;
                    xe = 0, Ut = vt = tt = null, ke = Q;
                    do {
                        var rn = ke.lane, Pn = ke.eventTime;
                        if ((L & rn) === rn) {
                            Ut !== null && (Ut = Ut.next = {
                                eventTime: Pn,
                                lane: 0,
                                tag: ke.tag,
                                payload: ke.payload,
                                callback: ke.callback,
                                next: null
                            });
                            e: {
                                var Rt = g, ls = ke;
                                switch(rn = y, Pn = C, ls.tag){
                                    case 1:
                                        if (Rt = ls.payload, typeof Rt == "function") {
                                            xn = Rt.call(Pn, xn, rn);
                                            break e;
                                        }
                                        xn = Rt;
                                        break e;
                                    case 3:
                                        Rt.flags = Rt.flags & -65537 | 128;
                                    case 0:
                                        if (Rt = ls.payload, rn = typeof Rt == "function" ? Rt.call(Pn, xn, rn) : Rt, rn == null) break e;
                                        xn = s({}, xn, rn);
                                        break e;
                                    case 2:
                                        Qo = !0;
                                }
                            }
                            ke.callback !== null && ke.lane !== 0 && (g.flags |= 64, rn = z.effects, rn === null ? z.effects = [
                                ke
                            ] : rn.push(ke));
                        } else Pn = {
                            eventTime: Pn,
                            lane: rn,
                            tag: ke.tag,
                            payload: ke.payload,
                            callback: ke.callback,
                            next: null
                        }, Ut === null ? (vt = Ut = Pn, tt = xn) : Ut = Ut.next = Pn, xe |= rn;
                        if (ke = ke.next, ke === null) {
                            if (ke = z.shared.pending, ke === null) break;
                            rn = ke, ke = rn.next, rn.next = null, z.lastBaseUpdate = rn, z.shared.pending = null;
                        }
                    }while (!0);
                    if (Ut === null && (tt = xn), z.baseState = tt, z.firstBaseUpdate = vt, z.lastBaseUpdate = Ut, y = z.shared.interleaved, y !== null) {
                        z = y;
                        do xe |= z.lane, z = z.next;
                        while (z !== y);
                    } else Q === null && (z.shared.lanes = 0);
                    dl |= xe, g.lanes = xe, g.memoizedState = xn;
                }
            }
            function a_(g, y, C) {
                if (g = y.effects, y.effects = null, g !== null) for(y = 0; y < g.length; y++){
                    var L = g[y], z = L.callback;
                    if (z !== null) {
                        if (L.callback = null, L = C, typeof z != "function") throw Error(o(191, z));
                        z.call(L);
                    }
                }
            }
            var l_ = new r.Component().refs;
            function Jy(g, y, C, L) {
                y = g.memoizedState, C = C(L, y), C = C == null ? y : s({}, y, C), g.memoizedState = C, g.lanes === 0 && (g.updateQueue.baseState = C);
            }
            var ng = {
                isMounted: function(g) {
                    return (g = g._reactInternals) ? R(g) === g : !1;
                },
                enqueueSetState: function(g, y, C) {
                    g = g._reactInternals;
                    var L = nr(), z = La(g), Q = Dl(L, z);
                    Q.payload = y, C != null && (Q.callback = C), Nc(g, Q), y = vs(g, z, L), y !== null && Qm(y, g, z);
                },
                enqueueReplaceState: function(g, y, C) {
                    g = g._reactInternals;
                    var L = nr(), z = La(g), Q = Dl(L, z);
                    Q.tag = 1, Q.payload = y, C != null && (Q.callback = C), Nc(g, Q), y = vs(g, z, L), y !== null && Qm(y, g, z);
                },
                enqueueForceUpdate: function(g, y) {
                    g = g._reactInternals;
                    var C = nr(), L = La(g), z = Dl(C, L);
                    z.tag = 2, y != null && (z.callback = y), Nc(g, z), y = vs(g, L, C), y !== null && Qm(y, g, L);
                }
            };
            function Qy(g, y, C, L, z, Q, xe) {
                return g = g.stateNode, typeof g.shouldComponentUpdate == "function" ? g.shouldComponentUpdate(L, Q, xe) : y.prototype && y.prototype.isPureReactComponent ? !Ia(C, L) || !Ia(z, Q) : !0;
            }
            function c_(g, y, C) {
                var L = !1, z = on, Q = y.contextType;
                return typeof Q == "object" && Q !== null ? Q = Ks(Q) : (z = $n(y) ? Mn : Fn.current, L = y.contextTypes, Q = (L = L != null) ? Vt(g, z) : on), y = new y(C, Q), g.memoizedState = y.state !== null && y.state !== void 0 ? y.state : null, y.updater = ng, g.stateNode = y, y._reactInternals = g, L && (g = g.stateNode, g.__reactInternalMemoizedUnmaskedChildContext = z, g.__reactInternalMemoizedMaskedChildContext = Q), y;
            }
            function u_(g, y, C, L) {
                g = y.state, typeof y.componentWillReceiveProps == "function" && y.componentWillReceiveProps(C, L), typeof y.UNSAFE_componentWillReceiveProps == "function" && y.UNSAFE_componentWillReceiveProps(C, L), y.state !== g && ng.enqueueReplaceState(y, y.state, null);
            }
            function ev(g, y, C, L) {
                var z = g.stateNode;
                z.props = C, z.state = g.memoizedState, z.refs = l_, Zd(g);
                var Q = y.contextType;
                typeof Q == "object" && Q !== null ? z.context = Ks(Q) : (Q = $n(y) ? Mn : Fn.current, z.context = Vt(g, Q)), z.state = g.memoizedState, Q = y.getDerivedStateFromProps, typeof Q == "function" && (Jy(g, y, Q, C), z.state = g.memoizedState), typeof y.getDerivedStateFromProps == "function" || typeof z.getSnapshotBeforeUpdate == "function" || typeof z.UNSAFE_componentWillMount != "function" && typeof z.componentWillMount != "function" || (y = z.state, typeof z.componentWillMount == "function" && z.componentWillMount(), typeof z.UNSAFE_componentWillMount == "function" && z.UNSAFE_componentWillMount(), y !== z.state && ng.enqueueReplaceState(z, z.state, null), tg(g, C, z, L), z.state = g.memoizedState), typeof z.componentDidMount == "function" && (g.flags |= 4194308);
            }
            var Jd = [], Pc = 0, rg = null, ig = 0, ea = [], Mo = 0, Ru = null, Ll = 1, Fl = "";
            function Iu(g, y) {
                Jd[Pc++] = ig, Jd[Pc++] = rg, rg = g, ig = y;
            }
            function d_(g, y, C) {
                ea[Mo++] = Ll, ea[Mo++] = Fl, ea[Mo++] = Ru, Ru = g;
                var L = Ll;
                g = Fl;
                var z = 32 - Gn(L) - 1;
                L &= ~(1 << z), C += 1;
                var Q = 32 - Gn(y) + z;
                if (30 < Q) {
                    var xe = z - z % 5;
                    Q = (L & (1 << xe) - 1).toString(32), L >>= xe, z -= xe, Ll = 1 << 32 - Gn(y) + z | C << z | L, Fl = Q + g;
                } else Ll = 1 << Q | C << z | L, Fl = g;
            }
            function tv(g) {
                g.return !== null && (Iu(g, 1), d_(g, 1, 0));
            }
            function nv(g) {
                for(; g === rg;)rg = Jd[--Pc], Jd[Pc] = null, ig = Jd[--Pc], Jd[Pc] = null;
                for(; g === Ru;)Ru = ea[--Mo], ea[Mo] = null, Fl = ea[--Mo], ea[Mo] = null, Ll = ea[--Mo], ea[Mo] = null;
            }
            var Ns = null, rs = null, Dr = !1, Qd = !1, ta = null;
            function rv(g, y) {
                var C = Po(5, null, null, 0);
                C.elementType = "DELETED", C.stateNode = y, C.return = g, y = g.deletions, y === null ? (g.deletions = [
                    C
                ], g.flags |= 16) : y.push(C);
            }
            function iv(g, y) {
                switch(g.tag){
                    case 5:
                        return y = vn(y, g.type, g.pendingProps), y !== null ? (g.stateNode = y, Ns = g, rs = sl(y), !0) : !1;
                    case 6:
                        return y = $r(y, g.pendingProps), y !== null ? (g.stateNode = y, Ns = g, rs = null, !0) : !1;
                    case 13:
                        if (y = il(y), y !== null) {
                            var C = Ru !== null ? {
                                id: Ll,
                                overflow: Fl
                            } : null;
                            return g.memoizedState = {
                                dehydrated: y,
                                treeContext: C,
                                retryLane: 1073741824
                            }, C = Po(18, null, null, 0), C.stateNode = y, C.return = g, g.child = C, Ns = g, rs = null, !0;
                        }
                        return !1;
                    default:
                        return !1;
                }
            }
            function sg(g) {
                return (g.mode & 1) !== 0 && (g.flags & 128) === 0;
            }
            function kc(g) {
                if (Dr) {
                    var y = rs;
                    if (y) {
                        var C = y;
                        if (!iv(g, y)) {
                            if (sg(g)) throw Error(o(418));
                            y = _o(C);
                            var L = Ns;
                            y && iv(g, y) ? rv(L, C) : (g.flags = g.flags & -4097 | 2, Dr = !1, Ns = g);
                        }
                    } else {
                        if (sg(g)) throw Error(o(418));
                        g.flags = g.flags & -4097 | 2, Dr = !1, Ns = g;
                    }
                }
            }
            function f_(g) {
                for(g = g.return; g !== null && g.tag !== 5 && g.tag !== 3 && g.tag !== 13;)g = g.return;
                Ns = g;
            }
            function zh(g) {
                if (!Me || g !== Ns) return !1;
                if (!Dr) return f_(g), Dr = !0, !1;
                if (g.tag !== 3 && (g.tag !== 5 || fe(g.type) && !ue(g.type, g.memoizedProps))) {
                    var y = rs;
                    if (y) {
                        if (sg(g)) {
                            for(g = rs; g;)g = _o(g);
                            throw Error(o(418));
                        }
                        for(; y;)rv(g, y), y = _o(y);
                    }
                }
                if (f_(g), g.tag === 13) {
                    if (!Me) throw Error(o(316));
                    if (g = g.memoizedState, g = g !== null ? g.dehydrated : null, !g) throw Error(o(317));
                    rs = qd(g);
                } else rs = Ns ? _o(g.stateNode) : null;
                return !0;
            }
            function ef() {
                Me && (rs = Ns = null, Qd = Dr = !1);
            }
            function og(g) {
                ta === null ? ta = [
                    g
                ] : ta.push(g);
            }
            function tf(g, y, C) {
                if (g = C.ref, g !== null && typeof g != "function" && typeof g != "object") {
                    if (C._owner) {
                        if (C = C._owner, C) {
                            if (C.tag !== 1) throw Error(o(309));
                            var L = C.stateNode;
                        }
                        if (!L) throw Error(o(147, g));
                        var z = L, Q = "" + g;
                        return y !== null && y.ref !== null && typeof y.ref == "function" && y.ref._stringRef === Q ? y.ref : (y = function(xe) {
                            var ke = z.refs;
                            ke === l_ && (ke = z.refs = {}), xe === null ? delete ke[Q] : ke[Q] = xe;
                        }, y._stringRef = Q, y);
                    }
                    if (typeof g != "string") throw Error(o(284));
                    if (!C._owner) throw Error(o(290, g));
                }
                return g;
            }
            function Oc(g, y) {
                throw g = Object.prototype.toString.call(y), Error(o(31, g === "[object Object]" ? "object with keys {" + Object.keys(y).join(", ") + "}" : g));
            }
            function nf(g) {
                var y = g._init;
                return y(g._payload);
            }
            function h_(g) {
                function y(He, Le) {
                    if (g) {
                        var Qe = He.deletions;
                        Qe === null ? (He.deletions = [
                            Le
                        ], He.flags |= 16) : Qe.push(Le);
                    }
                }
                function C(He, Le) {
                    if (!g) return null;
                    for(; Le !== null;)y(He, Le), Le = Le.sibling;
                    return null;
                }
                function L(He, Le) {
                    for(He = new Map; Le !== null;)Le.key !== null ? He.set(Le.key, Le) : He.set(Le.index, Le), Le = Le.sibling;
                    return He;
                }
                function z(He, Le) {
                    return He = Zl(He, Le), He.index = 0, He.sibling = null, He;
                }
                function Q(He, Le, Qe) {
                    return He.index = Qe, g ? (Qe = He.alternate, Qe !== null ? (Qe = Qe.index, Qe < Le ? (He.flags |= 2, Le) : Qe) : (He.flags |= 2, Le)) : (He.flags |= 1048576, Le);
                }
                function xe(He) {
                    return g && He.alternate === null && (He.flags |= 2), He;
                }
                function ke(He, Le, Qe, Et) {
                    return Le === null || Le.tag !== 6 ? (Le = kg(Qe, He.mode, Et), Le.return = He, Le) : (Le = z(Le, Qe), Le.return = He, Le);
                }
                function tt(He, Le, Qe, Et) {
                    var Kt = Qe.type;
                    return Kt === u ? Ut(He, Le, Qe.props.children, Et, Qe.key) : Le !== null && (Le.elementType === Kt || typeof Kt == "object" && Kt !== null && Kt.$$typeof === E && nf(Kt) === Le.type) ? (Et = z(Le, Qe.props), Et.ref = tf(He, Le, Qe), Et.return = He, Et) : (Et = Pg(Qe.type, Qe.key, Qe.props, null, He.mode, Et), Et.ref = tf(He, Le, Qe), Et.return = He, Et);
                }
                function vt(He, Le, Qe, Et) {
                    return Le === null || Le.tag !== 4 || Le.stateNode.containerInfo !== Qe.containerInfo || Le.stateNode.implementation !== Qe.implementation ? (Le = Og(Qe, He.mode, Et), Le.return = He, Le) : (Le = z(Le, Qe.children || []), Le.return = He, Le);
                }
                function Ut(He, Le, Qe, Et, Kt) {
                    return Le === null || Le.tag !== 7 ? (Le = Zu(Qe, He.mode, Et, Kt), Le.return = He, Le) : (Le = z(Le, Qe), Le.return = He, Le);
                }
                function xn(He, Le, Qe) {
                    if (typeof Le == "string" && Le !== "" || typeof Le == "number") return Le = kg("" + Le, He.mode, Qe), Le.return = He, Le;
                    if (typeof Le == "object" && Le !== null) {
                        switch(Le.$$typeof){
                            case l:
                                return Qe = Pg(Le.type, Le.key, Le.props, null, He.mode, Qe), Qe.ref = tf(He, null, Le), Qe.return = He, Qe;
                            case c:
                                return Le = Og(Le, He.mode, Qe), Le.return = He, Le;
                            case E:
                                var Et = Le._init;
                                return xn(He, Et(Le._payload), Qe);
                        }
                        if (K(Le) || A(Le)) return Le = Zu(Le, He.mode, Qe, null), Le.return = He, Le;
                        Oc(He, Le);
                    }
                    return null;
                }
                function rn(He, Le, Qe, Et) {
                    var Kt = Le !== null ? Le.key : null;
                    if (typeof Qe == "string" && Qe !== "" || typeof Qe == "number") return Kt !== null ? null : ke(He, Le, "" + Qe, Et);
                    if (typeof Qe == "object" && Qe !== null) {
                        switch(Qe.$$typeof){
                            case l:
                                return Qe.key === Kt ? tt(He, Le, Qe, Et) : null;
                            case c:
                                return Qe.key === Kt ? vt(He, Le, Qe, Et) : null;
                            case E:
                                return Kt = Qe._init, rn(He, Le, Kt(Qe._payload), Et);
                        }
                        if (K(Qe) || A(Qe)) return Kt !== null ? null : Ut(He, Le, Qe, Et, null);
                        Oc(He, Qe);
                    }
                    return null;
                }
                function Pn(He, Le, Qe, Et, Kt) {
                    if (typeof Et == "string" && Et !== "" || typeof Et == "number") return He = He.get(Qe) || null, ke(Le, He, "" + Et, Kt);
                    if (typeof Et == "object" && Et !== null) {
                        switch(Et.$$typeof){
                            case l:
                                return He = He.get(Et.key === null ? Qe : Et.key) || null, tt(Le, He, Et, Kt);
                            case c:
                                return He = He.get(Et.key === null ? Qe : Et.key) || null, vt(Le, He, Et, Kt);
                            case E:
                                var Tn = Et._init;
                                return Pn(He, Le, Qe, Tn(Et._payload), Kt);
                        }
                        if (K(Et) || A(Et)) return He = He.get(Qe) || null, Ut(Le, He, Et, Kt, null);
                        Oc(Le, Et);
                    }
                    return null;
                }
                function Rt(He, Le, Qe, Et) {
                    for(var Kt = null, Tn = null, bn = Le, Qn = Le = 0, mi = null; bn !== null && Qn < Qe.length; Qn++){
                        bn.index > Qn ? (mi = bn, bn = null) : mi = bn.sibling;
                        var Zn = rn(He, bn, Qe[Qn], Et);
                        if (Zn === null) {
                            bn === null && (bn = mi);
                            break;
                        }
                        g && bn && Zn.alternate === null && y(He, bn), Le = Q(Zn, Le, Qn), Tn === null ? Kt = Zn : Tn.sibling = Zn, Tn = Zn, bn = mi;
                    }
                    if (Qn === Qe.length) return C(He, bn), Dr && Iu(He, Qn), Kt;
                    if (bn === null) {
                        for(; Qn < Qe.length; Qn++)bn = xn(He, Qe[Qn], Et), bn !== null && (Le = Q(bn, Le, Qn), Tn === null ? Kt = bn : Tn.sibling = bn, Tn = bn);
                        return Dr && Iu(He, Qn), Kt;
                    }
                    for(bn = L(He, bn); Qn < Qe.length; Qn++)mi = Pn(bn, He, Qn, Qe[Qn], Et), mi !== null && (g && mi.alternate !== null && bn.delete(mi.key === null ? Qn : mi.key), Le = Q(mi, Le, Qn), Tn === null ? Kt = mi : Tn.sibling = mi, Tn = mi);
                    return g && bn.forEach(function(Jl) {
                        return y(He, Jl);
                    }), Dr && Iu(He, Qn), Kt;
                }
                function ls(He, Le, Qe, Et) {
                    var Kt = A(Qe);
                    if (typeof Kt != "function") throw Error(o(150));
                    if (Qe = Kt.call(Qe), Qe == null) throw Error(o(151));
                    for(var Tn = Kt = null, bn = Le, Qn = Le = 0, mi = null, Zn = Qe.next(); bn !== null && !Zn.done; Qn++, Zn = Qe.next()){
                        bn.index > Qn ? (mi = bn, bn = null) : mi = bn.sibling;
                        var Jl = rn(He, bn, Zn.value, Et);
                        if (Jl === null) {
                            bn === null && (bn = mi);
                            break;
                        }
                        g && bn && Jl.alternate === null && y(He, bn), Le = Q(Jl, Le, Qn), Tn === null ? Kt = Jl : Tn.sibling = Jl, Tn = Jl, bn = mi;
                    }
                    if (Zn.done) return C(He, bn), Dr && Iu(He, Qn), Kt;
                    if (bn === null) {
                        for(; !Zn.done; Qn++, Zn = Qe.next())Zn = xn(He, Zn.value, Et), Zn !== null && (Le = Q(Zn, Le, Qn), Tn === null ? Kt = Zn : Tn.sibling = Zn, Tn = Zn);
                        return Dr && Iu(He, Qn), Kt;
                    }
                    for(bn = L(He, bn); !Zn.done; Qn++, Zn = Qe.next())Zn = Pn(bn, He, Qn, Zn.value, Et), Zn !== null && (g && Zn.alternate !== null && bn.delete(Zn.key === null ? Qn : Zn.key), Le = Q(Zn, Le, Qn), Tn === null ? Kt = Zn : Tn.sibling = Zn, Tn = Zn);
                    return g && bn.forEach(function(Dv) {
                        return y(He, Dv);
                    }), Dr && Iu(He, Qn), Kt;
                }
                function ko(He, Le, Qe, Et) {
                    if (typeof Qe == "object" && Qe !== null && Qe.type === u && Qe.key === null && (Qe = Qe.props.children), typeof Qe == "object" && Qe !== null) {
                        switch(Qe.$$typeof){
                            case l:
                                e: {
                                    for(var Kt = Qe.key, Tn = Le; Tn !== null;){
                                        if (Tn.key === Kt) {
                                            if (Kt = Qe.type, Kt === u) {
                                                if (Tn.tag === 7) {
                                                    C(He, Tn.sibling), Le = z(Tn, Qe.props.children), Le.return = He, He = Le;
                                                    break e;
                                                }
                                            } else if (Tn.elementType === Kt || typeof Kt == "object" && Kt !== null && Kt.$$typeof === E && nf(Kt) === Tn.type) {
                                                C(He, Tn.sibling), Le = z(Tn, Qe.props), Le.ref = tf(He, Tn, Qe), Le.return = He, He = Le;
                                                break e;
                                            }
                                            C(He, Tn);
                                            break;
                                        } else y(He, Tn);
                                        Tn = Tn.sibling;
                                    }
                                    Qe.type === u ? (Le = Zu(Qe.props.children, He.mode, Et, Qe.key), Le.return = He, He = Le) : (Et = Pg(Qe.type, Qe.key, Qe.props, null, He.mode, Et), Et.ref = tf(He, Le, Qe), Et.return = He, He = Et);
                                }
                                return xe(He);
                            case c:
                                e: {
                                    for(Tn = Qe.key; Le !== null;){
                                        if (Le.key === Tn) if (Le.tag === 4 && Le.stateNode.containerInfo === Qe.containerInfo && Le.stateNode.implementation === Qe.implementation) {
                                            C(He, Le.sibling), Le = z(Le, Qe.children || []), Le.return = He, He = Le;
                                            break e;
                                        } else {
                                            C(He, Le);
                                            break;
                                        }
                                        else y(He, Le);
                                        Le = Le.sibling;
                                    }
                                    Le = Og(Qe, He.mode, Et), Le.return = He, He = Le;
                                }
                                return xe(He);
                            case E:
                                return Tn = Qe._init, ko(He, Le, Tn(Qe._payload), Et);
                        }
                        if (K(Qe)) return Rt(He, Le, Qe, Et);
                        if (A(Qe)) return ls(He, Le, Qe, Et);
                        Oc(He, Qe);
                    }
                    return typeof Qe == "string" && Qe !== "" || typeof Qe == "number" ? (Qe = "" + Qe, Le !== null && Le.tag === 6 ? (C(He, Le.sibling), Le = z(Le, Qe), Le.return = He, He = Le) : (C(He, Le), Le = kg(Qe, He.mode, Et), Le.return = He, He = Le), xe(He)) : C(He, Le);
                }
                return ko;
            }
            var jl = h_(!0), p_ = h_(!1), rf = {}, Ys = Zt(rf), Au = Zt(rf), Nu = Zt(rf);
            function Aa(g) {
                if (g === rf) throw Error(o(174));
                return g;
            }
            function ag(g, y) {
                qt(Nu, y), qt(Au, g), qt(Ys, rf), g = ee(y), yt(Ys), qt(Ys, g);
            }
            function sf() {
                yt(Ys), yt(Au), yt(Nu);
            }
            function m_(g) {
                var y = Aa(Nu.current), C = Aa(Ys.current);
                y = W(C, g.type, y), C !== y && (qt(Au, g), qt(Ys, y));
            }
            function sv(g) {
                Au.current === g && (yt(Ys), yt(Au));
            }
            var Gr = Zt(0);
            function lg(g) {
                for(var y = g; y !== null;){
                    if (y.tag === 13) {
                        var C = y.memoizedState;
                        if (C !== null && (C = C.dehydrated, C === null || Ko(C) || wo(C))) return y;
                    } else if (y.tag === 19 && y.memoizedProps.revealOrder !== void 0) {
                        if (y.flags & 128) return y;
                    } else if (y.child !== null) {
                        y.child.return = y, y = y.child;
                        continue;
                    }
                    if (y === g) break;
                    for(; y.sibling === null;){
                        if (y.return === null || y.return === g) return null;
                        y = y.return;
                    }
                    y.sibling.return = y.return, y = y.sibling;
                }
                return null;
            }
            var To = [];
            function Pu() {
                for(var g = 0; g < To.length; g++){
                    var y = To[g];
                    Re ? y._workInProgressVersionPrimary = null : y._workInProgressVersionSecondary = null;
                }
                To.length = 0;
            }
            var Vh = a.ReactCurrentDispatcher, Co = a.ReactCurrentBatchConfig, ku = 0, Xr = null, zi = null, Vi = null, cg = !1, ll = !1, Ou = 0, Wh = 0;
            function Wi() {
                throw Error(o(321));
            }
            function ug(g, y) {
                if (y === null) return !1;
                for(var C = 0; C < y.length && C < g.length; C++)if (!Is(g[C], y[C])) return !1;
                return !0;
            }
            function of(g, y, C, L, z, Q) {
                if (ku = Q, Xr = y, y.memoizedState = null, y.updateQueue = null, y.lanes = 0, Vh.current = g === null || g.memoizedState === null ? dv : fv, g = C(L, z), ll) {
                    Q = 0;
                    do {
                        if (ll = !1, Ou = 0, 25 <= Q) throw Error(o(301));
                        Q += 1, Vi = zi = null, y.updateQueue = null, Vh.current = hv, g = C(L, z);
                    }while (ll);
                }
                if (Vh.current = uf, y = zi !== null && zi.next !== null, ku = 0, Vi = zi = Xr = null, cg = !1, y) throw Error(o(300));
                return g;
            }
            function Dc() {
                var g = Ou !== 0;
                return Ou = 0, g;
            }
            function Na() {
                var g = {
                    memoizedState: null,
                    baseState: null,
                    baseQueue: null,
                    queue: null,
                    next: null
                };
                return Vi === null ? Xr.memoizedState = Vi = g : Vi = Vi.next = g, Vi;
            }
            function Pa() {
                if (zi === null) {
                    var g = Xr.alternate;
                    g = g !== null ? g.memoizedState : null;
                } else g = zi.next;
                var y = Vi === null ? Xr.memoizedState : Vi.next;
                if (y !== null) Vi = y, zi = g;
                else {
                    if (g === null) throw Error(o(310));
                    zi = g, g = {
                        memoizedState: zi.memoizedState,
                        baseState: zi.baseState,
                        baseQueue: zi.baseQueue,
                        queue: zi.queue,
                        next: null
                    }, Vi === null ? Xr.memoizedState = Vi = g : Vi = Vi.next = g;
                }
                return Vi;
            }
            function cl(g, y) {
                return typeof y == "function" ? y(g) : y;
            }
            function qh(g) {
                var y = Pa(), C = y.queue;
                if (C === null) throw Error(o(311));
                C.lastRenderedReducer = g;
                var L = zi, z = L.baseQueue, Q = C.pending;
                if (Q !== null) {
                    if (z !== null) {
                        var xe = z.next;
                        z.next = Q.next, Q.next = xe;
                    }
                    L.baseQueue = z = Q, C.pending = null;
                }
                if (z !== null) {
                    Q = z.next, L = L.baseState;
                    var ke = xe = null, tt = null, vt = Q;
                    do {
                        var Ut = vt.lane;
                        if ((ku & Ut) === Ut) tt !== null && (tt = tt.next = {
                            lane: 0,
                            action: vt.action,
                            hasEagerState: vt.hasEagerState,
                            eagerState: vt.eagerState,
                            next: null
                        }), L = vt.hasEagerState ? vt.eagerState : g(L, vt.action);
                        else {
                            var xn = {
                                lane: Ut,
                                action: vt.action,
                                hasEagerState: vt.hasEagerState,
                                eagerState: vt.eagerState,
                                next: null
                            };
                            tt === null ? (ke = tt = xn, xe = L) : tt = tt.next = xn, Xr.lanes |= Ut, dl |= Ut;
                        }
                        vt = vt.next;
                    }while (vt !== null && vt !== Q);
                    tt === null ? xe = L : tt.next = ke, Is(L, y.memoizedState) || (qi = !0), y.memoizedState = L, y.baseState = xe, y.baseQueue = tt, C.lastRenderedState = L;
                }
                if (g = C.interleaved, g !== null) {
                    z = g;
                    do Q = z.lane, Xr.lanes |= Q, dl |= Q, z = z.next;
                    while (z !== g);
                } else z === null && (C.lanes = 0);
                return [
                    y.memoizedState,
                    C.dispatch
                ];
            }
            function Hh(g) {
                var y = Pa(), C = y.queue;
                if (C === null) throw Error(o(311));
                C.lastRenderedReducer = g;
                var L = C.dispatch, z = C.pending, Q = y.memoizedState;
                if (z !== null) {
                    C.pending = null;
                    var xe = z = z.next;
                    do Q = g(Q, xe.action), xe = xe.next;
                    while (xe !== z);
                    Is(Q, y.memoizedState) || (qi = !0), y.memoizedState = Q, y.baseQueue === null && (y.baseState = Q), C.lastRenderedState = Q;
                }
                return [
                    Q,
                    L
                ];
            }
            function ov() {}
            function av(g, y) {
                var C = Xr, L = Pa(), z = y(), Q = !Is(L.memoizedState, z);
                if (Q && (L.memoizedState = z, qi = !0), L = L.queue, af(Bl.bind(null, C, L, g), [
                    g
                ]), L.getSnapshot !== y || Q || Vi !== null && Vi.memoizedState.tag & 1) {
                    if (C.flags |= 2048, Gh(9, cv.bind(null, C, L, z, y), void 0, null), ci === null) throw Error(o(349));
                    ku & 30 || lv(C, y, z);
                }
                return z;
            }
            function lv(g, y, C) {
                g.flags |= 16384, g = {
                    getSnapshot: y,
                    value: C
                }, y = Xr.updateQueue, y === null ? (y = {
                    lastEffect: null,
                    stores: null
                }, Xr.updateQueue = y, y.stores = [
                    g
                ]) : (C = y.stores, C === null ? y.stores = [
                    g
                ] : C.push(g));
            }
            function cv(g, y, C, L) {
                y.value = C, y.getSnapshot = L, dg(y) && vs(g, 1, -1);
            }
            function Bl(g, y, C) {
                return C(function() {
                    dg(y) && vs(g, 1, -1);
                });
            }
            function dg(g) {
                var y = g.getSnapshot;
                g = g.value;
                try {
                    var C = y();
                    return !Is(g, C);
                } catch  {
                    return !0;
                }
            }
            function $h(g) {
                var y = Na();
                return typeof g == "function" && (g = g()), y.memoizedState = y.baseState = g, g = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: cl,
                    lastRenderedState: g
                }, y.queue = g, g = g.dispatch = Y2.bind(null, Xr, g), [
                    y.memoizedState,
                    g
                ];
            }
            function Gh(g, y, C, L) {
                return g = {
                    tag: g,
                    create: y,
                    destroy: C,
                    deps: L,
                    next: null
                }, y = Xr.updateQueue, y === null ? (y = {
                    lastEffect: null,
                    stores: null
                }, Xr.updateQueue = y, y.lastEffect = g.next = g) : (C = y.lastEffect, C === null ? y.lastEffect = g.next = g : (L = C.next, C.next = g, g.next = L, y.lastEffect = g)), g;
            }
            function g_() {
                return Pa().memoizedState;
            }
            function Lc(g, y, C, L) {
                var z = Na();
                Xr.flags |= g, z.memoizedState = Gh(1 | y, C, void 0, L === void 0 ? null : L);
            }
            function fg(g, y, C, L) {
                var z = Pa();
                L = L === void 0 ? null : L;
                var Q = void 0;
                if (zi !== null) {
                    var xe = zi.memoizedState;
                    if (Q = xe.destroy, L !== null && ug(L, xe.deps)) {
                        z.memoizedState = Gh(y, C, Q, L);
                        return;
                    }
                }
                Xr.flags |= g, z.memoizedState = Gh(1 | y, C, Q, L);
            }
            function hg(g, y) {
                return Lc(8390656, 8, g, y);
            }
            function af(g, y) {
                return fg(2048, 8, g, y);
            }
            function wr(g, y) {
                return fg(4, 2, g, y);
            }
            function pg(g, y) {
                return fg(4, 4, g, y);
            }
            function Xh(g, y) {
                if (typeof y == "function") return g = g(), y(g), function() {
                    y(null);
                };
                if (y != null) return g = g(), y.current = g, function() {
                    y.current = null;
                };
            }
            function lf(g, y, C) {
                return C = C != null ? C.concat([
                    g
                ]) : null, fg(4, 4, Xh.bind(null, y, g), C);
            }
            function mg() {}
            function gg(g, y) {
                var C = Pa();
                y = y === void 0 ? null : y;
                var L = C.memoizedState;
                return L !== null && y !== null && ug(y, L[1]) ? L[0] : (C.memoizedState = [
                    g,
                    y
                ], g);
            }
            function cf(g, y) {
                var C = Pa();
                y = y === void 0 ? null : y;
                var L = C.memoizedState;
                return L !== null && y !== null && ug(y, L[1]) ? L[0] : (g = g(), C.memoizedState = [
                    g,
                    y
                ], g);
            }
            function yg(g, y) {
                var C = Bn;
                Bn = C !== 0 && 4 > C ? C : 4, g(!0);
                var L = Co.transition;
                Co.transition = {};
                try {
                    g(!1), y();
                } finally{
                    Bn = C, Co.transition = L;
                }
            }
            function Du() {
                return Pa().memoizedState;
            }
            function y_(g, y, C) {
                var L = La(g);
                C = {
                    lane: L,
                    action: C,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                }, v_(g) ? uv(y, C) : (Kh(g, y, C), C = nr(), g = vs(g, L, C), g !== null && Yh(g, y, L));
            }
            function Y2(g, y, C) {
                var L = La(g), z = {
                    lane: L,
                    action: C,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                };
                if (v_(g)) uv(y, z);
                else {
                    Kh(g, y, z);
                    var Q = g.alternate;
                    if (g.lanes === 0 && (Q === null || Q.lanes === 0) && (Q = y.lastRenderedReducer, Q !== null)) try {
                        var xe = y.lastRenderedState, ke = Q(xe, C);
                        if (z.hasEagerState = !0, z.eagerState = ke, Is(ke, xe)) return;
                    } catch  {} finally{}
                    C = nr(), g = vs(g, L, C), g !== null && Yh(g, y, L);
                }
            }
            function v_(g) {
                var y = g.alternate;
                return g === Xr || y !== null && y === Xr;
            }
            function uv(g, y) {
                ll = cg = !0;
                var C = g.pending;
                C === null ? y.next = y : (y.next = C.next, C.next = y), g.pending = y;
            }
            function Kh(g, y, C) {
                ci !== null && g.mode & 1 && !(In & 2) ? (g = y.interleaved, g === null ? (C.next = C, Jo === null ? Jo = [
                    y
                ] : Jo.push(y)) : (C.next = g.next, g.next = C), y.interleaved = C) : (g = y.pending, g === null ? C.next = C : (C.next = g.next, g.next = C), y.pending = C);
            }
            function Yh(g, y, C) {
                if (C & 4194240) {
                    var L = y.lanes;
                    L &= g.pendingLanes, C |= L, y.lanes = C, ol(g, C);
                }
            }
            var uf = {
                readContext: Ks,
                useCallback: Wi,
                useContext: Wi,
                useEffect: Wi,
                useImperativeHandle: Wi,
                useInsertionEffect: Wi,
                useLayoutEffect: Wi,
                useMemo: Wi,
                useReducer: Wi,
                useRef: Wi,
                useState: Wi,
                useDebugValue: Wi,
                useDeferredValue: Wi,
                useTransition: Wi,
                useMutableSource: Wi,
                useSyncExternalStore: Wi,
                useId: Wi,
                unstable_isNewReconciler: !1
            }, dv = {
                readContext: Ks,
                useCallback: function(g, y) {
                    return Na().memoizedState = [
                        g,
                        y === void 0 ? null : y
                    ], g;
                },
                useContext: Ks,
                useEffect: hg,
                useImperativeHandle: function(g, y, C) {
                    return C = C != null ? C.concat([
                        g
                    ]) : null, Lc(4194308, 4, Xh.bind(null, y, g), C);
                },
                useLayoutEffect: function(g, y) {
                    return Lc(4194308, 4, g, y);
                },
                useInsertionEffect: function(g, y) {
                    return Lc(4, 2, g, y);
                },
                useMemo: function(g, y) {
                    var C = Na();
                    return y = y === void 0 ? null : y, g = g(), C.memoizedState = [
                        g,
                        y
                    ], g;
                },
                useReducer: function(g, y, C) {
                    var L = Na();
                    return y = C !== void 0 ? C(y) : y, L.memoizedState = L.baseState = y, g = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: g,
                        lastRenderedState: y
                    }, L.queue = g, g = g.dispatch = y_.bind(null, Xr, g), [
                        L.memoizedState,
                        g
                    ];
                },
                useRef: function(g) {
                    var y = Na();
                    return g = {
                        current: g
                    }, y.memoizedState = g;
                },
                useState: $h,
                useDebugValue: mg,
                useDeferredValue: function(g) {
                    var y = $h(g), C = y[0], L = y[1];
                    return hg(function() {
                        var z = Co.transition;
                        Co.transition = {};
                        try {
                            L(g);
                        } finally{
                            Co.transition = z;
                        }
                    }, [
                        g
                    ]), C;
                },
                useTransition: function() {
                    var g = $h(!1), y = g[0];
                    return g = yg.bind(null, g[1]), Na().memoizedState = g, [
                        y,
                        g
                    ];
                },
                useMutableSource: function() {},
                useSyncExternalStore: function(g, y, C) {
                    var L = Xr, z = Na();
                    if (Dr) {
                        if (C === void 0) throw Error(o(407));
                        C = C();
                    } else {
                        if (C = y(), ci === null) throw Error(o(349));
                        ku & 30 || lv(L, y, C);
                    }
                    z.memoizedState = C;
                    var Q = {
                        value: C,
                        getSnapshot: y
                    };
                    return z.queue = Q, hg(Bl.bind(null, L, Q, g), [
                        g
                    ]), L.flags |= 2048, Gh(9, cv.bind(null, L, Q, C, y), void 0, null), C;
                },
                useId: function() {
                    var g = Na(), y = ci.identifierPrefix;
                    if (Dr) {
                        var C = Fl, L = Ll;
                        C = (L & ~(1 << 32 - Gn(L) - 1)).toString(32) + C, y = ":" + y + "R" + C, C = Ou++, 0 < C && (y += "H" + C.toString(32)), y += ":";
                    } else C = Wh++, y = ":" + y + "r" + C.toString(32) + ":";
                    return g.memoizedState = y;
                },
                unstable_isNewReconciler: !1
            }, fv = {
                readContext: Ks,
                useCallback: gg,
                useContext: Ks,
                useEffect: af,
                useImperativeHandle: lf,
                useInsertionEffect: wr,
                useLayoutEffect: pg,
                useMemo: cf,
                useReducer: qh,
                useRef: g_,
                useState: function() {
                    return qh(cl);
                },
                useDebugValue: mg,
                useDeferredValue: function(g) {
                    var y = qh(cl), C = y[0], L = y[1];
                    return af(function() {
                        var z = Co.transition;
                        Co.transition = {};
                        try {
                            L(g);
                        } finally{
                            Co.transition = z;
                        }
                    }, [
                        g
                    ]), C;
                },
                useTransition: function() {
                    var g = qh(cl)[0], y = Pa().memoizedState;
                    return [
                        g,
                        y
                    ];
                },
                useMutableSource: ov,
                useSyncExternalStore: av,
                useId: Du,
                unstable_isNewReconciler: !1
            }, hv = {
                readContext: Ks,
                useCallback: gg,
                useContext: Ks,
                useEffect: af,
                useImperativeHandle: lf,
                useInsertionEffect: wr,
                useLayoutEffect: pg,
                useMemo: cf,
                useReducer: Hh,
                useRef: g_,
                useState: function() {
                    return Hh(cl);
                },
                useDebugValue: mg,
                useDeferredValue: function(g) {
                    var y = Hh(cl), C = y[0], L = y[1];
                    return af(function() {
                        var z = Co.transition;
                        Co.transition = {};
                        try {
                            L(g);
                        } finally{
                            Co.transition = z;
                        }
                    }, [
                        g
                    ]), C;
                },
                useTransition: function() {
                    var g = Hh(cl)[0], y = Pa().memoizedState;
                    return [
                        g,
                        y
                    ];
                },
                useMutableSource: ov,
                useSyncExternalStore: av,
                useId: Du,
                unstable_isNewReconciler: !1
            };
            function pv(g, y) {
                try {
                    var C = "", L = y;
                    do C += Yy(L), L = L.return;
                    while (L);
                    var z = C;
                } catch (Q) {
                    z = `
Error generating stack: ` + Q.message + `
` + Q.stack;
                }
                return {
                    value: g,
                    source: y,
                    stack: z
                };
            }
            function vg(g, y) {
                try {
                    console.error(y.value);
                } catch (C) {
                    setTimeout(function() {
                        throw C;
                    });
                }
            }
            var Z2 = typeof WeakMap == "function" ? WeakMap : Map;
            function x_(g, y, C) {
                C = Dl(-1, C), C.tag = 3, C.payload = {
                    element: null
                };
                var L = y.value;
                return C.callback = function() {
                    gf || (gf = !0, Ar = L), vg(g, y);
                }, C;
            }
            function xg(g, y, C) {
                C = Dl(-1, C), C.tag = 3;
                var L = g.type.getDerivedStateFromError;
                if (typeof L == "function") {
                    var z = y.value;
                    C.payload = function() {
                        return L(z);
                    }, C.callback = function() {
                        vg(g, y);
                    };
                }
                var Q = g.stateNode;
                return Q !== null && typeof Q.componentDidCatch == "function" && (C.callback = function() {
                    vg(g, y), typeof L != "function" && (Da === null ? Da = new Set([
                        this
                    ]) : Da.add(this));
                    var xe = y.stack;
                    this.componentDidCatch(y.value, {
                        componentStack: xe !== null ? xe : ""
                    });
                }), C;
            }
            function Ul(g, y, C) {
                var L = g.pingCache;
                if (L === null) {
                    L = g.pingCache = new Z2;
                    var z = new Set;
                    L.set(y, z);
                } else z = L.get(y), z === void 0 && (z = new Set, L.set(y, z));
                z.has(C) || (z.add(C), g = Pv.bind(null, g, y, C), y.then(g, g));
            }
            function mv(g) {
                do {
                    var y;
                    if ((y = g.tag === 13) && (y = g.memoizedState, y = y !== null ? y.dehydrated !== null : !0), y) return g;
                    g = g.return;
                }while (g !== null);
                return null;
            }
            function Lu(g, y, C, L, z) {
                return g.mode & 1 ? (g.flags |= 65536, g.lanes = z, g) : (g === y ? g.flags |= 65536 : (g.flags |= 128, C.flags |= 131072, C.flags &= -52805, C.tag === 1 && (C.alternate === null ? C.tag = 17 : (y = Dl(-1, 1), y.tag = 2, Nc(C, y))), C.lanes |= 1), g);
            }
            function Ai(g) {
                g.flags |= 4;
            }
            function df(g, y) {
                if (g !== null && g.child === y.child) return !0;
                if (y.flags & 16) return !1;
                for(g = y.child; g !== null;){
                    if (g.flags & 12854 || g.subtreeFlags & 12854) return !1;
                    g = g.sibling;
                }
                return !0;
            }
            var Ro, Fu, bg, wg;
            if (Fe) Ro = function(g, y) {
                for(var C = y.child; C !== null;){
                    if (C.tag === 5 || C.tag === 6) se(g, C.stateNode);
                    else if (C.tag !== 4 && C.child !== null) {
                        C.child.return = C, C = C.child;
                        continue;
                    }
                    if (C === y) break;
                    for(; C.sibling === null;){
                        if (C.return === null || C.return === y) return;
                        C = C.return;
                    }
                    C.sibling.return = C.return, C = C.sibling;
                }
            }, Fu = function() {}, bg = function(g, y, C, L, z) {
                if (g = g.memoizedProps, g !== L) {
                    var Q = y.stateNode, xe = Aa(Ys.current);
                    C = ne(Q, C, g, L, z, xe), (y.updateQueue = C) && Ai(y);
                }
            }, wg = function(g, y, C, L) {
                C !== L && Ai(y);
            };
            else if (be) {
                Ro = function(g, y, C, L) {
                    for(var z = y.child; z !== null;){
                        if (z.tag === 5) {
                            var Q = z.stateNode;
                            C && L && (Q = wt(Q, z.type, z.memoizedProps, z)), se(g, Q);
                        } else if (z.tag === 6) Q = z.stateNode, C && L && (Q = Ln(Q, z.memoizedProps, z)), se(g, Q);
                        else if (z.tag !== 4) {
                            if (z.tag === 22 && z.memoizedState !== null) Q = z.child, Q !== null && (Q.return = z), Ro(g, z, !0, !0);
                            else if (z.child !== null) {
                                z.child.return = z, z = z.child;
                                continue;
                            }
                        }
                        if (z === y) break;
                        for(; z.sibling === null;){
                            if (z.return === null || z.return === y) return;
                            z = z.return;
                        }
                        z.sibling.return = z.return, z = z.sibling;
                    }
                };
                var Fc = function(g, y, C, L) {
                    for(var z = y.child; z !== null;){
                        if (z.tag === 5) {
                            var Q = z.stateNode;
                            C && L && (Q = wt(Q, z.type, z.memoizedProps, z)), pt(g, Q);
                        } else if (z.tag === 6) Q = z.stateNode, C && L && (Q = Ln(Q, z.memoizedProps, z)), pt(g, Q);
                        else if (z.tag !== 4) {
                            if (z.tag === 22 && z.memoizedState !== null) Q = z.child, Q !== null && (Q.return = z), Fc(g, z, !0, !0);
                            else if (z.child !== null) {
                                z.child.return = z, z = z.child;
                                continue;
                            }
                        }
                        if (z === y) break;
                        for(; z.sibling === null;){
                            if (z.return === null || z.return === y) return;
                            z = z.return;
                        }
                        z.sibling.return = z.return, z = z.sibling;
                    }
                };
                Fu = function(g, y) {
                    var C = y.stateNode;
                    if (!df(g, y)) {
                        g = C.containerInfo;
                        var L = it(g);
                        Fc(L, y, !1, !1), C.pendingChildren = L, Ai(y), Pt(g, L);
                    }
                }, bg = function(g, y, C, L, z) {
                    var Q = g.stateNode, xe = g.memoizedProps;
                    if ((g = df(g, y)) && xe === L) y.stateNode = Q;
                    else {
                        var ke = y.stateNode, tt = Aa(Ys.current), vt = null;
                        xe !== L && (vt = ne(ke, C, xe, L, z, tt)), g && vt === null ? y.stateNode = Q : (Q = We(Q, vt, C, xe, L, y, g, ke), le(Q, C, L, z, tt) && Ai(y), y.stateNode = Q, g ? Ai(y) : Ro(Q, y, !1, !1));
                    }
                }, wg = function(g, y, C, L) {
                    C !== L ? (g = Aa(Nu.current), C = Aa(Ys.current), y.stateNode = ge(L, g, C, y), Ai(y)) : y.stateNode = g.stateNode;
                };
            } else Fu = function() {}, bg = function() {}, wg = function() {};
            function zl(g, y) {
                if (!Dr) switch(g.tailMode){
                    case "hidden":
                        y = g.tail;
                        for(var C = null; y !== null;)y.alternate !== null && (C = y), y = y.sibling;
                        C === null ? g.tail = null : C.sibling = null;
                        break;
                    case "collapsed":
                        C = g.tail;
                        for(var L = null; C !== null;)C.alternate !== null && (L = C), C = C.sibling;
                        L === null ? y || g.tail === null ? g.tail = null : g.tail.sibling = null : L.sibling = null;
                }
            }
            function li(g) {
                var y = g.alternate !== null && g.alternate.child === g.child, C = 0, L = 0;
                if (y) for(var z = g.child; z !== null;)C |= z.lanes | z.childLanes, L |= z.subtreeFlags & 14680064, L |= z.flags & 14680064, z.return = g, z = z.sibling;
                else for(z = g.child; z !== null;)C |= z.lanes | z.childLanes, L |= z.subtreeFlags, L |= z.flags, z.return = g, z = z.sibling;
                return g.subtreeFlags |= L, g.childLanes = C, y;
            }
            function _g(g, y, C) {
                var L = y.pendingProps;
                switch(nv(y), y.tag){
                    case 2:
                    case 16:
                    case 15:
                    case 0:
                    case 11:
                    case 7:
                    case 8:
                    case 12:
                    case 9:
                    case 14:
                        return li(y), null;
                    case 1:
                        return $n(y.type) && Rn(), li(y), null;
                    case 3:
                        return L = y.stateNode, sf(), yt(jn), yt(Fn), Pu(), L.pendingContext && (L.context = L.pendingContext, L.pendingContext = null), (g === null || g.child === null) && (zh(y) ? Ai(y) : g === null || g.memoizedState.isDehydrated && !(y.flags & 256) || (y.flags |= 1024, ta !== null && (cp(ta), ta = null))), Fu(g, y), li(y), null;
                    case 5:
                        sv(y), C = Aa(Nu.current);
                        var z = y.type;
                        if (g !== null && y.stateNode != null) bg(g, y, z, L, C), g.ref !== y.ref && (y.flags |= 512, y.flags |= 2097152);
                        else {
                            if (!L) {
                                if (y.stateNode === null) throw Error(o(166));
                                return li(y), null;
                            }
                            if (g = Aa(Ys.current), zh(y)) {
                                if (!Me) throw Error(o(175));
                                g = wu(y.stateNode, y.type, y.memoizedProps, C, g, y, !Qd), y.updateQueue = g, g !== null && Ai(y);
                            } else {
                                var Q = H(z, L, C, g, y);
                                Ro(Q, y, !1, !1), y.stateNode = Q, le(Q, z, L, C, g) && Ai(y);
                            }
                            y.ref !== null && (y.flags |= 512, y.flags |= 2097152);
                        }
                        return li(y), null;
                    case 6:
                        if (g && y.stateNode != null) wg(g, y, g.memoizedProps, L);
                        else {
                            if (typeof L != "string" && y.stateNode === null) throw Error(o(166));
                            if (g = Aa(Nu.current), C = Aa(Ys.current), zh(y)) {
                                if (!Me) throw Error(o(176));
                                if (g = y.stateNode, L = y.memoizedProps, (C = So(g, L, y, !Qd)) && (z = Ns, z !== null)) switch(Q = (z.mode & 1) !== 0, z.tag){
                                    case 3:
                                        Oe(z.stateNode.containerInfo, g, L, Q);
                                        break;
                                    case 5:
                                        Ge(z.type, z.memoizedProps, z.stateNode, g, L, Q);
                                }
                                C && Ai(y);
                            } else y.stateNode = ge(L, g, C, y);
                        }
                        return li(y), null;
                    case 13:
                        if (yt(Gr), L = y.memoizedState, Dr && rs !== null && y.mode & 1 && !(y.flags & 128)) {
                            for(g = rs; g;)g = _o(g);
                            return ef(), y.flags |= 98560, y;
                        }
                        if (L !== null && L.dehydrated !== null) {
                            if (L = zh(y), g === null) {
                                if (!L) throw Error(o(318));
                                if (!Me) throw Error(o(344));
                                if (g = y.memoizedState, g = g !== null ? g.dehydrated : null, !g) throw Error(o(317));
                                Wd(g, y);
                            } else ef(), !(y.flags & 128) && (y.memoizedState = null), y.flags |= 4;
                            return li(y), null;
                        }
                        return ta !== null && (cp(ta), ta = null), y.flags & 128 ? (y.lanes = C, y) : (L = L !== null, C = !1, g === null ? zh(y) : C = g.memoizedState !== null, L && !C && (y.child.flags |= 8192, y.mode & 1 && (g === null || Gr.current & 1 ? Qr === 0 && (Qr = 3) : Ig())), y.updateQueue !== null && (y.flags |= 4), li(y), null);
                    case 4:
                        return sf(), Fu(g, y), g === null && Ye(y.stateNode.containerInfo), li(y), null;
                    case 10:
                        return Uh(y.type._context), li(y), null;
                    case 17:
                        return $n(y.type) && Rn(), li(y), null;
                    case 19:
                        if (yt(Gr), z = y.memoizedState, z === null) return li(y), null;
                        if (L = (y.flags & 128) !== 0, Q = z.rendering, Q === null) if (L) zl(z, !1);
                        else {
                            if (Qr !== 0 || g !== null && g.flags & 128) for(g = y.child; g !== null;){
                                if (Q = lg(g), Q !== null) {
                                    for(y.flags |= 128, zl(z, !1), g = Q.updateQueue, g !== null && (y.updateQueue = g, y.flags |= 4), y.subtreeFlags = 0, g = C, L = y.child; L !== null;)C = L, z = g, C.flags &= 14680066, Q = C.alternate, Q === null ? (C.childLanes = 0, C.lanes = z, C.child = null, C.subtreeFlags = 0, C.memoizedProps = null, C.memoizedState = null, C.updateQueue = null, C.dependencies = null, C.stateNode = null) : (C.childLanes = Q.childLanes, C.lanes = Q.lanes, C.child = Q.child, C.subtreeFlags = 0, C.deletions = null, C.memoizedProps = Q.memoizedProps, C.memoizedState = Q.memoizedState, C.updateQueue = Q.updateQueue, C.type = Q.type, z = Q.dependencies, C.dependencies = z === null ? null : {
                                        lanes: z.lanes,
                                        firstContext: z.firstContext
                                    }), L = L.sibling;
                                    return qt(Gr, Gr.current & 1 | 2), y.child;
                                }
                                g = g.sibling;
                            }
                            z.tail !== null && Ii() > Uc && (y.flags |= 128, L = !0, zl(z, !1), y.lanes = 4194304);
                        }
                        else {
                            if (!L) if (g = lg(Q), g !== null) {
                                if (y.flags |= 128, L = !0, g = g.updateQueue, g !== null && (y.updateQueue = g, y.flags |= 4), zl(z, !0), z.tail === null && z.tailMode === "hidden" && !Q.alternate && !Dr) return li(y), null;
                            } else 2 * Ii() - z.renderingStartTime > Uc && C !== 1073741824 && (y.flags |= 128, L = !0, zl(z, !1), y.lanes = 4194304);
                            z.isBackwards ? (Q.sibling = y.child, y.child = Q) : (g = z.last, g !== null ? g.sibling = Q : y.child = Q, z.last = Q);
                        }
                        return z.tail !== null ? (y = z.tail, z.rendering = y, z.tail = y.sibling, z.renderingStartTime = Ii(), y.sibling = null, g = Gr.current, qt(Gr, L ? g & 1 | 2 : g & 1), y) : (li(y), null);
                    case 22:
                    case 23:
                        return up(), L = y.memoizedState !== null, g !== null && g.memoizedState !== null !== L && (y.flags |= 8192), L && y.mode & 1 ? ys & 1073741824 && (li(y), Fe && y.subtreeFlags & 6 && (y.flags |= 8192)) : li(y), null;
                    case 24:
                        return null;
                    case 25:
                        return null;
                }
                throw Error(o(156, y.tag));
            }
            var gv = a.ReactCurrentOwner, qi = !1;
            function Jr(g, y, C, L) {
                y.child = g === null ? p_(y, null, C, L) : jl(y, g.child, C, L);
            }
            function _r(g, y, C, L, z) {
                C = C.render;
                var Q = y.ref;
                return Yd(y, z), L = of(g, y, C, L, Q, z), C = Dc(), g !== null && !qi ? (y.updateQueue = g.updateQueue, y.flags &= -2053, g.lanes &= ~z, Zs(g, y, z)) : (Dr && C && tv(y), y.flags |= 1, Jr(g, y, L, z), y.child);
            }
            function xr(g, y, C, L, z) {
                if (g === null) {
                    var Q = C.type;
                    return typeof Q == "function" && !Ng(Q) && Q.defaultProps === void 0 && C.compare === null && C.defaultProps === void 0 ? (y.tag = 15, y.type = Q, Vl(g, y, Q, L, z)) : (g = Pg(C.type, null, L, y, y.mode, z), g.ref = y.ref, g.return = y, y.child = g);
                }
                if (Q = g.child, !(g.lanes & z)) {
                    var xe = Q.memoizedProps;
                    if (C = C.compare, C = C !== null ? C : Ia, C(xe, L) && g.ref === y.ref) return Zs(g, y, z);
                }
                return y.flags |= 1, g = Zl(Q, L), g.ref = y.ref, g.return = y, y.child = g;
            }
            function Vl(g, y, C, L, z) {
                if (g !== null && Ia(g.memoizedProps, L) && g.ref === y.ref) if (qi = !1, (g.lanes & z) !== 0) g.flags & 131072 && (qi = !0);
                else return y.lanes = g.lanes, Zs(g, y, z);
                return Wl(g, y, C, L, z);
            }
            function is(g, y, C) {
                var L = y.pendingProps, z = L.children, Q = g !== null ? g.memoizedState : null;
                if (L.mode === "hidden") if (!(y.mode & 1)) y.memoizedState = {
                    baseLanes: 0,
                    cachePool: null
                }, qt($u, ys), ys |= C;
                else if (C & 1073741824) y.memoizedState = {
                    baseLanes: 0,
                    cachePool: null
                }, L = Q !== null ? Q.baseLanes : C, qt($u, ys), ys |= L;
                else return g = Q !== null ? Q.baseLanes | C : C, y.lanes = y.childLanes = 1073741824, y.memoizedState = {
                    baseLanes: g,
                    cachePool: null
                }, y.updateQueue = null, qt($u, ys), ys |= g, null;
                else Q !== null ? (L = Q.baseLanes | C, y.memoizedState = null) : L = C, qt($u, ys), ys |= L;
                return Jr(g, y, z, C), y.child;
            }
            function Ps(g, y) {
                var C = y.ref;
                (g === null && C !== null || g !== null && g.ref !== C) && (y.flags |= 512, y.flags |= 2097152);
            }
            function Wl(g, y, C, L, z) {
                var Q = $n(C) ? Mn : Fn.current;
                return Q = Vt(y, Q), Yd(y, z), C = of(g, y, C, L, Q, z), L = Dc(), g !== null && !qi ? (y.updateQueue = g.updateQueue, y.flags &= -2053, g.lanes &= ~z, Zs(g, y, z)) : (Dr && L && tv(y), y.flags |= 1, Jr(g, y, C, z), y.child);
            }
            function ju(g, y, C, L, z) {
                if ($n(C)) {
                    var Q = !0;
                    hi(y);
                } else Q = !1;
                if (Yd(y, z), y.stateNode === null) g !== null && (g.alternate = null, y.alternate = null, y.flags |= 2), c_(y, C, L), ev(y, C, L, z), L = !0;
                else if (g === null) {
                    var xe = y.stateNode, ke = y.memoizedProps;
                    xe.props = ke;
                    var tt = xe.context, vt = C.contextType;
                    typeof vt == "object" && vt !== null ? vt = Ks(vt) : (vt = $n(C) ? Mn : Fn.current, vt = Vt(y, vt));
                    var Ut = C.getDerivedStateFromProps, xn = typeof Ut == "function" || typeof xe.getSnapshotBeforeUpdate == "function";
                    xn || typeof xe.UNSAFE_componentWillReceiveProps != "function" && typeof xe.componentWillReceiveProps != "function" || (ke !== L || tt !== vt) && u_(y, xe, L, vt), Qo = !1;
                    var rn = y.memoizedState;
                    xe.state = rn, tg(y, L, xe, z), tt = y.memoizedState, ke !== L || rn !== tt || jn.current || Qo ? (typeof Ut == "function" && (Jy(y, C, Ut, L), tt = y.memoizedState), (ke = Qo || Qy(y, C, ke, L, rn, tt, vt)) ? (xn || typeof xe.UNSAFE_componentWillMount != "function" && typeof xe.componentWillMount != "function" || (typeof xe.componentWillMount == "function" && xe.componentWillMount(), typeof xe.UNSAFE_componentWillMount == "function" && xe.UNSAFE_componentWillMount()), typeof xe.componentDidMount == "function" && (y.flags |= 4194308)) : (typeof xe.componentDidMount == "function" && (y.flags |= 4194308), y.memoizedProps = L, y.memoizedState = tt), xe.props = L, xe.state = tt, xe.context = vt, L = ke) : (typeof xe.componentDidMount == "function" && (y.flags |= 4194308), L = !1);
                } else {
                    xe = y.stateNode, Zy(g, y), ke = y.memoizedProps, vt = y.type === y.elementType ? ke : Xs(y.type, ke), xe.props = vt, xn = y.pendingProps, rn = xe.context, tt = C.contextType, typeof tt == "object" && tt !== null ? tt = Ks(tt) : (tt = $n(C) ? Mn : Fn.current, tt = Vt(y, tt));
                    var Pn = C.getDerivedStateFromProps;
                    (Ut = typeof Pn == "function" || typeof xe.getSnapshotBeforeUpdate == "function") || typeof xe.UNSAFE_componentWillReceiveProps != "function" && typeof xe.componentWillReceiveProps != "function" || (ke !== xn || rn !== tt) && u_(y, xe, L, tt), Qo = !1, rn = y.memoizedState, xe.state = rn, tg(y, L, xe, z);
                    var Rt = y.memoizedState;
                    ke !== xn || rn !== Rt || jn.current || Qo ? (typeof Pn == "function" && (Jy(y, C, Pn, L), Rt = y.memoizedState), (vt = Qo || Qy(y, C, vt, L, rn, Rt, tt) || !1) ? (Ut || typeof xe.UNSAFE_componentWillUpdate != "function" && typeof xe.componentWillUpdate != "function" || (typeof xe.componentWillUpdate == "function" && xe.componentWillUpdate(L, Rt, tt), typeof xe.UNSAFE_componentWillUpdate == "function" && xe.UNSAFE_componentWillUpdate(L, Rt, tt)), typeof xe.componentDidUpdate == "function" && (y.flags |= 4), typeof xe.getSnapshotBeforeUpdate == "function" && (y.flags |= 1024)) : (typeof xe.componentDidUpdate != "function" || ke === g.memoizedProps && rn === g.memoizedState || (y.flags |= 4), typeof xe.getSnapshotBeforeUpdate != "function" || ke === g.memoizedProps && rn === g.memoizedState || (y.flags |= 1024), y.memoizedProps = L, y.memoizedState = Rt), xe.props = L, xe.state = Rt, xe.context = tt, L = vt) : (typeof xe.componentDidUpdate != "function" || ke === g.memoizedProps && rn === g.memoizedState || (y.flags |= 4), typeof xe.getSnapshotBeforeUpdate != "function" || ke === g.memoizedProps && rn === g.memoizedState || (y.flags |= 1024), L = !1);
                }
                return gs(g, y, C, L, Q, z);
            }
            function gs(g, y, C, L, z, Q) {
                Ps(g, y);
                var xe = (y.flags & 128) !== 0;
                if (!L && !xe) return z && Eo(y, C, !1), Zs(g, y, Q);
                L = y.stateNode, gv.current = y;
                var ke = xe && typeof C.getDerivedStateFromError != "function" ? null : L.render();
                return y.flags |= 1, g !== null && xe ? (y.child = jl(y, g.child, null, Q), y.child = jl(y, null, ke, Q)) : Jr(g, y, ke, Q), y.memoizedState = L.state, z && Eo(y, C, !0), y.child;
            }
            function Zh(g) {
                var y = g.stateNode;
                y.pendingContext ? oi(g, y.pendingContext, y.pendingContext !== y.context) : y.context && oi(g, y.context, !1), ag(g, y.containerInfo);
            }
            function yv(g, y, C, L, z) {
                return ef(), og(z), y.flags |= 256, Jr(g, y, C, L), y.child;
            }
            var Jh = {
                dehydrated: null,
                treeContext: null,
                retryLane: 0
            };
            function Bu(g) {
                return {
                    baseLanes: g,
                    cachePool: null
                };
            }
            function vv(g, y, C) {
                var L = y.pendingProps, z = Gr.current, Q = !1, xe = (y.flags & 128) !== 0, ke;
                if ((ke = xe) || (ke = g !== null && g.memoizedState === null ? !1 : (z & 2) !== 0), ke ? (Q = !0, y.flags &= -129) : (g === null || g.memoizedState !== null) && (z |= 1), qt(Gr, z & 1), g === null) return kc(y), g = y.memoizedState, g !== null && (g = g.dehydrated, g !== null) ? (y.mode & 1 ? wo(g) ? y.lanes = 8 : y.lanes = 1073741824 : y.lanes = 1, null) : (z = L.children, g = L.fallback, Q ? (L = y.mode, Q = y.child, z = {
                    mode: "hidden",
                    children: z
                }, !(L & 1) && Q !== null ? (Q.childLanes = 0, Q.pendingProps = z) : Q = hp(z, L, 0, null), g = Zu(g, L, C, null), Q.return = y, g.return = y, Q.sibling = g, y.child = Q, y.child.memoizedState = Bu(C), y.memoizedState = Jh, g) : ka(y, z));
                if (z = g.memoizedState, z !== null) {
                    if (ke = z.dehydrated, ke !== null) {
                        if (xe) return y.flags & 256 ? (y.flags &= -257, ep(g, y, C, Error(o(422)))) : y.memoizedState !== null ? (y.child = g.child, y.flags |= 128, null) : (Q = L.fallback, z = y.mode, L = hp({
                            mode: "visible",
                            children: L.children
                        }, z, 0, null), Q = Zu(Q, z, C, null), Q.flags |= 2, L.return = y, Q.return = y, L.sibling = Q, y.child = L, y.mode & 1 && jl(y, g.child, null, C), y.child.memoizedState = Bu(C), y.memoizedState = Jh, Q);
                        if (!(y.mode & 1)) y = ep(g, y, C, null);
                        else if (wo(ke)) y = ep(g, y, C, Error(o(419)));
                        else if (L = (C & g.childLanes) !== 0, qi || L) {
                            if (L = ci, L !== null) {
                                switch(C & -C){
                                    case 4:
                                        Q = 2;
                                        break;
                                    case 16:
                                        Q = 8;
                                        break;
                                    case 64:
                                    case 128:
                                    case 256:
                                    case 512:
                                    case 1024:
                                    case 2048:
                                    case 4096:
                                    case 8192:
                                    case 16384:
                                    case 32768:
                                    case 65536:
                                    case 131072:
                                    case 262144:
                                    case 524288:
                                    case 1048576:
                                    case 2097152:
                                    case 4194304:
                                    case 8388608:
                                    case 16777216:
                                    case 33554432:
                                    case 67108864:
                                        Q = 32;
                                        break;
                                    case 536870912:
                                        Q = 268435456;
                                        break;
                                    default:
                                        Q = 0;
                                }
                                L = Q & (L.suspendedLanes | C) ? 0 : Q, L !== 0 && L !== z.retryLane && (z.retryLane = L, vs(g, L, -1));
                            }
                            Ig(), y = ep(g, y, C, Error(o(421)));
                        } else Ko(ke) ? (y.flags |= 128, y.child = g.child, y = E_.bind(null, g), Pl(ke, y), y = null) : (C = z.treeContext, Me && (rs = Ic(ke), Ns = y, Dr = !0, ta = null, Qd = !1, C !== null && (ea[Mo++] = Ll, ea[Mo++] = Fl, ea[Mo++] = Ru, Ll = C.id, Fl = C.overflow, Ru = y)), y = ka(y, y.pendingProps.children), y.flags |= 4096);
                        return y;
                    }
                    return Q ? (L = Sg(g, y, L.children, L.fallback, C), Q = y.child, z = g.child.memoizedState, Q.memoizedState = z === null ? Bu(C) : {
                        baseLanes: z.baseLanes | C,
                        cachePool: null
                    }, Q.childLanes = g.childLanes & ~C, y.memoizedState = Jh, L) : (C = Qh(g, y, L.children, C), y.memoizedState = null, C);
                }
                return Q ? (L = Sg(g, y, L.children, L.fallback, C), Q = y.child, z = g.child.memoizedState, Q.memoizedState = z === null ? Bu(C) : {
                    baseLanes: z.baseLanes | C,
                    cachePool: null
                }, Q.childLanes = g.childLanes & ~C, y.memoizedState = Jh, L) : (C = Qh(g, y, L.children, C), y.memoizedState = null, C);
            }
            function ka(g, y) {
                return y = hp({
                    mode: "visible",
                    children: y
                }, g.mode, 0, null), y.return = g, g.child = y;
            }
            function Qh(g, y, C, L) {
                var z = g.child;
                return g = z.sibling, C = Zl(z, {
                    mode: "visible",
                    children: C
                }), !(y.mode & 1) && (C.lanes = L), C.return = y, C.sibling = null, g !== null && (L = y.deletions, L === null ? (y.deletions = [
                    g
                ], y.flags |= 16) : L.push(g)), y.child = C;
            }
            function Sg(g, y, C, L, z) {
                var Q = y.mode;
                g = g.child;
                var xe = g.sibling, ke = {
                    mode: "hidden",
                    children: C
                };
                return !(Q & 1) && y.child !== g ? (C = y.child, C.childLanes = 0, C.pendingProps = ke, y.deletions = null) : (C = Zl(g, ke), C.subtreeFlags = g.subtreeFlags & 14680064), xe !== null ? L = Zl(xe, L) : (L = Zu(L, Q, z, null), L.flags |= 2), L.return = y, C.return = y, C.sibling = L, y.child = C, L;
            }
            function ep(g, y, C, L) {
                return L !== null && og(L), jl(y, g.child, null, C), g = ka(y, y.pendingProps.children), g.flags |= 2, y.memoizedState = null, g;
            }
            function b_(g, y, C) {
                g.lanes |= y;
                var L = g.alternate;
                L !== null && (L.lanes |= y), Cu(g.return, y, C);
            }
            function ul(g, y, C, L, z) {
                var Q = g.memoizedState;
                Q === null ? g.memoizedState = {
                    isBackwards: y,
                    rendering: null,
                    renderingStartTime: 0,
                    last: L,
                    tail: C,
                    tailMode: z
                } : (Q.isBackwards = y, Q.rendering = null, Q.renderingStartTime = 0, Q.last = L, Q.tail = C, Q.tailMode = z);
            }
            function Uu(g, y, C) {
                var L = y.pendingProps, z = L.revealOrder, Q = L.tail;
                if (Jr(g, y, L.children, C), L = Gr.current, L & 2) L = L & 1 | 2, y.flags |= 128;
                else {
                    if (g !== null && g.flags & 128) e: for(g = y.child; g !== null;){
                        if (g.tag === 13) g.memoizedState !== null && b_(g, C, y);
                        else if (g.tag === 19) b_(g, C, y);
                        else if (g.child !== null) {
                            g.child.return = g, g = g.child;
                            continue;
                        }
                        if (g === y) break e;
                        for(; g.sibling === null;){
                            if (g.return === null || g.return === y) break e;
                            g = g.return;
                        }
                        g.sibling.return = g.return, g = g.sibling;
                    }
                    L &= 1;
                }
                if (qt(Gr, L), !(y.mode & 1)) y.memoizedState = null;
                else switch(z){
                    case "forwards":
                        for(C = y.child, z = null; C !== null;)g = C.alternate, g !== null && lg(g) === null && (z = C), C = C.sibling;
                        C = z, C === null ? (z = y.child, y.child = null) : (z = C.sibling, C.sibling = null), ul(y, !1, z, C, Q);
                        break;
                    case "backwards":
                        for(C = null, z = y.child, y.child = null; z !== null;){
                            if (g = z.alternate, g !== null && lg(g) === null) {
                                y.child = z;
                                break;
                            }
                            g = z.sibling, z.sibling = C, C = z, z = g;
                        }
                        ul(y, !0, C, null, Q);
                        break;
                    case "together":
                        ul(y, !1, null, null, void 0);
                        break;
                    default:
                        y.memoizedState = null;
                }
                return y.child;
            }
            function Zs(g, y, C) {
                if (g !== null && (y.dependencies = g.dependencies), dl |= y.lanes, !(C & y.childLanes)) return null;
                if (g !== null && y.child !== g.child) throw Error(o(153));
                if (y.child !== null) {
                    for(g = y.child, C = Zl(g, g.pendingProps), y.child = C, C.return = y; g.sibling !== null;)g = g.sibling, C = C.sibling = Zl(g, g.pendingProps), C.return = y;
                    C.sibling = null;
                }
                return y.child;
            }
            function Eg(g, y, C) {
                switch(y.tag){
                    case 3:
                        Zh(y), ef();
                        break;
                    case 5:
                        m_(y);
                        break;
                    case 1:
                        $n(y.type) && hi(y);
                        break;
                    case 4:
                        ag(y, y.stateNode.containerInfo);
                        break;
                    case 10:
                        Tu(y, y.type._context, y.memoizedProps.value);
                        break;
                    case 13:
                        var L = y.memoizedState;
                        if (L !== null) return L.dehydrated !== null ? (qt(Gr, Gr.current & 1), y.flags |= 128, null) : C & y.child.childLanes ? vv(g, y, C) : (qt(Gr, Gr.current & 1), g = Zs(g, y, C), g !== null ? g.sibling : null);
                        qt(Gr, Gr.current & 1);
                        break;
                    case 19:
                        if (L = (C & y.childLanes) !== 0, g.flags & 128) {
                            if (L) return Uu(g, y, C);
                            y.flags |= 128;
                        }
                        var z = y.memoizedState;
                        if (z !== null && (z.rendering = null, z.tail = null, z.lastEffect = null), qt(Gr, Gr.current), L) break;
                        return null;
                    case 22:
                    case 23:
                        return y.lanes = 0, is(g, y, C);
                }
                return Zs(g, y, C);
            }
            function Mg(g, y) {
                switch(nv(y), y.tag){
                    case 1:
                        return $n(y.type) && Rn(), g = y.flags, g & 65536 ? (y.flags = g & -65537 | 128, y) : null;
                    case 3:
                        return sf(), yt(jn), yt(Fn), Pu(), g = y.flags, g & 65536 && !(g & 128) ? (y.flags = g & -65537 | 128, y) : null;
                    case 5:
                        return sv(y), null;
                    case 13:
                        if (yt(Gr), g = y.memoizedState, g !== null && g.dehydrated !== null) {
                            if (y.alternate === null) throw Error(o(340));
                            ef();
                        }
                        return g = y.flags, g & 65536 ? (y.flags = g & -65537 | 128, y) : null;
                    case 19:
                        return yt(Gr), null;
                    case 4:
                        return sf(), null;
                    case 10:
                        return Uh(y.type._context), null;
                    case 22:
                    case 23:
                        return up(), null;
                    case 24:
                        return null;
                    default:
                        return null;
                }
            }
            var ks = !1, Hi = !1, zu = typeof WeakSet == "function" ? WeakSet : Set, bt = null;
            function na(g, y) {
                var C = g.ref;
                if (C !== null) if (typeof C == "function") try {
                    C(null);
                } catch (L) {
                    Ds(g, y, L);
                }
                else C.current = null;
            }
            function ql(g, y, C) {
                try {
                    C();
                } catch (L) {
                    Ds(g, y, L);
                }
            }
            var xv = !1;
            function bv(g, y) {
                for(Z(g.containerInfo), bt = y; bt !== null;)if (g = bt, y = g.child, (g.subtreeFlags & 1028) !== 0 && y !== null) y.return = g, bt = y;
                else for(; bt !== null;){
                    g = bt;
                    try {
                        var C = g.alternate;
                        if (g.flags & 1024) switch(g.tag){
                            case 0:
                            case 11:
                            case 15:
                                break;
                            case 1:
                                if (C !== null) {
                                    var L = C.memoizedProps, z = C.memoizedState, Q = g.stateNode, xe = Q.getSnapshotBeforeUpdate(g.elementType === g.type ? L : Xs(g.type, L), z);
                                    Q.__reactInternalSnapshotBeforeUpdate = xe;
                                }
                                break;
                            case 3:
                                Fe && ze(g.stateNode.containerInfo);
                                break;
                            case 5:
                            case 6:
                            case 4:
                            case 17:
                                break;
                            default:
                                throw Error(o(163));
                        }
                    } catch (ke) {
                        Ds(g, g.return, ke);
                    }
                    if (y = g.sibling, y !== null) {
                        y.return = g.return, bt = y;
                        break;
                    }
                    bt = g.return;
                }
                return C = xv, xv = !1, C;
            }
            function Hl(g, y, C) {
                var L = y.updateQueue;
                if (L = L !== null ? L.lastEffect : null, L !== null) {
                    var z = L = L.next;
                    do {
                        if ((z.tag & g) === g) {
                            var Q = z.destroy;
                            z.destroy = void 0, Q !== void 0 && ql(y, C, Q);
                        }
                        z = z.next;
                    }while (z !== L);
                }
            }
            function ss(g, y) {
                if (y = y.updateQueue, y = y !== null ? y.lastEffect : null, y !== null) {
                    var C = y = y.next;
                    do {
                        if ((C.tag & g) === g) {
                            var L = C.create;
                            C.destroy = L();
                        }
                        C = C.next;
                    }while (C !== y);
                }
            }
            function Os(g) {
                var y = g.ref;
                if (y !== null) {
                    var C = g.stateNode;
                    switch(g.tag){
                        case 5:
                            g = q(C);
                            break;
                        default:
                            g = C;
                    }
                    typeof y == "function" ? y(g) : y.current = g;
                }
            }
            function Ir(g, y, C) {
                if (al && typeof al.onCommitFiberUnmount == "function") try {
                    al.onCommitFiberUnmount(Lh, y);
                } catch  {}
                switch(y.tag){
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        if (g = y.updateQueue, g !== null && (g = g.lastEffect, g !== null)) {
                            var L = g = g.next;
                            do {
                                var z = L, Q = z.destroy;
                                z = z.tag, Q !== void 0 && (z & 2 || z & 4) && ql(y, C, Q), L = L.next;
                            }while (L !== g);
                        }
                        break;
                    case 1:
                        if (na(y, C), g = y.stateNode, typeof g.componentWillUnmount == "function") try {
                            g.props = y.memoizedProps, g.state = y.memoizedState, g.componentWillUnmount();
                        } catch (xe) {
                            Ds(y, C, xe);
                        }
                        break;
                    case 5:
                        na(y, C);
                        break;
                    case 4:
                        Fe ? Sv(g, y, C) : be && be && (y = y.stateNode.containerInfo, C = it(y), en(y, C));
                }
            }
            function ra(g, y, C) {
                for(var L = y;;)if (Ir(g, L, C), L.child === null || Fe && L.tag === 4) {
                    if (L === y) break;
                    for(; L.sibling === null;){
                        if (L.return === null || L.return === y) return;
                        L = L.return;
                    }
                    L.sibling.return = L.return, L = L.sibling;
                } else L.child.return = L, L = L.child;
            }
            function wv(g) {
                var y = g.alternate;
                y !== null && (g.alternate = null, wv(y)), g.child = null, g.deletions = null, g.sibling = null, g.tag === 5 && (y = g.stateNode, y !== null && nt(y)), g.stateNode = null, g.return = null, g.dependencies = null, g.memoizedProps = null, g.memoizedState = null, g.pendingProps = null, g.stateNode = null, g.updateQueue = null;
            }
            function _v(g) {
                return g.tag === 5 || g.tag === 3 || g.tag === 4;
            }
            function Tg(g) {
                e: for(;;){
                    for(; g.sibling === null;){
                        if (g.return === null || _v(g.return)) return null;
                        g = g.return;
                    }
                    for(g.sibling.return = g.return, g = g.sibling; g.tag !== 5 && g.tag !== 6 && g.tag !== 18;){
                        if (g.flags & 2 || g.child === null || g.tag === 4) continue e;
                        g.child.return = g, g = g.child;
                    }
                    if (!(g.flags & 2)) return g.stateNode;
                }
            }
            function Cg(g) {
                if (Fe) {
                    e: {
                        for(var y = g.return; y !== null;){
                            if (_v(y)) break e;
                            y = y.return;
                        }
                        throw Error(o(160));
                    }
                    var C = y;
                    switch(C.tag){
                        case 5:
                            y = C.stateNode, C.flags & 32 && ($e(y), C.flags &= -33), C = Tg(g), ff(g, C, y);
                            break;
                        case 3:
                        case 4:
                            y = C.stateNode.containerInfo, C = Tg(g), Rg(g, C, y);
                            break;
                        default:
                            throw Error(o(161));
                    }
                }
            }
            function Rg(g, y, C) {
                var L = g.tag;
                if (L === 5 || L === 6) g = g.stateNode, y ? ct(C, g, y) : at(C, g);
                else if (L !== 4 && (g = g.child, g !== null)) for(Rg(g, y, C), g = g.sibling; g !== null;)Rg(g, y, C), g = g.sibling;
            }
            function ff(g, y, C) {
                var L = g.tag;
                if (L === 5 || L === 6) g = g.stateNode, y ? rt(C, g, y) : Ze(C, g);
                else if (L !== 4 && (g = g.child, g !== null)) for(ff(g, y, C), g = g.sibling; g !== null;)ff(g, y, C), g = g.sibling;
            }
            function Sv(g, y, C) {
                for(var L = y, z = !1, Q, xe;;){
                    if (!z) {
                        z = L.return;
                        e: for(;;){
                            if (z === null) throw Error(o(160));
                            switch(Q = z.stateNode, z.tag){
                                case 5:
                                    xe = !1;
                                    break e;
                                case 3:
                                    Q = Q.containerInfo, xe = !0;
                                    break e;
                                case 4:
                                    Q = Q.containerInfo, xe = !0;
                                    break e;
                            }
                            z = z.return;
                        }
                        z = !0;
                    }
                    if (L.tag === 5 || L.tag === 6) ra(g, L, C), xe ? Se(Q, L.stateNode) : st(Q, L.stateNode);
                    else if (L.tag === 18) xe ? Xd(Q, L.stateNode) : Gd(Q, L.stateNode);
                    else if (L.tag === 4) {
                        if (L.child !== null) {
                            Q = L.stateNode.containerInfo, xe = !0, L.child.return = L, L = L.child;
                            continue;
                        }
                    } else if (Ir(g, L, C), L.child !== null) {
                        L.child.return = L, L = L.child;
                        continue;
                    }
                    if (L === y) break;
                    for(; L.sibling === null;){
                        if (L.return === null || L.return === y) return;
                        L = L.return, L.tag === 4 && (z = !1);
                    }
                    L.sibling.return = L.return, L = L.sibling;
                }
            }
            function jc(g, y) {
                if (Fe) {
                    switch(y.tag){
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            Hl(3, y, y.return), ss(3, y), Hl(5, y, y.return);
                            return;
                        case 1:
                            return;
                        case 5:
                            var C = y.stateNode;
                            if (C != null) {
                                var L = y.memoizedProps;
                                g = g !== null ? g.memoizedProps : L;
                                var z = y.type, Q = y.updateQueue;
                                y.updateQueue = null, Q !== null && je(C, Q, z, g, L, y);
                            }
                            return;
                        case 6:
                            if (y.stateNode === null) throw Error(o(162));
                            C = y.memoizedProps, Je(y.stateNode, g !== null ? g.memoizedProps : C, C);
                            return;
                        case 3:
                            Me && g !== null && g.memoizedState.isDehydrated && Hd(y.stateNode.containerInfo);
                            return;
                        case 12:
                            return;
                        case 13:
                            hf(y);
                            return;
                        case 19:
                            hf(y);
                            return;
                        case 17:
                            return;
                    }
                    throw Error(o(163));
                }
                switch(y.tag){
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        Hl(3, y, y.return), ss(3, y), Hl(5, y, y.return);
                        return;
                    case 12:
                        return;
                    case 13:
                        hf(y);
                        return;
                    case 19:
                        hf(y);
                        return;
                    case 3:
                        Me && g !== null && g.memoizedState.isDehydrated && Hd(y.stateNode.containerInfo);
                        break;
                    case 22:
                    case 23:
                        return;
                }
                e: if (be) {
                    switch(y.tag){
                        case 1:
                        case 5:
                        case 6:
                            break e;
                        case 3:
                        case 4:
                            y = y.stateNode, en(y.containerInfo, y.pendingChildren);
                            break e;
                    }
                    throw Error(o(163));
                }
            }
            function hf(g) {
                var y = g.updateQueue;
                if (y !== null) {
                    g.updateQueue = null;
                    var C = g.stateNode;
                    C === null && (C = g.stateNode = new zu), y.forEach(function(L) {
                        var z = M_.bind(null, g, L);
                        C.has(L) || (C.add(L), L.then(z, z));
                    });
                }
            }
            function J2(g, y) {
                for(bt = y; bt !== null;){
                    y = bt;
                    var C = y.deletions;
                    if (C !== null) for(var L = 0; L < C.length; L++){
                        var z = C[L];
                        try {
                            var Q = g;
                            Fe ? Sv(Q, z, y) : ra(Q, z, y);
                            var xe = z.alternate;
                            xe !== null && (xe.return = null), z.return = null;
                        } catch (Kt) {
                            Ds(z, y, Kt);
                        }
                    }
                    if (C = y.child, y.subtreeFlags & 12854 && C !== null) C.return = y, bt = C;
                    else for(; bt !== null;){
                        y = bt;
                        try {
                            var ke = y.flags;
                            if (ke & 32 && Fe && $e(y.stateNode), ke & 512) {
                                var tt = y.alternate;
                                if (tt !== null) {
                                    var vt = tt.ref;
                                    vt !== null && (typeof vt == "function" ? vt(null) : vt.current = null);
                                }
                            }
                            if (ke & 8192) switch(y.tag){
                                case 13:
                                    if (y.memoizedState !== null) {
                                        var Ut = y.alternate;
                                        (Ut === null || Ut.memoizedState === null) && (ap = Ii());
                                    }
                                    break;
                                case 22:
                                    var xn = y.memoizedState !== null, rn = y.alternate, Pn = rn !== null && rn.memoizedState !== null;
                                    if (C = y, Fe) {
                                        e: if (L = C, z = xn, Q = null, Fe) for(var Rt = L;;){
                                            if (Rt.tag === 5) {
                                                if (Q === null) {
                                                    Q = Rt;
                                                    var ls = Rt.stateNode;
                                                    z ? ht(ls) : lt(Rt.stateNode, Rt.memoizedProps);
                                                }
                                            } else if (Rt.tag === 6) {
                                                if (Q === null) {
                                                    var ko = Rt.stateNode;
                                                    z ? Ee(ko) : Ae(ko, Rt.memoizedProps);
                                                }
                                            } else if ((Rt.tag !== 22 && Rt.tag !== 23 || Rt.memoizedState === null || Rt === L) && Rt.child !== null) {
                                                Rt.child.return = Rt, Rt = Rt.child;
                                                continue;
                                            }
                                            if (Rt === L) break;
                                            for(; Rt.sibling === null;){
                                                if (Rt.return === null || Rt.return === L) break e;
                                                Q === Rt && (Q = null), Rt = Rt.return;
                                            }
                                            Q === Rt && (Q = null), Rt.sibling.return = Rt.return, Rt = Rt.sibling;
                                        }
                                    }
                                    if (xn && !Pn && C.mode & 1) {
                                        bt = C;
                                        for(var He = C.child; He !== null;){
                                            for(C = bt = He; bt !== null;){
                                                L = bt;
                                                var Le = L.child;
                                                switch(L.tag){
                                                    case 0:
                                                    case 11:
                                                    case 14:
                                                    case 15:
                                                        Hl(4, L, L.return);
                                                        break;
                                                    case 1:
                                                        na(L, L.return);
                                                        var Qe = L.stateNode;
                                                        if (typeof Qe.componentWillUnmount == "function") {
                                                            var Et = L.return;
                                                            try {
                                                                Qe.props = L.memoizedProps, Qe.state = L.memoizedState, Qe.componentWillUnmount();
                                                            } catch (Kt) {
                                                                Ds(L, Et, Kt);
                                                            }
                                                        }
                                                        break;
                                                    case 5:
                                                        na(L, L.return);
                                                        break;
                                                    case 22:
                                                        if (L.memoizedState !== null) {
                                                            Mv(C);
                                                            continue;
                                                        }
                                                }
                                                Le !== null ? (Le.return = L, bt = Le) : Mv(C);
                                            }
                                            He = He.sibling;
                                        }
                                    }
                            }
                            switch(ke & 4102){
                                case 2:
                                    Cg(y), y.flags &= -3;
                                    break;
                                case 6:
                                    Cg(y), y.flags &= -3, jc(y.alternate, y);
                                    break;
                                case 4096:
                                    y.flags &= -4097;
                                    break;
                                case 4100:
                                    y.flags &= -4097, jc(y.alternate, y);
                                    break;
                                case 4:
                                    jc(y.alternate, y);
                            }
                        } catch (Kt) {
                            Ds(y, y.return, Kt);
                        }
                        if (C = y.sibling, C !== null) {
                            C.return = y.return, bt = C;
                            break;
                        }
                        bt = y.return;
                    }
                }
            }
            function tp(g, y, C) {
                bt = g, np(g);
            }
            function np(g, y, C) {
                for(var L = (g.mode & 1) !== 0; bt !== null;){
                    var z = bt, Q = z.child;
                    if (z.tag === 22 && L) {
                        var xe = z.memoizedState !== null || ks;
                        if (!xe) {
                            var ke = z.alternate, tt = ke !== null && ke.memoizedState !== null || Hi;
                            ke = ks;
                            var vt = Hi;
                            if (ks = xe, (Hi = tt) && !vt) for(bt = z; bt !== null;)xe = bt, tt = xe.child, xe.tag === 22 && xe.memoizedState !== null ? Vu(z) : tt !== null ? (tt.return = xe, bt = tt) : Vu(z);
                            for(; Q !== null;)bt = Q, np(Q), Q = Q.sibling;
                            bt = z, ks = ke, Hi = vt;
                        }
                        Ev(g);
                    } else z.subtreeFlags & 8772 && Q !== null ? (Q.return = z, bt = Q) : Ev(g);
                }
            }
            function Ev(g) {
                for(; bt !== null;){
                    var y = bt;
                    if (y.flags & 8772) {
                        var C = y.alternate;
                        try {
                            if (y.flags & 8772) switch(y.tag){
                                case 0:
                                case 11:
                                case 15:
                                    Hi || ss(5, y);
                                    break;
                                case 1:
                                    var L = y.stateNode;
                                    if (y.flags & 4 && !Hi) if (C === null) L.componentDidMount();
                                    else {
                                        var z = y.elementType === y.type ? C.memoizedProps : Xs(y.type, C.memoizedProps);
                                        L.componentDidUpdate(z, C.memoizedState, L.__reactInternalSnapshotBeforeUpdate);
                                    }
                                    var Q = y.updateQueue;
                                    Q !== null && a_(y, Q, L);
                                    break;
                                case 3:
                                    var xe = y.updateQueue;
                                    if (xe !== null) {
                                        if (C = null, y.child !== null) switch(y.child.tag){
                                            case 5:
                                                C = q(y.child.stateNode);
                                                break;
                                            case 1:
                                                C = y.child.stateNode;
                                        }
                                        a_(y, xe, C);
                                    }
                                    break;
                                case 5:
                                    var ke = y.stateNode;
                                    C === null && y.flags & 4 && Pe(ke, y.type, y.memoizedProps, y);
                                    break;
                                case 6:
                                    break;
                                case 4:
                                    break;
                                case 12:
                                    break;
                                case 13:
                                    if (Me && y.memoizedState === null) {
                                        var tt = y.alternate;
                                        if (tt !== null) {
                                            var vt = tt.memoizedState;
                                            if (vt !== null) {
                                                var Ut = vt.dehydrated;
                                                Ut !== null && $d(Ut);
                                            }
                                        }
                                    }
                                    break;
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                    break;
                                default:
                                    throw Error(o(163));
                            }
                            Hi || y.flags & 512 && Os(y);
                        } catch (xn) {
                            Ds(y, y.return, xn);
                        }
                    }
                    if (y === g) {
                        bt = null;
                        break;
                    }
                    if (C = y.sibling, C !== null) {
                        C.return = y.return, bt = C;
                        break;
                    }
                    bt = y.return;
                }
            }
            function Mv(g) {
                for(; bt !== null;){
                    var y = bt;
                    if (y === g) {
                        bt = null;
                        break;
                    }
                    var C = y.sibling;
                    if (C !== null) {
                        C.return = y.return, bt = C;
                        break;
                    }
                    bt = y.return;
                }
            }
            function Vu(g) {
                for(; bt !== null;){
                    var y = bt;
                    try {
                        switch(y.tag){
                            case 0:
                            case 11:
                            case 15:
                                var C = y.return;
                                try {
                                    ss(4, y);
                                } catch (tt) {
                                    Ds(y, C, tt);
                                }
                                break;
                            case 1:
                                var L = y.stateNode;
                                if (typeof L.componentDidMount == "function") {
                                    var z = y.return;
                                    try {
                                        L.componentDidMount();
                                    } catch (tt) {
                                        Ds(y, z, tt);
                                    }
                                }
                                var Q = y.return;
                                try {
                                    Os(y);
                                } catch (tt) {
                                    Ds(y, Q, tt);
                                }
                                break;
                            case 5:
                                var xe = y.return;
                                try {
                                    Os(y);
                                } catch (tt) {
                                    Ds(y, xe, tt);
                                }
                        }
                    } catch (tt) {
                        Ds(y, y.return, tt);
                    }
                    if (y === g) {
                        bt = null;
                        break;
                    }
                    var ke = y.sibling;
                    if (ke !== null) {
                        ke.return = y.return, bt = ke;
                        break;
                    }
                    bt = y.return;
                }
            }
            var rp = 0, Wu = 1, qu = 2, $l = 3, pf = 4;
            if (typeof Symbol == "function" && Symbol.for) {
                var Hu = Symbol.for;
                rp = Hu("selector.component"), Wu = Hu("selector.has_pseudo_class"), qu = Hu("selector.role"), $l = Hu("selector.test_id"), pf = Hu("selector.text");
            }
            function ip(g) {
                var y = oe(g);
                if (y != null) {
                    if (typeof y.memoizedProps["data-testname"] != "string") throw Error(o(364));
                    return y;
                }
                if (g = X(g), g === null) throw Error(o(362));
                return g.stateNode.current;
            }
            function sp(g, y) {
                switch(y.$$typeof){
                    case rp:
                        if (g.type === y.value) return !0;
                        break;
                    case Wu:
                        e: {
                            y = y.value, g = [
                                g,
                                0
                            ];
                            for(var C = 0; C < g.length;){
                                var L = g[C++], z = g[C++], Q = y[z];
                                if (L.tag !== 5 || !pe(L)) {
                                    for(; Q != null && sp(L, Q);)z++, Q = y[z];
                                    if (z === y.length) {
                                        y = !0;
                                        break e;
                                    } else for(L = L.child; L !== null;)g.push(L, z), L = L.sibling;
                                }
                            }
                            y = !1;
                        }
                        return y;
                    case qu:
                        if (g.tag === 5 && me(g.stateNode, y.value)) return !0;
                        break;
                    case pf:
                        if ((g.tag === 5 || g.tag === 6) && (g = he(g), g !== null && 0 <= g.indexOf(y.value))) return !0;
                        break;
                    case $l:
                        if (g.tag === 5 && (g = g.memoizedProps["data-testname"], typeof g == "string" && g.toLowerCase() === y.value.toLowerCase())) return !0;
                        break;
                    default:
                        throw Error(o(365));
                }
                return !1;
            }
            function Bc(g) {
                switch(g.$$typeof){
                    case rp:
                        return "<" + (O(g.value) || "Unknown") + ">";
                    case Wu:
                        return ":has(" + (Bc(g) || "") + ")";
                    case qu:
                        return '[role="' + g.value + '"]';
                    case pf:
                        return '"' + g.value + '"';
                    case $l:
                        return '[data-testname="' + g.value + '"]';
                    default:
                        throw Error(o(365));
                }
            }
            function Io(g, y) {
                var C = [];
                g = [
                    g,
                    0
                ];
                for(var L = 0; L < g.length;){
                    var z = g[L++], Q = g[L++], xe = y[Q];
                    if (z.tag !== 5 || !pe(z)) {
                        for(; xe != null && sp(z, xe);)Q++, xe = y[Q];
                        if (Q === y.length) C.push(z);
                        else for(z = z.child; z !== null;)g.push(z, Q), z = z.sibling;
                    }
                }
                return C;
            }
            function Gl(g, y) {
                if (!ae) throw Error(o(363));
                g = ip(g), g = Io(g, y), y = [], g = Array.from(g);
                for(var C = 0; C < g.length;){
                    var L = g[C++];
                    if (L.tag === 5) pe(L) || y.push(L.stateNode);
                    else for(L = L.child; L !== null;)g.push(L), L = L.sibling;
                }
                return y;
            }
            var Tv = Math.ceil, op = a.ReactCurrentDispatcher, Oa = a.ReactCurrentOwner, pr = a.ReactCurrentBatchConfig, In = 0, ci = null, mr = null, Lr = 0, ys = 0, $u = Zt(0), Qr = 0, mf = null, dl = 0, Ao = 0, Gu = 0, Xl = null, pi = null, ap = 0, Uc = 1 / 0;
            function Xu() {
                Uc = Ii() + 500;
            }
            var gf = !1, Ar = null, Da = null, yf = !1, fl = null, Ku = 0, Yu = 0, Kl = null, Sr = -1, ei = 0;
            function nr() {
                return In & 6 ? Ii() : Sr !== -1 ? Sr : Sr = Ii();
            }
            function La(g) {
                return g.mode & 1 ? In & 2 && Lr !== 0 ? Lr & -Lr : o_.transition !== null ? (ei === 0 && (g = ai, ai <<= 1, !(ai & 4194240) && (ai = 64), ei = g), ei) : (g = Bn, g !== 0 ? g : Be()) : 1;
            }
            function vs(g, y, C) {
                if (50 < Yu) throw Yu = 0, Kl = null, Error(o(185));
                var L = zc(g, y);
                return L === null ? null : (_u(L, y, C), (!(In & 2) || L !== ci) && (L === ci && (!(In & 2) && (Ao |= y), Qr === 4 && as(L, Lr)), Js(L, C), y === 1 && In === 0 && !(g.mode & 1) && (Xu(), Km && Zo())), L);
            }
            function zc(g, y) {
                g.lanes |= y;
                var C = g.alternate;
                for(C !== null && (C.lanes |= y), C = g, g = g.return; g !== null;)g.childLanes |= y, C = g.alternate, C !== null && (C.childLanes |= y), C = g, g = g.return;
                return C.tag === 3 ? C.stateNode : null;
            }
            function Js(g, y) {
                var C = g.callbackNode;
                s_(g, y);
                var L = Dh(g, g === ci ? Lr : 0);
                if (L === 0) C !== null && Kd(C), g.callbackNode = null, g.callbackPriority = 0;
                else if (y = L & -L, g.callbackPriority !== y) {
                    if (C != null && Kd(C), y === 1) g.tag === 0 ? Zm(No.bind(null, g)) : Ym(No.bind(null, g)), de ? ce(function() {
                        In === 0 && Zo();
                    }) : Su(Eu, Zo), C = null;
                    else {
                        switch(kl(L)){
                            case 1:
                                C = Eu;
                                break;
                            case 4:
                                C = K2;
                                break;
                            case 16:
                                C = Gm;
                                break;
                            case 536870912:
                                C = Xm;
                                break;
                            default:
                                C = Gm;
                        }
                        C = Ag(C, os.bind(null, g));
                    }
                    g.callbackPriority = y, g.callbackNode = C;
                }
            }
            function os(g, y) {
                if (Sr = -1, ei = 0, In & 6) throw Error(o(327));
                var C = g.callbackNode;
                if (hl() && g.callbackNode !== C) return null;
                var L = Dh(g, g === ci ? Lr : 0);
                if (L === 0) return null;
                if (L & 30 || L & g.expiredLanes || y) y = dp(g, L);
                else {
                    y = L;
                    var z = In;
                    In |= 2;
                    var Q = Iv();
                    (ci !== g || Lr !== y) && (Xu(), Yl(g, y));
                    do try {
                        __();
                        break;
                    } catch (ke) {
                        Rv(g, ke);
                    }
                    while (!0);
                    As(), op.current = Q, In = z, mr !== null ? y = 0 : (ci = null, Lr = 0, y = Qr);
                }
                if (y !== 0) {
                    if (y === 2 && (z = qm(g), z !== 0 && (L = z, y = lp(g, z))), y === 1) throw C = mf, Yl(g, 0), as(g, L), Js(g, Ii()), C;
                    if (y === 6) as(g, L);
                    else {
                        if (z = g.current.alternate, !(L & 30) && !Cv(z) && (y = dp(g, L), y === 2 && (Q = qm(g), Q !== 0 && (L = Q, y = lp(g, Q))), y === 1)) throw C = mf, Yl(g, 0), as(g, L), Js(g, Ii()), C;
                        switch(g.finishedWork = z, g.finishedLanes = L, y){
                            case 0:
                            case 1:
                                throw Error(o(345));
                            case 2:
                                Fa(g, pi);
                                break;
                            case 3:
                                if (as(g, L), (L & 130023424) === L && (y = ap + 500 - Ii(), 10 < y)) {
                                    if (Dh(g, 0) !== 0) break;
                                    if (z = g.suspendedLanes, (z & L) !== L) {
                                        nr(), g.pingedLanes |= g.suspendedLanes & z;
                                        break;
                                    }
                                    g.timeoutHandle = ye(Fa.bind(null, g, pi), y);
                                    break;
                                }
                                Fa(g, pi);
                                break;
                            case 4:
                                if (as(g, L), (L & 4194240) === L) break;
                                for(y = g.eventTimes, z = -1; 0 < L;){
                                    var xe = 31 - Gn(L);
                                    Q = 1 << xe, xe = y[xe], xe > z && (z = xe), L &= ~Q;
                                }
                                if (L = z, L = Ii() - L, L = (120 > L ? 120 : 480 > L ? 480 : 1080 > L ? 1080 : 1920 > L ? 1920 : 3e3 > L ? 3e3 : 4320 > L ? 4320 : 1960 * Tv(L / 1960)) - L, 10 < L) {
                                    g.timeoutHandle = ye(Fa.bind(null, g, pi), L);
                                    break;
                                }
                                Fa(g, pi);
                                break;
                            case 5:
                                Fa(g, pi);
                                break;
                            default:
                                throw Error(o(329));
                        }
                    }
                }
                return Js(g, Ii()), g.callbackNode === C ? os.bind(null, g) : null;
            }
            function lp(g, y) {
                var C = Xl;
                return g.current.memoizedState.isDehydrated && (Yl(g, y).flags |= 256), g = dp(g, y), g !== 2 && (y = pi, pi = C, y !== null && cp(y)), g;
            }
            function cp(g) {
                pi === null ? pi = g : pi.push.apply(pi, g);
            }
            function Cv(g) {
                for(var y = g;;){
                    if (y.flags & 16384) {
                        var C = y.updateQueue;
                        if (C !== null && (C = C.stores, C !== null)) for(var L = 0; L < C.length; L++){
                            var z = C[L], Q = z.getSnapshot;
                            z = z.value;
                            try {
                                if (!Is(Q(), z)) return !1;
                            } catch  {
                                return !1;
                            }
                        }
                    }
                    if (C = y.child, y.subtreeFlags & 16384 && C !== null) C.return = y, y = C;
                    else {
                        if (y === g) break;
                        for(; y.sibling === null;){
                            if (y.return === null || y.return === g) return !0;
                            y = y.return;
                        }
                        y.sibling.return = y.return, y = y.sibling;
                    }
                }
                return !0;
            }
            function as(g, y) {
                for(y &= ~Gu, y &= ~Ao, g.suspendedLanes |= y, g.pingedLanes &= ~y, g = g.expirationTimes; 0 < y;){
                    var C = 31 - Gn(y), L = 1 << C;
                    g[C] = -1, y &= ~L;
                }
            }
            function No(g) {
                if (In & 6) throw Error(o(327));
                hl();
                var y = Dh(g, 0);
                if (!(y & 1)) return Js(g, Ii()), null;
                var C = dp(g, y);
                if (g.tag !== 0 && C === 2) {
                    var L = qm(g);
                    L !== 0 && (y = L, C = lp(g, L));
                }
                if (C === 1) throw C = mf, Yl(g, 0), as(g, y), Js(g, Ii()), C;
                if (C === 6) throw Error(o(345));
                return g.finishedWork = g.current.alternate, g.finishedLanes = y, Fa(g, pi), Js(g, Ii()), null;
            }
            function vf(g) {
                fl !== null && fl.tag === 0 && !(In & 6) && hl();
                var y = In;
                In |= 1;
                var C = pr.transition, L = Bn;
                try {
                    if (pr.transition = null, Bn = 1, g) return g();
                } finally{
                    Bn = L, pr.transition = C, In = y, !(In & 6) && Zo();
                }
            }
            function up() {
                ys = $u.current, yt($u);
            }
            function Yl(g, y) {
                g.finishedWork = null, g.finishedLanes = 0;
                var C = g.timeoutHandle;
                if (C !== Te && (g.timeoutHandle = Te, _e(C)), mr !== null) for(C = mr.return; C !== null;){
                    var L = C;
                    switch(nv(L), L.tag){
                        case 1:
                            L = L.type.childContextTypes, L != null && Rn();
                            break;
                        case 3:
                            sf(), yt(jn), yt(Fn), Pu();
                            break;
                        case 5:
                            sv(L);
                            break;
                        case 4:
                            sf();
                            break;
                        case 13:
                            yt(Gr);
                            break;
                        case 19:
                            yt(Gr);
                            break;
                        case 10:
                            Uh(L.type._context);
                            break;
                        case 22:
                        case 23:
                            up();
                    }
                    C = C.return;
                }
                if (ci = g, mr = g = Zl(g.current, null), Lr = ys = y, Qr = 0, mf = null, Gu = Ao = dl = 0, pi = Xl = null, Jo !== null) {
                    for(y = 0; y < Jo.length; y++)if (C = Jo[y], L = C.interleaved, L !== null) {
                        C.interleaved = null;
                        var z = L.next, Q = C.pending;
                        if (Q !== null) {
                            var xe = Q.next;
                            Q.next = z, L.next = xe;
                        }
                        C.pending = L;
                    }
                    Jo = null;
                }
                return g;
            }
            function Rv(g, y) {
                do {
                    var C = mr;
                    try {
                        if (As(), Vh.current = uf, cg) {
                            for(var L = Xr.memoizedState; L !== null;){
                                var z = L.queue;
                                z !== null && (z.pending = null), L = L.next;
                            }
                            cg = !1;
                        }
                        if (ku = 0, Vi = zi = Xr = null, ll = !1, Ou = 0, Oa.current = null, C === null || C.return === null) {
                            Qr = 1, mf = y, mr = null;
                            break;
                        }
                        e: {
                            var Q = g, xe = C.return, ke = C, tt = y;
                            if (y = Lr, ke.flags |= 32768, tt !== null && typeof tt == "object" && typeof tt.then == "function") {
                                var vt = tt, Ut = ke, xn = Ut.tag;
                                if (!(Ut.mode & 1) && (xn === 0 || xn === 11 || xn === 15)) {
                                    var rn = Ut.alternate;
                                    rn ? (Ut.updateQueue = rn.updateQueue, Ut.memoizedState = rn.memoizedState, Ut.lanes = rn.lanes) : (Ut.updateQueue = null, Ut.memoizedState = null);
                                }
                                var Pn = mv(xe);
                                if (Pn !== null) {
                                    Pn.flags &= -257, Lu(Pn, xe, ke, Q, y), Pn.mode & 1 && Ul(Q, vt, y), y = Pn, tt = vt;
                                    var Rt = y.updateQueue;
                                    if (Rt === null) {
                                        var ls = new Set;
                                        ls.add(tt), y.updateQueue = ls;
                                    } else Rt.add(tt);
                                    break e;
                                } else {
                                    if (!(y & 1)) {
                                        Ul(Q, vt, y), Ig();
                                        break e;
                                    }
                                    tt = Error(o(426));
                                }
                            } else if (Dr && ke.mode & 1) {
                                var ko = mv(xe);
                                if (ko !== null) {
                                    !(ko.flags & 65536) && (ko.flags |= 256), Lu(ko, xe, ke, Q, y), og(tt);
                                    break e;
                                }
                            }
                            Q = tt, Qr !== 4 && (Qr = 2), Xl === null ? Xl = [
                                Q
                            ] : Xl.push(Q), tt = pv(tt, ke), ke = xe;
                            do {
                                switch(ke.tag){
                                    case 3:
                                        ke.flags |= 65536, y &= -y, ke.lanes |= y;
                                        var He = x_(ke, tt, y);
                                        eg(ke, He);
                                        break e;
                                    case 1:
                                        Q = tt;
                                        var Le = ke.type, Qe = ke.stateNode;
                                        if (!(ke.flags & 128) && (typeof Le.getDerivedStateFromError == "function" || Qe !== null && typeof Qe.componentDidCatch == "function" && (Da === null || !Da.has(Qe)))) {
                                            ke.flags |= 65536, y &= -y, ke.lanes |= y;
                                            var Et = xg(ke, Q, y);
                                            eg(ke, Et);
                                            break e;
                                        }
                                }
                                ke = ke.return;
                            }while (ke !== null);
                        }
                        Nv(C);
                    } catch (Kt) {
                        y = Kt, mr === C && C !== null && (mr = C = C.return);
                        continue;
                    }
                    break;
                }while (!0);
            }
            function Iv() {
                var g = op.current;
                return op.current = uf, g === null ? uf : g;
            }
            function Ig() {
                (Qr === 0 || Qr === 3 || Qr === 2) && (Qr = 4), ci === null || !(dl & 268435455) && !(Ao & 268435455) || as(ci, Lr);
            }
            function dp(g, y) {
                var C = In;
                In |= 2;
                var L = Iv();
                ci === g && Lr === y || Yl(g, y);
                do try {
                    w_();
                    break;
                } catch (z) {
                    Rv(g, z);
                }
                while (!0);
                if (As(), In = C, op.current = L, mr !== null) throw Error(o(261));
                return ci = null, Lr = 0, Qr;
            }
            function w_() {
                for(; mr !== null;)Av(mr);
            }
            function __() {
                for(; mr !== null && !Ac();)Av(mr);
            }
            function Av(g) {
                var y = Ov(g.alternate, g, ys);
                g.memoizedProps = g.pendingProps, y === null ? Nv(g) : mr = y, Oa.current = null;
            }
            function Nv(g) {
                var y = g;
                do {
                    var C = y.alternate;
                    if (g = y.return, y.flags & 32768) {
                        if (C = Mg(C, y), C !== null) {
                            C.flags &= 32767, mr = C;
                            return;
                        }
                        if (g !== null) g.flags |= 32768, g.subtreeFlags = 0, g.deletions = null;
                        else {
                            Qr = 6, mr = null;
                            return;
                        }
                    } else if (C = _g(C, y, ys), C !== null) {
                        mr = C;
                        return;
                    }
                    if (y = y.sibling, y !== null) {
                        mr = y;
                        return;
                    }
                    mr = y = g;
                }while (y !== null);
                Qr === 0 && (Qr = 5);
            }
            function Fa(g, y) {
                var C = Bn, L = pr.transition;
                try {
                    pr.transition = null, Bn = 1, S_(g, y, C);
                } finally{
                    pr.transition = L, Bn = C;
                }
                return null;
            }
            function S_(g, y, C) {
                do hl();
                while (fl !== null);
                if (In & 6) throw Error(o(327));
                var L = g.finishedWork, z = g.finishedLanes;
                if (L === null) return null;
                if (g.finishedWork = null, g.finishedLanes = 0, L === g.current) throw Error(o(177));
                g.callbackNode = null, g.callbackPriority = 0;
                var Q = L.lanes | L.childLanes;
                if ($m(g, Q), g === ci && (mr = ci = null, Lr = 0), !(L.subtreeFlags & 2064) && !(L.flags & 2064) || yf || (yf = !0, Ag(Gm, function() {
                    return hl(), null;
                })), Q = (L.flags & 15990) !== 0, L.subtreeFlags & 15990 || Q) {
                    Q = pr.transition, pr.transition = null;
                    var xe = Bn;
                    Bn = 1;
                    var ke = In;
                    In |= 4, Oa.current = null, bv(g, L), J2(g, L), $(g.containerInfo), g.current = L, tp(L), X2(), In = ke, Bn = xe, pr.transition = Q;
                } else g.current = L;
                if (yf && (yf = !1, fl = g, Ku = z), Q = g.pendingLanes, Q === 0 && (Da = null), Fh(L.stateNode), Js(g, Ii()), y !== null) for(C = g.onRecoverableError, L = 0; L < y.length; L++)C(y[L]);
                if (gf) throw gf = !1, g = Ar, Ar = null, g;
                return Ku & 1 && g.tag !== 0 && hl(), Q = g.pendingLanes, Q & 1 ? g === Kl ? Yu++ : (Yu = 0, Kl = g) : Yu = 0, Zo(), null;
            }
            function hl() {
                if (fl !== null) {
                    var g = kl(Ku), y = pr.transition, C = Bn;
                    try {
                        if (pr.transition = null, Bn = 16 > g ? 16 : g, fl === null) var L = !1;
                        else {
                            if (g = fl, fl = null, Ku = 0, In & 6) throw Error(o(331));
                            var z = In;
                            for(In |= 4, bt = g.current; bt !== null;){
                                var Q = bt, xe = Q.child;
                                if (bt.flags & 16) {
                                    var ke = Q.deletions;
                                    if (ke !== null) {
                                        for(var tt = 0; tt < ke.length; tt++){
                                            var vt = ke[tt];
                                            for(bt = vt; bt !== null;){
                                                var Ut = bt;
                                                switch(Ut.tag){
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                        Hl(8, Ut, Q);
                                                }
                                                var xn = Ut.child;
                                                if (xn !== null) xn.return = Ut, bt = xn;
                                                else for(; bt !== null;){
                                                    Ut = bt;
                                                    var rn = Ut.sibling, Pn = Ut.return;
                                                    if (wv(Ut), Ut === vt) {
                                                        bt = null;
                                                        break;
                                                    }
                                                    if (rn !== null) {
                                                        rn.return = Pn, bt = rn;
                                                        break;
                                                    }
                                                    bt = Pn;
                                                }
                                            }
                                        }
                                        var Rt = Q.alternate;
                                        if (Rt !== null) {
                                            var ls = Rt.child;
                                            if (ls !== null) {
                                                Rt.child = null;
                                                do {
                                                    var ko = ls.sibling;
                                                    ls.sibling = null, ls = ko;
                                                }while (ls !== null);
                                            }
                                        }
                                        bt = Q;
                                    }
                                }
                                if (Q.subtreeFlags & 2064 && xe !== null) xe.return = Q, bt = xe;
                                else e: for(; bt !== null;){
                                    if (Q = bt, Q.flags & 2048) switch(Q.tag){
                                        case 0:
                                        case 11:
                                        case 15:
                                            Hl(9, Q, Q.return);
                                    }
                                    var He = Q.sibling;
                                    if (He !== null) {
                                        He.return = Q.return, bt = He;
                                        break e;
                                    }
                                    bt = Q.return;
                                }
                            }
                            var Le = g.current;
                            for(bt = Le; bt !== null;){
                                xe = bt;
                                var Qe = xe.child;
                                if (xe.subtreeFlags & 2064 && Qe !== null) Qe.return = xe, bt = Qe;
                                else e: for(xe = Le; bt !== null;){
                                    if (ke = bt, ke.flags & 2048) try {
                                        switch(ke.tag){
                                            case 0:
                                            case 11:
                                            case 15:
                                                ss(9, ke);
                                        }
                                    } catch (Kt) {
                                        Ds(ke, ke.return, Kt);
                                    }
                                    if (ke === xe) {
                                        bt = null;
                                        break e;
                                    }
                                    var Et = ke.sibling;
                                    if (Et !== null) {
                                        Et.return = ke.return, bt = Et;
                                        break e;
                                    }
                                    bt = ke.return;
                                }
                            }
                            if (In = z, Zo(), al && typeof al.onPostCommitFiberRoot == "function") try {
                                al.onPostCommitFiberRoot(Lh, g);
                            } catch  {}
                            L = !0;
                        }
                        return L;
                    } finally{
                        Bn = C, pr.transition = y;
                    }
                }
                return !1;
            }
            function fp(g, y, C) {
                y = pv(C, y), y = x_(g, y, 1), Nc(g, y), y = nr(), g = zc(g, 1), g !== null && (_u(g, 1, y), Js(g, y));
            }
            function Ds(g, y, C) {
                if (g.tag === 3) fp(g, g, C);
                else for(; y !== null;){
                    if (y.tag === 3) {
                        fp(y, g, C);
                        break;
                    } else if (y.tag === 1) {
                        var L = y.stateNode;
                        if (typeof y.type.getDerivedStateFromError == "function" || typeof L.componentDidCatch == "function" && (Da === null || !Da.has(L))) {
                            g = pv(C, g), g = xg(y, g, 1), Nc(y, g), g = nr(), y = zc(y, 1), y !== null && (_u(y, 1, g), Js(y, g));
                            break;
                        }
                    }
                    y = y.return;
                }
            }
            function Pv(g, y, C) {
                var L = g.pingCache;
                L !== null && L.delete(y), y = nr(), g.pingedLanes |= g.suspendedLanes & C, ci === g && (Lr & C) === C && (Qr === 4 || Qr === 3 && (Lr & 130023424) === Lr && 500 > Ii() - ap ? Yl(g, 0) : Gu |= C), Js(g, y);
            }
            function kv(g, y) {
                y === 0 && (g.mode & 1 ? (y = Kn, Kn <<= 1, !(Kn & 130023424) && (Kn = 4194304)) : y = 1);
                var C = nr();
                g = zc(g, y), g !== null && (_u(g, y, C), Js(g, C));
            }
            function E_(g) {
                var y = g.memoizedState, C = 0;
                y !== null && (C = y.retryLane), kv(g, C);
            }
            function M_(g, y) {
                var C = 0;
                switch(g.tag){
                    case 13:
                        var L = g.stateNode, z = g.memoizedState;
                        z !== null && (C = z.retryLane);
                        break;
                    case 19:
                        L = g.stateNode;
                        break;
                    default:
                        throw Error(o(314));
                }
                L !== null && L.delete(y), kv(g, C);
            }
            var Ov;
            Ov = function(g, y, C) {
                if (g !== null) if (g.memoizedProps !== y.pendingProps || jn.current) qi = !0;
                else {
                    if (!(g.lanes & C) && !(y.flags & 128)) return qi = !1, Eg(g, y, C);
                    qi = !!(g.flags & 131072);
                }
                else qi = !1, Dr && y.flags & 1048576 && d_(y, ig, y.index);
                switch(y.lanes = 0, y.tag){
                    case 2:
                        var L = y.type;
                        g !== null && (g.alternate = null, y.alternate = null, y.flags |= 2), g = y.pendingProps;
                        var z = Vt(y, Fn.current);
                        Yd(y, C), z = of(null, y, L, g, z, C);
                        var Q = Dc();
                        return y.flags |= 1, typeof z == "object" && z !== null && typeof z.render == "function" && z.$$typeof === void 0 ? (y.tag = 1, y.memoizedState = null, y.updateQueue = null, $n(L) ? (Q = !0, hi(y)) : Q = !1, y.memoizedState = z.state !== null && z.state !== void 0 ? z.state : null, Zd(y), z.updater = ng, y.stateNode = z, z._reactInternals = y, ev(y, L, g, C), y = gs(null, y, L, !0, Q, C)) : (y.tag = 0, Dr && Q && tv(y), Jr(null, y, z, C), y = y.child), y;
                    case 16:
                        L = y.elementType;
                        e: {
                            switch(g !== null && (g.alternate = null, y.alternate = null, y.flags |= 2), g = y.pendingProps, z = L._init, L = z(L._payload), y.type = L, z = y.tag = Q2(L), g = Xs(L, g), z){
                                case 0:
                                    y = Wl(null, y, L, g, C);
                                    break e;
                                case 1:
                                    y = ju(null, y, L, g, C);
                                    break e;
                                case 11:
                                    y = _r(null, y, L, g, C);
                                    break e;
                                case 14:
                                    y = xr(null, y, L, Xs(L.type, g), C);
                                    break e;
                            }
                            throw Error(o(306, L, ""));
                        }
                        return y;
                    case 0:
                        return L = y.type, z = y.pendingProps, z = y.elementType === L ? z : Xs(L, z), Wl(g, y, L, z, C);
                    case 1:
                        return L = y.type, z = y.pendingProps, z = y.elementType === L ? z : Xs(L, z), ju(g, y, L, z, C);
                    case 3:
                        e: {
                            if (Zh(y), g === null) throw Error(o(387));
                            L = y.pendingProps, Q = y.memoizedState, z = Q.element, Zy(g, y), tg(y, L, null, C);
                            var xe = y.memoizedState;
                            if (L = xe.element, Me && Q.isDehydrated) if (Q = {
                                element: L,
                                isDehydrated: !1,
                                cache: xe.cache,
                                transitions: xe.transitions
                            }, y.updateQueue.baseState = Q, y.memoizedState = Q, y.flags & 256) {
                                z = Error(o(423)), y = yv(g, y, L, C, z);
                                break e;
                            } else if (L !== z) {
                                z = Error(o(424)), y = yv(g, y, L, C, z);
                                break e;
                            } else for(Me && (rs = Vd(y.stateNode.containerInfo), Ns = y, Dr = !0, ta = null, Qd = !1), C = p_(y, null, L, C), y.child = C; C;)C.flags = C.flags & -3 | 4096, C = C.sibling;
                            else {
                                if (ef(), L === z) {
                                    y = Zs(g, y, C);
                                    break e;
                                }
                                Jr(g, y, L, C);
                            }
                            y = y.child;
                        }
                        return y;
                    case 5:
                        return m_(y), g === null && kc(y), L = y.type, z = y.pendingProps, Q = g !== null ? g.memoizedProps : null, xe = z.children, ue(L, z) ? xe = null : Q !== null && ue(L, Q) && (y.flags |= 32), Ps(g, y), Jr(g, y, xe, C), y.child;
                    case 6:
                        return g === null && kc(y), null;
                    case 13:
                        return vv(g, y, C);
                    case 4:
                        return ag(y, y.stateNode.containerInfo), L = y.pendingProps, g === null ? y.child = jl(y, null, L, C) : Jr(g, y, L, C), y.child;
                    case 11:
                        return L = y.type, z = y.pendingProps, z = y.elementType === L ? z : Xs(L, z), _r(g, y, L, z, C);
                    case 7:
                        return Jr(g, y, y.pendingProps, C), y.child;
                    case 8:
                        return Jr(g, y, y.pendingProps.children, C), y.child;
                    case 12:
                        return Jr(g, y, y.pendingProps.children, C), y.child;
                    case 10:
                        e: {
                            if (L = y.type._context, z = y.pendingProps, Q = y.memoizedProps, xe = z.value, Tu(y, L, xe), Q !== null) if (Is(Q.value, xe)) {
                                if (Q.children === z.children && !jn.current) {
                                    y = Zs(g, y, C);
                                    break e;
                                }
                            } else for(Q = y.child, Q !== null && (Q.return = y); Q !== null;){
                                var ke = Q.dependencies;
                                if (ke !== null) {
                                    xe = Q.child;
                                    for(var tt = ke.firstContext; tt !== null;){
                                        if (tt.context === L) {
                                            if (Q.tag === 1) {
                                                tt = Dl(-1, C & -C), tt.tag = 2;
                                                var vt = Q.updateQueue;
                                                if (vt !== null) {
                                                    vt = vt.shared;
                                                    var Ut = vt.pending;
                                                    Ut === null ? tt.next = tt : (tt.next = Ut.next, Ut.next = tt), vt.pending = tt;
                                                }
                                            }
                                            Q.lanes |= C, tt = Q.alternate, tt !== null && (tt.lanes |= C), Cu(Q.return, C, y), ke.lanes |= C;
                                            break;
                                        }
                                        tt = tt.next;
                                    }
                                } else if (Q.tag === 10) xe = Q.type === y.type ? null : Q.child;
                                else if (Q.tag === 18) {
                                    if (xe = Q.return, xe === null) throw Error(o(341));
                                    xe.lanes |= C, ke = xe.alternate, ke !== null && (ke.lanes |= C), Cu(xe, C, y), xe = Q.sibling;
                                } else xe = Q.child;
                                if (xe !== null) xe.return = Q;
                                else for(xe = Q; xe !== null;){
                                    if (xe === y) {
                                        xe = null;
                                        break;
                                    }
                                    if (Q = xe.sibling, Q !== null) {
                                        Q.return = xe.return, xe = Q;
                                        break;
                                    }
                                    xe = xe.return;
                                }
                                Q = xe;
                            }
                            Jr(g, y, z.children, C), y = y.child;
                        }
                        return y;
                    case 9:
                        return z = y.type, L = y.pendingProps.children, Yd(y, C), z = Ks(z), L = L(z), y.flags |= 1, Jr(g, y, L, C), y.child;
                    case 14:
                        return L = y.type, z = Xs(L, y.pendingProps), z = Xs(L.type, z), xr(g, y, L, z, C);
                    case 15:
                        return Vl(g, y, y.type, y.pendingProps, C);
                    case 17:
                        return L = y.type, z = y.pendingProps, z = y.elementType === L ? z : Xs(L, z), g !== null && (g.alternate = null, y.alternate = null, y.flags |= 2), y.tag = 1, $n(L) ? (g = !0, hi(y)) : g = !1, Yd(y, C), c_(y, L, z), ev(y, L, z, C), gs(null, y, L, !0, g, C);
                    case 19:
                        return Uu(g, y, C);
                    case 22:
                        return is(g, y, C);
                }
                throw Error(o(156, y.tag));
            };
            function Ag(g, y) {
                return Su(g, y);
            }
            function T_(g, y, C, L) {
                this.tag = g, this.key = C, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = y, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = L, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
            }
            function Po(g, y, C, L) {
                return new T_(g, y, C, L);
            }
            function Ng(g) {
                return g = g.prototype, !(!g || !g.isReactComponent);
            }
            function Q2(g) {
                if (typeof g == "function") return Ng(g) ? 1 : 0;
                if (g != null) {
                    if (g = g.$$typeof, g === _) return 11;
                    if (g === M) return 14;
                }
                return 2;
            }
            function Zl(g, y) {
                var C = g.alternate;
                return C === null ? (C = Po(g.tag, y, g.key, g.mode), C.elementType = g.elementType, C.type = g.type, C.stateNode = g.stateNode, C.alternate = g, g.alternate = C) : (C.pendingProps = y, C.type = g.type, C.flags = 0, C.subtreeFlags = 0, C.deletions = null), C.flags = g.flags & 14680064, C.childLanes = g.childLanes, C.lanes = g.lanes, C.child = g.child, C.memoizedProps = g.memoizedProps, C.memoizedState = g.memoizedState, C.updateQueue = g.updateQueue, y = g.dependencies, C.dependencies = y === null ? null : {
                    lanes: y.lanes,
                    firstContext: y.firstContext
                }, C.sibling = g.sibling, C.index = g.index, C.ref = g.ref, C;
            }
            function Pg(g, y, C, L, z, Q) {
                var xe = 2;
                if (L = g, typeof g == "function") Ng(g) && (xe = 1);
                else if (typeof g == "string") xe = 5;
                else e: switch(g){
                    case u:
                        return Zu(C.children, z, Q, y);
                    case f:
                        xe = 8, z |= 8;
                        break;
                    case h:
                        return g = Po(12, C, y, z | 2), g.elementType = h, g.lanes = Q, g;
                    case w:
                        return g = Po(13, C, y, z), g.elementType = w, g.lanes = Q, g;
                    case b:
                        return g = Po(19, C, y, z), g.elementType = b, g.lanes = Q, g;
                    case T:
                        return hp(C, z, Q, y);
                    default:
                        if (typeof g == "object" && g !== null) switch(g.$$typeof){
                            case m:
                                xe = 10;
                                break e;
                            case v:
                                xe = 9;
                                break e;
                            case _:
                                xe = 11;
                                break e;
                            case M:
                                xe = 14;
                                break e;
                            case E:
                                xe = 16, L = null;
                                break e;
                        }
                        throw Error(o(130, g == null ? g : typeof g, ""));
                }
                return y = Po(xe, C, y, z), y.elementType = g, y.type = L, y.lanes = Q, y;
            }
            function Zu(g, y, C, L) {
                return g = Po(7, g, L, y), g.lanes = C, g;
            }
            function hp(g, y, C, L) {
                return g = Po(22, g, L, y), g.elementType = T, g.lanes = C, g.stateNode = {}, g;
            }
            function kg(g, y, C) {
                return g = Po(6, g, null, y), g.lanes = C, g;
            }
            function Og(g, y, C) {
                return y = Po(4, g.children !== null ? g.children : [], g.key, y), y.lanes = C, y.stateNode = {
                    containerInfo: g.containerInfo,
                    pendingChildren: null,
                    implementation: g.implementation
                }, y;
            }
            function Dg(g, y, C, L, z) {
                this.tag = y, this.containerInfo = g, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = Te, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = Hm(0), this.expirationTimes = Hm(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = Hm(0), this.identifierPrefix = L, this.onRecoverableError = z, Me && (this.mutableSourceEagerHydrationData = null);
            }
            function C_(g, y, C, L, z, Q, xe, ke, tt) {
                return g = new Dg(g, y, C, ke, tt), y === 1 ? (y = 1, Q === !0 && (y |= 8)) : y = 0, Q = Po(3, null, null, y), g.current = Q, Q.stateNode = g, Q.memoizedState = {
                    element: L,
                    isDehydrated: C,
                    cache: null,
                    transitions: null
                }, Zd(Q), g;
            }
            function R_(g) {
                if (!g) return on;
                g = g._reactInternals;
                e: {
                    if (R(g) !== g || g.tag !== 1) throw Error(o(170));
                    var y = g;
                    do {
                        switch(y.tag){
                            case 3:
                                y = y.stateNode.context;
                                break e;
                            case 1:
                                if ($n(y.type)) {
                                    y = y.stateNode.__reactInternalMemoizedMergedChildContext;
                                    break e;
                                }
                        }
                        y = y.return;
                    }while (y !== null);
                    throw Error(o(171));
                }
                if (g.tag === 1) {
                    var C = g.type;
                    if ($n(C)) return Ra(g, C, y);
                }
                return y;
            }
            function I_(g) {
                var y = g._reactInternals;
                if (y === void 0) throw typeof g.render == "function" ? Error(o(188)) : (g = Object.keys(g).join(","), Error(o(268, g)));
                return g = U(y), g === null ? null : g.stateNode;
            }
            function ia(g, y) {
                if (g = g.memoizedState, g !== null && g.dehydrated !== null) {
                    var C = g.retryLane;
                    g.retryLane = C !== 0 && C < y ? C : y;
                }
            }
            function pp(g, y) {
                ia(g, y), (g = g.alternate) && ia(g, y);
            }
            function Lg(g) {
                return g = U(g), g === null ? null : g.stateNode;
            }
            function A_() {
                return null;
            }
            return n.attemptContinuousHydration = function(g) {
                if (g.tag === 13) {
                    var y = nr();
                    vs(g, 134217728, y), pp(g, 134217728);
                }
            }, n.attemptHydrationAtCurrentPriority = function(g) {
                if (g.tag === 13) {
                    var y = nr(), C = La(g);
                    vs(g, C, y), pp(g, C);
                }
            }, n.attemptSynchronousHydration = function(g) {
                switch(g.tag){
                    case 3:
                        var y = g.stateNode;
                        if (y.current.memoizedState.isDehydrated) {
                            var C = Gs(y.pendingLanes);
                            C !== 0 && (ol(y, C | 1), Js(y, Ii()), !(In & 6) && (Xu(), Zo()));
                        }
                        break;
                    case 13:
                        var L = nr();
                        vf(function() {
                            return vs(g, 1, L);
                        }), pp(g, 1);
                }
            }, n.batchedUpdates = function(g, y) {
                var C = In;
                In |= 1;
                try {
                    return g(y);
                } finally{
                    In = C, In === 0 && (Xu(), Km && Zo());
                }
            }, n.createComponentSelector = function(g) {
                return {
                    $$typeof: rp,
                    value: g
                };
            }, n.createContainer = function(g, y, C, L, z, Q, xe) {
                return C_(g, y, !1, null, C, L, z, Q, xe);
            }, n.createHasPseudoClassSelector = function(g) {
                return {
                    $$typeof: Wu,
                    value: g
                };
            }, n.createHydrationContainer = function(g, y, C, L, z, Q, xe, ke, tt) {
                return g = C_(C, L, !0, g, z, Q, xe, ke, tt), g.context = R_(null), C = g.current, L = nr(), z = La(C), Q = Dl(L, z), Q.callback = y ?? null, Nc(C, Q), g.current.lanes = z, _u(g, z, L), Js(g, L), g;
            }, n.createPortal = function(g, y, C) {
                var L = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
                return {
                    $$typeof: c,
                    key: L == null ? null : "" + L,
                    children: g,
                    containerInfo: y,
                    implementation: C
                };
            }, n.createRoleSelector = function(g) {
                return {
                    $$typeof: qu,
                    value: g
                };
            }, n.createTestNameSelector = function(g) {
                return {
                    $$typeof: $l,
                    value: g
                };
            }, n.createTextSelector = function(g) {
                return {
                    $$typeof: pf,
                    value: g
                };
            }, n.deferredUpdates = function(g) {
                var y = Bn, C = pr.transition;
                try {
                    return pr.transition = null, Bn = 16, g();
                } finally{
                    Bn = y, pr.transition = C;
                }
            }, n.discreteUpdates = function(g, y, C, L, z) {
                var Q = Bn, xe = pr.transition;
                try {
                    return pr.transition = null, Bn = 1, g(y, C, L, z);
                } finally{
                    Bn = Q, pr.transition = xe, In === 0 && Xu();
                }
            }, n.findAllNodes = Gl, n.findBoundingRects = function(g, y) {
                if (!ae) throw Error(o(363));
                y = Gl(g, y), g = [];
                for(var C = 0; C < y.length; C++)g.push(G(y[C]));
                for(y = g.length - 1; 0 < y; y--){
                    C = g[y];
                    for(var L = C.x, z = L + C.width, Q = C.y, xe = Q + C.height, ke = y - 1; 0 <= ke; ke--)if (y !== ke) {
                        var tt = g[ke], vt = tt.x, Ut = vt + tt.width, xn = tt.y, rn = xn + tt.height;
                        if (L >= vt && Q >= xn && z <= Ut && xe <= rn) {
                            g.splice(y, 1);
                            break;
                        } else if (L !== vt || C.width !== tt.width || rn < Q || xn > xe) {
                            if (!(Q !== xn || C.height !== tt.height || Ut < L || vt > z)) {
                                vt > L && (tt.width += vt - L, tt.x = L), Ut < z && (tt.width = z - vt), g.splice(y, 1);
                                break;
                            }
                        } else {
                            xn > Q && (tt.height += xn - Q, tt.y = Q), rn < xe && (tt.height = xe - xn), g.splice(y, 1);
                            break;
                        }
                    }
                }
                return g;
            }, n.findHostInstance = I_, n.findHostInstanceWithNoPortals = function(g) {
                return g = k(g), g = g !== null ? j(g) : null, g === null ? null : g.stateNode;
            }, n.findHostInstanceWithWarning = function(g) {
                return I_(g);
            }, n.flushControlled = function(g) {
                var y = In;
                In |= 1;
                var C = pr.transition, L = Bn;
                try {
                    pr.transition = null, Bn = 1, g();
                } finally{
                    Bn = L, pr.transition = C, In = y, In === 0 && (Xu(), Zo());
                }
            }, n.flushPassiveEffects = hl, n.flushSync = vf, n.focusWithin = function(g, y) {
                if (!ae) throw Error(o(363));
                for(g = ip(g), y = Io(g, y), y = Array.from(y), g = 0; g < y.length;){
                    var C = y[g++];
                    if (!pe(C)) {
                        if (C.tag === 5 && Ie(C.stateNode)) return !0;
                        for(C = C.child; C !== null;)y.push(C), C = C.sibling;
                    }
                }
                return !1;
            }, n.getCurrentUpdatePriority = function() {
                return Bn;
            }, n.getFindAllNodesFailureDescription = function(g, y) {
                if (!ae) throw Error(o(363));
                var C = 0, L = [];
                g = [
                    ip(g),
                    0
                ];
                for(var z = 0; z < g.length;){
                    var Q = g[z++], xe = g[z++], ke = y[xe];
                    if ((Q.tag !== 5 || !pe(Q)) && (sp(Q, ke) && (L.push(Bc(ke)), xe++, xe > C && (C = xe)), xe < y.length)) for(Q = Q.child; Q !== null;)g.push(Q, xe), Q = Q.sibling;
                }
                if (C < y.length) {
                    for(g = []; C < y.length; C++)g.push(Bc(y[C]));
                    return `findAllNodes was able to match part of the selector:
  ` + (L.join(" > ") + `

No matching component was found for:
  `) + g.join(" > ");
                }
                return null;
            }, n.getPublicRootInstance = function(g) {
                if (g = g.current, !g.child) return null;
                switch(g.child.tag){
                    case 5:
                        return q(g.child.stateNode);
                    default:
                        return g.child.stateNode;
                }
            }, n.injectIntoDevTools = function(g) {
                if (g = {
                    bundleType: g.bundleType,
                    version: g.version,
                    rendererPackageName: g.rendererPackageName,
                    rendererConfig: g.rendererConfig,
                    overrideHookState: null,
                    overrideHookStateDeletePath: null,
                    overrideHookStateRenamePath: null,
                    overrideProps: null,
                    overridePropsDeletePath: null,
                    overridePropsRenamePath: null,
                    setErrorHandler: null,
                    setSuspenseHandler: null,
                    scheduleUpdate: null,
                    currentDispatcherRef: a.ReactCurrentDispatcher,
                    findHostInstanceByFiber: Lg,
                    findFiberByHostInstance: g.findFiberByHostInstance || A_,
                    findHostInstancesForRefresh: null,
                    scheduleRefresh: null,
                    scheduleRoot: null,
                    setRefreshHandler: null,
                    getCurrentFiber: null,
                    reconcilerVersion: "18.0.0-fc46dba67-20220329"
                }, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u") g = !1;
                else {
                    var y = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                    if (y.isDisabled || !y.supportsFiber) g = !0;
                    else {
                        try {
                            Lh = y.inject(g), al = y;
                        } catch  {}
                        g = !!y.checkDCE;
                    }
                }
                return g;
            }, n.isAlreadyRendering = function() {
                return !1;
            }, n.observeVisibleRects = function(g, y, C, L) {
                if (!ae) throw Error(o(363));
                g = Gl(g, y);
                var z = Xe(g, C, L).disconnect;
                return {
                    disconnect: function() {
                        z();
                    }
                };
            }, n.registerMutableSourceForHydration = function(g, y) {
                var C = y._getVersion;
                C = C(y._source), g.mutableSourceEagerHydrationData == null ? g.mutableSourceEagerHydrationData = [
                    y,
                    C
                ] : g.mutableSourceEagerHydrationData.push(y, C);
            }, n.runWithPriority = function(g, y) {
                var C = Bn;
                try {
                    return Bn = g, y();
                } finally{
                    Bn = C;
                }
            }, n.shouldError = function() {
                return null;
            }, n.shouldSuspend = function() {
                return !1;
            }, n.updateContainer = function(g, y, C, L) {
                var z = y.current, Q = nr(), xe = La(z);
                return C = R_(C), y.context === null ? y.context = C : y.pendingContext = C, y = Dl(Q, xe), y.payload = {
                    element: g
                }, L = L === void 0 ? null : L, L !== null && (y.callback = L), Nc(z, y), g = vs(z, xe, Q), g !== null && Qm(g, z, xe), xe;
            }, n;
        }), sN;
    }
    var Cj;
    function s1e() {
        return Cj || (Cj = 1, nN.exports = i1e()), nN.exports;
    }
    var o1e = s1e();
    const a1e = Go(o1e);
    var Rj = mH();
    const xO = {}, l1e = (t)=>void Object.assign(xO, t);
    function c1e(t, e) {
        function n(u, { args: f = [], attach: h, ...m }, v) {
            let _ = `${u[0].toUpperCase()}${u.slice(1)}`, w;
            if (u === "primitive") {
                if (m.object === void 0) throw new Error("R3F: Primitives without 'object' are invalid!");
                const b = m.object;
                w = E0(b, {
                    type: u,
                    root: v,
                    attach: h,
                    primitive: !0
                });
            } else {
                const b = xO[_];
                if (!b) throw new Error(`R3F: ${_} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);
                if (!Array.isArray(f)) throw new Error("R3F: The args prop must be an array!");
                w = E0(new b(...f), {
                    type: u,
                    root: v,
                    attach: h,
                    memoizedProps: {
                        args: f
                    }
                });
            }
            return w.__r3f.attach === void 0 && (w.isBufferGeometry ? w.__r3f.attach = "geometry" : w.isMaterial && (w.__r3f.attach = "material")), _ !== "inject" && lN(w, m), w;
        }
        function r(u, f) {
            let h = !1;
            if (f) {
                var m, v;
                (m = f.__r3f) != null && m.attach ? aN(u, f, f.__r3f.attach) : f.isObject3D && u.isObject3D && (u.add(f), h = !0), h || (v = u.__r3f) == null || v.objects.push(f), f.__r3f || E0(f, {}), f.__r3f.parent = u, tP(f), M0(f);
            }
        }
        function i(u, f, h) {
            let m = !1;
            if (f) {
                var v, _;
                if ((v = f.__r3f) != null && v.attach) aN(u, f, f.__r3f.attach);
                else if (f.isObject3D && u.isObject3D) {
                    f.parent = u, f.dispatchEvent({
                        type: "added"
                    }), u.dispatchEvent({
                        type: "childadded",
                        child: f
                    });
                    const w = u.children.filter((M)=>M !== f), b = w.indexOf(h);
                    u.children = [
                        ...w.slice(0, b),
                        f,
                        ...w.slice(b)
                    ], m = !0;
                }
                m || (_ = u.__r3f) == null || _.objects.push(f), f.__r3f || E0(f, {}), f.__r3f.parent = u, tP(f), M0(f);
            }
        }
        function s(u, f, h = !1) {
            u && [
                ...u
            ].forEach((m)=>o(f, m, h));
        }
        function o(u, f, h) {
            if (f) {
                var m, v, _;
                if (f.__r3f && (f.__r3f.parent = null), (m = u.__r3f) != null && m.objects && (u.__r3f.objects = u.__r3f.objects.filter((T)=>T !== f)), (v = f.__r3f) != null && v.attach) kj(u, f, f.__r3f.attach);
                else if (f.isObject3D && u.isObject3D) {
                    var w;
                    u.remove(f), (w = f.__r3f) != null && w.root && g1e(ZS(f), f);
                }
                const M = (_ = f.__r3f) == null ? void 0 : _.primitive, E = !M && (h === void 0 ? f.dispose !== null : h);
                if (!M) {
                    var b;
                    s((b = f.__r3f) == null ? void 0 : b.objects, f, E), s(f.children, f, E);
                }
                if (delete f.__r3f, E && f.dispose && f.type !== "Scene") {
                    const T = ()=>{
                        try {
                            f.dispose();
                        } catch  {}
                    };
                    typeof IS_REACT_ACT_ENVIRONMENT > "u" ? Rj.unstable_scheduleCallback(Rj.unstable_IdlePriority, T) : T();
                }
                M0(u);
            }
        }
        function a(u, f, h, m) {
            var v;
            const _ = (v = u.__r3f) == null ? void 0 : v.parent;
            if (!_) return;
            const w = n(f, h, u.__r3f.root);
            if (u.children) {
                for (const b of u.children)b.__r3f && r(w, b);
                u.children = u.children.filter((b)=>!b.__r3f);
            }
            u.__r3f.objects.forEach((b)=>r(w, b)), u.__r3f.objects = [], u.__r3f.autoRemovedBeforeAppend || o(_, u), w.parent && (w.__r3f.autoRemovedBeforeAppend = !0), r(_, w), w.raycast && w.__r3f.eventCount && ZS(w).getState().internal.interaction.push(w), [
                m,
                m.alternate
            ].forEach((b)=>{
                b !== null && (b.stateNode = w, b.ref && (typeof b.ref == "function" ? b.ref(w) : b.ref.current = w));
            });
        }
        const l = ()=>{};
        return {
            reconciler: a1e({
                createInstance: n,
                removeChild: o,
                appendChild: r,
                appendInitialChild: r,
                insertBefore: i,
                supportsMutation: !0,
                isPrimaryRenderer: !1,
                supportsPersistence: !1,
                supportsHydration: !1,
                noTimeout: -1,
                appendChildToContainer: (u, f)=>{
                    if (!f) return;
                    const h = u.getState().scene;
                    h.__r3f && (h.__r3f.root = u, r(h, f));
                },
                removeChildFromContainer: (u, f)=>{
                    f && o(u.getState().scene, f);
                },
                insertInContainerBefore: (u, f, h)=>{
                    if (!f || !h) return;
                    const m = u.getState().scene;
                    m.__r3f && i(m, f, h);
                },
                getRootHostContext: ()=>null,
                getChildHostContext: (u)=>u,
                finalizeInitialChildren (u) {
                    var f;
                    return !!((f = u?.__r3f) != null ? f : {}).handlers;
                },
                prepareUpdate (u, f, h, m) {
                    var v;
                    if (((v = u?.__r3f) != null ? v : {}).primitive && m.object && m.object !== u) return [
                        !0
                    ];
                    {
                        const { args: w = [], children: b, ...M } = m, { args: E = [], children: T, ...P } = h;
                        if (!Array.isArray(w)) throw new Error("R3F: the args prop must be an array!");
                        if (w.some((O, D)=>O !== E[D])) return [
                            !0
                        ];
                        const A = _H(u, M, P, !0);
                        return A.changes.length ? [
                            !1,
                            A
                        ] : null;
                    }
                },
                commitUpdate (u, [f, h], m, v, _, w) {
                    f ? a(u, m, _, w) : lN(u, h);
                },
                commitMount (u, f, h, m) {
                    var v;
                    const _ = (v = u.__r3f) != null ? v : {};
                    u.raycast && _.handlers && _.eventCount && ZS(u).getState().internal.interaction.push(u);
                },
                getPublicInstance: (u)=>u,
                prepareForCommit: ()=>null,
                preparePortalMount: (u)=>E0(u.getState().scene),
                resetAfterCommit: ()=>{},
                shouldSetTextContent: ()=>!1,
                clearContainer: ()=>!1,
                hideInstance (u) {
                    var f;
                    const { attach: h, parent: m } = (f = u.__r3f) != null ? f : {};
                    h && m && kj(m, u, h), u.isObject3D && (u.visible = !1), M0(u);
                },
                unhideInstance (u, f) {
                    var h;
                    const { attach: m, parent: v } = (h = u.__r3f) != null ? h : {};
                    m && v && aN(v, u, m), (u.isObject3D && f.visible == null || f.visible) && (u.visible = !0), M0(u);
                },
                createTextInstance: l,
                hideTextInstance: l,
                unhideTextInstance: l,
                getCurrentEventPriority: ()=>e ? e() : B0.DefaultEventPriority,
                beforeActiveInstanceBlur: ()=>{},
                afterActiveInstanceBlur: ()=>{},
                detachDeletedInstance: ()=>{},
                now: typeof performance < "u" && Kr.fun(performance.now) ? performance.now : Kr.fun(Date.now) ? Date.now : ()=>0,
                scheduleTimeout: Kr.fun(setTimeout) ? setTimeout : void 0,
                cancelTimeout: Kr.fun(clearTimeout) ? clearTimeout : void 0
            }),
            applyProps: lN
        };
    }
    var Ij, Aj;
    const oN = (t)=>"colorSpace" in t || "outputColorSpace" in t, gH = ()=>{
        var t;
        return (t = xO.ColorManagement) != null ? t : null;
    }, yH = (t)=>t && t.isOrthographicCamera, u1e = (t)=>t && t.hasOwnProperty("current"), Yw = typeof window < "u" && ((Ij = window.document) != null && Ij.createElement || ((Aj = window.navigator) == null ? void 0 : Aj.product) === "ReactNative") ? J.useLayoutEffect : J.useEffect;
    function vH(t) {
        const e = J.useRef(t);
        return Yw(()=>void (e.current = t), [
            t
        ]), e;
    }
    function d1e({ set: t }) {
        return Yw(()=>(t(new Promise(()=>null)), ()=>t(!1)), [
            t
        ]), null;
    }
    class xH extends J.Component {
        constructor(...e){
            super(...e), this.state = {
                error: !1
            };
        }
        componentDidCatch(e) {
            this.props.set(e);
        }
        render() {
            return this.state.error ? null : this.props.children;
        }
    }
    xH.getDerivedStateFromError = ()=>({
            error: !0
        });
    const bH = "__default", Nj = new Map, f1e = (t)=>t && !!t.memoized && !!t.changes;
    function wH(t) {
        var e;
        const n = typeof window < "u" ? (e = window.devicePixelRatio) != null ? e : 2 : 1;
        return Array.isArray(t) ? Math.min(Math.max(t[0], n), t[1]) : t;
    }
    const ux = (t)=>{
        var e;
        return (e = t.__r3f) == null ? void 0 : e.root.getState();
    };
    function ZS(t) {
        let e = t.__r3f.root;
        for(; e.getState().previousRoot;)e = e.getState().previousRoot;
        return e;
    }
    const Kr = {
        obj: (t)=>t === Object(t) && !Kr.arr(t) && typeof t != "function",
        fun: (t)=>typeof t == "function",
        str: (t)=>typeof t == "string",
        num: (t)=>typeof t == "number",
        boo: (t)=>typeof t == "boolean",
        und: (t)=>t === void 0,
        arr: (t)=>Array.isArray(t),
        equ (t, e, { arrays: n = "shallow", objects: r = "reference", strict: i = !0 } = {}) {
            if (typeof t != typeof e || !!t != !!e) return !1;
            if (Kr.str(t) || Kr.num(t) || Kr.boo(t)) return t === e;
            const s = Kr.obj(t);
            if (s && r === "reference") return t === e;
            const o = Kr.arr(t);
            if (o && n === "reference") return t === e;
            if ((o || s) && t === e) return !0;
            let a;
            for(a in t)if (!(a in e)) return !1;
            if (s && n === "shallow" && r === "shallow") {
                for(a in i ? e : t)if (!Kr.equ(t[a], e[a], {
                    strict: i,
                    objects: "reference"
                })) return !1;
            } else for(a in i ? e : t)if (t[a] !== e[a]) return !1;
            if (Kr.und(a)) {
                if (o && t.length === 0 && e.length === 0 || s && Object.keys(t).length === 0 && Object.keys(e).length === 0) return !0;
                if (t !== e) return !1;
            }
            return !0;
        }
    };
    function h1e(t) {
        t.dispose && t.type !== "Scene" && t.dispose();
        for(const e in t)e.dispose == null || e.dispose(), delete t[e];
    }
    function E0(t, e) {
        const n = t;
        return n.__r3f = {
            type: "",
            root: null,
            previousAttach: null,
            memoizedProps: {},
            eventCount: 0,
            handlers: {},
            objects: [],
            parent: null,
            ...e
        }, t;
    }
    function eP(t, e) {
        let n = t;
        if (e.includes("-")) {
            const r = e.split("-"), i = r.pop();
            return n = r.reduce((s, o)=>s[o], t), {
                target: n,
                key: i
            };
        } else return {
            target: n,
            key: e
        };
    }
    const Pj = /-\d+$/;
    function aN(t, e, n) {
        if (Kr.str(n)) {
            if (Pj.test(n)) {
                const s = n.replace(Pj, ""), { target: o, key: a } = eP(t, s);
                Array.isArray(o[a]) || (o[a] = []);
            }
            const { target: r, key: i } = eP(t, n);
            e.__r3f.previousAttach = r[i], r[i] = e;
        } else e.__r3f.previousAttach = n(t, e);
    }
    function kj(t, e, n) {
        var r, i;
        if (Kr.str(n)) {
            const { target: s, key: o } = eP(t, n), a = e.__r3f.previousAttach;
            a === void 0 ? delete s[o] : s[o] = a;
        } else (r = e.__r3f) == null || r.previousAttach == null || r.previousAttach(t, e);
        (i = e.__r3f) == null || delete i.previousAttach;
    }
    function _H(t, { children: e, key: n, ref: r, ...i }, { children: s, key: o, ref: a, ...l } = {}, c = !1) {
        const u = t.__r3f, f = Object.entries(i), h = [];
        if (c) {
            const v = Object.keys(l);
            for(let _ = 0; _ < v.length; _++)i.hasOwnProperty(v[_]) || f.unshift([
                v[_],
                bH + "remove"
            ]);
        }
        f.forEach(([v, _])=>{
            var w;
            if ((w = t.__r3f) != null && w.primitive && v === "object" || Kr.equ(_, l[v])) return;
            if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(v)) return h.push([
                v,
                _,
                !0,
                []
            ]);
            let b = [];
            v.includes("-") && (b = v.split("-")), h.push([
                v,
                _,
                !1,
                b
            ]);
            for(const M in i){
                const E = i[M];
                M.startsWith(`${v}-`) && h.push([
                    M,
                    E,
                    !1,
                    M.split("-")
                ]);
            }
        });
        const m = {
            ...i
        };
        return u != null && u.memoizedProps && u != null && u.memoizedProps.args && (m.args = u.memoizedProps.args), u != null && u.memoizedProps && u != null && u.memoizedProps.attach && (m.attach = u.memoizedProps.attach), {
            memoized: m,
            changes: h
        };
    }
    function lN(t, e) {
        var n;
        const r = t.__r3f, i = r?.root, s = i == null || i.getState == null ? void 0 : i.getState(), { memoized: o, changes: a } = f1e(e) ? e : _H(t, e), l = r?.eventCount;
        t.__r3f && (t.__r3f.memoizedProps = o);
        for(let h = 0; h < a.length; h++){
            let [m, v, _, w] = a[h];
            if (oN(t)) {
                const T = "srgb", P = "srgb-linear";
                m === "encoding" ? (m = "colorSpace", v = v === 3001 ? T : P) : m === "outputEncoding" && (m = "outputColorSpace", v = v === 3001 ? T : P);
            }
            let b = t, M = b[m];
            if (w.length && (M = w.reduce((E, T)=>E[T], t), !(M && M.set))) {
                const [E, ...T] = w.reverse();
                b = T.reverse().reduce((P, A)=>P[A], t), m = E;
            }
            if (v === bH + "remove") if (b.constructor) {
                let E = Nj.get(b.constructor);
                E || (E = new b.constructor, Nj.set(b.constructor, E)), v = E[m];
            } else v = 0;
            if (_ && r) v ? r.handlers[m] = v : delete r.handlers[m], r.eventCount = Object.keys(r.handlers).length;
            else if (M && M.set && (M.copy || M instanceof hm)) {
                if (Array.isArray(v)) M.fromArray ? M.fromArray(v) : M.set(...v);
                else if (M.copy && v && v.constructor && M.constructor === v.constructor) M.copy(v);
                else if (v !== void 0) {
                    var c;
                    const E = (c = M) == null ? void 0 : c.isColor;
                    !E && M.setScalar ? M.setScalar(v) : M instanceof hm && v instanceof hm ? M.mask = v.mask : M.set(v), !gH() && s && !s.linear && E && M.convertSRGBToLinear();
                }
            } else {
                var u;
                if (b[m] = v, (u = b[m]) != null && u.isTexture && b[m].format === lo && b[m].type === _c && s) {
                    const E = b[m];
                    oN(E) && oN(s.gl) ? E.colorSpace = s.gl.outputColorSpace : E.encoding = s.gl.outputEncoding;
                }
            }
            M0(t);
        }
        if (r && r.parent && t.raycast && l !== r.eventCount) {
            const h = ZS(t).getState().internal, m = h.interaction.indexOf(t);
            m > -1 && h.interaction.splice(m, 1), r.eventCount && h.interaction.push(t);
        }
        return !(a.length === 1 && a[0][0] === "onUpdate") && a.length && (n = t.__r3f) != null && n.parent && tP(t), t;
    }
    function M0(t) {
        var e, n;
        const r = (e = t.__r3f) == null || (n = e.root) == null || n.getState == null ? void 0 : n.getState();
        r && r.internal.frames === 0 && r.invalidate();
    }
    function tP(t) {
        t.onUpdate == null || t.onUpdate(t);
    }
    function p1e(t, e) {
        t.manual || (yH(t) ? (t.left = e.width / -2, t.right = e.width / 2, t.top = e.height / 2, t.bottom = e.height / -2) : t.aspect = e.width / e.height, t.updateProjectionMatrix(), t.updateMatrixWorld());
    }
    function yS(t) {
        return (t.eventObject || t.object).uuid + "/" + t.index + t.instanceId;
    }
    function m1e() {
        var t;
        const e = typeof self < "u" && self || typeof window < "u" && window;
        if (!e) return B0.DefaultEventPriority;
        switch((t = e.event) == null ? void 0 : t.type){
            case "click":
            case "contextmenu":
            case "dblclick":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
                return B0.DiscreteEventPriority;
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerenter":
            case "pointerleave":
            case "wheel":
                return B0.ContinuousEventPriority;
            default:
                return B0.DefaultEventPriority;
        }
    }
    function SH(t, e, n, r) {
        const i = n.get(e);
        i && (n.delete(e), n.size === 0 && (t.delete(r), i.target.releasePointerCapture(r)));
    }
    function g1e(t, e) {
        const { internal: n } = t.getState();
        n.interaction = n.interaction.filter((r)=>r !== e), n.initialHits = n.initialHits.filter((r)=>r !== e), n.hovered.forEach((r, i)=>{
            (r.eventObject === e || r.object === e) && n.hovered.delete(i);
        }), n.capturedMap.forEach((r, i)=>{
            SH(n.capturedMap, e, r, i);
        });
    }
    function y1e(t) {
        function e(l) {
            const { internal: c } = t.getState(), u = l.offsetX - c.initialClick[0], f = l.offsetY - c.initialClick[1];
            return Math.round(Math.sqrt(u * u + f * f));
        }
        function n(l) {
            return l.filter((c)=>[
                    "Move",
                    "Over",
                    "Enter",
                    "Out",
                    "Leave"
                ].some((u)=>{
                    var f;
                    return (f = c.__r3f) == null ? void 0 : f.handlers["onPointer" + u];
                }));
        }
        function r(l, c) {
            const u = t.getState(), f = new Set, h = [], m = c ? c(u.internal.interaction) : u.internal.interaction;
            for(let b = 0; b < m.length; b++){
                const M = ux(m[b]);
                M && (M.raycaster.camera = void 0);
            }
            u.previousRoot || u.events.compute == null || u.events.compute(l, u);
            function v(b) {
                const M = ux(b);
                if (!M || !M.events.enabled || M.raycaster.camera === null) return [];
                if (M.raycaster.camera === void 0) {
                    var E;
                    M.events.compute == null || M.events.compute(l, M, (E = M.previousRoot) == null ? void 0 : E.getState()), M.raycaster.camera === void 0 && (M.raycaster.camera = null);
                }
                return M.raycaster.camera ? M.raycaster.intersectObject(b, !0) : [];
            }
            let _ = m.flatMap(v).sort((b, M)=>{
                const E = ux(b.object), T = ux(M.object);
                return !E || !T ? b.distance - M.distance : T.events.priority - E.events.priority || b.distance - M.distance;
            }).filter((b)=>{
                const M = yS(b);
                return f.has(M) ? !1 : (f.add(M), !0);
            });
            u.events.filter && (_ = u.events.filter(_, u));
            for (const b of _){
                let M = b.object;
                for(; M;){
                    var w;
                    (w = M.__r3f) != null && w.eventCount && h.push({
                        ...b,
                        eventObject: M
                    }), M = M.parent;
                }
            }
            if ("pointerId" in l && u.internal.capturedMap.has(l.pointerId)) for (let b of u.internal.capturedMap.get(l.pointerId).values())f.has(yS(b.intersection)) || h.push(b.intersection);
            return h;
        }
        function i(l, c, u, f) {
            const h = t.getState();
            if (l.length) {
                const m = {
                    stopped: !1
                };
                for (const v of l){
                    const _ = ux(v.object) || h, { raycaster: w, pointer: b, camera: M, internal: E } = _, T = new ve(b.x, b.y, 0).unproject(M), P = (N)=>{
                        var k, U;
                        return (k = (U = E.capturedMap.get(N)) == null ? void 0 : U.has(v.eventObject)) != null ? k : !1;
                    }, A = (N)=>{
                        const k = {
                            intersection: v,
                            target: c.target
                        };
                        E.capturedMap.has(N) ? E.capturedMap.get(N).set(v.eventObject, k) : E.capturedMap.set(N, new Map([
                            [
                                v.eventObject,
                                k
                            ]
                        ])), c.target.setPointerCapture(N);
                    }, O = (N)=>{
                        const k = E.capturedMap.get(N);
                        k && SH(E.capturedMap, v.eventObject, k, N);
                    };
                    let D = {};
                    for(let N in c){
                        let k = c[N];
                        typeof k != "function" && (D[N] = k);
                    }
                    let R = {
                        ...v,
                        ...D,
                        pointer: b,
                        intersections: l,
                        stopped: m.stopped,
                        delta: u,
                        unprojectedPoint: T,
                        ray: w.ray,
                        camera: M,
                        stopPropagation () {
                            const N = "pointerId" in c && E.capturedMap.get(c.pointerId);
                            if ((!N || N.has(v.eventObject)) && (R.stopped = m.stopped = !0, E.hovered.size && Array.from(E.hovered.values()).find((k)=>k.eventObject === v.eventObject))) {
                                const k = l.slice(0, l.indexOf(v));
                                s([
                                    ...k,
                                    v
                                ]);
                            }
                        },
                        target: {
                            hasPointerCapture: P,
                            setPointerCapture: A,
                            releasePointerCapture: O
                        },
                        currentTarget: {
                            hasPointerCapture: P,
                            setPointerCapture: A,
                            releasePointerCapture: O
                        },
                        nativeEvent: c
                    };
                    if (f(R), m.stopped === !0) break;
                }
            }
            return l;
        }
        function s(l) {
            const { internal: c } = t.getState();
            for (const u of c.hovered.values())if (!l.length || !l.find((f)=>f.object === u.object && f.index === u.index && f.instanceId === u.instanceId)) {
                const h = u.eventObject.__r3f, m = h?.handlers;
                if (c.hovered.delete(yS(u)), h != null && h.eventCount) {
                    const v = {
                        ...u,
                        intersections: l
                    };
                    m.onPointerOut == null || m.onPointerOut(v), m.onPointerLeave == null || m.onPointerLeave(v);
                }
            }
        }
        function o(l, c) {
            for(let u = 0; u < c.length; u++){
                const f = c[u].__r3f;
                f == null || f.handlers.onPointerMissed == null || f.handlers.onPointerMissed(l);
            }
        }
        function a(l) {
            switch(l){
                case "onPointerLeave":
                case "onPointerCancel":
                    return ()=>s([]);
                case "onLostPointerCapture":
                    return (c)=>{
                        const { internal: u } = t.getState();
                        "pointerId" in c && u.capturedMap.has(c.pointerId) && requestAnimationFrame(()=>{
                            u.capturedMap.has(c.pointerId) && (u.capturedMap.delete(c.pointerId), s([]));
                        });
                    };
            }
            return function(u) {
                const { onPointerMissed: f, internal: h } = t.getState();
                h.lastEvent.current = u;
                const m = l === "onPointerMove", v = l === "onClick" || l === "onContextMenu" || l === "onDoubleClick", w = r(u, m ? n : void 0), b = v ? e(u) : 0;
                l === "onPointerDown" && (h.initialClick = [
                    u.offsetX,
                    u.offsetY
                ], h.initialHits = w.map((E)=>E.eventObject)), v && !w.length && b <= 2 && (o(u, h.interaction), f && f(u)), m && s(w);
                function M(E) {
                    const T = E.eventObject, P = T.__r3f, A = P?.handlers;
                    if (P != null && P.eventCount) if (m) {
                        if (A.onPointerOver || A.onPointerEnter || A.onPointerOut || A.onPointerLeave) {
                            const O = yS(E), D = h.hovered.get(O);
                            D ? D.stopped && E.stopPropagation() : (h.hovered.set(O, E), A.onPointerOver == null || A.onPointerOver(E), A.onPointerEnter == null || A.onPointerEnter(E));
                        }
                        A.onPointerMove == null || A.onPointerMove(E);
                    } else {
                        const O = A[l];
                        O ? (!v || h.initialHits.includes(T)) && (o(u, h.interaction.filter((D)=>!h.initialHits.includes(D))), O(E)) : v && h.initialHits.includes(T) && o(u, h.interaction.filter((D)=>!h.initialHits.includes(D)));
                    }
                }
                i(w, u, b, M);
            };
        }
        return {
            handlePointer: a
        };
    }
    const EH = (t)=>!!(t != null && t.render), MH = J.createContext(null), v1e = (t, e)=>{
        const n = n1e((a, l)=>{
            const c = new ve, u = new ve, f = new ve;
            function h(b = l().camera, M = u, E = l().size) {
                const { width: T, height: P, top: A, left: O } = E, D = T / P;
                M.isVector3 ? f.copy(M) : f.set(...M);
                const R = b.getWorldPosition(c).distanceTo(f);
                if (yH(b)) return {
                    width: T / b.zoom,
                    height: P / b.zoom,
                    top: A,
                    left: O,
                    factor: 1,
                    distance: R,
                    aspect: D
                };
                {
                    const N = b.fov * Math.PI / 180, k = 2 * Math.tan(N / 2) * R, U = k * (T / P);
                    return {
                        width: U,
                        height: k,
                        top: A,
                        left: O,
                        factor: T / U,
                        distance: R,
                        aspect: D
                    };
                }
            }
            let m;
            const v = (b)=>a((M)=>({
                        performance: {
                            ...M.performance,
                            current: b
                        }
                    })), _ = new ot;
            return {
                set: a,
                get: l,
                gl: null,
                camera: null,
                raycaster: null,
                events: {
                    priority: 1,
                    enabled: !0,
                    connected: !1
                },
                xr: null,
                scene: null,
                invalidate: (b = 1)=>t(l(), b),
                advance: (b, M)=>e(b, M, l()),
                legacy: !1,
                linear: !1,
                flat: !1,
                controls: null,
                clock: new hO,
                pointer: _,
                mouse: _,
                frameloop: "always",
                onPointerMissed: void 0,
                performance: {
                    current: 1,
                    min: .5,
                    max: 1,
                    debounce: 200,
                    regress: ()=>{
                        const b = l();
                        m && clearTimeout(m), b.performance.current !== b.performance.min && v(b.performance.min), m = setTimeout(()=>v(l().performance.max), b.performance.debounce);
                    }
                },
                size: {
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    updateStyle: !1
                },
                viewport: {
                    initialDpr: 0,
                    dpr: 0,
                    width: 0,
                    height: 0,
                    top: 0,
                    left: 0,
                    aspect: 0,
                    distance: 0,
                    factor: 0,
                    getCurrentViewport: h
                },
                setEvents: (b)=>a((M)=>({
                            ...M,
                            events: {
                                ...M.events,
                                ...b
                            }
                        })),
                setSize: (b, M, E, T, P)=>{
                    const A = l().camera, O = {
                        width: b,
                        height: M,
                        top: T || 0,
                        left: P || 0,
                        updateStyle: E
                    };
                    a((D)=>({
                            size: O,
                            viewport: {
                                ...D.viewport,
                                ...h(A, u, O)
                            }
                        }));
                },
                setDpr: (b)=>a((M)=>{
                        const E = wH(b);
                        return {
                            viewport: {
                                ...M.viewport,
                                dpr: E,
                                initialDpr: M.viewport.initialDpr || E
                            }
                        };
                    }),
                setFrameloop: (b = "always")=>{
                    const M = l().clock;
                    M.stop(), M.elapsedTime = 0, b !== "never" && (M.start(), M.elapsedTime = 0), a(()=>({
                            frameloop: b
                        }));
                },
                previousRoot: void 0,
                internal: {
                    active: !1,
                    priority: 0,
                    frames: 0,
                    lastEvent: J.createRef(),
                    interaction: [],
                    hovered: new Map,
                    subscribers: [],
                    initialClick: [
                        0,
                        0
                    ],
                    initialHits: [],
                    capturedMap: new Map,
                    subscribe: (b, M, E)=>{
                        const T = l().internal;
                        return T.priority = T.priority + (M > 0 ? 1 : 0), T.subscribers.push({
                            ref: b,
                            priority: M,
                            store: E
                        }), T.subscribers = T.subscribers.sort((P, A)=>P.priority - A.priority), ()=>{
                            const P = l().internal;
                            P != null && P.subscribers && (P.priority = P.priority - (M > 0 ? 1 : 0), P.subscribers = P.subscribers.filter((A)=>A.ref !== b));
                        };
                    }
                }
            };
        }), r = n.getState();
        let i = r.size, s = r.viewport.dpr, o = r.camera;
        return n.subscribe(()=>{
            const { camera: a, size: l, viewport: c, gl: u, set: f } = n.getState();
            if (l.width !== i.width || l.height !== i.height || c.dpr !== s) {
                var h;
                i = l, s = c.dpr, p1e(a, l), u.setPixelRatio(c.dpr);
                const m = (h = l.updateStyle) != null ? h : typeof HTMLCanvasElement < "u" && u.domElement instanceof HTMLCanvasElement;
                u.setSize(l.width, l.height, m);
            }
            a !== o && (o = a, f((m)=>({
                    viewport: {
                        ...m.viewport,
                        ...m.viewport.getCurrentViewport(a)
                    }
                })));
        }), n.subscribe((a)=>t(a)), n;
    };
    function TH(t, e) {
        const n = {
            callback: t
        };
        return e.add(n), ()=>void e.delete(n);
    }
    let vS, CH = new Set, RH = new Set, x1e = new Set;
    const b1e = (t)=>TH(t, CH), w1e = (t)=>TH(t, RH);
    function cN(t, e) {
        if (t.size) for (const { callback: n } of t.values())n(e);
    }
    function dx(t, e) {
        switch(t){
            case "before":
                return cN(CH, e);
            case "after":
                return cN(RH, e);
            case "tail":
                return cN(x1e, e);
        }
    }
    let uN, dN;
    function fN(t, e, n) {
        let r = e.clock.getDelta();
        for(e.frameloop === "never" && typeof t == "number" && (r = t - e.clock.elapsedTime, e.clock.oldTime = e.clock.elapsedTime, e.clock.elapsedTime = t), uN = e.internal.subscribers, vS = 0; vS < uN.length; vS++)dN = uN[vS], dN.ref.current(dN.store.getState(), r, n);
        return !e.internal.priority && e.gl.render && e.gl.render(e.scene, e.camera), e.internal.frames = Math.max(0, e.internal.frames - 1), e.frameloop === "always" ? 1 : e.internal.frames;
    }
    function _1e(t) {
        let e = !1, n = !1, r, i, s;
        function o(c) {
            i = requestAnimationFrame(o), e = !0, r = 0, dx("before", c), n = !0;
            for (const f of t.values()){
                var u;
                s = f.store.getState(), s.internal.active && (s.frameloop === "always" || s.internal.frames > 0) && !((u = s.gl.xr) != null && u.isPresenting) && (r += fN(c, s));
            }
            if (n = !1, dx("after", c), r === 0) return dx("tail", c), e = !1, cancelAnimationFrame(i);
        }
        function a(c, u = 1) {
            var f;
            if (!c) return t.forEach((h)=>a(h.store.getState(), u));
            (f = c.gl.xr) != null && f.isPresenting || !c.internal.active || c.frameloop === "never" || (u > 1 ? c.internal.frames = Math.min(60, c.internal.frames + u) : n ? c.internal.frames = 2 : c.internal.frames = 1, e || (e = !0, requestAnimationFrame(o)));
        }
        function l(c, u = !0, f, h) {
            if (u && dx("before", c), f) fN(c, f, h);
            else for (const m of t.values())fN(c, m.store.getState());
            u && dx("after", c);
        }
        return {
            loop: o,
            invalidate: a,
            advance: l
        };
    }
    function IH() {
        const t = J.useContext(MH);
        if (!t) throw new Error("R3F: Hooks can only be used within the Canvas component!");
        return t;
    }
    function hd(t = (n)=>n, e) {
        return IH()(t, e);
    }
    function S1e(t, e = 0) {
        const n = IH(), r = n.getState().internal.subscribe, i = vH(t);
        return Yw(()=>r(i, e, n), [
            e,
            r,
            n
        ]), null;
    }
    const Cy = new Map, { invalidate: Oj, advance: Dj } = _1e(Cy), { reconciler: dT, applyProps: h0 } = c1e(Cy, m1e), p0 = {
        objects: "shallow",
        strict: !1
    }, E1e = (t, e)=>{
        const n = typeof t == "function" ? t(e) : t;
        return EH(n) ? n : new pH({
            powerPreference: "high-performance",
            canvas: e,
            antialias: !0,
            alpha: !0,
            ...t
        });
    };
    function M1e(t, e) {
        const n = typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement;
        if (e) {
            const { width: r, height: i, top: s, left: o, updateStyle: a = n } = e;
            return {
                width: r,
                height: i,
                top: s,
                left: o,
                updateStyle: a
            };
        } else if (typeof HTMLCanvasElement < "u" && t instanceof HTMLCanvasElement && t.parentElement) {
            const { width: r, height: i, top: s, left: o } = t.parentElement.getBoundingClientRect();
            return {
                width: r,
                height: i,
                top: s,
                left: o,
                updateStyle: n
            };
        } else if (typeof OffscreenCanvas < "u" && t instanceof OffscreenCanvas) return {
            width: t.width,
            height: t.height,
            top: 0,
            left: 0,
            updateStyle: n
        };
        return {
            width: 0,
            height: 0,
            top: 0,
            left: 0
        };
    }
    function T1e(t) {
        const e = Cy.get(t), n = e?.fiber, r = e?.store;
        e && console.warn("R3F.createRoot should only be called once!");
        const i = typeof reportError == "function" ? reportError : console.error, s = r || v1e(Oj, Dj), o = n || dT.createContainer(s, B0.ConcurrentRoot, null, !1, null, "", i, null);
        e || Cy.set(t, {
            fiber: o,
            store: s
        });
        let a, l = !1, c;
        return {
            configure (u = {}) {
                let { gl: f, size: h, scene: m, events: v, onCreated: _, shadows: w = !1, linear: b = !1, flat: M = !1, legacy: E = !1, orthographic: T = !1, frameloop: P = "always", dpr: A = [
                    1,
                    2
                ], performance: O, raycaster: D, camera: R, onPointerMissed: N } = u, k = s.getState(), U = k.gl;
                k.gl || k.set({
                    gl: U = E1e(f, t)
                });
                let B = k.raycaster;
                B || k.set({
                    raycaster: B = new oH
                });
                const { params: j, ...K } = D || {};
                if (Kr.equ(K, B, p0) || h0(B, {
                    ...K
                }), Kr.equ(j, B.params, p0) || h0(B, {
                    params: {
                        ...B.params,
                        ...j
                    }
                }), !k.camera || k.camera === c && !Kr.equ(c, R, p0)) {
                    c = R;
                    const $ = R instanceof Vw, H = $ ? R : T ? new ch(0, 0, 0, 0, .1, 1e3) : new Oi(75, 0, .1, 1e3);
                    $ || (H.position.z = 5, R && (h0(H, R), ("aspect" in R || "left" in R || "right" in R || "bottom" in R || "top" in R) && (H.manual = !0, H.updateProjectionMatrix())), !k.camera && !(R != null && R.rotation) && H.lookAt(0, 0, 0)), k.set({
                        camera: H
                    }), B.camera = H;
                }
                if (!k.scene) {
                    let $;
                    m != null && m.isScene ? $ = m : ($ = new Gk, m && h0($, m)), k.set({
                        scene: E0($)
                    });
                }
                if (!k.xr) {
                    var q;
                    const $ = (le, ne)=>{
                        const ue = s.getState();
                        ue.frameloop !== "never" && Dj(le, !0, ue, ne);
                    }, H = ()=>{
                        const le = s.getState();
                        le.gl.xr.enabled = le.gl.xr.isPresenting, le.gl.xr.setAnimationLoop(le.gl.xr.isPresenting ? $ : null), le.gl.xr.isPresenting || Oj(le);
                    }, se = {
                        connect () {
                            const le = s.getState().gl;
                            le.xr.addEventListener("sessionstart", H), le.xr.addEventListener("sessionend", H);
                        },
                        disconnect () {
                            const le = s.getState().gl;
                            le.xr.removeEventListener("sessionstart", H), le.xr.removeEventListener("sessionend", H);
                        }
                    };
                    typeof ((q = U.xr) == null ? void 0 : q.addEventListener) == "function" && se.connect(), k.set({
                        xr: se
                    });
                }
                if (U.shadowMap) {
                    const $ = U.shadowMap.enabled, H = U.shadowMap.type;
                    if (U.shadowMap.enabled = !!w, Kr.boo(w)) U.shadowMap.type = Zx;
                    else if (Kr.str(w)) {
                        var ee;
                        const se = {
                            basic: yW,
                            percentage: f2,
                            soft: Zx,
                            variance: oc
                        };
                        U.shadowMap.type = (ee = se[w]) != null ? ee : Zx;
                    } else Kr.obj(w) && Object.assign(U.shadowMap, w);
                    ($ !== U.shadowMap.enabled || H !== U.shadowMap.type) && (U.shadowMap.needsUpdate = !0);
                }
                const W = gH();
                W && ("enabled" in W ? W.enabled = !E : "legacyMode" in W && (W.legacyMode = E)), l || h0(U, {
                    outputEncoding: b ? 3e3 : 3001,
                    toneMapping: M ? lu : h2
                }), k.legacy !== E && k.set(()=>({
                        legacy: E
                    })), k.linear !== b && k.set(()=>({
                        linear: b
                    })), k.flat !== M && k.set(()=>({
                        flat: M
                    })), f && !Kr.fun(f) && !EH(f) && !Kr.equ(f, U, p0) && h0(U, f), v && !k.events.handlers && k.set({
                    events: v(s)
                });
                const Z = M1e(t, h);
                return Kr.equ(Z, k.size, p0) || k.setSize(Z.width, Z.height, Z.updateStyle, Z.top, Z.left), A && k.viewport.dpr !== wH(A) && k.setDpr(A), k.frameloop !== P && k.setFrameloop(P), k.onPointerMissed || k.set({
                    onPointerMissed: N
                }), O && !Kr.equ(O, k.performance, p0) && k.set(($)=>({
                        performance: {
                            ...$.performance,
                            ...O
                        }
                    })), a = _, l = !0, this;
            },
            render (u) {
                return l || this.configure(), dT.updateContainer(x.jsx(C1e, {
                    store: s,
                    children: u,
                    onCreated: a,
                    rootElement: t
                }), o, null, ()=>{}), s;
            },
            unmount () {
                AH(t);
            }
        };
    }
    function C1e({ store: t, children: e, onCreated: n, rootElement: r }) {
        return Yw(()=>{
            const i = t.getState();
            i.set((s)=>({
                    internal: {
                        ...s.internal,
                        active: !0
                    }
                })), n && n(i), t.getState().events.connected || i.events.connect == null || i.events.connect(r);
        }, []), x.jsx(MH.Provider, {
            value: t,
            children: e
        });
    }
    function AH(t, e) {
        const n = Cy.get(t), r = n?.fiber;
        if (r) {
            const i = n?.store.getState();
            i && (i.internal.active = !1), dT.updateContainer(null, r, null, ()=>{
                i && setTimeout(()=>{
                    try {
                        var s, o, a, l;
                        i.events.disconnect == null || i.events.disconnect(), (s = i.gl) == null || (o = s.renderLists) == null || o.dispose == null || o.dispose(), (a = i.gl) == null || a.forceContextLoss == null || a.forceContextLoss(), (l = i.gl) != null && l.xr && i.xr.disconnect(), h1e(i), Cy.delete(t);
                    } catch  {}
                }, 500);
            });
        }
    }
    dT.injectIntoDevTools({
        bundleType: 0,
        rendererPackageName: "@react-three/fiber",
        version: J.version
    });
    const hN = {
        onClick: [
            "click",
            !1
        ],
        onContextMenu: [
            "contextmenu",
            !1
        ],
        onDoubleClick: [
            "dblclick",
            !1
        ],
        onWheel: [
            "wheel",
            !0
        ],
        onPointerDown: [
            "pointerdown",
            !0
        ],
        onPointerUp: [
            "pointerup",
            !0
        ],
        onPointerLeave: [
            "pointerleave",
            !0
        ],
        onPointerMove: [
            "pointermove",
            !0
        ],
        onPointerCancel: [
            "pointercancel",
            !0
        ],
        onLostPointerCapture: [
            "lostpointercapture",
            !0
        ]
    };
    function R1e(t) {
        const { handlePointer: e } = y1e(t);
        return {
            priority: 1,
            enabled: !0,
            compute (n, r, i) {
                r.pointer.set(n.offsetX / r.size.width * 2 - 1, -(n.offsetY / r.size.height) * 2 + 1), r.raycaster.setFromCamera(r.pointer, r.camera);
            },
            connected: void 0,
            handlers: Object.keys(hN).reduce((n, r)=>({
                    ...n,
                    [r]: e(r)
                }), {}),
            update: ()=>{
                var n;
                const { events: r, internal: i } = t.getState();
                (n = i.lastEvent) != null && n.current && r.handlers && r.handlers.onPointerMove(i.lastEvent.current);
            },
            connect: (n)=>{
                var r;
                const { set: i, events: s } = t.getState();
                s.disconnect == null || s.disconnect(), i((o)=>({
                        events: {
                            ...o.events,
                            connected: n
                        }
                    })), Object.entries((r = s.handlers) != null ? r : []).forEach(([o, a])=>{
                    const [l, c] = hN[o];
                    n.addEventListener(l, a, {
                        passive: c
                    });
                });
            },
            disconnect: ()=>{
                const { set: n, events: r } = t.getState();
                if (r.connected) {
                    var i;
                    Object.entries((i = r.handlers) != null ? i : []).forEach(([s, o])=>{
                        if (r && r.connected instanceof HTMLElement) {
                            const [a] = hN[s];
                            r.connected.removeEventListener(a, o);
                        }
                    }), n((s)=>({
                            events: {
                                ...s.events,
                                connected: void 0
                            }
                        }));
                }
            }
        };
    }
    function Lj(t, e) {
        let n;
        return (...r)=>{
            window.clearTimeout(n), n = window.setTimeout(()=>t(...r), e);
        };
    }
    function I1e({ debounce: t, scroll: e, polyfill: n, offsetSize: r } = {
        debounce: 0,
        scroll: !1,
        offsetSize: !1
    }) {
        const i = n || (typeof window > "u" ? class {
        } : window.ResizeObserver);
        if (!i) throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");
        const [s, o] = J.useState({
            left: 0,
            top: 0,
            width: 0,
            height: 0,
            bottom: 0,
            right: 0,
            x: 0,
            y: 0
        }), a = J.useRef({
            element: null,
            scrollContainers: null,
            resizeObserver: null,
            lastBounds: s,
            orientationHandler: null
        }), l = t ? typeof t == "number" ? t : t.scroll : null, c = t ? typeof t == "number" ? t : t.resize : null, u = J.useRef(!1);
        J.useEffect(()=>(u.current = !0, ()=>void (u.current = !1)));
        const [f, h, m] = J.useMemo(()=>{
            const b = ()=>{
                if (!a.current.element) return;
                const { left: M, top: E, width: T, height: P, bottom: A, right: O, x: D, y: R } = a.current.element.getBoundingClientRect(), N = {
                    left: M,
                    top: E,
                    width: T,
                    height: P,
                    bottom: A,
                    right: O,
                    x: D,
                    y: R
                };
                a.current.element instanceof HTMLElement && r && (N.height = a.current.element.offsetHeight, N.width = a.current.element.offsetWidth), Object.freeze(N), u.current && !k1e(a.current.lastBounds, N) && o(a.current.lastBounds = N);
            };
            return [
                b,
                c ? Lj(b, c) : b,
                l ? Lj(b, l) : b
            ];
        }, [
            o,
            r,
            l,
            c
        ]);
        function v() {
            a.current.scrollContainers && (a.current.scrollContainers.forEach((b)=>b.removeEventListener("scroll", m, !0)), a.current.scrollContainers = null), a.current.resizeObserver && (a.current.resizeObserver.disconnect(), a.current.resizeObserver = null), a.current.orientationHandler && ("orientation" in screen && "removeEventListener" in screen.orientation ? screen.orientation.removeEventListener("change", a.current.orientationHandler) : "onorientationchange" in window && window.removeEventListener("orientationchange", a.current.orientationHandler));
        }
        function _() {
            a.current.element && (a.current.resizeObserver = new i(m), a.current.resizeObserver.observe(a.current.element), e && a.current.scrollContainers && a.current.scrollContainers.forEach((b)=>b.addEventListener("scroll", m, {
                    capture: !0,
                    passive: !0
                })), a.current.orientationHandler = ()=>{
                m();
            }, "orientation" in screen && "addEventListener" in screen.orientation ? screen.orientation.addEventListener("change", a.current.orientationHandler) : "onorientationchange" in window && window.addEventListener("orientationchange", a.current.orientationHandler));
        }
        const w = (b)=>{
            !b || b === a.current.element || (v(), a.current.element = b, a.current.scrollContainers = NH(b), _());
        };
        return N1e(m, !!e), A1e(h), J.useEffect(()=>{
            v(), _();
        }, [
            e,
            m,
            h
        ]), J.useEffect(()=>v, []), [
            w,
            s,
            f
        ];
    }
    function A1e(t) {
        J.useEffect(()=>{
            const e = t;
            return window.addEventListener("resize", e), ()=>void window.removeEventListener("resize", e);
        }, [
            t
        ]);
    }
    function N1e(t, e) {
        J.useEffect(()=>{
            if (e) {
                const n = t;
                return window.addEventListener("scroll", n, {
                    capture: !0,
                    passive: !0
                }), ()=>void window.removeEventListener("scroll", n, !0);
            }
        }, [
            t,
            e
        ]);
    }
    function NH(t) {
        const e = [];
        if (!t || t === document.body) return e;
        const { overflow: n, overflowX: r, overflowY: i } = window.getComputedStyle(t);
        return [
            n,
            r,
            i
        ].some((s)=>s === "auto" || s === "scroll") && e.push(t), [
            ...e,
            ...NH(t.parentElement)
        ];
    }
    const P1e = [
        "x",
        "y",
        "top",
        "bottom",
        "left",
        "right",
        "width",
        "height"
    ], k1e = (t, e)=>P1e.every((n)=>t[n] === e[n]);
    var O1e = Object.defineProperty, D1e = Object.defineProperties, L1e = Object.getOwnPropertyDescriptors, Fj = Object.getOwnPropertySymbols, F1e = Object.prototype.hasOwnProperty, j1e = Object.prototype.propertyIsEnumerable, jj = (t, e, n)=>e in t ? O1e(t, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : t[e] = n, Bj = (t, e)=>{
        for(var n in e || (e = {}))F1e.call(e, n) && jj(t, n, e[n]);
        if (Fj) for (var n of Fj(e))j1e.call(e, n) && jj(t, n, e[n]);
        return t;
    }, B1e = (t, e)=>D1e(t, L1e(e)), Uj, zj;
    typeof window < "u" && ((Uj = window.document) != null && Uj.createElement || ((zj = window.navigator) == null ? void 0 : zj.product) === "ReactNative") ? J.useLayoutEffect : J.useEffect;
    function PH(t, e, n) {
        if (!t) return;
        if (n(t) === !0) return t;
        let r = t.child;
        for(; r;){
            const i = PH(r, e, n);
            if (i) return i;
            r = r.sibling;
        }
    }
    function kH(t) {
        try {
            return Object.defineProperties(t, {
                _currentRenderer: {
                    get () {
                        return null;
                    },
                    set () {}
                },
                _currentRenderer2: {
                    get () {
                        return null;
                    },
                    set () {}
                }
            });
        } catch  {
            return t;
        }
    }
    const Vj = console.error;
    console.error = function() {
        const t = [
            ...arguments
        ].join("");
        if (t?.startsWith("Warning:") && t.includes("useContext")) {
            console.error = Vj;
            return;
        }
        return Vj.apply(this, arguments);
    };
    const bO = kH(J.createContext(null));
    class OH extends J.Component {
        render() {
            return J.createElement(bO.Provider, {
                value: this._reactInternals
            }, this.props.children);
        }
    }
    function U1e() {
        const t = J.useContext(bO);
        if (t === null) throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");
        const e = J.useId();
        return J.useMemo(()=>{
            for (const r of [
                t,
                t?.alternate
            ]){
                if (!r) continue;
                const i = PH(r, !1, (s)=>{
                    let o = s.memoizedState;
                    for(; o;){
                        if (o.memoizedState === e) return !0;
                        o = o.next;
                    }
                });
                if (i) return i;
            }
        }, [
            t,
            e
        ]);
    }
    function z1e() {
        const t = U1e(), [e] = J.useState(()=>new Map);
        e.clear();
        let n = t;
        for(; n;){
            if (n.type && typeof n.type == "object") {
                const i = n.type._context === void 0 && n.type.Provider === n.type ? n.type : n.type._context;
                i && i !== bO && !e.has(i) && e.set(i, J.useContext(kH(i)));
            }
            n = n.return;
        }
        return e;
    }
    function V1e() {
        const t = z1e();
        return J.useMemo(()=>Array.from(t.keys()).reduce((e, n)=>(r)=>J.createElement(e, null, J.createElement(n.Provider, B1e(Bj({}, r), {
                        value: t.get(n)
                    }))), (e)=>J.createElement(OH, Bj({}, e))), [
            t
        ]);
    }
    const W1e = J.forwardRef(function({ children: e, fallback: n, resize: r, style: i, gl: s, events: o = R1e, eventSource: a, eventPrefix: l, shadows: c, linear: u, flat: f, legacy: h, orthographic: m, frameloop: v, dpr: _, performance: w, raycaster: b, camera: M, scene: E, onPointerMissed: T, onCreated: P, ...A }, O) {
        J.useMemo(()=>l1e(Z_e), []);
        const D = V1e(), [R, N] = I1e({
            scroll: !0,
            debounce: {
                scroll: 50,
                resize: 0
            },
            ...r
        }), k = J.useRef(null), U = J.useRef(null);
        J.useImperativeHandle(O, ()=>k.current);
        const B = vH(T), [j, K] = J.useState(!1), [q, ee] = J.useState(!1);
        if (j) throw j;
        if (q) throw q;
        const W = J.useRef(null);
        Yw(()=>{
            const $ = k.current;
            N.width > 0 && N.height > 0 && $ && (W.current || (W.current = T1e($)), W.current.configure({
                gl: s,
                events: o,
                shadows: c,
                linear: u,
                flat: f,
                legacy: h,
                orthographic: m,
                frameloop: v,
                dpr: _,
                performance: w,
                raycaster: b,
                camera: M,
                scene: E,
                size: N,
                onPointerMissed: (...H)=>B.current == null ? void 0 : B.current(...H),
                onCreated: (H)=>{
                    H.events.connect == null || H.events.connect(a ? u1e(a) ? a.current : a : U.current), l && H.setEvents({
                        compute: (se, le)=>{
                            const ne = se[l + "X"], ue = se[l + "Y"];
                            le.pointer.set(ne / le.size.width * 2 - 1, -(ue / le.size.height) * 2 + 1), le.raycaster.setFromCamera(le.pointer, le.camera);
                        }
                    }), P?.(H);
                }
            }), W.current.render(x.jsx(D, {
                children: x.jsx(xH, {
                    set: ee,
                    children: x.jsx(J.Suspense, {
                        fallback: x.jsx(d1e, {
                            set: K
                        }),
                        children: e ?? null
                    })
                })
            })));
        }), J.useEffect(()=>{
            const $ = k.current;
            if ($) return ()=>AH($);
        }, []);
        const Z = a ? "none" : "auto";
        return x.jsx("div", {
            ref: U,
            style: {
                position: "relative",
                width: "100%",
                height: "100%",
                overflow: "hidden",
                pointerEvents: Z,
                ...i
            },
            ...A,
            children: x.jsx("div", {
                ref: R,
                style: {
                    width: "100%",
                    height: "100%"
                },
                children: x.jsx("canvas", {
                    ref: k,
                    style: {
                        display: "block"
                    },
                    children: n
                })
            })
        });
    }), q1e = J.forwardRef(function(e, n) {
        return x.jsx(OH, {
            children: x.jsx(W1e, {
                ...e,
                ref: n
            })
        });
    });
    function H1e(t, e = "pointer", n = "auto", r = document.body) {
        J.useEffect(()=>{
            if (t) return r.style.cursor = e, ()=>void (r.style.cursor = n);
        }, [
            t
        ]);
    }
    var $1e = Object.defineProperty, G1e = (t, e, n)=>e in t ? $1e(t, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : t[e] = n, X1e = (t, e, n)=>(G1e(t, e + "", n), n);
    class K1e {
        constructor(){
            X1e(this, "_listeners");
        }
        addEventListener(e, n) {
            this._listeners === void 0 && (this._listeners = {});
            const r = this._listeners;
            r[e] === void 0 && (r[e] = []), r[e].indexOf(n) === -1 && r[e].push(n);
        }
        hasEventListener(e, n) {
            if (this._listeners === void 0) return !1;
            const r = this._listeners;
            return r[e] !== void 0 && r[e].indexOf(n) !== -1;
        }
        removeEventListener(e, n) {
            if (this._listeners === void 0) return;
            const i = this._listeners[e];
            if (i !== void 0) {
                const s = i.indexOf(n);
                s !== -1 && i.splice(s, 1);
            }
        }
        dispatchEvent(e) {
            if (this._listeners === void 0) return;
            const r = this._listeners[e.type];
            if (r !== void 0) {
                e.target = this;
                const i = r.slice(0);
                for(let s = 0, o = i.length; s < o; s++)i[s].call(this, e);
                e.target = null;
            }
        }
    }
    var Y1e = Object.defineProperty, Z1e = (t, e, n)=>e in t ? Y1e(t, e, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : t[e] = n, un = (t, e, n)=>(Z1e(t, typeof e != "symbol" ? e + "" : e, n), n);
    const xS = new Um, Wj = new vd, J1e = Math.cos(70 * (Math.PI / 180)), qj = (t, e)=>(t % e + e) % e;
    let Q1e = class extends K1e {
        constructor(e, n){
            super(), un(this, "object"), un(this, "domElement"), un(this, "enabled", !0), un(this, "target", new ve), un(this, "minDistance", 0), un(this, "maxDistance", 1 / 0), un(this, "minZoom", 0), un(this, "maxZoom", 1 / 0), un(this, "minPolarAngle", 0), un(this, "maxPolarAngle", Math.PI), un(this, "minAzimuthAngle", -1 / 0), un(this, "maxAzimuthAngle", 1 / 0), un(this, "enableDamping", !1), un(this, "dampingFactor", .05), un(this, "enableZoom", !0), un(this, "zoomSpeed", 1), un(this, "enableRotate", !0), un(this, "rotateSpeed", 1), un(this, "enablePan", !0), un(this, "panSpeed", 1), un(this, "screenSpacePanning", !0), un(this, "keyPanSpeed", 7), un(this, "zoomToCursor", !1), un(this, "autoRotate", !1), un(this, "autoRotateSpeed", 2), un(this, "reverseOrbit", !1), un(this, "reverseHorizontalOrbit", !1), un(this, "reverseVerticalOrbit", !1), un(this, "keys", {
                LEFT: "ArrowLeft",
                UP: "ArrowUp",
                RIGHT: "ArrowRight",
                BOTTOM: "ArrowDown"
            }), un(this, "mouseButtons", {
                LEFT: Hf.ROTATE,
                MIDDLE: Hf.DOLLY,
                RIGHT: Hf.PAN
            }), un(this, "touches", {
                ONE: yd.ROTATE,
                TWO: yd.DOLLY_PAN
            }), un(this, "target0"), un(this, "position0"), un(this, "zoom0"), un(this, "_domElementKeyEvents", null), un(this, "getPolarAngle"), un(this, "getAzimuthalAngle"), un(this, "setPolarAngle"), un(this, "setAzimuthalAngle"), un(this, "getDistance"), un(this, "getZoomScale"), un(this, "listenToKeyEvents"), un(this, "stopListenToKeyEvents"), un(this, "saveState"), un(this, "reset"), un(this, "update"), un(this, "connect"), un(this, "dispose"), un(this, "dollyIn"), un(this, "dollyOut"), un(this, "getScale"), un(this, "setScale"), this.object = e, this.domElement = n, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = ()=>u.phi, this.getAzimuthalAngle = ()=>u.theta, this.setPolarAngle = (Se)=>{
                let $e = qj(Se, 2 * Math.PI), ht = u.phi;
                ht < 0 && (ht += 2 * Math.PI), $e < 0 && ($e += 2 * Math.PI);
                let Ee = Math.abs($e - ht);
                2 * Math.PI - Ee < Ee && ($e < ht ? $e += 2 * Math.PI : ht += 2 * Math.PI), f.phi = $e - ht, r.update();
            }, this.setAzimuthalAngle = (Se)=>{
                let $e = qj(Se, 2 * Math.PI), ht = u.theta;
                ht < 0 && (ht += 2 * Math.PI), $e < 0 && ($e += 2 * Math.PI);
                let Ee = Math.abs($e - ht);
                2 * Math.PI - Ee < Ee && ($e < ht ? $e += 2 * Math.PI : ht += 2 * Math.PI), f.theta = $e - ht, r.update();
            }, this.getDistance = ()=>r.object.position.distanceTo(r.target), this.listenToKeyEvents = (Se)=>{
                Se.addEventListener("keydown", Ze), this._domElementKeyEvents = Se;
            }, this.stopListenToKeyEvents = ()=>{
                this._domElementKeyEvents.removeEventListener("keydown", Ze), this._domElementKeyEvents = null;
            }, this.saveState = ()=>{
                r.target0.copy(r.target), r.position0.copy(r.object.position), r.zoom0 = r.object.zoom;
            }, this.reset = ()=>{
                r.target.copy(r.target0), r.object.position.copy(r.position0), r.object.zoom = r.zoom0, r.object.updateProjectionMatrix(), r.dispatchEvent(i), r.update(), l = a.NONE;
            }, this.update = (()=>{
                const Se = new ve, $e = new ve(0, 1, 0), ht = new fo().setFromUnitVectors(e.up, $e), Ee = ht.clone().invert(), lt = new ve, Ae = new fo, ze = 2 * Math.PI;
                return function() {
                    const it = r.object.position;
                    ht.setFromUnitVectors(e.up, $e), Ee.copy(ht).invert(), Se.copy(it).sub(r.target), Se.applyQuaternion(ht), u.setFromVector3(Se), r.autoRotate && l === a.NONE && j(U()), r.enableDamping ? (u.theta += f.theta * r.dampingFactor, u.phi += f.phi * r.dampingFactor) : (u.theta += f.theta, u.phi += f.phi);
                    let pt = r.minAzimuthAngle, Pt = r.maxAzimuthAngle;
                    isFinite(pt) && isFinite(Pt) && (pt < -Math.PI ? pt += ze : pt > Math.PI && (pt -= ze), Pt < -Math.PI ? Pt += ze : Pt > Math.PI && (Pt -= ze), pt <= Pt ? u.theta = Math.max(pt, Math.min(Pt, u.theta)) : u.theta = u.theta > (pt + Pt) / 2 ? Math.max(pt, u.theta) : Math.min(Pt, u.theta)), u.phi = Math.max(r.minPolarAngle, Math.min(r.maxPolarAngle, u.phi)), u.makeSafe(), r.enableDamping === !0 ? r.target.addScaledVector(m, r.dampingFactor) : r.target.add(m), r.zoomToCursor && R || r.object.isOrthographicCamera ? u.radius = le(u.radius) : u.radius = le(u.radius * h), Se.setFromSpherical(u), Se.applyQuaternion(Ee), it.copy(r.target).add(Se), r.object.matrixAutoUpdate || r.object.updateMatrix(), r.object.lookAt(r.target), r.enableDamping === !0 ? (f.theta *= 1 - r.dampingFactor, f.phi *= 1 - r.dampingFactor, m.multiplyScalar(1 - r.dampingFactor)) : (f.set(0, 0, 0), m.set(0, 0, 0));
                    let en = !1;
                    if (r.zoomToCursor && R) {
                        let wt = null;
                        if (r.object instanceof Oi && r.object.isPerspectiveCamera) {
                            const Ln = Se.length();
                            wt = le(Ln * h);
                            const vn = Ln - wt;
                            r.object.position.addScaledVector(O, vn), r.object.updateMatrixWorld();
                        } else if (r.object.isOrthographicCamera) {
                            const Ln = new ve(D.x, D.y, 0);
                            Ln.unproject(r.object), r.object.zoom = Math.max(r.minZoom, Math.min(r.maxZoom, r.object.zoom / h)), r.object.updateProjectionMatrix(), en = !0;
                            const vn = new ve(D.x, D.y, 0);
                            vn.unproject(r.object), r.object.position.sub(vn).add(Ln), r.object.updateMatrixWorld(), wt = Se.length();
                        } else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."), r.zoomToCursor = !1;
                        wt !== null && (r.screenSpacePanning ? r.target.set(0, 0, -1).transformDirection(r.object.matrix).multiplyScalar(wt).add(r.object.position) : (xS.origin.copy(r.object.position), xS.direction.set(0, 0, -1).transformDirection(r.object.matrix), Math.abs(r.object.up.dot(xS.direction)) < J1e ? e.lookAt(r.target) : (Wj.setFromNormalAndCoplanarPoint(r.object.up, r.target), xS.intersectPlane(Wj, r.target))));
                    } else r.object instanceof ch && r.object.isOrthographicCamera && (en = h !== 1, en && (r.object.zoom = Math.max(r.minZoom, Math.min(r.maxZoom, r.object.zoom / h)), r.object.updateProjectionMatrix()));
                    return h = 1, R = !1, en || lt.distanceToSquared(r.object.position) > c || 8 * (1 - Ae.dot(r.object.quaternion)) > c ? (r.dispatchEvent(i), lt.copy(r.object.position), Ae.copy(r.object.quaternion), en = !1, !0) : !1;
                };
            })(), this.connect = (Se)=>{
                r.domElement = Se, r.domElement.style.touchAction = "none", r.domElement.addEventListener("contextmenu", Pe), r.domElement.addEventListener("pointerdown", G), r.domElement.addEventListener("pointercancel", pe), r.domElement.addEventListener("wheel", Xe);
            }, this.dispose = ()=>{
                var Se, $e, ht, Ee, lt, Ae;
                r.domElement && (r.domElement.style.touchAction = "auto"), (Se = r.domElement) == null || Se.removeEventListener("contextmenu", Pe), ($e = r.domElement) == null || $e.removeEventListener("pointerdown", G), (ht = r.domElement) == null || ht.removeEventListener("pointercancel", pe), (Ee = r.domElement) == null || Ee.removeEventListener("wheel", Xe), (lt = r.domElement) == null || lt.ownerDocument.removeEventListener("pointermove", he), (Ae = r.domElement) == null || Ae.ownerDocument.removeEventListener("pointerup", pe), r._domElementKeyEvents !== null && r._domElementKeyEvents.removeEventListener("keydown", Ze);
            };
            const r = this, i = {
                type: "change"
            }, s = {
                type: "start"
            }, o = {
                type: "end"
            }, a = {
                NONE: -1,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2,
                TOUCH_ROTATE: 3,
                TOUCH_PAN: 4,
                TOUCH_DOLLY_PAN: 5,
                TOUCH_DOLLY_ROTATE: 6
            };
            let l = a.NONE;
            const c = 1e-6, u = new Y3, f = new Y3;
            let h = 1;
            const m = new ve, v = new ot, _ = new ot, w = new ot, b = new ot, M = new ot, E = new ot, T = new ot, P = new ot, A = new ot, O = new ve, D = new ot;
            let R = !1;
            const N = [], k = {};
            function U() {
                return 2 * Math.PI / 60 / 60 * r.autoRotateSpeed;
            }
            function B() {
                return Math.pow(.95, r.zoomSpeed);
            }
            function j(Se) {
                r.reverseOrbit || r.reverseHorizontalOrbit ? f.theta += Se : f.theta -= Se;
            }
            function K(Se) {
                r.reverseOrbit || r.reverseVerticalOrbit ? f.phi += Se : f.phi -= Se;
            }
            const q = (()=>{
                const Se = new ve;
                return function(ht, Ee) {
                    Se.setFromMatrixColumn(Ee, 0), Se.multiplyScalar(-ht), m.add(Se);
                };
            })(), ee = (()=>{
                const Se = new ve;
                return function(ht, Ee) {
                    r.screenSpacePanning === !0 ? Se.setFromMatrixColumn(Ee, 1) : (Se.setFromMatrixColumn(Ee, 0), Se.crossVectors(r.object.up, Se)), Se.multiplyScalar(ht), m.add(Se);
                };
            })(), W = (()=>{
                const Se = new ve;
                return function(ht, Ee) {
                    const lt = r.domElement;
                    if (lt && r.object instanceof Oi && r.object.isPerspectiveCamera) {
                        const Ae = r.object.position;
                        Se.copy(Ae).sub(r.target);
                        let ze = Se.length();
                        ze *= Math.tan(r.object.fov / 2 * Math.PI / 180), q(2 * ht * ze / lt.clientHeight, r.object.matrix), ee(2 * Ee * ze / lt.clientHeight, r.object.matrix);
                    } else lt && r.object instanceof ch && r.object.isOrthographicCamera ? (q(ht * (r.object.right - r.object.left) / r.object.zoom / lt.clientWidth, r.object.matrix), ee(Ee * (r.object.top - r.object.bottom) / r.object.zoom / lt.clientHeight, r.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), r.enablePan = !1);
                };
            })();
            function Z(Se) {
                r.object instanceof Oi && r.object.isPerspectiveCamera || r.object instanceof ch && r.object.isOrthographicCamera ? h = Se : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), r.enableZoom = !1);
            }
            function $(Se) {
                Z(h / Se);
            }
            function H(Se) {
                Z(h * Se);
            }
            function se(Se) {
                if (!r.zoomToCursor || !r.domElement) return;
                R = !0;
                const $e = r.domElement.getBoundingClientRect(), ht = Se.clientX - $e.left, Ee = Se.clientY - $e.top, lt = $e.width, Ae = $e.height;
                D.x = ht / lt * 2 - 1, D.y = -(Ee / Ae) * 2 + 1, O.set(D.x, D.y, 1).unproject(r.object).sub(r.object.position).normalize();
            }
            function le(Se) {
                return Math.max(r.minDistance, Math.min(r.maxDistance, Se));
            }
            function ne(Se) {
                v.set(Se.clientX, Se.clientY);
            }
            function ue(Se) {
                se(Se), T.set(Se.clientX, Se.clientY);
            }
            function ge(Se) {
                b.set(Se.clientX, Se.clientY);
            }
            function ye(Se) {
                _.set(Se.clientX, Se.clientY), w.subVectors(_, v).multiplyScalar(r.rotateSpeed);
                const $e = r.domElement;
                $e && (j(2 * Math.PI * w.x / $e.clientHeight), K(2 * Math.PI * w.y / $e.clientHeight)), v.copy(_), r.update();
            }
            function _e(Se) {
                P.set(Se.clientX, Se.clientY), A.subVectors(P, T), A.y > 0 ? $(B()) : A.y < 0 && H(B()), T.copy(P), r.update();
            }
            function Te(Se) {
                M.set(Se.clientX, Se.clientY), E.subVectors(M, b).multiplyScalar(r.panSpeed), W(E.x, E.y), b.copy(M), r.update();
            }
            function Re(Se) {
                se(Se), Se.deltaY < 0 ? H(B()) : Se.deltaY > 0 && $(B()), r.update();
            }
            function Fe(Se) {
                let $e = !1;
                switch(Se.code){
                    case r.keys.UP:
                        W(0, r.keyPanSpeed), $e = !0;
                        break;
                    case r.keys.BOTTOM:
                        W(0, -r.keyPanSpeed), $e = !0;
                        break;
                    case r.keys.LEFT:
                        W(r.keyPanSpeed, 0), $e = !0;
                        break;
                    case r.keys.RIGHT:
                        W(-r.keyPanSpeed, 0), $e = !0;
                        break;
                }
                $e && (Se.preventDefault(), r.update());
            }
            function be() {
                if (N.length == 1) v.set(N[0].pageX, N[0].pageY);
                else {
                    const Se = .5 * (N[0].pageX + N[1].pageX), $e = .5 * (N[0].pageY + N[1].pageY);
                    v.set(Se, $e);
                }
            }
            function Me() {
                if (N.length == 1) b.set(N[0].pageX, N[0].pageY);
                else {
                    const Se = .5 * (N[0].pageX + N[1].pageX), $e = .5 * (N[0].pageY + N[1].pageY);
                    b.set(Se, $e);
                }
            }
            function oe() {
                const Se = N[0].pageX - N[1].pageX, $e = N[0].pageY - N[1].pageY, ht = Math.sqrt(Se * Se + $e * $e);
                T.set(0, ht);
            }
            function Ye() {
                r.enableZoom && oe(), r.enablePan && Me();
            }
            function Be() {
                r.enableZoom && oe(), r.enableRotate && be();
            }
            function nt(Se) {
                if (N.length == 1) _.set(Se.pageX, Se.pageY);
                else {
                    const ht = st(Se), Ee = .5 * (Se.pageX + ht.x), lt = .5 * (Se.pageY + ht.y);
                    _.set(Ee, lt);
                }
                w.subVectors(_, v).multiplyScalar(r.rotateSpeed);
                const $e = r.domElement;
                $e && (j(2 * Math.PI * w.x / $e.clientHeight), K(2 * Math.PI * w.y / $e.clientHeight)), v.copy(_);
            }
            function de(Se) {
                if (N.length == 1) M.set(Se.pageX, Se.pageY);
                else {
                    const $e = st(Se), ht = .5 * (Se.pageX + $e.x), Ee = .5 * (Se.pageY + $e.y);
                    M.set(ht, Ee);
                }
                E.subVectors(M, b).multiplyScalar(r.panSpeed), W(E.x, E.y), b.copy(M);
            }
            function ce(Se) {
                const $e = st(Se), ht = Se.pageX - $e.x, Ee = Se.pageY - $e.y, lt = Math.sqrt(ht * ht + Ee * Ee);
                P.set(0, lt), A.set(0, Math.pow(P.y / T.y, r.zoomSpeed)), $(A.y), T.copy(P);
            }
            function ae(Se) {
                r.enableZoom && ce(Se), r.enablePan && de(Se);
            }
            function X(Se) {
                r.enableZoom && ce(Se), r.enableRotate && nt(Se);
            }
            function G(Se) {
                var $e, ht;
                r.enabled !== !1 && (N.length === 0 && (($e = r.domElement) == null || $e.ownerDocument.addEventListener("pointermove", he), (ht = r.domElement) == null || ht.ownerDocument.addEventListener("pointerup", pe)), je(Se), Se.pointerType === "touch" ? at(Se) : me(Se));
            }
            function he(Se) {
                r.enabled !== !1 && (Se.pointerType === "touch" ? Je(Se) : Ie(Se));
            }
            function pe(Se) {
                var $e, ht, Ee;
                rt(Se), N.length === 0 && (($e = r.domElement) == null || $e.releasePointerCapture(Se.pointerId), (ht = r.domElement) == null || ht.ownerDocument.removeEventListener("pointermove", he), (Ee = r.domElement) == null || Ee.ownerDocument.removeEventListener("pointerup", pe)), r.dispatchEvent(o), l = a.NONE;
            }
            function me(Se) {
                let $e;
                switch(Se.button){
                    case 0:
                        $e = r.mouseButtons.LEFT;
                        break;
                    case 1:
                        $e = r.mouseButtons.MIDDLE;
                        break;
                    case 2:
                        $e = r.mouseButtons.RIGHT;
                        break;
                    default:
                        $e = -1;
                }
                switch($e){
                    case Hf.DOLLY:
                        if (r.enableZoom === !1) return;
                        ue(Se), l = a.DOLLY;
                        break;
                    case Hf.ROTATE:
                        if (Se.ctrlKey || Se.metaKey || Se.shiftKey) {
                            if (r.enablePan === !1) return;
                            ge(Se), l = a.PAN;
                        } else {
                            if (r.enableRotate === !1) return;
                            ne(Se), l = a.ROTATE;
                        }
                        break;
                    case Hf.PAN:
                        if (Se.ctrlKey || Se.metaKey || Se.shiftKey) {
                            if (r.enableRotate === !1) return;
                            ne(Se), l = a.ROTATE;
                        } else {
                            if (r.enablePan === !1) return;
                            ge(Se), l = a.PAN;
                        }
                        break;
                    default:
                        l = a.NONE;
                }
                l !== a.NONE && r.dispatchEvent(s);
            }
            function Ie(Se) {
                if (r.enabled !== !1) switch(l){
                    case a.ROTATE:
                        if (r.enableRotate === !1) return;
                        ye(Se);
                        break;
                    case a.DOLLY:
                        if (r.enableZoom === !1) return;
                        _e(Se);
                        break;
                    case a.PAN:
                        if (r.enablePan === !1) return;
                        Te(Se);
                        break;
                }
            }
            function Xe(Se) {
                r.enabled === !1 || r.enableZoom === !1 || l !== a.NONE && l !== a.ROTATE || (Se.preventDefault(), r.dispatchEvent(s), Re(Se), r.dispatchEvent(o));
            }
            function Ze(Se) {
                r.enabled === !1 || r.enablePan === !1 || Fe(Se);
            }
            function at(Se) {
                switch(ct(Se), N.length){
                    case 1:
                        switch(r.touches.ONE){
                            case yd.ROTATE:
                                if (r.enableRotate === !1) return;
                                be(), l = a.TOUCH_ROTATE;
                                break;
                            case yd.PAN:
                                if (r.enablePan === !1) return;
                                Me(), l = a.TOUCH_PAN;
                                break;
                            default:
                                l = a.NONE;
                        }
                        break;
                    case 2:
                        switch(r.touches.TWO){
                            case yd.DOLLY_PAN:
                                if (r.enableZoom === !1 && r.enablePan === !1) return;
                                Ye(), l = a.TOUCH_DOLLY_PAN;
                                break;
                            case yd.DOLLY_ROTATE:
                                if (r.enableZoom === !1 && r.enableRotate === !1) return;
                                Be(), l = a.TOUCH_DOLLY_ROTATE;
                                break;
                            default:
                                l = a.NONE;
                        }
                        break;
                    default:
                        l = a.NONE;
                }
                l !== a.NONE && r.dispatchEvent(s);
            }
            function Je(Se) {
                switch(ct(Se), l){
                    case a.TOUCH_ROTATE:
                        if (r.enableRotate === !1) return;
                        nt(Se), r.update();
                        break;
                    case a.TOUCH_PAN:
                        if (r.enablePan === !1) return;
                        de(Se), r.update();
                        break;
                    case a.TOUCH_DOLLY_PAN:
                        if (r.enableZoom === !1 && r.enablePan === !1) return;
                        ae(Se), r.update();
                        break;
                    case a.TOUCH_DOLLY_ROTATE:
                        if (r.enableZoom === !1 && r.enableRotate === !1) return;
                        X(Se), r.update();
                        break;
                    default:
                        l = a.NONE;
                }
            }
            function Pe(Se) {
                r.enabled !== !1 && Se.preventDefault();
            }
            function je(Se) {
                N.push(Se);
            }
            function rt(Se) {
                delete k[Se.pointerId];
                for(let $e = 0; $e < N.length; $e++)if (N[$e].pointerId == Se.pointerId) {
                    N.splice($e, 1);
                    return;
                }
            }
            function ct(Se) {
                let $e = k[Se.pointerId];
                $e === void 0 && ($e = new ot, k[Se.pointerId] = $e), $e.set(Se.pageX, Se.pageY);
            }
            function st(Se) {
                const $e = Se.pointerId === N[0].pointerId ? N[1] : N[0];
                return k[$e.pointerId];
            }
            this.dollyIn = (Se = B())=>{
                H(Se), r.update();
            }, this.dollyOut = (Se = B())=>{
                $(Se), r.update();
            }, this.getScale = ()=>h, this.setScale = (Se)=>{
                Z(Se), r.update();
            }, this.getZoomScale = ()=>B(), n !== void 0 && this.connect(n), this.update();
        }
    };
    const eSe = J.forwardRef(({ makeDefault: t, camera: e, regress: n, domElement: r, enableDamping: i = !0, keyEvents: s = !1, onChange: o, onStart: a, onEnd: l, ...c }, u)=>{
        const f = hd((A)=>A.invalidate), h = hd((A)=>A.camera), m = hd((A)=>A.gl), v = hd((A)=>A.events), _ = hd((A)=>A.setEvents), w = hd((A)=>A.set), b = hd((A)=>A.get), M = hd((A)=>A.performance), E = e || h, T = r || v.connected || m.domElement, P = J.useMemo(()=>new Q1e(E), [
            E
        ]);
        return S1e(()=>{
            P.enabled && P.update();
        }, -1), J.useEffect(()=>(s && P.connect(s === !0 ? T : s), P.connect(T), ()=>void P.dispose()), [
            s,
            T,
            n,
            P,
            f
        ]), J.useEffect(()=>{
            const A = (R)=>{
                f(), n && M.regress(), o && o(R);
            }, O = (R)=>{
                a && a(R);
            }, D = (R)=>{
                l && l(R);
            };
            return P.addEventListener("change", A), P.addEventListener("start", O), P.addEventListener("end", D), ()=>{
                P.removeEventListener("start", O), P.removeEventListener("end", D), P.removeEventListener("change", A);
            };
        }, [
            o,
            a,
            l,
            P,
            f,
            _
        ]), J.useEffect(()=>{
            if (t) {
                const A = b().controls;
                return w({
                    controls: P
                }), ()=>w({
                        controls: A
                    });
            }
        }, [
            t,
            P
        ]), J.createElement("primitive", L3({
            ref: u,
            object: P,
            enableDamping: i
        }, c));
    });
    var JS = {
        exports: {}
    }, tSe = JS.exports, Hj;
    function nSe() {
        return Hj || (Hj = 1, function(t, e) {
            (function(n, r) {
                t.exports = r();
            })(tSe, function() {
                var n = function() {
                    function r(m) {
                        return o.appendChild(m.dom), m;
                    }
                    function i(m) {
                        for(var v = 0; v < o.children.length; v++)o.children[v].style.display = v === m ? "block" : "none";
                        s = m;
                    }
                    var s = 0, o = document.createElement("div");
                    o.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000", o.addEventListener("click", function(m) {
                        m.preventDefault(), i(++s % o.children.length);
                    }, !1);
                    var a = (performance || Date).now(), l = a, c = 0, u = r(new n.Panel("FPS", "#0ff", "#002")), f = r(new n.Panel("MS", "#0f0", "#020"));
                    if (self.performance && self.performance.memory) var h = r(new n.Panel("MB", "#f08", "#201"));
                    return i(0), {
                        REVISION: 16,
                        dom: o,
                        addPanel: r,
                        showPanel: i,
                        begin: function() {
                            a = (performance || Date).now();
                        },
                        end: function() {
                            c++;
                            var m = (performance || Date).now();
                            if (f.update(m - a, 200), m > l + 1e3 && (u.update(1e3 * c / (m - l), 100), l = m, c = 0, h)) {
                                var v = performance.memory;
                                h.update(v.usedJSHeapSize / 1048576, v.jsHeapSizeLimit / 1048576);
                            }
                            return m;
                        },
                        update: function() {
                            a = this.end();
                        },
                        domElement: o,
                        setMode: i
                    };
                };
                return n.Panel = function(r, i, s) {
                    var o = 1 / 0, a = 0, l = Math.round, c = l(window.devicePixelRatio || 1), u = 80 * c, f = 48 * c, h = 3 * c, m = 2 * c, v = 3 * c, _ = 15 * c, w = 74 * c, b = 30 * c, M = document.createElement("canvas");
                    M.width = u, M.height = f, M.style.cssText = "width:80px;height:48px";
                    var E = M.getContext("2d");
                    return E.font = "bold " + 9 * c + "px Helvetica,Arial,sans-serif", E.textBaseline = "top", E.fillStyle = s, E.fillRect(0, 0, u, f), E.fillStyle = i, E.fillText(r, h, m), E.fillRect(v, _, w, b), E.fillStyle = s, E.globalAlpha = .9, E.fillRect(v, _, w, b), {
                        dom: M,
                        update: function(T, P) {
                            o = Math.min(o, T), a = Math.max(a, T), E.fillStyle = s, E.globalAlpha = 1, E.fillRect(0, 0, u, _), E.fillStyle = i, E.fillText(l(T) + " " + r + " (" + l(o) + "-" + l(a) + ")", h, m), E.drawImage(M, v + c, _, w - c, b, v, _, w - c, b), E.fillRect(v + w - c, _, c, b), E.fillStyle = s, E.globalAlpha = .9, E.fillRect(v + w - c, _, c, l((1 - T / P) * b));
                        }
                    };
                }, n;
            });
        }(JS)), JS.exports;
    }
    var rSe = nSe();
    const iSe = Go(rSe);
    function sSe(t, e = [], n) {
        const [r, i] = J.useState();
        return J.useLayoutEffect(()=>{
            const s = t();
            return i(s), ()=>void 0;
        }, e), r;
    }
    function oSe({ showPanel: t = 0, className: e, parent: n }) {
        const r = sSe(()=>new iSe, []);
        return J.useEffect(()=>{
            if (r) {
                const i = n && n.current || document.body;
                r.showPanel(t), i?.appendChild(r.dom);
                const s = (e ?? "").split(" ").filter((l)=>l);
                s.length && r.dom.classList.add(...s);
                const o = b1e(()=>r.begin()), a = w1e(()=>r.end());
                return ()=>{
                    s.length && r.dom.classList.remove(...s), i?.removeChild(r.dom), o(), a();
                };
            }
        }, [
            n,
            r,
            e,
            t
        ]), null;
    }
    function aSe(t, e, n) {
        var r = this, i = J.useRef(null), s = J.useRef(0), o = J.useRef(null), a = J.useRef([]), l = J.useRef(), c = J.useRef(), u = J.useRef(t), f = J.useRef(!0);
        u.current = t;
        var h = typeof window < "u", m = !e && e !== 0 && h;
        if (typeof t != "function") throw new TypeError("Expected a function");
        e = +e || 0;
        var v = !!(n = n || {}).leading, _ = !("trailing" in n) || !!n.trailing, w = "maxWait" in n, b = "debounceOnServer" in n && !!n.debounceOnServer, M = w ? Math.max(+n.maxWait || 0, e) : null;
        J.useEffect(function() {
            return f.current = !0, function() {
                f.current = !1;
            };
        }, []);
        var E = J.useMemo(function() {
            var T = function(N) {
                var k = a.current, U = l.current;
                return a.current = l.current = null, s.current = N, c.current = u.current.apply(U, k);
            }, P = function(N, k) {
                m && cancelAnimationFrame(o.current), o.current = m ? requestAnimationFrame(N) : setTimeout(N, k);
            }, A = function(N) {
                if (!f.current) return !1;
                var k = N - i.current;
                return !i.current || k >= e || k < 0 || w && N - s.current >= M;
            }, O = function(N) {
                return o.current = null, _ && a.current ? T(N) : (a.current = l.current = null, c.current);
            }, D = function N() {
                var k = Date.now();
                if (A(k)) return O(k);
                if (f.current) {
                    var U = e - (k - i.current), B = w ? Math.min(U, M - (k - s.current)) : U;
                    P(N, B);
                }
            }, R = function() {
                if (h || b) {
                    var N = Date.now(), k = A(N);
                    if (a.current = [].slice.call(arguments), l.current = r, i.current = N, k) {
                        if (!o.current && f.current) return s.current = i.current, P(D, e), v ? T(i.current) : c.current;
                        if (w) return P(D, e), T(i.current);
                    }
                    return o.current || P(D, e), c.current;
                }
            };
            return R.cancel = function() {
                o.current && (m ? cancelAnimationFrame(o.current) : clearTimeout(o.current)), s.current = 0, a.current = i.current = l.current = o.current = null;
            }, R.isPending = function() {
                return !!o.current;
            }, R.flush = function() {
                return o.current ? O(Date.now()) : c.current;
            }, R;
        }, [
            v,
            w,
            e,
            M,
            _,
            m,
            h,
            b
        ]);
        return E;
    }
    const m0 = typeof performance == "object" && performance && typeof performance.now == "function" ? performance : Date, DH = new Set, nP = typeof process == "object" && process ? process : {}, LH = (t, e, n, r)=>{
        typeof nP.emitWarning == "function" ? nP.emitWarning(t, e, n, r) : console.error(`[${n}] ${e}: ${t}`);
    };
    let fT = globalThis.AbortController, $j = globalThis.AbortSignal;
    if (typeof fT > "u") {
        $j = class {
            onabort;
            _onabort = [];
            reason;
            aborted = !1;
            addEventListener(r, i) {
                this._onabort.push(i);
            }
        }, fT = class {
            constructor(){
                e();
            }
            signal = new $j;
            abort(r) {
                if (!this.signal.aborted) {
                    this.signal.reason = r, this.signal.aborted = !0;
                    for (const i of this.signal._onabort)i(r);
                    this.signal.onabort?.(r);
                }
            }
        };
        let t = nP.env?.LRU_CACHE_IGNORE_AC_WARNING !== "1";
        const e = ()=>{
            t && (t = !1, LH("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.", "NO_ABORT_CONTROLLER", "ENOTSUP", e));
        };
    }
    const lSe = (t)=>!DH.has(t), zf = (t)=>t && t === Math.floor(t) && t > 0 && isFinite(t), FH = (t)=>zf(t) ? t <= Math.pow(2, 8) ? Uint8Array : t <= Math.pow(2, 16) ? Uint16Array : t <= Math.pow(2, 32) ? Uint32Array : t <= Number.MAX_SAFE_INTEGER ? QS : null : null;
    class QS extends Array {
        constructor(e){
            super(e), this.fill(0);
        }
    }
    class U0 {
        heap;
        length;
        static #e = !1;
        static create(e) {
            const n = FH(e);
            if (!n) return [];
            U0.#e = !0;
            const r = new U0(e, n);
            return U0.#e = !1, r;
        }
        constructor(e, n){
            if (!U0.#e) throw new TypeError("instantiate Stack using Stack.create(n)");
            this.heap = new n(e), this.length = 0;
        }
        push(e) {
            this.heap[this.length++] = e;
        }
        pop() {
            return this.heap[--this.length];
        }
    }
    class wO {
        #e;
        #t;
        #n;
        #r;
        #s;
        #c;
        ttl;
        ttlResolution;
        ttlAutopurge;
        updateAgeOnGet;
        updateAgeOnHas;
        allowStale;
        noDisposeOnSet;
        noUpdateTTL;
        maxEntrySize;
        sizeCalculation;
        noDeleteOnFetchRejection;
        noDeleteOnStaleGet;
        allowStaleOnFetchAbort;
        allowStaleOnFetchRejection;
        ignoreFetchAbort;
        #o;
        #a;
        #u;
        #l;
        #i;
        #m;
        #g;
        #f;
        #h;
        #v;
        #p;
        #b;
        #w;
        #x;
        #_;
        #E;
        #y;
        static unsafeExposeInternals(e) {
            return {
                starts: e.#w,
                ttls: e.#x,
                sizes: e.#b,
                keyMap: e.#u,
                keyList: e.#l,
                valList: e.#i,
                next: e.#m,
                prev: e.#g,
                get head () {
                    return e.#f;
                },
                get tail () {
                    return e.#h;
                },
                free: e.#v,
                isBackgroundFetch: (n)=>e.#d(n),
                backgroundFetch: (n, r, i, s)=>e.#D(n, r, i, s),
                moveToTail: (n)=>e.#P(n),
                indexes: (n)=>e.#M(n),
                rindexes: (n)=>e.#T(n),
                isStale: (n)=>e.#S(n)
            };
        }
        get max() {
            return this.#e;
        }
        get maxSize() {
            return this.#t;
        }
        get calculatedSize() {
            return this.#a;
        }
        get size() {
            return this.#o;
        }
        get fetchMethod() {
            return this.#s;
        }
        get memoMethod() {
            return this.#c;
        }
        get dispose() {
            return this.#n;
        }
        get disposeAfter() {
            return this.#r;
        }
        constructor(e){
            const { max: n = 0, ttl: r, ttlResolution: i = 1, ttlAutopurge: s, updateAgeOnGet: o, updateAgeOnHas: a, allowStale: l, dispose: c, disposeAfter: u, noDisposeOnSet: f, noUpdateTTL: h, maxSize: m = 0, maxEntrySize: v = 0, sizeCalculation: _, fetchMethod: w, memoMethod: b, noDeleteOnFetchRejection: M, noDeleteOnStaleGet: E, allowStaleOnFetchRejection: T, allowStaleOnFetchAbort: P, ignoreFetchAbort: A } = e;
            if (n !== 0 && !zf(n)) throw new TypeError("max option must be a nonnegative integer");
            const O = n ? FH(n) : Array;
            if (!O) throw new Error("invalid max value: " + n);
            if (this.#e = n, this.#t = m, this.maxEntrySize = v || this.#t, this.sizeCalculation = _, this.sizeCalculation) {
                if (!this.#t && !this.maxEntrySize) throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
                if (typeof this.sizeCalculation != "function") throw new TypeError("sizeCalculation set to non-function");
            }
            if (b !== void 0 && typeof b != "function") throw new TypeError("memoMethod must be a function if defined");
            if (this.#c = b, w !== void 0 && typeof w != "function") throw new TypeError("fetchMethod must be a function if specified");
            if (this.#s = w, this.#E = !!w, this.#u = new Map, this.#l = new Array(n).fill(void 0), this.#i = new Array(n).fill(void 0), this.#m = new O(n), this.#g = new O(n), this.#f = 0, this.#h = 0, this.#v = U0.create(n), this.#o = 0, this.#a = 0, typeof c == "function" && (this.#n = c), typeof u == "function" ? (this.#r = u, this.#p = []) : (this.#r = void 0, this.#p = void 0), this.#_ = !!this.#n, this.#y = !!this.#r, this.noDisposeOnSet = !!f, this.noUpdateTTL = !!h, this.noDeleteOnFetchRejection = !!M, this.allowStaleOnFetchRejection = !!T, this.allowStaleOnFetchAbort = !!P, this.ignoreFetchAbort = !!A, this.maxEntrySize !== 0) {
                if (this.#t !== 0 && !zf(this.#t)) throw new TypeError("maxSize must be a positive integer if specified");
                if (!zf(this.maxEntrySize)) throw new TypeError("maxEntrySize must be a positive integer if specified");
                this.#z();
            }
            if (this.allowStale = !!l, this.noDeleteOnStaleGet = !!E, this.updateAgeOnGet = !!o, this.updateAgeOnHas = !!a, this.ttlResolution = zf(i) || i === 0 ? i : 1, this.ttlAutopurge = !!s, this.ttl = r || 0, this.ttl) {
                if (!zf(this.ttl)) throw new TypeError("ttl must be a positive integer if specified");
                this.#I();
            }
            if (this.#e === 0 && this.ttl === 0 && this.#t === 0) throw new TypeError("At least one of max, maxSize, or ttl is required");
            if (!this.ttlAutopurge && !this.#e && !this.#t) {
                const D = "LRU_CACHE_UNBOUNDED";
                lSe(D) && (DH.add(D), LH("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", D, wO));
            }
        }
        getRemainingTTL(e) {
            return this.#u.has(e) ? 1 / 0 : 0;
        }
        #I() {
            const e = new QS(this.#e), n = new QS(this.#e);
            this.#x = e, this.#w = n, this.#L = (s, o, a = m0.now())=>{
                if (n[s] = o !== 0 ? a : 0, e[s] = o, o !== 0 && this.ttlAutopurge) {
                    const l = setTimeout(()=>{
                        this.#S(s) && this.#C(this.#l[s], "expire");
                    }, o + 1);
                    l.unref && l.unref();
                }
            }, this.#A = (s)=>{
                n[s] = e[s] !== 0 ? m0.now() : 0;
            }, this.#R = (s, o)=>{
                if (e[o]) {
                    const a = e[o], l = n[o];
                    if (!a || !l) return;
                    s.ttl = a, s.start = l, s.now = r || i();
                    const c = s.now - l;
                    s.remainingTTL = a - c;
                }
            };
            let r = 0;
            const i = ()=>{
                const s = m0.now();
                if (this.ttlResolution > 0) {
                    r = s;
                    const o = setTimeout(()=>r = 0, this.ttlResolution);
                    o.unref && o.unref();
                }
                return s;
            };
            this.getRemainingTTL = (s)=>{
                const o = this.#u.get(s);
                if (o === void 0) return 0;
                const a = e[o], l = n[o];
                if (!a || !l) return 1 / 0;
                const c = (r || i()) - l;
                return a - c;
            }, this.#S = (s)=>{
                const o = n[s], a = e[s];
                return !!a && !!o && (r || i()) - o > a;
            };
        }
        #A = ()=>{};
        #R = ()=>{};
        #L = ()=>{};
        #S = ()=>!1;
        #z() {
            const e = new QS(this.#e);
            this.#a = 0, this.#b = e, this.#N = (n)=>{
                this.#a -= e[n], e[n] = 0;
            }, this.#F = (n, r, i, s)=>{
                if (this.#d(r)) return 0;
                if (!zf(i)) if (s) {
                    if (typeof s != "function") throw new TypeError("sizeCalculation must be a function");
                    if (i = s(r, n), !zf(i)) throw new TypeError("sizeCalculation return invalid (expect positive integer)");
                } else throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
                return i;
            }, this.#k = (n, r, i)=>{
                if (e[n] = r, this.#t) {
                    const s = this.#t - e[n];
                    for(; this.#a > s;)this.#O(!0);
                }
                this.#a += e[n], i && (i.entrySize = r, i.totalCalculatedSize = this.#a);
            };
        }
        #N = (e)=>{};
        #k = (e, n, r)=>{};
        #F = (e, n, r, i)=>{
            if (r || i) throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");
            return 0;
        };
        *#M({ allowStale: e = this.allowStale } = {}) {
            if (this.#o) for(let n = this.#h; !(!this.#j(n) || ((e || !this.#S(n)) && (yield n), n === this.#f));)n = this.#g[n];
        }
        *#T({ allowStale: e = this.allowStale } = {}) {
            if (this.#o) for(let n = this.#f; !(!this.#j(n) || ((e || !this.#S(n)) && (yield n), n === this.#h));)n = this.#m[n];
        }
        #j(e) {
            return e !== void 0 && this.#u.get(this.#l[e]) === e;
        }
        *entries() {
            for (const e of this.#M())this.#i[e] !== void 0 && this.#l[e] !== void 0 && !this.#d(this.#i[e]) && (yield [
                this.#l[e],
                this.#i[e]
            ]);
        }
        *rentries() {
            for (const e of this.#T())this.#i[e] !== void 0 && this.#l[e] !== void 0 && !this.#d(this.#i[e]) && (yield [
                this.#l[e],
                this.#i[e]
            ]);
        }
        *keys() {
            for (const e of this.#M()){
                const n = this.#l[e];
                n !== void 0 && !this.#d(this.#i[e]) && (yield n);
            }
        }
        *rkeys() {
            for (const e of this.#T()){
                const n = this.#l[e];
                n !== void 0 && !this.#d(this.#i[e]) && (yield n);
            }
        }
        *values() {
            for (const e of this.#M())this.#i[e] !== void 0 && !this.#d(this.#i[e]) && (yield this.#i[e]);
        }
        *rvalues() {
            for (const e of this.#T())this.#i[e] !== void 0 && !this.#d(this.#i[e]) && (yield this.#i[e]);
        }
        [Symbol.iterator]() {
            return this.entries();
        }
        [Symbol.toStringTag] = "LRUCache";
        find(e, n = {}) {
            for (const r of this.#M()){
                const i = this.#i[r], s = this.#d(i) ? i.__staleWhileFetching : i;
                if (s !== void 0 && e(s, this.#l[r], this)) return this.get(this.#l[r], n);
            }
        }
        forEach(e, n = this) {
            for (const r of this.#M()){
                const i = this.#i[r], s = this.#d(i) ? i.__staleWhileFetching : i;
                s !== void 0 && e.call(n, s, this.#l[r], this);
            }
        }
        rforEach(e, n = this) {
            for (const r of this.#T()){
                const i = this.#i[r], s = this.#d(i) ? i.__staleWhileFetching : i;
                s !== void 0 && e.call(n, s, this.#l[r], this);
            }
        }
        purgeStale() {
            let e = !1;
            for (const n of this.#T({
                allowStale: !0
            }))this.#S(n) && (this.#C(this.#l[n], "expire"), e = !0);
            return e;
        }
        info(e) {
            const n = this.#u.get(e);
            if (n === void 0) return;
            const r = this.#i[n], i = this.#d(r) ? r.__staleWhileFetching : r;
            if (i === void 0) return;
            const s = {
                value: i
            };
            if (this.#x && this.#w) {
                const o = this.#x[n], a = this.#w[n];
                if (o && a) {
                    const l = o - (m0.now() - a);
                    s.ttl = l, s.start = Date.now();
                }
            }
            return this.#b && (s.size = this.#b[n]), s;
        }
        dump() {
            const e = [];
            for (const n of this.#M({
                allowStale: !0
            })){
                const r = this.#l[n], i = this.#i[n], s = this.#d(i) ? i.__staleWhileFetching : i;
                if (s === void 0 || r === void 0) continue;
                const o = {
                    value: s
                };
                if (this.#x && this.#w) {
                    o.ttl = this.#x[n];
                    const a = m0.now() - this.#w[n];
                    o.start = Math.floor(Date.now() - a);
                }
                this.#b && (o.size = this.#b[n]), e.unshift([
                    r,
                    o
                ]);
            }
            return e;
        }
        load(e) {
            this.clear();
            for (const [n, r] of e){
                if (r.start) {
                    const i = Date.now() - r.start;
                    r.start = m0.now() - i;
                }
                this.set(n, r.value, r);
            }
        }
        set(e, n, r = {}) {
            if (n === void 0) return this.delete(e), this;
            const { ttl: i = this.ttl, start: s, noDisposeOnSet: o = this.noDisposeOnSet, sizeCalculation: a = this.sizeCalculation, status: l } = r;
            let { noUpdateTTL: c = this.noUpdateTTL } = r;
            const u = this.#F(e, n, r.size || 0, a);
            if (this.maxEntrySize && u > this.maxEntrySize) return l && (l.set = "miss", l.maxEntrySizeExceeded = !0), this.#C(e, "set"), this;
            let f = this.#o === 0 ? void 0 : this.#u.get(e);
            if (f === void 0) f = this.#o === 0 ? this.#h : this.#v.length !== 0 ? this.#v.pop() : this.#o === this.#e ? this.#O(!1) : this.#o, this.#l[f] = e, this.#i[f] = n, this.#u.set(e, f), this.#m[this.#h] = f, this.#g[f] = this.#h, this.#h = f, this.#o++, this.#k(f, u, l), l && (l.set = "add"), c = !1;
            else {
                this.#P(f);
                const h = this.#i[f];
                if (n !== h) {
                    if (this.#E && this.#d(h)) {
                        h.__abortController.abort(new Error("replaced"));
                        const { __staleWhileFetching: m } = h;
                        m !== void 0 && !o && (this.#_ && this.#n?.(m, e, "set"), this.#y && this.#p?.push([
                            m,
                            e,
                            "set"
                        ]));
                    } else o || (this.#_ && this.#n?.(h, e, "set"), this.#y && this.#p?.push([
                        h,
                        e,
                        "set"
                    ]));
                    if (this.#N(f), this.#k(f, u, l), this.#i[f] = n, l) {
                        l.set = "replace";
                        const m = h && this.#d(h) ? h.__staleWhileFetching : h;
                        m !== void 0 && (l.oldValue = m);
                    }
                } else l && (l.set = "update");
            }
            if (i !== 0 && !this.#x && this.#I(), this.#x && (c || this.#L(f, i, s), l && this.#R(l, f)), !o && this.#y && this.#p) {
                const h = this.#p;
                let m;
                for(; m = h?.shift();)this.#r?.(...m);
            }
            return this;
        }
        pop() {
            try {
                for(; this.#o;){
                    const e = this.#i[this.#f];
                    if (this.#O(!0), this.#d(e)) {
                        if (e.__staleWhileFetching) return e.__staleWhileFetching;
                    } else if (e !== void 0) return e;
                }
            } finally{
                if (this.#y && this.#p) {
                    const e = this.#p;
                    let n;
                    for(; n = e?.shift();)this.#r?.(...n);
                }
            }
        }
        #O(e) {
            const n = this.#f, r = this.#l[n], i = this.#i[n];
            return this.#E && this.#d(i) ? i.__abortController.abort(new Error("evicted")) : (this.#_ || this.#y) && (this.#_ && this.#n?.(i, r, "evict"), this.#y && this.#p?.push([
                i,
                r,
                "evict"
            ])), this.#N(n), e && (this.#l[n] = void 0, this.#i[n] = void 0, this.#v.push(n)), this.#o === 1 ? (this.#f = this.#h = 0, this.#v.length = 0) : this.#f = this.#m[n], this.#u.delete(r), this.#o--, n;
        }
        has(e, n = {}) {
            const { updateAgeOnHas: r = this.updateAgeOnHas, status: i } = n, s = this.#u.get(e);
            if (s !== void 0) {
                const o = this.#i[s];
                if (this.#d(o) && o.__staleWhileFetching === void 0) return !1;
                if (this.#S(s)) i && (i.has = "stale", this.#R(i, s));
                else return r && this.#A(s), i && (i.has = "hit", this.#R(i, s)), !0;
            } else i && (i.has = "miss");
            return !1;
        }
        peek(e, n = {}) {
            const { allowStale: r = this.allowStale } = n, i = this.#u.get(e);
            if (i === void 0 || !r && this.#S(i)) return;
            const s = this.#i[i];
            return this.#d(s) ? s.__staleWhileFetching : s;
        }
        #D(e, n, r, i) {
            const s = n === void 0 ? void 0 : this.#i[n];
            if (this.#d(s)) return s;
            const o = new fT, { signal: a } = r;
            a?.addEventListener("abort", ()=>o.abort(a.reason), {
                signal: o.signal
            });
            const l = {
                signal: o.signal,
                options: r,
                context: i
            }, c = (_, w = !1)=>{
                const { aborted: b } = o.signal, M = r.ignoreFetchAbort && _ !== void 0;
                if (r.status && (b && !w ? (r.status.fetchAborted = !0, r.status.fetchError = o.signal.reason, M && (r.status.fetchAbortIgnored = !0)) : r.status.fetchResolved = !0), b && !M && !w) return f(o.signal.reason);
                const E = m;
                return this.#i[n] === m && (_ === void 0 ? E.__staleWhileFetching ? this.#i[n] = E.__staleWhileFetching : this.#C(e, "fetch") : (r.status && (r.status.fetchUpdated = !0), this.set(e, _, l.options))), _;
            }, u = (_)=>(r.status && (r.status.fetchRejected = !0, r.status.fetchError = _), f(_)), f = (_)=>{
                const { aborted: w } = o.signal, b = w && r.allowStaleOnFetchAbort, M = b || r.allowStaleOnFetchRejection, E = M || r.noDeleteOnFetchRejection, T = m;
                if (this.#i[n] === m && (!E || T.__staleWhileFetching === void 0 ? this.#C(e, "fetch") : b || (this.#i[n] = T.__staleWhileFetching)), M) return r.status && T.__staleWhileFetching !== void 0 && (r.status.returnedStale = !0), T.__staleWhileFetching;
                if (T.__returned === T) throw _;
            }, h = (_, w)=>{
                const b = this.#s?.(e, s, l);
                b && b instanceof Promise && b.then((M)=>_(M === void 0 ? void 0 : M), w), o.signal.addEventListener("abort", ()=>{
                    (!r.ignoreFetchAbort || r.allowStaleOnFetchAbort) && (_(void 0), r.allowStaleOnFetchAbort && (_ = (M)=>c(M, !0)));
                });
            };
            r.status && (r.status.fetchDispatched = !0);
            const m = new Promise(h).then(c, u), v = Object.assign(m, {
                __abortController: o,
                __staleWhileFetching: s,
                __returned: void 0
            });
            return n === void 0 ? (this.set(e, v, {
                ...l.options,
                status: void 0
            }), n = this.#u.get(e)) : this.#i[n] = v, v;
        }
        #d(e) {
            if (!this.#E) return !1;
            const n = e;
            return !!n && n instanceof Promise && n.hasOwnProperty("__staleWhileFetching") && n.__abortController instanceof fT;
        }
        async fetch(e, n = {}) {
            const { allowStale: r = this.allowStale, updateAgeOnGet: i = this.updateAgeOnGet, noDeleteOnStaleGet: s = this.noDeleteOnStaleGet, ttl: o = this.ttl, noDisposeOnSet: a = this.noDisposeOnSet, size: l = 0, sizeCalculation: c = this.sizeCalculation, noUpdateTTL: u = this.noUpdateTTL, noDeleteOnFetchRejection: f = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection: h = this.allowStaleOnFetchRejection, ignoreFetchAbort: m = this.ignoreFetchAbort, allowStaleOnFetchAbort: v = this.allowStaleOnFetchAbort, context: _, forceRefresh: w = !1, status: b, signal: M } = n;
            if (!this.#E) return b && (b.fetch = "get"), this.get(e, {
                allowStale: r,
                updateAgeOnGet: i,
                noDeleteOnStaleGet: s,
                status: b
            });
            const E = {
                allowStale: r,
                updateAgeOnGet: i,
                noDeleteOnStaleGet: s,
                ttl: o,
                noDisposeOnSet: a,
                size: l,
                sizeCalculation: c,
                noUpdateTTL: u,
                noDeleteOnFetchRejection: f,
                allowStaleOnFetchRejection: h,
                allowStaleOnFetchAbort: v,
                ignoreFetchAbort: m,
                status: b,
                signal: M
            };
            let T = this.#u.get(e);
            if (T === void 0) {
                b && (b.fetch = "miss");
                const P = this.#D(e, T, E, _);
                return P.__returned = P;
            } else {
                const P = this.#i[T];
                if (this.#d(P)) {
                    const N = r && P.__staleWhileFetching !== void 0;
                    return b && (b.fetch = "inflight", N && (b.returnedStale = !0)), N ? P.__staleWhileFetching : P.__returned = P;
                }
                const A = this.#S(T);
                if (!w && !A) return b && (b.fetch = "hit"), this.#P(T), i && this.#A(T), b && this.#R(b, T), P;
                const O = this.#D(e, T, E, _), R = O.__staleWhileFetching !== void 0 && r;
                return b && (b.fetch = A ? "stale" : "refresh", R && A && (b.returnedStale = !0)), R ? O.__staleWhileFetching : O.__returned = O;
            }
        }
        async forceFetch(e, n = {}) {
            const r = await this.fetch(e, n);
            if (r === void 0) throw new Error("fetch() returned undefined");
            return r;
        }
        memo(e, n = {}) {
            const r = this.#c;
            if (!r) throw new Error("no memoMethod provided to constructor");
            const { context: i, forceRefresh: s, ...o } = n, a = this.get(e, o);
            if (!s && a !== void 0) return a;
            const l = r(e, a, {
                options: o,
                context: i
            });
            return this.set(e, l, o), l;
        }
        get(e, n = {}) {
            const { allowStale: r = this.allowStale, updateAgeOnGet: i = this.updateAgeOnGet, noDeleteOnStaleGet: s = this.noDeleteOnStaleGet, status: o } = n, a = this.#u.get(e);
            if (a !== void 0) {
                const l = this.#i[a], c = this.#d(l);
                return o && this.#R(o, a), this.#S(a) ? (o && (o.get = "stale"), c ? (o && r && l.__staleWhileFetching !== void 0 && (o.returnedStale = !0), r ? l.__staleWhileFetching : void 0) : (s || this.#C(e, "expire"), o && r && (o.returnedStale = !0), r ? l : void 0)) : (o && (o.get = "hit"), c ? l.__staleWhileFetching : (this.#P(a), i && this.#A(a), l));
            } else o && (o.get = "miss");
        }
        #B(e, n) {
            this.#g[n] = e, this.#m[e] = n;
        }
        #P(e) {
            e !== this.#h && (e === this.#f ? this.#f = this.#m[e] : this.#B(this.#g[e], this.#m[e]), this.#B(this.#h, e), this.#h = e);
        }
        delete(e) {
            return this.#C(e, "delete");
        }
        #C(e, n) {
            let r = !1;
            if (this.#o !== 0) {
                const i = this.#u.get(e);
                if (i !== void 0) if (r = !0, this.#o === 1) this.#U(n);
                else {
                    this.#N(i);
                    const s = this.#i[i];
                    if (this.#d(s) ? s.__abortController.abort(new Error("deleted")) : (this.#_ || this.#y) && (this.#_ && this.#n?.(s, e, n), this.#y && this.#p?.push([
                        s,
                        e,
                        n
                    ])), this.#u.delete(e), this.#l[i] = void 0, this.#i[i] = void 0, i === this.#h) this.#h = this.#g[i];
                    else if (i === this.#f) this.#f = this.#m[i];
                    else {
                        const o = this.#g[i];
                        this.#m[o] = this.#m[i];
                        const a = this.#m[i];
                        this.#g[a] = this.#g[i];
                    }
                    this.#o--, this.#v.push(i);
                }
            }
            if (this.#y && this.#p?.length) {
                const i = this.#p;
                let s;
                for(; s = i?.shift();)this.#r?.(...s);
            }
            return r;
        }
        clear() {
            return this.#U("delete");
        }
        #U(e) {
            for (const n of this.#T({
                allowStale: !0
            })){
                const r = this.#i[n];
                if (this.#d(r)) r.__abortController.abort(new Error("deleted"));
                else {
                    const i = this.#l[n];
                    this.#_ && this.#n?.(r, i, e), this.#y && this.#p?.push([
                        r,
                        i,
                        e
                    ]);
                }
            }
            if (this.#u.clear(), this.#i.fill(void 0), this.#l.fill(void 0), this.#x && this.#w && (this.#x.fill(0), this.#w.fill(0)), this.#b && this.#b.fill(0), this.#f = 0, this.#h = 0, this.#v.length = 0, this.#a = 0, this.#o = 0, this.#y && this.#p) {
                const n = this.#p;
                let r;
                for(; r = n?.shift();)this.#r?.(...r);
            }
        }
    }
    var Tx = {
        exports: {}
    };
    var cSe = Tx.exports, Gj;
    function uSe() {
        return Gj || (Gj = 1, function(t, e) {
            (function(n, r) {
                r(e);
            })(cSe, function(n) {
                var r = {}, i = {
                    exports: {}
                };
                (function(ce) {
                    var ae = function(he) {
                        return typeof he < "u" && he.versions != null && he.versions.node != null && he + "" == "[object process]";
                    };
                    ce.exports.isNode = ae, ce.exports.platform = typeof process < "u" && ae(process) ? "node" : "browser";
                    var X = ce.exports.platform === "node" && Vf;
                    ce.exports.isMainThread = ce.exports.platform === "node" ? (!X || X.isMainThread) && !process.connected : typeof Window < "u", ce.exports.cpus = ce.exports.platform === "browser" ? self.navigator.hardwareConcurrency : Vf.cpus().length;
                })(i);
                var s = i.exports, o = {}, a;
                function l() {
                    if (a) return o;
                    a = 1;
                    function ce(he, pe) {
                        var me = this;
                        if (!(this instanceof ce)) throw new SyntaxError("Constructor must be called with the new operator");
                        if (typeof he != "function") throw new SyntaxError("Function parameter handler(resolve, reject) missing");
                        var Ie = [], Xe = [];
                        this.resolved = !1, this.rejected = !1, this.pending = !0;
                        var Ze = function(je, rt) {
                            Ie.push(je), Xe.push(rt);
                        };
                        this.then = function(Pe, je) {
                            return new ce(function(rt, ct) {
                                var st = Pe ? ae(Pe, rt, ct) : rt, Se = je ? ae(je, rt, ct) : ct;
                                Ze(st, Se);
                            }, me);
                        };
                        var at = function(je) {
                            return me.resolved = !0, me.rejected = !1, me.pending = !1, Ie.forEach(function(rt) {
                                rt(je);
                            }), Ze = function(ct, st) {
                                ct(je);
                            }, at = Je = function() {}, me;
                        }, Je = function(je) {
                            return me.resolved = !1, me.rejected = !0, me.pending = !1, Xe.forEach(function(rt) {
                                rt(je);
                            }), Ze = function(ct, st) {
                                st(je);
                            }, at = Je = function() {}, me;
                        };
                        this.cancel = function() {
                            return pe ? pe.cancel() : Je(new X), me;
                        }, this.timeout = function(Pe) {
                            if (pe) pe.timeout(Pe);
                            else {
                                var je = setTimeout(function() {
                                    Je(new G("Promise timed out after " + Pe + " ms"));
                                }, Pe);
                                me.always(function() {
                                    clearTimeout(je);
                                });
                            }
                            return me;
                        }, he(function(Pe) {
                            at(Pe);
                        }, function(Pe) {
                            Je(Pe);
                        });
                    }
                    function ae(he, pe, me) {
                        return function(Ie) {
                            try {
                                var Xe = he(Ie);
                                Xe && typeof Xe.then == "function" && typeof Xe.catch == "function" ? Xe.then(pe, me) : pe(Xe);
                            } catch (Ze) {
                                me(Ze);
                            }
                        };
                    }
                    ce.prototype.catch = function(he) {
                        return this.then(null, he);
                    }, ce.prototype.always = function(he) {
                        return this.then(he, he);
                    }, ce.prototype.finally = function(he) {
                        var pe = this, me = function() {
                            return new ce(function(Xe) {
                                return Xe();
                            }).then(he).then(function() {
                                return pe;
                            });
                        };
                        return this.then(me, me);
                    }, ce.all = function(he) {
                        return new ce(function(pe, me) {
                            var Ie = he.length, Xe = [];
                            Ie ? he.forEach(function(Ze, at) {
                                Ze.then(function(Je) {
                                    Xe[at] = Je, Ie--, Ie == 0 && pe(Xe);
                                }, function(Je) {
                                    Ie = 0, me(Je);
                                });
                            }) : pe(Xe);
                        });
                    }, ce.defer = function() {
                        var he = {};
                        return he.promise = new ce(function(pe, me) {
                            he.resolve = pe, he.reject = me;
                        }), he;
                    };
                    function X(he) {
                        this.message = he || "promise cancelled", this.stack = new Error().stack;
                    }
                    X.prototype = new Error, X.prototype.constructor = Error, X.prototype.name = "CancellationError", ce.CancellationError = X;
                    function G(he) {
                        this.message = he || "timeout exceeded", this.stack = new Error().stack;
                    }
                    return G.prototype = new Error, G.prototype.constructor = Error, G.prototype.name = "TimeoutError", ce.TimeoutError = G, o.Promise = ce, o;
                }
                function c(ce, ae) {
                    (ae == null || ae > ce.length) && (ae = ce.length);
                    for(var X = 0, G = Array(ae); X < ae; X++)G[X] = ce[X];
                    return G;
                }
                function u(ce, ae) {
                    var X = typeof Symbol < "u" && ce[Symbol.iterator] || ce["@@iterator"];
                    if (!X) {
                        if (Array.isArray(ce) || (X = b(ce)) || ae) {
                            X && (ce = X);
                            var G = 0, he = function() {};
                            return {
                                s: he,
                                n: function() {
                                    return G >= ce.length ? {
                                        done: !0
                                    } : {
                                        done: !1,
                                        value: ce[G++]
                                    };
                                },
                                e: function(Xe) {
                                    throw Xe;
                                },
                                f: he
                            };
                        }
                        throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                    }
                    var pe, me = !0, Ie = !1;
                    return {
                        s: function() {
                            X = X.call(ce);
                        },
                        n: function() {
                            var Xe = X.next();
                            return me = Xe.done, Xe;
                        },
                        e: function(Xe) {
                            Ie = !0, pe = Xe;
                        },
                        f: function() {
                            try {
                                me || X.return == null || X.return();
                            } finally{
                                if (Ie) throw pe;
                            }
                        }
                    };
                }
                function f(ce, ae, X) {
                    return (ae = _(ae)) in ce ? Object.defineProperty(ce, ae, {
                        value: X,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : ce[ae] = X, ce;
                }
                function h(ce, ae) {
                    var X = Object.keys(ce);
                    if (Object.getOwnPropertySymbols) {
                        var G = Object.getOwnPropertySymbols(ce);
                        ae && (G = G.filter(function(he) {
                            return Object.getOwnPropertyDescriptor(ce, he).enumerable;
                        })), X.push.apply(X, G);
                    }
                    return X;
                }
                function m(ce) {
                    for(var ae = 1; ae < arguments.length; ae++){
                        var X = arguments[ae] != null ? arguments[ae] : {};
                        ae % 2 ? h(Object(X), !0).forEach(function(G) {
                            f(ce, G, X[G]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(ce, Object.getOwnPropertyDescriptors(X)) : h(Object(X)).forEach(function(G) {
                            Object.defineProperty(ce, G, Object.getOwnPropertyDescriptor(X, G));
                        });
                    }
                    return ce;
                }
                function v(ce, ae) {
                    if (typeof ce != "object" || !ce) return ce;
                    var X = ce[Symbol.toPrimitive];
                    if (X !== void 0) {
                        var G = X.call(ce, ae);
                        if (typeof G != "object") return G;
                        throw new TypeError("@@toPrimitive must return a primitive value.");
                    }
                    return (ae === "string" ? String : Number)(ce);
                }
                function _(ce) {
                    var ae = v(ce, "string");
                    return typeof ae == "symbol" ? ae : ae + "";
                }
                function w(ce) {
                    "@babel/helpers - typeof";
                    return w = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ae) {
                        return typeof ae;
                    } : function(ae) {
                        return ae && typeof Symbol == "function" && ae.constructor === Symbol && ae !== Symbol.prototype ? "symbol" : typeof ae;
                    }, w(ce);
                }
                function b(ce, ae) {
                    if (ce) {
                        if (typeof ce == "string") return c(ce, ae);
                        var X = {}.toString.call(ce).slice(8, -1);
                        return X === "Object" && ce.constructor && (X = ce.constructor.name), X === "Map" || X === "Set" ? Array.from(ce) : X === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(X) ? c(ce, ae) : void 0;
                    }
                }
                var M = {
                    exports: {}
                }, E = {}, T;
                function P() {
                    return T || (T = 1, E.validateOptions = function(ae, X, G) {
                        if (ae) {
                            var he = ae ? Object.keys(ae) : [], pe = he.find(function(Ie) {
                                return !X.includes(Ie);
                            });
                            if (pe) throw new Error('Object "' + G + '" contains an unknown option "' + pe + '"');
                            var me = X.find(function(Ie) {
                                return Object.prototype[Ie] && !he.includes(Ie);
                            });
                            if (me) throw new Error('Object "' + G + '" contains an inherited option "' + me + '" which is not defined in the object itself but in its prototype. Only plain objects are allowed. Please remove the option from the prototype or override it with a value "undefined".');
                            return ae;
                        }
                    }, E.workerOptsNames = [
                        "credentials",
                        "name",
                        "type"
                    ], E.forkOptsNames = [
                        "cwd",
                        "detached",
                        "env",
                        "execPath",
                        "execArgv",
                        "gid",
                        "serialization",
                        "signal",
                        "killSignal",
                        "silent",
                        "stdio",
                        "uid",
                        "windowsVerbatimArguments",
                        "timeout"
                    ], E.workerThreadOptsNames = [
                        "argv",
                        "env",
                        "eval",
                        "execArgv",
                        "stdin",
                        "stdout",
                        "stderr",
                        "workerData",
                        "trackUnmanagedFds",
                        "transferList",
                        "resourceLimits",
                        "name"
                    ]), E;
                }
                var A, O;
                function D() {
                    return O || (O = 1, A = `!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){"use strict";function e(n){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if("function"!=typeof e)throw new SyntaxError("Function parameter handler(resolve, reject) missing");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0;var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?u(e,t,r):t,i=n?u(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new s),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c("Promise timed out after "+e+" ms"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function u(e,n,t){return function(r){try{var o=e(r);o&&"function"==typeof o.then&&"function"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function s(e){this.message=e||"promise cancelled",this.stack=(new Error).stack}function c(e){this.message=e||"timeout exceeded",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},s.prototype=new Error,s.prototype.constructor=Error,s.prototype.name="CancellationError",i.CancellationError=s,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name="TimeoutError",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,u="__workerpool-cleanup__",s={exit:function(){}},c={addAbortListener:function(e){s.abortListeners.push(e)},emit:s.emit};if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)s.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},s.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");var a;try{a=require("worker_threads")}catch(n){if("object"!==e(n)||null===n||"MODULE_NOT_FOUND"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;s.send=f.postMessage.bind(f),s.on=f.on.bind(f),s.exit=process.exit.bind(process)}else s.on=process.on.bind(process),s.send=function(e){process.send(e)},s.on("disconnect",(function(){process.exit(1)})),s.exit=process.exit.bind(process)}function d(e){return Object.getOwnPropertyNames(e).reduce((function(n,t){return Object.defineProperty(n,t,{value:e[t],enumerable:!0})}),{})}function l(e){return e&&"function"==typeof e.then&&"function"==typeof e.catch}s.methods={},s.methods.run=function(e,n){var t=new Function("return ("+e+").apply(this, arguments);");return t.worker=c,t.apply(t,n)},s.methods.methods=function(){return Object.keys(s.methods)},s.terminationHandler=void 0,s.abortListenerTimeout=1e3,s.abortListeners=[],s.terminateAndExit=function(e){var n=function(){s.exit(e)};if(!s.terminationHandler)return n();var t=s.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error("Worker terminating"))})))},s.cleanup=function(e){if(!s.abortListeners.length)return s.send({id:e,method:u,error:d(new Error("Worker terminating"))}),new i((function(e){e()}));var n,t=s.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error("Timeout occured waiting for abort handler, killing worker"))}),s.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),s.abortListeners.length||(s.abortListeners=[])}),(function(){clearTimeout(n),s.exit()}));return i.all([o,r]).then((function(){s.send({id:e,method:u,error:null})}),(function(n){s.send({id:e,method:u,error:n?d(n):null})}))};var p=null;s.on("message",(function(e){if("__workerpool-terminate__"===e)return s.terminateAndExit(0);if(e.method===u)return s.cleanup(e.id);try{var n=s.methods[e.method];if(!n)throw new Error('Unknown method "'+e.method+'"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?s.send({id:e.id,result:n.message,error:null},n.transfer):s.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){s.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?s.send({id:e.id,result:r.message,error:null},r.transfer):s.send({id:e.id,result:r,error:null}),p=null)}catch(n){s.send({id:e.id,result:null,error:d(n)})}})),s.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(s.methods[t]=e[t],s.methods[t].worker=c);n&&(s.terminationHandler=n.onTerminate,s.abortListenerTimeout=n.abortListenerTimeout||1e3),s.send("ready")},s.emit=function(e){if(p){if(e instanceof t)return void s.send({id:p,isEvent:!0,payload:e.message},e.transfer);s.send({id:p,isEvent:!0,payload:e})}},n.add=s.register,n.emit=s.emit}(t),n(t)}));
//# sourceMappingURL=worker.min.js.map
`), A;
                }
                var R;
                function N() {
                    if (R) return M.exports;
                    R = 1;
                    var ce = l(), ae = ce.Promise, X = s, G = P(), he = G.validateOptions, pe = G.forkOptsNames, me = G.workerThreadOptsNames, Ie = G.workerOptsNames, Xe = "__workerpool-terminate__", Ze = "__workerpool-cleanup__";
                    function at() {
                        var Ae = Pe();
                        if (!Ae) throw new Error("WorkerPool: workerType = 'thread' is not supported, Node >= 11.7.0 required");
                        return Ae;
                    }
                    function Je() {
                        if (typeof Worker != "function" && ((typeof Worker > "u" ? "undefined" : w(Worker)) !== "object" || typeof Worker.prototype.constructor != "function")) throw new Error("WorkerPool: Web Workers not supported");
                    }
                    function Pe() {
                        try {
                            return Vf;
                        } catch (Ae) {
                            if (w(Ae) === "object" && Ae !== null && Ae.code === "MODULE_NOT_FOUND") return null;
                            throw Ae;
                        }
                    }
                    function je() {
                        if (X.platform === "browser") {
                            if (typeof Blob > "u") throw new Error("Blob not supported by the browser");
                            if (!window.URL || typeof window.URL.createObjectURL != "function") throw new Error("URL.createObjectURL not supported by the browser");
                            var Ae = new Blob([
                                D()
                            ], {
                                type: "text/javascript"
                            });
                            return window.URL.createObjectURL(Ae);
                        } else return __dirname + "/worker.js";
                    }
                    function rt(Ae, ze) {
                        if (ze.workerType === "web") return Je(), ct(Ae, ze.workerOpts, Worker);
                        if (ze.workerType === "thread") return We = at(), st(Ae, We, ze);
                        if (ze.workerType === "process" || !ze.workerType) return Se(Ae, $e(ze), Vf);
                        if (X.platform === "browser") return Je(), ct(Ae, ze.workerOpts, Worker);
                        var We = Pe();
                        return We ? st(Ae, We, ze) : Se(Ae, $e(ze), Vf);
                    }
                    function ct(Ae, ze, We) {
                        he(ze, Ie, "workerOpts");
                        var it = new We(Ae, ze);
                        return it.isBrowserWorker = !0, it.on = function(pt, Pt) {
                            this.addEventListener(pt, function(en) {
                                Pt(en.data);
                            });
                        }, it.send = function(pt, Pt) {
                            this.postMessage(pt, Pt);
                        }, it;
                    }
                    function st(Ae, ze, We) {
                        var it, pt;
                        he(We?.workerThreadOpts, me, "workerThreadOpts");
                        var Pt = new ze.Worker(Ae, m({
                            stdout: (it = We?.emitStdStreams) !== null && it !== void 0 ? it : !1,
                            stderr: (pt = We?.emitStdStreams) !== null && pt !== void 0 ? pt : !1
                        }, We?.workerThreadOpts));
                        return Pt.isWorkerThread = !0, Pt.send = function(en, wt) {
                            this.postMessage(en, wt);
                        }, Pt.kill = function() {
                            return this.terminate(), !0;
                        }, Pt.disconnect = function() {
                            this.terminate();
                        }, We != null && We.emitStdStreams && (Pt.stdout.on("data", function(en) {
                            return Pt.emit("stdout", en);
                        }), Pt.stderr.on("data", function(en) {
                            return Pt.emit("stderr", en);
                        })), Pt;
                    }
                    function Se(Ae, ze, We) {
                        he(ze.forkOpts, pe, "forkOpts");
                        var it = We.fork(Ae, ze.forkArgs, ze.forkOpts), pt = it.send;
                        return it.send = function(Pt) {
                            return pt.call(it, Pt);
                        }, ze.emitStdStreams && (it.stdout.on("data", function(Pt) {
                            return it.emit("stdout", Pt);
                        }), it.stderr.on("data", function(Pt) {
                            return it.emit("stderr", Pt);
                        })), it.isChildProcess = !0, it;
                    }
                    function $e(Ae) {
                        Ae = Ae || {};
                        var ze = process.execArgv.join(" "), We = ze.indexOf("--inspect") !== -1, it = ze.indexOf("--debug-brk") !== -1, pt = [];
                        return We && (pt.push("--inspect=" + Ae.debugPort), it && pt.push("--debug-brk")), process.execArgv.forEach(function(Pt) {
                            Pt.indexOf("--max-old-space-size") > -1 && pt.push(Pt);
                        }), Object.assign({}, Ae, {
                            forkArgs: Ae.forkArgs,
                            forkOpts: Object.assign({}, Ae.forkOpts, {
                                execArgv: (Ae.forkOpts && Ae.forkOpts.execArgv || []).concat(pt),
                                stdio: Ae.emitStdStreams ? "pipe" : void 0
                            })
                        });
                    }
                    function ht(Ae) {
                        for(var ze = new Error(""), We = Object.keys(Ae), it = 0; it < We.length; it++)ze[We[it]] = Ae[We[it]];
                        return ze;
                    }
                    function Ee(Ae, ze) {
                        if (Object.keys(Ae.processing).length === 1) {
                            var We = Object.values(Ae.processing)[0];
                            We.options && typeof We.options.on == "function" && We.options.on(ze);
                        }
                    }
                    function lt(Ae, ze) {
                        var We = this, it = ze || {};
                        this.script = Ae || je(), this.worker = rt(this.script, it), this.debugPort = it.debugPort, this.forkOpts = it.forkOpts, this.forkArgs = it.forkArgs, this.workerOpts = it.workerOpts, this.workerThreadOpts = it.workerThreadOpts, this.workerTerminateTimeout = it.workerTerminateTimeout, Ae || (this.worker.ready = !0), this.requestQueue = [], this.worker.on("stdout", function(wt) {
                            Ee(We, {
                                stdout: wt.toString()
                            });
                        }), this.worker.on("stderr", function(wt) {
                            Ee(We, {
                                stderr: wt.toString()
                            });
                        }), this.worker.on("message", function(wt) {
                            if (!We.terminated) if (typeof wt == "string" && wt === "ready") We.worker.ready = !0, Pt();
                            else {
                                var Ln = wt.id, vn = We.processing[Ln];
                                if (vn !== void 0 && (wt.isEvent ? vn.options && typeof vn.options.on == "function" && vn.options.on(wt.payload) : (delete We.processing[Ln], We.terminating === !0 && We.terminate(), wt.error ? vn.resolver.reject(ht(wt.error)) : vn.resolver.resolve(wt.result))), wt.method === Ze) {
                                    var $r = We.tracking[wt.id];
                                    $r !== void 0 && (wt.error ? (clearTimeout($r.timeoutId), $r.resolver.reject(ht(wt.error))) : (We.tracking && clearTimeout($r.timeoutId), $r.resolver.resolve($r.result))), delete We.tracking[Ln];
                                }
                            }
                        });
                        function pt(wt) {
                            We.terminated = !0;
                            for(var Ln in We.processing)We.processing[Ln] !== void 0 && We.processing[Ln].resolver.reject(wt);
                            We.processing = Object.create(null);
                        }
                        function Pt() {
                            var wt = u(We.requestQueue.splice(0)), Ln;
                            try {
                                for(wt.s(); !(Ln = wt.n()).done;){
                                    var vn = Ln.value;
                                    We.worker.send(vn.message, vn.transfer);
                                }
                            } catch ($r) {
                                wt.e($r);
                            } finally{
                                wt.f();
                            }
                        }
                        var en = this.worker;
                        this.worker.on("error", pt), this.worker.on("exit", function(wt, Ln) {
                            var vn = `Workerpool Worker terminated Unexpectedly
`;
                            vn += "    exitCode: `" + wt + "`\n", vn += "    signalCode: `" + Ln + "`\n", vn += "    workerpool.script: `" + We.script + "`\n", vn += "    spawnArgs: `" + en.spawnargs + "`\n", vn += "    spawnfile: `" + en.spawnfile + "`\n", vn += "    stdout: `" + en.stdout + "`\n", vn += "    stderr: `" + en.stderr + "`\n", pt(new Error(vn));
                        }), this.processing = Object.create(null), this.tracking = Object.create(null), this.terminating = !1, this.terminated = !1, this.cleaning = !1, this.terminationHandler = null, this.lastId = 0;
                    }
                    return lt.prototype.methods = function() {
                        return this.exec("methods");
                    }, lt.prototype.exec = function(Ae, ze, We, it) {
                        We || (We = ae.defer());
                        var pt = ++this.lastId;
                        this.processing[pt] = {
                            id: pt,
                            resolver: We,
                            options: it
                        };
                        var Pt = {
                            message: {
                                id: pt,
                                method: Ae,
                                params: ze
                            },
                            transfer: it && it.transfer
                        };
                        this.terminated ? We.reject(new Error("Worker is terminated")) : this.worker.ready ? this.worker.send(Pt.message, Pt.transfer) : this.requestQueue.push(Pt);
                        var en = this;
                        return We.promise.catch(function(wt) {
                            if (wt instanceof ae.CancellationError || wt instanceof ae.TimeoutError) return en.tracking[pt] = {
                                id: pt,
                                resolver: ae.defer()
                            }, delete en.processing[pt], en.tracking[pt].resolver.promise = en.tracking[pt].resolver.promise.catch(function(Ln) {
                                delete en.tracking[pt];
                                var vn = en.terminateAndNotify(!0).then(function() {
                                    throw Ln;
                                }, function($r) {
                                    throw $r;
                                });
                                return vn;
                            }), en.worker.send({
                                id: pt,
                                method: Ze
                            }), en.tracking[pt].timeoutId = setTimeout(function() {
                                en.tracking[pt].resolver.reject(wt);
                            }, en.workerTerminateTimeout), en.tracking[pt].resolver.promise;
                            throw wt;
                        });
                    }, lt.prototype.busy = function() {
                        return this.cleaning || Object.keys(this.processing).length > 0;
                    }, lt.prototype.terminate = function(Ae, ze) {
                        var We = this;
                        if (Ae) {
                            for(var it in this.processing)this.processing[it] !== void 0 && this.processing[it].resolver.reject(new Error("Worker terminated"));
                            this.processing = Object.create(null);
                        }
                        for(var pt = 0, Pt = Object.values(We.tracking); pt < Pt.length; pt++){
                            var en = Pt[pt];
                            clearTimeout(en.timeoutId), en.resolver.reject(new Error("Worker Terminating"));
                        }
                        if (We.tracking = Object.create(null), typeof ze == "function" && (this.terminationHandler = ze), this.busy()) this.terminating = !0;
                        else {
                            var wt = function($r) {
                                if (We.terminated = !0, We.cleaning = !1, We.worker != null && We.worker.removeAllListeners && We.worker.removeAllListeners("message"), We.worker = null, We.terminating = !1, We.terminationHandler) We.terminationHandler($r, We);
                                else if ($r) throw $r;
                            };
                            if (this.worker) if (typeof this.worker.kill == "function") {
                                if (this.worker.killed) {
                                    wt(new Error("worker already killed!"));
                                    return;
                                }
                                var Ln = setTimeout(function() {
                                    We.worker && We.worker.kill();
                                }, this.workerTerminateTimeout);
                                this.worker.once("exit", function() {
                                    clearTimeout(Ln), We.worker && (We.worker.killed = !0), wt();
                                }), this.worker.ready ? this.worker.send(Xe) : this.requestQueue.push({
                                    message: Xe
                                }), this.cleaning = !0;
                                return;
                            } else if (typeof this.worker.terminate == "function") this.worker.terminate(), this.worker.killed = !0;
                            else throw new Error("Failed to terminate worker");
                            wt();
                        }
                    }, lt.prototype.terminateAndNotify = function(Ae, ze) {
                        var We = ae.defer();
                        return ze && We.promise.timeout(ze), this.terminate(Ae, function(it, pt) {
                            it ? We.reject(it) : We.resolve(pt);
                        }), We.promise;
                    }, M.exports = lt, M.exports._tryRequireWorkerThreads = Pe, M.exports._setupProcessWorker = Se, M.exports._setupBrowserWorker = ct, M.exports._setupWorkerThreadWorker = st, M.exports.ensureWorkerThreads = at, M.exports;
                }
                var k, U;
                function B() {
                    if (U) return k;
                    U = 1;
                    var ce = 65535;
                    k = ae;
                    function ae() {
                        this.ports = Object.create(null), this.length = 0;
                    }
                    return ae.prototype.nextAvailableStartingAt = function(X) {
                        for(; this.ports[X] === !0;)X++;
                        if (X >= ce) throw new Error("WorkerPool debug port limit reached: " + X + ">= " + ce);
                        return this.ports[X] = !0, this.length++, X;
                    }, ae.prototype.releasePort = function(X) {
                        delete this.ports[X], this.length--;
                    }, k;
                }
                var j, K;
                function q() {
                    if (K) return j;
                    K = 1;
                    var ce = l(), ae = ce.Promise, X = N(), G = s, he = B(), pe = new he;
                    function me(Je, Pe) {
                        typeof Je == "string" ? this.script = Je || null : (this.script = null, Pe = Je), this.workers = [], this.tasks = [], Pe = Pe || {}, this.forkArgs = Object.freeze(Pe.forkArgs || []), this.forkOpts = Object.freeze(Pe.forkOpts || {}), this.workerOpts = Object.freeze(Pe.workerOpts || {}), this.workerThreadOpts = Object.freeze(Pe.workerThreadOpts || {}), this.debugPortStart = Pe.debugPortStart || 43210, this.nodeWorker = Pe.nodeWorker, this.workerType = Pe.workerType || Pe.nodeWorker || "auto", this.maxQueueSize = Pe.maxQueueSize || 1 / 0, this.workerTerminateTimeout = Pe.workerTerminateTimeout || 1e3, this.onCreateWorker = Pe.onCreateWorker || function() {
                            return null;
                        }, this.onTerminateWorker = Pe.onTerminateWorker || function() {
                            return null;
                        }, this.emitStdStreams = Pe.emitStdStreams || !1, Pe && "maxWorkers" in Pe ? (Ie(Pe.maxWorkers), this.maxWorkers = Pe.maxWorkers) : this.maxWorkers = Math.max((G.cpus || 4) - 1, 1), Pe && "minWorkers" in Pe && (Pe.minWorkers === "max" ? this.minWorkers = this.maxWorkers : (Xe(Pe.minWorkers), this.minWorkers = Pe.minWorkers, this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers)), this._ensureMinWorkers()), this._boundNext = this._next.bind(this), this.workerType === "thread" && X.ensureWorkerThreads();
                    }
                    me.prototype.exec = function(Je, Pe, je) {
                        if (Pe && !Array.isArray(Pe)) throw new TypeError('Array expected as argument "params"');
                        if (typeof Je == "string") {
                            var rt = ae.defer();
                            if (this.tasks.length >= this.maxQueueSize) throw new Error("Max queue size of " + this.maxQueueSize + " reached");
                            var ct = this.tasks, st = {
                                method: Je,
                                params: Pe,
                                resolver: rt,
                                timeout: null,
                                options: je
                            };
                            ct.push(st);
                            var Se = rt.promise.timeout;
                            return rt.promise.timeout = function(ht) {
                                return ct.indexOf(st) !== -1 ? (st.timeout = ht, rt.promise) : Se.call(rt.promise, ht);
                            }, this._next(), rt.promise;
                        } else {
                            if (typeof Je == "function") return this.exec("run", [
                                String(Je),
                                Pe
                            ], je);
                            throw new TypeError('Function or string expected as argument "method"');
                        }
                    }, me.prototype.proxy = function() {
                        if (arguments.length > 0) throw new Error("No arguments expected");
                        var Je = this;
                        return this.exec("methods").then(function(Pe) {
                            var je = {};
                            return Pe.forEach(function(rt) {
                                je[rt] = function() {
                                    return Je.exec(rt, Array.prototype.slice.call(arguments));
                                };
                            }), je;
                        });
                    }, me.prototype._next = function() {
                        if (this.tasks.length > 0) {
                            var Je = this._getWorker();
                            if (Je) {
                                var Pe = this, je = this.tasks.shift();
                                if (je.resolver.promise.pending) {
                                    var rt = Je.exec(je.method, je.params, je.resolver, je.options).then(Pe._boundNext).catch(function() {
                                        if (Je.terminated) return Pe._removeWorker(Je);
                                    }).then(function() {
                                        Pe._next();
                                    });
                                    typeof je.timeout == "number" && rt.timeout(je.timeout);
                                } else Pe._next();
                            }
                        }
                    }, me.prototype._getWorker = function() {
                        for(var Je = this.workers, Pe = 0; Pe < Je.length; Pe++){
                            var je = Je[Pe];
                            if (je.busy() === !1) return je;
                        }
                        return Je.length < this.maxWorkers ? (je = this._createWorkerHandler(), Je.push(je), je) : null;
                    }, me.prototype._removeWorker = function(Je) {
                        var Pe = this;
                        return pe.releasePort(Je.debugPort), this._removeWorkerFromList(Je), this._ensureMinWorkers(), new ae(function(je, rt) {
                            Je.terminate(!1, function(ct) {
                                Pe.onTerminateWorker({
                                    forkArgs: Je.forkArgs,
                                    forkOpts: Je.forkOpts,
                                    workerThreadOpts: Je.workerThreadOpts,
                                    script: Je.script
                                }), ct ? rt(ct) : je(Je);
                            });
                        });
                    }, me.prototype._removeWorkerFromList = function(Je) {
                        var Pe = this.workers.indexOf(Je);
                        Pe !== -1 && this.workers.splice(Pe, 1);
                    }, me.prototype.terminate = function(Je, Pe) {
                        var je = this;
                        this.tasks.forEach(function($e) {
                            $e.resolver.reject(new Error("Pool terminated"));
                        }), this.tasks.length = 0;
                        var rt = function(ht) {
                            pe.releasePort(ht.debugPort), this._removeWorkerFromList(ht);
                        }, ct = rt.bind(this), st = [], Se = this.workers.slice();
                        return Se.forEach(function($e) {
                            var ht = $e.terminateAndNotify(Je, Pe).then(ct).always(function() {
                                je.onTerminateWorker({
                                    forkArgs: $e.forkArgs,
                                    forkOpts: $e.forkOpts,
                                    workerThreadOpts: $e.workerThreadOpts,
                                    script: $e.script
                                });
                            });
                            st.push(ht);
                        }), ae.all(st);
                    }, me.prototype.stats = function() {
                        var Je = this.workers.length, Pe = this.workers.filter(function(je) {
                            return je.busy();
                        }).length;
                        return {
                            totalWorkers: Je,
                            busyWorkers: Pe,
                            idleWorkers: Je - Pe,
                            pendingTasks: this.tasks.length,
                            activeTasks: Pe
                        };
                    }, me.prototype._ensureMinWorkers = function() {
                        if (this.minWorkers) for(var Je = this.workers.length; Je < this.minWorkers; Je++)this.workers.push(this._createWorkerHandler());
                    }, me.prototype._createWorkerHandler = function() {
                        var Je = this.onCreateWorker({
                            forkArgs: this.forkArgs,
                            forkOpts: this.forkOpts,
                            workerOpts: this.workerOpts,
                            workerThreadOpts: this.workerThreadOpts,
                            script: this.script
                        }) || {};
                        return new X(Je.script || this.script, {
                            forkArgs: Je.forkArgs || this.forkArgs,
                            forkOpts: Je.forkOpts || this.forkOpts,
                            workerOpts: Je.workerOpts || this.workerOpts,
                            workerThreadOpts: Je.workerThreadOpts || this.workerThreadOpts,
                            debugPort: pe.nextAvailableStartingAt(this.debugPortStart),
                            workerType: this.workerType,
                            workerTerminateTimeout: this.workerTerminateTimeout,
                            emitStdStreams: this.emitStdStreams
                        });
                    };
                    function Ie(Je) {
                        if (!Ze(Je) || !at(Je) || Je < 1) throw new TypeError("Option maxWorkers must be an integer number >= 1");
                    }
                    function Xe(Je) {
                        if (!Ze(Je) || !at(Je) || Je < 0) throw new TypeError("Option minWorkers must be an integer number >= 0");
                    }
                    function Ze(Je) {
                        return typeof Je == "number";
                    }
                    function at(Je) {
                        return Math.round(Je) == Je;
                    }
                    return j = me, j;
                }
                var ee = {}, W, Z;
                function $() {
                    if (Z) return W;
                    Z = 1;
                    function ce(ae, X) {
                        this.message = ae, this.transfer = X;
                    }
                    return W = ce, W;
                }
                var H;
                function se() {
                    return H || (H = 1, function(ce) {
                        var ae = $(), X = l().Promise, G = "__workerpool-terminate__", he = "__workerpool-cleanup__", pe = 1e3, me = {
                            exit: function() {}
                        }, Ie = {
                            addAbortListener: function(rt) {
                                me.abortListeners.push(rt);
                            },
                            emit: me.emit
                        };
                        if (typeof self < "u" && typeof postMessage == "function" && typeof addEventListener == "function") me.on = function(je, rt) {
                            addEventListener(je, function(ct) {
                                rt(ct.data);
                            });
                        }, me.send = function(je, rt) {
                            rt ? postMessage(je, rt) : postMessage(je);
                        };
                        else if (typeof process < "u") {
                            var Xe;
                            try {
                                Xe = Vf;
                            } catch (je) {
                                if (!(w(je) === "object" && je !== null && je.code === "MODULE_NOT_FOUND")) throw je;
                            }
                            if (Xe && Xe.parentPort !== null) {
                                var Ze = Xe.parentPort;
                                me.send = Ze.postMessage.bind(Ze), me.on = Ze.on.bind(Ze), me.exit = process.exit.bind(process);
                            } else me.on = process.on.bind(process), me.send = function(je) {
                                process.send(je);
                            }, me.on("disconnect", function() {
                                process.exit(1);
                            }), me.exit = process.exit.bind(process);
                        } else throw new Error("Script must be executed as a worker");
                        function at(je) {
                            return Object.getOwnPropertyNames(je).reduce(function(rt, ct) {
                                return Object.defineProperty(rt, ct, {
                                    value: je[ct],
                                    enumerable: !0
                                });
                            }, {});
                        }
                        function Je(je) {
                            return je && typeof je.then == "function" && typeof je.catch == "function";
                        }
                        me.methods = {}, me.methods.run = function(rt, ct) {
                            var st = new Function("return (" + rt + ").apply(this, arguments);");
                            return st.worker = Ie, st.apply(st, ct);
                        }, me.methods.methods = function() {
                            return Object.keys(me.methods);
                        }, me.terminationHandler = void 0, me.abortListenerTimeout = pe, me.abortListeners = [], me.terminateAndExit = function(je) {
                            var rt = function() {
                                me.exit(je);
                            };
                            if (!me.terminationHandler) return rt();
                            var ct = me.terminationHandler(je);
                            return Je(ct) ? (ct.then(rt, rt), ct) : (rt(), new X(function(st, Se) {
                                Se(new Error("Worker terminating"));
                            }));
                        }, me.cleanup = function(je) {
                            if (!me.abortListeners.length) return me.send({
                                id: je,
                                method: he,
                                error: at(new Error("Worker terminating"))
                            }), new X(function(Ee) {
                                Ee();
                            });
                            var rt = function() {
                                me.exit();
                            }, ct = function() {
                                me.abortListeners.length || (me.abortListeners = []);
                            }, st = me.abortListeners.map(function(Ee) {
                                return Ee();
                            }), Se, $e = new X(function(Ee, lt) {
                                Se = setTimeout(function() {
                                    lt(new Error("Timeout occured waiting for abort handler, killing worker"));
                                }, me.abortListenerTimeout);
                            }), ht = X.all(st).then(function() {
                                clearTimeout(Se), ct();
                            }, function() {
                                clearTimeout(Se), rt();
                            });
                            return X.all([
                                ht,
                                $e
                            ]).then(function() {
                                me.send({
                                    id: je,
                                    method: he,
                                    error: null
                                });
                            }, function(Ee) {
                                me.send({
                                    id: je,
                                    method: he,
                                    error: Ee ? at(Ee) : null
                                });
                            });
                        };
                        var Pe = null;
                        me.on("message", function(je) {
                            if (je === G) return me.terminateAndExit(0);
                            if (je.method === he) return me.cleanup(je.id);
                            try {
                                var rt = me.methods[je.method];
                                if (rt) {
                                    Pe = je.id;
                                    var ct = rt.apply(rt, je.params);
                                    Je(ct) ? ct.then(function(st) {
                                        st instanceof ae ? me.send({
                                            id: je.id,
                                            result: st.message,
                                            error: null
                                        }, st.transfer) : me.send({
                                            id: je.id,
                                            result: st,
                                            error: null
                                        }), Pe = null;
                                    }).catch(function(st) {
                                        me.send({
                                            id: je.id,
                                            result: null,
                                            error: at(st)
                                        }), Pe = null;
                                    }) : (ct instanceof ae ? me.send({
                                        id: je.id,
                                        result: ct.message,
                                        error: null
                                    }, ct.transfer) : me.send({
                                        id: je.id,
                                        result: ct,
                                        error: null
                                    }), Pe = null);
                                } else throw new Error('Unknown method "' + je.method + '"');
                            } catch (st) {
                                me.send({
                                    id: je.id,
                                    result: null,
                                    error: at(st)
                                });
                            }
                        }), me.register = function(je, rt) {
                            if (je) for(var ct in je)je.hasOwnProperty(ct) && (me.methods[ct] = je[ct], me.methods[ct].worker = Ie);
                            rt && (me.terminationHandler = rt.onTerminate, me.abortListenerTimeout = rt.abortListenerTimeout || pe), me.send("ready");
                        }, me.emit = function(je) {
                            if (Pe) {
                                if (je instanceof ae) {
                                    me.send({
                                        id: Pe,
                                        isEvent: !0,
                                        payload: je.message
                                    }, je.transfer);
                                    return;
                                }
                                me.send({
                                    id: Pe,
                                    isEvent: !0,
                                    payload: je
                                });
                            }
                        }, ce.add = me.register, ce.emit = me.emit;
                    }(ee)), ee;
                }
                var le = s.platform, ne = s.isMainThread, ue = s.cpus;
                function ge(ce, ae) {
                    var X = q();
                    return new X(ce, ae);
                }
                var ye = r.pool = ge;
                function _e(ce, ae) {
                    var X = se();
                    X.add(ce, ae);
                }
                var Te = r.worker = _e;
                function Re(ce) {
                    var ae = se();
                    ae.emit(ce);
                }
                var Fe = r.workerEmit = Re, be = l(), Me = be.Promise, oe = r.Promise = Me, Ye = r.Transfer = $(), Be = r.platform = le, nt = r.isMainThread = ne, de = r.cpus = ue;
                n.Promise = oe, n.Transfer = Ye, n.cpus = de, n.default = r, n.isMainThread = nt, n.platform = Be, n.pool = ye, n.worker = Te, n.workerEmit = Fe, Object.defineProperty(n, "__esModule", {
                    value: !0
                });
            });
        }(Tx, Tx.exports)), Tx.exports;
    }
    var dSe = uSe();
    const fSe = ({ chunks: t, opacity: e = 1 })=>(console.log("Chunks re-render"), e <= 0 ? null : Array.from(t.values()).map((n)=>x.jsxs("mesh", {
                position: [
                    n.x * 1.001,
                    0,
                    n.z * 1.001
                ],
                rotation: [
                    -Math.PI / 2,
                    0,
                    0
                ],
                receiveShadow: !0,
                children: [
                    x.jsx("planeGeometry", {
                        args: [
                            n.size,
                            n.size
                        ]
                    }),
                    x.jsx("meshStandardMaterial", {
                        color: 16777215,
                        map: n.texture.data,
                        transparent: !0,
                        opacity: e
                    })
                ]
            }, `chunk-${n.id}`))), hSe = ({ gameConfig: { chunkSize: t, layers: e } })=>({ x: n, z: r, bottom: i, top: s, left: o, right: a, zoom: l })=>{
            const c = [];
            for (const u of e)if (l >= u.min && l <= u.max) {
                const f = t * u.level, h = (s - i) / l, v = (a - o) / l * .5, _ = h * .5, w = f / 2, b = Math.floor((n - v + w) / f) - u.offset, M = Math.ceil((n + v + w) / f) + u.offset, E = Math.floor((r - _ + w) / f) - u.offset, T = Math.ceil((r + _ + w) / f) + u.offset;
                c.push({
                    hash: `[${b} → ${M}]:[${E} → ${T}]:${u.level}`,
                    count: (M - b) * (T - E),
                    x: {
                        min: b,
                        max: M
                    },
                    z: {
                        min: E,
                        max: T
                    },
                    layer: u
                });
            }
            return {
                levels: c
            };
        }, jH = ({ x: t, z: e, layer: { level: n } })=>Array.from({
            length: t.max - t.min
        }, (r, i)=>Array.from({
                length: e.max - e.min
            }, (s, o)=>{
                const a = t.min + i, l = e.min + o;
                return {
                    id: `${a}:${l}:${n}`,
                    x: a,
                    z: l
                };
            })).flat();
    async function pSe(t, e, { concurrency: n = Number.POSITIVE_INFINITY, stopOnError: r = !0, signal: i } = {}) {
        return new Promise((s, o)=>{
            if (t[Symbol.iterator] === void 0 && t[Symbol.asyncIterator] === void 0) throw new TypeError(`Expected \`input\` to be either an \`Iterable\` or \`AsyncIterable\`, got (${typeof t})`);
            if (typeof e != "function") throw new TypeError("Mapper function is required");
            if (!(Number.isSafeInteger(n) && n >= 1 || n === Number.POSITIVE_INFINITY)) throw new TypeError(`Expected \`concurrency\` to be an integer from 1 and up or \`Infinity\`, got \`${n}\` (${typeof n})`);
            const a = [], l = [], c = new Map;
            let u = !1, f = !1, h = !1, m = 0, v = 0;
            const _ = t[Symbol.iterator] === void 0 ? t[Symbol.asyncIterator]() : t[Symbol.iterator](), w = ()=>{
                E(i.reason);
            }, b = ()=>{
                i?.removeEventListener("abort", w);
            }, M = (P)=>{
                s(P), b();
            }, E = (P)=>{
                u = !0, f = !0, o(P), b();
            };
            i && (i.aborted && E(i.reason), i.addEventListener("abort", w, {
                once: !0
            }));
            const T = async ()=>{
                if (f) return;
                const P = await _.next(), A = v;
                if (v++, P.done) {
                    if (h = !0, m === 0 && !f) {
                        if (!r && l.length > 0) {
                            E(new AggregateError(l));
                            return;
                        }
                        if (f = !0, c.size === 0) {
                            M(a);
                            return;
                        }
                        const O = [];
                        for (const [D, R] of a.entries())c.get(D) !== Xj && O.push(R);
                        M(O);
                    }
                    return;
                }
                m++, (async ()=>{
                    try {
                        const O = await P.value;
                        if (f) return;
                        const D = await e(O, A);
                        D === Xj && c.set(A, D), a[A] = D, m--, await T();
                    } catch (O) {
                        if (r) E(O);
                        else {
                            l.push(O), m--;
                            try {
                                await T();
                            } catch (D) {
                                E(D);
                            }
                        }
                    }
                })();
            };
            (async ()=>{
                for(let P = 0; P < n; P++){
                    try {
                        await T();
                    } catch (A) {
                        E(A);
                        break;
                    }
                    if (h || u) break;
                }
            })();
        });
    }
    const Xj = Symbol("skip"), mSe = async ({ pool: t, mapId: e, level: n, skip: r, concurrency: i = 1 / 0, onChunk: s, onComplete: o, abort: { signal: a } = new AbortController })=>{
        const l = new T9.Timer;
        return l.start(), console.info(`	[generator] Started generator for [${n.count} chunks] ${n.hash}`), pSe(jH(n).filter(({ id: c })=>!r.includes(c)), async ({ z: c, x: u, id: f })=>{
            const h = t.exec("chunkOf", [
                {
                    id: f,
                    mapId: e,
                    level: n,
                    x: u,
                    z: c
                }
            ]);
            return s?.(h), h;
        }, {
            concurrency: i,
            stopOnError: !1,
            signal: a
        }).then((c)=>{
            o?.(c);
            const u = c.filter((f)=>f.hit).length;
            return console.info(`	[generator]	Finished ${qn({
                number: l.ms()
            })}ms
		Requested ${n.count}, cached ${u}, generated ${c.length - u}, skips ${r.length}
		cache hit ${c.length > 0 ? `${(100 * u / n.count).toFixed(0)}%` : "100% (external cache)"}
		generated ${(100 * c.length / n.count).toFixed(0)}%`), c;
        }).catch((c)=>{
            console.warn(c);
        });
    }, gSe = "/assets/chunkOf-DwbqkuyH.js", ySe = ({ mapId: t, gameConfig: e, gameEventBus: n })=>{
        const r = J.useMemo(()=>dSe.pool(gSe, {
                workerOpts: {
                    type: "module"
                }
            }), []), i = J.useMemo(()=>{
            const f = new Map;
            return e.layers.forEach((h)=>{
                f.set(h.level, new wO({
                    max: e.chunkLimit,
                    ttl: 0
                }));
            }), f;
        }, []), [s, o] = J.useState([]);
        J.useEffect(()=>()=>{
                console.info("[ChunkManager]	Cleaning up"), r.terminate(), i.forEach((f)=>{
                    f.clear();
                });
            }, []);
        const a = hSe({
            gameConfig: e
        }), [l, c] = J.useState(!1);
        Hie({
            eventBus: n,
            event: "onCamera",
            callback (f) {
                const { levels: h } = a(f);
                c(!0), Promise.all(h.map((m)=>new Promise((v)=>{
                        console.info("[ChunkManager]	Processing level", m, f.zoom);
                        const _ = i.get(m.layer.level);
                        if (!_) throw console.warn(`[ChunkManager]		Chunk cache for level ${m.layer.level} not found; that's quite strange. Doctor Strange.`), new Error("Chunk cache not found");
                        jH(m).forEach(({ id: b })=>{
                            _.get(b);
                        }), new T9.Timer().start(), console.info(`[ChunkManager]	Requesting chunks [${m.count}] ${m.hash}`), mSe({
                            pool: r,
                            mapId: t,
                            level: m,
                            skip: [
                                ..._.keys()
                            ],
                            onComplete (b) {
                                for (const { chunk: { texture: M, ...E } } of b){
                                    const T = new vc(new Uint8Array(M.data), M.size, M.size);
                                    T.needsUpdate = !0, _.set(E.id, {
                                        ...E,
                                        texture: {
                                            size: M.size,
                                            data: T
                                        }
                                    });
                                }
                                v(m);
                            }
                        });
                    }))).then((m)=>{
                    c(!1), o(m);
                });
            }
        }), H1e(l, "wait", "auto");
        const u = J.useMemo(()=>s.map((f)=>{
                const h = i.get(f.layer.level);
                return h ? x.jsx(fSe, {
                    chunks: h
                }, `chunks-${f.layer.level}`) : null;
            }), [
            s
        ]);
        return x.jsxs(x.Fragment, {
            children: [
                x.jsx("mesh", {
                    position: [
                        e.plotSize / 2,
                        0,
                        e.plotSize / 2
                    ],
                    children: x.jsx("boxGeometry", {
                        args: [
                            e.plotSize,
                            1,
                            e.plotSize
                        ]
                    })
                }),
                u
            ]
        });
    }, vSe = ({ mapId: t, gameConfig: e, gameEventBus: n, zoom: r })=>{
        console.log("Loop re-render");
        const i = hd(({ camera: o })=>o), s = aSe(()=>{
            n.emit("onCamera", {
                x: i.position.x,
                z: i.position.z,
                bottom: i.bottom,
                top: i.top,
                left: i.left,
                right: i.right,
                zoom: i.zoom
            });
        }, 500);
        return J.useEffect(()=>{
            n.emit("onCamera", {
                x: i.position.x,
                z: i.position.z,
                bottom: i.bottom,
                top: i.top,
                left: i.left,
                right: i.right,
                zoom: i.zoom
            });
        }, []), x.jsxs(x.Fragment, {
            children: [
                x.jsx("directionalLight", {
                    castShadow: !0,
                    color: 16777215,
                    intensity: 2.5,
                    position: [
                        0,
                        256,
                        256
                    ],
                    "shadow-mapSize": [
                        4096,
                        4096
                    ],
                    "shadow-bias": -1e-4,
                    "shadow-normalBias": .1,
                    "shadow-radius": 15
                }),
                x.jsx(eSe, {
                    enableRotate: !1,
                    enablePan: !0,
                    enableZoom: !0,
                    enableDamping: !0,
                    screenSpacePanning: !0,
                    zoomToCursor: !0,
                    zoom0: r,
                    minZoom: e.minZoom,
                    maxZoom: e.maxZoom,
                    mouseButtons: {
                        LEFT: Hf.PAN
                    },
                    touches: {
                        ONE: yd.PAN,
                        TWO: yd.DOLLY_PAN
                    },
                    makeDefault: !0,
                    onChange: ()=>{
                        n.emit("onRealtimeCamera", {
                            x: i.position.x,
                            z: i.position.z,
                            bottom: i.bottom,
                            top: i.top,
                            left: i.left,
                            right: i.right,
                            zoom: i.zoom
                        });
                    },
                    onEnd: s
                }),
                x.jsx(ySe, {
                    mapId: t,
                    gameConfig: e,
                    gameEventBus: n
                })
            ]
        });
    }, xSe = ({ zoom: t, children: e })=>(console.log("MapCanvas re-render"), x.jsxs(q1e, {
            frameloop: "demand",
            gl: {
                preserveDrawingBuffer: !1,
                powerPreference: "high-performance",
                toneMapping: h2,
                toneMappingExposure: 1,
                antialias: !0
            },
            camera: {
                zoom: t,
                position: [
                    0,
                    16,
                    0
                ],
                up: [
                    0,
                    0,
                    -1
                ],
                near: .1,
                far: 4096
            },
            shadows: !0,
            dpr: [
                1,
                2
            ],
            orthographic: !0,
            children: [
                x.jsx("color", {
                    attach: "background",
                    args: [
                        1053968
                    ]
                }),
                x.jsx(oSe, {}),
                x.jsx("ambientLight", {
                    intensity: .25
                }),
                e
            ]
        })), bSe = ({ mapId: t, gameConfig: e, gameEventBus: n, zoom: r = 8 })=>(console.log("Map re-render"), x.jsx("div", {
            className: mn([
                "w-screen",
                "h-screen",
                "overflow-hidden"
            ]),
            children: x.jsx(xSe, {
                zoom: r,
                children: x.jsx(vSe, {
                    mapId: t,
                    gameConfig: e,
                    gameEventBus: n,
                    zoom: r
                })
            })
        })), wSe = Y.object({
        zoomToId: Y.string().optional()
    }), BH = Bt("/$locale/apps/derivean/map/$mapId")({
        validateSearch: Zr(wSe),
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r } }) {
            const i = await n();
            return {
                user: i,
                cycle: await t.ensureQueryData({
                    queryKey: [
                        "map",
                        r,
                        "cycle"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>(await s.selectFrom("Cycle as c").select((o)=>o.fn.count("c.id").as("count")).where("c.userId", "=", i.id).executeTakeFirstOrThrow()).count);
                    }
                })
            };
        },
        component () {
            const { mapId: t } = BH.useParams(), e = Ume();
            return x.jsx(bSe, {
                mapId: t,
                gameConfig: Bme,
                gameEventBus: e,
                zoom: .1
            });
        }
    }), UH = Bt("/$locale/apps/derivean/db/schema")({
        async loader ({ context: { kysely: t } }) {
            return {
                tables: await t.introspection.getTables()
            };
        },
        component () {
            const { tables: t } = UH.useLoaderData(), e = ({ dataType: i, isNullable: s })=>{
                const o = i.toLowerCase();
                let a = `z.never({message: '${i}'})`;
                switch(o){
                    case "integer":
                        {
                            a = "z.number().int()";
                            break;
                        }
                    case "float4":
                        {
                            a = "z.number()";
                            break;
                        }
                    case "datetime":
                        {
                            a = "z.string()";
                            break;
                        }
                    case "boolean":
                        {
                            a = "withBoolSchema()";
                            break;
                        }
                    case "text":
                        a = "z.string()";
                }
                return o.startsWith("varchar") && (a = `z.string()${s ? "" : ".min(1)"}`), `
// ${i} / ${s ? "nullable" : "not nullable"}
${a}${s ? ".nullish()" : ""}
`;
            }, n = t.map((i)=>{
                const s = i.name.replaceAll("_", "");
                return `
export const with${s}Schema = <
    TShapeSchema extends ShapeSchema,
    TFilterSchema extends FilterSchema,
>({
    shape,
    filter,
}: {
    shape: TShapeSchema;
    filter: TFilterSchema;
}) => {
    return withSourceSchema({
        entity: IdentitySchema.merge(z.object({
                ${i.columns.filter(({ name: o })=>o !== "id").map((o)=>`
    "${o.name}": ${e(o)}
        `.trim()).join(`,
			`)},
        })),
        shape,
        filter,
        sort: [${i.columns.map((o)=>`"${o.name}"`).join(", ")}],
    });
}

export type ${s}Entity = ReturnType<typeof with${s}Schema>['~entity'];
            `.trim();
            }), r = t.map((i)=>{
                const s = i.name.replaceAll("_", "");
                return `${i.name}: ${s}Entity;`;
            });
            return x.jsxs("pre", {
                children: [
                    `
import {
    IdentitySchema,
    withSourceSchema,
    type FilterSchema,
    type ShapeSchema,
    withBoolSchema,
} from "@use-pico/common";
import { z } from "zod";
            `.trim(),
                    `

${n.join(`

`)}`,
                    `

export interface Database {
    ${r.join(`
	`)}
}
                `
                ]
            });
        }
    }), Kj = Ri(), _Se = [
        Kj({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "User name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    to: "/$locale/apps/derivean/root/user/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 14
        }),
        Kj({
            name: "login",
            header () {
                return x.jsx(re, {
                    label: "User login (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            size: 14
        })
    ], SSe = ({ table: t, ...e })=>{
        const n = Vr([
            [
                "GameMap"
            ],
            [
                "Management"
            ],
            [
                "User_Inventory"
            ]
        ]), r = dn({
            async mutationFn ({ userId: i }) {
                return At.transaction().execute(async (s)=>{
                    await s.deleteFrom("Map").where("userId", "=", i).execute();
                });
            },
            async onSuccess () {
                await n();
            }
        });
        return x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: _Se
            }),
            action: {
                row ({ data: i }) {
                    return x.jsx(Wr, {
                        children: x.jsx(BP, {
                            icon: Bi,
                            onClick: ()=>{
                                r.mutateAsync({
                                    userId: i.id
                                });
                            },
                            children: x.jsx(re, {
                                label: "Reset game (menu)"
                            })
                        })
                    });
                }
            },
            ...e
        });
    }, ESe = Wae({
        shape: Y.object({
            name: Y.string().min(1),
            login: Y.string().min(1),
            password: Y.string().min(1)
        }),
        filter: yo.merge(Y.object({
            login: Y.string().optional(),
            password: Y.string().optional()
        }))
    }), eE = Bt("/$locale/apps/derivean/root/user/list")({
        validateSearch: Zr(Mi(ESe)),
        loaderDeps ({ search: { filter: t, cursor: e } }) {
            return {
                filter: t,
                cursor: e
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "User",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((i)=>Hr({
                            select: i.selectFrom("User as u").select([
                                "u.id",
                                "u.name",
                                "u.login"
                            ]),
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                login: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = eE.useLoaderData(), { filter: n, cursor: r, selection: i } = eE.useSearch(), s = eE.useNavigate(), { tva: o } = qr({
                from: "__root__"
            }), a = o().slots;
            return x.jsx("div", {
                className: a.base(),
                children: x.jsx(SSe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of users (label)"
                        }),
                        ..._i(s)
                    }
                })
            });
        }
    }), MSe = ({ entity: t, ...e })=>{
        const { locale: n } = sn({
            from: "/$locale"
        });
        return x.jsxs(Bm, {
            ...e,
            children: [
                x.jsx(Or, {
                    icon: ok,
                    to: "/$locale/apps/derivean/root/user/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "View detail (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Qa,
                    to: "/$locale/apps/derivean/root/user/$id/building/list",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Building list (menu)"
                    })
                })
            ]
        });
    }, TSe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsx(By, {
            title: ({ entity: n })=>x.jsx(Uy, {
                    icon: ok,
                    title: n.name
                }),
            actions: ()=>x.jsx(x.Fragment, {
                    children: x.jsx(It, {
                        icon: qT,
                        to: "/$locale/apps/derivean/root/user/list",
                        params: {
                            locale: e
                        },
                        children: x.jsx(re, {
                            label: "User list (label)"
                        })
                    })
                }),
            ...t
        });
    }, zH = Bt("/$locale/apps/derivean/root/user/$id")({
        async loader ({ context: { kysely: t }, params: { id: e } }) {
            return t.transaction().execute(async (n)=>({
                    entity: await Mc({
                        select: n.selectFrom("User as u").select([
                            "u.id",
                            "u.name"
                        ]).where("u.id", "=", e),
                        output: Y.object({
                            id: Y.string().min(1),
                            name: Y.string().min(1)
                        })
                    })
                }));
        },
        component () {
            const { tva: t } = qr({
                from: "__root__"
            }), { entity: e } = zH.useLoaderData(), n = t().slots;
            return x.jsxs("div", {
                className: n.base(),
                children: [
                    x.jsx(TSe, {
                        entity: e
                    }),
                    x.jsx(MSe, {
                        entity: e
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), Zw = Vae({
        shape: Y.object({
            code: Y.string().min(1),
            label: Y.string().min(1),
            group: Y.string().nullish(),
            sort: su()
        }),
        filter: yo.merge(Y.object({
            code: Y.string().optional(),
            group: Y.string().optional()
        }))
    }), Yj = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(Zw.shape),
            defaultValues: {
                sort: 0,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "code",
                    label: x.jsx(re, {
                        label: "Tag code (label)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("code")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "label",
                    label: x.jsx(re, {
                        label: "Tag label (label)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("label")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "group",
                    label: x.jsx(re, {
                        label: "Tag group (label)"
                    }),
                    children: x.jsx("input", {
                        type: "text",
                        className: o.input(),
                        ...s.register("group")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "sort",
                    label: x.jsx(re, {
                        label: "Tag sort (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("sort")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: kb,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, pN = Ri(), CSe = [
        pN({
            name: "label",
            header () {
                return x.jsx(re, {
                    label: "Tag label (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            size: 14
        }),
        pN({
            name: "code",
            header () {
                return x.jsx(re, {
                    label: "Tag code (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            size: 14
        }),
        pN({
            name: "group",
            header () {
                return x.jsx(re, {
                    label: "Tag group (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "group",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("group", t.group);
                }
            },
            size: 24
        })
    ], VH = ({ group: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Tag"
            ],
            [
                "Resource"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: CSe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create tag (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create tag (modal)"
                            }),
                            icon: kb,
                            children: x.jsx(Yj, {
                                defaultValues: {
                                    group: t
                                },
                                mutation: dn({
                                    async mutationFn (i) {
                                        return fr.promise(At.transaction().execute((s)=>s.insertInto("Tag").values({
                                                id: tr(),
                                                ...i
                                            }).returningAll().executeTakeFirstOrThrow()), mo("Create tag"));
                                    },
                                    async onSuccess () {
                                        await r();
                                    }
                                })
                            })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit tag (modal)"
                                }),
                                icon: kb,
                                children: x.jsx(Yj, {
                                    defaultValues: {
                                        group: t,
                                        ...i
                                    },
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return fr.promise(At.transaction().execute((o)=>o.updateTable("Tag").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), mo("Edit tag"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete tag (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>{
                                        await At.transaction().execute((s)=>s.deleteFrom("Tag").where("id", "=", i.id).execute());
                                    },
                                    textContent: x.jsx(re, {
                                        label: "Tag delete (content)"
                                    }),
                                    textToast: "Tag delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, tE = Bt("/$locale/apps/derivean/root/tag/list")({
        validateSearch: Zr(Mi(Zw)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Tag",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (i)=>Hr({
                            select: i.selectFrom("Tag as t").select([
                                "t.id",
                                "t.code",
                                "t.label",
                                "t.group",
                                "t.sort"
                            ]).orderBy("t.sort", "desc"),
                            output: Y.object({
                                id: Y.string().min(1),
                                code: Y.string().min(1),
                                label: Y.string().min(1),
                                group: Y.string().nullish(),
                                sort: Y.number().int().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = tE.useLoaderData(), { filter: n, cursor: r, selection: i } = tE.useSearch(), s = tE.useNavigate(), { tva: o } = qr({
                from: "__root__"
            }), a = o().slots;
            return x.jsx("div", {
                className: a.base(),
                children: x.jsx(VH, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of items"
                        }),
                        ..._i(s)
                    }
                })
            });
        }
    }), RSe = ({ group: t, ...e })=>x.jsx(Wz, {
            icon: kb,
            table: (n)=>x.jsx(VH, {
                    group: t,
                    ...n
                }),
            render: ({ entities: n })=>x.jsx($z, {
                    tags: n
                }),
            queryKey: "Tag",
            query: async ({ filter: n, cursor: r })=>At.transaction().execute(async (i)=>Hr({
                        select: i.selectFrom("Tag as t").select([
                            "t.id",
                            "t.code",
                            "t.label",
                            "t.group",
                            "t.sort"
                        ]),
                        output: Zw.entity,
                        query ({ select: s, where: o }) {
                            let a = s;
                            if (o?.id && (a = a.where("t.id", "=", o.id)), o?.idIn && (a = a.where("t.id", "in", o.idIn)), o?.fulltext) {
                                const l = `%${o.fulltext}%`.toLowerCase();
                                a = a.where((c)=>c.or([
                                        c("t.code", "like", l),
                                        c("t.group", "like", l),
                                        c("t.label", "like", l),
                                        c("t.id", "like", l)
                                    ]));
                            }
                            return a;
                        },
                        filter: n,
                        cursor: r
                    })),
            ...e
        }), WH = zae({
        shape: Y.object({
            name: Y.string().min(1),
            weight: su(),
            tagIds: Y.array(Y.string()).optional(),
            image: Y.instanceof(FileList, {
                message: "You must upload a file."
            }).transform((t)=>t[0]).refine((t)=>(t && t.size < 5 * 1024 * 1024, !0), {
                message: _a.text("File size must be less than 5MB")
            }).refine((t)=>t ? [
                    "image/png",
                    "image/jpeg",
                    "image/webp"
                ].includes(t.type) : !0, {
                message: "Only PNG/JPEG/WEBP files are allowed."
            }).optional()
        }),
        filter: yo.merge(Y.object({
            name: Y.string().optional()
        }))
    }), Zj = ({ group: t = "resource", mutation: e, defaultValues: n, variant: r, tva: i = Ts, css: s })=>{
        const o = Cs({
            resolver: Rs(WH.shape),
            defaultValues: {
                name: "",
                weight: 1,
                ...n
            }
        }), a = i({
            ...r,
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting,
            css: s
        }).slots;
        return x.jsxs("form", {
            className: a.base(),
            onSubmit: xo({
                form: o,
                mutation: e
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: o.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: o.formState,
                    name: "name",
                    label: x.jsx(re, {
                        label: "Resource name (label)"
                    }),
                    children: x.jsx("input", {
                        type: "text",
                        className: a.input(),
                        ...o.register("name")
                    })
                }),
                x.jsx(wn, {
                    formState: o.formState,
                    name: "weight",
                    label: x.jsx(re, {
                        label: "Resource weight (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Weight is used to compute, how fast a resource moves on the road (hint)"
                    }),
                    required: !0,
                    children: x.jsx("input", {
                        type: "number",
                        className: a.input(),
                        min: 1,
                        ...o.register("weight")
                    })
                }),
                x.jsx(wn, {
                    formState: o.formState,
                    name: "image",
                    label: x.jsx(re, {
                        label: "Resource image (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Resource image (hint)"
                    }),
                    children: x.jsx("input", {
                        type: "file",
                        className: a.input(),
                        ...o.register("image")
                    })
                }),
                x.jsx(wn, {
                    formState: o.formState,
                    name: "tagIds",
                    label: x.jsx(re, {
                        label: "Resource tags (label)"
                    }),
                    children: x.jsx($o, {
                        control: o.control,
                        name: "tagIds",
                        render: ({ field: { ref: l, ...c } })=>x.jsx(RSe, {
                                group: t,
                                textTitle: x.jsx(re, {
                                    label: "Select resource tags (title)"
                                }),
                                textSelect: x.jsx(re, {
                                    label: "Select resource tags (label)"
                                }),
                                allowEmpty: !0,
                                ...c
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: ii,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, g0 = Ri(), ISe = [
        g0({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: x.jsx("div", {
                        className: mn([
                            "border-2",
                            "border-purple-400",
                            "rounded-md",
                            "w-[64px]",
                            "h-[64px]",
                            "bg-contain",
                            `bg-${t.id}`
                        ])
                    }),
                    to: "/$locale/apps/derivean/root/resource/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        g0({
            name: "weight",
            header () {
                return x.jsx(re, {
                    label: "Resource weight (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 12
        }),
        g0({
            name: "countProduction",
            header () {
                return x.jsx(re, {
                    label: "Resource production count (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(uo, {
                    css: {
                        base: t !== void 0 && t === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: qn({
                        number: t
                    })
                });
            },
            size: 12
        }),
        g0({
            name: "countRequirement",
            header () {
                return x.jsx(re, {
                    label: "Resource requirement count (label)"
                });
            },
            render ({ data: t, value: e }) {
                return x.jsx(uo, {
                    css: {
                        base: t.countRequirement === 0 && t.countProductionRequirement === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: qn({
                        number: e
                    })
                });
            },
            size: 12
        }),
        g0({
            name: "countProductionRequirement",
            header () {
                return x.jsx(re, {
                    label: "Resource production requirement count (label)"
                });
            },
            render ({ data: t, value: e }) {
                return x.jsx(uo, {
                    css: {
                        base: t.countRequirement === 0 && t.countProductionRequirement === 0 ? [
                            "bg-red-100",
                            "text-red-500",
                            "border-red-600"
                        ] : []
                    },
                    children: qn({
                        number: e
                    })
                });
            },
            size: 18
        }),
        g0({
            name: "tags",
            header () {
                return x.jsx(re, {
                    label: "Resource tags (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx($z, {
                    tags: t
                });
            },
            size: 32
        })
    ], qH = ({ group: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Resource"
            ],
            [
                "Resource_Tag"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: ISe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create resource (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create resource (modal)"
                            }),
                            icon: ii,
                            children: ({ close: i })=>x.jsx(Zj, {
                                    group: t,
                                    mutation: dn({
                                        async mutationFn ({ image: s, tagIds: o = [], ...a }) {
                                            return At.transaction().execute(async (l)=>{
                                                const c = await l.insertInto("Resource").values({
                                                    id: tr(),
                                                    ...a,
                                                    image: s ? await _y(s) : null
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return o.length && await l.insertInto("Resource_Tag").values(o.map((u)=>({
                                                        id: tr(),
                                                        resourceId: c.id,
                                                        tagId: u
                                                    }))).execute(), c;
                                            });
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit resource (modal)"
                                }),
                                icon: ii,
                                children: ({ close: s })=>x.jsx(Zj, {
                                        defaultValues: {
                                            ...i,
                                            tagIds: i.tags.map(({ id: o })=>o)
                                        },
                                        mutation: dn({
                                            async mutationFn ({ image: o, tagIds: a, ...l }) {
                                                return fr.promise(At.transaction().execute(async (c)=>{
                                                    const u = await c.updateTable("Resource").set({
                                                        ...l,
                                                        image: o ? await _y(o) : null
                                                    }).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow();
                                                    return await c.deleteFrom("Resource_Tag").where("resourceId", "=", u.id).execute(), a?.length && await c.insertInto("Resource_Tag").values(a.map((f)=>({
                                                            id: tr(),
                                                            resourceId: u.id,
                                                            tagId: f
                                                        }))).execute(), u;
                                                }), mo("Update resource"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete resource (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Resource").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Resource delete (content)"
                                    }),
                                    textToast: "Resource delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, nE = Bt("/$locale/apps/derivean/root/resource/list")({
        validateSearch: Zr(Mi(WH)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Resource",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((i)=>Hr({
                            select: i.selectFrom("Resource as r").select([
                                "r.id",
                                "r.name",
                                "r.weight",
                                (s)=>s.selectFrom("Tag as t").select((o)=>xi`json_group_array(json_object(
                                            'id', ${o.ref("t.id")},
                                            'code', ${o.ref("t.code")},
                                            'group', ${o.ref("t.group")},
                                            'sort', ${o.ref("t.sort")},
                                            'label', ${o.ref("t.label")}
                                        ))`.as("tags")).where("t.id", "in", s.selectFrom("Resource_Tag as rt").select("rt.tagId").whereRef("rt.resourceId", "=", "r.id")).as("tags"),
                                (s)=>s.selectFrom("Blueprint_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countRequirement"),
                                (s)=>s.selectFrom("Blueprint_Production").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProduction"),
                                (s)=>s.selectFrom("Blueprint_Production_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProductionRequirement")
                            ]).orderBy("r.name", "asc"),
                            query ({ select: s, where: o }) {
                                let a = s;
                                if (o?.fulltext) {
                                    const l = `%${o.fulltext}%`.toLowerCase();
                                    a = a.where((c)=>c.or([
                                            c("r.id", "like", l),
                                            c("r.name", "like", l),
                                            c("r.id", "in", c.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((u)=>u.or([
                                                    u("t.code", "like", l),
                                                    u("t.label", "like", l),
                                                    u("t.group", "like", l)
                                                ])))
                                        ]));
                                }
                                return a;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                weight: su(),
                                countRequirement: Y.number().nonnegative(),
                                countProduction: Y.number().nonnegative(),
                                countProductionRequirement: Y.number().nonnegative(),
                                tags: Ws(Zw.entity)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = nE.useLoaderData(), { filter: n, cursor: r, selection: i } = nE.useSearch(), s = nE.useNavigate(), { tva: o } = qr({
                from: "__root__"
            }), a = o().slots;
            return x.jsx("div", {
                className: a.base(),
                children: x.jsx(qH, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of items"
                        }),
                        ..._i(s)
                    }
                })
            });
        }
    }), ASe = ({ entity: t, ...e })=>{
        const { locale: n } = sn({
            from: "/$locale"
        });
        return x.jsx(Bm, {
            ...e,
            children: x.jsx(Or, {
                icon: ii,
                to: "/$locale/apps/derivean/root/resource/$id/view",
                params: {
                    locale: n,
                    id: t.id
                },
                children: x.jsx(re, {
                    label: "View detail (menu)"
                })
            })
        });
    }, NSe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsx(By, {
            title: ({ entity: n })=>x.jsx(Uy, {
                    icon: ii,
                    title: n.name
                }),
            actions: ()=>x.jsx(x.Fragment, {
                    children: x.jsx(It, {
                        icon: qT,
                        to: "/$locale/apps/derivean/root/resource/list",
                        params: {
                            locale: e
                        },
                        children: x.jsx(re, {
                            label: "Resource list (label)"
                        })
                    })
                }),
            ...t
        });
    }, HH = Bt("/$locale/apps/derivean/root/resource/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Resource",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await Mc({
                                select: r.selectFrom("Resource as r").select([
                                    "r.id",
                                    "r.name",
                                    "r.image"
                                ]).where("r.id", "=", n),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    image: Y.string().nullish()
                                })
                            })
                        }));
                }
            });
        },
        component: ()=>{
            const { tva: t } = qr({
                from: "__root__"
            }), { entity: e } = HH.useLoaderData(), n = t().slots;
            return x.jsxs("div", {
                className: n.base(),
                children: [
                    x.jsx(NSe, {
                        entity: e
                    }),
                    x.jsx(ASe, {
                        entity: e
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), rE = Bt("/$locale/apps/derivean/root/region/list")({
        validateSearch: Zr(Mi(Ak)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Region",
                    "list-count",
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((i)=>Hr({
                            select: i.selectFrom("Region as r").select([
                                "r.id",
                                "r.name",
                                "r.probability",
                                "r.limit"
                            ]).orderBy("r.name", "asc"),
                            query ({ select: s, where: o }) {
                                let a = s;
                                if (o?.fulltext) {
                                    const l = `%${o.fulltext}%`.toLowerCase();
                                    a = a.where((c)=>c.or([
                                            c("r.id", "like", l),
                                            c("r.name", "like", l)
                                        ]));
                                }
                                return a;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                probability: Y.number().int().min(0),
                                limit: Y.number().int().min(0)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component: ()=>{
            const { data: t, count: e } = rE.useLoaderData(), { filter: n, cursor: r, selection: i } = rE.useSearch(), s = rE.useNavigate(), { tva: o } = qr({
                from: "__root__"
            }), a = o().slots;
            return x.jsx("div", {
                className: a.base(),
                children: x.jsx(hW, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of items"
                        }),
                        ..._i(s)
                    }
                })
            });
        }
    }), PSe = Bt("/$locale/apps/derivean/root/region/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Region",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await Mc({
                                select: r.selectFrom("Region as r").select([
                                    "r.id",
                                    "r.name",
                                    "r.image"
                                ]).where("r.id", "=", n),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    image: Y.string().nullish()
                                })
                            })
                        }));
                }
            });
        },
        component: ()=>{
            const { tva: t } = qr({
                from: "__root__"
            }), e = t().slots;
            return x.jsx("div", {
                className: e.base(),
                children: x.jsx(Al, {})
            });
        }
    }), _O = "icon-[gala--clock]", uh = "icon-[mingcute--inventory-line]", kSe = Nn({
        slot: {
            item: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "bg-sky-100",
                "border",
                "rounded-sm",
                "border-sky-300",
                "py-1",
                "px-2",
                "bg-sky-100",
                "border-sky-300",
                "text-sky-500"
            ]
        },
        variant: {
            missing: {
                true: []
            }
        },
        match: [
            {
                if: {
                    missing: !0
                },
                then: {
                    item: [
                        "bg-amber-100",
                        "border-amber-300"
                    ]
                }
            }
        ],
        defaults: {
            missing: !1
        }
    }), $H = ({ dependencies: t, variant: e, tva: n = kSe, css: r, ...i })=>{
        const s = n({
            ...e,
            css: r
        }).slots;
        return x.jsx(wh, {
            items: t,
            render: ({ entity: o })=>x.jsx("div", {
                    className: s.item(),
                    children: x.jsx("div", {
                        children: o.name
                    })
                }),
            ...i
        });
    };
    var bS = {}, Jj;
    function OSe() {
        if (Jj) return bS;
        Jj = 1;
        function t(r, i, s, o) {
            var a = new Set;
            return function(l) {
                if (!a.has(l)) {
                    var c = new Set, u = [], f = [];
                    for(f.push({
                        node: l,
                        processed: !1
                    }); f.length > 0;){
                        var h = f[f.length - 1], m = h.processed, v = h.node;
                        if (m) f.pop(), u.pop(), c.delete(v), a.add(v), (!i || r.get(v).length === 0) && s.push(v);
                        else {
                            if (a.has(v)) {
                                f.pop();
                                continue;
                            } else if (c.has(v)) {
                                if (o) {
                                    f.pop();
                                    continue;
                                }
                                throw u.push(v), new n(u);
                            }
                            c.add(v), u.push(v);
                            for(var _ = r.get(v), w = _.length - 1; w >= 0; w--)f.push({
                                node: _[w],
                                processed: !1
                            });
                            h.processed = !0;
                        }
                    }
                }
            };
        }
        var e = bS.DepGraph = function(i) {
            this.nodes = new Map, this.outgoingEdges = new Map, this.incomingEdges = new Map, this.circular = i && !!i.circular;
        };
        e.prototype = {
            size: function() {
                return this.nodes.size;
            },
            addNode: function(r, i) {
                this.hasNode(r) || (arguments.length === 2 ? this.nodes.set(r, i) : this.nodes.set(r, r), this.outgoingEdges.set(r, []), this.incomingEdges.set(r, []));
            },
            removeNode: function(r) {
                this.hasNode(r) && (this.nodes.delete(r), this.outgoingEdges.delete(r), this.incomingEdges.delete(r), [
                    this.incomingEdges,
                    this.outgoingEdges
                ].forEach(function(i) {
                    i.forEach(function(s) {
                        var o = s.indexOf(r);
                        o >= 0 && s.splice(o, 1);
                    });
                }));
            },
            hasNode: function(r) {
                return this.nodes.has(r);
            },
            getNodeData: function(r) {
                if (this.hasNode(r)) return this.nodes.get(r);
                throw new Error("Node does not exist: " + r);
            },
            setNodeData: function(r, i) {
                if (this.hasNode(r)) this.nodes.set(r, i);
                else throw new Error("Node does not exist: " + r);
            },
            addDependency: function(r, i) {
                if (!this.hasNode(r)) throw new Error("Node does not exist: " + r);
                if (!this.hasNode(i)) throw new Error("Node does not exist: " + i);
                return this.outgoingEdges.get(r).indexOf(i) === -1 && this.outgoingEdges.get(r).push(i), this.incomingEdges.get(i).indexOf(r) === -1 && this.incomingEdges.get(i).push(r), !0;
            },
            removeDependency: function(r, i) {
                var s;
                this.hasNode(r) && (s = this.outgoingEdges.get(r).indexOf(i), s >= 0 && this.outgoingEdges.get(r).splice(s, 1)), this.hasNode(i) && (s = this.incomingEdges.get(i).indexOf(r), s >= 0 && this.incomingEdges.get(i).splice(s, 1));
            },
            clone: function() {
                var r = this, i = new e;
                return r.nodes.forEach(function(s, o) {
                    i.nodes.set(o, s), i.outgoingEdges.set(o, r.outgoingEdges.get(o).slice(0)), i.incomingEdges.set(o, r.incomingEdges.get(o).slice(0));
                }), i.circular = r.circular, i;
            },
            directDependenciesOf: function(r) {
                if (this.hasNode(r)) return this.outgoingEdges.get(r).slice(0);
                throw new Error("Node does not exist: " + r);
            },
            directDependantsOf: function(r) {
                if (this.hasNode(r)) return this.incomingEdges.get(r).slice(0);
                throw new Error("Node does not exist: " + r);
            },
            dependenciesOf: function(r, i) {
                if (this.hasNode(r)) {
                    var s = [], o = t(this.outgoingEdges, i, s, this.circular);
                    o(r);
                    var a = s.indexOf(r);
                    return a >= 0 && s.splice(a, 1), s;
                } else throw new Error("Node does not exist: " + r);
            },
            dependantsOf: function(r, i) {
                if (this.hasNode(r)) {
                    var s = [], o = t(this.incomingEdges, i, s, this.circular);
                    o(r);
                    var a = s.indexOf(r);
                    return a >= 0 && s.splice(a, 1), s;
                } else throw new Error("Node does not exist: " + r);
            },
            overallOrder: function(r) {
                var i = this, s = [], o = Array.from(this.nodes.keys());
                if (o.length === 0) return s;
                if (!this.circular) {
                    var a = t(this.outgoingEdges, !1, [], this.circular);
                    o.forEach(function(c) {
                        a(c);
                    });
                }
                var l = t(this.outgoingEdges, r, s, this.circular);
                return o.filter(function(c) {
                    return i.incomingEdges.get(c).length === 0;
                }).forEach(function(c) {
                    l(c);
                }), this.circular && o.filter(function(c) {
                    return s.indexOf(c) === -1;
                }).forEach(function(c) {
                    l(c);
                }), s;
            },
            entryNodes: function() {
                var r = this;
                return Array.from(this.nodes.keys()).filter(function(i) {
                    return r.incomingEdges.get(i).length === 0;
                });
            }
        }, e.prototype.directDependentsOf = e.prototype.directDependantsOf, e.prototype.dependentsOf = e.prototype.dependantsOf;
        var n = bS.DepGraphCycleError = function(r) {
            var i = "Dependency Cycle Found: " + r.join(" -> "), s = new Error(i);
            return s.cyclePath = r, Object.setPrototypeOf(s, Object.getPrototypeOf(this)), Error.captureStackTrace && Error.captureStackTrace(s, n), s;
        };
        return n.prototype = Object.create(Error.prototype, {
            constructor: {
                value: Error,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), Object.setPrototypeOf(n, Error), bS;
    }
    var GH = OSe();
    const Jw = async ({ tx: t })=>{
        const e = new GH.DepGraph({
            circular: !1
        });
        for await (const { id: n, name: r } of await t.selectFrom("Blueprint").select([
            "id",
            "name"
        ]).execute())e.addNode(n, r);
        for await (const { blueprintId: n, dependencyId: r } of await t.selectFrom("Blueprint_Dependency").select([
            "blueprintId",
            "dependencyId"
        ]).execute())e.addDependency(n, r);
        return e;
    }, uw = async ({ tx: t })=>{
        const e = Jw({
            tx: t
        }), n = await t.selectFrom("Blueprint as bl").select([
            "bl.id"
        ]).execute();
        for await (const r of n){
            const i = (await e).dependenciesOf(r.id);
            await t.updateTable("Blueprint").set({
                sort: i.length
            }).where("id", "=", r.id).execute();
        }
    }, XH = async ({ tx: t, blueprintId: e })=>{
        await t.deleteFrom("Blueprint_Inventory").where("blueprintId", "=", e).execute();
        const n = await t.selectFrom("Blueprint_Requirement").select([
            "resourceId",
            "amount"
        ]).where("blueprintId", "=", e).execute();
        for await (const { resourceId: i, amount: s } of n)await t.insertInto("Blueprint_Inventory").values({
            id: tr(),
            blueprintId: e,
            inventoryId: (await t.insertInto("Inventory").values({
                id: tr(),
                resourceId: i,
                amount: 0,
                limit: s,
                type: "construction"
            }).returning("id").executeTakeFirstOrThrow()).id
        }).execute();
        const r = await t.selectFrom(t.selectFrom("Blueprint_Production").select([
            "resourceId",
            "amount"
        ]).where("blueprintId", "=", e).union(t.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Blueprint_Production as bp", "bp.id", "bpr.blueprintProductionId").select([
            "bpr.resourceId",
            "bpr.amount"
        ]).where("bp.blueprintId", "=", e)).union(t.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Blueprint_Production as bp", "bp.id", "bpr.blueprintProductionId").select([
            "bpr.resourceId",
            "bpr.amount"
        ]).where("bp.blueprintId", "=", e)).as("resources")).select([
            "resourceId",
            (i)=>i.fn.max("amount").as("amount")
        ]).groupBy("resourceId").orderBy("amount", "desc").execute();
        for await (const { resourceId: i, amount: s } of r)await t.insertInto("Blueprint_Inventory").values({
            id: tr(),
            blueprintId: e,
            inventoryId: (await t.insertInto("Inventory").values({
                id: tr(),
                resourceId: i,
                amount: 0,
                limit: s * 5,
                type: "storage"
            }).returning("id").executeTakeFirstOrThrow()).id
        }).execute();
    }, DSe = Nn({
        slot: {
            item: [
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "bg-sky-100",
                "border",
                "rounded-sm",
                "border-sky-300",
                "py-1",
                "px-2"
            ]
        },
        variant: {
            passive: {
                true: []
            },
            missing: {
                true: []
            }
        },
        match: [
            {
                if: {
                    passive: !0
                },
                then: {
                    item: [
                        "bg-purple-100",
                        "border-purple-300",
                        "text-purple-500"
                    ]
                }
            },
            {
                if: {
                    passive: !1
                },
                then: {
                    item: [
                        "bg-sky-100",
                        "border-sky-300",
                        "text-sky-500"
                    ]
                }
            },
            {
                if: {
                    missing: !0
                },
                then: {
                    item: [
                        "bg-amber-100",
                        "border-amber-300"
                    ]
                }
            }
        ],
        defaults: {
            passive: !1,
            missing: !1
        }
    }), H2 = ({ requirements: t, diff: e, variant: n, tva: r = DSe, css: i, ...s })=>{
        const o = r({
            ...n,
            css: i
        }).slots;
        return x.jsx(wh, {
            items: t,
            render: ({ entity: a })=>{
                const l = e?.find((u)=>u.resourceId === a.resourceId), c = l?.amount ? l.amount - a.amount : -a.amount;
                return x.jsxs("div", {
                    className: o.item({
                        css: !e || c >= 0 ? [] : [
                            "text-red-700",
                            "bg-red-100",
                            "border-red-300"
                        ],
                        passive: a.passive
                    }),
                    children: [
                        x.jsx("div", {
                            children: a.name
                        }),
                        x.jsxs("div", {
                            className: "text-md font-bold text-slate-500",
                            children: [
                                "x",
                                qn({
                                    number: a.amount
                                })
                            ]
                        }),
                        e ? c >= 0 ? x.jsx(_n, {
                            icon: "icon-[pajamas--check-sm]",
                            css: {
                                base: [
                                    "text-emerald-600"
                                ]
                            }
                        }) : x.jsxs("div", {
                            className: "flex flex-row gao-2 items-center text-sm text-red-500",
                            children: [
                                x.jsx(_n, {
                                    icon: "icon-[charm--cross]",
                                    css: {
                                        base: [
                                            "text-red-500"
                                        ]
                                    }
                                }),
                                "(",
                                qn({
                                    number: c
                                }),
                                ")"
                            ]
                        }) : null
                    ]
                });
            },
            ...s
        });
    }, fx = Ri(), LSe = [
        fx({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Building name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        x.jsx(It, {
                            icon: x.jsx("div", {
                                className: mn([
                                    "border-2",
                                    "border-purple-400",
                                    "rounded-md",
                                    "w-[64px]",
                                    "h-[64px]",
                                    "bg-contain",
                                    `bg-${t.id}`
                                ])
                            }),
                            to: "/$locale/apps/derivean/root/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: t.id
                            },
                            children: e
                        }),
                        x.jsx(It, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/root/editor",
                            params: {
                                locale: n
                            },
                            search: {
                                zoomTo: t.id
                            }
                        })
                    ]
                });
            },
            size: 18
        }),
        fx({
            name: "dependencies",
            header () {
                return x.jsx(re, {
                    label: "Blueprint dependencies (label)"
                });
            },
            render ({ value: t }) {
                return t.length > 0 ? x.jsxs("div", {
                    className: "flex flex-col flex-wrap gap-2 w-full",
                    children: [
                        x.jsx($H, {
                            textTitle: x.jsx(re, {
                                label: "Blueprint dependencies (title)"
                            }),
                            dependencies: t
                        }),
                        x.jsx("div", {
                            className: "border-b border-slate-200"
                        })
                    ]
                }) : x.jsx(re, {
                    label: "No dependencies (label)"
                });
            },
            size: 32
        }),
        fx({
            name: "requirements",
            header () {
                return x.jsx(re, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(H2, {
                    textTitle: x.jsx(re, {
                        label: "Blueprint requirements (title)"
                    }),
                    textEmpty: x.jsx(re, {
                        label: "No requirements (label)"
                    }),
                    requirements: t
                });
            },
            size: 32
        }),
        fx({
            name: "cycles",
            header () {
                return x.jsx(re, {
                    label: "Construction cycles (label)"
                });
            },
            render ({ value: t }) {
                return x.jsxs("div", {
                    className: "flex flex-row items-center gap-2",
                    children: [
                        x.jsx(_n, {
                            icon: _O
                        }),
                        qn({
                            number: t
                        })
                    ]
                });
            },
            size: 8
        }),
        fx({
            name: "limit",
            header () {
                return x.jsx(re, {
                    label: "Building limit (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 8
        })
    ], KH = ({ dependencies: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Inventory"
            ],
            [
                "Blueprint"
            ],
            [
                "Inventory"
            ]
        ]), i = dn({
            async mutationFn () {
                return At.transaction().execute(async (s)=>{
                    const o = await s.selectFrom("Blueprint").select([
                        "id"
                    ]).execute();
                    for await (const { id: a } of o)await XH({
                        tx: s,
                        blueprintId: a
                    });
                });
            },
            async onSuccess () {
                await r();
            },
            onError (s) {
                console.error(s);
            }
        });
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: LSe,
                context: {
                    dependencies: t
                }
            }),
            action: {
                table () {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(BP, {
                                icon: uh,
                                onClick: ()=>{
                                    fr.promise(i.mutateAsync(), mo("Fill inventories"));
                                },
                                children: x.jsx(re, {
                                    label: "Fill inventories (label)"
                                })
                            }),
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Create blueprint (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Create blueprint (modal)"
                                }),
                                icon: hr,
                                children: ({ close: s })=>x.jsx(MM, {
                                        mutation: dn({
                                            async mutationFn ({ image: o, regionIds: a, ...l }) {
                                                At.transaction().execute(async (c)=>{
                                                    const u = await c.insertInto("Blueprint").values({
                                                        id: tr(),
                                                        ...l,
                                                        image: o ? await _y(o) : null
                                                    }).returningAll().executeTakeFirstOrThrow();
                                                    return a?.length && await c.insertInto("Blueprint_Region").values(a.map((f)=>({
                                                            id: tr(),
                                                            blueprintId: u.id,
                                                            regionId: f
                                                        }))).execute(), await uw({
                                                        tx: c
                                                    }), u;
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            })
                        ]
                    });
                },
                row ({ data: s }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit blueprint (modal)"
                                }),
                                icon: hr,
                                children: ({ close: o })=>x.jsx(MM, {
                                        defaultValues: {
                                            ...s,
                                            regionIds: s.regions.map((a)=>a.id)
                                        },
                                        mutation: dn({
                                            async mutationFn ({ image: a, regionIds: l, ...c }) {
                                                return At.transaction().execute(async (u)=>{
                                                    const f = await u.updateTable("Blueprint").set({
                                                        ...c,
                                                        image: a ? await _y(a) : null
                                                    }).where("id", "=", s.id).returningAll().executeTakeFirstOrThrow();
                                                    return await u.deleteFrom("Blueprint_Region").where("blueprintId", "=", f.id).execute(), l?.length && await u.insertInto("Blueprint_Region").values(l.map((h)=>({
                                                            id: tr(),
                                                            blueprintId: f.id,
                                                            regionId: h
                                                        }))).execute(), await uw({
                                                        tx: u
                                                    }), f;
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), o();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete blueprint (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (o)=>o.deleteFrom("Blueprint").where("id", "=", s.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete blueprint (content)"
                                    }),
                                    textToast: "Delete blueprint",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Nh = Aae({
        shape: Y.object({
            dependencyId: Y.string().min(1)
        }),
        filter: yo.merge(Y.object({
            blueprintId: Y.string().optional(),
            dependencyId: Y.string().optional()
        }))
    }), $y = Lae({
        shape: Y.object({
            resourceId: Y.string().min(1),
            amount: kd(),
            passive: Y.boolean()
        }),
        filter: yo.merge(Y.object({
            blueprintId: Y.string().optional(),
            resourceId: Y.string().optional()
        }))
    }), iE = Bt("/$locale/apps/derivean/root/blueprint/list")({
        validateSearch: Zr(Mi(Nk)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r } }) {
            return {
                data: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "list-count",
                        {
                            filter: n,
                            cursor: r
                        }
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>Hr({
                                select: s.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.image",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    "bl.limit",
                                    (o)=>o.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((a)=>sh.jsonGroupArray({
                                                id: a.ref("r.id"),
                                                name: a.ref("r.name")
                                            }).as("regions")).whereRef("br.blueprintId", "=", "bl.id").as("regions"),
                                    (o)=>o.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("br.id")},
                                                'amount', ${a.ref("br.amount")},
                                                'passive', ${a.ref("br.passive")},
                                                'resourceId', ${a.ref("br.resourceId")},
                                                'blueprintId', ${a.ref("br.blueprintId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("br.blueprintId", "=", "bl.id").as("requirements"),
                                    (o)=>o.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl2", "bl2.id", "bd.dependencyId").select((a)=>xi`json_group_array(json_object(
                                                        'id', ${a.ref("bd.id")},
                                                        'dependencyId', ${a.ref("bd.dependencyId")},
                                                        'blueprintId', ${a.ref("bd.blueprintId")},
                                                        'name', ${a.ref("bl2.name")}
                                                    ))`.as("requirements")).whereRef("bd.blueprintId", "=", "bl.id").orderBy("bl2.name", "asc").as("dependencies")
                                ]).orderBy("bl.sort", "asc").orderBy("bl.name", "asc"),
                                query ({ select: o, where: a }) {
                                    let l = o;
                                    if (a?.id && (l = l.where("bl.id", "=", a.id)), a?.fulltext) {
                                        const c = `%${a.fulltext}%`.toLowerCase();
                                        l = l.where((u)=>u.or([
                                                u("bl.id", "like", c),
                                                u("bl.name", "like", c)
                                            ]));
                                    }
                                    return l;
                                },
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    image: Y.string().nullish(),
                                    cycles: Y.number().nonnegative(),
                                    sort: Y.number().nonnegative(),
                                    limit: Y.number().nonnegative(),
                                    regions: Ws(Y.object({
                                        id: Y.string().min(1),
                                        name: Y.string().min(1)
                                    })),
                                    requirements: Ws($y.entity.merge(Y.object({
                                        name: Y.string().min(1)
                                    }))),
                                    dependencies: Ws(Nh.entity.merge(Y.object({
                                        name: Y.string().min(1)
                                    })))
                                }),
                                filter: n,
                                cursor: r
                            }));
                    }
                }),
                dependencies: await e.transaction().execute(async (s)=>Jw({
                        tx: s
                    }))
            };
        },
        component () {
            const { data: { data: t, count: e }, dependencies: n } = iE.useLoaderData(), { filter: r, cursor: i, selection: s } = iE.useSearch(), o = iE.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(KH, {
                    dependencies: n,
                    table: {
                        data: t,
                        filter: {
                            value: r,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: s,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: r?.fulltext,
                        set: Ei(r?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: i,
                        textTotal: x.jsx(re, {
                            label: "Number of blueprints"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), FSe = ({ entity: t, ...e })=>{
        const { locale: n } = sn({
            from: "/$locale"
        });
        return x.jsxs(Bm, {
            ...e,
            children: [
                x.jsx(Or, {
                    icon: hr,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "View detail (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Qa,
                    to: "/$locale/apps/derivean/root/blueprint/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Blueprint dependencies (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: ii,
                    to: "/$locale/apps/derivean/root/blueprint/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Required resources (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Rl,
                    to: "/$locale/apps/derivean/root/blueprint/$id/production",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Resource production (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: uh,
                    to: "/$locale/apps/derivean/root/blueprint/$id/inventory",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Blueprint inventory (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: "icon-[solar--bomb-minimalistic-outline]",
                    to: "/$locale/apps/derivean/root/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Blueprint conflicts (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Ez,
                    to: "/$locale/apps/derivean/root/blueprint/$id/edit",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Edit (menu)"
                    })
                })
            ]
        });
    }, jSe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsx(By, {
            title: ({ entity: n })=>x.jsx(Uy, {
                    icon: hr,
                    title: n.name
                }),
            actions: ({ entity: n })=>x.jsxs(x.Fragment, {
                    children: [
                        x.jsx(It, {
                            icon: qT,
                            to: "/$locale/apps/derivean/root/blueprint/list",
                            params: {
                                locale: e
                            },
                            children: x.jsx(re, {
                                label: "Blueprint list (label)"
                            })
                        }),
                        x.jsx(It, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/root/editor",
                            params: {
                                locale: e
                            },
                            search: {
                                zoomTo: n.id
                            },
                            children: x.jsx(re, {
                                label: "Editor (label)"
                            })
                        })
                    ]
                }),
            ...t
        });
    }, YH = Bt("/$locale/apps/derivean/root/blueprint/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return {
                entity: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "fetch",
                        n
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>Mc({
                                select: i.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    (s)=>s.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((o)=>sh.jsonGroupArray({
                                                id: o.ref("r.id"),
                                                name: o.ref("r.name")
                                            }).as("regions")).whereRef("br.blueprintId", "=", "bl.id").as("regions"),
                                    (s)=>s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((o)=>sh.jsonGroupArray({
                                                id: o.ref("br.id"),
                                                amount: o.ref("br.amount"),
                                                passive: o.ref("br.passive"),
                                                resourceId: o.ref("br.resourceId"),
                                                blueprintId: o.ref("br.blueprintId"),
                                                name: o.ref("r.name")
                                            }).as("requirements")).whereRef("br.blueprintId", "=", "bl.id").as("requirements"),
                                    (s)=>s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl2", "bl2.id", "bd.dependencyId").select((o)=>sh.jsonGroupArray({
                                                id: o.ref("bd.id"),
                                                dependencyId: o.ref("bd.dependencyId"),
                                                blueprintId: o.ref("bd.blueprintId"),
                                                name: o.ref("bl2.name")
                                            }).as("requirements")).whereRef("bd.blueprintId", "=", "bl.id").orderBy("bl2.name", "asc").as("dependencies")
                                ]).where("bl.id", "=", n).orderBy("bl.name", "asc"),
                                query ({ select: s, where: o }) {
                                    let a = s;
                                    if (o?.fulltext) {
                                        const l = `%${o.fulltext}%`.toLowerCase();
                                        a = a.where((c)=>c.or([
                                                c("bl.id", "like", l),
                                                c("bl.name", "like", l),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select("br.blueprintId").where((u)=>u.or([
                                                        u("r.name", "like", l)
                                                    ]))),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.dependencyId").select("bd.blueprintId").where((u)=>u.or([
                                                        u("b.name", "like", l)
                                                    ])))
                                            ]));
                                    }
                                    return a;
                                },
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    cycles: Y.number().nonnegative(),
                                    sort: Y.number().nonnegative(),
                                    regions: Ws(Y.object({
                                        id: Y.string().min(1),
                                        name: Y.string().min(1)
                                    })),
                                    requirements: Ws($y.entity.merge(Y.object({
                                        name: Y.string().min(1)
                                    }))),
                                    dependencies: Ws(Nh.entity.merge(Y.object({
                                        name: Y.string().min(1)
                                    })))
                                })
                            }));
                    }
                }),
                graph: await e.transaction().execute(async (i)=>Jw({
                        tx: i
                    }))
            };
        },
        component () {
            const { tva: t } = qr({
                from: "__root__"
            }), { entity: e } = YH.useLoaderData(), n = t().slots;
            return x.jsxs("div", {
                className: n.base(),
                children: [
                    x.jsx(jSe, {
                        entity: e
                    }),
                    x.jsx(FSe, {
                        entity: e
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), BSe = Bt("/$locale/apps/derivean/map/$mapId/view")({}), Qj = Ri(), USe = [
        Qj({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Building name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        x.jsx(It, {
                            icon: "icon-[ph--graph-light]",
                            to: "/$locale/apps/derivean/game",
                            params: {
                                locale: n
                            },
                            search: {
                                blueprintId: t.id
                            }
                        }),
                        x.jsx(It, {
                            icon: x.jsx("div", {
                                className: mn([
                                    "border-2",
                                    "border-purple-400",
                                    "rounded-md",
                                    "w-[64px]",
                                    "h-[64px]",
                                    "bg-contain",
                                    `bg-${t.id}`
                                ])
                            }),
                            to: "/$locale/apps/derivean/game/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: t.id
                            },
                            children: e
                        })
                    ]
                });
            },
            size: 18
        }),
        Qj({
            name: "cycles",
            header () {
                return x.jsx(re, {
                    label: "Construction cycles (label)"
                });
            },
            render ({ value: t }) {
                return x.jsxs("div", {
                    className: "flex flex-row items-center gap-2",
                    children: [
                        x.jsx(_n, {
                            icon: _O
                        }),
                        qn({
                            number: t
                        })
                    ]
                });
            },
            size: 8
        })
    ], zSe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: USe
            }),
            ...e
        }), sE = Bt("/$locale/apps/derivean/game/blueprint/list")({
        validateSearch: Zr(Mi(Nk)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e, session: n }, deps: { filter: r, cursor: i } }) {
            const s = await n();
            return {
                data: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "list-count",
                        {
                            filter: r,
                            cursor: i
                        }
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (a)=>Hr({
                                select: a.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.cycles"
                                ]).where("bl.id", "in", a.selectFrom("Building as bg").select("bg.blueprintId").where("bg.userId", "=", s.id)).orderBy("bl.sort", "asc").orderBy("bl.name", "asc"),
                                query ({ select: l, where: c }) {
                                    let u = l;
                                    if (c?.id && (u = u.where("bl.id", "=", c.id)), c?.fulltext) {
                                        const f = `%${c.fulltext}%`.toLowerCase();
                                        u = u.where((h)=>h.or([
                                                h("bl.id", "like", f),
                                                h("bl.name", "like", f)
                                            ]));
                                    }
                                    return u;
                                },
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    cycles: Y.number().nonnegative()
                                }),
                                filter: r,
                                cursor: i
                            }));
                    }
                })
            };
        },
        component () {
            const { data: { data: t, count: e } } = sE.useLoaderData(), { filter: n, cursor: r } = sE.useSearch(), i = sE.useNavigate(), { tva: s } = qr({
                from: "__root__"
            }), o = s().slots;
            return x.jsx("div", {
                className: o.base(),
                children: x.jsx(zSe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of blueprints"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), VSe = ({ entity: t, ...e })=>{
        const { locale: n } = sn({
            from: "/$locale"
        });
        return x.jsxs(Bm, {
            ...e,
            children: [
                x.jsx(Or, {
                    icon: hr,
                    to: "/$locale/apps/derivean/game/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "View detail (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Qa,
                    to: "/$locale/apps/derivean/game/blueprint/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Blueprint dependencies (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: ii,
                    to: "/$locale/apps/derivean/game/blueprint/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Required resources (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: Rl,
                    to: "/$locale/apps/derivean/game/blueprint/$id/production",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Resource production (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: "icon-[solar--bomb-minimalistic-outline]",
                    to: "/$locale/apps/derivean/game/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Blueprint conflicts (menu)"
                    })
                })
            ]
        });
    }, WSe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsx(By, {
            title: ({ entity: n })=>x.jsx(Uy, {
                    icon: hr,
                    title: n.name
                }),
            actions: ()=>x.jsx(x.Fragment, {
                    children: x.jsx(It, {
                        icon: qT,
                        to: "/$locale/apps/derivean/game/blueprint/list",
                        params: {
                            locale: e
                        },
                        children: x.jsx(re, {
                            label: "Blueprint list (label)"
                        })
                    })
                }),
            ...t
        });
    }, ZH = Bt("/$locale/apps/derivean/game/blueprint/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return {
                entity: await t.ensureQueryData({
                    queryKey: [
                        "Blueprint",
                        "fetch",
                        n
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>Mc({
                                select: i.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.cycles"
                                ]).where("bl.id", "=", n).orderBy("bl.name", "asc"),
                                query ({ select: s, where: o }) {
                                    let a = s;
                                    if (o?.fulltext) {
                                        const l = `%${o.fulltext}%`.toLowerCase();
                                        a = a.where((c)=>c.or([
                                                c("bl.id", "like", l),
                                                c("bl.name", "like", l),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select("br.blueprintId").where((u)=>u.or([
                                                        u("r.name", "like", l)
                                                    ]))),
                                                c("bl.id", "in", c.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.dependencyId").select("bd.blueprintId").where((u)=>u.or([
                                                        u("b.name", "like", l)
                                                    ])))
                                            ]));
                                    }
                                    return a;
                                },
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    cycles: Y.number().nonnegative()
                                })
                            }));
                    }
                }),
                graph: await e.transaction().execute(async (i)=>Jw({
                        tx: i
                    }))
            };
        },
        component () {
            const { tva: t } = qr({
                from: "__root__"
            }), { entity: e } = ZH.useLoaderData(), n = t().slots;
            return x.jsxs("div", {
                className: n.base(),
                children: [
                    x.jsx(WSe, {
                        entity: e
                    }),
                    x.jsx(VSe, {
                        entity: e
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), qSe = Bt("/$locale/apps/derivean/root/user/$id/view")({
        component () {
            return "yep";
        }
    }), HSe = Bt("/$locale/apps/derivean/root/resource/$id/view")({
        component () {
            const { entity: { image: t } } = es({
                from: "/$locale/apps/derivean/root/resource/$id"
            });
            return x.jsx(x.Fragment, {
                children: x.jsx("img", {
                    src: t || void 0
                })
            });
        }
    }), $Se = Bt("/$locale/apps/derivean/root/region/$id/view")({
        component () {
            const { entity: { image: t } } = es({
                from: "/$locale/apps/derivean/root/region/$id"
            });
            return x.jsx(x.Fragment, {
                children: t ? x.jsx("img", {
                    src: t || void 0
                }) : "no image"
            });
        }
    }), SO = "icon-[carbon--document-requirements]", GSe = ({ entity: t, ...e })=>{
        const { locale: n } = sn({
            from: "/$locale"
        });
        return x.jsxs(Bm, {
            ...e,
            children: [
                x.jsx(Or, {
                    icon: SO,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Production requirements (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: ii,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/resources",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Production resource requirements (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: hr,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Production resource dependencies (menu)"
                    })
                })
            ]
        });
    }, XSe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsx(By, {
            title: ({ entity: n })=>x.jsx(Uy, {
                    icon: Rl,
                    title: n.resource,
                    subtitle: n.blueprint
                }),
            actions: ({ entity: n })=>x.jsx(x.Fragment, {
                    children: x.jsx(It, {
                        icon: hr,
                        to: "/$locale/apps/derivean/root/blueprint/$id/production",
                        params: {
                            locale: e,
                            id: n.blueprintId
                        },
                        children: x.jsx(re, {
                            label: "Building base detail (label)"
                        })
                    })
                }),
            ...t
        });
    }, JH = Bt("/$locale/apps/derivean/root/blueprint/production/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await Mc({
                                select: r.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "bp.cycles",
                                    "r.name as resource",
                                    "bp.blueprintId",
                                    "bl.name as blueprint"
                                ]).where("bp.id", "=", n),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    resource: Y.string().min(1),
                                    blueprint: Y.string().min(1),
                                    blueprintId: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    cycles: Y.number().int().nonnegative()
                                })
                            })
                        }));
                }
            });
        },
        component () {
            const { entity: t } = JH.useLoaderData(), { tva: e } = qr({
                from: "__root__"
            }), n = e().slots;
            return x.jsxs("div", {
                className: n.base(),
                children: [
                    x.jsx(XSe, {
                        entity: t
                    }),
                    x.jsx(GSe, {
                        entity: t
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), KSe = ({ graph: t, blueprintId: e, mode: n = "dependencies", reverse: r = !1 })=>{
        try {
            const i = ((s)=>r ? s.reverse() : s)(n === "dependants" ? t.dependantsOf(e) : t.dependenciesOf(e));
            return x.jsxs("div", {
                className: mn([
                    "flex",
                    "flex-row",
                    "flex-wrap",
                    "gap-2",
                    "items-center"
                ]),
                children: [
                    i.length > 0 ? x.jsx(_n, {
                        css: {
                            base: [
                                "text-emerald-500"
                            ]
                        },
                        icon: "icon-[charm--circle-tick]"
                    }) : x.jsx(_n, {
                        css: {
                            base: [
                                "text-amber-500"
                            ]
                        },
                        icon: "icon-[fe--question]"
                    }),
                    i.length > 0 ? i.map((s)=>x.jsx(uo, {
                            css: {
                                base: [
                                    "bg-emerald-200",
                                    "text-emerald-700",
                                    "border-emerald-500"
                                ]
                            },
                            children: t.getNodeData(s)
                        }, tr())) : x.jsx(re, {
                        css: {
                            base: [
                                "text-amber-500",
                                "font-bold"
                            ]
                        },
                        label: "No dependents (label)"
                    })
                ]
            });
        } catch (i) {
            return i instanceof GH.DepGraphCycleError ? x.jsxs("div", {
                className: mn([
                    "flex",
                    "flex-row",
                    "gap-2",
                    "items-center"
                ]),
                children: [
                    x.jsx(_n, {
                        css: {
                            base: [
                                "text-red-500"
                            ]
                        },
                        icon: "icon-[charm--circle-cross]"
                    }),
                    i.cyclePath.map((s)=>x.jsx(uo, {
                            css: {
                                base: [
                                    "bg-red-200",
                                    "text-red-700",
                                    "border-red-500"
                                ]
                            },
                            children: t.getNodeData(s)
                        }, tr()))
                ]
            }) : "kaboom";
        }
    }, YSe = ({ dependencies: t, ...e })=>x.jsx(mz, {
            items: [
                {
                    id: "name",
                    label: x.jsx(re, {
                        label: "Building name (label)"
                    }),
                    render ({ entity: n }) {
                        return n.name;
                    }
                },
                {
                    id: "cycles",
                    label: x.jsx(re, {
                        label: "Construction cycles (label)"
                    }),
                    render ({ entity: n }) {
                        return qn({
                            number: n.cycles
                        });
                    }
                },
                {
                    id: "regions",
                    label: x.jsx(re, {
                        label: "Regions (label)"
                    }),
                    render ({ entity: n }) {
                        return x.jsx(wh, {
                            items: n.regions,
                            css: {
                                base: [
                                    "flex",
                                    "flex-row",
                                    "gap-2"
                                ]
                            },
                            textEmpty: x.jsx(re, {
                                label: "No regions (label)"
                            }),
                            render: ({ entity: r })=>x.jsx("div", {
                                    className: mn([
                                        "p-2",
                                        "border",
                                        "border-blue-300",
                                        "bg-blue-50",
                                        "rounded-sm"
                                    ]),
                                    children: r.name
                                })
                        });
                    }
                },
                {
                    id: "requirements",
                    label: x.jsx(re, {
                        label: "Required resources (label)"
                    }),
                    render ({ entity: n }) {
                        return x.jsx(H2, {
                            requirements: n.requirements,
                            textEmpty: x.jsx(re, {
                                label: "No requirements (label)"
                            })
                        });
                    }
                },
                {
                    id: "dependencies",
                    label: x.jsx(re, {
                        label: "Blueprint dependencies (label)"
                    }),
                    render ({ entity: n }) {
                        return x.jsx($H, {
                            dependencies: n.dependencies,
                            textEmpty: x.jsx(re, {
                                label: "No dependencies (label)"
                            })
                        });
                    }
                },
                {
                    id: "deps",
                    label: x.jsx(re, {
                        label: "Blueprint dependency graph (label)"
                    }),
                    render ({ entity: n }) {
                        return x.jsx(KSe, {
                            graph: t,
                            blueprintId: n.id
                        });
                    }
                },
                {
                    id: "preview",
                    render ({ entity: n }) {
                        return x.jsx("div", {
                            className: mn([
                                "mx-auto",
                                "border-2",
                                "border-purple-400",
                                "rounded-md",
                                "w-[256px]",
                                "h-[256px]",
                                "bg-contain",
                                `bg-${n.id}`
                            ])
                        });
                    }
                }
            ],
            ...e
        }), QH = Bt("/$locale/apps/derivean/root/blueprint/$id/view")({
        async loader ({ context: { kysely: t } }) {
            return {
                dependencies: await t.transaction().execute(async (e)=>Jw({
                        tx: e
                    }))
            };
        },
        component () {
            const { dependencies: t } = QH.useLoaderData(), { entity: e } = es({
                from: "/$locale/apps/derivean/root/blueprint/$id"
            });
            return x.jsx("div", {
                className: "w-1/2 mx-auto",
                children: x.jsx(YSe, {
                    dependencies: t,
                    entity: e
                })
            });
        }
    }), Qw = ({ group: t, ...e })=>x.jsx(qz, {
            icon: ii,
            textTitle: x.jsx(re, {
                label: "Select resource (title)"
            }),
            textSelect: x.jsx(re, {
                label: "Select resource (label)"
            }),
            table: (n)=>x.jsx(qH, {
                    group: t,
                    ...n
                }),
            render: ({ entity: n })=>n.name,
            queryKey: "Resource",
            query: async ({ filter: n, cursor: r })=>At.transaction().execute(async (i)=>Hr({
                        select: i.selectFrom("Resource as r").select([
                            "r.id",
                            "r.name",
                            "r.weight",
                            (s)=>s.selectFrom("Tag as t").select((o)=>xi`json_group_array(json_object(
                                                'id', ${o.ref("t.id")},
                                                'code', ${o.ref("t.code")},
                                                'group', ${o.ref("t.group")},
                                                'sort', ${o.ref("t.sort")},
                                                'label', ${o.ref("t.label")}
                                            ))`.as("tags")).where("t.id", "in", i.selectFrom("Resource_Tag as rt").select("rt.tagId").where("rt.resourceId", "=", s.ref("r.id"))).as("tags"),
                            (s)=>s.selectFrom("Blueprint_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countRequirement"),
                            (s)=>s.selectFrom("Blueprint_Production").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProduction"),
                            (s)=>s.selectFrom("Blueprint_Production_Requirement").select((o)=>o.fn.count("id").as("count")).whereRef("resourceId", "=", "r.id").as("countProductionRequirement")
                        ]).orderBy("r.name", "asc"),
                        query ({ select: s, where: o }) {
                            let a = s;
                            if (o?.id && (a = a.where("r.id", "=", o.id)), o?.fulltext) {
                                const l = `%${o.fulltext}%`.toLowerCase();
                                a = a.where((c)=>c.or([
                                        c("r.id", "like", l),
                                        c("r.name", "like", l),
                                        c("r.id", "in", c.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((u)=>u.or([
                                                u("t.code", "like", l),
                                                u("t.label", "like", l),
                                                u("t.group", "like", l)
                                            ])))
                                    ]));
                            }
                            return a;
                        },
                        output: Y.object({
                            id: Y.string().min(1),
                            name: Y.string().min(1),
                            weight: su(),
                            tags: Ws(Zw.entity),
                            countRequirement: Y.number().nonnegative(),
                            countProduction: Y.number().nonnegative(),
                            countProductionRequirement: Y.number().nonnegative()
                        }),
                        filter: n,
                        cursor: r
                    })),
            ...e
        }), eB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs($y.shape),
            defaultValues: {
                amount: 1,
                passive: !1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: x.jsx(re, {
                        label: "Requirement (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(Qw, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "amount",
                    label: x.jsx(re, {
                        label: "Amount (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "passive",
                    label: x.jsx(re, {
                        label: "Passive requirement (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Passive requirement (hint)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "passive",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(pz, {
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: ii,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, mN = Ri(), ZSe = [
        mN({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        mN({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 10
        }),
        mN({
            name: "passive",
            header () {
                return x.jsx(re, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(WT, {
                    value: t
                });
            },
            size: 10
        })
    ], JSe = ({ blueprintId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint"
            ],
            [
                "Blueprint_Requirement"
            ],
            [
                "Blueprint_Resource_Requirement"
            ],
            [
                "Resource"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: ZSe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create requirement item (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create requirement item (modal)"
                            }),
                            icon: ii,
                            children: x.jsx(eB, {
                                mutation: dn({
                                    async mutationFn (i) {
                                        return At.transaction().execute(async (s)=>s.insertInto("Blueprint_Requirement").values({
                                                id: tr(),
                                                ...i,
                                                blueprintId: t
                                            }).execute());
                                    },
                                    async onSuccess () {
                                        await r();
                                    }
                                })
                            })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit requirement item (modal)"
                                }),
                                icon: ii,
                                children: x.jsx(eB, {
                                    defaultValues: i,
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.updateTable("Blueprint_Requirement").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete requirement item (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Requirement").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete requirement item (content)"
                                    }),
                                    textToast: "Delete requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Cx = Bt("/$locale/apps/derivean/root/blueprint/$id/requirements")({
        validateSearch: Zr(Mi($y)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                "br.id",
                                "r.name",
                                "br.resourceId",
                                "br.amount",
                                "br.passive"
                            ]).where("br.blueprintId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("br.id", "=", a.id)), a?.idIn && (l = l.where("br.id", "in", a.idIn)), a?.resourceId && (l = l.where("br.resourceId", "=", a.resourceId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                passive: Nl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Cx.useLoaderData(), { filter: n, cursor: r, selection: i } = Cx.useSearch(), { id: s } = Cx.useParams(), o = Cx.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(JSe, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of requirements (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), EO = Pae({
        shape: Y.object({
            resourceId: Y.string().min(1),
            amount: kd(),
            cycles: su()
        }),
        filter: yo.merge(Y.object({
            blueprintId: Y.string().optional(),
            resourceId: Y.string().optional()
        }))
    }), tB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(EO.shape),
            defaultValues: {
                amount: 1,
                cycles: 1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: x.jsx(re, {
                        label: "Resource name (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(Qw, {
                                textTitle: x.jsx(re, {
                                    label: "Select resource (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "amount",
                    label: x.jsx(re, {
                        label: "Amount (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "cycles",
                    label: x.jsx(re, {
                        label: "Production cycles (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Production cycles (hint)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("cycles")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: Rl,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, e_ = (t)=>x.jsx(qz, {
            icon: hr,
            textTitle: x.jsx(re, {
                label: "Select blueprint (title)"
            }),
            table: ({ table: e, ...n })=>x.jsx(KH, {
                    table: {
                        ...e,
                        hidden: [
                            "requirements",
                            "dependencies"
                        ]
                    },
                    ...n
                }),
            render: ({ entity: e })=>e.name,
            queryKey: "Blueprint",
            query: async ({ filter: e, cursor: n })=>At.transaction().execute(async (r)=>Hr({
                        select: r.selectFrom("Blueprint as b").select([
                            "b.id",
                            "b.name",
                            "b.sort",
                            "b.cycles",
                            "b.limit",
                            (i)=>i.selectFrom("Blueprint_Region as br").innerJoin("Region as r", "r.id", "br.regionId").select((s)=>sh.jsonGroupArray({
                                        id: s.ref("r.id"),
                                        name: s.ref("r.name")
                                    }).as("regions")).whereRef("br.blueprintId", "=", "b.id").as("regions"),
                            (i)=>i.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select((s)=>xi`json_group_array(json_object(
                                                    'id', ${s.ref("br.id")},
                                                    'amount', ${s.ref("br.amount")},
                                                    'passive', ${s.ref("br.passive")},
                                                    'resourceId', ${s.ref("br.resourceId")},
                                                    'blueprintId', ${s.ref("br.blueprintId")},
                                                    'name', ${s.ref("r.name")}
                                                ))`.as("requirements")).whereRef("br.blueprintId", "=", "b.id").as("requirements"),
                            (i)=>i.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as b", "b.id", "bd.blueprintId").select((s)=>xi`json_group_array(json_object(
                                                    'id', ${s.ref("bd.id")},
                                                    'dependencyId', ${s.ref("bd.dependencyId")},
                                                    'blueprintId', ${s.ref("bd.blueprintId")},
                                                    'name', ${s.ref("b.name")}
                                                ))`.as("requirements")).whereRef("bd.blueprintId", "=", "b.id").as("dependencies")
                        ]).orderBy("b.name", "asc"),
                        query ({ select: i, where: s }) {
                            let o = i;
                            if (s?.id && (o = o.where("b.id", "=", s.id)), s?.fulltext) {
                                const a = `%${s.fulltext}%`.toLowerCase();
                                o = o.where((l)=>l.or([
                                        l("b.id", "like", a),
                                        l("b.name", "like", a)
                                    ]));
                            }
                            return o;
                        },
                        output: Y.object({
                            id: Y.string().min(1),
                            name: Y.string().min(1),
                            cycles: Y.number().nonnegative(),
                            sort: Y.number().nonnegative(),
                            limit: Y.number().nonnegative(),
                            regions: Ws(Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1)
                            })),
                            requirements: Ws($y.entity.merge(Y.object({
                                name: Y.string().min(1)
                            }))),
                            dependencies: Ws(Nh.entity.merge(Y.object({
                                name: Y.string().min(1)
                            })))
                        }),
                        filter: e,
                        cursor: n
                    })),
            ...t
        }), QSe = Y.object({
        blueprintId: Y.string().min(1)
    }), eEe = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(QSe),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "blueprintId",
                    label: x.jsx(re, {
                        label: "Target blueprint (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "blueprintId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(e_, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: hr,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, y0 = Ri(), tEe = [
        y0({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: Rl,
                    to: "/$locale/apps/derivean/root/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        y0({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 8
        }),
        y0({
            name: "cycles",
            header () {
                return x.jsx(re, {
                    label: "Production cycles (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 8
        }),
        y0({
            name: "requirements",
            header () {
                return x.jsx(re, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(H2, {
                    textTitle: x.jsx(re, {
                        label: "Resource requirements (title)"
                    }),
                    textEmpty: x.jsx(re, {
                        label: "No requirements (label)"
                    }),
                    requirements: t
                });
            },
            size: 32
        }),
        y0({
            name: "resources",
            header () {
                return x.jsx(re, {
                    label: "Required production resources (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(wh, {
                    items: t,
                    render: ({ entity: e })=>x.jsxs("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: [
                                x.jsx("div", {
                                    children: e.name
                                }),
                                x.jsxs("div", {
                                    className: "text-md font-bold text-slate-500",
                                    children: [
                                        "x",
                                        qn({
                                            number: e.amount
                                        })
                                    ]
                                })
                            ]
                        })
                });
            },
            size: 32
        }),
        y0({
            name: "dependencies",
            header () {
                return x.jsx(re, {
                    label: "Required production dependencies (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(wh, {
                    items: t,
                    render: ({ entity: e })=>x.jsx("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: x.jsx("div", {
                                children: e.name
                            })
                        })
                });
            },
            size: 32
        })
    ], nEe = ({ blueprintId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Blueprint_Production_Requirement"
            ],
            [
                "Resource"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: tEe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create blueprint production (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create blueprint production (modal)"
                            }),
                            icon: Rl,
                            children: ({ close: i })=>x.jsx(tB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>await o.insertInto("Blueprint_Production").values({
                                                    id: tr(),
                                                    ...s,
                                                    blueprintId: t
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit blueprint production (modal)"
                                }),
                                icon: Rl,
                                children: x.jsx(tB, {
                                    defaultValues: i,
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.updateTable("Blueprint_Production").set(s).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Move production to (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Move production to (modal)"
                                }),
                                icon: ii,
                                children: ({ close: s })=>x.jsx(eEe, {
                                        mutation: dn({
                                            async mutationFn (o) {
                                                return At.transaction().execute(async (a)=>{
                                                    await a.updateTable("Blueprint_Production").set({
                                                        blueprintId: o.blueprintId
                                                    }).where("id", "=", i.id).execute();
                                                });
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete blueprint production (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete blueprint production (content)"
                                    }),
                                    textToast: "Delete blueprint production",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, t_ = kae({
        shape: Y.object({
            blueprintId: Y.string().min(1)
        }),
        filter: yo
    }), n_ = Oae({
        shape: Y.object({
            resourceId: Y.string().min(1),
            amount: kd(),
            passive: Y.boolean()
        }),
        filter: yo.merge(Y.object({
            blueprintProductionId: Y.string().optional(),
            resourceId: Y.string().optional()
        }))
    }), r_ = Dae({
        shape: Y.object({
            resourceId: Y.string().min(1),
            amount: kd()
        }),
        filter: yo.merge(Y.object({
            resourceId: Y.string().optional()
        }))
    }), Rx = Bt("/$locale/apps/derivean/root/blueprint/$id/production")({
        validateSearch: Zr(Mi(EO)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production as bp").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                "bp.id",
                                "r.name",
                                "bp.amount",
                                "bp.blueprintId",
                                "bp.cycles",
                                "bp.resourceId",
                                (o)=>o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'passive', ${a.ref("bpr.passive")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("requirements"),
                                (o)=>o.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("resources"),
                                (o)=>o.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl2", "bl2.id", "bpd.blueprintId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("bpd.id")},
                                                'blueprintProductionId', ${a.ref("bpd.blueprintProductionId")},
                                                'blueprintId', ${a.ref("bpd.blueprintId")},
                                                'name', ${a.ref("bl2.name")}
                                            ))`.as("requirements")).whereRef("bpd.blueprintProductionId", "=", "bp.id").as("dependencies")
                            ]).where("bp.blueprintId", "=", i).orderBy("r.name", "asc"),
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                cycles: Y.number().nonnegative(),
                                requirements: Ws(n_.entity.merge(Y.object({
                                    name: Y.string().min(1)
                                }))),
                                resources: Ws(r_.entity.merge(Y.object({
                                    name: Y.string().min(1)
                                }))),
                                dependencies: Ws(t_.entity.merge(Y.object({
                                    name: Y.string().min(1)
                                })))
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Rx.useLoaderData(), { filter: n, cursor: r, selection: i } = Rx.useSearch(), { id: s } = Rx.useParams(), o = Rx.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(nEe, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of productions (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), rEe = ({ label: t, ...e })=>x.jsx(re, {
            label: `Inventory type - ${t}`,
            ...e
        }), iEe = jae({
        shape: Y.object({
            resourceId: Y.string().min(1),
            amount: kd(),
            limit: kd(),
            type: Y.enum([
                "storage",
                "construction"
            ])
        }),
        filter: yo.merge(Y.object({
            resourceId: Y.string().optional(),
            type: Y.enum([
                "storage",
                "construction"
            ]).optional()
        }))
    }), nB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(iEe.shape),
            defaultValues: {
                amount: 0,
                limit: 0,
                type: "storage",
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: x.jsx(re, {
                        label: "Resource name (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(Qw, {
                                textTitle: x.jsx(re, {
                                    label: "Select resource (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "type",
                    label: x.jsx(re, {
                        label: "Inventory type (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "type",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(gz, {
                                items: [
                                    {
                                        id: "storage",
                                        value: _a.text("Inventory type - storage")
                                    },
                                    {
                                        id: "construction",
                                        value: _a.text("Inventory type - construction")
                                    }
                                ],
                                render: ({ entity: c })=>c.value,
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "amount",
                    label: x.jsx(re, {
                        label: "Amount (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "limit",
                    label: x.jsx(re, {
                        label: "Inventory limit (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("limit")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: uh,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, wS = Ri(), sEe = [
        wS({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Resource name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceId", t.resourceId);
                }
            },
            size: 18
        }),
        wS({
            name: "type",
            header () {
                return x.jsx(re, {
                    label: "Inventory type (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(rEe, {
                    label: t
                });
            },
            filter: {
                path: "type",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("type", t.type);
                }
            },
            size: 12
        }),
        wS({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 12
        }),
        wS({
            name: "limit",
            header () {
                return x.jsx(re, {
                    label: "Inventory limit (label)"
                });
            },
            render ({ value: t, data: e }) {
                return x.jsxs("div", {
                    className: "flex flex-row items-center gap-2 w-full",
                    children: [
                        x.jsx("div", {
                            children: qn({
                                number: t
                            })
                        }),
                        x.jsx(GT, {
                            value: 100 * e.amount / e.limit
                        })
                    ]
                });
            },
            size: 14
        })
    ], oEe = ({ blueprintId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Inventory"
            ]
        ]), i = dn({
            async mutationFn () {
                return At.transaction().execute(async (s)=>XH({
                        tx: s,
                        blueprintId: t
                    }));
            },
            async onSuccess () {
                await r();
            },
            onError (s) {
                console.error(s);
            }
        });
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: sEe
            }),
            action: {
                table () {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Create inventory item (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Create inventory item (modal)"
                                }),
                                icon: uh,
                                children: x.jsx(nB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return fr.promise(At.transaction().execute(async (o)=>o.insertInto("Blueprint_Inventory").values({
                                                    id: tr(),
                                                    blueprintId: t,
                                                    inventoryId: (await o.insertInto("Inventory").values({
                                                        id: tr(),
                                                        ...s
                                                    }).returningAll().executeTakeFirstOrThrow()).id
                                                }).returningAll().executeTakeFirstOrThrow()), mo("Create inventory item"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            x.jsx(BP, {
                                icon: uh,
                                onClick: ()=>{
                                    i.mutate();
                                },
                                children: x.jsx(re, {
                                    label: "Fill inventory (label)"
                                })
                            })
                        ]
                    });
                },
                row ({ data: s }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit inventory item (modal)"
                                }),
                                icon: uh,
                                children: x.jsx(nB, {
                                    defaultValues: s,
                                    mutation: dn({
                                        async mutationFn (o) {
                                            return fr.promise(At.transaction().execute(async (a)=>a.updateTable("Inventory").set(o).where("id", "=", s.inventoryId).returningAll().executeTakeFirstOrThrow()), mo("Update inventory item"));
                                        },
                                        async onSuccess () {
                                            await r();
                                        }
                                    })
                                })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete inventory item (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (o)=>o.deleteFrom("Inventory").where("id", "=", s.inventoryId).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Inventory item delete (content)"
                                    }),
                                    textToast: "Inventory item delete",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, aEe = Nae({
        shape: Y.object({
            blueprintId: Y.string().min(1),
            inventoryId: Y.string().min(1)
        }),
        filter: yo.merge(Y.object({
            blueprintId: Y.string().optional(),
            inventoryId: Y.string().optional()
        }))
    }), Ix = Bt("/$locale/apps/derivean/root/blueprint/$id/inventory")({
        validateSearch: Zr(Mi(aEe)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Inventory",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((s)=>Hr({
                            select: s.selectFrom("Blueprint_Inventory as bi").innerJoin("Inventory as i", "i.id", "bi.inventoryId").innerJoin("Resource as r", "r.id", "i.resourceId").select([
                                "bi.id",
                                "r.name",
                                "i.amount",
                                "i.limit",
                                "i.type",
                                "i.resourceId",
                                "bi.blueprintId",
                                "bi.inventoryId"
                            ]).where("bi.blueprintId", "=", i).orderBy("i.type", "asc").orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                if (a?.id && (l = l.where("bi.id", "=", a.id)), a?.idIn && (l = l.where("bi.id", "in", a.idIn)), a?.fulltext) {
                                    const c = `%${a.fulltext}%`.toLowerCase();
                                    l = l.where((u)=>u.or([
                                            u("bi.id", "like", `%${c}%`),
                                            u("r.id", "like", `%${c}%`),
                                            u("r.name", "like", `%${c}%`),
                                            u("r.id", "in", u.selectFrom("Resource_Tag as rt").innerJoin("Tag as t", "t.id", "rt.tagId").select("rt.resourceId").where((f)=>f.or([
                                                    f("t.code", "like", c),
                                                    f("t.label", "like", c),
                                                    f("t.group", "like", c)
                                                ])))
                                        ]));
                                }
                                return l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                type: Y.enum([
                                    "storage",
                                    "construction"
                                ]),
                                resourceId: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                inventoryId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                limit: Y.number().int().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Ix.useLoaderData(), { filter: n, cursor: r, selection: i } = Ix.useSearch(), { id: s } = Ix.useParams(), o = Ix.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(oEe, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of items"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), e$ = Bt("/$locale/apps/derivean/root/blueprint/$id/edit")({
        component: ()=>{
            const { entity: t } = es({
                from: "/$locale/apps/derivean/root/blueprint/$id"
            }), e = e$.useNavigate(), n = Vr([
                [
                    "Blueprint"
                ]
            ]);
            return x.jsx("div", {
                className: "w-1/2 mx-auto",
                children: x.jsx(MM, {
                    defaultValues: t,
                    mutation: dn({
                        async mutationFn ({ image: r, regionIds: i, ...s }) {
                            return At.transaction().execute(async (o)=>{
                                await o.updateTable("Blueprint").set({
                                    ...s,
                                    image: r ? await C9(r) : null
                                }).where("id", "=", t.id).returningAll().executeTakeFirstOrThrow(), await o.deleteFrom("Blueprint_Region").where("blueprintId", "=", t.id).execute(), i?.length && await o.insertInto("Blueprint_Region").values(i.map((a)=>({
                                        id: tr(),
                                        blueprintId: t.id,
                                        regionId: a
                                    }))).execute();
                            });
                        },
                        async onSuccess () {
                            await n(), e({
                                to: "/$locale/apps/derivean/root/blueprint/$id/view",
                                params: {
                                    id: t.id
                                }
                            });
                        }
                    })
                })
            });
        }
    }), rB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(Nh.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "dependencyId",
                    label: x.jsx(re, {
                        label: "Blueprint dependency (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "dependencyId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(e_, {
                                textTitle: x.jsx(re, {
                                    label: "Select blueprint (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: hr,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, lEe = Ri(), cEe = [
        lEe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: hr,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.dependencyId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], uEe = ({ blueprintId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Dependency"
            ],
            [
                "Blueprint"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: cEe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create blueprint dependency (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create blueprint dependency (modal)"
                            }),
                            icon: hr,
                            children: ({ close: i })=>x.jsx(rB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return fr.promise(At.transaction().execute(async (o)=>{
                                                const a = o.insertInto("Blueprint_Dependency").values({
                                                    id: tr(),
                                                    ...s,
                                                    blueprintId: t
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await uw({
                                                    tx: o
                                                }), a;
                                            }), mo("Create blueprint dependency"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit blueprint dependency (modal)"
                                }),
                                icon: hr,
                                children: ({ close: s })=>x.jsx(rB, {
                                        defaultValues: i,
                                        mutation: dn({
                                            async mutationFn (o) {
                                                return fr.promise(At.transaction().execute(async (a)=>a.updateTable("Blueprint_Dependency").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), mo("Update blueprint dependency"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete blueprint dependency (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Dependency").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete blueprint dependency (content)"
                                    }),
                                    textToast: "Delete blueprint dependency",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Ax = Bt("/$locale/apps/derivean/root/blueprint/$id/dependencies")({
        validateSearch: Zr(Mi(Nh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl", "bl.id", "bd.dependencyId").select([
                                "bd.id",
                                "bl.name",
                                "bd.blueprintId",
                                "bd.dependencyId"
                            ]).where("bd.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bd.id", "=", a.id)), a?.idIn && (l = l.where("bd.id", "in", a.idIn)), a?.blueprintId && (l = l.where("bd.blueprintId", "=", a.blueprintId)), a?.dependencyId && (l = l.where("bd.dependencyId", "=", a.dependencyId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                dependencyId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Ax.useLoaderData(), { filter: n, cursor: r, selection: i } = Ax.useSearch(), { id: s } = Ax.useParams(), o = Ax.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(uEe, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of requirements (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), dEe = Iae({
        shape: Y.object({
            conflictId: Y.string().min(1)
        }),
        filter: yo
    }), iB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(dEe.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "conflictId",
                    label: x.jsx(re, {
                        label: "Blueprint conflict (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Blueprint conflict (hint)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "conflictId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(e_, {
                                textTitle: x.jsx(re, {
                                    label: "Select blueprint conflict (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: hr,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, fEe = Ri(), hEe = [
        fEe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Conflict building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: hr,
                    to: "/$locale/apps/derivean/root/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.conflictId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], pEe = ({ blueprintId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Conflict"
            ],
            [
                "Blueprint"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: hEe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create blueprint conflict (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create blueprint conflict (modal)"
                            }),
                            icon: hr,
                            children: ({ close: i })=>x.jsx(iB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return fr.promise(At.transaction().execute(async (o)=>{
                                                const a = o.insertInto("Blueprint_Conflict").values({
                                                    id: tr(),
                                                    ...s,
                                                    blueprintId: t
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await uw({
                                                    tx: o
                                                }), a;
                                            }), mo("Create blueprint conflict"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit blueprint conflict (modal)"
                                }),
                                icon: hr,
                                children: ({ close: s })=>x.jsx(iB, {
                                        defaultValues: i,
                                        mutation: dn({
                                            async mutationFn (o) {
                                                return fr.promise(At.transaction().execute(async (a)=>a.updateTable("Blueprint_Conflict").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), mo("Update blueprint conflict"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete blueprint conflict (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Conflict").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete blueprint conflict (content)"
                                    }),
                                    textToast: "Delete blueprint conflict",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Nx = Bt("/$locale/apps/derivean/root/blueprint/$id/conflicts")({
        validateSearch: Zr(Mi(Nh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Conflict",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Conflict as bc").innerJoin("Blueprint as bl", "bl.id", "bc.conflictId").select([
                                "bc.id",
                                "bl.name",
                                "bc.blueprintId",
                                "bc.conflictId"
                            ]).where("bc.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bc.id", "=", a.id)), a?.idIn && (l = l.where("bc.id", "in", a.idIn)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                conflictId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Nx.useLoaderData(), { filter: n, cursor: r, selection: i } = Nx.useSearch(), { id: s } = Nx.useParams(), o = Nx.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(pEe, {
                    blueprintId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of conflicts (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), mEe = ({ land: t })=>{
        const { mapId: e, locale: n } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: x.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/land/list",
                        params: {
                            locale: n,
                            mapId: e
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    }),
                    x.jsx("div", {
                        className: "flex flex-col items-end text-xs",
                        children: x.jsx("div", {
                            className: "flex flex-row gap-1 items-center",
                            children: x.jsx("div", {
                                className: "font-bold",
                                children: qn({
                                    number: t.position
                                })
                            })
                        })
                    })
                ]
            })
        });
    }, gEe = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-4",
                "w-4/12",
                "border-l-2",
                "border-slate-200",
                "shadow-xs",
                "relative",
                "max-h-screen"
            ],
            title: [
                "flex",
                "flex-row",
                "justify-between",
                "items-center",
                "px-4",
                "py-4",
                "shadow-md"
            ],
            content: [
                "flex",
                "flex-col",
                "gap-2",
                "max-h-full",
                "overflow-y-auto",
                "px-4",
                "mb-4"
            ]
        },
        variant: {},
        defaults: {}
    }), Ca = ({ icon: t, textTitle: e, textSubTitle: n, variant: r, tva: i = gEe, css: s, children: o })=>{
        const { mapId: a, locale: l } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        }), c = i({
            ...r,
            css: s
        }).slots;
        return x.jsxs("div", {
            className: c.base(),
            children: [
                x.jsxs("div", {
                    className: c.title(),
                    children: [
                        x.jsxs("div", {
                            className: "flex flex-col gap-2 font-bold",
                            children: [
                                x.jsxs("div", {
                                    className: "flex flex-row gap-2 items-center",
                                    children: [
                                        x.jsx(_n, {
                                            icon: t,
                                            css: {
                                                base: [
                                                    "text-slate-500"
                                                ]
                                            }
                                        }),
                                        e
                                    ]
                                }),
                                n ? x.jsx("div", {
                                    className: "flex flex-row gap-2 items-center text-sm text-slate-500",
                                    children: n
                                }) : null
                            ]
                        }),
                        x.jsx(It, {
                            to: "/$locale/apps/derivean/map/$mapId/view",
                            params: {
                                locale: l,
                                mapId: a
                            },
                            children: x.jsx(zn, {
                                iconEnabled: tk,
                                variant: {
                                    variant: "subtle"
                                }
                            })
                        })
                    ]
                }),
                x.jsx("div", {
                    className: c.content(),
                    children: o
                })
            ]
        });
    }, MO = "icon-[lucide--land-plot]", yEe = ({ land: t, ...e })=>x.jsx(Ca, {
            icon: MO,
            textTitle: x.jsx(re, {
                label: "Land list (label)"
            }),
            ...e,
            children: t.map((n)=>x.jsx(mEe, {
                    land: n
                }, n.id))
        }), t$ = Bt("/$locale/apps/derivean/map/$mapId/land/list")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n } }) {
            return {
                land: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "land",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>$s({
                                select: r.selectFrom("Land as l").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "l.id",
                                    "r.name",
                                    "l.mapId",
                                    "l.position"
                                ]).where("l.mapId", "=", n).orderBy("r.name"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    mapId: Y.string().min(1),
                                    position: Y.number()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { land: t } = t$.useLoaderData();
            return x.jsx(yEe, {
                land: t
            });
        }
    }), vEe = Bt("/$locale/apps/derivean/map/$mapId/land/$landId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, landId: r } }) {
            return {
                land: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "land",
                        r,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>Mc({
                                select: i.selectFrom("Land as l").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "l.id",
                                    "r.name",
                                    "l.mapId"
                                ]).where("l.id", "=", r),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    mapId: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), xEe = ({ building: t })=>{
        const { mapId: e, locale: n } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: x.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    x.jsx(It, {
                        icon: Qa,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: n,
                            mapId: e,
                            buildingId: t.id
                        },
                        children: t.name
                    }),
                    x.jsx(It, {
                        icon: MO,
                        to: "/$locale/apps/derivean/map/$mapId/building/list",
                        params: {
                            locale: n,
                            mapId: e
                        },
                        search: {
                            zoomToId: t.landId
                        },
                        children: t.land
                    })
                ]
            })
        });
    }, bEe = ({ building: t, ...e })=>x.jsx(Ca, {
            icon: Qa,
            textTitle: x.jsx(re, {
                label: "Building list (label)"
            }),
            ...e,
            children: t.length > 0 ? t.map((n)=>x.jsx(xEe, {
                    building: n
                }, n.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "No buildings yet. (label)"
                })
            })
        }), n$ = Bt("/$locale/apps/derivean/map/$mapId/building/list")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n } }) {
            return {
                building: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>$s({
                                select: r.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "b.id",
                                    "bl.name",
                                    "b.landId",
                                    "r.name as land"
                                ]).where("l.mapId", "=", n).orderBy("bl.name", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    landId: Y.string().min(1),
                                    land: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = n$.useLoaderData();
            return x.jsx(bEe, {
                building: t
            });
        }
    }), wEe = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                building: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>Mc({
                                select: i.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").select([
                                    "b.id",
                                    "bl.name",
                                    "b.blueprintId",
                                    "r.name as land",
                                    "b.constructionId",
                                    "b.productionId",
                                    "b.recurringProductionId"
                                ]).where("b.id", "=", r),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    blueprintId: Y.string().min(1),
                                    land: Y.string().min(1),
                                    constructionId: Y.string().nullish(),
                                    productionId: Y.string().nullish(),
                                    recurringProductionId: Y.string().nullish()
                                })
                            }));
                    }
                })
            };
        }
    }), _Ee = Bt("/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { blueprintId: n } }) {
            return {
                blueprint: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "blueprint",
                        n,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>Mc({
                                select: r.selectFrom("Blueprint as b").select([
                                    "b.id",
                                    "b.name"
                                ]).where("b.id", "=", n),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), SEe = ({ entity: t, ...e })=>{
        const { locale: n } = sn({
            from: "/$locale"
        });
        return x.jsxs(Bm, {
            ...e,
            children: [
                x.jsx(Or, {
                    icon: SO,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Production requirements (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: ii,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/resources",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Production resource requirements (menu)"
                    })
                }),
                x.jsx(Or, {
                    icon: hr,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/dependencies",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: x.jsx(re, {
                        label: "Production resource dependencies (menu)"
                    })
                })
            ]
        });
    }, EEe = (t)=>{
        const { locale: e } = sn({
            from: "/$locale"
        });
        return x.jsx(By, {
            title: ({ entity: n })=>x.jsx(Uy, {
                    icon: Rl,
                    title: n.resource,
                    subtitle: n.blueprint
                }),
            actions: ({ entity: n })=>x.jsx(x.Fragment, {
                    children: x.jsx(It, {
                        icon: hr,
                        to: "/$locale/apps/derivean/game/blueprint/$id/production",
                        params: {
                            locale: e,
                            id: n.blueprintId
                        },
                        children: x.jsx(re, {
                            label: "Building base detail (label)"
                        })
                    })
                }),
            ...t
        });
    }, r$ = Bt("/$locale/apps/derivean/game/blueprint/production/$id")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { id: n } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    n
                ],
                async queryFn () {
                    return e.transaction().execute(async (r)=>({
                            entity: await Mc({
                                select: r.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "bp.cycles",
                                    "r.name as resource",
                                    "bp.blueprintId",
                                    "bl.name as blueprint"
                                ]).where("bp.id", "=", n),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    resource: Y.string().min(1),
                                    blueprint: Y.string().min(1),
                                    blueprintId: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    cycles: Y.number().int().nonnegative()
                                })
                            })
                        }));
                }
            });
        },
        component () {
            const { entity: t } = r$.useLoaderData(), { tva: e } = qr({
                from: "__root__"
            }), n = e().slots;
            return x.jsxs("div", {
                className: n.base(),
                children: [
                    x.jsx(EEe, {
                        entity: t
                    }),
                    x.jsx(SEe, {
                        entity: t
                    }),
                    x.jsx(Al, {})
                ]
            });
        }
    }), MEe = (t)=>x.jsx(mz, {
            items: [
                {
                    id: "name",
                    label: x.jsx(re, {
                        label: "Building name (label)"
                    }),
                    render ({ entity: e }) {
                        return e.name;
                    }
                },
                {
                    id: "cycles",
                    label: x.jsx(re, {
                        label: "Construction cycles (label)"
                    }),
                    render ({ entity: e }) {
                        return qn({
                            number: e.cycles
                        });
                    }
                }
            ],
            ...t
        }), TEe = Bt("/$locale/apps/derivean/game/blueprint/$id/view")({
        component () {
            const { entity: t } = es({
                from: "/$locale/apps/derivean/game/blueprint/$id"
            });
            return x.jsx("div", {
                className: "w-1/2 mx-auto",
                children: x.jsx(MEe, {
                    entity: t
                })
            });
        }
    }), gN = Ri(), CEe = [
        gN({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        gN({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 10
        }),
        gN({
            name: "passive",
            header () {
                return x.jsx(re, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(WT, {
                    value: t
                });
            },
            size: 10
        })
    ], REe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: CEe
            }),
            ...e
        }), oE = Bt("/$locale/apps/derivean/game/blueprint/$id/requirements")({
        validateSearch: Zr(Mi($y)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                "br.id",
                                "r.name",
                                "br.resourceId",
                                "br.amount",
                                "br.passive"
                            ]).where("br.blueprintId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("br.id", "=", a.id)), a?.idIn && (l = l.where("br.id", "in", a.idIn)), a?.resourceId && (l = l.where("br.resourceId", "=", a.resourceId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                passive: Nl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = oE.useLoaderData(), { filter: n, cursor: r } = oE.useSearch(), i = oE.useNavigate(), { tva: s } = qr({
                from: "__root__"
            }), o = s().slots;
            return x.jsx("div", {
                className: o.base(),
                children: x.jsx(REe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of requirements (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), v0 = Ri(), IEe = [
        v0({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Resource name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: Rl,
                    to: "/$locale/apps/derivean/game/blueprint/production/$id/requirements",
                    params: {
                        locale: n,
                        id: t.id
                    },
                    children: e
                });
            },
            size: 18
        }),
        v0({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 8
        }),
        v0({
            name: "cycles",
            header () {
                return x.jsx(re, {
                    label: "Production cycles (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 8
        }),
        v0({
            name: "requirements",
            header () {
                return x.jsx(re, {
                    label: "Required resources (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(H2, {
                    textTitle: x.jsx(re, {
                        label: "Resource requirements (title)"
                    }),
                    textEmpty: x.jsx(re, {
                        label: "No requirements (label)"
                    }),
                    requirements: t
                });
            },
            size: 32
        }),
        v0({
            name: "resources",
            header () {
                return x.jsx(re, {
                    label: "Required production resources (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(wh, {
                    items: t,
                    render: ({ entity: e })=>x.jsxs("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: [
                                x.jsx("div", {
                                    children: e.name
                                }),
                                x.jsxs("div", {
                                    className: "text-md font-bold text-slate-500",
                                    children: [
                                        "x",
                                        qn({
                                            number: e.amount
                                        })
                                    ]
                                })
                            ]
                        })
                });
            },
            size: 32
        }),
        v0({
            name: "dependencies",
            header () {
                return x.jsx(re, {
                    label: "Required production dependencies (label)"
                });
            },
            render ({ value: t }) {
                const { locale: e } = sn({
                    from: "/$locale"
                });
                return x.jsx(wh, {
                    items: t,
                    render: ({ entity: n })=>x.jsx("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                "bg-sky-100",
                                "border",
                                "rounded-sm",
                                "border-sky-300",
                                "py-1",
                                "px-2"
                            ]),
                            children: x.jsx(It, {
                                to: "/$locale/apps/derivean/game/blueprint/$id/requirements",
                                params: {
                                    locale: e,
                                    id: n.blueprintId
                                },
                                children: n.name
                            })
                        })
                });
            },
            size: 32
        })
    ], AEe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: IEe
            }),
            ...e
        }), aE = Bt("/$locale/apps/derivean/game/blueprint/$id/production")({
        validateSearch: Zr(Mi(EO)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production as bp").innerJoin("Blueprint as bl", "bl.id", "bp.blueprintId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                "bp.id",
                                "r.name",
                                "bp.amount",
                                "bp.blueprintId",
                                "bp.cycles",
                                "bp.resourceId",
                                (o)=>o.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'passive', ${a.ref("bpr.passive")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("requirements"),
                                (o)=>o.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("bpr.id")},
                                                'amount', ${a.ref("bpr.amount")},
                                                'blueprintProductionId', ${a.ref("bpr.blueprintProductionId")},
                                                'resourceId', ${a.ref("bpr.resourceId")},
                                                'name', ${a.ref("r.name")}
                                            ))`.as("requirements")).whereRef("bpr.blueprintProductionId", "=", "bp.id").as("resources"),
                                (o)=>o.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl2", "bl2.id", "bpd.blueprintId").select((a)=>xi`json_group_array(json_object(
                                                'id', ${a.ref("bpd.id")},
                                                'blueprintProductionId', ${a.ref("bpd.blueprintProductionId")},
                                                'blueprintId', ${a.ref("bpd.blueprintId")},
                                                'name', ${a.ref("bl2.name")}
                                            ))`.as("requirements")).whereRef("bpd.blueprintProductionId", "=", "bp.id").as("dependencies")
                            ]).where("bp.blueprintId", "=", i).orderBy("r.name", "asc"),
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                cycles: Y.number().nonnegative(),
                                requirements: Ws(n_.entity.merge(Y.object({
                                    name: Y.string().min(1)
                                }))),
                                resources: Ws(r_.entity.merge(Y.object({
                                    name: Y.string().min(1)
                                }))),
                                dependencies: Ws(t_.entity.merge(Y.object({
                                    name: Y.string().min(1)
                                })))
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = aE.useLoaderData(), { filter: n, cursor: r } = aE.useSearch(), i = aE.useNavigate(), { tva: s } = qr({
                from: "__root__"
            }), o = s().slots;
            return x.jsx("div", {
                className: o.base(),
                children: x.jsx(AEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of productions (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), NEe = Ri(), PEe = [
        NEe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: hr,
                    to: "/$locale/apps/derivean/game/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.dependencyId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], kEe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: PEe
            }),
            ...e
        }), lE = Bt("/$locale/apps/derivean/game/blueprint/$id/dependencies")({
        validateSearch: Zr(Mi(Nh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Dependency as bd").innerJoin("Blueprint as bl", "bl.id", "bd.dependencyId").select([
                                "bd.id",
                                "bl.name",
                                "bd.blueprintId",
                                "bd.dependencyId"
                            ]).where("bd.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bd.id", "=", a.id)), a?.idIn && (l = l.where("bd.id", "in", a.idIn)), a?.blueprintId && (l = l.where("bd.blueprintId", "=", a.blueprintId)), a?.dependencyId && (l = l.where("bd.dependencyId", "=", a.dependencyId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                dependencyId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = lE.useLoaderData(), { filter: n, cursor: r } = lE.useSearch(), i = lE.useNavigate(), { tva: s } = qr({
                from: "__root__"
            }), o = s().slots;
            return x.jsx("div", {
                className: o.base(),
                children: x.jsx(kEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of dependencies (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), OEe = Ri(), DEe = [
        OEe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Conflict building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: hr,
                    to: "/$locale/apps/derivean/game/blueprint/$id/conflicts",
                    params: {
                        locale: n,
                        id: t.conflictId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], LEe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: DEe
            }),
            ...e
        }), cE = Bt("/$locale/apps/derivean/game/blueprint/$id/conflicts")({
        validateSearch: Zr(Mi(Nh)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Conflict",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Conflict as bc").innerJoin("Blueprint as bl", "bl.id", "bc.conflictId").select([
                                "bc.id",
                                "bl.name",
                                "bc.blueprintId",
                                "bc.conflictId"
                            ]).where("bc.blueprintId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bc.id", "=", a.id)), a?.idIn && (l = l.where("bc.id", "in", a.idIn)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1),
                                conflictId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = cE.useLoaderData(), { filter: n, cursor: r } = cE.useSearch(), i = cE.useNavigate(), { tva: s } = qr({
                from: "__root__"
            }), o = s().slots;
            return x.jsx("div", {
                className: o.base(),
                children: x.jsx(LEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of conflicts (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), i$ = Fae({
        shape: Y.object({
            blueprintId: Y.string().min(1),
            constructionId: Y.string().optional(),
            productionId: Y.string().optional(),
            recurringProductionId: Y.string().optional(),
            x: kd(),
            y: kd()
        }),
        filter: yo.merge(Y.object({
            userId: Y.string().optional(),
            blueprintId: Y.string().optional(),
            name: Y.string().optional()
        }))
    }), FEe = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(i$.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "blueprintId",
                    label: x.jsx(re, {
                        label: "Select blueprint (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "blueprintId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(e_, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: Qa,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, jEe = Ri(), BEe = [
        jEe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Building name (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsxs("div", {
                    className: "flex flex-row gap-2",
                    children: [
                        x.jsx(It, {
                            icon: hr,
                            to: "/$locale/apps/derivean/root/blueprint/$id/view",
                            params: {
                                locale: n,
                                id: t.blueprintId
                            }
                        }),
                        e
                    ]
                });
            },
            size: 14
        })
    ], UEe = ({ table: t, ...e })=>{
        const n = Vr([
            [
                "Building"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: BEe
            }),
            action: {
                row ({ data: r }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit building (modal)"
                                }),
                                icon: Qa,
                                children: x.jsx(FEe, {
                                    defaultValues: r,
                                    mutation: dn({
                                        async mutationFn (i) {
                                            return fr.promise(At.transaction().execute((s)=>s.updateTable("Building").set(i).where("id", "=", r.id).returningAll().executeTakeFirstOrThrow()), mo("Edit building"));
                                        },
                                        async onSuccess () {
                                            await n();
                                        }
                                    })
                                })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete building (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (i)=>i.deleteFrom("Building").where("id", "=", r.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Building delete (content)"
                                    }),
                                    textToast: "Building delete",
                                    invalidator: n
                                })
                            })
                        ]
                    });
                }
            },
            ...e
        });
    }, uE = Bt("/$locale/apps/derivean/root/user/$id/building/list")({
        validateSearch: Zr(Mi(i$)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Building",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute((s)=>Hr({
                            select: s.selectFrom("Building as b").innerJoin("Blueprint as bl", "bl.id", "b.blueprintId").select([
                                "b.id",
                                "bl.name",
                                "b.blueprintId"
                            ]).where("b.userId", "=", i),
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = uE.useLoaderData(), { filter: n, cursor: r, selection: i } = uE.useSearch(), s = uE.useNavigate(), { tva: o } = qr({
                from: "__root__"
            }), a = o().slots;
            return x.jsx("div", {
                className: a.base(),
                children: x.jsx(UEe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(s)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(s)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, s)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of buildings (label)"
                        }),
                        ..._i(s)
                    }
                })
            });
        }
    }), sB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(r_.shape),
            defaultValues: {
                amount: 1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: x.jsx(re, {
                        label: "Requirement (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(Qw, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "amount",
                    label: x.jsx(re, {
                        label: "Amount (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: ii,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, oB = Ri(), zEe = [
        oB({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        oB({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 10
        })
    ], VEe = ({ blueprintProductionId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Production_Resource"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Resource"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: zEe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create production resource requirement (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create production resource requirement (modal)"
                            }),
                            icon: ii,
                            children: ({ close: i })=>x.jsx(sB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.insertInto("Blueprint_Production_Resource").values({
                                                    id: tr(),
                                                    ...s,
                                                    blueprintProductionId: t
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit production resource requirement (modal)"
                                }),
                                icon: ii,
                                children: ({ close: s })=>x.jsx(sB, {
                                        defaultValues: i,
                                        mutation: dn({
                                            async mutationFn (o) {
                                                return At.transaction().execute(async (a)=>a.updateTable("Blueprint_Production_Resource").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete production resource requirement (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production_Resource").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete production resource requirement (content)"
                                    }),
                                    textToast: "Delete production resource requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Px = Bt("/$locale/apps/derivean/root/blueprint/production/$id/resources")({
        validateSearch: Zr(Mi(r_)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Resource",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Px.useLoaderData(), { filter: n, cursor: r, selection: i } = Px.useSearch(), { id: s } = Px.useParams(), o = Px.useNavigate();
            return x.jsx(x.Fragment, {
                children: x.jsx(VEe, {
                    blueprintProductionId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of production resource requirements (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), aB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(n_.shape),
            defaultValues: {
                amount: 1,
                passive: !1,
                ...e
            }
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "resourceId",
                    label: x.jsx(re, {
                        label: "Requirement (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "resourceId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(Qw, {
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "amount",
                    label: x.jsx(re, {
                        label: "Amount (label)"
                    }),
                    children: x.jsx("input", {
                        type: "number",
                        className: o.input(),
                        ...s.register("amount")
                    })
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "passive",
                    label: x.jsx(re, {
                        label: "Passive requirement (label)"
                    }),
                    hint: x.jsx(re, {
                        label: "Passive requirement (hint)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "passive",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(pz, {
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: ii,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, yN = Ri(), WEe = [
        yN({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 12
        }),
        yN({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 10
        }),
        yN({
            name: "passive",
            header () {
                return x.jsx(re, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(WT, {
                    value: t
                });
            },
            size: 10
        })
    ], qEe = ({ blueprintProductionId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Production_Requirement"
            ],
            [
                "Blueprint_Production"
            ],
            [
                "Resource"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: WEe
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create production requirement (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create production requirement (modal)"
                            }),
                            icon: ii,
                            children: ({ close: i })=>x.jsx(aB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return At.transaction().execute(async (o)=>o.insertInto("Blueprint_Production_Requirement").values({
                                                    id: tr(),
                                                    ...s,
                                                    blueprintProductionId: t
                                                }).returningAll().executeTakeFirstOrThrow());
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit production requirement (modal)"
                                }),
                                icon: ii,
                                children: ({ close: s })=>x.jsx(aB, {
                                        defaultValues: i,
                                        mutation: dn({
                                            async mutationFn (o) {
                                                return At.transaction().execute(async (a)=>a.updateTable("Blueprint_Production_Requirement").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow());
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete production requirement (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production_Requirement").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete production requirement (content)"
                                    }),
                                    textToast: "Delete production requirement item",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, kx = Bt("/$locale/apps/derivean/root/blueprint/production/$id/requirements")({
        validateSearch: Zr(Mi(n_)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount",
                                "bpr.passive"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                passive: Nl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = kx.useLoaderData(), { filter: n, cursor: r, selection: i } = kx.useSearch(), { id: s } = kx.useParams(), o = kx.useNavigate();
            return x.jsx(x.Fragment, {
                children: x.jsx(qEe, {
                    blueprintProductionId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of production requirements (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), lB = ({ mutation: t, defaultValues: e, variant: n, tva: r = Ts, css: i })=>{
        const s = Cs({
            resolver: Rs(t_.shape),
            defaultValues: e
        }), o = r({
            ...n,
            isLoading: s.formState.isLoading,
            isSubmitting: s.formState.isSubmitting,
            css: i
        }).slots;
        return x.jsxs("form", {
            className: o.base(),
            onSubmit: xo({
                form: s,
                mutation: t
            }),
            children: [
                x.jsx(ps, {
                    variant: {
                        highlight: !0
                    },
                    error: s.formState.errors.root
                }),
                x.jsx(wn, {
                    formState: s.formState,
                    name: "blueprintId",
                    label: x.jsx(re, {
                        label: "Blueprint dependency (label)"
                    }),
                    children: x.jsx($o, {
                        control: s.control,
                        name: "blueprintId",
                        render: ({ field: { ref: a, ...l } })=>x.jsx(e_, {
                                textTitle: x.jsx(re, {
                                    label: "Select blueprint (title)"
                                }),
                                allowEmpty: !0,
                                ...l
                            })
                    })
                }),
                x.jsx("div", {
                    className: "flex flex-row justify-between gap-8",
                    children: x.jsx(zn, {
                        iconEnabled: hr,
                        type: "submit",
                        children: x.jsx(re, {
                            label: "Save (submit)"
                        })
                    })
                })
            ]
        });
    }, HEe = Ri(), $Ee = [
        HEe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: hr,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.blueprintId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], GEe = ({ blueprintProductionId: t, table: e, ...n })=>{
        const r = Vr([
            [
                "Blueprint_Production_Dependency"
            ],
            [
                "Blueprint"
            ]
        ]);
        return x.jsx(Ti, {
            table: Ci({
                ...e,
                columns: $Ee
            }),
            action: {
                table () {
                    return x.jsx(Wr, {
                        children: x.jsx(Xn, {
                            label: x.jsx(re, {
                                label: "Create blueprint production dependency (menu)"
                            }),
                            textTitle: x.jsx(re, {
                                label: "Create blueprint production dependency (modal)"
                            }),
                            icon: hr,
                            children: ({ close: i })=>x.jsx(lB, {
                                    mutation: dn({
                                        async mutationFn (s) {
                                            return fr.promise(At.transaction().execute(async (o)=>{
                                                const a = o.insertInto("Blueprint_Production_Dependency").values({
                                                    id: tr(),
                                                    ...s,
                                                    blueprintProductionId: t
                                                }).returningAll().executeTakeFirstOrThrow();
                                                return await uw({
                                                    tx: o
                                                }), a;
                                            }), mo("Create blueprint production dependency"));
                                        },
                                        async onSuccess () {
                                            await r(), i();
                                        }
                                    })
                                })
                        })
                    });
                },
                row ({ data: i }) {
                    return x.jsxs(Wr, {
                        children: [
                            x.jsx(Xn, {
                                label: x.jsx(re, {
                                    label: "Edit (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Edit blueprint production dependency (modal)"
                                }),
                                icon: hr,
                                children: ({ close: s })=>x.jsx(lB, {
                                        defaultValues: i,
                                        mutation: dn({
                                            async mutationFn (o) {
                                                return fr.promise(At.transaction().execute(async (a)=>a.updateTable("Blueprint_Production_Dependency").set(o).where("id", "=", i.id).returningAll().executeTakeFirstOrThrow()), mo("Update blueprint production dependency"));
                                            },
                                            async onSuccess () {
                                                await r(), s();
                                            }
                                        })
                                    })
                            }),
                            x.jsx(Xn, {
                                icon: Bi,
                                label: x.jsx(re, {
                                    label: "Delete (menu)"
                                }),
                                textTitle: x.jsx(re, {
                                    label: "Delete blueprint production dependency (modal)"
                                }),
                                css: {
                                    base: [
                                        "text-red-500",
                                        "hover:text-red-600",
                                        "hover:bg-red-50"
                                    ]
                                },
                                children: x.jsx(Ma, {
                                    callback: async ()=>At.transaction().execute(async (s)=>s.deleteFrom("Blueprint_Production_Dependency").where("id", "=", i.id).execute()),
                                    textContent: x.jsx(re, {
                                        label: "Delete blueprint production dependency (content)"
                                    }),
                                    textToast: "Delete blueprint production dependency",
                                    invalidator: r
                                })
                            })
                        ]
                    });
                }
            },
            ...n
        });
    }, Ox = Bt("/$locale/apps/derivean/root/blueprint/production/$id/dependencies")({
        validateSearch: Zr(Mi(t_)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl", "bl.id", "bpd.blueprintId").select([
                                "bpd.id",
                                "bl.name",
                                "bpd.blueprintId"
                            ]).where("bpd.blueprintProductionId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpd.id", "=", a.id)), a?.idIn && (l = l.where("bpd.id", "in", a.idIn)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = Ox.useLoaderData(), { filter: n, cursor: r, selection: i } = Ox.useSearch(), { id: s } = Ox.useParams(), o = Ox.useNavigate(), { tva: a } = qr({
                from: "__root__"
            }), l = a().slots;
            return x.jsx("div", {
                className: l.base(),
                children: x.jsx(GEe, {
                    blueprintProductionId: s,
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(o)
                        },
                        selection: {
                            type: "multi",
                            value: i,
                            set: Ea(o)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, o)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of dependencies (label)"
                        }),
                        ..._i(o)
                    }
                })
            });
        }
    }), XEe = Bt("/$locale/apps/derivean/map/$mapId/road/$roadId/view")({
        component () {
            return "mrdka";
        }
    }), KEe = Nn({
        slot: {
            base: [
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "bg-white",
                "border",
                "border-slate-300",
                "p-2",
                "hover:bg-slate-100",
                "cursor-draggable"
            ]
        },
        variant: {
            isDragging: {
                true: []
            }
        },
        match: [
            {
                if: {
                    isDragging: !0
                },
                then: {
                    base: [
                        "cursor-grabbing",
                        "bg-slate-100"
                    ]
                }
            }
        ],
        defaults: {
            isDragging: !1
        }
    }), rP = "icon-[emojione-monotone--construction]", YEe = async ({ userId: t, blueprintId: e, landId: n, plotId: r, plan: i, valid: s })=>At.transaction().execute(async (o)=>{
            const a = await o.selectFrom("Blueprint as b").select([
                "b.cycles"
            ]).where("b.id", "=", e).executeTakeFirstOrThrow(), l = await o.insertInto("Building").values({
                id: tr(),
                userId: t,
                blueprintId: e,
                landId: n,
                constructionId: (await o.insertInto("Construction").values({
                    id: tr(),
                    userId: t,
                    cycle: 0,
                    cycles: a.cycles,
                    plan: i
                }).returning("id").executeTakeFirstOrThrow()).id,
                plotId: r,
                valid: s
            }).returningAll().executeTakeFirstOrThrow(), c = await o.selectFrom("Inventory as i").select([
                "i.amount",
                "i.limit",
                "i.resourceId",
                "i.type"
            ]).where("i.id", "in", o.selectFrom("Blueprint_Inventory as bi").select("bi.inventoryId").where("bi.blueprintId", "=", e)).execute();
            for await (const { amount: u, limit: f, resourceId: h, type: m } of c)await o.insertInto("Building_Inventory").values({
                id: tr(),
                buildingId: l.id,
                inventoryId: (await o.insertInto("Inventory").values({
                    id: tr(),
                    amount: u,
                    limit: f,
                    resourceId: h,
                    type: m
                }).returning("id").executeTakeFirstOrThrow()).id
            }).execute();
            return l;
        }), TO = J.memo(({ cycles: t })=>x.jsxs("div", {
            className: mn([
                "flex",
                "flex-row",
                "items-center",
                "gap-2"
            ]),
            children: [
                x.jsx(_n, {
                    css: {
                        base: [
                            "text-slate-400"
                        ]
                    },
                    icon: _O
                }),
                x.jsx("div", {
                    className: "font-bold text-md",
                    children: qn({
                        number: t
                    })
                })
            ]
        })), ZEe = ({ blueprint: t, land: e, userId: n, variant: r, tva: i = KEe, css: s })=>{
        const { mapId: o, locale: a } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        }), l = Om(), c = Vr([
            [
                "GameMap"
            ]
        ]), u = dn({
            async mutationFn ({ blueprintId: h, landId: m, plotId: v }) {
                const _ = await YEe({
                    userId: n,
                    blueprintId: h,
                    landId: m,
                    plotId: v,
                    plan: !0,
                    valid: !1
                });
                l({
                    to: "/$locale/apps/derivean/map/$mapId/land/$landId/construction",
                    params: {
                        locale: a,
                        mapId: o,
                        landId: e.id
                    },
                    search: {
                        zoomToId: _.id
                    }
                });
            },
            async onSuccess () {
                await c();
            },
            onError (h) {
                console.error(h);
            }
        }), f = i({
            ...r,
            css: s
        }).slots;
        return x.jsx("div", {
            className: f.base(),
            children: x.jsxs("div", {
                className: "flex flex-row gap-2 items-center justify-between",
                children: [
                    x.jsxs("div", {
                        className: "flex flex-row gap-2",
                        children: [
                            x.jsxs(uo, {
                                children: [
                                    "x",
                                    t.count
                                ]
                            }),
                            x.jsx(It, {
                                to: "/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId/requirements",
                                params: {
                                    locale: a,
                                    mapId: o,
                                    blueprintId: t.id
                                },
                                css: {
                                    base: [
                                        "font-bold"
                                    ]
                                },
                                children: t.name
                            })
                        ]
                    }),
                    x.jsxs("div", {
                        className: "flex flex-row gap-2",
                        children: [
                            x.jsx(TO, {
                                cycles: t.cycles
                            }),
                            x.jsx(zn, {
                                iconEnabled: rP,
                                iconDisabled: rP,
                                loading: u.isPending,
                                onClick: ()=>{
                                    u.mutate({
                                        blueprintId: t.id,
                                        landId: e.id,
                                        plotId: "unknown`"
                                    });
                                }
                            })
                        ]
                    })
                ]
            })
        });
    }, JEe = ({ userId: t, land: e, blueprints: n, ...r })=>{
        const { locale: i, mapId: s } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: rP,
            textTitle: x.jsx(It, {
                to: "/$locale/apps/derivean/map/$mapId/land/$landId/construction",
                params: {
                    locale: i,
                    mapId: s,
                    landId: e.id
                },
                search: {
                    zoomToId: e.id
                },
                children: e.name
            }),
            textSubTitle: x.jsx(re, {
                label: "Construction (label)"
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>x.jsx(ZEe, {
                    blueprint: o,
                    userId: t,
                    land: e
                }, o.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "There are no available blueprints (label)"
                })
            })
        });
    }, s$ = Bt("/$locale/apps/derivean/map/$mapId/land/$landId/construction")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, landId: i } }) {
            const s = await n();
            return {
                user: s,
                blueprints: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "land",
                        i,
                        "construction",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (o)=>$s({
                                select: o.selectFrom(o.selectFrom("Blueprint as bl").select([
                                    "bl.id",
                                    "bl.name",
                                    "bl.sort",
                                    "bl.cycles",
                                    (a)=>a.selectFrom("Building as bg").select((l)=>l.fn.count("bg.id").as("count")).whereRef("bg.blueprintId", "=", "bl.id").where("bg.userId", "=", s.id).where("bg.landId", "is", i).as("count"),
                                    (a)=>a.case().when(a.not(a.exists(a.selectFrom("Blueprint_Dependency as bd").select(a.lit(1).as("one")).whereRef("bd.blueprintId", "=", "bl.id").where((l)=>l.not(l.exists(l.selectFrom("Building as b").innerJoin("Land as l", "l.id", "b.landId").select(l.lit(1).as("one")).where("b.constructionId", "is", null).where("b.userId", "=", s.id).where("l.mapId", "=", r).whereRef("b.blueprintId", "=", "bd.dependencyId"))))))).then(a.lit(!0)).else(a.lit(!1)).end().as("withAvailableBuildings")
                                ]).where("bl.id", "not in", o.selectFrom("Blueprint_Conflict as bc").select("bc.conflictId").where("bc.blueprintId", "in", o.selectFrom("Building as bg").innerJoin("Land as l", "l.id", "bg.landId").select("bg.blueprintId").where("bg.userId", "=", s.id).where("l.mapId", "=", r))).where("bl.id", "in", o.selectFrom("Blueprint_Region as br").innerJoin("Land as l", "l.regionId", "br.regionId").select("br.blueprintId").where("l.id", "=", i)).as("blueprint")).selectAll().where("withAvailableBuildings", "=", !0).orderBy("blueprint.sort", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    count: Y.number().int().nonnegative(),
                                    cycles: Y.number().int().nonnegative(),
                                    sort: Y.number().int().nonnegative(),
                                    withAvailableBuildings: Nl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { user: t, blueprints: e } = s$.useLoaderData(), { land: n } = es({
                from: "/$locale/apps/derivean/map/$mapId/land/$landId"
            });
            return x.jsx(JEe, {
                userId: t.id,
                land: n,
                blueprints: e
            });
        }
    }), Dp = [
        "p-4",
        "border",
        "border-slate-300",
        "w-full",
        "justify-start"
    ], mm = "icon-[hugeicons--package-receive]", iP = "icon-[heroicons--queue-list]", hT = "icon-[hugeicons--package-sent]", o$ = "icon-[icon-park-outline--transport]", QEe = ({ building: t })=>{
        const { mapId: e, locale: n } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsxs(Ca, {
            icon: Qa,
            textTitle: x.jsx(It, {
                to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                params: {
                    locale: n,
                    mapId: e,
                    buildingId: t.id
                },
                search: {
                    zoomToId: t.id
                },
                children: t.name
            }),
            textSubTitle: t.land,
            children: [
                x.jsx(It, {
                    icon: Rl,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Building production (label)"
                    })
                }),
                x.jsx(It, {
                    icon: iP,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/queue",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Production queue (label)"
                    })
                }),
                x.jsx(It, {
                    icon: uh,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Building inventory (label)"
                    })
                }),
                x.jsx(It, {
                    icon: hT,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/supply",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Supply list (label)"
                    })
                }),
                x.jsx(It, {
                    icon: mm,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/demand",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Demand list (label)"
                    })
                }),
                x.jsx(It, {
                    icon: o$,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/transport",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Transport list (label)"
                    })
                }),
                x.jsx(It, {
                    icon: Qa,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.id
                    },
                    css: {
                        base: Dp
                    },
                    children: x.jsx(re, {
                        label: "Building links (label)"
                    })
                }),
                x.jsx("div", {
                    className: "border-b border-slate-300"
                }),
                x.jsx("div", {
                    className: mn([
                        "w-full",
                        "h-96",
                        "bg-contain",
                        "p-2",
                        `bg-${t.blueprintId}`
                    ])
                })
            ]
        });
    }, CO = "icon-[hugeicons--package]", eMe = ({ mapId: t, userId: e, requirement: n })=>{
        const r = Vr([
            [
                "GameMap"
            ]
        ]), i = n.available || 0, s = dn({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.max("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c + 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), o = dn({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.min("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c - 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        });
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100",
                n.supply ? [
                    "bg-purple-50",
                    "border-purple-400",
                    "hover:bg-purple-50",
                    "hover:border-purple-400"
                ] : [
                    "bg-red-50",
                    "border-red-400",
                    "hover:bg-red-50",
                    "hover:border-red-400"
                ],
                n.transport || i >= n.amount ? [
                    "bg-green-50",
                    "border-green-400",
                    "hover:bg-green-50",
                    "hover:border-green-400"
                ] : void 0
            ]),
            children: [
                x.jsxs("div", {
                    className: "flex flex-row items-center justify-between",
                    children: [
                        x.jsxs("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                n.supply ? [
                                    "text-purple-600"
                                ] : [
                                    "text-red-600"
                                ],
                                n.transport || i >= n.amount ? [
                                    "text-green-600"
                                ] : void 0
                            ]),
                            children: [
                                n.supply || i >= n.amount ? x.jsx(_n, {
                                    icon: mm
                                }) : x.jsx(_n, {
                                    icon: CO
                                }),
                                x.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                })
                            ]
                        }),
                        x.jsxs("div", {
                            className: "flex flex-row gap-1 items-center",
                            children: [
                                x.jsx("div", {
                                    children: qn({
                                        number: i
                                    })
                                }),
                                x.jsx("div", {
                                    children: "/"
                                }),
                                x.jsx("div", {
                                    className: "font-bold",
                                    children: qn({
                                        number: n.amount
                                    })
                                })
                            ]
                        })
                    ]
                }),
                x.jsx(GT, {
                    value: 100 * i / n.amount,
                    css: {
                        progress: i >= n.amount ? [
                            "bg-green-500"
                        ] : void 0
                    }
                }),
                n.demand ? x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        x.jsx(zn, {
                            iconEnabled: Sz,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                n.demand && s.mutate({
                                    demandId: n.demand.id
                                });
                            },
                            children: x.jsx(re, {
                                label: "Priority up (label)"
                            })
                        }),
                        x.jsx(uo, {
                            css: {
                                base: [
                                    "bg-purple-50",
                                    "border-purple-400",
                                    "text-purple-600"
                                ]
                            },
                            children: n.demand.priority
                        }),
                        x.jsx(zn, {
                            iconEnabled: _z,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                n.demand && o.mutate({
                                    demandId: n.demand.id
                                });
                            },
                            children: x.jsx(re, {
                                label: "Priority down (label)"
                            })
                        })
                    ]
                }) : null
            ]
        });
    }, tMe = ({ userId: t, building: e, requirement: n, ...r })=>{
        const { locale: i, mapId: s } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: SO,
            textTitle: x.jsx(re, {
                label: "Construction requirements (label)"
            }),
            textSubTitle: x.jsx(It, {
                to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                params: {
                    locale: i,
                    mapId: s,
                    buildingId: e.id
                },
                search: {
                    zoomToId: e.id
                },
                children: e.name
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>x.jsx(eMe, {
                    mapId: s,
                    userId: t,
                    requirement: o
                }, o.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "There are no construction requirements (label)"
                })
            })
        });
    }, a$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/view")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, buildingId: i } }) {
            return {
                user: await n(),
                requirement: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "construction",
                        "requirement"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (o)=>$s({
                                select: o.selectFrom("Blueprint_Requirement as br").innerJoin("Building as bg", (a)=>a.onRef("bg.blueprintId", "=", "br.blueprintId").on("bg.id", "=", i)).innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                    "br.id",
                                    "r.name",
                                    "br.amount",
                                    "br.passive",
                                    (a)=>a.selectFrom("Transport as t").select((l)=>l.fn.count("t.id").as("transport")).whereRef("t.targetId", "=", "bg.id").whereRef("t.resourceId", "=", "br.resourceId").as("transport"),
                                    (a)=>a.selectFrom("Supply as s").innerJoin("Building as b", "b.id", "s.buildingId").innerJoin("Blueprint as bp", "bp.id", "b.blueprintId").select((l)=>sh.jsonObject({
                                                id: l.ref("s.id"),
                                                buildingId: l.ref("s.buildingId"),
                                                name: l.ref("bp.name")
                                            }).as("supply")).whereRef("s.resourceId", "=", "br.resourceId").where("s.buildingId", "in", a.selectFrom("Building_To_Building as btb").select("btb.linkId").where("btb.buildingId", "=", i)).as("supply"),
                                    (a)=>a.selectFrom("Inventory as i").select([
                                            "i.amount"
                                        ]).where("i.id", "in", o.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", i)).whereRef("i.resourceId", "=", "br.resourceId").where("i.type", "=", "construction").limit(1).as("available"),
                                    (a)=>a.selectFrom("Demand as d").select((l)=>sh.jsonObject({
                                                id: l.ref("d.id"),
                                                priority: l.ref("d.priority")
                                            }).as("demand")).whereRef("d.resourceId", "=", "br.resourceId").where("d.buildingId", "=", i).as("demand")
                                ]).orderBy("r.name", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    transport: Y.number().nonnegative(),
                                    available: Y.number().nonnegative().nullish(),
                                    supply: hF(Y.object({
                                        id: Y.string().min(1),
                                        buildingId: Y.string().min(1),
                                        name: Y.string().min(1)
                                    })).nullish(),
                                    demand: hF(Y.object({
                                        id: Y.string().min(1),
                                        priority: Y.number()
                                    })).nullish(),
                                    passive: Nl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { user: e, requirement: n } = a$.useLoaderData();
            return t.constructionId ? x.jsx(tMe, {
                userId: e.id,
                building: t,
                requirement: n
            }) : x.jsx(QEe, {
                building: t
            });
        }
    }), nMe = ({ transport: t })=>{
        const { mapId: e, locale: n } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100"
            ]),
            children: [
                x.jsx("div", {
                    className: "font-bold",
                    children: t.resource
                }),
                x.jsx(It, {
                    icon: Qa,
                    to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                    params: {
                        locale: n,
                        mapId: e,
                        buildingId: t.sourceId
                    },
                    search: {
                        zoomToId: t.sourceId
                    },
                    children: t.source
                }),
                x.jsxs(uo, {
                    children: [
                        "x",
                        t.amount
                    ]
                })
            ]
        });
    }, rMe = ({ building: t, transport: e, ...n })=>{
        const { mapId: r, locale: i } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: o$,
            textTitle: x.jsx(re, {
                label: "Transport list (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/transport",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>x.jsx(nMe, {
                    transport: s
                }, s.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "There is nothing on the way to this building. (label)"
                })
            })
        });
    }, l$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/transport")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                transport: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "transport",
                        "list"
                    ],
                    queryFn: async ()=>e.transaction().execute(async (i)=>$s({
                                select: i.selectFrom("Transport as t").innerJoin("Building as source", "source.id", "t.sourceId").innerJoin("Blueprint as bl", "bl.id", "source.blueprintId").innerJoin("Resource as r", "r.id", "t.resourceId").select([
                                    "t.id",
                                    "r.name as resource",
                                    "source.id as sourceId",
                                    "bl.name as source",
                                    "t.amount"
                                ]).where("t.targetId", "=", r).orderBy("r.name", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    resource: Y.string().min(1),
                                    source: Y.string().min(1),
                                    sourceId: Y.string().min(1),
                                    amount: Y.number()
                                })
                            }))
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { transport: e } = l$.useLoaderData();
            return x.jsx(rMe, {
                building: t,
                transport: e
            });
        }
    }), iMe = ({ supply: t })=>{
        const e = Vr([
            [
                "GameMap"
            ]
        ]), n = dn({
            async mutationFn ({ supplyId: r }) {
                return At.transaction().execute(async (i)=>i.deleteFrom("Supply").where("id", "=", r).execute());
            },
            async onSuccess () {
                await e();
            }
        });
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100"
            ]),
            children: [
                x.jsx("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: t.name
                }),
                x.jsx(zn, {
                    iconEnabled: Bi,
                    loading: n.isPending,
                    onClick: ()=>{
                        n.mutate({
                            supplyId: t.id
                        });
                    },
                    variant: {
                        variant: "danger"
                    }
                })
            ]
        });
    }, sMe = ({ building: t, supply: e, ...n })=>{
        const { mapId: r, locale: i } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: hT,
            textTitle: x.jsx(re, {
                label: "Supply of (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/supply",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>x.jsx(iMe, {
                    supply: s
                }, s.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "This building does not supply anything. (label)"
                })
            })
        });
    }, c$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/supply")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                supply: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "supply",
                        "list"
                    ],
                    queryFn: async ()=>e.transaction().execute(async (i)=>$s({
                                select: i.selectFrom("Supply as s").innerJoin("Resource as r", "r.id", "s.resourceId").select([
                                    "s.id",
                                    "r.name"
                                ]).where("s.buildingId", "=", r).orderBy("r.name", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1)
                                })
                            }))
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { supply: e } = c$.useLoaderData();
            return x.jsx(sMe, {
                building: t,
                supply: e
            });
        }
    }), oMe = ({ building: t, link: e })=>{
        const { mapId: n, locale: r } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100"
            ]),
            children: x.jsxs("div", {
                className: "flex flex-row items-center justify-between",
                children: [
                    x.jsx(It, {
                        icon: Qa,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: r,
                            mapId: n,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    }),
                    x.jsx(It, {
                        icon: MO,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                        params: {
                            locale: r,
                            mapId: n,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: e.landId
                        },
                        children: e.land
                    })
                ]
            })
        });
    }, aMe = ({ building: t, link: e, ...n })=>{
        const { locale: r, mapId: i } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: Qa,
            textTitle: x.jsx(re, {
                label: "Building links (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: r,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/link",
                        params: {
                            locale: r,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>x.jsx(oMe, {
                    building: t,
                    link: s
                }, s.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "No linked buildings. (label)"
                })
            })
        });
    }, u$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/link")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                link: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "link"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>$s({
                                select: i.selectFrom("Building_To_Building as btb").innerJoin("Building as b", "b.id", "btb.linkId").innerJoin("Land as l", "l.id", "b.landId").innerJoin("Region as r", "r.id", "l.regionId").innerJoin("Blueprint as bp", "bp.id", "b.blueprintId").select([
                                    "btb.id",
                                    "bp.name",
                                    "b.landId",
                                    "r.name as land"
                                ]).where("btb.buildingId", "=", r).orderBy("bp.name"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    landId: Y.string().min(1),
                                    land: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { link: e } = u$.useLoaderData();
            return x.jsx(aMe, {
                link: e,
                building: t
            });
        }
    }), lMe = Y.object({
        buildingId: Y.string().min(1),
        resourceId: Y.string().min(1),
        mapId: Y.string().min(1),
        userId: Y.string().min(1),
        amount: kd()
    }), cMe = ({ mapId: t, userId: e, inventory: n })=>{
        const r = Vr([
            [
                "GameMap"
            ]
        ]), i = dn({
            async mutationFn ({ buildingId: l, resourceId: c, supplyId: u, mapId: f, userId: h }) {
                return At.transaction().execute(async (m)=>u ? m.deleteFrom("Supply").where("id", "=", u).execute() : m.insertInto("Supply").values({
                        id: tr(),
                        buildingId: l,
                        resourceId: c,
                        mapId: f,
                        userId: h
                    }).execute());
            },
            async onSuccess () {
                await r();
            }
        }), s = dn({
            async mutationFn ({ buildingId: l, resourceId: c, demandId: u, mapId: f, userId: h, amount: m }) {
                return At.transaction().execute(async (v)=>{
                    if (u) return v.deleteFrom("Demand").where("id", "=", u).execute();
                    const { sum: _ } = await v.selectFrom("Transport as t").select((b)=>b.fn.sum("t.amount").as("sum")).where("t.resourceId", "=", c).where("t.targetId", "=", l).executeTakeFirstOrThrow(), w = m + (_ || 0);
                    if (n.limit > 0 && w <= 0) {
                        fr.error(_a.text("Not enough space (inventory is full/all resources are already on the way) (toast)"));
                        return;
                    }
                    return v.insertInto("Demand").values({
                        id: tr(),
                        buildingId: l,
                        resourceId: c,
                        mapId: f,
                        userId: h,
                        amount: n.limit > 0 ? w : 1,
                        priority: 0,
                        type: "storage"
                    }).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), o = Cs({
            resolver: Rs(lMe),
            defaultValues: {
                mapId: t,
                userId: e,
                buildingId: n.buildingId,
                resourceId: n.resourceId,
                amount: n.limit > 0 ? n.limit - n.amount : 1
            }
        }), a = Ts({
            isLoading: o.formState.isLoading,
            isSubmitting: o.formState.isSubmitting
        }).slots;
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "rounded-md",
                "border",
                "border-slate-300",
                "p-2",
                "cursor-default",
                "hover:bg-slate-100",
                n.limit > 0 && n.amount >= n.limit ? [
                    "border-amber-400",
                    "bg-amber-50",
                    "hover:bg-amber-50",
                    "hover:border-amber-600"
                ] : void 0,
                n.supplyId || n.demandId ? [
                    "bg-purple-50",
                    "border-purple-400",
                    "hover:bg-purple-50",
                    "hover:border-purple-400"
                ] : void 0
            ]),
            children: [
                x.jsxs("div", {
                    className: "flex flex-row items-center justify-between",
                    children: [
                        x.jsxs("div", {
                            className: mn([
                                "flex",
                                "flex-row",
                                "gap-2",
                                "items-center",
                                n.supplyId || n.demandId ? [
                                    "text-purple-600"
                                ] : void 0
                            ]),
                            children: [
                                x.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                }),
                                n.supplyId ? x.jsx(_n, {
                                    icon: hT
                                }) : null,
                                n.demandId ? x.jsx(_n, {
                                    icon: mm
                                }) : null
                            ]
                        }),
                        qn({
                            number: n.amount
                        }),
                        " /",
                        " ",
                        qn({
                            number: n.limit
                        })
                    ]
                }),
                x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between",
                    children: [
                        x.jsx(zn, {
                            iconEnabled: n.supplyId ? Bi : hT,
                            loading: i.isPending,
                            onClick: ()=>{
                                i.mutate({
                                    mapId: t,
                                    userId: e,
                                    buildingId: n.buildingId,
                                    resourceId: n.resourceId,
                                    supplyId: n.supplyId
                                });
                            },
                            variant: {
                                variant: "subtle"
                            },
                            children: n.supplyId ? x.jsx(re, {
                                label: "Cancel supply (label)"
                            }) : x.jsx(re, {
                                label: "Supply resource (label)"
                            })
                        }),
                        x.jsx("div", {
                            className: mn([
                                "border-2",
                                "border-purple-400",
                                "rounded-md",
                                "w-[64px]",
                                "h-[64px]",
                                "bg-contain",
                                `bg-${n.resourceId}`
                            ])
                        }),
                        n.demandId ? x.jsx(zn, {
                            iconEnabled: Bi,
                            loading: s.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    mapId: t,
                                    userId: e,
                                    buildingId: n.buildingId,
                                    resourceId: n.resourceId,
                                    amount: 0,
                                    demandId: n.demandId
                                });
                            },
                            variant: {
                                variant: "subtle"
                            },
                            children: x.jsx(re, {
                                label: "Cancel demand (label)"
                            })
                        }) : x.jsx(Fm, {
                            textTitle: x.jsx(re, {
                                label: "Demand resource (title)"
                            }),
                            target: x.jsx(zn, {
                                iconEnabled: mm,
                                variant: {
                                    variant: "subtle"
                                },
                                children: x.jsx(re, {
                                    label: "Demand resource (label)"
                                })
                            }),
                            css: {
                                modal: [
                                    "w-1/3"
                                ]
                            },
                            children: x.jsxs("form", {
                                className: a.base(),
                                onSubmit: xo({
                                    form: o,
                                    mutation: s
                                }),
                                children: [
                                    x.jsx(ps, {
                                        variant: {
                                            highlight: !0
                                        },
                                        error: o.formState.errors.root
                                    }),
                                    x.jsx(wn, {
                                        formState: o.formState,
                                        name: "amount",
                                        label: x.jsx(re, {
                                            label: "Demanded amount (label)"
                                        }),
                                        children: x.jsx("input", {
                                            type: "number",
                                            min: 1,
                                            max: n.limit - n.amount,
                                            className: a.input(),
                                            ...o.register("amount")
                                        })
                                    }),
                                    x.jsx(zn, {
                                        iconEnabled: mm,
                                        iconDisabled: CO,
                                        type: "submit",
                                        children: x.jsx(re, {
                                            label: "Submit demand (submit)"
                                        })
                                    })
                                ]
                            })
                        })
                    ]
                }),
                n.limit > 0 ? x.jsx(GT, {
                    variant: {
                        size: "md"
                    },
                    value: 100 * n.amount / n.limit,
                    css: {
                        progress: n.amount >= n.limit ? [
                            "bg-amber-500"
                        ] : void 0
                    }
                }) : null
            ]
        });
    }, uMe = ({ building: t, userId: e, inventory: n, fulltextProps: r, ...i })=>{
        const { locale: s, mapId: o } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsxs(Ca, {
            icon: uh,
            textTitle: x.jsx(re, {
                label: "Inventory (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: o,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory",
                        params: {
                            locale: s,
                            mapId: o,
                            buildingId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...i,
            children: [
                x.jsx(wz, {
                    ...r
                }),
                x.jsx("div", {
                    children: x.jsx(re, {
                        label: "Inventory - storage (label)",
                        css: {
                            base: [
                                "font-bold",
                                "text-slate-500"
                            ]
                        }
                    })
                }),
                n.length > 0 ? n.map((a)=>x.jsx(cMe, {
                        mapId: o,
                        userId: e,
                        inventory: a
                    }, a.id)) : x.jsx("div", {
                    className: mn([
                        "flex",
                        "items-center",
                        "justify-center",
                        "rounded-sm",
                        "border",
                        "border-amber-400",
                        "p-4",
                        "bg-amber-200",
                        "font-bold"
                    ]),
                    children: x.jsx(re, {
                        label: "No inventory storage. (label)"
                    })
                })
            ]
        });
    }, dE = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/inventory")({
        validateSearch: Zr(Y.object({
            fulltext: Y.string().optional()
        })),
        loaderDeps ({ search: { fulltext: t } }) {
            return {
                fulltext: t
            };
        },
        async loader ({ context: { queryClient: t, kysely: e, session: n }, deps: { fulltext: r }, params: { mapId: i, buildingId: s } }) {
            return {
                user: await n(),
                inventory: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        i,
                        "building",
                        s,
                        "inventory",
                        "storage",
                        {
                            fulltext: r
                        }
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (a)=>$s({
                                select: a.selectFrom("Inventory as i").innerJoin("Building_Inventory as bi", (l)=>l.on("bi.buildingId", "=", s).onRef("bi.inventoryId", "=", "i.id")).innerJoin("Resource as r", "r.id", "i.resourceId").leftJoin("Supply as s", (l)=>l.onRef("s.resourceId", "=", "i.resourceId").on("s.buildingId", "=", s)).leftJoin("Demand as d", (l)=>l.onRef("d.resourceId", "=", "i.resourceId").on("d.buildingId", "=", s)).select([
                                    "i.id",
                                    "i.amount",
                                    "i.limit",
                                    "r.name",
                                    "bi.buildingId",
                                    "i.resourceId",
                                    "s.id as supplyId",
                                    "d.id as demandId"
                                ]).where("i.type", "in", [
                                    "storage"
                                ]).orderBy("r.name"),
                                query ({ select: l, where: c }) {
                                    let u = l;
                                    if (c?.fulltext) {
                                        const f = `%${c.fulltext}%`.toLowerCase();
                                        u = u.where((h)=>h.or([
                                                h("r.name", "like", f)
                                            ]));
                                    }
                                    return u;
                                },
                                output: Y.object({
                                    id: Y.string().min(1),
                                    buildingId: Y.string().min(1),
                                    resourceId: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    limit: Y.number().nonnegative(),
                                    name: Y.string().min(1),
                                    supplyId: Y.string().nullish(),
                                    demandId: Y.string().nullish()
                                }),
                                filter: {
                                    fulltext: r
                                }
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { fulltext: e } = dE.useSearch(), n = dE.useNavigate(), { user: r, inventory: i } = dE.useLoaderData();
            return x.jsx(uMe, {
                building: t,
                userId: r.id,
                inventory: i,
                fulltextProps: {
                    value: e,
                    onFulltext (s) {
                        n({
                            search: {
                                fulltext: s
                            }
                        });
                    }
                }
            });
        }
    }), dMe = ({ mapId: t, userId: e, demand: n })=>{
        const r = Vr([
            [
                "GameMap"
            ]
        ]), i = dn({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>l.deleteFrom("Demand").where("id", "=", a).execute());
            },
            async onSuccess () {
                await r();
            }
        }), s = dn({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.max("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c + 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        }), o = dn({
            async mutationFn ({ demandId: a }) {
                return At.transaction().execute(async (l)=>{
                    const { priority: c } = await l.selectFrom("Demand as d").select((u)=>u.fn.min("d.priority").as("priority")).where("d.mapId", "=", t).where("d.userId", "=", e).where("d.id", "!=", a).executeTakeFirstOrThrow();
                    return l.updateTable("Demand").set({
                        priority: c - 1
                    }).where("id", "=", a).execute();
                });
            },
            async onSuccess () {
                await r();
            }
        });
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                n.transport ? [
                    "text-green-600",
                    "bg-green-50",
                    "border-green-400"
                ] : void 0
            ]),
            children: [
                x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        x.jsxs("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: [
                                (n.transport || 0) > 0 ? x.jsx(_n, {
                                    icon: mm
                                }) : x.jsx(_n, {
                                    icon: CO
                                }),
                                x.jsx("div", {
                                    className: "font-bold",
                                    children: n.name
                                })
                            ]
                        }),
                        x.jsxs("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: [
                                x.jsxs(uo, {
                                    css: {
                                        base: n.transport ? [
                                            "bg-green-50",
                                            "border-green-400",
                                            "hover:bg-green-50",
                                            "hover:border-green-400"
                                        ] : void 0
                                    },
                                    children: [
                                        "x",
                                        qn({
                                            number: n.amount
                                        })
                                    ]
                                }),
                                x.jsx(zn, {
                                    iconEnabled: Bi,
                                    loading: i.isPending,
                                    onClick: ()=>{
                                        i.mutate({
                                            demandId: n.id
                                        });
                                    },
                                    variant: {
                                        variant: "danger"
                                    }
                                })
                            ]
                        })
                    ]
                }),
                x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        x.jsx(zn, {
                            iconEnabled: Sz,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    demandId: n.id
                                });
                            },
                            children: x.jsx(re, {
                                label: "Priority up (label)"
                            })
                        }),
                        x.jsx(uo, {
                            css: {
                                base: [
                                    "bg-purple-50",
                                    "border-purple-400",
                                    "text-purple-600"
                                ]
                            },
                            children: n.priority
                        }),
                        x.jsx(zn, {
                            iconEnabled: _z,
                            variant: {
                                variant: "subtle"
                            },
                            loading: s.isPending || o.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    demandId: n.id
                                });
                            },
                            children: x.jsx(re, {
                                label: "Priority down (label)"
                            })
                        })
                    ]
                })
            ]
        });
    }, fMe = ({ userId: t, building: e, demand: n, ...r })=>{
        const { mapId: i, locale: s } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: mm,
            textTitle: x.jsx(re, {
                label: "Demand (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: e.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/demand",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: e.id
                        },
                        search: {
                            zoomToId: e.id
                        },
                        children: e.name
                    })
                ]
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>x.jsx(dMe, {
                    mapId: i,
                    userId: t,
                    demand: o
                }, o.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "This building does not demand anything. (label)"
                })
            })
        });
    }, d$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/demand")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, buildingId: i } }) {
            return {
                user: await n(),
                demand: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "demand",
                        "list"
                    ],
                    queryFn: async ()=>e.transaction().execute(async (o)=>$s({
                                select: o.selectFrom("Demand as d").innerJoin("Building_Inventory as bi", "bi.buildingId", "d.buildingId").innerJoin("Inventory as i", (a)=>a.onRef("i.id", "=", "bi.inventoryId").onRef("i.resourceId", "=", "d.resourceId")).innerJoin("Resource as r", "r.id", "d.resourceId").select([
                                    "d.id",
                                    "r.name",
                                    "d.amount",
                                    "i.limit",
                                    "d.priority",
                                    "i.amount as available",
                                    (a)=>a.selectFrom("Transport as t").select((l)=>l.fn.sum("t.amount").as("transport")).whereRef("t.targetId", "=", "d.buildingId").whereRef("t.resourceId", "=", "d.resourceId").as("transport")
                                ]).where("d.buildingId", "=", i).where("i.type", "=", "storage").where("d.type", "=", "storage").orderBy("r.name", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    amount: Y.number(),
                                    available: Y.number(),
                                    priority: Y.number(),
                                    limit: Y.number(),
                                    transport: Y.number().nullish()
                                })
                            }))
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { user: e, demand: n } = d$.useLoaderData();
            return x.jsx(fMe, {
                userId: e.id,
                building: t,
                demand: n
            });
        }
    }), f$ = ({ requirement: t })=>{
        const e = (t.available || 0) >= t.amount;
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                "hover:bg-slate-100",
                t.passive ? [
                    "border-purple-300",
                    "hover:border-purple-500",
                    "hover:bg-purple-100"
                ] : void 0,
                t.available === void 0 || e ? void 0 : [
                    "border-red-500",
                    "bg-red-50",
                    "hover:bg-red-50",
                    "hover:border-red-600"
                ]
            ]),
            children: [
                x.jsx("div", {
                    className: "font-bold",
                    children: t.name
                }),
                t.available === void 0 ? x.jsxs(uo, {
                    children: [
                        "x",
                        qn({
                            number: t.amount
                        })
                    ]
                }) : x.jsxs(uo, {
                    css: {
                        base: e ? [
                            "bg-green-200",
                            "border-green-500"
                        ] : [
                            "bg-red-200",
                            "border-red-500"
                        ]
                    },
                    children: [
                        x.jsx("div", {
                            className: "font-bold",
                            children: qn({
                                number: t.available
                            })
                        }),
                        x.jsx("div", {
                            children: "/"
                        }),
                        x.jsx("div", {
                            className: "font-light",
                            children: qn({
                                number: t.amount
                            })
                        })
                    ]
                })
            ]
        });
    }, hMe = ({ blueprint: t, requirement: e, ...n })=>x.jsxs(Ca, {
            icon: ii,
            textTitle: x.jsx(re, {
                label: "Building requirements (label)"
            }),
            textSubTitle: t.name,
            ...n,
            children: [
                e.length > 0 ? e.map((r)=>x.jsx(f$, {
                        requirement: r
                    }, r.id)) : x.jsx("div", {
                    className: mn([
                        "flex",
                        "items-center",
                        "justify-center",
                        "rounded-sm",
                        "border",
                        "border-green-400",
                        "p-4",
                        "bg-green-200",
                        "font-bold"
                    ]),
                    children: x.jsx(re, {
                        label: "There are no requirements. (label)"
                    })
                }),
                x.jsx("div", {
                    className: "border-b border-slate-300"
                }),
                x.jsx("div", {
                    className: mn([
                        "w-full",
                        "h-96",
                        "bg-contain",
                        "p-2",
                        `bg-${t.id}`
                    ])
                })
            ]
        }), h$ = Bt("/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId/requirements")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { blueprintId: n } }) {
            return {
                requirement: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        "blueprint",
                        n,
                        "requirements"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (r)=>$s({
                                select: r.selectFrom("Blueprint_Requirement as br").innerJoin("Resource as r", "r.id", "br.resourceId").select([
                                    "br.id",
                                    "r.name",
                                    "br.amount",
                                    "br.passive"
                                ]).where("br.blueprintId", "=", n),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    passive: Nl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { blueprint: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/blueprint/$blueprintId"
            }), { requirement: e } = h$.useLoaderData();
            return x.jsx(hMe, {
                blueprint: t,
                requirement: e
            });
        }
    }), cB = Ri(), pMe = [
        cB({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 22
        }),
        cB({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 10
        })
    ], mMe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: pMe
            }),
            ...e
        }), fE = Bt("/$locale/apps/derivean/game/blueprint/production/$id/resources")({
        validateSearch: Zr(Mi(r_)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Resource",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production_Resource as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = fE.useLoaderData(), { filter: n, cursor: r } = fE.useSearch(), i = fE.useNavigate();
            return x.jsx(x.Fragment, {
                children: x.jsx(mMe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of production resource requirements (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), vN = Ri(), gMe = [
        vN({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Requirement name (label)"
                });
            },
            render ({ value: t }) {
                return t;
            },
            filter: {
                path: "resourceId",
                onFilter ({ data: t, filter: e }) {
                    e.shallow("resourceID", t.resourceId);
                }
            },
            size: 12
        }),
        vN({
            name: "amount",
            header () {
                return x.jsx(re, {
                    label: "Amount (label)"
                });
            },
            render ({ value: t }) {
                return qn({
                    number: t
                });
            },
            size: 10
        }),
        vN({
            name: "passive",
            header () {
                return x.jsx(re, {
                    label: "Passive requirement (label)"
                });
            },
            render ({ value: t }) {
                return x.jsx(WT, {
                    value: t
                });
            },
            size: 10
        })
    ], yMe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: gMe
            }),
            ...e
        }), hE = Bt("/$locale/apps/derivean/game/blueprint/production/$id/requirements")({
        validateSearch: Zr(Mi(n_)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Requirement",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                "bpr.id",
                                "r.name",
                                "bpr.resourceId",
                                "bpr.amount",
                                "bpr.passive"
                            ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpr.id", "=", a.id)), a?.idIn && (l = l.where("bpr.id", "in", a.idIn)), a?.resourceId && (l = l.where("bpr.resourceId", "=", a.resourceId)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                resourceId: Y.string().min(1),
                                amount: Y.number().nonnegative(),
                                passive: Nl()
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = hE.useLoaderData(), { filter: n, cursor: r } = hE.useSearch(), i = hE.useNavigate();
            return x.jsx(x.Fragment, {
                children: x.jsx(yMe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of production requirements (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), vMe = Ri(), xMe = [
        vMe({
            name: "name",
            header () {
                return x.jsx(re, {
                    label: "Required building (label)"
                });
            },
            render ({ data: t, value: e }) {
                const { locale: n } = sn({
                    from: "/$locale"
                });
                return x.jsx(It, {
                    icon: hr,
                    to: "/$locale/apps/derivean/root/blueprint/$id/view",
                    params: {
                        locale: n,
                        id: t.blueprintId
                    },
                    children: e
                });
            },
            size: 22
        })
    ], bMe = ({ table: t, ...e })=>x.jsx(Ti, {
            table: Ci({
                ...t,
                columns: xMe
            }),
            ...e
        }), pE = Bt("/$locale/apps/derivean/game/blueprint/production/$id/dependencies")({
        validateSearch: Zr(Mi(t_)),
        loaderDeps ({ search: { filter: t, cursor: e, sort: n } }) {
            return {
                filter: t,
                cursor: e,
                sort: n
            };
        },
        async loader ({ context: { queryClient: t, kysely: e }, deps: { filter: n, cursor: r }, params: { id: i } }) {
            return t.ensureQueryData({
                queryKey: [
                    "Blueprint_Production_Dependency",
                    "list-count",
                    i,
                    {
                        filter: n,
                        cursor: r
                    }
                ],
                async queryFn () {
                    return e.transaction().execute(async (s)=>Hr({
                            select: s.selectFrom("Blueprint_Production_Dependency as bpd").innerJoin("Blueprint as bl", "bl.id", "bpd.blueprintId").select([
                                "bpd.id",
                                "bl.name",
                                "bpd.blueprintId"
                            ]).where("bpd.blueprintProductionId", "=", i).orderBy("bl.name", "asc"),
                            query ({ select: o, where: a }) {
                                let l = o;
                                return a?.id && (l = l.where("bpd.id", "=", a.id)), a?.idIn && (l = l.where("bpd.id", "in", a.idIn)), l;
                            },
                            output: Y.object({
                                id: Y.string().min(1),
                                name: Y.string().min(1),
                                blueprintId: Y.string().min(1)
                            }),
                            filter: n,
                            cursor: r
                        }));
                }
            });
        },
        component () {
            const { data: t, count: e } = pE.useLoaderData(), { filter: n, cursor: r } = pE.useSearch(), i = pE.useNavigate(), { tva: s } = qr({
                from: "__root__"
            }), o = s().slots;
            return x.jsx("div", {
                className: o.base(),
                children: x.jsx(bMe, {
                    table: {
                        data: t,
                        filter: {
                            value: n,
                            set: Si(i)
                        }
                    },
                    fulltext: {
                        value: n?.fulltext,
                        set: Ei(n?.fulltext, i)
                    },
                    cursor: {
                        count: e,
                        cursor: r,
                        textTotal: x.jsx(re, {
                            label: "Number of dependencies (label)"
                        }),
                        ..._i(i)
                    }
                })
            });
        }
    }), wMe = ({ queue: t, inventory: e })=>{
        const n = e.find((i)=>i.resourceId === t.resourceId), r = n && n.amount + t.amount > n.limit;
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-col",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                "hover:border-slate-300",
                r ? [
                    "border-red-400",
                    "hover:border-red-600"
                ] : void 0
            ]),
            children: [
                x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center justify-between w-full",
                    children: [
                        x.jsx("div", {
                            className: "font-bold",
                            children: t.name
                        }),
                        x.jsx("div", {
                            className: "flex flex-row gap-2 items-center",
                            children: x.jsxs(uo, {
                                children: [
                                    "x",
                                    qn({
                                        number: t.amount
                                    })
                                ]
                            })
                        }),
                        x.jsx(TO, {
                            cycles: t.cycles
                        })
                    ]
                }),
                x.jsx(GT, {
                    css: {
                        progress: r ? [
                            "bg-red-500"
                        ] : void 0
                    },
                    value: 100 * t.cycle / t.cycles
                })
            ]
        });
    }, _Me = ({ building: t, queue: e, inventory: n, ...r })=>{
        const { mapId: i, locale: s } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: iP,
            textTitle: x.jsx(re, {
                label: "Production queue (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...r,
            children: e.length > 0 ? e.map((o)=>x.jsx(wMe, {
                    queue: o,
                    inventory: n
                }, o.id)) : x.jsxs("div", {
                className: mn([
                    "flex",
                    "flex-col",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: [
                    x.jsx(re, {
                        label: "Production queue is empty. (label)"
                    }),
                    x.jsx(It, {
                        icon: iP,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        },
                        children: x.jsx(re, {
                            label: "Plan queue (label)"
                        })
                    })
                ]
            })
        });
    }, p$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/queue")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r } }) {
            return {
                queue: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        "queue"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>$s({
                                select: i.selectFrom("Production as p").innerJoin("Blueprint_Production as bp", "bp.id", "p.blueprintProductionId").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "p.id",
                                    "r.name",
                                    "bp.resourceId",
                                    "p.cycle",
                                    "bp.amount",
                                    "bp.cycles"
                                ]).where("p.buildingId", "=", r),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    resourceId: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    cycle: Y.number().int().nonnegative(),
                                    cycles: Y.number().int().nonnegative()
                                })
                            }));
                    }
                }),
                inventory: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "inventory",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (i)=>$s({
                                select: i.selectFrom("Inventory as i").innerJoin("Resource as r", "r.id", "i.resourceId").select([
                                    "i.id",
                                    "i.resourceId",
                                    "i.amount",
                                    "i.limit",
                                    "r.name"
                                ]).where("i.id", "in", i.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", r)).orderBy("r.name"),
                                query ({ select: s, where: o }) {
                                    let a = s;
                                    if (o?.fulltext) {
                                        const l = `%${o.fulltext}%`.toLowerCase();
                                        a = a.where((c)=>c.or([
                                                c("r.name", "like", l)
                                            ]));
                                    }
                                    return a;
                                },
                                output: Y.object({
                                    id: Y.string().min(1),
                                    resourceId: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    limit: Y.number().nonnegative(),
                                    name: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { queue: e, inventory: n } = p$.useLoaderData();
            return x.jsx(_Me, {
                building: t,
                queue: e,
                inventory: n
            });
        }
    }), uB = "icon-[tabler--basket]", SMe = "icon-[oui--refresh]", EMe = ({ building: t, production: e })=>{
        const { mapId: n, locale: r } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        }), i = Vr([
            [
                "GameMap"
            ]
        ]), s = dn({
            async mutationFn ({ blueprintProductionId: c, buildingId: u }) {
                return At.transaction().execute(async (f)=>f.updateTable("Building").set({
                        productionId: c
                    }).where("id", "=", u).execute());
            },
            async onSuccess () {
                await i();
            }
        }), o = dn({
            async mutationFn ({ buildingId: c }) {
                return At.transaction().execute(async (u)=>u.updateTable("Building").set({
                        productionId: null
                    }).where("id", "=", c).execute());
            },
            async onSuccess () {
                await i();
            }
        }), a = dn({
            async mutationFn ({ blueprintProductionId: c, buildingId: u }) {
                return At.transaction().execute(async (f)=>f.updateTable("Building").set({
                        recurringProductionId: c
                    }).where("id", "=", u).execute());
            },
            async onSuccess () {
                await i();
            }
        }), l = dn({
            async mutationFn ({ buildingId: c }) {
                return At.transaction().execute(async (u)=>u.updateTable("Building").set({
                        recurringProductionId: null
                    }).where("id", "=", c).execute());
            },
            async onSuccess () {
                await i();
            }
        });
        return x.jsxs("div", {
            className: mn([
                "flex",
                "flex-row",
                "gap-2",
                "items-center",
                "justify-between",
                "border",
                "p-4",
                "rounded-sm",
                "border-slate-200",
                e.withAvailableResources ? [
                    "bg-green-50",
                    "border-green-500"
                ] : [
                    "bg-red-50",
                    "border-red-500"
                ]
            ]),
            children: [
                x.jsxs("div", {
                    className: "flex flex-row gap-2 items-center",
                    children: [
                        t.productionId === e.id ? x.jsx(zn, {
                            iconEnabled: uB,
                            loading: o.isPending,
                            onClick: ()=>{
                                o.mutate({
                                    buildingId: t.id
                                });
                            }
                        }) : x.jsx(zn, {
                            iconEnabled: "icon-[solar--play-outline]",
                            loading: s.isPending,
                            onClick: ()=>{
                                s.mutate({
                                    blueprintProductionId: e.id,
                                    buildingId: t.id
                                });
                            }
                        }),
                        t.recurringProductionId === e.id ? x.jsx(zn, {
                            iconEnabled: uB,
                            loading: l.isPending,
                            onClick: ()=>{
                                l.mutate({
                                    buildingId: t.id
                                });
                            }
                        }) : x.jsx(zn, {
                            iconEnabled: SMe,
                            loading: a.isPending,
                            onClick: ()=>{
                                a.mutate({
                                    blueprintProductionId: e.id,
                                    buildingId: t.id
                                });
                            }
                        }),
                        x.jsxs(It, {
                            to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId/requirements",
                            params: {
                                locale: r,
                                mapId: n,
                                buildingId: t.id,
                                productionId: e.id
                            },
                            children: [
                                e.name,
                                x.jsxs(uo, {
                                    children: [
                                        "x",
                                        qn({
                                            number: e.amount
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                x.jsx(TO, {
                    cycles: e.cycles
                })
            ]
        });
    }, MMe = ({ building: t, production: e, ...n })=>{
        const { mapId: r, locale: i } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: Rl,
            textTitle: x.jsx(re, {
                label: "Building production (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/view",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: i,
                            mapId: r,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    })
                ]
            }),
            ...n,
            children: e.length > 0 ? e.map((s)=>x.jsx(EMe, {
                    building: t,
                    production: s
                }, s.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-amber-400",
                    "p-4",
                    "bg-amber-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "This building does not produce anything. (label)"
                })
            })
        });
    }, m$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list")({
        async loader ({ context: { queryClient: t, kysely: e, session: n }, params: { mapId: r, buildingId: i } }) {
            const s = await n();
            return {
                production: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        r,
                        "building",
                        i,
                        "production",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (o)=>$s({
                                select: o.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "bp.id",
                                    "r.name",
                                    "bp.amount",
                                    "bp.cycles",
                                    (a)=>a.case().when(a.not(a.exists(a.selectFrom("Blueprint_Production_Requirement as bpr").select(a.lit(1).as("one")).whereRef("bpr.blueprintProductionId", "=", "bp.id").where((l)=>l.not(l.exists(l.selectFrom("Inventory as i").select(l.lit(1).as("one")).where("i.id", "in", l.selectFrom("Building_Inventory").select("inventoryId").where("buildingId", "=", i)).where("i.type", "in", [
                                                "storage"
                                            ]).whereRef("i.resourceId", "=", "bpr.resourceId").whereRef("i.amount", ">=", "bpr.amount"))))))).then(a.lit(!0)).else(a.lit(!1)).end().as("withAvailableResources")
                                ]).where("bp.blueprintId", "=", o.selectFrom("Building as b").select("b.blueprintId").where("b.id", "=", i)).where((a)=>a.not(a.exists(a.selectFrom("Blueprint_Production_Dependency as bpd").select("bpd.blueprintProductionId").whereRef("bpd.blueprintProductionId", "=", "bp.id").where((l)=>l.not(l.exists(l.selectFrom("Building as b").select("b.blueprintId").where("b.userId", "=", s.id).where("b.constructionId", "is", null).whereRef("b.blueprintId", "=", "bpd.blueprintId"))))))).where((a)=>a.not(a.exists(a.selectFrom("Blueprint_Production_Resource as bpr").select("bpr.blueprintProductionId").whereRef("bpr.blueprintProductionId", "=", "bp.id").where((l)=>l.not(l.exists(l.selectFrom("Inventory as i").select("i.resourceId").where("i.id", "in", l.selectFrom("Building_Inventory").select("inventoryId").where("buildingId", "=", i)).whereRef("i.resourceId", "=", "bpr.resourceId").whereRef("i.amount", ">=", "bpr.amount"))))))).orderBy("r.name"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    cycles: Y.number().int().nonnegative(),
                                    withAvailableResources: Nl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { production: e } = m$.useLoaderData();
            return x.jsx(MMe, {
                building: t,
                production: e
            });
        }
    }), TMe = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r, productionId: i } }) {
            return {
                production: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        i,
                        "fetch"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>Mc({
                                select: s.selectFrom("Blueprint_Production as bp").innerJoin("Resource as r", "r.id", "bp.resourceId").select([
                                    "bp.id",
                                    "bp.amount",
                                    "r.name"
                                ]).where("bp.id", "=", i),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    name: Y.string().min(1)
                                })
                            }));
                    }
                })
            };
        }
    }), CMe = ({ building: t, production: e, requirement: n, ...r })=>{
        const { mapId: i, locale: s } = sn({
            from: "/$locale/apps/derivean/map/$mapId"
        });
        return x.jsx(Ca, {
            icon: ii,
            textTitle: x.jsx(re, {
                label: "Production requirements (label)"
            }),
            textSubTitle: x.jsxs(x.Fragment, {
                children: [
                    x.jsx(It, {
                        icon: Ja,
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        }
                    }),
                    x.jsx(It, {
                        to: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/list",
                        params: {
                            locale: s,
                            mapId: i,
                            buildingId: t.id
                        },
                        search: {
                            zoomToId: t.id
                        },
                        children: t.name
                    }),
                    x.jsx("div", {
                        children: e.name
                    })
                ]
            }),
            ...r,
            children: n.length > 0 ? n.map((o)=>x.jsx(f$, {
                    requirement: o
                }, o.id)) : x.jsx("div", {
                className: mn([
                    "flex",
                    "items-center",
                    "justify-center",
                    "rounded-sm",
                    "border",
                    "border-green-400",
                    "p-4",
                    "bg-green-200",
                    "font-bold"
                ]),
                children: x.jsx(re, {
                    label: "There are no requirements. (label)"
                })
            })
        });
    }, g$ = Bt("/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId/requirements")({
        async loader ({ context: { queryClient: t, kysely: e }, params: { mapId: n, buildingId: r, productionId: i } }) {
            return {
                requirement: await t.ensureQueryData({
                    queryKey: [
                        "GameMap",
                        n,
                        "building",
                        r,
                        "production",
                        i,
                        "requirement",
                        "list"
                    ],
                    async queryFn () {
                        return e.transaction().execute(async (s)=>$s({
                                select: s.selectFrom("Blueprint_Production_Requirement as bpr").innerJoin("Resource as r", "r.id", "bpr.resourceId").select([
                                    "bpr.id",
                                    "r.name",
                                    "bpr.amount",
                                    "bpr.passive",
                                    (o)=>o.selectFrom("Inventory as i").select([
                                            "i.amount"
                                        ]).where("i.id", "in", s.selectFrom("Building_Inventory as bi").select("bi.inventoryId").where("bi.buildingId", "=", r)).whereRef("i.resourceId", "=", "bpr.resourceId").where("i.type", "=", "storage").orderBy("i.amount", "desc").limit(1).as("available")
                                ]).where("bpr.blueprintProductionId", "=", i).orderBy("r.name", "asc"),
                                output: Y.object({
                                    id: Y.string().min(1),
                                    name: Y.string().min(1),
                                    amount: Y.number().nonnegative(),
                                    available: Y.number().nonnegative().nullish(),
                                    passive: Nl()
                                })
                            }));
                    }
                })
            };
        },
        component () {
            const { building: t } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId"
            }), { production: e } = es({
                from: "/$locale/apps/derivean/map/$mapId/building/$buildingId/production/$productionId"
            }), { requirement: n } = g$.useLoaderData();
            return x.jsx(CMe, {
                building: t,
                production: e,
                requirement: n
            });
        }
    }), RO = Ooe.update({
        id: "/$locale",
        path: "/$locale",
        getParentRoute: ()=>lk
    }), RMe = Foe.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>lk
    }), IMe = joe.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>RO
    }), Ph = Uoe.update({
        id: "/apps/derivean",
        path: "/apps/derivean",
        getParentRoute: ()=>RO
    }), rl = Woe.update({
        id: "/root",
        path: "/root",
        getParentRoute: ()=>Ph
    }), y$ = qoe.update({
        id: "/map",
        path: "/map",
        getParentRoute: ()=>Ph
    }), i_ = Hoe.update({
        id: "/game",
        path: "/game",
        getParentRoute: ()=>Ph
    }), AMe = Yoe.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>rl
    }), NMe = S7.update({
        id: "/",
        path: "/",
        getParentRoute: ()=>i_
    }), PMe = D3.update({
        id: "/editor",
        path: "/editor",
        getParentRoute: ()=>rl
    }), kMe = Cme.update({
        id: "/public/register",
        path: "/public/register",
        getParentRoute: ()=>Ph
    }), OMe = Rme.update({
        id: "/public/logout",
        path: "/public/logout",
        getParentRoute: ()=>Ph
    }), DMe = Pme.update({
        id: "/public/login",
        path: "/public/login",
        getParentRoute: ()=>Ph
    }), kh = BH.update({
        id: "/$mapId",
        path: "/$mapId",
        getParentRoute: ()=>y$
    }), LMe = UH.update({
        id: "/db/schema",
        path: "/db/schema",
        getParentRoute: ()=>Ph
    }), FMe = eE.update({
        id: "/user/list",
        path: "/user/list",
        getParentRoute: ()=>rl
    }), IO = zH.update({
        id: "/user/$id",
        path: "/user/$id",
        getParentRoute: ()=>rl
    }), jMe = tE.update({
        id: "/tag/list",
        path: "/tag/list",
        getParentRoute: ()=>rl
    }), BMe = nE.update({
        id: "/resource/list",
        path: "/resource/list",
        getParentRoute: ()=>rl
    }), v$ = HH.update({
        id: "/resource/$id",
        path: "/resource/$id",
        getParentRoute: ()=>rl
    }), UMe = rE.update({
        id: "/region/list",
        path: "/region/list",
        getParentRoute: ()=>rl
    }), x$ = PSe.update({
        id: "/region/$id",
        path: "/region/$id",
        getParentRoute: ()=>rl
    }), zMe = iE.update({
        id: "/blueprint/list",
        path: "/blueprint/list",
        getParentRoute: ()=>rl
    }), Oh = YH.update({
        id: "/blueprint/$id",
        path: "/blueprint/$id",
        getParentRoute: ()=>rl
    }), VMe = BSe.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>kh
    }), WMe = sE.update({
        id: "/blueprint/list",
        path: "/blueprint/list",
        getParentRoute: ()=>i_
    }), Gy = ZH.update({
        id: "/blueprint/$id",
        path: "/blueprint/$id",
        getParentRoute: ()=>i_
    }), qMe = qSe.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>IO
    }), HMe = HSe.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>v$
    }), $Me = $Se.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>x$
    }), $2 = JH.update({
        id: "/blueprint/production/$id",
        path: "/blueprint/production/$id",
        getParentRoute: ()=>rl
    }), GMe = QH.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>Oh
    }), XMe = Cx.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>Oh
    }), KMe = Rx.update({
        id: "/production",
        path: "/production",
        getParentRoute: ()=>Oh
    }), YMe = Ix.update({
        id: "/inventory",
        path: "/inventory",
        getParentRoute: ()=>Oh
    }), ZMe = e$.update({
        id: "/edit",
        path: "/edit",
        getParentRoute: ()=>Oh
    }), JMe = Ax.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>Oh
    }), QMe = Nx.update({
        id: "/conflicts",
        path: "/conflicts",
        getParentRoute: ()=>Oh
    }), eTe = t$.update({
        id: "/land/list",
        path: "/land/list",
        getParentRoute: ()=>kh
    }), b$ = vEe.update({
        id: "/land/$landId",
        path: "/land/$landId",
        getParentRoute: ()=>kh
    }), tTe = n$.update({
        id: "/building/list",
        path: "/building/list",
        getParentRoute: ()=>kh
    }), bu = wEe.update({
        id: "/building/$buildingId",
        path: "/building/$buildingId",
        getParentRoute: ()=>kh
    }), w$ = _Ee.update({
        id: "/blueprint/$blueprintId",
        path: "/blueprint/$blueprintId",
        getParentRoute: ()=>kh
    }), G2 = r$.update({
        id: "/blueprint/production/$id",
        path: "/blueprint/production/$id",
        getParentRoute: ()=>i_
    }), nTe = TEe.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>Gy
    }), rTe = oE.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>Gy
    }), iTe = aE.update({
        id: "/production",
        path: "/production",
        getParentRoute: ()=>Gy
    }), sTe = lE.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>Gy
    }), oTe = cE.update({
        id: "/conflicts",
        path: "/conflicts",
        getParentRoute: ()=>Gy
    }), aTe = uE.update({
        id: "/building/list",
        path: "/building/list",
        getParentRoute: ()=>IO
    }), lTe = Px.update({
        id: "/resources",
        path: "/resources",
        getParentRoute: ()=>$2
    }), cTe = kx.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>$2
    }), uTe = Ox.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>$2
    }), dTe = XEe.update({
        id: "/road/$roadId/view",
        path: "/road/$roadId/view",
        getParentRoute: ()=>kh
    }), fTe = s$.update({
        id: "/construction",
        path: "/construction",
        getParentRoute: ()=>b$
    }), hTe = a$.update({
        id: "/view",
        path: "/view",
        getParentRoute: ()=>bu
    }), pTe = l$.update({
        id: "/transport",
        path: "/transport",
        getParentRoute: ()=>bu
    }), mTe = c$.update({
        id: "/supply",
        path: "/supply",
        getParentRoute: ()=>bu
    }), gTe = u$.update({
        id: "/link",
        path: "/link",
        getParentRoute: ()=>bu
    }), yTe = dE.update({
        id: "/inventory",
        path: "/inventory",
        getParentRoute: ()=>bu
    }), vTe = d$.update({
        id: "/demand",
        path: "/demand",
        getParentRoute: ()=>bu
    }), xTe = h$.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>w$
    }), bTe = fE.update({
        id: "/resources",
        path: "/resources",
        getParentRoute: ()=>G2
    }), wTe = hE.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>G2
    }), _Te = pE.update({
        id: "/dependencies",
        path: "/dependencies",
        getParentRoute: ()=>G2
    }), STe = p$.update({
        id: "/production/queue",
        path: "/production/queue",
        getParentRoute: ()=>bu
    }), ETe = m$.update({
        id: "/production/list",
        path: "/production/list",
        getParentRoute: ()=>bu
    }), _$ = TMe.update({
        id: "/production/$productionId",
        path: "/production/$productionId",
        getParentRoute: ()=>bu
    }), MTe = g$.update({
        id: "/requirements",
        path: "/requirements",
        getParentRoute: ()=>_$
    }), TTe = {
        LocaleAppsDeriveanGameBlueprintIdConflictsRoute: oTe,
        LocaleAppsDeriveanGameBlueprintIdDependenciesRoute: sTe,
        LocaleAppsDeriveanGameBlueprintIdProductionRoute: iTe,
        LocaleAppsDeriveanGameBlueprintIdRequirementsRoute: rTe,
        LocaleAppsDeriveanGameBlueprintIdViewRoute: nTe
    }, CTe = Gy._addFileChildren(TTe), RTe = {
        LocaleAppsDeriveanGameBlueprintProductionIdDependenciesRoute: _Te,
        LocaleAppsDeriveanGameBlueprintProductionIdRequirementsRoute: wTe,
        LocaleAppsDeriveanGameBlueprintProductionIdResourcesRoute: bTe
    }, ITe = G2._addFileChildren(RTe), ATe = {
        LocaleAppsDeriveanGameIndexRoute: NMe,
        LocaleAppsDeriveanGameBlueprintIdRoute: CTe,
        LocaleAppsDeriveanGameBlueprintListRoute: WMe,
        LocaleAppsDeriveanGameBlueprintProductionIdRoute: ITe
    }, NTe = i_._addFileChildren(ATe), PTe = {
        LocaleAppsDeriveanMapMapIdBlueprintBlueprintIdRequirementsRoute: xTe
    }, kTe = w$._addFileChildren(PTe), OTe = {
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionProductionIdRequirementsRoute: MTe
    }, DTe = _$._addFileChildren(OTe), LTe = {
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdDemandRoute: vTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdInventoryRoute: yTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdLinkRoute: gTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdSupplyRoute: mTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdTransportRoute: pTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdViewRoute: hTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionProductionIdRoute: DTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionListRoute: ETe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdProductionQueueRoute: STe
    }, FTe = bu._addFileChildren(LTe), jTe = {
        LocaleAppsDeriveanMapMapIdLandLandIdConstructionRoute: fTe
    }, BTe = b$._addFileChildren(jTe), UTe = {
        LocaleAppsDeriveanMapMapIdViewRoute: VMe,
        LocaleAppsDeriveanMapMapIdBlueprintBlueprintIdRoute: kTe,
        LocaleAppsDeriveanMapMapIdBuildingBuildingIdRoute: FTe,
        LocaleAppsDeriveanMapMapIdBuildingListRoute: tTe,
        LocaleAppsDeriveanMapMapIdLandLandIdRoute: BTe,
        LocaleAppsDeriveanMapMapIdLandListRoute: eTe,
        LocaleAppsDeriveanMapMapIdRoadRoadIdViewRoute: dTe
    }, zTe = kh._addFileChildren(UTe), VTe = {
        LocaleAppsDeriveanMapMapIdRoute: zTe
    }, WTe = y$._addFileChildren(VTe), qTe = {
        LocaleAppsDeriveanRootBlueprintIdConflictsRoute: QMe,
        LocaleAppsDeriveanRootBlueprintIdDependenciesRoute: JMe,
        LocaleAppsDeriveanRootBlueprintIdEditRoute: ZMe,
        LocaleAppsDeriveanRootBlueprintIdInventoryRoute: YMe,
        LocaleAppsDeriveanRootBlueprintIdProductionRoute: KMe,
        LocaleAppsDeriveanRootBlueprintIdRequirementsRoute: XMe,
        LocaleAppsDeriveanRootBlueprintIdViewRoute: GMe
    }, HTe = Oh._addFileChildren(qTe), $Te = {
        LocaleAppsDeriveanRootRegionIdViewRoute: $Me
    }, GTe = x$._addFileChildren($Te), XTe = {
        LocaleAppsDeriveanRootResourceIdViewRoute: HMe
    }, KTe = v$._addFileChildren(XTe), YTe = {
        LocaleAppsDeriveanRootUserIdViewRoute: qMe,
        LocaleAppsDeriveanRootUserIdBuildingListRoute: aTe
    }, ZTe = IO._addFileChildren(YTe), JTe = {
        LocaleAppsDeriveanRootBlueprintProductionIdDependenciesRoute: uTe,
        LocaleAppsDeriveanRootBlueprintProductionIdRequirementsRoute: cTe,
        LocaleAppsDeriveanRootBlueprintProductionIdResourcesRoute: lTe
    }, QTe = $2._addFileChildren(JTe), e2e = {
        LocaleAppsDeriveanRootEditorRoute: PMe,
        LocaleAppsDeriveanRootIndexRoute: AMe,
        LocaleAppsDeriveanRootBlueprintIdRoute: HTe,
        LocaleAppsDeriveanRootBlueprintListRoute: zMe,
        LocaleAppsDeriveanRootRegionIdRoute: GTe,
        LocaleAppsDeriveanRootRegionListRoute: UMe,
        LocaleAppsDeriveanRootResourceIdRoute: KTe,
        LocaleAppsDeriveanRootResourceListRoute: BMe,
        LocaleAppsDeriveanRootTagListRoute: jMe,
        LocaleAppsDeriveanRootUserIdRoute: ZTe,
        LocaleAppsDeriveanRootUserListRoute: FMe,
        LocaleAppsDeriveanRootBlueprintProductionIdRoute: QTe
    }, t2e = rl._addFileChildren(e2e), n2e = {
        LocaleAppsDeriveanGameRoute: NTe,
        LocaleAppsDeriveanMapRoute: WTe,
        LocaleAppsDeriveanRootRoute: t2e,
        LocaleAppsDeriveanDbSchemaRoute: LMe,
        LocaleAppsDeriveanPublicLoginRoute: DMe,
        LocaleAppsDeriveanPublicLogoutRoute: OMe,
        LocaleAppsDeriveanPublicRegisterRoute: kMe
    }, r2e = Ph._addFileChildren(n2e), i2e = {
        LocaleIndexRoute: IMe,
        LocaleAppsDeriveanRoute: r2e
    }, s2e = RO._addFileChildren(i2e), o2e = {
        IndexRoute: RMe,
        LocaleRoute: s2e
    }, a2e = lk._addFileChildren(o2e)._addFileTypes(), S$ = new pG({
        defaultOptions: {
            queries: {
                placeholderData: tG
            }
        }
    }), l2e = jX({
        routeTree: a2e,
        context: {
            queryClient: S$,
            tva: bie,
            async session () {
                return Aw.parse(null);
            },
            kysely: At
        },
        scrollRestoration: !0,
        defaultPendingComponent: foe,
        defaultPreload: "intent",
        defaultPreloadStaleTime: 0,
        defaultPendingMinMs: 200
    }), dB = document.getElementById("app");
    pZ({
        limit: {
            maxRequests: 10,
            perMilliseconds: 100
        }
    });
    dB.innerHTML || koe.createRoot(dB).render(x.jsx(J.StrictMode, {
        children: x.jsx(bG, {
            client: S$,
            children: x.jsx(WX, {
                router: l2e
            })
        })
    }));
})();
