async function B(o,i){let r;if(o instanceof Blob?r=o.stream():r=o,r instanceof ReadableStream&&i){const e=r.getReader();switch(i){case"callback":return async()=>(await e.read()).value;case"buffer":const t=[];let a=!1;for(;!a;){const u=await e.read();u.value&&t.push(u.value),a=u.done}const n=t.reduce((u,M)=>u+M.length,0),c=new Uint8Array(n);let h=0;return t.forEach(u=>{c.set(u,h),h+=u.length}),c}}else return r}function K(o){const i=o.split(/[\\/]/).filter(t=>t!==""),r=i.pop();if(!r)throw new Error("Database path is invalid.");const s=["journal","wal","shm"].map(t=>`${r}-${t}`);return{directories:i,fileName:r,tempFileNames:s,getDirectoryHandle:async()=>{let t=await navigator.storage.getDirectory();for(let a of i)t=await t.getDirectoryHandle(a);return t}}}class C{constructor(i){Object.defineProperty(this,"sqlite3InitModule",{enumerable:!0,configurable:!0,writable:!0,value:i}),Object.defineProperty(this,"sqlite3",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"db",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"config",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"pointers",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"storageType",{enumerable:!0,configurable:!0,writable:!0,value:"memory"})}async init(i){const{databasePath:r}=i,s=this.getFlags(i);if(!this.sqlite3InitModule){const{default:e}=await import("./index-itAQ-X7t.js");this.sqlite3InitModule=e}this.sqlite3||(this.sqlite3=await this.sqlite3InitModule()),this.db&&await this.destroy(),this.db=new this.sqlite3.oo1.DB(r,s),this.config=i}async exec(i){if(!this.db)throw new Error("Driver not initialized");return this.execOnDb(this.db,i)}async execBatch(i){if(!this.db)throw new Error("Driver not initialized");const r=[];return this.db.transaction(s=>{for(let e of i){const t=this.execOnDb(s,e);r.push(t)}}),r}async isDatabasePersisted(){return!1}async getDatabaseSizeBytes(){const r=(await this.exec({sql:`SELECT page_count * page_size AS size 
				FROM pragma_page_count(), pragma_page_size()`,method:"get"}))?.rows?.[0];if(typeof r!="number")throw new Error("Failed to query database size");return r}async createFunction(i){if(!this.db)throw new Error("Driver not initialized");switch(i.type){case"callback":case"scalar":this.db.createFunction({name:i.name,xFunc:(r,...s)=>i.func(...s),arity:-1});break;case"aggregate":this.db.createFunction({name:i.name,xStep:(r,...s)=>i.func.step(...s),xFinal:(r,...s)=>i.func.final(...s),arity:-1});break}}async import(i){if(!this.sqlite3||!this.db||!this.config)throw new Error("Driver not initialized");const r=await B(i,"buffer"),s=this.sqlite3.wasm.allocFromTypedArray(r);this.pointers.push(s);const e=this.sqlite3.capi.sqlite3_deserialize(this.db,"main",s,r.byteLength,r.byteLength,this.config.readOnly?this.sqlite3.capi.SQLITE_DESERIALIZE_READONLY:this.sqlite3.capi.SQLITE_DESERIALIZE_RESIZEABLE);this.db.checkRc(e)}async export(){if(!this.sqlite3||!this.db)throw new Error("Driver not initialized");return{name:"database.sqlite3",data:this.sqlite3.capi.sqlite3_js_db_export(this.db)}}async clear(){}async destroy(){this.closeDb(),this.pointers.forEach(i=>this.sqlite3?.wasm.dealloc(i)),this.pointers=[]}getFlags(i){const{readOnly:r,verbose:s}=i;return[r===!0?"r":"cw",s===!0?"t":""].join("")}execOnDb(i,r){const s={rows:[],columns:[]},e=i.exec({sql:r.sql,bind:r.params,returnValue:"resultRows",rowMode:"array",columnNames:s.columns});switch(r.method){case"run":break;case"get":s.rows=e[0]??[];break;case"all":default:s.rows=e;break}return s}closeDb(){this.db&&(this.db.close(),this.db=void 0)}}class Q extends C{constructor(){super(...arguments),Object.defineProperty(this,"storageType",{enumerable:!0,configurable:!0,writable:!0,value:"opfs"})}async init(i){const{databasePath:r}=i,s=this.getFlags(i);if(!r)throw new Error("No databasePath specified");if(!this.sqlite3InitModule){const{default:e}=await import("./index-itAQ-X7t.js");this.sqlite3InitModule=e}if(this.sqlite3||(this.sqlite3=await this.sqlite3InitModule()),!("opfs"in this.sqlite3))throw new Error("OPFS not available");this.db&&await this.destroy(),this.db=new this.sqlite3.oo1.OpfsDb(r,s),this.config=i}async isDatabasePersisted(){return navigator.storage?.persisted()}async import(i){if(!this.sqlite3||!this.config?.databasePath)throw new Error("Driver not initialized");await this.destroy();const r=await B(i,"callback");await this.sqlite3.oo1.OpfsDb.importDb(this.config.databasePath,r)}async export(){if(!this.db||!this.config?.databasePath)throw new Error("Driver not initialized");let i,r;const s=K(this.config.databasePath),{directories:e,getDirectoryHandle:t}=s;i=s.fileName;const a=`backup-${Date.now()}--${i}`,n=`${e.join("/")}/${a}`;this.db.exec({sql:"VACUUM INTO ?",bind:[n]});const c=await t();return r=await(await(await c.getFileHandle(a)).getFile()).arrayBuffer(),await c.removeEntry(a),{name:i,data:r}}async clear(){if(!this.config?.databasePath)throw new Error("Driver not initialized");await this.destroy();const{getDirectoryHandle:i,fileName:r,tempFileNames:s}=K(this.config.databasePath),e=await i(),t=[r,...s];await Promise.all(t.map(async a=>e.removeEntry(a).catch(n=>{if(!(n instanceof DOMException&&n.name==="NotFoundError"))throw n})))}async destroy(){this.closeDb()}}const A="function",P="64e10b34-2bf7-4616-9668-f99de5aa046e",G="get",Y="has",J="set",{isArray:D}=Array;let{SharedArrayBuffer:x,window:Z}=globalThis,{notify:$,wait:R,waitAsync:O}=Atomics,H=null;O||(O=o=>({value:new Promise(i=>{let r=new Worker("data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))");r.onmessage=i,r.postMessage(o)})}));try{new x(4)}catch{x=ArrayBuffer;const i=new WeakMap;if(Z){const r=new Map,{prototype:{postMessage:s}}=Worker,e=t=>{const a=t.data?.[P];if(!D(a)){t.stopImmediatePropagation();const{id:n,sb:c}=a;r.get(n)(c)}};H=function(t,...a){const n=t?.[P];if(D(n)){const[c,h]=n;i.set(h,c),this.addEventListener("message",e)}return s.call(this,t,...a)},O=t=>({value:new Promise(a=>{r.set(i.get(t),a)}).then(a=>{r.delete(i.get(t)),i.delete(t);for(let n=0;n<a.length;n++)t[n]=a[n];return"ok"})})}else{const r=(s,e)=>({[P]:{id:s,sb:e}});$=s=>{postMessage(r(i.get(s),s))},addEventListener("message",s=>{const e=s.data?.[P];if(D(e)){const[t,a]=e;i.set(a,t)}})}}/*! (c) Andrea Giammarchi - ISC */const{Int32Array:I,Map:N,Uint16Array:j}=globalThis,{BYTES_PER_ELEMENT:z}=I,{BYTES_PER_ELEMENT:V}=j,X=(o,i,r)=>{for(;R(o,0,0,i)==="timed-out";)r()},T=new WeakSet,S=new WeakMap,ee={value:{then:o=>o()}};let te=0;const U=(o,{parse:i=JSON.parse,stringify:r=JSON.stringify,transform:s,interrupt:e}=JSON)=>{if(!S.has(o)){const t=H||o.postMessage,a=(f,...l)=>t.call(o,{[P]:l},{transfer:f}),n=typeof e===A?e:e?.handler,c=e?.delay||42,h=new TextDecoder("utf-16"),u=(f,l)=>f?O(l,0):(n?X(l,c,n):R(l,0),ee);let M=!1;S.set(o,new Proxy(new N,{[Y]:(f,l)=>typeof l=="string"&&!l.startsWith("_"),[G]:(f,l)=>l==="then"?null:(...p)=>{const q=te++;let d=new I(new x(z*2)),w=[];T.has(p.at(-1)||w)&&T.delete(w=p.pop()),a(w,q,d,l,s?p.map(s):p);const g=o!==globalThis;let m=0;return M&&g&&(m=setTimeout(console.warn,1e3,`ðŸ’€ðŸ”’ - Possible deadlock if proxy.${l}(...args) is awaited`)),u(g,d).value.then(()=>{clearTimeout(m);const y=d[1];if(!y)return;const k=V*y;return d=new I(new x(k+k%z)),a([],q,d),u(g,d).value.then(()=>i(h.decode(new j(d.buffer).slice(0,y))))})},[J](f,l,p){const q=typeof p;if(q!==A)throw new Error(`Unable to assign ${l} as ${q}`);if(!f.size){const d=new N;o.addEventListener("message",async w=>{const g=w.data?.[P];if(D(g)){w.stopImmediatePropagation();const[m,y,...k]=g;let E;if(k.length){const[v,_]=k;if(f.has(v)){M=!0;try{const b=await f.get(v)(..._);if(b!==void 0){const F=r(s?s(b):b);d.set(m,F),y[1]=F.length}}catch(b){E=b}finally{M=!1}}else E=new Error(`Unsupported action: ${v}`);y[0]=1}else{const v=d.get(m);d.delete(m);for(let _=new j(y.buffer),b=0;b<v.length;b++)_[b]=v.charCodeAt(b)}if($(y,0),E)throw E}})}return!!f.set(l,p)}}))}return S.get(o)};U.transfer=(...o)=>(T.add(o),o);function L(){let o,i;return{lock:async()=>{for(;o;)await o;o=new Promise(e=>{i=e})},unlock:async()=>{const e=i;o=void 0,i=void 0,e?.()}}}class ie{constructor(i){Object.defineProperty(this,"driver",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"config",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"userFunctions",{enumerable:!0,configurable:!0,writable:!0,value:new Map}),Object.defineProperty(this,"initMutex",{enumerable:!0,configurable:!0,writable:!0,value:L()}),Object.defineProperty(this,"transactionMutex",{enumerable:!0,configurable:!0,writable:!0,value:L()}),Object.defineProperty(this,"transactionKey",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,"proxy",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"reinitChannel",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onmessage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"init",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{if(this.config.databasePath){await this.initMutex.lock();try{try{await this.driver.init(this.config)}catch{console.warn(`Persistence failed, so ${this.config.databasePath} will not be saved. For origin private file system persistence, make sure your web server is configured to use the correct HTTP response headers (See https://sqlocal.dallashoffman.com/guide/setup#cross-origin-isolation).`),this.config.databasePath=":memory:",this.driver=new C,await this.driver.init(this.config)}this.driver.storageType!=="memory"&&(this.reinitChannel=new BroadcastChannel(`_sqlocal_reinit_(${this.config.databasePath})`),this.reinitChannel.onmessage=t=>{const a=t.data;if(this.config.clientKey!==a.clientKey)switch(a.type){case"reinit":this.init(a.reason);break;case"close":this.driver.destroy();break}}),await Promise.all(Array.from(this.userFunctions.values()).map(t=>this.initUserFunction(t))),await this.execInitStatements(),this.emitMessage({type:"event",event:"connect",reason:e})}catch(t){this.emitMessage({type:"error",error:t,queryKey:null}),await this.destroy()}finally{await this.initMutex.unlock()}}}}),Object.defineProperty(this,"postMessage",{enumerable:!0,configurable:!0,writable:!0,value:async(e,t)=>{const a=e instanceof MessageEvent?e.data:e;switch(await this.initMutex.lock(),a.type){case"config":this.editConfig(a);break;case"query":case"batch":case"transaction":this.exec(a);break;case"function":this.createUserFunction(a);break;case"getinfo":this.getDatabaseInfo(a);break;case"import":this.importDb(a);break;case"export":this.exportDb(a);break;case"delete":this.deleteDb(a);break;case"destroy":this.destroy(a);break}await this.initMutex.unlock()}}),Object.defineProperty(this,"emitMessage",{enumerable:!0,configurable:!0,writable:!0,value:(e,t=[])=>{this.onmessage&&this.onmessage(e,t)}}),Object.defineProperty(this,"editConfig",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.config=e.config,this.init("initial")}}),Object.defineProperty(this,"exec",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{try{const t={type:"data",queryKey:e.queryKey,data:[]};switch(e.type){case"query":const a=this.transactionKey!==null&&this.transactionKey===e.transactionKey;try{a||await this.transactionMutex.lock();const n=await this.driver.exec(e);t.data.push(n)}finally{a||await this.transactionMutex.unlock()}break;case"batch":try{await this.transactionMutex.lock();const n=await this.driver.execBatch(e.statements);t.data.push(...n)}finally{await this.transactionMutex.unlock()}break;case"transaction":if(e.action==="begin"&&(await this.transactionMutex.lock(),this.transactionKey=e.transactionKey,await this.driver.exec({sql:"BEGIN"})),(e.action==="commit"||e.action==="rollback")&&this.transactionKey!==null&&this.transactionKey===e.transactionKey){const n=e.action==="commit"?"COMMIT":"ROLLBACK";await this.driver.exec({sql:n}),this.transactionKey=null,await this.transactionMutex.unlock()}break}this.emitMessage(t)}catch(t){this.emitMessage({type:"error",error:t,queryKey:e.queryKey})}}}),Object.defineProperty(this,"execInitStatements",{enumerable:!0,configurable:!0,writable:!0,value:async()=>{if(this.config.onInitStatements)for(let e of this.config.onInitStatements)await this.driver.exec(e)}}),Object.defineProperty(this,"getDatabaseInfo",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{try{this.emitMessage({type:"info",queryKey:e.queryKey,info:{databasePath:this.config.databasePath,storageType:this.driver.storageType,databaseSizeBytes:await this.driver.getDatabaseSizeBytes(),persisted:await this.driver.isDatabasePersisted()}})}catch(t){this.emitMessage({type:"error",queryKey:e.queryKey,error:t})}}}),Object.defineProperty(this,"createUserFunction",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{functionName:t,functionType:a,queryKey:n}=e;let c;if(this.userFunctions.has(t)){this.emitMessage({type:"error",error:new Error(`A user-defined function with the name "${t}" has already been created for this SQLocal instance.`),queryKey:n});return}switch(a){case"callback":c={type:a,name:t,func:(...h)=>{this.emitMessage({type:"callback",name:t,args:h})}};break;case"scalar":c={type:a,name:t,func:this.proxy[`_sqlocal_func_${t}`]};break;case"aggregate":c={type:a,name:t,func:{step:this.proxy[`_sqlocal_func_${t}_step`],final:this.proxy[`_sqlocal_func_${t}_final`]}};break}try{await this.initUserFunction(c),this.emitMessage({type:"success",queryKey:n})}catch(h){this.emitMessage({type:"error",error:h,queryKey:n})}}}),Object.defineProperty(this,"initUserFunction",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{await this.driver.createFunction(e),this.userFunctions.set(e.name,e)}}),Object.defineProperty(this,"importDb",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{queryKey:t,database:a}=e;let n=!1;try{await this.driver.import(a),this.driver.storageType==="memory"&&await this.execInitStatements()}catch(c){this.emitMessage({type:"error",error:c,queryKey:t}),n=!0}finally{this.driver.storageType!=="memory"&&await this.init("overwrite")}n||this.emitMessage({type:"success",queryKey:t})}}),Object.defineProperty(this,"exportDb",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{queryKey:t}=e;try{const{name:a,data:n}=await this.driver.export();this.emitMessage({type:"buffer",queryKey:t,bufferName:a,buffer:n},[n])}catch(a){this.emitMessage({type:"error",error:a,queryKey:t})}}}),Object.defineProperty(this,"deleteDb",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{queryKey:t}=e;let a=!1;try{await this.driver.clear()}catch(n){this.emitMessage({type:"error",error:n,queryKey:t}),a=!0}finally{await this.init("delete")}a||this.emitMessage({type:"success",queryKey:t})}}),Object.defineProperty(this,"destroy",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{await this.driver.exec({sql:"PRAGMA optimize"}),await this.driver.destroy(),this.reinitChannel&&(this.reinitChannel.close(),this.reinitChannel=void 0),e&&this.emitMessage({type:"success",queryKey:e.queryKey})}});const s=typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope?U(globalThis):globalThis;this.proxy=s,this.driver=i}}const ae=new Q,W=new ie(ae);self.onmessage=o=>{W.postMessage(o)};W.onmessage=(o,i)=>{self.postMessage(o,i)};
